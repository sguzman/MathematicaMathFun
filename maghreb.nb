(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    199132,       4119]
NotebookOptionsPosition[    191220,       3980]
NotebookOutlinePosition[    191554,       3995]
CellTagsIndexPosition[    191511,       3992]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"CityData", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<WalnutPark\>\"", ",", " ", "\"\<California\>\"", ",", " ", 
    "\"\<UnitedStates\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.787347329776864*^9, 3.7873473382880287`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e41dfb0f-3d55-4df6-9429-d7515feacd96"],

Cell[BoxData[
 TemplateBox[{"\"Walnut Park\"",RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{
          "\"WalnutPark\"", ",", "\"California\"", ",", "\"UnitedStates\""}], 
         "}"}]}], "]"}],
   "\"Entity[\\\"City\\\", {\\\"WalnutPark\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.787347350795227*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"e761d3d1-f390-41dd-9750-9c1ff9e7ec35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CityData", "[", 
  RowBox[{
   TemplateBox[{"\"Walnut Park\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"WalnutPark\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"WalnutPark\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", "\"\<Population\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[2]:=",ExpressionUUID->"93fb4b60-2cd4-47f7-94d1-34b150959090"],

Cell[BoxData[
 TemplateBox[{"15966","\"people\"","people","\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.787347364620311*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"12f39f94-9415-4ecf-b6da-f10a71fa213e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CityData", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<SouthGate\>\"", ",", " ", "\"\<California\>\"", ",", " ", 
    "\"\<UnitedStates\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.787347377217659*^9, 3.787347386527856*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d3d17809-f173-4dd6-b3a9-72a0a5f708fb"],

Cell[BoxData[
 TemplateBox[{"\"South Gate\"",RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{
          "\"SouthGate\"", ",", "\"California\"", ",", "\"UnitedStates\""}], 
         "}"}]}], "]"}],
   "\"Entity[\\\"City\\\", {\\\"SouthGate\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.787347387011929*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"51f1238c-282b-43e7-bf50-e3c0fbc43882"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CityData", "[", 
  RowBox[{
   TemplateBox[{"\"South Gate\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SouthGate\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"SouthGate\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", "\"\<Population\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[4]:=",ExpressionUUID->"28ce2389-5f75-4327-8081-9cbf27717cfe"],

Cell[BoxData[
 TemplateBox[{"96312","\"people\"","people","\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.787347392000901*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"7de94993-65a0-4e17-b8a7-b4b775eaa984"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CityData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<Cudahy\>\"", ",", "\"\<California\>\"", ",", 
     "\"\<UnitedStates\>\""}], "}"}], ",", "\"\<Population\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7873474184718513`*^9, 3.787347437679721*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"ae765788-5cec-4c2c-a842-d7efc6790d06"],

Cell[BoxData[
 TemplateBox[{"24291","\"people\"","people","\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.7873474396896772`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"872e09b4-3b5e-4e64-89de-c0dd8607f6b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityClass", "[", 
  RowBox[{"\"\<Country\>\"", ",", "\"\<Mahgreb\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.787348289968375*^9, 3.78734830435839*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"4dc1d080-f3b6-47ee-a591-c06b408121fd"],

Cell[BoxData[
 RowBox[{"EntityClass", "[", 
  RowBox[{"\<\"Country\"\>", ",", "\<\"Mahgreb\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.7873483052035217`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"7f3b388a-75a4-4f9a-b4eb-8585f28db214"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", "\"\<Maghreb\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.787348310024558*^9, 3.787348328750894*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"97c01b2a-d01a-4b33-8a35-d44669f96831"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notent",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Maghreb\\\\\\\\\\\\\\\"\\\\\
\\\"\\\"}]\\) is not a known entity, class, or tag for \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[] for a list of entities.\"",2,7,1,
   25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.787348333788225*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"a29a6e26-0680-4a20-b860-6c1230dc7237"],

Cell[BoxData[
 RowBox[{"CountryData", "[", "\<\"Maghreb\"\>", "]"}]], "Output",
 CellChangeTimes->{3.787348333888246*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"64299cd3-0ec2-4667-9ac5-0f89485fd46c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityClass", "[", 
  RowBox[{"\"\<Country\>\"", ",", "\"\<Maghreb\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.7873483410077543`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"8c7f7b96-86db-4099-ba60-416034e0e726"],

Cell[BoxData[
 TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
     RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
   "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
  "EntityClass"]], "Output",
 CellChangeTimes->{3.787348342463169*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"a08d9eb8-da19-4825-9a82-b47136eb55ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
      RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
    "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
   "EntityClass"], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[10]:=",ExpressionUUID->"16e5bb02-ae12-4f47-b7e4-0c2e445e65f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.78734835736255*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"39799cfe-a034-43a2-bcab-1d39c3fae160"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
  "\"plot in world map\"","\"country group\"",RowBox[{"Manipulate", "[", 
     RowBox[{
       RowBox[{"Graphics", "[", 
         RowBox[{
           RowBox[{
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"CountryData", "[", 
                    RowBox[{"#1", ",", "cl"}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Orange", ",", 
                    RowBox[{"EdgeForm", "[", "Brown", "]"}]}], "]"}], ",", 
                    "LightBrown"}], "]"}], ",", 
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    RowBox[{"CountryData", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"SchematicPolygon\"", ",", "\"Robinson\""}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CountryData", "[", 
                    RowBox[{"#1", ",", "\"Name\""}], "]"}], ",", 
                    RowBox[{"CountryData", "[", 
                    RowBox[{"#1", ",", "prop"}], "]"}]}], "}"}]}], "]"}]}], 
                   "}"}], "&"}], ")"}], "/@", 
             RowBox[{"CanonicalName", "[", 
               RowBox[{"CountryData", "[", "]"}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"cl", ",", "\"Maghreb\"", ",", "\"country group\""}], 
             "}"}], ",", 
           RowBox[{"Dynamic", "[", 
             RowBox[{
               RowBox[{"CanonicalName", "[", 
                 RowBox[{"CountryData", "[", "\"Classes\"", "]"}], "]"}], ",", 
               RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], "]"}], 
           ",", 
           RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"prop", ",", "\"Population\"", ",", 
               "\"country property\""}], "}"}], ",", 
           RowBox[{"Dynamic", "[", 
             RowBox[{
               RowBox[{"CountryData", "[", "\"Properties\"", "]"}], ",", 
               RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], "]"}], 
           ",", 
           RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], ",", 
       RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], "]"}]},
  "HiddenFunction",
  DisplayFunction->(FrameBox[
    DynamicModuleBox[{Typeset`open$$ = False}, 
     PaneSelectorBox[{False -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
       True -> TagBox[
         GridBox[{{
            OpenerBox[
             Dynamic[Typeset`open$$]], 
            
            StyleBox[#, "SuggestionsBarHiddenFunctionLabel", StripOnInput -> 
             False], 
            StyleBox[#2, Plain, StripOnInput -> False]}, {"\"\"", 
            StyleBox[#3, ShowStringCharacters -> True], "\[SpanFromLeft]"}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxDividers -> {
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, FrameStyle -> {
            Dashing[{0, Small}], 
            GrayLevel[0.85]}], "Grid"]}, 
      Dynamic[Typeset`open$$, TrackedSymbols :> {Typeset`open$$}], ImageSize -> 
      Automatic], DynamicModuleValues :> {}], FrameStyle -> GrayLevel[0.85], 
    RoundingRadius -> 4, StripOnInput -> False]& ),
  Editable->False,
  InterpretationFunction->(#3& )]], "Input",
 NumberMarks->False,
 CellLabel->"In[9]:=",ExpressionUUID->"2a4a28af-f362-4c31-ac18-c82ce821e9da"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`cl$$ = "Maghreb", $CellContext`prop$$ = 
    "Population", Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`cl$$], "Maghreb", "country group"}, 
      Dynamic[
       CanonicalName[
        CountryData["Classes"]], SynchronousUpdating -> False]}, {{
       Hold[$CellContext`prop$$], "Population", "country property"}, 
      Dynamic[
       CountryData["Properties"], SynchronousUpdating -> False]}}, 
    Typeset`size$$ = {500., {112., 117.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`cl$$ = "Maghreb", $CellContext`prop$$ = 
        "Population"}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Map[{
          If[
           CountryData[#, $CellContext`cl$$], 
           Directive[Orange, 
            EdgeForm[Brown]], LightBrown], 
          Tooltip[
           CountryData[#, {"SchematicPolygon", "Robinson"}], {
            CountryData[#, "Name"], 
            CountryData[#, $CellContext`prop$$]}]}& , 
         CanonicalName[
          CountryData[]]], ImageSize -> 500], 
      "Specifications" :> {{{$CellContext`cl$$, "Maghreb", "country group"}, 
         Dynamic[
          CanonicalName[
           CountryData["Classes"]], SynchronousUpdating -> False], 
         ControlType -> 
         PopupMenu}, {{$CellContext`prop$$, "Population", "country property"}, 
         Dynamic[
          CountryData["Properties"], SynchronousUpdating -> False], 
         ControlType -> PopupMenu}}, 
      "Options" :> {SynchronousUpdating -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{547., {173., 180.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.787348344901307*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"9720a4b5-436a-4569-83a3-c3d8c1cdf086"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notprop",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Maghreb\\\\\\\\\\\\\\\"\\\\\
\\\"\\\"}]\\) is not a known property for \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[\\\"Properties\\\"] for a list of \
properties.\"",2,10,2,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7873483469852552`*^9},
 CellLabel->"",ExpressionUUID->"d0656ad5-480b-44eb-80fd-75294eb0017d"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notprop",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Maghreb\\\\\\\\\\\\\\\"\\\\\
\\\"\\\"}]\\) is not a known property for \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[\\\"Properties\\\"] for a list of \
properties.\"",2,10,3,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7873483470297623`*^9},
 CellLabel->"",ExpressionUUID->"c84327f0-404e-43a6-ba14-e4ff7e14c17b"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notprop",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Maghreb\\\\\\\\\\\\\\\"\\\\\
\\\"\\\"}]\\) is not a known property for \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[\\\"Properties\\\"] for a list of \
properties.\"",2,10,4,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.78734834727687*^9},
 CellLabel->"",ExpressionUUID->"d90d05f7-e71e-4974-b968-22496cf3fb89"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"CountryData\\\", \\\"::\
\\\", \\\"notprop\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,10,5,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.787348347295513*^9},
 CellLabel->"",ExpressionUUID->"f3211dec-6552-4936-996b-accbf63179e5"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notprop",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Maghreb\\\\\\\\\\\\\\\"\\\\\
\\\"\\\"}]\\) is not a known property for \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[\\\"Properties\\\"] for a list of \
properties.\"",2,10,6,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.787348351015443*^9},
 CellLabel->"",ExpressionUUID->"e4c538ed-3513-4406-a2e2-0fc61502fb02"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notprop",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Maghreb\\\\\\\\\\\\\\\"\\\\\
\\\"\\\"}]\\) is not a known property for \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[\\\"Properties\\\"] for a list of \
properties.\"",2,10,7,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.787348351092949*^9},
 CellLabel->"",ExpressionUUID->"3565ead5-b471-45a3-8875-d003b4706c30"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notprop",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Maghreb\\\\\\\\\\\\\\\"\\\\\
\\\"\\\"}]\\) is not a known property for \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[\\\"Properties\\\"] for a list of \
properties.\"",2,10,8,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7873483512398853`*^9},
 CellLabel->"",ExpressionUUID->"53751693-d6c4-4627-894e-ea845dce8f54"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"CountryData\\\", \\\"::\
\\\", \\\"notprop\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,10,9,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.787348351257338*^9},
 CellLabel->"",ExpressionUUID->"402f399c-8620-44a1-9b48-cdf6c0f6cfaf"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notprop",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Maghreb\\\\\\\\\\\\\\\"\\\\\
\\\"\\\"}]\\) is not a known property for \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[\\\"Properties\\\"] for a list of \
properties.\"",2,10,10,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.787348354416421*^9},
 CellLabel->"",ExpressionUUID->"ab385cc6-2462-405e-af3e-19b4c621ac4c"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notprop",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Maghreb\\\\\\\\\\\\\\\"\\\\\
\\\"\\\"}]\\) is not a known property for \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[\\\"Properties\\\"] for a list of \
properties.\"",2,10,11,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7873483544408007`*^9},
 CellLabel->"",ExpressionUUID->"c32689b4-7e79-45ca-acf8-9642d3229ca1"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notprop",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"Maghreb\\\\\\\\\\\\\\\"\\\\\
\\\"\\\"}]\\) is not a known property for \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[\\\"Properties\\\"] for a list of \
properties.\"",2,10,12,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.787348354645815*^9},
 CellLabel->"",ExpressionUUID->"65e73bdc-7324-417f-b09f-520818f003ee"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"CountryData\\\", \\\"::\
\\\", \\\"notprop\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,10,13,25197195998990175685,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7873483547054243`*^9},
 CellLabel->"",ExpressionUUID->"3a030266-6732-4354-89f1-b13fb28b202a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{
   TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
       RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
     "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
    "EntityClass"], "[", "\"\<GDP\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.787348376278922*^9, 3.7873483796723347`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6127faf3-c687-4d46-a83d-ee131856732e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], "+", 
  TemplateBox[{"3.927306486915405`*^11",RowBox[{
      FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
    RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
    "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
   "QuantityPrefixUnit"]}]], "Output",
 CellChangeTimes->{3.787348381591195*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"48914882-4df3-41ac-a6d9-86c5bbc93935"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{
   TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
       RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
     "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
    "EntityClass"], "[", "\"\<Population\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.787348402358686*^9, 3.787348406504593*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"4eec0667-4835-4d6e-af23-0975db9d10f7"],

Cell[BoxData[
 TemplateBox[{"99937277","\"people\"","people","\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.787348407519731*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"2117d8b6-7b5f-452e-a1a0-8858759d3ba8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"Total", "@", 
   RowBox[{
    TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
        RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
      "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
     "EntityClass"], "[", "\"\<GDP\>\"", "]"}]}], 
  RowBox[{"Total", "@", 
   RowBox[{
    TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
        RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
      "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
     "EntityClass"], "[", "\"\<Population\>\"", "]"}]}]]], "Input",
 CellChangeTimes->{{3.78734846087157*^9, 3.787348461922089*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"f1a5cdc2-eaee-4cb9-92bb-9ea35deb2a46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   TemplateBox[{
    FractionBox["1", "99937277"],
     RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],"reciprocal people",
     FractionBox["1", "\"People\""]},
    "Quantity"], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], "+", 
    TemplateBox[{"3.927306486915405`*^11",RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
      "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7873484624246597`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"83c2d5fc-f7ca-41dd-bb64-e669771ac497"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}], "+", 
  TemplateBox[{"3.927306486915405`*^11",RowBox[{
      FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
    RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
    "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
   "QuantityPrefixUnit"], "-", 
  RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.787348473439546*^9, 3.7873484736376057`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9e58a861-5a09-4a31-b4d0-1ffcbf0722ab"],

Cell[BoxData[
 TemplateBox[{"3.927306486915405`*^11",RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
   RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
   "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
  "QuantityPrefixUnit"]], "Output",
 CellChangeTimes->{3.787348474024055*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"006881e0-6fda-4187-8742-68c6731685ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  TemplateBox[{"3.927306486915405`*^11",RowBox[{
      FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
    RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
    "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
   "QuantityPrefixUnit"], 
  RowBox[{"Total", "@", 
   RowBox[{
    TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
        RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
      "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
     "EntityClass"], "[", "\"\<Population\>\"", "]"}]}]]], "Input",
 CellChangeTimes->{3.787348499373184*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"73427469-e718-49d4-882d-1f5d0f859cd3"],

Cell[BoxData[
 TemplateBox[{"3929.77135740391`",RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
   "US dollars per person year",FractionBox["\"USDollars\"", 
    RowBox[{"\"People\"", " ", "\"Years\""}]]},
  "QuantityPrefixUnit"]], "Output",
 CellChangeTimes->{3.787348500152809*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"6faf9f59-5ddb-4762-9ab5-fa53578d5614"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
      RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
    "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
   "EntityClass"], "[", "\"\<SectorLaborForce\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7873485584237022`*^9, 3.787348572095766*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"040634f8-24c2-4827-a923-ce64586fad2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Missing", "[", 
    RowBox[{"\<\"UnknownProperty\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Country\"\>", ",", "\<\"SectorLaborForce\"\>"}], "}"}]}], 
    "]"}], ",", 
   RowBox[{"Missing", "[", 
    RowBox[{"\<\"UnknownProperty\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Country\"\>", ",", "\<\"SectorLaborForce\"\>"}], "}"}]}], 
    "]"}], ",", 
   RowBox[{"Missing", "[", 
    RowBox[{"\<\"UnknownProperty\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Country\"\>", ",", "\<\"SectorLaborForce\"\>"}], "}"}]}], 
    "]"}], ",", 
   RowBox[{"Missing", "[", 
    RowBox[{"\<\"UnknownProperty\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Country\"\>", ",", "\<\"SectorLaborForce\"\>"}], "}"}]}], 
    "]"}], ",", 
   RowBox[{"Missing", "[", 
    RowBox[{"\<\"UnknownProperty\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Country\"\>", ",", "\<\"SectorLaborForce\"\>"}], "}"}]}], 
    "]"}], ",", 
   RowBox[{"Missing", "[", 
    RowBox[{"\<\"UnknownProperty\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Country\"\>", ",", "\<\"SectorLaborForce\"\>"}], "}"}]}], 
    "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7873485727993937`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"31da2311-efff-49a2-a8fe-1409c59963ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
       RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
     "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
    "EntityClass"], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Entity\>\"", ",", "\"\<Population\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7873485869356823`*^9, 3.787348630361104*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"57ab3d8b-e685-4a0c-9b44-aa8bbced8ad7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
      "Entity"], ",", 
     TemplateBox[{"41318142","\"people\"","people","\"People\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
      "Entity"], ",", 
     TemplateBox[{"6374616","\"people\"","people","\"People\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
      "Entity"], ",", 
     TemplateBox[{"4420184","\"people\"","people","\"People\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
      "Entity"], ",", 
     TemplateBox[{"35739580","\"people\"","people","\"People\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
      "Entity"], ",", 
     TemplateBox[{"11532127","\"people\"","people","\"People\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
      "Entity"], ",", 
     TemplateBox[{"552628","\"people\"","people","\"People\""},
      "Quantity"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.787348630614286*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"f91491c4-28c9-4c53-a019-209f0c12f50f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"ReverseSortBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EntityValue", "[", 
     RowBox[{
      TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
          RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
        "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
       "EntityClass"], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Entity\>\"", ",", "\"\<Population\>\""}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", ",", "Last"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.787348634663842*^9, 3.787348640361123*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"1cf3d7ff-3bb9-4136-b54a-c2581539dbb8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"41318142","\"people\"","people","\"People\""},
      "Quantity"]},
    {
     TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"35739580","\"people\"","people","\"People\""},
      "Quantity"]},
    {
     TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"11532127","\"people\"","people","\"People\""},
      "Quantity"]},
    {
     TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"6374616","\"people\"","people","\"People\""},
      "Quantity"]},
    {
     TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"4420184","\"people\"","people","\"People\""},
      "Quantity"]},
    {
     TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"552628","\"people\"","people","\"People\""},
      "Quantity"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.787348640609139*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"a08796d9-f6b9-4c78-9aa3-43f796738967"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"ReverseSortBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EntityValue", "[", 
     RowBox[{
      TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
          RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
        "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
       "EntityClass"], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Entity\>\"", ",", "\"\<GDP\>\""}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", ",", "Last"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.787348647567678*^9, 3.7873486476974697`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e0879790-8133-4068-9d4c-c0aad24dacea"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"1.80689115940685`*^11",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
       "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"1.1849532819808`*^11",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
       "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"4.8319620013078`*^10",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
       "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"3.98607158144238`*^10",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
       "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"5.36586872527374`*^9",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
       "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.78734864795247*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"54780938-f2e7-44c5-8411-b23d34af8450"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"ReverseSortBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EntityValue", "[", 
     RowBox[{
      TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
          RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
        "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
       "EntityClass"], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Entity\>\"", ",", "\"\<GDPRealGrowth\>\""}], "}"}]}], 
     "]"}], "\[IndentingNewLine]", ",", "Last"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7873486837776747`*^9, 3.787348690721499*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"4d10ab46-0493-4db6-90c1-dadce8f76ca9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"GDPRealGrowth\"\>"}], "}"}]}], 
      "]"}]},
    {
     TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"GDPRealGrowth\"\>"}], "}"}]}], 
      "]"}]},
    {
     TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"GDPRealGrowth\"\>"}], "}"}]}], 
      "]"}]},
    {
     TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"GDPRealGrowth\"\>"}], "}"}]}], 
      "]"}]},
    {
     TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"GDPRealGrowth\"\>"}], "}"}]}], 
      "]"}]},
    {
     TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"GDPRealGrowth\"\>"}], "}"}]}], 
      "]"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.78734869152353*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"05d6ab2f-542f-418c-8c8f-e3413a7bceb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{"\"\<UnitedStates\>\"", ",", "\"\<ExportValue\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.787348693977007*^9, 3.7873486961597633`*^9}, {
  3.787349137382584*^9, 3.78734914044681*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"a2502236-8492-43ef-9006-827deceb49c5"],

Cell[BoxData[
 TemplateBox[{"2214566000000",RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
   RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
   "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
  "QuantityPrefixUnit"]], "Output",
 CellChangeTimes->{3.7873491408423033`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"a665d55b-53c7-4e4a-ad8c-deee05330d57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"ReverseSortBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EntityValue", "[", 
     RowBox[{
      TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
          RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
        "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
       "EntityClass"], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Entity\>\"", ",", "\"\<Airports\>\""}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", ",", "Last"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.787348703917891*^9, 3.787348705113545*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"948e764d-e746-4100-af7d-cc7d1e011d50"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
      "Entity"], "143"},
    {
     TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
      "Entity"], "137"},
    {
     TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
      "Entity"], "58"},
    {
     TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
      "Entity"], "32"},
    {
     TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
      "Entity"], "27"},
    {
     TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
      "Entity"], "6"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7873487062483*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a135432b-aa31-436d-9525-ad44ff8debd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"ReverseSortBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EntityValue", "[", 
     RowBox[{
      TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
          RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
        "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
       "EntityClass"], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Entity\>\"", ",", "\"\<ExportValue\>\""}], "}"}]}], "]"}],
     "\[IndentingNewLine]", ",", "Last"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.787349130158853*^9, 3.787349156581167*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"2d797000-c109-4ac8-b9e8-9245307b8dc2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"ExportValue\"\>"}], "}"}]}], 
      "]"}]},
    {
     TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"ExportValue\"\>"}], "}"}]}], 
      "]"}]},
    {
     TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"ExportValue\"\>"}], "}"}]}], 
      "]"}]},
    {
     TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"ExportValue\"\>"}], "}"}]}], 
      "]"}]},
    {
     TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"ExportValue\"\>"}], "}"}]}], 
      "]"}]},
    {
     TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", 
      RowBox[{"\<\"UnknownProperty\"\>", ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Country\"\>", ",", "\<\"ExportValue\"\>"}], "}"}]}], 
      "]"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.787349133044655*^9, 3.7873491579375963`*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"5a5f2310-01d7-4f13-81c8-cd0b109f8e4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    TemplateBox[{"\"Maghreb\"",RowBox[{"EntityClass", "[", 
        RowBox[{"\"Country\"", ",", "\"Maghreb\""}], "]"}],
      "\"EntityClass[\\\"Country\\\", \\\"Maghreb\\\"]\"","\"countries\""},
     "EntityClass"], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Entity\>\"", ",", "\"\<ExportPartners\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.787349207534634*^9, 3.787349216688222*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"70dd0873-4afc-4d9a-bafa-2e95700ccb01"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Italy\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Spain\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Canada\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"France\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"France\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"France\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Netherlands\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Brazil\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"","\"country\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"Italy\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Germany\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Spain\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"France\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"France\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"France\\\"]\"","\"country\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"China\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"China\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"China\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"France\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"France\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"France\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Italy\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Spain\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Japan\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Netherlands\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Belgium\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Ivory Coast\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"IvoryCoast\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"IvoryCoast\\\"]\"","\"country\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"Spain\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"France\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"France\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"France\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"United Kingdom\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Italy\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"India\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"India\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"France\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"France\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"France\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Italy\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Germany\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Spain\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"","\"country\""},
        "Entity"], ",", 
       TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.787349223897007*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"9b6aeb1c-59e6-4430-854b-01933b20f27e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoEntities", "[", 
  RowBox[{
   TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
    "Entity"], ",", " ", "\"\<Airport\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.7873493785889072`*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"f074406f-33c0-475e-b61f-41f4fcd44d1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Ain Arnat Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"AinArnatAirport::w5922\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"AinArnatAirport::w5922\\\"]\"",
     "\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bordj Badji Mokhtar Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"BordjBadjiMokhtarAirport::58ymv\""}], 
       "]"}],"\"Entity[\\\"Airport\\\", \\\"BordjBadjiMokhtarAirport::58ymv\\\
\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bordj Omar Driss Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"BordjOmarDrissAirport::d7v43\""}], 
       "]"}],"\"Entity[\\\"Airport\\\", \\\"BordjOmarDrissAirport::d7v43\\\"]\
\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Illizi Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DA10\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DA10\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hamaguir Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DA11\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DA11\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"El Abiod Sidi Cheikh\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DA12\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DA12\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tinfouchy\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DA13\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DA13\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mostaganem\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DA14\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DA14\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saida\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DA15\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DA15\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tindou East\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DA16\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DA16\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Blida Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAB\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAB\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ain Eddis\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAD\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAD\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Soummam\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAE\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAE\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Houari Boumediene Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAG\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAG\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Djanet Inedbirene Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAJ\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAJ\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Boufarik Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAK\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAK\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Reggane Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAN\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAN\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Illizi Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAP\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAP\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ain Oussera Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAQ\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAQ\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tamanrasset Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAT\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAT\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Taher\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAV\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAV\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mecheria Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAY\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAY\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Relizane Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAAZ\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAAZ\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rabah Bitat Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DABB\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DABB\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"Mohamed Boudiaf International Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DABC\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DABC\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tebessa Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DABS\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DABS\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Batna Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DABT\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DABT\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hassi R'Mel Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAFH\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAFH\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bou Chekif\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAOB\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAOB\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bou Sfer Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAOE\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAOE\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tindouf Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAOF\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAOF\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ech Cheliff Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAOI\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAOI\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tafaraoui\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAOL\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAOL\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Zenata\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAON\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAON\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Es Senia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAOO\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAOO\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"B\[EAcute]char Ouakda Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAOR\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAOR\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sidi Bel Abbes Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAOS\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAOS\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mascara-Ghriss Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAOV\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAOV\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"Touat Cheikh Sidi Mohamed Belkebir\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUA\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUA\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Biskra Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUB\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUB\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"El Golea Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUE\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUE\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Noumerat-Moufdi Zadaria Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUG\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUG\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oued Irara\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUH\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUH\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"In Salah Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUI\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUI\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sidi Mahdi\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUK\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUK\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Laghouat Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUL\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUL\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guemar Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUO\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUO\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Timimoun Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUT\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUT\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ouargla Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUU\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUU\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"In Amenas Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"DAUZ\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"DAUZ\\\"]\"","\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"El Bayadh Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"ElBayadhAirport::j3d9c\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"ElBayadhAirport::j3d9c\\\"]\"",
     "\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"In Guezzam Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"InGuezzamAirport::2hbfh\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"InGuezzamAirport::2hbfh\\\"]\"",
     "\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ouakda Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"OuakdaAirport::n22gk\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"OuakdaAirport::n22gk\\\"]\"",
     "\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oum el Bouaghi Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"OumElBouaghiAirport::y3k5h\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"OumElBouaghiAirport::y3k5h\\\"]\"",
     "\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Telerghma Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"TelerghmaAirport::6t237\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"TelerghmaAirport::6t237\\\"]\"",
     "\"airport\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tsletsi Airport\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Airport\"", ",", "\"TsletsiAirport::z3k7n\""}], "]"}],
     "\"Entity[\\\"Airport\\\", \\\"TsletsiAirport::z3k7n\\\"]\"",
     "\"airport\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.7873493861011457`*^9, 3.7873493897834587`*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"eeb9baa5-78b1-406b-80aa-71b880e2380b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoListPlot", "@", "\[IndentingNewLine]", 
  RowBox[{"GeoEntities", "[", 
   RowBox[{
    TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
      "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
     "Entity"], ",", " ", "\"\<Airport\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.787349393141554*^9, 3.7873493950142727`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"400ea067-c238-4b77-a80b-97e625a8d2f4"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzsvduTXNd15tkxMw/zOPMn9MP8DzMRjo6YdnRHdKg1EePRqMOWX9puyT2y
w9MhK9S2Zc+0ZNNX9TiipRbblASbIAkRBECRAArElRQLKAB1ASSigAJxlQhU
FXGlCRCgKKojzpzfqvwOVu7c+9zyZGWCyIdVlXnyXPbZZ5+9vr0u3/rHv/F/
/8oX/pt/9I/+0e/99/mfX/nX//5//dKX/vUf/B//Q/7l//zd3/u/fut3P/9v
/sXvfvnzv/X5L/3Pv/Hf5hv/p3zf/zGX/y7//PcnrmeTLH939JJJ2T7bTi5n
B5eez45c3JG9eWlXduu95eznP7uW3fvgov3/rx+t9cm7d1azDx9ey9b2fyGb
u7LbjuHYUOavzkR/u7B+zM6zNL8ne+Zv/zjbufOb2Xv3L2Q/++in2QcPLvdd
8+OPfpKdv3E0u3TzuB3HfrRP36/fOZWdWX3dZP3uW/Yb2/hd1zt4fsb+X37p
V629nI//sTanhP25BvfE57nLh4vz6hrc69I7B0zYxnXow6u35q3dDx9eze4d
/v3sxq7PZDd3/3p2a+Y3s1t5H4b920buHPm97OM7S33b6Eeu8dGlnX3b6Wfa
wu+x50t7w/vn3tj33Pqb1g/vvn/GnpWO4T7njr6UPbh7vm87wljhP9vZ7869
c8Uzo4+4Htu0P/vp+wcrW7O7P/yK3cf6S//S+u3dnf8muzf7xxvnvn7Qtv/o
+LZHY+bhlez2vi9mRw9vy2b2PpM9f/Rc/N04fi37uzdXNt6R/PO439WpTOVx
EXt3jl7O/m72wiPh+7Gr8X2HkHHfa+f99ub5jf7if6S/Jk2qMAT3tONYv87w
GAI9jb4J9czDq7uz2wd/x/aL6WN0rXRpKOghzvHslj/JXnjhLws9xn+uBRbw
GAKdgg5Gr/CZ4/ks0e+mM/O2azttDzHE/PIztl1tRjdK9B2dhn7zbRZG4Vox
DKHfkSvreX8uv204hvbrXtB/4Ief35zrBDd4Qc9+cOaZvm3gE78txAwx/JB6
ZsIQuk/24z/P6+H9KxtjIv8PLly9thRtY3g9nhV9LSzI7zxHtt3/4EqxP9e4
f/qbBX5A7s7+UYFxH1zaka3lv11Yfj27/+DRtnO7vmQYIf0ur1Ti66lMZSob
Uuj1XPdtOXLKxPSgsITfnuvGTzoeGKofHxMMUccG8fLxAwP6nXUj8zA6gvUm
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
1kcC0Bz8fOP6pm8XuyzwO/N1TBo3r7G8iri3Ce9Rp/ekIfygTycQDwFoCfp7
e4+rBFK7r6saYtH3G6uG4O9oBzSE93hFN9cce0TX7/vh+6dCXw7PWL+6PhnE
V5p+MA0R6kEEu+TZoBv42eoy8T39qZg3+Hv8/tS0/u7wfwzfEwtWPVbe23SF
vZdpiDofCtqD3DbmFl7P/1lvTPMRVzUEY+vDjiTacezIi9v6IebO55fdx5Y7
KWkIcjXtOeyq/kdpGoI5rM01sx5a3uMV3dCXhrh+5UR43xQ1hNW5NvvAlcun
Js75sYbgq80l2CDse/7GscZ9rkyXmIYwTWCYz+P82sGNy5ePhP3s3a8u7fhs
e529D7+Lz6nVpOzj/FmPBmotL9r/K3eaakzTy5u+3tbbGzuE6Yh3nH15OcN9
nUI8hNWKalPvYVZK0xCcq2nnidgR7A/SEOXANe2jxwW5o334SGahTkPQ75s4
xHnej/1HiJmkJuXJf3jm78QsWO1pQEPQFzN+TdeayvwtpmW6iOtjvbz8xb2N
z7/Z1A7SEJOxayoN0e05Nc3u8fnMh5ar2ddnlKYhOJ5p89t7v/9GtacKZP++
54PdoMv3TFFDYIM4e/XqQu/57Rt/v3F/y39RxTQEzxH9uliLHzyYT6/wXtSq
bPNatE2fGsLzGuaAzZs3rpwMxP4N77HljuV6Ygsc6lpu2hz772WRkq+mi/NW
miYS7WGt7zL+0fpxgGeed7W2FDaI6x+fnNv2j+2hST8A636dDp/X9tC2RyPn
mzhQ5Ramw8rZvUFD6JosDvphqN6xQ2qIktZcaYhxg829y5gI8johRTsEOmLW
uYgalKEnxhQN0SeT9ASxoVWfifDF7BAp5SbmylAawmIfhuqZVtKaSxyEd28D
4YdpiC5iIqhNCeRkeNcqq4unREPA2se3JvbYjtds0xDfHf2/Bx1/7EeI60Tg
J4lfx7xHTipf2/gkRT8Ql7t8+tWAcjy7x+KSu+4JbLEP/3Z72FyakjSE+nyP
G659l2u+aQjv42qqL2V64vyN97ZtzazL9gxU9/zoh7/dPTP4+GMN0fb5nKVe
v+gW0xBW+1oaonvi/nKL+kmf5nT377eo++xS6jly7ko5FjE/xFV2YQ/nmUQ/
pGDXquu1VZfnSexirCGq0A/De11uGxuBhmCe9T73YwTNYNpB+qE/rM4Kcw2x
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
hurnlhu3v7u48dm37wZufnN+mw/urezg2ldvPUNpGoJ9fK5zsOpdj5fS6k4O
BdqBtQG6sE/Ln1Ee9Mwi94IcDO+x9AlruXH/0Qc7uPv99R3cebgeQDsYsYZY
+fz11pSiIZh70Q85+wLQD6qTNh6IfbEaJooNnw9qEpsvo4s8f66DYu3KgJxg
4L7IeV2YBHE8sXaINcQsOmARStEQxK/TeyjX/kPoB2mIcWDaIYca7Dlh/ZrZ
b5Lzif+76bXLT541wH7B1/i1puu8j0csBvqB61uyfwpfwlBaoWQNwTycu4ag
1rXqXZeL9aNkbeJelXboniYNQT0q/OA8W5x/25sC8RTWl8P6LJk9U7H7+WIx
MtIQ/VPCc2L5cN7jWASr265612VBbUnTDdIO/YN+QCugD/BvoB+kIcYD18z6
tY2h/6Y0RDdgE869roLtU1XvuiykIXwgLsLqEKIVrD42X/n5nfP7AvZ6Xre8
Fc9sz6Lqe+UFMSxc3y7yfHMhBQ3RV1/dofj3QmrDWK1raYgyQDtgG5Nu8IO9
BbSZ47BN7N71jzvs3rnbNscENtxYB44F8i2lIRaDOaKEmn6xhtCakyePt3SD
tEOemE8D2yxIQ+TDWDUE6/f5L44FpCHmowQbhGE+2tz9MmODeiSsN8xjOfV5
EzvhGmKLiHNF4xhni61QrcO0ML/VWPt3Ww2IXDWEzZlVmFfrftfluSstB2v/
a88Hcq2zOTaq2sF7PGIx2moI1ivpfH/IvQGuR6n1H9qQgoZYREdYDLP1ubKv
8fexhpiXas4m/ou7X6wHvK9hVzBfWU9777GIeiwHCHLtyyLquXr5t0FDmI7A
Lm46glg9i9GUhvCHPBvg+lCj3Hs83qAhLn55PEsNUUdVQ9QR9zZuItYPxqOt
ryXZHwzymVeW90pDJIw0RLmwJpHrCfa7r25f2rZLxDVc0BSKl/C9VtIQT2EN
L0lDzEudjiBmsvoz+qFEe79pCPAei2jG7sUS78Ex03YeZM2y+EvAbmH1CNAa
Y7ar9w2xrmg4O9+PH+ZfI7ErPHM0UtEQbSm1NxG1rum7Bd5jEZP57u57gVLv
RdEO9ILVmiA/lH2A1beSnaJb4voPKe19U4Ga0171IryPfRbwQ5baZ4C+37Ed
VaSP9euWf1wYrHUWS2F+EOpOaM2bH+Z8bD6nT+1xH0vqePg0vI95FkxDeI+j
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
LuuI+3h5H4Mon/8f+7WhVQ==
           "], {{0, 549}, {529, 0}}, {0, 255}, 
           ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language: www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with data from \[Copyright] \
OpenStreetMap contributors: http://www.openstreetmap.org/copyright", 
               "Projection" -> {
                "LambertAzimuthal", "Centering" -> 
                 GeoPosition[{28.194612217712404`, 0.7379040000000003}], 
                 "LongitudeDetermination" -> 0.7379040000000003}, 
               "PlotRange" -> {{-0.16219887536694863`, 
                0.1621988753669486}, {-0.1654489871131713, 
                0.17135795873868837`}}, 
               "LonLatBox" -> {{-10.98173401913587, 12.457542019135868`}, {
                18.35780018931824, 38.024752141294655`}}}]], Selectable -> 
          False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {529, 549}, PlotRange -> {{0, 529}, {0, 549}}], 
        TraditionalForm]], 
      PolygonBox[{{-0.16219887536694863`, -0.1654489871131713}, \
{-0.16219887536694863`, 0.17135795873868837`}, {0.1621988753669486, 
       0.17135795873868837`}, {
       0.1621988753669486, -0.1654489871131713}, {-0.16219887536694863`, \
-0.1654489871131713}},
       VertexTextureCoordinates->{{0., 0.}, {0., 1.}, {1., 1.}, {1., 0.}, {0.,
         0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{0.09731932522016914, -0.09808759794279936}, {
         0.1621988753669486, -0.09808759794279936}, {
         0.1621988753669486, -0.1654489871131713}, {
         0.09731932522016914, -0.1654489871131713}, {
         0.09731932522016914, -0.09808759794279936}}]},
       "\"Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {
     {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
      EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
      1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        FontSize->10.88], {0.06474110879634505, 0.14053017480539026}], 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.003028129282941354, -0.1189522476726499}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.09374829889817149, 0.001253907323639339}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.12076911446993234, -0.024479857439265323}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.05700366016066161, 0.04776149968609908}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.003127090271796198, 0.08207863496223287}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.10017680535675945, 0.014678304048226952}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.008338340865100475, 0.1345579159176339}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.00840581027723143, 0.1169368551102344}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.12725506042410417, -0.006315284563691372}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.029202268694291236, 0.14515933184210694}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.049468351304302036, 0.12524792216347866}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.06075193082910651, 0.14968060388100546}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.03476378054377626, 0.1485341248005777}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.1384980405166035, -0.0632595500344833}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.03005771040003918, 0.14591039242627898}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.007051650483661562, -0.025895858643678996}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.12276691313100493, -0.0217249526987958}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.030468206203751055, 0.1281444099622856}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.07587681679554864, -0.09250854968465978}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.07193562245445943, 0.15159775466901765}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.01427599439816409, 0.09324869618063723}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.0015846270628421394, 0.13181063980012434}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.0989579952964787, 0.15353022304142247}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.08290754964051585, 0.14307568419724315}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.105067576303728, 0.12961722057322392}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.0790190877271959, 0.13373585258947163}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.03772804719241633, 0.08304795771833226}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.010345301694833898, 0.12468226801750669}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.02191040328636475, 0.1316644120642495}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.13738027230660282, -0.0035922329263327986}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.008383238327165369, 0.13984900578434065}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.01807493618249056, 0.12825632622732763}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.0313258982575979, 0.11929532967569406}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.019321199155536654, 0.12968881344620348}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.04470107816796124, 0.06079456355547832}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.019026170106825873, 0.12180960395131765}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.008440302342337346, 0.12234724625945563}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.014265280420399564, -0.006177012133294673}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.07174679220525522, 0.1166647272466659}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.031886727226013586, 0.04176231755327544}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.04506585470026608, 0.07369155908797892}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.08023313137628817, 0.06253869936681114}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.0275264939558149, -0.01626875044293898}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.07828209284347595, 0.08682449054785982}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.031816172383385424, 0.0974729828648463}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.08790048893017698, 0.09504766368807586}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.007034482558348791, 0.018208434501084392}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.06925914005561674, 0.06633658214786857}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.13693339087127743, 0.002534995785524835}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.005153533755166463, 0.0964357736153173}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.08262056938965757, -0.14884981799017574}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.04342535757483091, 0.060705850810271376}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.09250050217338834, 0.13668015422076982}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.07946969242528597, 0.13998131897018556}]}, 
      {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.037565134505195975, 0.11330791042139286}]}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{28.194612217712404`, 0.7379040000000003}], 
       "LongitudeDetermination" -> 0.7379040000000003}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{28.194612217712404`, 0.7379040000000003}], 
       "LongitudeDetermination" -> 0.7379040000000003}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{{
         RGBColor[1., 0.607843, 0.], 
         EdgeForm[{
           Thickness[Tiny], 
           Opacity[0.4]}], 
         PointSize[Large], 
         FaceForm[{
           Opacity[0.5]}], 
         GeoStyling[None], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{36.1781005859, 5.32449007034}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{21.375, 0.923888981342}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{28.1313991546631, 6.83361005783081}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{26.573567, 8.483656}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{30.879003, -3.067747}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{32.898529, 0.524694}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{28.879322, -5.8229}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.908806, 0.149383}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{34.897194, 0.151694}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{27.585922, -7.500114}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{36.503613, 2.814167}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.3325, 4.206389}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{36.711997, 5.069922}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{36.691014, 3.215408}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{24.292767, 9.452444}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{36.545834, 2.876111}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{26.710103, 0.285647}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{26.723536, 8.622653}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.525414, 2.878714}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{22.811461, 5.451075}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{36.795136, 5.873608}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{33.535853, -0.242353}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.752239, 0.626272}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{36.822225, 7.809167}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{36.276028, 6.620386}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.431611, 8.120717}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.752106, 6.308589}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{32.930431, 3.311542}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.341136, 1.463147}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.735389, -0.805389}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{27.700372, -8.167103}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{36.212658, 1.331775}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.542444, -0.532278}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.016667, -1.45}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.623858, -0.621183}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{31.645744, -2.269861}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.171775, -0.593275}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.207725, 0.147142}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{27.837589, -0.186414}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{34.793289, 5.738231}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{30.571294, 2.859586}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{32.384106, 3.794114}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{31.672972, 6.140444}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{27.251022, 2.512017}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{33.067803, 6.088672}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{33.764383, 2.928344}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{33.511397, 6.776794}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{29.237119, 0.276033}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{31.917223, 5.412778}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{28.05155, 9.642911}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{33.7216666667, 1.0925}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{19.5669994354248, 5.75}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{31.6424999237061, -2.18389010429382}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{35.8796997070312, 7.27080011367798}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{36.108699798584, 6.36460018157959}]], 
         Directive[
          Directive[
           Opacity[1], 
           RGBColor[0.790588, 0.201176, 0.]], 
          FaceForm[{
            Opacity[0.5], 
            RGBColor[1., 0.607843, 0.]}]], 
         Inset[
          Style["\[FilledCircle]", FontSize -> 10.88], 
          GeoPosition[{34.6657, 3.351}]]}}, GeoBackground -> 
       GeoStyling["GeoPlotMap"], PlotRangePadding -> {{
          Scaled[0], 
          Scaled[0]}, {
          Scaled[0], 
          Scaled[0]}}]], 
    "BasicGeoRange" -> {{19.5669994354248, 36.822225}, {-8.167103000000001, 
     9.642911000000002}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
      GeoPosition[{28.194612217712404`, 0.7379040000000003}], GeoGridLines -> 
      None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-0.16219887536694863`, 
       0.1621988753669486}, {-0.1654489871131713, 0.17135795873868837`}}, 
      GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
      GeoProjection -> {
       "LambertAzimuthal", "Centering" -> 
        GeoPosition[{28.194612217712404`, 0.7379040000000003}]}, 
      GeoRange -> {{18.70423815719604, 
       37.68498627822876}, {-9.057603700000001, 10.533411700000002`}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 5, 
      MetaInformation -> {
       "LonLatBox" -> {{-10.98173401913587, 12.457542019135868`}, {
         18.35780018931824, 38.024752141294655`}}, 
        "PlotRange" -> {{-0.16219887536694863`, 
         0.1621988753669486}, {-0.1654489871131713, 0.17135795873868837`}}, 
        "Projection" -> {
         "LambertAzimuthal", "Centering" -> 
          GeoPosition[{28.194612217712404`, 0.7379040000000003}], 
          "LongitudeDetermination" -> 0.7379040000000003}, "Software" -> 
        "Created with the Wolfram Language: www.wolfram.com", "TileSources" -> 
        "Wolfram Knowledgebase with data from \[Copyright] OpenStreetMap \
contributors: http://www.openstreetmap.org/copyright"}}},
  PlotRange->{{-0.16219887536694863`, 
   0.1621988753669486}, {-0.1654489871131713, 0.17135795873868837`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.787349407248712*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"72238d71-76c9-4027-a491-ab7e7aa397f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"9", ",", "\"\<Minutes\>\""}], "]"}], ",", "\"\<Seconds\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.787351533132752*^9, 3.787351544394356*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"3f4b32af-4521-4a1d-bbff-b767c7e5e728"],

Cell[BoxData[
 TemplateBox[{"540","\"s\"","seconds","\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.787351544621529*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"3871126a-5617-453f-8233-79db729e29f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  TemplateBox[{"540","\"s\"","seconds","\"Seconds\""},
   "Quantity"], "10"]], "Input",
 CellChangeTimes->{{3.787351549960039*^9, 3.7873515513501253`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"7d485b3f-8ccc-4b42-91fb-a7995e000ce8"],

Cell[BoxData[
 TemplateBox[{"54","\"s\"","seconds","\"Seconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.7873515516081676`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e01d2a5a-3620-4b20-9908-28d935738ba6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.787389690946402*^9, 
  3.787389691425764*^9}},ExpressionUUID->"edcbc9af-ee85-4093-a8ab-\
3424b4cbfb14"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.787389654534503*^9, 
  3.7873896890166893`*^9},ExpressionUUID->"43e114f4-4f3f-47c0-87dd-\
589ff54c36be"]
},
WindowSize->{1920, 1027},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 336, 7, 31, "Input",ExpressionUUID->"e41dfb0f-3d55-4df6-9429-d7515feacd96"],
Cell[919, 31, 496, 11, 46, "Output",ExpressionUUID->"e761d3d1-f390-41dd-9750-9c1ff9e7ec35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1452, 47, 565, 13, 42, "Input",ExpressionUUID->"93fb4b60-2cd4-47f7-94d1-34b150959090"],
Cell[2020, 62, 218, 4, 39, "Output",ExpressionUUID->"12f39f94-9415-4ecf-b6da-f10a71fa213e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2275, 71, 333, 7, 31, "Input",ExpressionUUID->"d3d17809-f173-4dd6-b3a9-72a0a5f708fb"],
Cell[2611, 80, 493, 11, 46, "Output",ExpressionUUID->"51f1238c-282b-43e7-bf50-e3c0fbc43882"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3141, 96, 562, 13, 42, "Input",ExpressionUUID->"28ce2389-5f75-4327-8081-9cbf27717cfe"],
Cell[3706, 111, 218, 4, 39, "Output",ExpressionUUID->"7de94993-65a0-4e17-b8a7-b4b775eaa984"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3961, 120, 369, 9, 31, "Input",ExpressionUUID->"ae765788-5cec-4c2c-a842-d7efc6790d06"],
Cell[4333, 131, 220, 4, 39, "Output",ExpressionUUID->"872e09b4-3b5e-4e64-89de-c0dd8607f6b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4590, 140, 258, 4, 31, "Input",ExpressionUUID->"4dc1d080-f3b6-47ee-a591-c06b408121fd"],
Cell[4851, 146, 238, 4, 35, "Output",ExpressionUUID->"7f3b388a-75a4-4f9a-b4eb-8585f28db214"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5126, 155, 222, 3, 31, "Input",ExpressionUUID->"97c01b2a-d01a-4b33-8a35-d44669f96831"],
Cell[5351, 160, 539, 12, 23, "Message",ExpressionUUID->"a29a6e26-0680-4a20-b860-6c1230dc7237"],
Cell[5893, 174, 199, 3, 35, "Output",ExpressionUUID->"64299cd3-0ec2-4667-9ac5-0f89485fd46c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6129, 182, 237, 4, 31, "Input",ExpressionUUID->"8c7f7b96-86db-4099-ba60-416034e0e726"],
Cell[6369, 188, 349, 6, 46, "Output",ExpressionUUID->"a08d9eb8-da19-4825-9a82-b47136eb55ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6755, 199, 368, 7, 42, "Input",ExpressionUUID->"16e5bb02-ae12-4f47-b7e4-0c2e445e65f5"],
Cell[7126, 208, 1407, 28, 46, "Output",ExpressionUUID->"39799cfe-a034-43a2-bcab-1d39c3fae160"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8570, 241, 4295, 97, 43, "Input",ExpressionUUID->"2a4a28af-f362-4c31-ac18-c82ce821e9da"],
Cell[12868, 340, 2693, 58, 372, "Output",ExpressionUUID->"9720a4b5-436a-4569-83a3-c3d8c1cdf086"],
Cell[15564, 400, 515, 10, 23, "Message",ExpressionUUID->"d0656ad5-480b-44eb-80fd-75294eb0017d"],
Cell[16082, 412, 515, 10, 23, "Message",ExpressionUUID->"c84327f0-404e-43a6-ba14-e4ff7e14c17b"],
Cell[16600, 424, 512, 10, 23, "Message",ExpressionUUID->"d90d05f7-e71e-4974-b968-22496cf3fb89"],
Cell[17115, 436, 417, 8, 23, "Message",ExpressionUUID->"f3211dec-6552-4936-996b-accbf63179e5"],
Cell[17535, 446, 513, 10, 23, "Message",ExpressionUUID->"e4c538ed-3513-4406-a2e2-0fc61502fb02"],
Cell[18051, 458, 513, 10, 23, "Message",ExpressionUUID->"3565ead5-b471-45a3-8875-d003b4706c30"],
Cell[18567, 470, 515, 10, 23, "Message",ExpressionUUID->"53751693-d6c4-4627-894e-ea845dce8f54"],
Cell[19085, 482, 417, 8, 23, "Message",ExpressionUUID->"402f399c-8620-44a1-9b48-cdf6c0f6cfaf"],
Cell[19505, 492, 514, 10, 23, "Message",ExpressionUUID->"ab385cc6-2462-405e-af3e-19b4c621ac4c"],
Cell[20022, 504, 516, 10, 23, "Message",ExpressionUUID->"c32689b4-7e79-45ca-acf8-9642d3229ca1"],
Cell[20541, 516, 514, 10, 23, "Message",ExpressionUUID->"65e73bdc-7324-417f-b09f-520818f003ee"],
Cell[21058, 528, 420, 8, 23, "Message",ExpressionUUID->"3a030266-6732-4354-89f1-b13fb28b202a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21515, 541, 447, 8, 42, "Input",ExpressionUUID->"6127faf3-c687-4d46-a83d-ee131856732e"],
Cell[21965, 551, 487, 9, 45, "Output",ExpressionUUID->"48914882-4df3-41ac-a6d9-86c5bbc93935"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22489, 565, 452, 8, 42, "Input",ExpressionUUID->"4eec0667-4835-4d6e-af23-0975db9d10f7"],
Cell[22944, 575, 222, 4, 39, "Output",ExpressionUUID->"2117d8b6-7b5f-452e-a1a0-8858759d3ba8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23203, 584, 756, 15, 76, "Input",ExpressionUUID->"f1a5cdc2-eaee-4cb9-92bb-9ea35deb2a46"],
Cell[23962, 601, 752, 17, 60, "Output",ExpressionUUID->"83c2d5fc-f7ca-41dd-bb64-e669771ac497"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24751, 623, 575, 10, 38, "Input",ExpressionUUID->"9e58a861-5a09-4a31-b4d0-1ffcbf0722ab"],
Cell[25329, 635, 407, 7, 45, "Output",ExpressionUUID->"006881e0-6fda-4187-8742-68c6731685ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25773, 647, 717, 14, 72, "Input",ExpressionUUID->"73427469-e718-49d4-882d-1f5d0f859cd3"],
Cell[26493, 663, 518, 9, 41, "Output",ExpressionUUID->"6faf9f59-5ddb-4762-9ab5-fa53578d5614"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27048, 677, 429, 7, 42, "Input",ExpressionUUID->"040634f8-24c2-4827-a923-ce64586fad2f"],
Cell[27480, 686, 1298, 34, 59, "Output",ExpressionUUID->"31da2311-efff-49a2-a8fe-1409c59963ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28815, 725, 525, 11, 42, "Input",ExpressionUUID->"57ab3d8b-e685-4a0c-9b44-aa8bbced8ad7"],
Cell[29343, 738, 2232, 52, 46, "Output",ExpressionUUID->"f91491c4-28c9-4c53-a019-209f0c12f50f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31612, 795, 710, 14, 127, "Input",ExpressionUUID->"1cf3d7ff-3bb9-4136-b54a-c2581539dbb8"],
Cell[32325, 811, 2077, 49, 206, "Output",ExpressionUUID->"a08796d9-f6b9-4c78-9aa3-43f796738967"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34439, 865, 705, 14, 127, "Input",ExpressionUUID->"e0879790-8133-4068-9d4c-c0aad24dacea"],
Cell[35147, 881, 3032, 63, 206, "Output",ExpressionUUID->"54780938-f2e7-44c5-8411-b23d34af8450"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38216, 949, 716, 14, 127, "Input",ExpressionUUID->"4d10ab46-0493-4db6-90c1-dadce8f76ca9"],
Cell[38935, 965, 2698, 67, 206, "Output",ExpressionUUID->"05d6ab2f-542f-418c-8c8f-e3413a7bceb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41670, 1037, 322, 6, 31, "Input",ExpressionUUID->"a2502236-8492-43ef-9006-827deceb49c5"],
Cell[41995, 1045, 400, 7, 41, "Output",ExpressionUUID->"a665d55b-53c7-4e4a-ad8c-deee05330d57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42432, 1057, 708, 14, 127, "Input",ExpressionUUID->"948e764d-e746-4100-af7d-cc7d1e011d50"],
Cell[43143, 1073, 1600, 37, 206, "Output",ExpressionUUID->"a135432b-aa31-436d-9525-ad44ff8debd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44780, 1115, 711, 14, 127, "Input",ExpressionUUID->"2d797000-c109-4ac8-b9e8-9245307b8dc2"],
Cell[45494, 1131, 2713, 67, 206, "Output",ExpressionUUID->"5a5f2310-01d7-4f13-81c8-cd0b109f8e4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48244, 1203, 584, 12, 65, "Input",ExpressionUUID->"70dd0873-4afc-4d9a-bafa-2e95700ccb01"],
Cell[48831, 1217, 8336, 168, 206, "Output",ExpressionUUID->"9b6aeb1c-59e6-4430-854b-01933b20f27e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57204, 1390, 421, 8, 42, "Input",ExpressionUUID->"f074406f-33c0-475e-b61f-41f4fcd44d1d"],
Cell[57628, 1400, 12129, 239, 182, "Output",ExpressionUUID->"eeb9baa5-78b1-406b-80aa-71b880e2380b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69794, 1644, 506, 9, 65, "Input",ExpressionUUID->"400ea067-c238-4b77-a80b-97e625a8d2f4"],
Cell[70303, 1655, 119496, 2278, 437, "Output",ExpressionUUID->"72238d71-76c9-4027-a491-ab7e7aa397f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189836, 3938, 324, 7, 31, "Input",ExpressionUUID->"3f4b32af-4521-4a1d-bbff-b767c7e5e728"],
Cell[190163, 3947, 214, 4, 35, "Output",ExpressionUUID->"3871126a-5617-453f-8233-79db729e29f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190414, 3956, 262, 5, 51, "Input",ExpressionUUID->"7d485b3f-8ccc-4b42-91fb-a7995e000ce8"],
Cell[190679, 3963, 215, 4, 35, "Output",ExpressionUUID->"e01d2a5a-3620-4b20-9908-28d935738ba6"]
}, Open  ]],
Cell[190909, 3970, 152, 3, 31, "Input",ExpressionUUID->"edcbc9af-ee85-4093-a8ab-3424b4cbfb14"],
Cell[191064, 3975, 152, 3, 31, "Input",ExpressionUUID->"43e114f4-4f3f-47c0-87dd-589ff54c36be"]
}
]
*)

(* End of internal cache information *)

