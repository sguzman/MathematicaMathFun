#!/usr/bin/env wolframscript
(* ::Package:: *)

(* ::Input:: *)
(*a[x_]:=a[x]=TimeSeriesThread[Total,x]*)
(*b[x_,y_]:=b[x,y]=TimeSeriesThread[Divide,{x,y}]*)
(*c[x_]:=c[x]=Map[b[#,a[x]]&,x]*)
(*ClearAll[a,b,c,d,e,f,g]*)


(* ::Input:: *)
(**)


(* ::Input:: *)
(**)


(* ::Input:: *)
(*FinancialData["NASDAQ:AAPL","Close",{{2019}}]*)


(* ::Input:: *)
(*FinancialData["NASDAQ:MSFT","Close",{{2019}}]*)


(* ::Input:: *)
(*c[Out[8],Out[9]]*)


(* ::Input:: *)
(*c[{Out[8],Out[9]}]*)


(* ::Input:: *)
(*a[x]*)


(* ::Input:: *)
(**)


(* ::Input:: *)
(*a[x_]:=a[x]=TimeSeriesThread[Total,x]*)
(*b[x_,y_]:=b[x,y]=TimeSeriesThread[Divide,{x,y}]*)
(*c[x_]:=c[x]=Map[b[#,a[x]]&,x]*)


(* ::Input:: *)
(*c[{TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVlF1oU3cYxo/syrBRqV9lSKwyJhW9mLLVwQLRNjnnJMaeExVXzWzmR1cV*)
(*MfhNVQhj0XnhIswpFTcj6uhugoJKUCol+AFSnHrTgmxLClIhojIoRQW1/n+P*)
(*F56bh/d9n/d5v/6cWeu2JTdOsCzrlWW+QqavJTyO2Sm3Fr/Div/zEmOXDxi0*)
(*rCHsWpPhFXq+Bu2JLcT7iYdmS2etwcbcPuzQSeUpPxMymO6c1kK9kuKH4ZdX*)
(*Sre3Fb27Bitn77Xi74rAu2mwsXg7oroG+4MJxecbrHSnZEci1GkHM+9535E3*)
(*msWufW8wHDiNfgr9dP6OQWvwIfyBc+L9By58JZ3nEfUL3zoqfipKf78bTJeu*)
(*RNEfi6LbYpOXtdHxwGDOYLi6zqH/qs3cJ2zu0E48kBfiT3deF29EumGHPrc4*)
(*7Gu3Q38F+T9ysZ/jH5zsovOv7IcO/Y4o7zHYtMHwxu/t0vdR7NQz7OAj+Xtd*)
(*+j8s/q/Ymaku/Xkx9vRZDP29MXTqwNwaV3t0mXO6y/3O03+gWfv6jb1k/mEP*)
(*+bKtObXH4SjzLteeh3SXXfgDHbqLzV2a5kXp2zWYDQ3rHf2l97WTuH1f+XPQ*)
(*Hbih+vXsu9auvUcd4q3sszjdQecbh33f1b6vYZeeOuoTO/8AndB2vYcX0hnD*)
(*zvTJ/4XusEp3OCL7kPZtYRfnyP+D7r9Id9rE/Ut/ys9dx9+P9C5jV5O6x4js*)
(*T2O6a4w6FdUZ072+5M6jDfDsMzH8n4iflc7cD95nwa4yd3mr9Gaq7zrVn6l3*)
(*863izer7nvqO6x2Ble5jMeb7RfYK5f2t+XJ6txfYl98Y073I67zCPFM+1zy9*)
(*6Pi9mv+meNPizPO/QevqcFx9Guwf2B+HdzzO/EPYpT/izNdMfmBVXPsjb7QA*)
(*v5v8bGi1eG9Ur34pOmsVPwnfTxv/+H9uKfU/Bkfxh6tl5R1MmD4H9yXI3yw7*)
(*noDfBQaPJNCdtIy81/DLG7Hz24UPDBZ6ZrVxz03LyOsSNrRR52Ub+2nw2G+9*)
(*R93JHv19hT+0BHvheo89dYC5Q4pvJq/plEfdix77PUdeYIfiafzdKfJq58X7*)
(*ibxMHzzrksccP6pus/paA8/uUR81eKUidvE2ev4TxceIdy7w2dMBH92Dvvbt*)
(*w8/69LkHv9Uv/w3xg0nuNyOJf1ES3dXJ8FuNy+bM*)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1],TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVUl9IU3EYvTMJWSWZix6yNS2ohUWx/gi6WEjsoQJXEOrutnvvbKGGrgd9*)
(*WBEbooGmPvRQo5eR9FCooVJMSq3RQ8kIgvJCDzEhK5qFQVNLiPJ3jtC9L4fv*)
(*3/nOd363VGs9e8EkSdKKJD7bsLvO9Q8T8braVbR1XhGxpHcIdDnGUHcX1a+i*)
(*EvpkyLsc6MsMuEQ946kVaBu+LjAR/oa4s5nxkMBn6RsCXbPTiK0nBUr2p+Dz*)
(*3ObcdoHR7IjI2+RWxJbXzMfA6/aQrwk8Ug14c0nE+hj64uOcL/Si3+xF/hXy*)
(*znov6pPA1Bz6zNtk9svYayKWyrh/s4y75r3Yv+BFPuHFfUdk+HJRRj2B+dQ9*)
(*oPM3eCINPuhpBLpVH/X64Xc1YmcTMcK+Qz74VemDj1eZf844TZ4/Ptyj++DP*)
(*MudWUM++Yf9GP3RvBaar1vb7uY942Y+7dD/uXfBjXg4gdgUwv1vBfVXAgQoF*)
(*fOcQe5ZFXyLcy/4SBZiv0AfyKQH4B8x4XgpUQjNir5I8AB53LAB/dyjwKQ9o*)
(*6UM9Ph7Ae34N4P4eoNyPOWc39tirwJ9sYV/WD94c/Z+mT23QE/lJ/Zd4301i*)
(*hwKfWqmnW4HuPtbv4F7rHHUusm5V8V47VbxXhYr9Q+hLTdCnF+hPTjKfQ9y/*)
(*RaUvmMuWMrYSC8HvqAR/+jRRNqDSX6bC/wIV77RJoKQXU88Z5N2N1HsLeUsX*)
(*4tkH1J/gvh4DXzR7gvtKqKuLPszgvtwX/j/UkzzKfb/W/iMV7zfF+x8peL98*)
(*8FqhL+PZy7k6g5+ZyCD9/s53WgJP9gd49Grwd1Zy3oT77YcRx2O8K8i7DtK3*)
(*PPq0zpCPOvexbub+ctZrWL9L/1pYb+C+cupopo7LvPsY71E4X0Y/39K/AvX/*)
(*OyR9F98xx3vdBv3RVBvvAr8SGqWPvdTVzni/4f0lfQP0DO9h3zXqW/sf1mu4*)
(*+z3vKNYwl+V/s8S9RehLFmp4B5OG9ytg/riG+WrUnRr7GokxDXxTwNlpzEfS*)
(*3DeGefkh66OMP2vwSwqC1xyE7/MadI2Q/z7mHE8QpybAKy1TVxax/SP0hhY1*)
(*+hIEfw0xjD2W89ijnwrivnbUrUMGlOyDAhPhd+z7EKR+xKHHQddfaPz+9A==*)
(**)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1]}]*)


(* ::Input:: *)
(*DateListPlot[*)
(*{TemporalData[TimeSeries, {{{{Divide[Quantity[39.47999954223633, "USDollars"]], Divide[Quantity[140.60000228881836`, "USDollars"]]}, {Divide[Quantity[35.54750061035156, "USDollars"]], Divide[Quantity[132.94750213623047`, "USDollars"]]}, {Divide[Quantity[37.064998626708984`, "USDollars"]], Divide[Quantity[138.99499893188477`, "USDollars"]]}, {Divide[Quantity[36.98249816894531, "USDollars"]], Divide[Quantity[139.04249572753906`, "USDollars"]]}, {Divide[Quantity[37.6875, "USDollars"]], Divide[Quantity[140.4875030517578, "USDollars"]]}, {Divide[Quantity[38.32749938964844, "USDollars"]], Divide[Quantity[142.59749603271484`, "USDollars"]]}, {Divide[Quantity[38.45000076293945, "USDollars"]], Divide[Quantity[142.04999923706055`, "USDollars"]]}, {Divide[Quantity[38.0724983215332, "USDollars"]], Divide[Quantity[140.87250137329102`, "USDollars"]]}, {Divide[Quantity[37.5, "USDollars"]], Divide[Quantity[139.5500030517578, "USDollars"]]}, {Divide[Quantity[38.26750183105469, "USDollars"]], Divide[Quantity[143.27750396728516`, "USDollars"]]}, {Divide[Quantity[38.73500061035156, "USDollars"]], Divide[Quantity[144.11499786376953`, "USDollars"]]}, {Divide[Quantity[38.96500015258789, "USDollars"]], Divide[Quantity[145.08500289916992`, "USDollars"]]}, {Divide[Quantity[39.20500183105469, "USDollars"]], Divide[Quantity[146.91500091552734`, "USDollars"]]}, {Divide[Quantity[38.32500076293945, "USDollars"]], Divide[Quantity[144.00500106811523`, "USDollars"]]}, {Divide[Quantity[38.47999954223633, "USDollars"]], Divide[Quantity[145.18999862670898`, "USDollars"]]}, {Divide[Quantity[38.17499923706055, "USDollars"]], Divide[Quantity[144.37499618530273`, "USDollars"]]}, {Divide[Quantity[39.439998626708984`, "USDollars"]], Divide[Quantity[146.6099967956543, "USDollars"]]}, {Divide[Quantity[39.07500076293945, "USDollars"]], Divide[Quantity[144.15500259399414`, "USDollars"]]}, {Divide[Quantity[38.66999816894531, "USDollars"]], Divide[Quantity[141.61000061035156`, "USDollars"]]}, {Divide[Quantity[41.3125, "USDollars"]], Divide[Quantity[147.69249725341797`, "USDollars"]]}, {Divide[Quantity[41.61000061035156, "USDollars"]], Divide[Quantity[146.04000091552734`, "USDollars"]]}, {Divide[Quantity[41.630001068115234`, "USDollars"]], Divide[Quantity[144.4099998474121, "USDollars"]]}, {Divide[Quantity[42.8125, "USDollars"]], Divide[Quantity[148.55249786376953`, "USDollars"]]}, {Divide[Quantity[43.54499816894531, "USDollars"]], Divide[Quantity[150.76499938964844`, "USDollars"]]}, {Divide[Quantity[43.560001373291016`, "USDollars"]], Divide[Quantity[149.5900001525879, "USDollars"]]}, {Divide[Quantity[42.73500061035156, "USDollars"]], Divide[Quantity[148.00499725341797`, "USDollars"]]}, {Divide[Quantity[42.602500915527344`, "USDollars"]], Divide[Quantity[148.27249908447266`, "USDollars"]]}, {Divide[Quantity[42.35749816894531, "USDollars"]], Divide[Quantity[147.6074981689453, "USDollars"]]}, {Divide[Quantity[42.72249984741211, "USDollars"]], Divide[Quantity[149.61249923706055`, "USDollars"]]}, {Divide[Quantity[42.54499816894531, "USDollars"]], Divide[Quantity[149.35499572753906`, "USDollars"]]}, {Divide[Quantity[42.70000076293945, "USDollars"]], Divide[Quantity[149.60000228881836`, "USDollars"]]}, {Divide[Quantity[42.60499954223633, "USDollars"]], Divide[Quantity[150.82500076293945`, "USDollars"]]}, {Divide[Quantity[42.73249816894531, "USDollars"]], Divide[Quantity[150.90249633789062`, "USDollars"]]}, {Divide[Quantity[43.00749969482422, "USDollars"]], Divide[Quantity[150.15750122070312`, "USDollars"]]}, {Divide[Quantity[42.76499938964844, "USDollars"]], Divide[Quantity[152.1750030517578, "USDollars"]]}, {Divide[Quantity[43.24250030517578, "USDollars"]], Divide[Quantity[154.2125015258789, "USDollars"]]}, {Divide[Quantity[43.557498931884766`, "USDollars"]], Divide[Quantity[155.1474952697754, "USDollars"]]}, {Divide[Quantity[43.58250045776367, "USDollars"]], Divide[Quantity[155.94250106811523`, "USDollars"]]}, {Divide[Quantity[43.717498779296875`, "USDollars"]], Divide[Quantity[155.8874969482422, "USDollars"]]}, {Divide[Quantity[43.287498474121094`, "USDollars"]], Divide[Quantity[155.31749725341797`, "USDollars"]]}, {Divide[Quantity[43.74250030517578, "USDollars"]], Divide[Quantity[156.27249908447266`, "USDollars"]]}, {Divide[Quantity[43.962501525878906`, "USDollars"]], Divide[Quantity[156.22250366210938`, "USDollars"]]}, {Divide[Quantity[43.88249969482422, "USDollars"]], Divide[Quantity[155.5824966430664, "USDollars"]]}, {Divide[Quantity[43.630001068115234`, "USDollars"]], Divide[Quantity[155.38000106811523`, "USDollars"]]}, {Divide[Quantity[43.125, "USDollars"]], Divide[Quantity[153.63500213623047`, "USDollars"]]}, {Divide[Quantity[44.724998474121094`, "USDollars"]], Divide[Quantity[157.55500030517578`, "USDollars"]]}, {Divide[Quantity[45.227500915527344`, "USDollars"]], Divide[Quantity[158.84750366210938`, "USDollars"]]}, {Divide[Quantity[45.4275016784668, "USDollars"]], Divide[Quantity[159.9275016784668, "USDollars"]]}, {Divide[Quantity[45.932498931884766`, "USDollars"]], Divide[Quantity[160.5224952697754, "USDollars"]]}, {Divide[Quantity[46.529998779296875`, "USDollars"]], Divide[Quantity[162.44000244140625`, "USDollars"]]}, {Divide[Quantity[47.005001068115234`, "USDollars"]], Divide[Quantity[164.57500076293945`, "USDollars"]]}, {Divide[Quantity[46.63249969482422, "USDollars"]], Divide[Quantity[164.28250122070312`, "USDollars"]]}, {Divide[Quantity[47.040000915527344`, "USDollars"]], Divide[Quantity[164.55999755859375`, "USDollars"]]}, {Divide[Quantity[48.772499084472656`, "USDollars"]], Divide[Quantity[168.99250030517578`, "USDollars"]]}, {Divide[Quantity[47.76250076293945, "USDollars"]], Divide[Quantity[164.81250381469727`, "USDollars"]]}, {Divide[Quantity[47.185001373291016`, "USDollars"]], Divide[Quantity[164.8450050354004, "USDollars"]]}, {Divide[Quantity[46.6974983215332, "USDollars"]], Divide[Quantity[164.60750198364258`, "USDollars"]]}, {Divide[Quantity[47.11750030517578, "USDollars"]], Divide[Quantity[163.8874969482422, "USDollars"]]}, {Divide[Quantity[47.18000030517578, "USDollars"]], Divide[Quantity[164.11000061035156`, "USDollars"]]}, {Divide[Quantity[47.48749923706055, "USDollars"]], Divide[Quantity[165.4275016784668, "USDollars"]]}, {Divide[Quantity[47.810001373291016`, "USDollars"]], Divide[Quantity[166.82999801635742`, "USDollars"]]}, {Divide[Quantity[48.505001068115234`, "USDollars"]], Divide[Quantity[167.69500350952148`, "USDollars"]]}, {Divide[Quantity[48.837501525878906`, "USDollars"]], Divide[Quantity[168.80750274658203`, "USDollars"]]}, {Divide[Quantity[48.92250061035156, "USDollars"]], Divide[Quantity[168.28250122070312`, "USDollars"]]}, {Divide[Quantity[49.25, "USDollars"]], Divide[Quantity[169.13999938964844`, "USDollars"]]}, {Divide[Quantity[50.025001525878906`, "USDollars"]], Divide[Quantity[169.9550018310547, "USDollars"]]}, {Divide[Quantity[49.875, "USDollars"]], Divide[Quantity[169.15499877929688`, "USDollars"]]}, {Divide[Quantity[50.154998779296875`, "USDollars"]], Divide[Quantity[170.34500122070312`, "USDollars"]]}, {Divide[Quantity[49.73749923706055, "USDollars"]], Divide[Quantity[170.06750106811523`, "USDollars"]]}, {Divide[Quantity[49.717498779296875`, "USDollars"]], Divide[Quantity[170.66749572753906`, "USDollars"]]}, {Divide[Quantity[49.807498931884766`, "USDollars"]], Divide[Quantity[170.85750198364258`, "USDollars"]]}, {Divide[Quantity[49.8125, "USDollars"]], Divide[Quantity[170.5824966430664, "USDollars"]]}, {Divide[Quantity[50.782501220703125`, "USDollars"]], Divide[Quantity[172.55249786376953`, "USDollars"]]}, {Divide[Quantity[50.96500015258789, "USDollars"]], Divide[Quantity[174.33500289916992`, "USDollars"]]}, {Divide[Quantity[51.13249969482422, "USDollars"]], Divide[Quantity[174.8925018310547, "USDollars"]]}, {Divide[Quantity[51.869998931884766`, "USDollars"]], Divide[Quantity[177.31000137329102`, "USDollars"]]}, {Divide[Quantity[51.790000915527344`, "USDollars"]], Divide[Quantity[176.8000030517578, "USDollars"]]}, {Divide[Quantity[51.31999969482422, "USDollars"]], Divide[Quantity[180.4699935913086, "USDollars"]]}, {Divide[Quantity[51.07500076293945, "USDollars"]], Divide[Quantity[180.9650001525879, "USDollars"]]}, {Divide[Quantity[51.15250015258789, "USDollars"]], Divide[Quantity[180.92250442504883`, "USDollars"]]}, {Divide[Quantity[50.16749954223633, "USDollars"]], Divide[Quantity[180.76750564575195`, "USDollars"]]}, {Divide[Quantity[52.630001068115234`, "USDollars"]], Divide[Quantity[180.5099983215332, "USDollars"]]}, {Divide[Quantity[52.287498474121094`, "USDollars"]], Divide[Quantity[178.49749755859375`, "USDollars"]]}, {Divide[Quantity[52.9375, "USDollars"]], Divide[Quantity[181.83749389648438`, "USDollars"]]}, {Divide[Quantity[52.119998931884766`, "USDollars"]], Divide[Quantity[180.26999282836914`, "USDollars"]]}, {Divide[Quantity[50.71500015258789, "USDollars"]], Divide[Quantity[176.2349967956543, "USDollars"]]}, {Divide[Quantity[50.724998474121094`, "USDollars"]], Divide[Quantity[176.23500061035156`, "USDollars"]]}, {Divide[Quantity[50.18000030517578, "USDollars"]], Divide[Quantity[175.68000030517578`, "USDollars"]]}, {Divide[Quantity[49.29499816894531, "USDollars"]], Divide[Quantity[176.42499542236328`, "USDollars"]]}, {Divide[Quantity[46.43000030517578, "USDollars"]], Divide[Quantity[169.77999877929688`, "USDollars"]]}, {Divide[Quantity[47.165000915527344`, "USDollars"]], Divide[Quantity[171.89500427246094`, "USDollars"]]}, {Divide[Quantity[47.72999954223633, "USDollars"]], Divide[Quantity[173.74999618530273`, "USDollars"]]}, {Divide[Quantity[47.52000045776367, "USDollars"]], Divide[Quantity[176.44999313354492`, "USDollars"]]}, {Divide[Quantity[47.25, "USDollars"]], Divide[Quantity[175.32000732421875`, "USDollars"]]}, {Divide[Quantity[45.772499084472656`, "USDollars"]], Divide[Quantity[171.99250030517578`, "USDollars"]]}, {Divide[Quantity[46.650001525878906`, "USDollars"]], Divide[Quantity[173.5500030517578, "USDollars"]]}, {Divide[Quantity[45.69499969482422, "USDollars"]], Divide[Quantity[173.36499786376953`, "USDollars"]]}, {Divide[Quantity[44.915000915527344`, "USDollars"]], Divide[Quantity[171.09500122070312`, "USDollars"]]}, {Divide[Quantity[44.74250030517578, "USDollars"]], Divide[Quantity[170.9824981689453, "USDollars"]]}, {Divide[Quantity[44.557498931884766`, "USDollars"]], Divide[Quantity[170.71750259399414`, "USDollars"]]}, {Divide[Quantity[44.345001220703125`, "USDollars"]], Divide[Quantity[169.28500366210938`, "USDollars"]]}, {Divide[Quantity[44.57500076293945, "USDollars"]], Divide[Quantity[170.30500411987305`, "USDollars"]]}, {Divide[Quantity[43.76750183105469, "USDollars"]], Divide[Quantity[167.44750213623047`, "USDollars"]]}, {Divide[Quantity[43.32500076293945, "USDollars"]], Divide[Quantity[163.16499710083008`, "USDollars"]]}, {Divide[Quantity[44.90999984741211, "USDollars"]], Divide[Quantity[168.07000350952148`, "USDollars"]]}, {Divide[Quantity[45.6349983215332, "USDollars"]], Divide[Quantity[171.4650001525879, "USDollars"]]}, {Divide[Quantity[46.30500030517578, "USDollars"]], Divide[Quantity[174.125, "USDollars"]]}, {Divide[Quantity[47.537498474121094`, "USDollars"]], Divide[Quantity[178.93749237060547`, "USDollars"]]}, {Divide[Quantity[48.14500045776367, "USDollars"]], Divide[Quantity[180.7450065612793, "USDollars"]]}, {Divide[Quantity[48.70249938964844, "USDollars"]], Divide[Quantity[180.80250549316406`, "USDollars"]]}, {Divide[Quantity[48.54750061035156, "USDollars"]], Divide[Quantity[180.03750610351562`, "USDollars"]]}, {Divide[Quantity[48.537498474121094`, "USDollars"]], Divide[Quantity[180.85750579833984`, "USDollars"]]}, {Divide[Quantity[48.185001373291016`, "USDollars"]], Divide[Quantity[180.6349983215332, "USDollars"]]}, {Divide[Quantity[48.47249984741211, "USDollars"]], Divide[Quantity[181.32250595092773`, "USDollars"]]}, {Divide[Quantity[49.61249923706055, "USDollars"]], Divide[Quantity[184.77250289916992`, "USDollars"]]}, {Divide[Quantity[49.467498779296875`, "USDollars"]], Divide[Quantity[185.15750122070312`, "USDollars"]]}, {Divide[Quantity[49.8650016784668, "USDollars"]], Divide[Quantity[186.81499862670898`, "USDollars"]]}, {Divide[Quantity[49.69499969482422, "USDollars"]], Divide[Quantity[186.66500091552734`, "USDollars"]]}, {Divide[Quantity[49.64500045776367, "USDollars"]], Divide[Quantity[187.42499923706055`, "USDollars"]]}, {Divide[Quantity[48.89250183105469, "USDollars"]], Divide[Quantity[182.32249450683594`, "USDollars"]]}, {Divide[Quantity[49.95000076293945, "USDollars"]], Divide[Quantity[183.8799934387207, "USDollars"]]}, {Divide[Quantity[49.935001373291016`, "USDollars"]], Divide[Quantity[184.0849952697754, "USDollars"]]}, {Divide[Quantity[49.47999954223633, "USDollars"]], Divide[Quantity[183.44000625610352`, "USDollars"]]}, {Divide[Quantity[50.38750076293945, "USDollars"]], Divide[Quantity[186.0674934387207, "USDollars"]]}, {Divide[Quantity[50.682498931884766`, "USDollars"]], Divide[Quantity[187.26250076293945`, "USDollars"]]}, {Divide[Quantity[51.102500915527344`, "USDollars"]], Divide[Quantity[188.56250762939453`, "USDollars"]]}, {Divide[Quantity[51.057498931884766`, "USDollars"]], Divide[Quantity[188.11749649047852`, "USDollars"]]}, {Divide[Quantity[50.005001068115234`, "USDollars"]], Divide[Quantity[186.96500778198242`, "USDollars"]]}, {Divide[Quantity[50.310001373291016`, "USDollars"]], Divide[Quantity[186.7700080871582, "USDollars"]]}, {Divide[Quantity[50.807498931884766`, "USDollars"]], Divide[Quantity[188.6575050354004, "USDollars"]]}, {Divide[Quantity[50.4375, "USDollars"]], Divide[Quantity[188.83749389648438`, "USDollars"]]}, {Divide[Quantity[50.82500076293945, "USDollars"]], Divide[Quantity[189.72499465942383`, "USDollars"]]}, {Divide[Quantity[51.3025016784668, "USDollars"]], Divide[Quantity[190.20249557495117`, "USDollars"]]}, {Divide[Quantity[51.125, "USDollars"]], Divide[Quantity[188.2050018310547, "USDollars"]]}, {Divide[Quantity[50.837501525878906`, "USDollars"]], Divide[Quantity[187.10750579833984`, "USDollars"]]}, {Divide[Quantity[51.415000915527344`, "USDollars"]], Divide[Quantity[187.83499908447266`, "USDollars"]]}, {Divide[Quantity[50.647499084472656`, "USDollars"]], Divide[Quantity[187.26749420166016`, "USDollars"]]}, {Divide[Quantity[51.80500030517578, "USDollars"]], Divide[Quantity[190.23499298095703`, "USDollars"]]}, {Divide[Quantity[52.209999084472656`, "USDollars"]], Divide[Quantity[191.49999237060547`, "USDollars"]]}, {Divide[Quantity[52.16749954223633, "USDollars"]], Divide[Quantity[192.88750076293945`, "USDollars"]]}, {Divide[Quantity[51.755001068115234`, "USDollars"]], Divide[Quantity[191.94500350952148`, "USDollars"]]}, {Divide[Quantity[51.935001373291016`, "USDollars"]], Divide[Quantity[193.27499771118164`, "USDollars"]]}, {Divide[Quantity[52.41999816894531, "USDollars"]], Divide[Quantity[193.4499969482422, "USDollars"]]}, {Divide[Quantity[52.19499969482422, "USDollars"]], Divide[Quantity[192.54500579833984`, "USDollars"]]}, {Divide[Quantity[53.2599983215332, "USDollars"]], Divide[Quantity[189.53000259399414`, "USDollars"]]}, {Divide[Quantity[52.10749816894531, "USDollars"]], Divide[Quantity[190.16749572753906`, "USDollars"]]}, {Divide[Quantity[51.005001068115234`, "USDollars"]], Divide[Quantity[187.9049949645996, "USDollars"]]}, {Divide[Quantity[48.334999084472656`, "USDollars"]], Divide[Quantity[180.54500579833984`, "USDollars"]]}, {Divide[Quantity[49.25, "USDollars"]], Divide[Quantity[183.94000244140625`, "USDollars"]]}, {Divide[Quantity[49.7599983215332, "USDollars"]], Divide[Quantity[185.03999710083008`, "USDollars"]]}, {Divide[Quantity[50.85749816894531, "USDollars"]], Divide[Quantity[189.74749755859375`, "USDollars"]]}, {Divide[Quantity[50.247501373291016`, "USDollars"]], Divide[Quantity[187.9575080871582, "USDollars"]]}, {Divide[Quantity[50.119998931884766`, "USDollars"]], Divide[Quantity[185.90999221801758`, "USDollars"]]}, {Divide[Quantity[52.24250030517578, "USDollars"]], Divide[Quantity[190.8425064086914, "USDollars"]]}, {Divide[Quantity[50.6875, "USDollars"]], Divide[Quantity[184.66749572753906`, "USDollars"]]}, {Divide[Quantity[50.435001373291016`, "USDollars"]], Divide[Quantity[184.11499404907227`, "USDollars"]]}, {Divide[Quantity[51.625, "USDollars"]], Divide[Quantity[187.7550048828125, "USDollars"]]}, {Divide[Quantity[52.587501525878906`, "USDollars"]], Divide[Quantity[190.99750518798828`, "USDollars"]]}, {Divide[Quantity[52.59000015258789, "USDollars"]], Divide[Quantity[189.84999465942383`, "USDollars"]]}, {Divide[Quantity[53.15999984741211, "USDollars"]], Divide[Quantity[191.94999313354492`, "USDollars"]]}, {Divide[Quantity[53.1150016784668, "USDollars"]], Divide[Quantity[190.89500045776367`, "USDollars"]]}, {Divide[Quantity[50.65999984741211, "USDollars"]], Divide[Quantity[184.04999923706055`, "USDollars"]]}, {Divide[Quantity[51.622501373291016`, "USDollars"]], Divide[Quantity[187.0724983215332, "USDollars"]]}, {Divide[Quantity[51.040000915527344`, "USDollars"]], Divide[Quantity[186.7800064086914, "USDollars"]]}, {Divide[Quantity[51.38249969482422, "USDollars"]], Divide[Quantity[186.94249725341797`, "USDollars"]]}, {Divide[Quantity[52.252498626708984`, "USDollars"]], Divide[Quantity[190.37249374389648`, "USDollars"]]}, {Divide[Quantity[52.185001373291016`, "USDollars"]], Divide[Quantity[190.04500198364258`, "USDollars"]]}, {Divide[Quantity[51.42499923706055, "USDollars"]], Divide[Quantity[187.46499252319336`, "USDollars"]]}, {Divide[Quantity[52.29750061035156, "USDollars"]], Divide[Quantity[189.92750549316406`, "USDollars"]]}, {Divide[Quantity[53.31999969482422, "USDollars"]], Divide[Quantity[193.37000274658203`, "USDollars"]]}, {Divide[Quantity[53.314998626708984`, "USDollars"]], Divide[Quantity[192.4150047302246, "USDollars"]]}, {Divide[Quantity[53.54249954223633, "USDollars"]], Divide[Quantity[191.06250381469727`, "USDollars"]]}, {Divide[Quantity[54.17499923706055, "USDollars"]], Divide[Quantity[190.25500106811523`, "USDollars"]]}, {Divide[Quantity[55.897499084472656`, "USDollars"]], Divide[Quantity[192.01749420166016`, "USDollars"]]}, {Divide[Quantity[55.77130126953125, "USDollars"]], Divide[Quantity[193.2913055419922, "USDollars"]]}, {Divide[Quantity[54.6875, "USDollars"]], Divide[Quantity[192.00750732421875`, "USDollars"]]}, {Divide[Quantity[54.974998474121094`, "USDollars"]], Divide[Quantity[191.30500030517578`, "USDollars"]]}, {Divide[Quantity[55.17499923706055, "USDollars"]], Divide[Quantity[192.56499862670898`, "USDollars"]]}, {Divide[Quantity[55.692501068115234`, "USDollars"]], Divide[Quantity[194.21250534057617`, "USDollars"]]}, {Divide[Quantity[55.2400016784668, "USDollars"]], Divide[Quantity[196.31000900268555`, "USDollars"]]}, {Divide[Quantity[54.432498931884766`, "USDollars"]], Divide[Quantity[193.87250137329102`, "USDollars"]]}, {Divide[Quantity[54.68000030517578, "USDollars"]], Divide[Quantity[193.81999969482422`, "USDollars"]]}, {Divide[Quantity[54.41999816894531, "USDollars"]], Divide[Quantity[191.8000030517578, "USDollars"]]}, {Divide[Quantity[55.25749969482422, "USDollars"]], Divide[Quantity[194.61750030517578`, "USDollars"]]}, {Divide[Quantity[54.97249984741211, "USDollars"]], Divide[Quantity[194.51249313354492`, "USDollars"]]}, {Divide[Quantity[54.70500183105469, "USDollars"]], Divide[Quantity[192.43499755859375`, "USDollars"]]}, {Divide[Quantity[55.99250030517578, "USDollars"]], Divide[Quantity[195.02249908447266`, "USDollars"]]}, {Divide[Quantity[56.147499084472656`, "USDollars"]], Divide[Quantity[193.2175064086914, "USDollars"]]}, {Divide[Quantity[54.7400016784668, "USDollars"]], Divide[Quantity[189.38999557495117`, "USDollars"]]}, {Divide[Quantity[55.20500183105469, "USDollars"]], Divide[Quantity[191.48500061035156`, "USDollars"]]}, {Divide[Quantity[56.752498626708984`, "USDollars"]], Divide[Quantity[194.87249374389648`, "USDollars"]]}, {Divide[Quantity[56.76499938964844, "USDollars"]], Divide[Quantity[193.88499450683594`, "USDollars"]]}, {Divide[Quantity[56.099998474121094`, "USDollars"]], Divide[Quantity[191.7699966430664, "USDollars"]]}, {Divide[Quantity[56.75749969482422, "USDollars"]], Divide[Quantity[194.99750518798828`, "USDollars"]]}, {Divide[Quantity[57.522499084472656`, "USDollars"]], Divide[Quantity[196.62250518798828`, "USDollars"]]}, {Divide[Quantity[59.0525016784668, "USDollars"]], Divide[Quantity[198.73249435424805`, "USDollars"]]}, {Divide[Quantity[58.967498779296875`, "USDollars"]], Divide[Quantity[198.5175018310547, "USDollars"]]}, {Divide[Quantity[58.83000183105469, "USDollars"]], Divide[Quantity[200.40499877929688`, "USDollars"]]}, {Divide[Quantity[58.592498779296875`, "USDollars"]], Divide[Quantity[199.00250244140625`, "USDollars"]]}, {Divide[Quantity[58.81999969482422, "USDollars"]], Divide[Quantity[198.51000213623047`, "USDollars"]]}, {Divide[Quantity[59.102500915527344`, "USDollars"]], Divide[Quantity[196.51250457763672`, "USDollars"]]}, {Divide[Quantity[60.127498626708984`, "USDollars"]], Divide[Quantity[198.55749130249023`, "USDollars"]]}, {Divide[Quantity[59.9900016784668, "USDollars"]], Divide[Quantity[196.3599967956543, "USDollars"]]}, {Divide[Quantity[60.79499816894531, "USDollars"]], Divide[Quantity[198.03500366210938`, "USDollars"]]}, {Divide[Quantity[60.89500045776367, "USDollars"]], Divide[Quantity[200.83500289916992`, "USDollars"]]}, {Divide[Quantity[61.64500045776367, "USDollars"]], Divide[Quantity[202.37499618530273`, "USDollars"]]}, {Divide[Quantity[62.26250076293945, "USDollars"]], Divide[Quantity[206.4525032043457, "USDollars"]]}, {Divide[Quantity[60.8224983215332, "USDollars"]], Divide[Quantity[203.6525001525879, "USDollars"]]}, {Divide[Quantity[60.814998626708984`, "USDollars"]], Divide[Quantity[205.42499923706055`, "USDollars"]]}, {Divide[Quantity[62.189998626708984`, "USDollars"]], Divide[Quantity[205.55999374389648`, "USDollars"]]}, {Divide[Quantity[63.95500183105469, "USDollars"]], Divide[Quantity[207.6750030517578, "USDollars"]]}, {Divide[Quantity[64.375, "USDollars"]], Divide[Quantity[208.9250030517578, "USDollars"]]}, {Divide[Quantity[64.28250122070312, "USDollars"]], Divide[Quantity[208.7425079345703, "USDollars"]]}, {Divide[Quantity[64.30999755859375, "USDollars"]], Divide[Quantity[208.3699951171875, "USDollars"]]}, {Divide[Quantity[64.85749816894531, "USDollars"]], Divide[Quantity[209.11749267578125`, "USDollars"]]}, {Divide[Quantity[65.03500366210938, "USDollars"]], Divide[Quantity[210.99501037597656`, "USDollars"]]}, {Divide[Quantity[65.55000305175781, "USDollars"]], Divide[Quantity[211.66000366210938`, "USDollars"]]}, {Divide[Quantity[65.48999786376953, "USDollars"]], Divide[Quantity[212.56000518798828`, "USDollars"]]}, {Divide[Quantity[66.11750030517578, "USDollars"]], Divide[Quantity[213.42749786376953`, "USDollars"]]}, {Divide[Quantity[65.66000366210938, "USDollars"]], Divide[Quantity[213.72000122070312`, "USDollars"]]}, {Divide[Quantity[66.44000244140625, "USDollars"]], Divide[Quantity[216.41000366210938`, "USDollars"]]}, {Divide[Quantity[66.7750015258789, "USDollars"]], Divide[Quantity[217.11499786376953`, "USDollars"]]}, {Divide[Quantity[66.57250213623047, "USDollars"]], Divide[Quantity[216.9625015258789, "USDollars"]]}, {Divide[Quantity[65.79750061035156, "USDollars"]], Divide[Quantity[215.41749572753906`, "USDollars"]]}, {Divide[Quantity[65.50250244140625, "USDollars"]], Divide[Quantity[214.9824981689453, "USDollars"]]}, {Divide[Quantity[65.44499969482422, "USDollars"]], Divide[Quantity[215.03499603271484`, "USDollars"]]}, {Divide[Quantity[66.59249877929688, "USDollars"]], Divide[Quantity[217.82249450683594`, "USDollars"]]}, {Divide[Quantity[66.07250213623047, "USDollars"]], Divide[Quantity[218.10250091552734`, "USDollars"]]}, {Divide[Quantity[66.95999908447266, "USDollars"]], Divide[Quantity[219.2800064086914, "USDollars"]]}, {Divide[Quantity[66.8125, "USDollars"]], Divide[Quantity[218.1925048828125, "USDollars"]]}, {Divide[Quantity[66.04000091552734, "USDollars"]], Divide[Quantity[215.59000396728516`, "USDollars"]]}, {Divide[Quantity[64.86250305175781, "USDollars"]], Divide[Quantity[214.17250061035156`, "USDollars"]]}, {Divide[Quantity[65.43499755859375, "USDollars"]], Divide[Quantity[215.28500366210938`, "USDollars"]]}, {Divide[Quantity[66.3949966430664, "USDollars"]], Divide[Quantity[216.32498931884766`, "USDollars"]]}, {Divide[Quantity[67.67749786376953, "USDollars"]], Divide[Quantity[219.42749786376953`, "USDollars"]]}, {Divide[Quantity[66.7300033569336, "USDollars"]], Divide[Quantity[218.09000396728516`, "USDollars"]]}, {Divide[Quantity[67.12000274658203, "USDollars"]], Divide[Quantity[218.25000762939453`, "USDollars"]]}, {Divide[Quantity[67.69249725341797, "USDollars"]], Divide[Quantity[219.39249420166016`, "USDollars"]]}, {Divide[Quantity[67.86499786376953, "USDollars"]], Divide[Quantity[221.1050033569336, "USDollars"]]}, {Divide[Quantity[68.7874984741211, "USDollars"]], Divide[Quantity[223.31749725341797`, "USDollars"]]}, {Divide[Quantity[69.96499633789062, "USDollars"]], Divide[Quantity[225.4949951171875, "USDollars"]]}, {Divide[Quantity[70.10250091552734, "USDollars"]], Divide[Quantity[224.7925033569336, "USDollars"]]}, {Divide[Quantity[69.93499755859375, "USDollars"]], Divide[Quantity[224.30499267578125`, "USDollars"]]}, {Divide[Quantity[70.00499725341797, "USDollars"]], Divide[Quantity[225.71500396728516`, "USDollars"]]}, {Divide[Quantity[69.86000061035156, "USDollars"]], Divide[Quantity[227.27000427246094`, "USDollars"]]}, {Divide[Quantity[71., "USDollars"]], Divide[Quantity[228.41000366210938`, "USDollars"]]}, {Divide[Quantity[71.06749725341797, "USDollars"]], Divide[Quantity[228.44750213623047`, "USDollars"]]}, {Divide[Quantity[72.47750091552734, "USDollars"]], Divide[Quantity[231.14749908447266`, "USDollars"]]}, {Divide[Quantity[72.44999694824219, "USDollars"]], Divide[Quantity[231.41000366210938`, "USDollars"]]}, {Divide[Quantity[72.87999725341797, "USDollars"]], Divide[Quantity[230.4699935913086, "USDollars"]]}, {Divide[Quantity[73.4124984741211, "USDollars"]], Divide[Quantity[231.11249542236328`, "USDollars"]]}}}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 2, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 2}}, True, 12.1],TemporalData[TimeSeries, {{{{Divide[Quantity[101.12000274658203`, "USDollars"]], Divide[Quantity[140.60000228881836`, "USDollars"]]}, {Divide[Quantity[97.4000015258789, "USDollars"]], Divide[Quantity[132.94750213623047`, "USDollars"]]}, {Divide[Quantity[101.93000030517578`, "USDollars"]], Divide[Quantity[138.99499893188477`, "USDollars"]]}, {Divide[Quantity[102.05999755859375`, "USDollars"]], Divide[Quantity[139.04249572753906`, "USDollars"]]}, {Divide[Quantity[102.80000305175781`, "USDollars"]], Divide[Quantity[140.4875030517578, "USDollars"]]}, {Divide[Quantity[104.2699966430664, "USDollars"]], Divide[Quantity[142.59749603271484`, "USDollars"]]}, {Divide[Quantity[103.5999984741211, "USDollars"]], Divide[Quantity[142.04999923706055`, "USDollars"]]}, {Divide[Quantity[102.80000305175781`, "USDollars"]], Divide[Quantity[140.87250137329102`, "USDollars"]]}, {Divide[Quantity[102.05000305175781`, "USDollars"]], Divide[Quantity[139.5500030517578, "USDollars"]]}, {Divide[Quantity[105.01000213623047`, "USDollars"]], Divide[Quantity[143.27750396728516`, "USDollars"]]}, {Divide[Quantity[105.37999725341797`, "USDollars"]], Divide[Quantity[144.11499786376953`, "USDollars"]]}, {Divide[Quantity[106.12000274658203`, "USDollars"]], Divide[Quantity[145.08500289916992`, "USDollars"]]}, {Divide[Quantity[107.70999908447266`, "USDollars"]], Divide[Quantity[146.91500091552734`, "USDollars"]]}, {Divide[Quantity[105.68000030517578`, "USDollars"]], Divide[Quantity[144.00500106811523`, "USDollars"]]}, {Divide[Quantity[106.70999908447266`, "USDollars"]], Divide[Quantity[145.18999862670898`, "USDollars"]]}, {Divide[Quantity[106.19999694824219`, "USDollars"]], Divide[Quantity[144.37499618530273`, "USDollars"]]}, {Divide[Quantity[107.16999816894531`, "USDollars"]], Divide[Quantity[146.6099967956543, "USDollars"]]}, {Divide[Quantity[105.08000183105469`, "USDollars"]], Divide[Quantity[144.15500259399414`, "USDollars"]]}, {Divide[Quantity[102.94000244140625`, "USDollars"]], Divide[Quantity[141.61000061035156`, "USDollars"]]}, {Divide[Quantity[106.37999725341797`, "USDollars"]], Divide[Quantity[147.69249725341797`, "USDollars"]]}, {Divide[Quantity[104.43000030517578`, "USDollars"]], Divide[Quantity[146.04000091552734`, "USDollars"]]}, {Divide[Quantity[102.77999877929688`, "USDollars"]], Divide[Quantity[144.4099998474121, "USDollars"]]}, {Divide[Quantity[105.73999786376953`, "USDollars"]], Divide[Quantity[148.55249786376953`, "USDollars"]]}, {Divide[Quantity[107.22000122070312`, "USDollars"]], Divide[Quantity[150.76499938964844`, "USDollars"]]}, {Divide[Quantity[106.02999877929688`, "USDollars"]], Divide[Quantity[149.5900001525879, "USDollars"]]}, {Divide[Quantity[105.2699966430664, "USDollars"]], Divide[Quantity[148.00499725341797`, "USDollars"]]}, {Divide[Quantity[105.66999816894531`, "USDollars"]], Divide[Quantity[148.27249908447266`, "USDollars"]]}, {Divide[Quantity[105.25, "USDollars"]], Divide[Quantity[147.6074981689453, "USDollars"]]}, {Divide[Quantity[106.88999938964844`, "USDollars"]], Divide[Quantity[149.61249923706055`, "USDollars"]]}, {Divide[Quantity[106.80999755859375`, "USDollars"]], Divide[Quantity[149.35499572753906`, "USDollars"]]}, {Divide[Quantity[106.9000015258789, "USDollars"]], Divide[Quantity[149.60000228881836`, "USDollars"]]}, {Divide[Quantity[108.22000122070312`, "USDollars"]], Divide[Quantity[150.82500076293945`, "USDollars"]]}, {Divide[Quantity[108.16999816894531`, "USDollars"]], Divide[Quantity[150.90249633789062`, "USDollars"]]}, {Divide[Quantity[107.1500015258789, "USDollars"]], Divide[Quantity[150.15750122070312`, "USDollars"]]}, {Divide[Quantity[109.41000366210938`, "USDollars"]], Divide[Quantity[152.1750030517578, "USDollars"]]}, {Divide[Quantity[110.97000122070312`, "USDollars"]], Divide[Quantity[154.2125015258789, "USDollars"]]}, {Divide[Quantity[111.58999633789062`, "USDollars"]], Divide[Quantity[155.1474952697754, "USDollars"]]}, {Divide[Quantity[112.36000061035156`, "USDollars"]], Divide[Quantity[155.94250106811523`, "USDollars"]]}, {Divide[Quantity[112.16999816894531`, "USDollars"]], Divide[Quantity[155.8874969482422, "USDollars"]]}, {Divide[Quantity[112.02999877929688`, "USDollars"]], Divide[Quantity[155.31749725341797`, "USDollars"]]}, {Divide[Quantity[112.52999877929688`, "USDollars"]], Divide[Quantity[156.27249908447266`, "USDollars"]]}, {Divide[Quantity[112.26000213623047`, "USDollars"]], Divide[Quantity[156.22250366210938`, "USDollars"]]}, {Divide[Quantity[111.69999694824219`, "USDollars"]], Divide[Quantity[155.5824966430664, "USDollars"]]}, {Divide[Quantity[111.75, "USDollars"]], Divide[Quantity[155.38000106811523`, "USDollars"]]}, {Divide[Quantity[110.51000213623047`, "USDollars"]], Divide[Quantity[153.63500213623047`, "USDollars"]]}, {Divide[Quantity[112.83000183105469`, "USDollars"]], Divide[Quantity[157.55500030517578`, "USDollars"]]}, {Divide[Quantity[113.62000274658203`, "USDollars"]], Divide[Quantity[158.84750366210938`, "USDollars"]]}, {Divide[Quantity[114.5, "USDollars"]], Divide[Quantity[159.9275016784668, "USDollars"]]}, {Divide[Quantity[114.58999633789062`, "USDollars"]], Divide[Quantity[160.5224952697754, "USDollars"]]}, {Divide[Quantity[115.91000366210938`, "USDollars"]], Divide[Quantity[162.44000244140625`, "USDollars"]]}, {Divide[Quantity[117.56999969482422`, "USDollars"]], Divide[Quantity[164.57500076293945`, "USDollars"]]}, {Divide[Quantity[117.6500015258789, "USDollars"]], Divide[Quantity[164.28250122070312`, "USDollars"]]}, {Divide[Quantity[117.5199966430664, "USDollars"]], Divide[Quantity[164.55999755859375`, "USDollars"]]}, {Divide[Quantity[120.22000122070312`, "USDollars"]], Divide[Quantity[168.99250030517578`, "USDollars"]]}, {Divide[Quantity[117.05000305175781`, "USDollars"]], Divide[Quantity[164.81250381469727`, "USDollars"]]}, {Divide[Quantity[117.66000366210938`, "USDollars"]], Divide[Quantity[164.8450050354004, "USDollars"]]}, {Divide[Quantity[117.91000366210938`, "USDollars"]], Divide[Quantity[164.60750198364258`, "USDollars"]]}, {Divide[Quantity[116.7699966430664, "USDollars"]], Divide[Quantity[163.8874969482422, "USDollars"]]}, {Divide[Quantity[116.93000030517578`, "USDollars"]], Divide[Quantity[164.11000061035156`, "USDollars"]]}, {Divide[Quantity[117.94000244140625`, "USDollars"]], Divide[Quantity[165.4275016784668, "USDollars"]]}, {Divide[Quantity[119.0199966430664, "USDollars"]], Divide[Quantity[166.82999801635742`, "USDollars"]]}, {Divide[Quantity[119.19000244140625`, "USDollars"]], Divide[Quantity[167.69500350952148`, "USDollars"]]}, {Divide[Quantity[119.97000122070312`, "USDollars"]], Divide[Quantity[168.80750274658203`, "USDollars"]]}, {Divide[Quantity[119.36000061035156`, "USDollars"]], Divide[Quantity[168.28250122070312`, "USDollars"]]}, {Divide[Quantity[119.88999938964844`, "USDollars"]], Divide[Quantity[169.13999938964844`, "USDollars"]]}, {Divide[Quantity[119.93000030517578`, "USDollars"]], Divide[Quantity[169.9550018310547, "USDollars"]]}, {Divide[Quantity[119.27999877929688`, "USDollars"]], Divide[Quantity[169.15499877929688`, "USDollars"]]}, {Divide[Quantity[120.19000244140625`, "USDollars"]], Divide[Quantity[170.34500122070312`, "USDollars"]]}, {Divide[Quantity[120.33000183105469`, "USDollars"]], Divide[Quantity[170.06750106811523`, "USDollars"]]}, {Divide[Quantity[120.94999694824219`, "USDollars"]], Divide[Quantity[170.66749572753906`, "USDollars"]]}, {Divide[Quantity[121.05000305175781`, "USDollars"]], Divide[Quantity[170.85750198364258`, "USDollars"]]}, {Divide[Quantity[120.7699966430664, "USDollars"]], Divide[Quantity[170.5824966430664, "USDollars"]]}, {Divide[Quantity[121.7699966430664, "USDollars"]], Divide[Quantity[172.55249786376953`, "USDollars"]]}, {Divide[Quantity[123.37000274658203`, "USDollars"]], Divide[Quantity[174.33500289916992`, "USDollars"]]}, {Divide[Quantity[123.76000213623047`, "USDollars"]], Divide[Quantity[174.8925018310547, "USDollars"]]}, {Divide[Quantity[125.44000244140625`, "USDollars"]], Divide[Quantity[177.31000137329102`, "USDollars"]]}, {Divide[Quantity[125.01000213623047`, "USDollars"]], Divide[Quantity[176.8000030517578, "USDollars"]]}, {Divide[Quantity[129.14999389648438`, "USDollars"]], Divide[Quantity[180.4699935913086, "USDollars"]]}, {Divide[Quantity[129.88999938964844`, "USDollars"]], Divide[Quantity[180.9650001525879, "USDollars"]]}, {Divide[Quantity[129.77000427246094`, "USDollars"]], Divide[Quantity[180.92250442504883`, "USDollars"]]}, {Divide[Quantity[130.60000610351562`, "USDollars"]], Divide[Quantity[180.76750564575195`, "USDollars"]]}, {Divide[Quantity[127.87999725341797`, "USDollars"]], Divide[Quantity[180.5099983215332, "USDollars"]]}, {Divide[Quantity[126.20999908447266`, "USDollars"]], Divide[Quantity[178.49749755859375`, "USDollars"]]}, {Divide[Quantity[128.89999389648438`, "USDollars"]], Divide[Quantity[181.83749389648438`, "USDollars"]]}, {Divide[Quantity[128.14999389648438`, "USDollars"]], Divide[Quantity[180.26999282836914`, "USDollars"]]}, {Divide[Quantity[125.5199966430664, "USDollars"]], Divide[Quantity[176.2349967956543, "USDollars"]]}, {Divide[Quantity[125.51000213623047`, "USDollars"]], Divide[Quantity[176.23500061035156`, "USDollars"]]}, {Divide[Quantity[125.5, "USDollars"]], Divide[Quantity[175.68000030517578`, "USDollars"]]}, {Divide[Quantity[127.12999725341797`, "USDollars"]], Divide[Quantity[176.42499542236328`, "USDollars"]]}, {Divide[Quantity[123.3499984741211, "USDollars"]], Divide[Quantity[169.77999877929688`, "USDollars"]]}, {Divide[Quantity[124.7300033569336, "USDollars"]], Divide[Quantity[171.89500427246094`, "USDollars"]]}, {Divide[Quantity[126.0199966430664, "USDollars"]], Divide[Quantity[173.74999618530273`, "USDollars"]]}, {Divide[Quantity[128.92999267578125`, "USDollars"]], Divide[Quantity[176.44999313354492`, "USDollars"]]}, {Divide[Quantity[128.07000732421875`, "USDollars"]], Divide[Quantity[175.32000732421875`, "USDollars"]]}, {Divide[Quantity[126.22000122070312`, "USDollars"]], Divide[Quantity[171.99250030517578`, "USDollars"]]}, {Divide[Quantity[126.9000015258789, "USDollars"]], Divide[Quantity[173.5500030517578, "USDollars"]]}, {Divide[Quantity[127.66999816894531`, "USDollars"]], Divide[Quantity[173.36499786376953`, "USDollars"]]}, {Divide[Quantity[126.18000030517578`, "USDollars"]], Divide[Quantity[171.09500122070312`, "USDollars"]]}, {Divide[Quantity[126.23999786376953`, "USDollars"]], Divide[Quantity[170.9824981689453, "USDollars"]]}, {Divide[Quantity[126.16000366210938`, "USDollars"]], Divide[Quantity[170.71750259399414`, "USDollars"]]}, {Divide[Quantity[124.94000244140625`, "USDollars"]], Divide[Quantity[169.28500366210938`, "USDollars"]]}, {Divide[Quantity[125.7300033569336, "USDollars"]], Divide[Quantity[170.30500411987305`, "USDollars"]]}, {Divide[Quantity[123.68000030517578`, "USDollars"]], Divide[Quantity[167.44750213623047`, "USDollars"]]}, {Divide[Quantity[119.83999633789062`, "USDollars"]], Divide[Quantity[163.16499710083008`, "USDollars"]]}, {Divide[Quantity[123.16000366210938`, "USDollars"]], Divide[Quantity[168.07000350952148`, "USDollars"]]}, {Divide[Quantity[125.83000183105469`, "USDollars"]], Divide[Quantity[171.4650001525879, "USDollars"]]}, {Divide[Quantity[127.81999969482422`, "USDollars"]], Divide[Quantity[174.125, "USDollars"]]}, {Divide[Quantity[131.39999389648438`, "USDollars"]], Divide[Quantity[178.93749237060547`, "USDollars"]]}, {Divide[Quantity[132.60000610351562`, "USDollars"]], Divide[Quantity[180.7450065612793, "USDollars"]]}, {Divide[Quantity[132.10000610351562`, "USDollars"]], Divide[Quantity[180.80250549316406`, "USDollars"]]}, {Divide[Quantity[131.49000549316406`, "USDollars"]], Divide[Quantity[180.03750610351562`, "USDollars"]]}, {Divide[Quantity[132.32000732421875`, "USDollars"]], Divide[Quantity[180.85750579833984`, "USDollars"]]}, {Divide[Quantity[132.4499969482422, "USDollars"]], Divide[Quantity[180.6349983215332, "USDollars"]]}, {Divide[Quantity[132.85000610351562`, "USDollars"]], Divide[Quantity[181.32250595092773`, "USDollars"]]}, {Divide[Quantity[135.16000366210938`, "USDollars"]], Divide[Quantity[184.77250289916992`, "USDollars"]]}, {Divide[Quantity[135.69000244140625`, "USDollars"]], Divide[Quantity[185.15750122070312`, "USDollars"]]}, {Divide[Quantity[136.9499969482422, "USDollars"]], Divide[Quantity[186.81499862670898`, "USDollars"]]}, {Divide[Quantity[136.97000122070312`, "USDollars"]], Divide[Quantity[186.66500091552734`, "USDollars"]]}, {Divide[Quantity[137.77999877929688`, "USDollars"]], Divide[Quantity[187.42499923706055`, "USDollars"]]}, {Divide[Quantity[133.42999267578125`, "USDollars"]], Divide[Quantity[182.32249450683594`, "USDollars"]]}, {Divide[Quantity[133.92999267578125`, "USDollars"]], Divide[Quantity[183.8799934387207, "USDollars"]]}, {Divide[Quantity[134.14999389648438`, "USDollars"]], Divide[Quantity[184.0849952697754, "USDollars"]]}, {Divide[Quantity[133.9600067138672, "USDollars"]], Divide[Quantity[183.44000625610352`, "USDollars"]]}, {Divide[Quantity[135.67999267578125`, "USDollars"]], Divide[Quantity[186.0674934387207, "USDollars"]]}, {Divide[Quantity[136.5800018310547, "USDollars"]], Divide[Quantity[187.26250076293945`, "USDollars"]]}, {Divide[Quantity[137.4600067138672, "USDollars"]], Divide[Quantity[188.56250762939453`, "USDollars"]]}, {Divide[Quantity[137.05999755859375`, "USDollars"]], Divide[Quantity[188.11749649047852`, "USDollars"]]}, {Divide[Quantity[136.9600067138672, "USDollars"]], Divide[Quantity[186.96500778198242`, "USDollars"]]}, {Divide[Quantity[136.4600067138672, "USDollars"]], Divide[Quantity[186.7700080871582, "USDollars"]]}, {Divide[Quantity[137.85000610351562`, "USDollars"]], Divide[Quantity[188.6575050354004, "USDollars"]]}, {Divide[Quantity[138.39999389648438`, "USDollars"]], Divide[Quantity[188.83749389648438`, "USDollars"]]}, {Divide[Quantity[138.89999389648438`, "USDollars"]], Divide[Quantity[189.72499465942383`, "USDollars"]]}, {Divide[Quantity[138.89999389648438`, "USDollars"]], Divide[Quantity[190.20249557495117`, "USDollars"]]}, {Divide[Quantity[137.0800018310547, "USDollars"]], Divide[Quantity[188.2050018310547, "USDollars"]]}, {Divide[Quantity[136.27000427246094`, "USDollars"]], Divide[Quantity[187.10750579833984`, "USDollars"]]}, {Divide[Quantity[136.4199981689453, "USDollars"]], Divide[Quantity[187.83499908447266`, "USDollars"]]}, {Divide[Quantity[136.6199951171875, "USDollars"]], Divide[Quantity[187.26749420166016`, "USDollars"]]}, {Divide[Quantity[138.42999267578125`, "USDollars"]], Divide[Quantity[190.23499298095703`, "USDollars"]]}, {Divide[Quantity[139.2899932861328, "USDollars"]], Divide[Quantity[191.49999237060547`, "USDollars"]]}, {Divide[Quantity[140.72000122070312`, "USDollars"]], Divide[Quantity[192.88750076293945`, "USDollars"]]}, {Divide[Quantity[140.19000244140625`, "USDollars"]], Divide[Quantity[191.94500350952148`, "USDollars"]]}, {Divide[Quantity[141.33999633789062`, "USDollars"]], Divide[Quantity[193.27499771118164`, "USDollars"]]}, {Divide[Quantity[141.02999877929688`, "USDollars"]], Divide[Quantity[193.4499969482422, "USDollars"]]}, {Divide[Quantity[140.35000610351562`, "USDollars"]], Divide[Quantity[192.54500579833984`, "USDollars"]]}, {Divide[Quantity[136.27000427246094`, "USDollars"]], Divide[Quantity[189.53000259399414`, "USDollars"]]}, {Divide[Quantity[138.05999755859375`, "USDollars"]], Divide[Quantity[190.16749572753906`, "USDollars"]]}, {Divide[Quantity[136.89999389648438`, "USDollars"]], Divide[Quantity[187.9049949645996, "USDollars"]]}, {Divide[Quantity[132.2100067138672, "USDollars"]], Divide[Quantity[180.54500579833984`, "USDollars"]]}, {Divide[Quantity[134.69000244140625`, "USDollars"]], Divide[Quantity[183.94000244140625`, "USDollars"]]}, {Divide[Quantity[135.27999877929688`, "USDollars"]], Divide[Quantity[185.03999710083008`, "USDollars"]]}, {Divide[Quantity[138.88999938964844`, "USDollars"]], Divide[Quantity[189.74749755859375`, "USDollars"]]}, {Divide[Quantity[137.7100067138672, "USDollars"]], Divide[Quantity[187.9575080871582, "USDollars"]]}, {Divide[Quantity[135.7899932861328, "USDollars"]], Divide[Quantity[185.90999221801758`, "USDollars"]]}, {Divide[Quantity[138.60000610351562`, "USDollars"]], Divide[Quantity[190.8425064086914, "USDollars"]]}, {Divide[Quantity[133.97999572753906`, "USDollars"]], Divide[Quantity[184.66749572753906`, "USDollars"]]}, {Divide[Quantity[133.67999267578125`, "USDollars"]], Divide[Quantity[184.11499404907227`, "USDollars"]]}, {Divide[Quantity[136.1300048828125, "USDollars"]], Divide[Quantity[187.7550048828125, "USDollars"]]}, {Divide[Quantity[138.41000366210938`, "USDollars"]], Divide[Quantity[190.99750518798828`, "USDollars"]]}, {Divide[Quantity[137.25999450683594`, "USDollars"]], Divide[Quantity[189.84999465942383`, "USDollars"]]}, {Divide[Quantity[138.7899932861328, "USDollars"]], Divide[Quantity[191.94999313354492`, "USDollars"]]}, {Divide[Quantity[137.77999877929688`, "USDollars"]], Divide[Quantity[190.89500045776367`, "USDollars"]]}, {Divide[Quantity[133.38999938964844`, "USDollars"]], Divide[Quantity[184.04999923706055`, "USDollars"]]}, {Divide[Quantity[135.4499969482422, "USDollars"]], Divide[Quantity[187.0724983215332, "USDollars"]]}, {Divide[Quantity[135.74000549316406`, "USDollars"]], Divide[Quantity[186.7800064086914, "USDollars"]]}, {Divide[Quantity[135.55999755859375`, "USDollars"]], Divide[Quantity[186.94249725341797`, "USDollars"]]}, {Divide[Quantity[138.1199951171875, "USDollars"]], Divide[Quantity[190.37249374389648`, "USDollars"]]}, {Divide[Quantity[137.86000061035156`, "USDollars"]], Divide[Quantity[190.04500198364258`, "USDollars"]]}, {Divide[Quantity[136.0399932861328, "USDollars"]], Divide[Quantity[187.46499252319336`, "USDollars"]]}, {Divide[Quantity[137.6300048828125, "USDollars"]], Divide[Quantity[189.92750549316406`, "USDollars"]]}, {Divide[Quantity[140.0500030517578, "USDollars"]], Divide[Quantity[193.37000274658203`, "USDollars"]]}, {Divide[Quantity[139.10000610351562`, "USDollars"]], Divide[Quantity[192.4150047302246, "USDollars"]]}, {Divide[Quantity[137.52000427246094`, "USDollars"]], Divide[Quantity[191.06250381469727`, "USDollars"]]}, {Divide[Quantity[136.0800018310547, "USDollars"]], Divide[Quantity[190.25500106811523`, "USDollars"]]}, {Divide[Quantity[136.1199951171875, "USDollars"]], Divide[Quantity[192.01749420166016`, "USDollars"]]}, {Divide[Quantity[137.52000427246094`, "USDollars"]], Divide[Quantity[193.2913055419922, "USDollars"]]}, {Divide[Quantity[137.32000732421875`, "USDollars"]], Divide[Quantity[192.00750732421875`, "USDollars"]]}, {Divide[Quantity[136.3300018310547, "USDollars"]], Divide[Quantity[191.30500030517578`, "USDollars"]]}, {Divide[Quantity[137.38999938964844`, "USDollars"]], Divide[Quantity[192.56499862670898`, "USDollars"]]}, {Divide[Quantity[138.52000427246094`, "USDollars"]], Divide[Quantity[194.21250534057617`, "USDollars"]]}, {Divide[Quantity[141.07000732421875`, "USDollars"]], Divide[Quantity[196.31000900268555`, "USDollars"]]}, {Divide[Quantity[139.44000244140625`, "USDollars"]], Divide[Quantity[193.87250137329102`, "USDollars"]]}, {Divide[Quantity[139.13999938964844`, "USDollars"]], Divide[Quantity[193.81999969482422`, "USDollars"]]}, {Divide[Quantity[137.3800048828125, "USDollars"]], Divide[Quantity[191.8000030517578, "USDollars"]]}, {Divide[Quantity[139.36000061035156`, "USDollars"]], Divide[Quantity[194.61750030517578`, "USDollars"]]}, {Divide[Quantity[139.5399932861328, "USDollars"]], Divide[Quantity[194.51249313354492`, "USDollars"]]}, {Divide[Quantity[137.72999572753906`, "USDollars"]], Divide[Quantity[192.43499755859375`, "USDollars"]]}, {Divide[Quantity[139.02999877929688`, "USDollars"]], Divide[Quantity[195.02249908447266`, "USDollars"]]}, {Divide[Quantity[137.07000732421875`, "USDollars"]], Divide[Quantity[193.2175064086914, "USDollars"]]}, {Divide[Quantity[134.64999389648438`, "USDollars"]], Divide[Quantity[189.38999557495117`, "USDollars"]]}, {Divide[Quantity[136.27999877929688`, "USDollars"]], Divide[Quantity[191.48500061035156`, "USDollars"]]}, {Divide[Quantity[138.1199951171875, "USDollars"]], Divide[Quantity[194.87249374389648`, "USDollars"]]}, {Divide[Quantity[137.1199951171875, "USDollars"]], Divide[Quantity[193.88499450683594`, "USDollars"]]}, {Divide[Quantity[135.6699981689453, "USDollars"]], Divide[Quantity[191.7699966430664, "USDollars"]]}, {Divide[Quantity[138.24000549316406`, "USDollars"]], Divide[Quantity[194.99750518798828`, "USDollars"]]}, {Divide[Quantity[139.10000610351562`, "USDollars"]], Divide[Quantity[196.62250518798828`, "USDollars"]]}, {Divide[Quantity[139.67999267578125`, "USDollars"]], Divide[Quantity[198.73249435424805`, "USDollars"]]}, {Divide[Quantity[139.5500030517578, "USDollars"]], Divide[Quantity[198.5175018310547, "USDollars"]]}, {Divide[Quantity[141.5749969482422, "USDollars"]], Divide[Quantity[200.40499877929688`, "USDollars"]]}, {Divide[Quantity[140.41000366210938`, "USDollars"]], Divide[Quantity[199.00250244140625`, "USDollars"]]}, {Divide[Quantity[139.69000244140625`, "USDollars"]], Divide[Quantity[198.51000213623047`, "USDollars"]]}, {Divide[Quantity[137.41000366210938`, "USDollars"]], Divide[Quantity[196.51250457763672`, "USDollars"]]}, {Divide[Quantity[138.42999267578125`, "USDollars"]], Divide[Quantity[198.55749130249023`, "USDollars"]]}, {Divide[Quantity[136.3699951171875, "USDollars"]], Divide[Quantity[196.3599967956543, "USDollars"]]}, {Divide[Quantity[137.24000549316406`, "USDollars"]], Divide[Quantity[198.03500366210938`, "USDollars"]]}, {Divide[Quantity[139.94000244140625`, "USDollars"]], Divide[Quantity[200.83500289916992`, "USDollars"]]}, {Divide[Quantity[140.72999572753906`, "USDollars"]], Divide[Quantity[202.37499618530273`, "USDollars"]]}, {Divide[Quantity[144.19000244140625`, "USDollars"]], Divide[Quantity[206.4525032043457, "USDollars"]]}, {Divide[Quantity[142.8300018310547, "USDollars"]], Divide[Quantity[203.6525001525879, "USDollars"]]}, {Divide[Quantity[144.61000061035156`, "USDollars"]], Divide[Quantity[205.42499923706055`, "USDollars"]]}, {Divide[Quantity[143.3699951171875, "USDollars"]], Divide[Quantity[205.55999374389648`, "USDollars"]]}, {Divide[Quantity[143.72000122070312`, "USDollars"]], Divide[Quantity[207.6750030517578, "USDollars"]]}, {Divide[Quantity[144.5500030517578, "USDollars"]], Divide[Quantity[208.9250030517578, "USDollars"]]}, {Divide[Quantity[144.4600067138672, "USDollars"]], Divide[Quantity[208.7425079345703, "USDollars"]]}, {Divide[Quantity[144.05999755859375`, "USDollars"]], Divide[Quantity[208.3699951171875, "USDollars"]]}, {Divide[Quantity[144.25999450683594`, "USDollars"]], Divide[Quantity[209.11749267578125`, "USDollars"]]}, {Divide[Quantity[145.9600067138672, "USDollars"]], Divide[Quantity[210.99501037597656`, "USDollars"]]}, {Divide[Quantity[146.11000061035156`, "USDollars"]], Divide[Quantity[211.66000366210938`, "USDollars"]]}, {Divide[Quantity[147.07000732421875`, "USDollars"]], Divide[Quantity[212.56000518798828`, "USDollars"]]}, {Divide[Quantity[147.30999755859375`, "USDollars"]], Divide[Quantity[213.42749786376953`, "USDollars"]]}, {Divide[Quantity[148.05999755859375`, "USDollars"]], Divide[Quantity[213.72000122070312`, "USDollars"]]}, {Divide[Quantity[149.97000122070312`, "USDollars"]], Divide[Quantity[216.41000366210938`, "USDollars"]]}, {Divide[Quantity[150.33999633789062`, "USDollars"]], Divide[Quantity[217.11499786376953`, "USDollars"]]}, {Divide[Quantity[150.38999938964844`, "USDollars"]], Divide[Quantity[216.9625015258789, "USDollars"]]}, {Divide[Quantity[149.6199951171875, "USDollars"]], Divide[Quantity[215.41749572753906`, "USDollars"]]}, {Divide[Quantity[149.47999572753906`, "USDollars"]], Divide[Quantity[214.9824981689453, "USDollars"]]}, {Divide[Quantity[149.58999633789062`, "USDollars"]], Divide[Quantity[215.03499603271484`, "USDollars"]]}, {Divide[Quantity[151.22999572753906`, "USDollars"]], Divide[Quantity[217.82249450683594`, "USDollars"]]}, {Divide[Quantity[152.02999877929688`, "USDollars"]], Divide[Quantity[218.10250091552734`, "USDollars"]]}, {Divide[Quantity[152.32000732421875`, "USDollars"]], Divide[Quantity[219.2800064086914, "USDollars"]]}, {Divide[Quantity[151.3800048828125, "USDollars"]], Divide[Quantity[218.1925048828125, "USDollars"]]}, {Divide[Quantity[149.5500030517578, "USDollars"]], Divide[Quantity[215.59000396728516`, "USDollars"]]}, {Divide[Quantity[149.30999755859375`, "USDollars"]], Divide[Quantity[214.17250061035156`, "USDollars"]]}, {Divide[Quantity[149.85000610351562`, "USDollars"]], Divide[Quantity[215.28500366210938`, "USDollars"]]}, {Divide[Quantity[149.92999267578125`, "USDollars"]], Divide[Quantity[216.32498931884766`, "USDollars"]]}, {Divide[Quantity[151.75, "USDollars"]], Divide[Quantity[219.42749786376953`, "USDollars"]]}, {Divide[Quantity[151.36000061035156`, "USDollars"]], Divide[Quantity[218.09000396728516`, "USDollars"]]}, {Divide[Quantity[151.1300048828125, "USDollars"]], Divide[Quantity[218.25000762939453`, "USDollars"]]}, {Divide[Quantity[151.6999969482422, "USDollars"]], Divide[Quantity[219.39249420166016`, "USDollars"]]}, {Divide[Quantity[153.24000549316406`, "USDollars"]], Divide[Quantity[221.1050033569336, "USDollars"]]}, {Divide[Quantity[154.52999877929688`, "USDollars"]], Divide[Quantity[223.31749725341797`, "USDollars"]]}, {Divide[Quantity[155.52999877929688`, "USDollars"]], Divide[Quantity[225.4949951171875, "USDollars"]]}, {Divide[Quantity[154.69000244140625`, "USDollars"]], Divide[Quantity[224.7925033569336, "USDollars"]]}, {Divide[Quantity[154.3699951171875, "USDollars"]], Divide[Quantity[224.30499267578125`, "USDollars"]]}, {Divide[Quantity[155.7100067138672, "USDollars"]], Divide[Quantity[225.71500396728516`, "USDollars"]]}, {Divide[Quantity[157.41000366210938`, "USDollars"]], Divide[Quantity[227.27000427246094`, "USDollars"]]}, {Divide[Quantity[157.41000366210938`, "USDollars"]], Divide[Quantity[228.41000366210938`, "USDollars"]]}, {Divide[Quantity[157.3800048828125, "USDollars"]], Divide[Quantity[228.44750213623047`, "USDollars"]]}, {Divide[Quantity[158.6699981689453, "USDollars"]], Divide[Quantity[231.14749908447266`, "USDollars"]]}, {Divide[Quantity[158.9600067138672, "USDollars"]], Divide[Quantity[231.41000366210938`, "USDollars"]]}, {Divide[Quantity[157.58999633789062`, "USDollars"]], Divide[Quantity[230.4699935913086, "USDollars"]]}, {Divide[Quantity[157.6999969482422, "USDollars"]], Divide[Quantity[231.11249542236328`, "USDollars"]]}}}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 2, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 2}}, True, 12.1]},*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3*)
(*]*)


(* ::Input:: *)
(*With[{list={TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVlF1oU3cYxo/syrBRqV9lSKwyJhW9mLLVwQLRNjnnJMaeExVXzWzmR1cV*)
(*MfhNVQhj0XnhIswpFTcj6uhugoJKUCol+AFSnHrTgmxLClIhojIoRQW1/n+P*)
(*F56bh/d9n/d5v/6cWeu2JTdOsCzrlWW+QqavJTyO2Sm3Fr/Div/zEmOXDxi0*)
(*rCHsWpPhFXq+Bu2JLcT7iYdmS2etwcbcPuzQSeUpPxMymO6c1kK9kuKH4ZdX*)
(*Sre3Fb27Bitn77Xi74rAu2mwsXg7oroG+4MJxecbrHSnZEci1GkHM+9535E3*)
(*msWufW8wHDiNfgr9dP6OQWvwIfyBc+L9By58JZ3nEfUL3zoqfipKf78bTJeu*)
(*RNEfi6LbYpOXtdHxwGDOYLi6zqH/qs3cJ2zu0E48kBfiT3deF29EumGHPrc4*)
(*7Gu3Q38F+T9ysZ/jH5zsovOv7IcO/Y4o7zHYtMHwxu/t0vdR7NQz7OAj+Xtd*)
(*+j8s/q/Ymaku/Xkx9vRZDP29MXTqwNwaV3t0mXO6y/3O03+gWfv6jb1k/mEP*)
(*+bKtObXH4SjzLteeh3SXXfgDHbqLzV2a5kXp2zWYDQ3rHf2l97WTuH1f+XPQ*)
(*Hbih+vXsu9auvUcd4q3sszjdQecbh33f1b6vYZeeOuoTO/8AndB2vYcX0hnD*)
(*zvTJ/4XusEp3OCL7kPZtYRfnyP+D7r9Id9rE/Ut/ys9dx9+P9C5jV5O6x4js*)
(*T2O6a4w6FdUZ072+5M6jDfDsMzH8n4iflc7cD95nwa4yd3mr9Gaq7zrVn6l3*)
(*863izer7nvqO6x2Ble5jMeb7RfYK5f2t+XJ6txfYl98Y073I67zCPFM+1zy9*)
(*6Pi9mv+meNPizPO/QevqcFx9Guwf2B+HdzzO/EPYpT/izNdMfmBVXPsjb7QA*)
(*v5v8bGi1eG9Ur34pOmsVPwnfTxv/+H9uKfU/Bkfxh6tl5R1MmD4H9yXI3yw7*)
(*noDfBQaPJNCdtIy81/DLG7Hz24UPDBZ6ZrVxz03LyOsSNrRR52Ub+2nw2G+9*)
(*R93JHv19hT+0BHvheo89dYC5Q4pvJq/plEfdix77PUdeYIfiafzdKfJq58X7*)
(*ibxMHzzrksccP6pus/paA8/uUR81eKUidvE2ev4TxceIdy7w2dMBH92Dvvbt*)
(*w8/69LkHv9Uv/w3xg0nuNyOJf1ES3dXJ8FuNy+bM*)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1],TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVUl9IU3EYvTMJWSWZix6yNS2ohUWx/gi6WEjsoQJXEOrutnvvbKGGrgd9*)
(*WBEbooGmPvRQo5eR9FCooVJMSq3RQ8kIgvJCDzEhK5qFQVNLiPJ3jtC9L4fv*)
(*3/nOd363VGs9e8EkSdKKJD7bsLvO9Q8T8braVbR1XhGxpHcIdDnGUHcX1a+i*)
(*EvpkyLsc6MsMuEQ946kVaBu+LjAR/oa4s5nxkMBn6RsCXbPTiK0nBUr2p+Dz*)
(*3ObcdoHR7IjI2+RWxJbXzMfA6/aQrwk8Ug14c0nE+hj64uOcL/Si3+xF/hXy*)
(*znov6pPA1Bz6zNtk9svYayKWyrh/s4y75r3Yv+BFPuHFfUdk+HJRRj2B+dQ9*)
(*oPM3eCINPuhpBLpVH/X64Xc1YmcTMcK+Qz74VemDj1eZf844TZ4/Ptyj++DP*)
(*MudWUM++Yf9GP3RvBaar1vb7uY942Y+7dD/uXfBjXg4gdgUwv1vBfVXAgQoF*)
(*fOcQe5ZFXyLcy/4SBZiv0AfyKQH4B8x4XgpUQjNir5I8AB53LAB/dyjwKQ9o*)
(*6UM9Ph7Ae34N4P4eoNyPOWc39tirwJ9sYV/WD94c/Z+mT23QE/lJ/Zd4301i*)
(*hwKfWqmnW4HuPtbv4F7rHHUusm5V8V47VbxXhYr9Q+hLTdCnF+hPTjKfQ9y/*)
(*RaUvmMuWMrYSC8HvqAR/+jRRNqDSX6bC/wIV77RJoKQXU88Z5N2N1HsLeUsX*)
(*4tkH1J/gvh4DXzR7gvtKqKuLPszgvtwX/j/UkzzKfb/W/iMV7zfF+x8peL98*)
(*8FqhL+PZy7k6g5+ZyCD9/s53WgJP9gd49Grwd1Zy3oT77YcRx2O8K8i7DtK3*)
(*PPq0zpCPOvexbub+ctZrWL9L/1pYb+C+cupopo7LvPsY71E4X0Y/39K/AvX/*)
(*OyR9F98xx3vdBv3RVBvvAr8SGqWPvdTVzni/4f0lfQP0DO9h3zXqW/sf1mu4*)
(*+z3vKNYwl+V/s8S9RehLFmp4B5OG9ytg/riG+WrUnRr7GokxDXxTwNlpzEfS*)
(*3DeGefkh66OMP2vwSwqC1xyE7/MadI2Q/z7mHE8QpybAKy1TVxax/SP0hhY1*)
(*+hIEfw0xjD2W89ijnwrivnbUrUMGlOyDAhPhd+z7EKR+xKHHQddfaPz+9A==*)
(**)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1]}},*)
(*With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*DateListPlot[div,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3*)
(*]*)
(*]]]*)


(* ::Input:: *)
(*a[x_]:=a[x]=TimeSeriesThread[Total,x]*)
(*b[x_,y_]:=b[x,y]=TimeSeriesThread[Apply[Divide],{x,y}]*)
(*c[x_]:=c[x]=Map[b[#,a[x]]&,x]*)
(*ClearAll[a,b,c,d,e,f,g]*)


(* ::Input:: *)
(*c[Out[8],Out[9]]*)


(* ::InheritFromParent:: *)
(*c[TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVlF1oU3cYxo/syrBRqV9lSKwyJhW9mLLVwQLRNjnnJMaeExVXzWzmR1cV*)
(*MfhNVQhj0XnhIswpFTcj6uhugoJKUCol+AFSnHrTgmxLClIhojIoRQW1/n+P*)
(*F56bh/d9n/d5v/6cWeu2JTdOsCzrlWW+QqavJTyO2Sm3Fr/Div/zEmOXDxi0*)
(*rCHsWpPhFXq+Bu2JLcT7iYdmS2etwcbcPuzQSeUpPxMymO6c1kK9kuKH4ZdX*)
(*Sre3Fb27Bitn77Xi74rAu2mwsXg7oroG+4MJxecbrHSnZEci1GkHM+9535E3*)
(*msWufW8wHDiNfgr9dP6OQWvwIfyBc+L9By58JZ3nEfUL3zoqfipKf78bTJeu*)
(*RNEfi6LbYpOXtdHxwGDOYLi6zqH/qs3cJ2zu0E48kBfiT3deF29EumGHPrc4*)
(*7Gu3Q38F+T9ysZ/jH5zsovOv7IcO/Y4o7zHYtMHwxu/t0vdR7NQz7OAj+Xtd*)
(*+j8s/q/Ymaku/Xkx9vRZDP29MXTqwNwaV3t0mXO6y/3O03+gWfv6jb1k/mEP*)
(*+bKtObXH4SjzLteeh3SXXfgDHbqLzV2a5kXp2zWYDQ3rHf2l97WTuH1f+XPQ*)
(*Hbih+vXsu9auvUcd4q3sszjdQecbh33f1b6vYZeeOuoTO/8AndB2vYcX0hnD*)
(*zvTJ/4XusEp3OCL7kPZtYRfnyP+D7r9Id9rE/Ut/ys9dx9+P9C5jV5O6x4js*)
(*T2O6a4w6FdUZ072+5M6jDfDsMzH8n4iflc7cD95nwa4yd3mr9Gaq7zrVn6l3*)
(*863izer7nvqO6x2Ble5jMeb7RfYK5f2t+XJ6txfYl98Y073I67zCPFM+1zy9*)
(*6Pi9mv+meNPizPO/QevqcFx9Guwf2B+HdzzO/EPYpT/izNdMfmBVXPsjb7QA*)
(*v5v8bGi1eG9Ur34pOmsVPwnfTxv/+H9uKfU/Bkfxh6tl5R1MmD4H9yXI3yw7*)
(*noDfBQaPJNCdtIy81/DLG7Hz24UPDBZ6ZrVxz03LyOsSNrRR52Ub+2nw2G+9*)
(*R93JHv19hT+0BHvheo89dYC5Q4pvJq/plEfdix77PUdeYIfiafzdKfJq58X7*)
(*ibxMHzzrksccP6pus/paA8/uUR81eKUidvE2ev4TxceIdy7w2dMBH92Dvvbt*)
(*w8/69LkHv9Uv/w3xg0nuNyOJf1ES3dXJ8FuNy+bM*)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1],TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVUl9IU3EYvTMJWSWZix6yNS2ohUWx/gi6WEjsoQJXEOrutnvvbKGGrgd9*)
(*WBEbooGmPvRQo5eR9FCooVJMSq3RQ8kIgvJCDzEhK5qFQVNLiPJ3jtC9L4fv*)
(*3/nOd363VGs9e8EkSdKKJD7bsLvO9Q8T8braVbR1XhGxpHcIdDnGUHcX1a+i*)
(*EvpkyLsc6MsMuEQ946kVaBu+LjAR/oa4s5nxkMBn6RsCXbPTiK0nBUr2p+Dz*)
(*3ObcdoHR7IjI2+RWxJbXzMfA6/aQrwk8Ug14c0nE+hj64uOcL/Si3+xF/hXy*)
(*znov6pPA1Bz6zNtk9svYayKWyrh/s4y75r3Yv+BFPuHFfUdk+HJRRj2B+dQ9*)
(*oPM3eCINPuhpBLpVH/X64Xc1YmcTMcK+Qz74VemDj1eZf844TZ4/Ptyj++DP*)
(*MudWUM++Yf9GP3RvBaar1vb7uY942Y+7dD/uXfBjXg4gdgUwv1vBfVXAgQoF*)
(*fOcQe5ZFXyLcy/4SBZiv0AfyKQH4B8x4XgpUQjNir5I8AB53LAB/dyjwKQ9o*)
(*6UM9Ph7Ae34N4P4eoNyPOWc39tirwJ9sYV/WD94c/Z+mT23QE/lJ/Zd4301i*)
(*hwKfWqmnW4HuPtbv4F7rHHUusm5V8V47VbxXhYr9Q+hLTdCnF+hPTjKfQ9y/*)
(*RaUvmMuWMrYSC8HvqAR/+jRRNqDSX6bC/wIV77RJoKQXU88Z5N2N1HsLeUsX*)
(*4tkH1J/gvh4DXzR7gvtKqKuLPszgvtwX/j/UkzzKfb/W/iMV7zfF+x8peL98*)
(*8FqhL+PZy7k6g5+ZyCD9/s53WgJP9gd49Grwd1Zy3oT77YcRx2O8K8i7DtK3*)
(*PPq0zpCPOvexbub+ctZrWL9L/1pYb+C+cupopo7LvPsY71E4X0Y/39K/AvX/*)
(*OyR9F98xx3vdBv3RVBvvAr8SGqWPvdTVzni/4f0lfQP0DO9h3zXqW/sf1mu4*)
(*+z3vKNYwl+V/s8S9RehLFmp4B5OG9ytg/riG+WrUnRr7GokxDXxTwNlpzEfS*)
(*3DeGefkh66OMP2vwSwqC1xyE7/MadI2Q/z7mHE8QpybAKy1TVxax/SP0hhY1*)
(*+hIEfw0xjD2W89ijnwrivnbUrUMGlOyDAhPhd+z7EKR+xKHHQddfaPz+9A==*)
(**)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1]]*)


(* ::Input:: *)
(*With[{list={TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVlF1oU3cYxo/syrBRqV9lSKwyJhW9mLLVwQLRNjnnJMaeExVXzWzmR1cV*)
(*MfhNVQhj0XnhIswpFTcj6uhugoJKUCol+AFSnHrTgmxLClIhojIoRQW1/n+P*)
(*F56bh/d9n/d5v/6cWeu2JTdOsCzrlWW+QqavJTyO2Sm3Fr/Div/zEmOXDxi0*)
(*rCHsWpPhFXq+Bu2JLcT7iYdmS2etwcbcPuzQSeUpPxMymO6c1kK9kuKH4ZdX*)
(*Sre3Fb27Bitn77Xi74rAu2mwsXg7oroG+4MJxecbrHSnZEci1GkHM+9535E3*)
(*msWufW8wHDiNfgr9dP6OQWvwIfyBc+L9By58JZ3nEfUL3zoqfipKf78bTJeu*)
(*RNEfi6LbYpOXtdHxwGDOYLi6zqH/qs3cJ2zu0E48kBfiT3deF29EumGHPrc4*)
(*7Gu3Q38F+T9ysZ/jH5zsovOv7IcO/Y4o7zHYtMHwxu/t0vdR7NQz7OAj+Xtd*)
(*+j8s/q/Ymaku/Xkx9vRZDP29MXTqwNwaV3t0mXO6y/3O03+gWfv6jb1k/mEP*)
(*+bKtObXH4SjzLteeh3SXXfgDHbqLzV2a5kXp2zWYDQ3rHf2l97WTuH1f+XPQ*)
(*Hbih+vXsu9auvUcd4q3sszjdQecbh33f1b6vYZeeOuoTO/8AndB2vYcX0hnD*)
(*zvTJ/4XusEp3OCL7kPZtYRfnyP+D7r9Id9rE/Ut/ys9dx9+P9C5jV5O6x4js*)
(*T2O6a4w6FdUZ072+5M6jDfDsMzH8n4iflc7cD95nwa4yd3mr9Gaq7zrVn6l3*)
(*863izer7nvqO6x2Ble5jMeb7RfYK5f2t+XJ6txfYl98Y073I67zCPFM+1zy9*)
(*6Pi9mv+meNPizPO/QevqcFx9Guwf2B+HdzzO/EPYpT/izNdMfmBVXPsjb7QA*)
(*v5v8bGi1eG9Ur34pOmsVPwnfTxv/+H9uKfU/Bkfxh6tl5R1MmD4H9yXI3yw7*)
(*noDfBQaPJNCdtIy81/DLG7Hz24UPDBZ6ZrVxz03LyOsSNrRR52Ub+2nw2G+9*)
(*R93JHv19hT+0BHvheo89dYC5Q4pvJq/plEfdix77PUdeYIfiafzdKfJq58X7*)
(*ibxMHzzrksccP6pus/paA8/uUR81eKUidvE2ev4TxceIdy7w2dMBH92Dvvbt*)
(*w8/69LkHv9Uv/w3xg0nuNyOJf1ES3dXJ8FuNy+bM*)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1],TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVUl9IU3EYvTMJWSWZix6yNS2ohUWx/gi6WEjsoQJXEOrutnvvbKGGrgd9*)
(*WBEbooGmPvRQo5eR9FCooVJMSq3RQ8kIgvJCDzEhK5qFQVNLiPJ3jtC9L4fv*)
(*3/nOd363VGs9e8EkSdKKJD7bsLvO9Q8T8braVbR1XhGxpHcIdDnGUHcX1a+i*)
(*EvpkyLsc6MsMuEQ946kVaBu+LjAR/oa4s5nxkMBn6RsCXbPTiK0nBUr2p+Dz*)
(*3ObcdoHR7IjI2+RWxJbXzMfA6/aQrwk8Ug14c0nE+hj64uOcL/Si3+xF/hXy*)
(*znov6pPA1Bz6zNtk9svYayKWyrh/s4y75r3Yv+BFPuHFfUdk+HJRRj2B+dQ9*)
(*oPM3eCINPuhpBLpVH/X64Xc1YmcTMcK+Qz74VemDj1eZf844TZ4/Ptyj++DP*)
(*MudWUM++Yf9GP3RvBaar1vb7uY942Y+7dD/uXfBjXg4gdgUwv1vBfVXAgQoF*)
(*fOcQe5ZFXyLcy/4SBZiv0AfyKQH4B8x4XgpUQjNir5I8AB53LAB/dyjwKQ9o*)
(*6UM9Ph7Ae34N4P4eoNyPOWc39tirwJ9sYV/WD94c/Z+mT23QE/lJ/Zd4301i*)
(*hwKfWqmnW4HuPtbv4F7rHHUusm5V8V47VbxXhYr9Q+hLTdCnF+hPTjKfQ9y/*)
(*RaUvmMuWMrYSC8HvqAR/+jRRNqDSX6bC/wIV77RJoKQXU88Z5N2N1HsLeUsX*)
(*4tkH1J/gvh4DXzR7gvtKqKuLPszgvtwX/j/UkzzKfb/W/iMV7zfF+x8peL98*)
(*8FqhL+PZy7k6g5+ZyCD9/s53WgJP9gd49Grwd1Zy3oT77YcRx2O8K8i7DtK3*)
(*PPq0zpCPOvexbub+ctZrWL9L/1pYb+C+cupopo7LvPsY71E4X0Y/39K/AvX/*)
(*OyR9F98xx3vdBv3RVBvvAr8SGqWPvdTVzni/4f0lfQP0DO9h3zXqW/sf1mu4*)
(*+z3vKNYwl+V/s8S9RehLFmp4B5OG9ytg/riG+WrUnRr7GokxDXxTwNlpzEfS*)
(*3DeGefkh66OMP2vwSwqC1xyE7/MadI2Q/z7mHE8QpybAKy1TVxax/SP0hhY1*)
(*+hIEfw0xjD2W89ijnwrivnbUrUMGlOyDAhPhd+z7EKR+xKHHQddfaPz+9A==*)
(**)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1]}},*)
(*With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*DateListPlot[div,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,PlotLegends->{"a","b"}*)
(*]*)
(*]]]*)


(* ::Input:: *)
(*With[{*)
(*list={TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVlF1oU3cYxo/syrBRqV9lSKwyJhW9mLLVwQLRNjnnJMaeExVXzWzmR1cV*)
(*MfhNVQhj0XnhIswpFTcj6uhugoJKUCol+AFSnHrTgmxLClIhojIoRQW1/n+P*)
(*F56bh/d9n/d5v/6cWeu2JTdOsCzrlWW+QqavJTyO2Sm3Fr/Div/zEmOXDxi0*)
(*rCHsWpPhFXq+Bu2JLcT7iYdmS2etwcbcPuzQSeUpPxMymO6c1kK9kuKH4ZdX*)
(*Sre3Fb27Bitn77Xi74rAu2mwsXg7oroG+4MJxecbrHSnZEci1GkHM+9535E3*)
(*msWufW8wHDiNfgr9dP6OQWvwIfyBc+L9By58JZ3nEfUL3zoqfipKf78bTJeu*)
(*RNEfi6LbYpOXtdHxwGDOYLi6zqH/qs3cJ2zu0E48kBfiT3deF29EumGHPrc4*)
(*7Gu3Q38F+T9ysZ/jH5zsovOv7IcO/Y4o7zHYtMHwxu/t0vdR7NQz7OAj+Xtd*)
(*+j8s/q/Ymaku/Xkx9vRZDP29MXTqwNwaV3t0mXO6y/3O03+gWfv6jb1k/mEP*)
(*+bKtObXH4SjzLteeh3SXXfgDHbqLzV2a5kXp2zWYDQ3rHf2l97WTuH1f+XPQ*)
(*Hbih+vXsu9auvUcd4q3sszjdQecbh33f1b6vYZeeOuoTO/8AndB2vYcX0hnD*)
(*zvTJ/4XusEp3OCL7kPZtYRfnyP+D7r9Id9rE/Ut/ys9dx9+P9C5jV5O6x4js*)
(*T2O6a4w6FdUZ072+5M6jDfDsMzH8n4iflc7cD95nwa4yd3mr9Gaq7zrVn6l3*)
(*863izer7nvqO6x2Ble5jMeb7RfYK5f2t+XJ6txfYl98Y073I67zCPFM+1zy9*)
(*6Pi9mv+meNPizPO/QevqcFx9Guwf2B+HdzzO/EPYpT/izNdMfmBVXPsjb7QA*)
(*v5v8bGi1eG9Ur34pOmsVPwnfTxv/+H9uKfU/Bkfxh6tl5R1MmD4H9yXI3yw7*)
(*noDfBQaPJNCdtIy81/DLG7Hz24UPDBZ6ZrVxz03LyOsSNrRR52Ub+2nw2G+9*)
(*R93JHv19hT+0BHvheo89dYC5Q4pvJq/plEfdix77PUdeYIfiafzdKfJq58X7*)
(*ibxMHzzrksccP6pus/paA8/uUR81eKUidvE2ev4TxceIdy7w2dMBH92Dvvbt*)
(*w8/69LkHv9Uv/w3xg0nuNyOJf1ES3dXJ8FuNy+bM*)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1],TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVUl9IU3EYvTMJWSWZix6yNS2ohUWx/gi6WEjsoQJXEOrutnvvbKGGrgd9*)
(*WBEbooGmPvRQo5eR9FCooVJMSq3RQ8kIgvJCDzEhK5qFQVNLiPJ3jtC9L4fv*)
(*3/nOd363VGs9e8EkSdKKJD7bsLvO9Q8T8braVbR1XhGxpHcIdDnGUHcX1a+i*)
(*EvpkyLsc6MsMuEQ946kVaBu+LjAR/oa4s5nxkMBn6RsCXbPTiK0nBUr2p+Dz*)
(*3ObcdoHR7IjI2+RWxJbXzMfA6/aQrwk8Ug14c0nE+hj64uOcL/Si3+xF/hXy*)
(*znov6pPA1Bz6zNtk9svYayKWyrh/s4y75r3Yv+BFPuHFfUdk+HJRRj2B+dQ9*)
(*oPM3eCINPuhpBLpVH/X64Xc1YmcTMcK+Qz74VemDj1eZf844TZ4/Ptyj++DP*)
(*MudWUM++Yf9GP3RvBaar1vb7uY942Y+7dD/uXfBjXg4gdgUwv1vBfVXAgQoF*)
(*fOcQe5ZFXyLcy/4SBZiv0AfyKQH4B8x4XgpUQjNir5I8AB53LAB/dyjwKQ9o*)
(*6UM9Ph7Ae34N4P4eoNyPOWc39tirwJ9sYV/WD94c/Z+mT23QE/lJ/Zd4301i*)
(*hwKfWqmnW4HuPtbv4F7rHHUusm5V8V47VbxXhYr9Q+hLTdCnF+hPTjKfQ9y/*)
(*RaUvmMuWMrYSC8HvqAR/+jRRNqDSX6bC/wIV77RJoKQXU88Z5N2N1HsLeUsX*)
(*4tkH1J/gvh4DXzR7gvtKqKuLPszgvtwX/j/UkzzKfb/W/iMV7zfF+x8peL98*)
(*8FqhL+PZy7k6g5+ZyCD9/s53WgJP9gd49Grwd1Zy3oT77YcRx2O8K8i7DtK3*)
(*PPq0zpCPOvexbub+ctZrWL9L/1pYb+C+cupopo7LvPsY71E4X0Y/39K/AvX/*)
(*OyR9F98xx3vdBv3RVBvvAr8SGqWPvdTVzni/4f0lfQP0DO9h3zXqW/sf1mu4*)
(*+z3vKNYwl+V/s8S9RehLFmp4B5OG9ytg/riG+WrUnRr7GokxDXxTwNlpzEfS*)
(*3DeGefkh66OMP2vwSwqC1xyE7/MadI2Q/z7mHE8QpybAKy1TVxax/SP0hhY1*)
(*+hIEfw0xjD2W89ijnwrivnbUrUMGlOyDAhPhd+z7EKR+xKHHQddfaPz+9A==*)
(**)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1]},*)
(*leg={"apple","msft"}*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[list[[i]],leg[[i]]],{i,1,Length@list,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,PlotLegends->{"a","b"}*)
(*]*)
(*]]]]*)


(* ::Input:: *)
(*With[{*)
(*list={TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVlF1oU3cYxo/syrBRqV9lSKwyJhW9mLLVwQLRNjnnJMaeExVXzWzmR1cV*)
(*MfhNVQhj0XnhIswpFTcj6uhugoJKUCol+AFSnHrTgmxLClIhojIoRQW1/n+P*)
(*F56bh/d9n/d5v/6cWeu2JTdOsCzrlWW+QqavJTyO2Sm3Fr/Div/zEmOXDxi0*)
(*rCHsWpPhFXq+Bu2JLcT7iYdmS2etwcbcPuzQSeUpPxMymO6c1kK9kuKH4ZdX*)
(*Sre3Fb27Bitn77Xi74rAu2mwsXg7oroG+4MJxecbrHSnZEci1GkHM+9535E3*)
(*msWufW8wHDiNfgr9dP6OQWvwIfyBc+L9By58JZ3nEfUL3zoqfipKf78bTJeu*)
(*RNEfi6LbYpOXtdHxwGDOYLi6zqH/qs3cJ2zu0E48kBfiT3deF29EumGHPrc4*)
(*7Gu3Q38F+T9ysZ/jH5zsovOv7IcO/Y4o7zHYtMHwxu/t0vdR7NQz7OAj+Xtd*)
(*+j8s/q/Ymaku/Xkx9vRZDP29MXTqwNwaV3t0mXO6y/3O03+gWfv6jb1k/mEP*)
(*+bKtObXH4SjzLteeh3SXXfgDHbqLzV2a5kXp2zWYDQ3rHf2l97WTuH1f+XPQ*)
(*Hbih+vXsu9auvUcd4q3sszjdQecbh33f1b6vYZeeOuoTO/8AndB2vYcX0hnD*)
(*zvTJ/4XusEp3OCL7kPZtYRfnyP+D7r9Id9rE/Ut/ys9dx9+P9C5jV5O6x4js*)
(*T2O6a4w6FdUZ072+5M6jDfDsMzH8n4iflc7cD95nwa4yd3mr9Gaq7zrVn6l3*)
(*863izer7nvqO6x2Ble5jMeb7RfYK5f2t+XJ6txfYl98Y073I67zCPFM+1zy9*)
(*6Pi9mv+meNPizPO/QevqcFx9Guwf2B+HdzzO/EPYpT/izNdMfmBVXPsjb7QA*)
(*v5v8bGi1eG9Ur34pOmsVPwnfTxv/+H9uKfU/Bkfxh6tl5R1MmD4H9yXI3yw7*)
(*noDfBQaPJNCdtIy81/DLG7Hz24UPDBZ6ZrVxz03LyOsSNrRR52Ub+2nw2G+9*)
(*R93JHv19hT+0BHvheo89dYC5Q4pvJq/plEfdix77PUdeYIfiafzdKfJq58X7*)
(*ibxMHzzrksccP6pus/paA8/uUR81eKUidvE2ev4TxceIdy7w2dMBH92Dvvbt*)
(*w8/69LkHv9Uv/w3xg0nuNyOJf1ES3dXJ8FuNy+bM*)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1],TemporalData[TimeSeries, {{QuantityArray[StructuredArray`StructuredData[{251}, {CompressedData["*)
(*1:eJxVUl9IU3EYvTMJWSWZix6yNS2ohUWx/gi6WEjsoQJXEOrutnvvbKGGrgd9*)
(*WBEbooGmPvRQo5eR9FCooVJMSq3RQ8kIgvJCDzEhK5qFQVNLiPJ3jtC9L4fv*)
(*3/nOd363VGs9e8EkSdKKJD7bsLvO9Q8T8braVbR1XhGxpHcIdDnGUHcX1a+i*)
(*EvpkyLsc6MsMuEQ946kVaBu+LjAR/oa4s5nxkMBn6RsCXbPTiK0nBUr2p+Dz*)
(*3ObcdoHR7IjI2+RWxJbXzMfA6/aQrwk8Ug14c0nE+hj64uOcL/Si3+xF/hXy*)
(*znov6pPA1Bz6zNtk9svYayKWyrh/s4y75r3Yv+BFPuHFfUdk+HJRRj2B+dQ9*)
(*oPM3eCINPuhpBLpVH/X64Xc1YmcTMcK+Qz74VemDj1eZf844TZ4/Ptyj++DP*)
(*MudWUM++Yf9GP3RvBaar1vb7uY942Y+7dD/uXfBjXg4gdgUwv1vBfVXAgQoF*)
(*fOcQe5ZFXyLcy/4SBZiv0AfyKQH4B8x4XgpUQjNir5I8AB53LAB/dyjwKQ9o*)
(*6UM9Ph7Ae34N4P4eoNyPOWc39tirwJ9sYV/WD94c/Z+mT23QE/lJ/Zd4301i*)
(*hwKfWqmnW4HuPtbv4F7rHHUusm5V8V47VbxXhYr9Q+hLTdCnF+hPTjKfQ9y/*)
(*RaUvmMuWMrYSC8HvqAR/+jRRNqDSX6bC/wIV77RJoKQXU88Z5N2N1HsLeUsX*)
(*4tkH1J/gvh4DXzR7gvtKqKuLPszgvtwX/j/UkzzKfb/W/iMV7zfF+x8peL98*)
(*8FqhL+PZy7k6g5+ZyCD9/s53WgJP9gd49Grwd1Zy3oT77YcRx2O8K8i7DtK3*)
(*PPq0zpCPOvexbub+ctZrWL9L/1pYb+C+cupopo7LvPsY71E4X0Y/39K/AvX/*)
(*OyR9F98xx3vdBv3RVBvvAr8SGqWPvdTVzni/4f0lfQP0DO9h3zXqW/sf1mu4*)
(*+z3vKNYwl+V/s8S9RehLFmp4B5OG9ytg/riG+WrUnRr7GokxDXxTwNlpzEfS*)
(*3DeGefkh66OMP2vwSwqC1xyE7/MadI2Q/z7mHE8QpybAKy1TVxax/SP0hhY1*)
(*+hIEfw0xjD2W89ijnwrivnbUrUMGlOyDAhPhd+z7EKR+xKHHQddfaPz+9A==*)
(**)
(*"], "USDollars", {{1}}}]]}, CompressedData["*)
(*1:eJxdlzuOFEEQRBcJi1twg6rK/xGQsDgCBhIWBtweh+geQT/hrDbUuZsTkdmv*)
(*aj5+/fHl27u3t7ef7/Xj8/efv/5Tv6k+fdAvVhFWudb6Jz2PQ4Z3Q/ZqFvc4*)
(*i+d+/FfmyjqQOywhfR8W+wyLo4PF9396ZEWjb+3li3IWn55KNCpLQ6PKQ79V*)
(*i36rJljcvfGpapJp9Dn027bp9/rALPZO9G19TPTtNvrt2fQ7a3lTzkbf2VXo*)
(*KwP0O7mGT3M4/alGGnri8Jvrntgjz3YW28L0JRtpaBc8WVx2WNx7WDwL0899*)
(*AgZzmxWf+sH0tWUb05ccTD/3vVaPHKffsw6mn2dvTF+LspjG8aTfE06/J81Y*)
(*fO/vI3sxDVtJv3a3feSxZrEdTD/NN8OxLNq/XhYWtxuL52AZ9Ik2w/FTtO+W*)
(*tO/uXAYP4zLc1ICcpN9YwenHNk4/zmEaIhD9ht5vFmdwGaKcy6CXkGloYPSb*)
(*m+hLzYzLoGS5DPLPNDKJPvGJ6Mtsok+1RN9rQpCH6Msyoi/Lib68oIu+1xzQ*)
(*t4bo0+SJvhS8OH296kyjg+iTJPpkiOjLLqIvu4NpzCb6cg7RJ0n05RjRp1iD*)
(*aUwRfakThn6nib6cIfpq3S/ZI40kvIYwLHaSsFaQhLU00oYcklDnD0lYe5OE*)
(*WtdCGqVj8PBpEn21i+iTnMNGXUijziYJ6xySsI6RhJIkYQkiTOMUSaiJkITa*)
(*UJKwRHosg2QzDTOSsMxJwrrfIsgkCSWH4diQhOWLJCzdILAMMkASSg7D8SAJ*)
(*S6cR7esTcxm8ScLyWQwnNkkoSJKEFUYSVvjhMkQshhNFMF73ANqPIRivE5e7*)
(*kbfdRzpJeHGTyyCccRlSe4dGOSThte70W5skvDaJy6CTnGlUkIRXY/q94mFx*)
(*k4S6bR2m0Zsk1NWEJKw2klD/iSSsDuMydBGMuscRjKVTgcswi2CsuWH2SCMY*)
(*a5xg1H2RYNQNkWCs0Qo/fe8jclESjL02wdgaPpahlznC0X2CYJQkGHUOEIz9*)
(*6vPICYTT+kPYlyQYexvB2NsJxt76xoC+uwlGXfIIRkleEfsscrLvrYJ0crJP*)
(*kJP9yuaRSU5qcZLh2CIndU8nJyXJSUGSnGyxjOFYkpNtRU62NTnZNsU0/BCM*)
(*r5sZpBOMkgRj611nGmI5/aqWfmMRjJIEY8d9wD7SCcbWOOk3kmDUtxaCsa8v*)
(*SOj7WslHboKxBSROX5dRppFJEuo6dZPwD3aMV3w=*)
(*"], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {DateFunction -> Automatic, MetaInformation -> {"FinancialProperty" -> "Close"}, ResamplingMethod -> {"Interpolation", "InterpolationOrder" -> 0}, TemporalRegularity -> Automatic, ValueDimensions -> 1}}, True, 12.1]},*)
(*leg={"apple","msft"}*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[list[[i]],leg[[i]]],{i,1,Length@list,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,PlotLegends->{"a","b"}*)
(*]*)
(*]]]]*)


(* ::Input:: *)
(*RandomEntity["Financial",5]*)


(* ::Input:: *)
(*With[{items=RandomEntity[\!\(\**)
(*NamespaceBox["LinguisticAssistant",*)
(*DynamicModuleBox[{Typeset`query$$ = "sp500", Typeset`boxes$$ = TemplateBox[{"\"S&P 500\"", RowBox[{"EntityClass", "[", RowBox[{"\"Financial\"", ",", "\"SP500\""}], "]"}], "\"EntityClass[\\\"Financial\\\", \\\"SP500\\\"]\"", "\"financial entities\""}, "EntityClass"], Typeset`allassumptions$$ = {{"type" -> "MultiClash", "word" -> "", "template" -> "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", "Values" -> {{"name" -> "FinancialClass", "word" -> "sp500", "desc" -> "a group of companies", "input" -> "*MC.sp500-_*FinancialClass-"}, {"name" -> "Financial", "word" -> "sp500", "desc" -> "a financial entity", "input" -> "*MC.sp500-_*Financial-"}, {"name" -> "Commodity", "word" -> "sp500", "desc" -> "a futures contract", "input" -> "*MC.sp500-_*Commodity-"}, {"name" -> "ConcatVariables", "word" -> "sp", "desc" -> "concatenated variables", "input" -> "*MC.sp500-_*ConcatVariables-"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {"Online" -> True, "Allowed" -> True, "mparse.jsp" -> 0.724812`6.311770368411199, "Messages" -> {}}}, *)
(*DynamicBox[ToBoxes[AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, Dynamic[Typeset`query$$], Dynamic[Typeset`boxes$$], Dynamic[Typeset`allassumptions$$], Dynamic[Typeset`assumptions$$], Dynamic[Typeset`open$$], Dynamic[Typeset`querystate$$]], StandardForm],*)
(*ImageSizeCache->{222., {7., 15.}},*)
(*TrackedSymbols:>{Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],*)
(*DynamicModuleValues:>{},*)
(*UndoTrackedVariables:>{Typeset`open$$}],*)
(*BaseStyle->{"Deploy"},*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True]\),5]},*)
(*With[{*)
(*list=Table[FinancialData[i,"Close",{{2019}}],{i,items}],*)
(*leg=Table[FinancialData[x,"Name"],{x,items}]*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[div[[i]],div[[i]]],{i,1,Length@div,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,PlotLegends->leg*)
(*]*)
(*]]]]]*)


(* ::Input:: *)
(**)


(* ::Input:: *)
(*\!\( *)
(*NamespaceBox["LinguisticAssistant",*)
(*DynamicModuleBox[{Typeset`query$$ = "sp500", Typeset`boxes$$ = TemplateBox[{"\"S&P 500\"", RowBox[{"EntityClass", "[", RowBox[{"\"Financial\"", ",", "\"SP500\""}], "]"}], "\"EntityClass[\\\"Financial\\\", \\\"SP500\\\"]\"", "\"financial entities\""}, "EntityClass"], Typeset`allassumptions$$ = {{"type" -> "MultiClash", "word" -> "", "template" -> "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", "Values" -> {{"name" -> "FinancialClass", "word" -> "sp500", "desc" -> "a group of companies", "input" -> "*MC.sp500-_*FinancialClass-"}, {"name" -> "Financial", "word" -> "sp500", "desc" -> "a financial entity", "input" -> "*MC.sp500-_*Financial-"}, {"name" -> "Commodity", "word" -> "sp500", "desc" -> "a futures contract", "input" -> "*MC.sp500-_*Commodity-"}, {"name" -> "ConcatVariables", "word" -> "sp", "desc" -> "concatenated variables", "input" -> "*MC.sp500-_*ConcatVariables-"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {"Online" -> True, "Allowed" -> True, "mparse.jsp" -> 0.724812`6.311770368411199, "Messages" -> {}}}, *)
(*DynamicBox[ToBoxes[AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, Dynamic[Typeset`query$$], Dynamic[Typeset`boxes$$], Dynamic[Typeset`allassumptions$$], Dynamic[Typeset`assumptions$$], Dynamic[Typeset`open$$], Dynamic[Typeset`querystate$$]], StandardForm],*)
(*ImageSizeCache->{222., {7., 15.}},*)
(*TrackedSymbols:>{Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],*)
(*DynamicModuleValues:>{},*)
(*UndoTrackedVariables:>{Typeset`open$$}],*)
(*BaseStyle->{"Deploy"},*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True]\)*)


(* ::Input:: *)
(*With[{items=RandomEntity[\!\(\**)
(*NamespaceBox["LinguisticAssistant",*)
(*DynamicModuleBox[{Typeset`query$$ = "sp500", Typeset`boxes$$ = TemplateBox[{"\"S&P 500\"", RowBox[{"EntityClass", "[", RowBox[{"\"Financial\"", ",", "\"SP500\""}], "]"}], "\"EntityClass[\\\"Financial\\\", \\\"SP500\\\"]\"", "\"financial entities\""}, "EntityClass"], Typeset`allassumptions$$ = {{"type" -> "MultiClash", "word" -> "", "template" -> "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", "Values" -> {{"name" -> "FinancialClass", "word" -> "sp500", "desc" -> "a group of companies", "input" -> "*MC.sp500-_*FinancialClass-"}, {"name" -> "Financial", "word" -> "sp500", "desc" -> "a financial entity", "input" -> "*MC.sp500-_*Financial-"}, {"name" -> "Commodity", "word" -> "sp500", "desc" -> "a futures contract", "input" -> "*MC.sp500-_*Commodity-"}, {"name" -> "ConcatVariables", "word" -> "sp", "desc" -> "concatenated variables", "input" -> "*MC.sp500-_*ConcatVariables-"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {"Online" -> True, "Allowed" -> True, "mparse.jsp" -> 0.724812`6.311770368411199, "Messages" -> {}}}, *)
(*DynamicBox[ToBoxes[AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, Dynamic[Typeset`query$$], Dynamic[Typeset`boxes$$], Dynamic[Typeset`allassumptions$$], Dynamic[Typeset`assumptions$$], Dynamic[Typeset`open$$], Dynamic[Typeset`querystate$$]], StandardForm],*)
(*ImageSizeCache->{222., {7., 15.}},*)
(*TrackedSymbols:>{Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],*)
(*DynamicModuleValues:>{},*)
(*UndoTrackedVariables:>{Typeset`open$$}],*)
(*BaseStyle->{"Deploy"},*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True]\),10]},*)
(*With[{*)
(*list=Table[FinancialData[i,"Close",{{2019}}],{i,items}],*)
(*leg=Table[FinancialData[x,"Name"],{x,items}]*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[div[[i]],div[[i]]],{i,1,Length@div,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,Joined->False,PlotLegends->leg*)
(*]*)
(*]]]]]*)


(* ::Input:: *)
(*With[{items=RandomEntity[\!\(\**)
(*NamespaceBox["LinguisticAssistant",*)
(*DynamicModuleBox[{Typeset`query$$ = "sp500", Typeset`boxes$$ = TemplateBox[{"\"S&P 500\"", RowBox[{"EntityClass", "[", RowBox[{"\"Financial\"", ",", "\"SP500\""}], "]"}], "\"EntityClass[\\\"Financial\\\", \\\"SP500\\\"]\"", "\"financial entities\""}, "EntityClass"], Typeset`allassumptions$$ = {{"type" -> "MultiClash", "word" -> "", "template" -> "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", "Values" -> {{"name" -> "FinancialClass", "word" -> "sp500", "desc" -> "a group of companies", "input" -> "*MC.sp500-_*FinancialClass-"}, {"name" -> "Financial", "word" -> "sp500", "desc" -> "a financial entity", "input" -> "*MC.sp500-_*Financial-"}, {"name" -> "Commodity", "word" -> "sp500", "desc" -> "a futures contract", "input" -> "*MC.sp500-_*Commodity-"}, {"name" -> "ConcatVariables", "word" -> "sp", "desc" -> "concatenated variables", "input" -> "*MC.sp500-_*ConcatVariables-"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {"Online" -> True, "Allowed" -> True, "mparse.jsp" -> 0.724812`6.311770368411199, "Messages" -> {}}}, *)
(*DynamicBox[ToBoxes[AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, Dynamic[Typeset`query$$], Dynamic[Typeset`boxes$$], Dynamic[Typeset`allassumptions$$], Dynamic[Typeset`assumptions$$], Dynamic[Typeset`open$$], Dynamic[Typeset`querystate$$]], StandardForm],*)
(*ImageSizeCache->{222., {7., 15.}},*)
(*TrackedSymbols:>{Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],*)
(*DynamicModuleValues:>{},*)
(*UndoTrackedVariables:>{Typeset`open$$}],*)
(*BaseStyle->{"Deploy"},*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True]\),10]},*)
(*With[{*)
(*list=Table[FinancialData[i,"Close",{{2019}}],{i,items}],*)
(*leg=Table[FinancialData[x,"Name"],{x,items}]*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[div[[i]],leg[[i]]],{i,1,Length@div,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,Joined->False,PlotLegends->leg*)
(*]*)
(*]]]]]*)


(* ::Input:: *)
(*With[{items=RandomEntity[\!\(\**)
(*NamespaceBox["LinguisticAssistant",*)
(*DynamicModuleBox[{Typeset`query$$ = "sp500", Typeset`boxes$$ = TemplateBox[{"\"S&P 500\"", RowBox[{"EntityClass", "[", RowBox[{"\"Financial\"", ",", "\"SP500\""}], "]"}], "\"EntityClass[\\\"Financial\\\", \\\"SP500\\\"]\"", "\"financial entities\""}, "EntityClass"], Typeset`allassumptions$$ = {{"type" -> "MultiClash", "word" -> "", "template" -> "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", "Values" -> {{"name" -> "FinancialClass", "word" -> "sp500", "desc" -> "a group of companies", "input" -> "*MC.sp500-_*FinancialClass-"}, {"name" -> "Financial", "word" -> "sp500", "desc" -> "a financial entity", "input" -> "*MC.sp500-_*Financial-"}, {"name" -> "Commodity", "word" -> "sp500", "desc" -> "a futures contract", "input" -> "*MC.sp500-_*Commodity-"}, {"name" -> "ConcatVariables", "word" -> "sp", "desc" -> "concatenated variables", "input" -> "*MC.sp500-_*ConcatVariables-"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {"Online" -> True, "Allowed" -> True, "mparse.jsp" -> 0.724812`6.311770368411199, "Messages" -> {}}}, *)
(*DynamicBox[ToBoxes[AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, Dynamic[Typeset`query$$], Dynamic[Typeset`boxes$$], Dynamic[Typeset`allassumptions$$], Dynamic[Typeset`assumptions$$], Dynamic[Typeset`open$$], Dynamic[Typeset`querystate$$]], StandardForm],*)
(*ImageSizeCache->{222., {7., 15.}},*)
(*TrackedSymbols:>{Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],*)
(*DynamicModuleValues:>{},*)
(*UndoTrackedVariables:>{Typeset`open$$}],*)
(*BaseStyle->{"Deploy"},*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True]\),10]},*)
(*With[{*)
(*list=Table[FinancialData[i,"Close",{{2019}}],{i,items}],*)
(*leg=Table[FinancialData[x,"Name"],{x,items}]*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[div[[i]],leg[[i]]],{i,1,Length@div,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,Joined->False,PlotLegends->leg*)
(*]*)
(*]]]]]*)


(* ::Input:: *)
(*Manipulate[*)
(*With[{items=RandomEntity[\!\(\**)
(*NamespaceBox["LinguisticAssistant",*)
(*DynamicModuleBox[{Typeset`query$$ = "sp500", Typeset`boxes$$ = TemplateBox[{"\"S&P 500\"", RowBox[{"EntityClass", "[", RowBox[{"\"Financial\"", ",", "\"SP500\""}], "]"}], "\"EntityClass[\\\"Financial\\\", \\\"SP500\\\"]\"", "\"financial entities\""}, "EntityClass"], Typeset`allassumptions$$ = {{"type" -> "MultiClash", "word" -> "", "template" -> "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", "Values" -> {{"name" -> "FinancialClass", "word" -> "sp500", "desc" -> "a group of companies", "input" -> "*MC.sp500-_*FinancialClass-"}, {"name" -> "Financial", "word" -> "sp500", "desc" -> "a financial entity", "input" -> "*MC.sp500-_*Financial-"}, {"name" -> "Commodity", "word" -> "sp500", "desc" -> "a futures contract", "input" -> "*MC.sp500-_*Commodity-"}, {"name" -> "ConcatVariables", "word" -> "sp", "desc" -> "concatenated variables", "input" -> "*MC.sp500-_*ConcatVariables-"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {"Online" -> True, "Allowed" -> True, "mparse.jsp" -> 0.724812`6.311770368411199, "Messages" -> {}}}, *)
(*DynamicBox[ToBoxes[AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, Dynamic[Typeset`query$$], Dynamic[Typeset`boxes$$], Dynamic[Typeset`allassumptions$$], Dynamic[Typeset`assumptions$$], Dynamic[Typeset`open$$], Dynamic[Typeset`querystate$$]], StandardForm],*)
(*ImageSizeCache->{222., {7., 15.}},*)
(*TrackedSymbols:>{Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],*)
(*DynamicModuleValues:>{},*)
(*UndoTrackedVariables:>{Typeset`open$$}],*)
(*BaseStyle->{"Deploy"},*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True]\),a]},*)
(*With[{*)
(*list=Table[FinancialData[i,"Close",{{2019}}],{i,items}],*)
(*leg=Table[FinancialData[x,"Name"],{x,items}]*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[div[[i]],leg[[i]]],{i,1,Length@div,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,Joined->False,PlotLegends->leg*)
(*]*)
(*]]]]],*)
(*{{a,2},1,10,1}]*)


(* ::Input:: *)
(*Manipulate[*)
(*With[{items=RandomEntity[\!\(\**)
(*NamespaceBox["LinguisticAssistant",*)
(*DynamicModuleBox[{Typeset`query$$ = "sp500", Typeset`boxes$$ = TemplateBox[{"\"S&P 500\"", RowBox[{"EntityClass", "[", RowBox[{"\"Financial\"", ",", "\"SP500\""}], "]"}], "\"EntityClass[\\\"Financial\\\", \\\"SP500\\\"]\"", "\"financial entities\""}, "EntityClass"], Typeset`allassumptions$$ = {{"type" -> "MultiClash", "word" -> "", "template" -> "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", "Values" -> {{"name" -> "FinancialClass", "word" -> "sp500", "desc" -> "a group of companies", "input" -> "*MC.sp500-_*FinancialClass-"}, {"name" -> "Financial", "word" -> "sp500", "desc" -> "a financial entity", "input" -> "*MC.sp500-_*Financial-"}, {"name" -> "Commodity", "word" -> "sp500", "desc" -> "a futures contract", "input" -> "*MC.sp500-_*Commodity-"}, {"name" -> "ConcatVariables", "word" -> "sp", "desc" -> "concatenated variables", "input" -> "*MC.sp500-_*ConcatVariables-"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {"Online" -> True, "Allowed" -> True, "mparse.jsp" -> 0.724812`6.311770368411199, "Messages" -> {}}}, *)
(*DynamicBox[ToBoxes[AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, Dynamic[Typeset`query$$], Dynamic[Typeset`boxes$$], Dynamic[Typeset`allassumptions$$], Dynamic[Typeset`assumptions$$], Dynamic[Typeset`open$$], Dynamic[Typeset`querystate$$]], StandardForm],*)
(*ImageSizeCache->{222., {7., 15.}},*)
(*TrackedSymbols:>{Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],*)
(*DynamicModuleValues:>{},*)
(*UndoTrackedVariables:>{Typeset`open$$}],*)
(*BaseStyle->{"Deploy"},*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True]\),a]},*)
(*With[{*)
(*list=Table[FinancialData[i,"MarketCap",{{2019}}],{i,items}],*)
(*leg=Table[FinancialData[x,"Name"],{x,items}]*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[div[[i]],leg[[i]]],{i,1,Length@div,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,Joined->False,PlotLegends->leg*)
(*]*)
(*]]]]],*)
(*{{a,2},1,10,1}]*)


(* ::Input:: *)
(*With[{items=RandomEntity[\!\(\**)
(*NamespaceBox["LinguisticAssistant",*)
(*DynamicModuleBox[{Typeset`query$$ = "sp500", Typeset`boxes$$ = TemplateBox[{"\"S&P 500\"", RowBox[{"EntityClass", "[", RowBox[{"\"Financial\"", ",", "\"SP500\""}], "]"}], "\"EntityClass[\\\"Financial\\\", \\\"SP500\\\"]\"", "\"financial entities\""}, "EntityClass"], Typeset`allassumptions$$ = {{"type" -> "MultiClash", "word" -> "", "template" -> "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", "Values" -> {{"name" -> "FinancialClass", "word" -> "sp500", "desc" -> "a group of companies", "input" -> "*MC.sp500-_*FinancialClass-"}, {"name" -> "Financial", "word" -> "sp500", "desc" -> "a financial entity", "input" -> "*MC.sp500-_*Financial-"}, {"name" -> "Commodity", "word" -> "sp500", "desc" -> "a futures contract", "input" -> "*MC.sp500-_*Commodity-"}, {"name" -> "ConcatVariables", "word" -> "sp", "desc" -> "concatenated variables", "input" -> "*MC.sp500-_*ConcatVariables-"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {"Online" -> True, "Allowed" -> True, "mparse.jsp" -> 0.724812`6.311770368411199, "Messages" -> {}}}, *)
(*DynamicBox[ToBoxes[AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, Dynamic[Typeset`query$$], Dynamic[Typeset`boxes$$], Dynamic[Typeset`allassumptions$$], Dynamic[Typeset`assumptions$$], Dynamic[Typeset`open$$], Dynamic[Typeset`querystate$$]], StandardForm],*)
(*ImageSizeCache->{222., {7., 15.}},*)
(*TrackedSymbols:>{Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],*)
(*DynamicModuleValues:>{},*)
(*UndoTrackedVariables:>{Typeset`open$$}],*)
(*BaseStyle->{"Deploy"},*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True]\),10]},*)
(*With[{*)
(*list=Table[FinancialData[i,"MarketCap",{{2019}}],{i,items}],*)
(*leg=Table[FinancialData[x,"Name"],{x,items}]*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[div[[i]],leg[[i]]],{i,1,Length@div,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,Joined->False,PlotLegends->leg*)
(*]*)
(*]]]]]*)


(* ::Input:: *)
(*With[{items=RandomEntity[\!\(\**)
(*NamespaceBox["LinguisticAssistant",*)
(*DynamicModuleBox[{Typeset`query$$ = "sp500", Typeset`boxes$$ = TemplateBox[{"\"S&P 500\"", RowBox[{"EntityClass", "[", RowBox[{"\"Financial\"", ",", "\"SP500\""}], "]"}], "\"EntityClass[\\\"Financial\\\", \\\"SP500\\\"]\"", "\"financial entities\""}, "EntityClass"], Typeset`allassumptions$$ = {{"type" -> "MultiClash", "word" -> "", "template" -> "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", "Values" -> {{"name" -> "FinancialClass", "word" -> "sp500", "desc" -> "a group of companies", "input" -> "*MC.sp500-_*FinancialClass-"}, {"name" -> "Financial", "word" -> "sp500", "desc" -> "a financial entity", "input" -> "*MC.sp500-_*Financial-"}, {"name" -> "Commodity", "word" -> "sp500", "desc" -> "a futures contract", "input" -> "*MC.sp500-_*Commodity-"}, {"name" -> "ConcatVariables", "word" -> "sp", "desc" -> "concatenated variables", "input" -> "*MC.sp500-_*ConcatVariables-"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {"Online" -> True, "Allowed" -> True, "mparse.jsp" -> 0.724812`6.311770368411199, "Messages" -> {}}}, *)
(*DynamicBox[ToBoxes[AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, Dynamic[Typeset`query$$], Dynamic[Typeset`boxes$$], Dynamic[Typeset`allassumptions$$], Dynamic[Typeset`assumptions$$], Dynamic[Typeset`open$$], Dynamic[Typeset`querystate$$]], StandardForm],*)
(*ImageSizeCache->{222., {7., 15.}},*)
(*TrackedSymbols:>{Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],*)
(*DynamicModuleValues:>{},*)
(*UndoTrackedVariables:>{Typeset`open$$}],*)
(*BaseStyle->{"Deploy"},*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True]\),10]},*)
(*With[{*)
(*list=Table[FinancialData[i,"MarketCap",{{2015},{2020}}],{i,items}],*)
(*leg=Table[FinancialData[x,"Name"],{x,items}]*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[div[[i]],leg[[i]]],{i,1,Length@div,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,Joined->False,PlotLegends->leg*)
(*]*)
(*]]]]]*)


(* ::Input:: *)
(*With[{items=RandomEntity[\!\(\**)
(*NamespaceBox["LinguisticAssistant",*)
(*DynamicModuleBox[{Typeset`query$$ = "sp500", Typeset`boxes$$ = TemplateBox[{"\"S&P 500\"", RowBox[{"EntityClass", "[", RowBox[{"\"Financial\"", ",", "\"SP500\""}], "]"}], "\"EntityClass[\\\"Financial\\\", \\\"SP500\\\"]\"", "\"financial entities\""}, "EntityClass"], Typeset`allassumptions$$ = {{"type" -> "MultiClash", "word" -> "", "template" -> "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} instead. Use as ${desc3} instead. Use \"${word4}\" as ${desc4}.", "count" -> "4", "Values" -> {{"name" -> "FinancialClass", "word" -> "sp500", "desc" -> "a group of companies", "input" -> "*MC.sp500-_*FinancialClass-"}, {"name" -> "Financial", "word" -> "sp500", "desc" -> "a financial entity", "input" -> "*MC.sp500-_*Financial-"}, {"name" -> "Commodity", "word" -> "sp500", "desc" -> "a futures contract", "input" -> "*MC.sp500-_*Commodity-"}, {"name" -> "ConcatVariables", "word" -> "sp", "desc" -> "concatenated variables", "input" -> "*MC.sp500-_*ConcatVariables-"}}}}, Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {"Online" -> True, "Allowed" -> True, "mparse.jsp" -> 0.724812`6.311770368411199, "Messages" -> {}}}, *)
(*DynamicBox[ToBoxes[AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, Dynamic[Typeset`query$$], Dynamic[Typeset`boxes$$], Dynamic[Typeset`allassumptions$$], Dynamic[Typeset`assumptions$$], Dynamic[Typeset`open$$], Dynamic[Typeset`querystate$$]], StandardForm],*)
(*ImageSizeCache->{222., {7., 15.}},*)
(*TrackedSymbols:>{Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],*)
(*DynamicModuleValues:>{},*)
(*UndoTrackedVariables:>{Typeset`open$$}],*)
(*BaseStyle->{"Deploy"},*)
(*DeleteWithContents->True,*)
(*Editable->False,*)
(*SelectWithContents->True]\),10]},*)
(*With[{*)
(*list=Table[FinancialData[i,"MarketCap",{{2015},{2020}}],{i,items}],*)
(*leg=Table[FinancialData[x,"Name"],{x,items}]*)
(*},With[{total=TimeSeriesThread[Total,list]},*)
(*With[{div=Table[TimeSeriesThread[Apply[Divide],{t,total}],{t,list}]},*)
(*With[{tooltip=Table[Tooltip[div[[i]],leg[[i]]],{i,1,Length@div,1}]},*)
(*DateListPlot[tooltip,*)
(*PlotRange->Full,ImageSize->Full,AspectRatio->1/3,Joined->False,PlotLegends->leg*)
(*]*)
(*]]]]]*)
