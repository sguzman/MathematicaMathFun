(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    395306,       8010]
NotebookOptionsPosition[    385322,       7827]
NotebookOutlinePosition[    385790,       7845]
CellTagsIndexPosition[    385747,       7842]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "+", "x"}], "\[Equal]", "4"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7968161873389435`*^9, 3.7968161978065796`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"97dff5a4-e169-4575-a664-b3b42a76244b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "2"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7968161987874165`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c1812657-7b5a-43dd-aa3a-2d9d48f668ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "+", 
   RowBox[{"(", "2", ")"}]}], "\[Equal]", "4"}]], "Input",
 CellChangeTimes->{{3.7968162053268213`*^9, 3.7968162062608147`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"42886c29-d065-4cea-8c67-d7ff10e66448"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7968162066307783`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"bf51c4d7-a1c0-4e29-8deb-d87aeace288d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InflationAdjust", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", "\"\<USDollars\>\""}], "]"}], ",", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"1950", ",", "1", ",", "1"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796825324325783*^9, 3.796825358431195*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a0c13a14-3386-4fdc-8fb7-b6e2eee92dbe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox["\"0.09\"", 0.09111503352821963, AutoDelete -> True],
        NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 0.09111503352821963, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], "\[InvisibleSpace]", 
   StyleBox[
    RowBox[{"(", 
     StyleBox["\<\"USDollars\"\>",
      ShowStringCharacters->False], "\<\"Sun 1 Jan 1950\"\>", ")"}],
    FontColor->GrayLevel[0.5]]}],
  Quantity[0.09111503352821963, 
   DatedUnit["USDollars", {1950, 1, 1}]]]], "Output",
 CellChangeTimes->{3.79682536018182*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"0a836afb-6a72-4d45-9230-33326e4d4a6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InflationAdjust", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"100000", ",", "\"\<USDollars\>\""}], "]"}], ",", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"1950", ",", "1", ",", "1"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796825376022251*^9, 3.796825376608227*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ff93d0e0-a594-4e0a-b6d9-b04af6cc9e28"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
       "\"9\[ThinSpace]111.50\"", 9111.503352821963, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 9111.503352821963, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], "\[InvisibleSpace]", 
   StyleBox[
    RowBox[{"(", 
     StyleBox["\<\"USDollars\"\>",
      ShowStringCharacters->False], "\<\"Sun 1 Jan 1950\"\>", ")"}],
    FontColor->GrayLevel[0.5]]}],
  Quantity[9111.503352821963, 
   DatedUnit["USDollars", {1950, 1, 1}]]]], "Output",
 CellChangeTimes->{3.796825377241044*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"9022da3a-3644-4375-9b1e-8fe26cd68c58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InflationAdjust", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"1000000", ",", "\"\<USDollars\>\""}], "]"}], ",", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"1950", ",", "1", ",", "1"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7968253830094714`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"90cd4b95-bd3b-458f-a385-9df1b8767ea8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
       "\"91\[ThinSpace]115.03\"", 91115.03352821963, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 91115.03352821963, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], "\[InvisibleSpace]", 
   StyleBox[
    RowBox[{"(", 
     StyleBox["\<\"USDollars\"\>",
      ShowStringCharacters->False], "\<\"Sun 1 Jan 1950\"\>", ")"}],
    FontColor->GrayLevel[0.5]]}],
  Quantity[91115.03352821963, 
   DatedUnit["USDollars", {1950, 1, 1}]]]], "Output",
 CellChangeTimes->{3.796825383341524*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d9cecaf8-13ee-478f-af1b-78ed8127469f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Today"], "Input",
 CellChangeTimes->{{3.79682539193355*^9, 3.796825393638178*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ed8a56d5-4212-4484-89a6-f11095353cbf"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
     "\"Sat 25 Apr 2020\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2020", ",", "4", ",", "25"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "7.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.7968253939077325`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c638d8af-c883-480f-94ef-cfd5f272e2f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InflationAdjust", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TemplateBox[{
       InterpretationBox[
        TagBox[
         InterpretationBox[
         "\"91\[ThinSpace]115.03\"", 91115.03352821963, AutoDelete -> True], 
         NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
          "\[ThinSpace]"]& ], 91115.03352821963, Selectable -> False], 
       RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
       "US dollars", "\"USDollars\""},
      "QuantityPrefix"], "\[InvisibleSpace]", 
     StyleBox[
      RowBox[{"(", 
       StyleBox["\<\"USDollars\"\>",
        ShowStringCharacters->False], "\"\<Sun 1 Jan 1950\>\"", ")"}],
      FontColor->GrayLevel[0.5]]}],
    Quantity[91115.03352821963, 
     DatedUnit["USDollars", {1950, 1, 1}]]], ",", "Today"}], "]"}]], "Input",
 CellChangeTimes->{{3.796825403408385*^9, 3.7968254067699413`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b4699423-0cae-4169-8054-639ca880ecaf"],

Cell[BoxData[
 RowBox[{"InflationAdjust", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TemplateBox[{
       InterpretationBox[
        TagBox[
         InterpretationBox[
         "\"91\[ThinSpace]115.03\"", 91115.03352821963, AutoDelete -> True], 
         NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
          "\[ThinSpace]"]& ], 91115.03352821963, Selectable -> False], 
       RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
       "US dollars", "\"USDollars\""},
      "QuantityPrefix"], "\[InvisibleSpace]", 
     StyleBox[
      RowBox[{"(", 
       StyleBox["\<\"USDollars\"\>",
        ShowStringCharacters->False], "\<\"Sun 1 Jan 1950\"\>", ")"}],
      FontColor->GrayLevel[0.5]]}],
    Quantity[91115.03352821963, 
     DatedUnit["USDollars", {1950, 1, 1}]]], ",", 
   RowBox[{"{", 
    RowBox[{"2020", ",", "4", ",", "25"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7968254070394835`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6646b051-cf9f-445f-a1b6-a8b7acf735cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InflationAdjust", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"91115.03", ",", 
     RowBox[{"DatedUnit", "[", 
      RowBox[{"\"\<USDollars\>\"", ",", 
       RowBox[{"DateObject", "[", 
        RowBox[{"{", 
         RowBox[{"1950", ",", "1", ",", "1"}], "}"}], "]"}]}], "]"}]}], "]"}],
    ",", "Today"}], "]"}]], "Input",
 CellChangeTimes->{{3.796825412245516*^9, 3.7968254423609095`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"4c99269c-fe6d-471a-bc97-fb8240aaf96c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
       "\"995\[ThinSpace]709.29\"", 995709.2887236321, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 995709.2887236321, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], "\[InvisibleSpace]", 
   StyleBox[
    RowBox[{"(", 
     StyleBox["\<\"USDollars\"\>",
      ShowStringCharacters->False], "\<\"Sat 25 Apr 2020\"\>", ")"}],
    FontColor->GrayLevel[0.5]]}],
  Quantity[995709.2887236321, 
   DatedUnit["USDollars", {2020, 4, 25}]]]], "Output",
 CellChangeTimes->{3.7968254427085886`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"042265ce-2278-455f-89c1-3f70918ee8da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FinancialData", "[", 
   RowBox[{"\"\<NASDAQ:AAPL\>\"", ",", "\"\<Close\>\"", ",", "All"}], "]"}], 
  "[", "\"\<DatePath\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7968254985078382`*^9, 3.7968255407177396`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"cfe21b01-e0dd-40ed-97cc-e3eec43b56c8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 12 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1980", ",", "12", ",", "12", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"0.51\"", 0.5134000182151794, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 0.5134000182151794, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Mon 15 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "1980", ",", "12", ",", "15", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"0.49\"", 0.4866139888763428, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 0.4866139888763428, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Tue 16 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1980", ",", "12", ",", "16", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"0.45\"", 0.45089998841285706`, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 0.45089998841285706`,
                 Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           TemplateBox[{"9928"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Thu 23 Apr 2020 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "23", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"275.03\"", 275.0299987792969, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 275.0299987792969, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 24 Apr 2020 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"282.97\"", 282.9700012207031, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 282.9700012207031, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{76.19999999999999, {3., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{60.6, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{60.6, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 30229390248069674689, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{70.80000000000001, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{70.80000000000001, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 30229390248069674689, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{52.800000000000004`, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 30229390248069674689, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{91.2, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{91.2, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30229390248069674689 === $SessionID, 
   Out[9], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.796825562024019*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"87d25855-c350-4dc8-a661-b19520fdc7a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"First", "@", "#"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InflationAdjust", "[", 
      RowBox[{
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"Last", "@", "#"}], ",", 
         RowBox[{"DatedUnit", "[", 
          RowBox[{"\"\<USDollars\>\"", ",", 
           RowBox[{"First", "@", "#"}]}], "]"}]}], "]"}], ",", "Today"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], "&"}], "/@", 
  RowBox[{"Out", "[", "9", "]"}]}]], "Input",
 CellChangeTimes->{{3.796825587661847*^9, 3.7968255899134827`*^9}, {
  3.796825657606188*^9, 3.796825668518972*^9}, {3.79682588162679*^9, 
  3.79682593086987*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"502982fe-d283-41fe-85d8-ba4615fcf508"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 12 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1980", ",", "12", ",", "12", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             RowBox[{"InflationAdjust", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 TemplateBox[{
                   InterpretationBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.51\"", 0.5134000182151794, AutoDelete -> True], 
                    NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 0.5134000182151794,
                     Selectable -> False], 
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   "US dollars", "\"USDollars\""},
                  "QuantityPrefix"], ")"}], " ", 
                RowBox[{"(", 
                 InterpretationBox[
                  RowBox[{
                   TemplateBox[{"1", 
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "US dollar", "\"USDollars\""},
                    "QuantityPrefix"], "\[InvisibleSpace]", 
                   StyleBox[
                    RowBox[{"(", 
                    StyleBox["\<\"USDollars\"\>",
                    
                    ShowStringCharacters->
                    False], "\<\"Fri 12 Dec 1980 00:00:00\"\>", ")"}],
                    FontColor->GrayLevel[0.5]]}],
                  Quantity[1, 
                   DatedUnit["USDollars", 
                    First[{
                    
                    DateObject[{1980, 12, 12, 0, 0, 0.}, "Instant", 
                    "Gregorian", -7.], 
                    Quantity[0.5134000182151794, "USDollars"]}]]]], ")"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"2020", ",", "4", ",", "25"}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           TemplateBox[{"9931"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 24 Apr 2020 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             RowBox[{"InflationAdjust", "[", 
              RowBox[{
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], ",", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], "]"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{76.19999999999999, {3., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{60.6, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{60.6, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 30229390248069674689, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{70.80000000000001, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{70.80000000000001, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 30229390248069674689, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{52.800000000000004`, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 30229390248069674689, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{91.2, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30229390248069674689 === $SessionID, 
   Out[10], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.79682595937473*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"77cde884-5376-4a4e-9e12-1654c0a104db"]
}, Open  ]],

Cell["", "WolframAlphaShort",
 CellChangeTimes->{
  3.7968264662557583`*^9},ExpressionUUID->"cf15e7cb-7402-4499-a33f-\
4e2d99af5104"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    FractionBox["2", "3"], "\[Equal]", 
    RowBox[{
     FractionBox["1", "a"], "+", 
     FractionBox["1", "b"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   TemplateBox[{},
    "Reals"]}], "]"}]], "Input",
 CellChangeTimes->{{3.796826986653257*^9, 3.7968270155900183`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"4ba9b6b6-7e9a-4d8d-a472-00907e39d116"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"b", "\[Rule]", 
     FractionBox["3", "5"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.796827015937831*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"1387222e-4991-456f-b4bd-91da3b3068ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    FractionBox["2", "3"], "\[Equal]", 
    RowBox[{
     FractionBox["1", "a"], "+", 
     FractionBox["1", "b"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   TemplateBox[{},
    "PositiveIntegers"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7968270217384963`*^9, 3.7968270281454353`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3fdf7fc1-b9b9-4b74-9171-5aafe33b1370"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "2"}], ",", 
    RowBox[{"b", "\[Rule]", "6"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7968270286033683`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"caef3326-35d4-467c-8d34-ff6327be608b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    FractionBox["2", "3"], "\[Equal]", 
    RowBox[{
     FractionBox["1", "a"], "+", 
     FractionBox["1", "b"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   TemplateBox[{},
    "PositiveIntegers"], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7968270356450415`*^9, 3.796827036447363*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"32afebe9-1989-42e4-8ff2-b7cea26576da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "6"}], ",", 
     RowBox[{"b", "\[Rule]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "2"}], ",", 
     RowBox[{"b", "\[Rule]", "6"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7968270368485155`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"cc06cd0f-49cf-4737-9f43-e4be556196bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    FractionBox["2", "3"], "\[Equal]", 
    RowBox[{
     FractionBox["1", "a"], "+", 
     FractionBox["1", "b"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   TemplateBox[{},
    "PositiveIntegers"], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7968270414070086`*^9, 3.7968270415229044`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"d8130bb4-bc9f-44f3-ad54-9b8c54db64e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "2"}], ",", 
     RowBox[{"b", "\[Rule]", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "3"}], ",", 
     RowBox[{"b", "\[Rule]", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "6"}], ",", 
     RowBox[{"b", "\[Rule]", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.796827042494692*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"f8924a2a-c724-471e-8638-514dcc4c5281"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    FractionBox["2", "3"], "\[Equal]", 
    RowBox[{
     FractionBox["1", "a"], "+", 
     FractionBox["1", "b"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   TemplateBox[{},
    "PositiveIntegers"], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.796827046975975*^9, 3.796827047022829*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e93391a1-f1c9-4a1e-a909-62ec574378a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "2"}], ",", 
     RowBox[{"b", "\[Rule]", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "3"}], ",", 
     RowBox[{"b", "\[Rule]", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "6"}], ",", 
     RowBox[{"b", "\[Rule]", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7968270475620327`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"911b664f-169e-4d08-bb28-7a1764abd260"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiplySides", "[", 
  RowBox[{
   RowBox[{
    FractionBox["2", "3"], "\[Equal]", 
    RowBox[{
     FractionBox["1", "a"], "+", 
     FractionBox["1", "b"]}]}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7968273879690094`*^9, 3.796827399200493*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"03ebb278-1fc4-45d8-91a8-2f9edf252df3"],

Cell[BoxData[
 RowBox[{
  FractionBox["4", "3"], "\[Equal]", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "a"], "+", 
     FractionBox["1", "b"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.796827399469675*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"b924a2c9-62d1-4024-a872-5ba97d83ac2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpandAll", "[", 
  RowBox[{
   FractionBox["4", "3"], "\[Equal]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "a"], "+", 
      FractionBox["1", "b"]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7968274043673887`*^9, 3.7968274079402914`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"d3be2108-a2b8-4c0d-b6e8-68958e612052"],

Cell[BoxData[
 RowBox[{
  FractionBox["4", "3"], "\[Equal]", 
  RowBox[{
   FractionBox["2", "a"], "+", 
   FractionBox["2", "b"]}]}]], "Output",
 CellChangeTimes->{3.7968274081942534`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"3a01a939-94b4-4074-b4e8-361283b5685b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["4", "3"], "\[Equal]", 
     RowBox[{
      FractionBox["2", "a"], "+", 
      FractionBox["2", "b"]}]}], "\[And]", 
    RowBox[{"a", "\[Equal]", 
     RowBox[{"2", "k"}]}], "\[And]", 
    RowBox[{"b", "\[Equal]", 
     RowBox[{"2", "m"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "m"}], "}"}], ",", 
   TemplateBox[{},
    "PositiveIntegers"]}], "]"}]], "Input",
 CellChangeTimes->{{3.796827444122752*^9, 3.796827490105487*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"445a1063-b27a-4153-930d-e2a67866546c"],

Cell[BoxData[
 TemplateBox[{
  "FindInstance", "exvar", 
   "\"The system contains a nonconstant expression \
\\!\\(\\*RowBox[{\\\"a\\\"}]\\) independent of variables \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"k\\\", \\\",\\\", \\\"m\\\"}], \
\\\"}\\\"}]\\).\"", 2, 18, 1, 30229390248069674689, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7968274905066366`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"f89cd1e4-5882-4b15-bbd7-d1e4768ca82e"],

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["4", "3"], "\[Equal]", 
     RowBox[{
      FractionBox["2", "a"], "+", 
      FractionBox["2", "b"]}]}], "&&", 
    RowBox[{"a", "\[Equal]", 
     RowBox[{"2", " ", "k"}]}], "&&", 
    RowBox[{"b", "\[Equal]", 
     RowBox[{"2", " ", "m"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "m"}], "}"}], ",", 
   TemplateBox[{},
    "PositiveIntegers"]}], "]"}]], "Output",
 CellChangeTimes->{3.796827490653781*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"1fca2902-7b4c-4e11-b716-f459a4a320bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    FractionBox["4", "3"], "\[Equal]", 
    RowBox[{
     FractionBox["2", "a"], "+", 
     FractionBox["2", "b"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   TemplateBox[{},
    "PositiveIntegers"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7968275054950843`*^9, 3.796827508303235*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"1398d636-be47-4f47-8078-b39e0db53cba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "2"}], ",", 
    RowBox[{"b", "\[Rule]", "6"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.796827509020938*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"de5e30f4-e794-41e1-9ff0-09848a3d6c22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["4", "3"], "\[Equal]", 
   RowBox[{
    FractionBox["2", "a"], "+", 
    FractionBox["2", "b"]}]}], "/.", "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "2"}], ",", 
     RowBox[{"b", "\[Rule]", "6"}]}], "}"}], "}"}]}]], "Input",
 NumberMarks->False,
 CellLabel->"In[20]:=",ExpressionUUID->"5ab2cfa8-40b9-4512-b3ad-da0fe7f4bf49"],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{3.7968275250183787`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"aee86c14-a491-45a1-a0fb-cf711f2f09d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["2", "a"], "/.", "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", "4"}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7968275527768736`*^9, 3.7968275574889793`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"430b1abe-b5ac-4220-8565-ed82fca73e32"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox["1", "2"], "}"}]], "Output",
 CellChangeTimes->{3.7968275582979403`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"3162b10b-35a5-4dcf-b7cf-6c2a7b0b6035"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["2", "b"], "/.", "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"b", "\[Rule]", "12"}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7968275685732*^9, 3.7968275735181475`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"76a5f819-ac37-442f-9fd5-bf91ae4ae73a"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox["1", "6"], "}"}]], "Output",
 CellChangeTimes->{3.7968275739414673`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"3cde69ca-937e-4022-8539-4922ed8b2c5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"First", "@", "#"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Quantity", "[", 
      RowBox[{
       RowBox[{"QuantityMagnitude", "@", 
        RowBox[{"Last", "@", "#"}]}], ",", 
       RowBox[{"DatedUnit", "[", 
        RowBox[{"\"\<USDollars\>\"", ",", 
         RowBox[{"First", "@", "#"}]}], "]"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], "&"}], "/@", 
  RowBox[{"Out", "[", "9", "]"}]}]], "Input",
 CellChangeTimes->{{3.796830615640462*^9, 3.796830632721919*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"1f733639-0be1-4064-b33d-89c122184be9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 12 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1980", ",", "12", ",", "12", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             InterpretationBox[
              RowBox[{
               TemplateBox[{
                 InterpretationBox[
                  TagBox[
                   InterpretationBox[
                   "\"0.51\"", 0.5134000182151794, AutoDelete -> True], 
                   NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 0.5134000182151794,
                   Selectable -> False], 
                 RowBox[{
                   FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                 "US dollars", "\"USDollars\""},
                "QuantityPrefix"], "\[InvisibleSpace]", 
               StyleBox[
                RowBox[{"(", 
                 StyleBox["\<\"USDollars\"\>",
                  
                  ShowStringCharacters->
                   False], "\<\"Fri 12 Dec 1980 00:00:00\"\>", ")"}],
                FontColor->GrayLevel[0.5]]}],
              Quantity[0.5134000182151794, 
               DatedUnit["USDollars", 
                First[{
                  
                  DateObject[{1980, 12, 12, 0, 0, 0.}, "Instant", 
                   "Gregorian", -7.], 
                  Quantity[0.5134000182151794, "USDollars"]}]]]]}], "}"}], 
           ",", 
           TemplateBox[{"9931"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 24 Apr 2020 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             InterpretationBox[
              RowBox[{
               TemplateBox[{
                 InterpretationBox[
                  TagBox[
                   InterpretationBox[
                   "\"282.97\"", 282.9700012207031, AutoDelete -> True], 
                   NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 282.9700012207031, 
                  Selectable -> False], 
                 RowBox[{
                   FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                 "US dollars", "\"USDollars\""},
                "QuantityPrefix"], "\[InvisibleSpace]", 
               StyleBox[
                RowBox[{"(", 
                 StyleBox["\<\"USDollars\"\>",
                  
                  ShowStringCharacters->
                   False], "\<\"Fri 24 Apr 2020 00:00:00\"\>", ")"}],
                FontColor->GrayLevel[0.5]]}],
              Quantity[282.9700012207031, 
               DatedUnit["USDollars", 
                First[{
                  DateObject[{2020, 4, 24, 0, 0, 0.}, "Instant", 
                   "Gregorian", -7.], 
                  Quantity[282.9700012207031, "USDollars"]}]]]]}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{76.19999999999999, {3., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{60.6, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 24, 30229390248069674689, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{70.80000000000001, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 24, 30229390248069674689, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{52.800000000000004`, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 24, 30229390248069674689, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{91.2, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30229390248069674689 === $SessionID, 
   Out[24], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.796830626982312*^9, 3.796830655083613*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"17efb52f-86c4-4922-9e5c-2b5d65e58667"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"First", "@", "#"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InflationAdjust", "[", 
      RowBox[{
       RowBox[{"Quantity", "[", 
        RowBox[{
         RowBox[{"QuantityMagnitude", "@", 
          RowBox[{"Last", "@", "#"}]}], ",", 
         RowBox[{"DatedUnit", "[", 
          RowBox[{"\"\<USDollars\>\"", ",", 
           RowBox[{"First", "@", "#"}]}], "]"}]}], "]"}], ",", "Today"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], "&"}], "/@", 
  RowBox[{"Out", "[", "9", "]"}]}]], "Input",
 CellChangeTimes->{{3.7968306719545765`*^9, 3.7968306733901997`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"6e6c8277-1e64-441b-bc1f-fba73859c24d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 12 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1980", ",", "12", ",", "12", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             RowBox[{"InflationAdjust", "[", 
              RowBox[{
               InterpretationBox[
                RowBox[{
                 TemplateBox[{
                   InterpretationBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.51\"", 0.5134000182151794, AutoDelete -> True], 
                    NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 0.5134000182151794,
                     Selectable -> False], 
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   "US dollars", "\"USDollars\""},
                  "QuantityPrefix"], "\[InvisibleSpace]", 
                 StyleBox[
                  RowBox[{"(", 
                   StyleBox["\<\"USDollars\"\>",
                    
                    ShowStringCharacters->
                    False], "\<\"Fri 12 Dec 1980 00:00:00\"\>", ")"}],
                  FontColor->GrayLevel[0.5]]}],
                Quantity[0.5134000182151794, 
                 DatedUnit["USDollars", 
                  First[{
                    
                    DateObject[{1980, 12, 12, 0, 0, 0.}, "Instant", 
                    "Gregorian", -7.], 
                    Quantity[0.5134000182151794, "USDollars"]}]]]], ",", 
               RowBox[{"{", 
                RowBox[{"2020", ",", "4", ",", "25"}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           TemplateBox[{"9931"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 24 Apr 2020 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             RowBox[{"InflationAdjust", "[", 
              RowBox[{
               InterpretationBox[
                RowBox[{
                 TemplateBox[{
                   InterpretationBox[
                    TagBox[
                    InterpretationBox[
                    "\"282.97\"", 282.9700012207031, AutoDelete -> True], 
                    NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 282.9700012207031, 
                    Selectable -> False], 
                   RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                   "US dollars", "\"USDollars\""},
                  "QuantityPrefix"], "\[InvisibleSpace]", 
                 StyleBox[
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"],
                  FontColor->GrayLevel[0.5]]}],
                Quantity[282.9700012207031, 
                 DatedUnit["USDollars", 
                  First[{
                    
                    DateObject[{2020, 4, 24, 0, 0, 0.}, "Instant", 
                    "Gregorian", -7.], 
                    Quantity[282.9700012207031, "USDollars"]}]]]], ",", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], "]"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{76.19999999999999, {3., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{60.6, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 25, 30229390248069674689, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{70.80000000000001, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 25, 30229390248069674689, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{52.800000000000004`, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 25, 30229390248069674689, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{91.2, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30229390248069674689 === $SessionID, 
   Out[25], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7968306977859116`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"75edc01f-ceb1-4dab-978f-cb05a77a2713"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 24 Apr 2020 00:00:00\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", "0.`"}], 
         "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "7.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"3e84f62f-8ad5-4155-8d56-37b81d9e819c"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 24 Apr 2020 00:00:00\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> False]}],
       FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", "0.`"}], 
         "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "7.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.796830746771202*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"336d4bf5-e657-4095-8d57-38aafa9af6e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{
   RowBox[{"DateObject", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", "0.`"}], 
      "}"}], ",", "\"\<Instant\>\"", ",", "\"\<Gregorian\>\"", ",", 
     RowBox[{"-", "7.`"}]}], "]"}], ",", "\"\<Year\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[27]:=",ExpressionUUID->"84b5d704-2d71-408e-9278-fb2dfbaba8b8"],

Cell[BoxData["2020"], "Output",
 CellChangeTimes->{3.7968307540304427`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"55fd7409-baee-41ed-a0ab-13a01e3acce2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{
   RowBox[{"DateObject", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", "0.`"}], 
      "}"}], ",", "\"\<Instant\>\"", ",", "\"\<Gregorian\>\"", ",", 
     RowBox[{"-", "7.`"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796830760927555*^9, 3.796830773263688*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"aa7e306b-7c63-46bf-a51c-0643be005b9b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2020", ",", "4", ",", "24"}], "}"}]], "Output",
 CellChangeTimes->{3.7968307735176883`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"187b2882-c41b-4631-8b85-410c11ee97e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", "=", 
     RowBox[{"Out", "[", "9", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"modate", "=", 
          RowBox[{"DateValue", "[", 
           RowBox[{
            RowBox[{"First", "@", "#"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
             "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "@", "#"}], ",", "\[IndentingNewLine]", 
          RowBox[{"InflationAdjust", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Quantity", "[", 
             RowBox[{
              RowBox[{"QuantityMagnitude", "@", 
               RowBox[{"Last", "@", "#"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"DatedUnit", "[", 
               RowBox[{"\"\<USDollars\>\"", ",", "modate"}], "]"}]}], "]"}], 
            "\[IndentingNewLine]", ",", "Today"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], "]"}], "&"}], ",", "data"}], "]"}]}],
   "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7968307828069377`*^9, 3.796830835095755*^9}, {
  3.796831341896304*^9, 3.796831420236285*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"931c2a20-eb19-41ab-b2ef-dac500eafb17"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 12 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1980", ",", "12", ",", "12", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             InterpretationBox[
              RowBox[{
               TemplateBox[{
                 InterpretationBox[
                  TagBox[
                   InterpretationBox[
                   "\"1.56\"", 1.5574456506171412`, AutoDelete -> True], 
                   NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 
                  1.5574456506171412`, Selectable -> False], 
                 RowBox[{
                   FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                 "US dollars", "\"USDollars\""},
                "QuantityPrefix"], "\[InvisibleSpace]", 
               StyleBox[
                RowBox[{"(", 
                 StyleBox["\<\"USDollars\"\>",
                  ShowStringCharacters->False], "\<\"Sat 25 Apr 2020\"\>", 
                 ")"}],
                FontColor->GrayLevel[0.5]]}],
              Quantity[1.5574456506171412`, 
               DatedUnit["USDollars", {2020, 4, 25}]]]}], "}"}], ",", 
           TemplateBox[{"9931"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 24 Apr 2020 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             InterpretationBox[
              RowBox[{
               TemplateBox[{
                 InterpretationBox[
                  TagBox[
                   InterpretationBox[
                   "\"282.99\"", 282.9882018473323, AutoDelete -> True], 
                   NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                    NumberSeparator -> "\[ThinSpace]"]& ], 282.9882018473323, 
                  Selectable -> False], 
                 RowBox[{
                   FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                 "US dollars", "\"USDollars\""},
                "QuantityPrefix"], "\[InvisibleSpace]", 
               StyleBox[
                RowBox[{"(", 
                 StyleBox["\<\"USDollars\"\>",
                  ShowStringCharacters->False], "\<\"Sat 25 Apr 2020\"\>", 
                 ")"}],
                FontColor->GrayLevel[0.5]]}],
              Quantity[282.9882018473323, 
               DatedUnit["USDollars", {2020, 4, 25}]]]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{76.19999999999999, {3., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{60.6, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 29, 30229390248069674689, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{70.80000000000001, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 29, 30229390248069674689, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{52.800000000000004`, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 29, 30229390248069674689, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{91.2, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30229390248069674689 === $SessionID, 
   Out[29], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.796831464440181*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"712c0a03-b3be-4935-b6cc-4435eadef89c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", "data"}]], "Input",
 CellChangeTimes->{{3.7968315242004404`*^9, 3.79683152789559*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"014d9d92-7f9c-46f9-8d27-4032f1dd98d1"],

Cell[BoxData[
 TemplateBox[{
  "First", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"First\\\", \\\"[\\\", \
\\\"data\\\", \\\"]\\\"}]\\).\"", 2, 30, 2, 30229390248069674689, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.796831528581989*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"42563707-32bd-4232-abb9-fe8ba8e10340"],

Cell[BoxData[
 RowBox[{"First", "[", "data", "]"}]], "Output",
 CellChangeTimes->{3.796831528597621*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"c54dd406-44a3-4a26-abd3-3f182e5867e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Out", "[", "9", "]"}]}]], "Input",
 CellChangeTimes->{{3.7968315335117397`*^9, 3.796831535680242*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"c17a40d3-e417-44e9-8f4e-c6c3224c64ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"\"Fri 12 Dec 1980 00:00:00\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
           False]}], FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"1980", ",", "12", ",", "12", ",", "0", ",", "0", ",", 
             "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
         RowBox[{"-", "7.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox["\"0.51\"", 0.5134000182151794, AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 0.5134000182151794, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"]}], "}"}]], "Output",
 CellChangeTimes->{3.7968315360188775`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"60f7c738-b32a-401f-a0dc-e2353ebaa44a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{
   RowBox[{"Out", "[", "31", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796831541465311*^9, 3.796831542562049*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"e1ed8881-0f65-4fbd-bf67-b70592610683"],

Cell[BoxData[
 TemplateBox[{
  "DateValue", "arg", 
   "\"Argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"DateObject\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1980\\\", \\\",\\\", \\\"12\\\", \\\",\\\", \\\"12\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\
\"}], \\\",\\\", \\\"\\\\\\\"Instant\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"7.`\\\"}]}], \\\"]\\\"}], \\\",\\\", \
TemplateBox[List[InterpretationBox[\\\"\\\\\\\"0.51\\\\\\\"\\\", \
0.5134000182151794`, Rule[Selectable, False]], RowBox[List[FormBox[\\\"\\\\\\\
\"$\\\\\\\"\\\", TraditionalForm], \\\"\\\\[VeryThinSpace]\\\"]], \\\"US \
dollars\\\", \\\"\\\\\\\"USDollars\\\\\\\"\\\"], \\\"QuantityPrefix\\\", \
Rule[SyntaxForm, Mod]]}], \\\"}\\\"}]\\) cannot be interpreted as a date or \
time input\"", 2, 32, 3, 30229390248069674689, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7968315432010183`*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"15e64582-b787-4a33-8cfa-526a4c148ccc"],

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Fri 12 Dec 1980 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"1980", ",", "12", ",", "12", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "7.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", 
     TemplateBox[{
       InterpretationBox[
        TagBox[
         InterpretationBox[
         "\"0.51\"", 0.5134000182151794, AutoDelete -> True], 
         NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
          "\[ThinSpace]"]& ], 0.5134000182151794, Selectable -> False], 
       RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
       "US dollars", "\"USDollars\""},
      "QuantityPrefix"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Year\"\>", ",", "\<\"Month\"\>", ",", "\<\"Day\"\>"}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.79683154323878*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"4f0a0c6f-cbc1-4739-99bc-9dbcce656403"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{
   RowBox[{"First", "@", 
    RowBox[{"Out", "[", "31", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7968315825373135`*^9, 3.7968315837298536`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"0a488f0b-1f2a-4d95-94d1-2507625fad5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1980", ",", "12", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.796831583936921*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"603b3ef2-bbc4-4fa1-aa1d-45cd94912539"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateObject", "[", 
  RowBox[{"{", 
   RowBox[{"1980", ",", "12", ",", "12"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.796831589066206*^9, 3.7968315912569013`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"11a53123-1936-4d18-97e7-6d1c991d0a2b"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
     "\"Fri 12 Dec 1980\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"1980", ",", "12", ",", "12"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "7.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.796831591473174*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"7a973a1b-2b58-48e5-a363-d48d2ba05a5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InflationAdjust", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", 
     RowBox[{"DatedUnit", "[", 
      RowBox[{"\"\<USDollars\>\"", ",", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Fri 12 Dec 1980\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1980", ",", "12", ",", "12"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "7.`"}]}], "]"}]},
        "DateObject",
        Editable->False]}], "]"}]}], "]"}], ",", "Today"}], "]"}]], "Input",
 CellChangeTimes->{{3.7968316000442667`*^9, 3.796831602150674*^9}, {
  3.7968318422498302`*^9, 3.796831861675053*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"c93f9d1d-f9e4-439e-b219-abbee559c2ed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox["\"3.03\"", 3.0335909531744014`, AutoDelete -> True],
        NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 3.0335909531744014`, Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], "\[InvisibleSpace]", 
   StyleBox[
    RowBox[{"(", 
     StyleBox["\<\"USDollars\"\>",
      ShowStringCharacters->False], "\<\"Sat 25 Apr 2020\"\>", ")"}],
    FontColor->GrayLevel[0.5]]}],
  Quantity[3.0335909531744014`, 
   DatedUnit["USDollars", {2020, 4, 25}]]]], "Output",
 CellChangeTimes->{3.7968318624397063`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"2b7d8867-d088-449f-8a17-bdcfb26c0600"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{"3.0335909531744014`", ",", 
    RowBox[{"DatedUnit", "[", 
     RowBox[{"\"\<USDollars\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"2020", ",", "4", ",", "25"}], "}"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[38]:=",ExpressionUUID->"61f69073-4031-4b68-b5cc-69355e919efa"],

Cell[BoxData["3.0335909531744014`"], "Output",
 CellChangeTimes->{3.796831889218895*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"0bae8ca8-ffea-44e1-a289-4d81afe6f188"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{"3.0335909531744014`", ",", 
    RowBox[{"DatedUnit", "[", 
     RowBox[{"\"\<USDollars\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"2020", ",", "4", ",", "25"}], "}"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[37]:=",ExpressionUUID->"201cd3c7-72be-4e3b-add2-891573fe5a2c"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TagBox[
     InterpretationBox["\"3.05\"", 3.046663187800777, AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 3.046663187800777, Selectable -> False], 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.7968318795088825`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"e66e1def-60b8-467b-831b-02a3cb083986"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{"Out", "[", "35", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7968318679397097`*^9, 3.7968318716561627`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"2a0ee634-cf56-453c-a6e5-5ffa2ebbc177"],

Cell["\<\
Quantity[3.0335909531744014, DatedUnit[\"USDollars\", 
  {2020, 4, 25}]]\
\>", "Output",
 CellChangeTimes->{3.796831871941415*^9},
 CellLabel->
  "Out[36]//InputForm=",ExpressionUUID->"a967b606-60cb-4b7f-8d99-\
b932351b2ad7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{"QuantityMagnitude", "@", 
    RowBox[{"InflationAdjust", "[", 
     RowBox[{
      RowBox[{"Quantity", "[", 
       RowBox[{"1", ",", 
        RowBox[{"DatedUnit", "[", 
         RowBox[{"\"\<USDollars\>\"", ",", 
          TemplateBox[{
            RowBox[{
              StyleBox[
              "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
              "\"Fri 12 Dec 1980\""}], 
            RowBox[{"DateObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"1980", ",", "12", ",", "12"}], "}"}], ",", 
                "\"Day\"", ",", "\"Gregorian\"", ",", 
                RowBox[{"-", "7.`"}]}], "]"}]},
           "DateObject",
           Editable->False]}], "]"}]}], "]"}], ",", "Today"}], "]"}]}], 
   "\[IndentingNewLine]", ",", "\"\<USDollars\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.796831899298045*^9, 3.7968319099963737`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"3543032a-89c1-4bc4-9e64-b97d713d5eaf"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TagBox[
     InterpretationBox["\"3.03\"", 3.0335909531744014`, AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 3.0335909531744014`, Selectable -> False], 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.7968319102438574`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"fb0a0f61-1ffd-41fa-85c7-b2d5df1582e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", "=", 
     RowBox[{"Out", "[", "9", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"modate", "=", 
          RowBox[{"DateValue", "[", 
           RowBox[{
            RowBox[{"First", "@", "#"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
             "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "@", "#"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Quantity", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"QuantityMagnitude", "@", "\[IndentingNewLine]", 
             RowBox[{"InflationAdjust", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Quantity", "[", 
                RowBox[{
                 RowBox[{"QuantityMagnitude", "@", 
                  RowBox[{"Last", "@", "#"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"DatedUnit", "[", 
                  RowBox[{"\"\<USDollars\>\"", ",", "modate"}], "]"}]}], 
                "]"}], "\[IndentingNewLine]", ",", "Today"}], "]"}]}], ",", 
            "\"\<USDollars\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
       "]"}], "&"}], ",", "data"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7968319198234725`*^9, 3.7968319234961295`*^9}, {
  3.7968319830790896`*^9, 3.7968319928757734`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"5ac0080c-0062-44c7-9d89-eac5c88e4897"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 12 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1980", ",", "12", ",", "12", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"1.56\"", 1.5574456506171412`, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 1.5574456506171412`, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Mon 15 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "1980", ",", "12", ",", "15", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"1.47\"", 1.4749904923840054`, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 1.4749904923840054`, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Tue 16 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1980", ",", "12", ",", "16", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"1.37\"", 1.36636728742043, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 1.36636728742043, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           TemplateBox[{"9928"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Thu 23 Apr 2020 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "23", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"275.07\"", 275.065380906635, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 275.065380906635, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 24 Apr 2020 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"282.99\"", 282.9882018473323, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 282.9882018473323, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{76.19999999999999, {3., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{60.6, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 40, 30229390248069674689, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{70.80000000000001, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 40, 30229390248069674689, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{52.800000000000004`, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{52.800000000000004`, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 40, 30229390248069674689, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{91.2, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{91.2, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30229390248069674689 === $SessionID, 
   Out[40], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.796832027807723*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"185ea4c7-bef4-4ae6-88ed-fea4c736b8df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FinancialData", "[", 
   RowBox[{"\"\<NASDAQ:AAPL\>\"", ",", "\"\<Close\>\"", ",", "All"}], "]"}], 
  "[", "\"\<DatePath\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7968321155977364`*^9, 3.7968321263387527`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"b1eebc77-8be9-491b-b9a3-0f2d2f55b906"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 12 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1980", ",", "12", ",", "12", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"0.51\"", 0.5134000182151794, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 0.5134000182151794, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Mon 15 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "1980", ",", "12", ",", "15", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"0.49\"", 0.4866139888763428, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 0.4866139888763428, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Tue 16 Dec 1980 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1980", ",", "12", ",", "16", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"0.45\"", 0.45089998841285706`, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 0.45089998841285706`,
                 Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           TemplateBox[{"9928"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Thu 23 Apr 2020 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "23", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"275.03\"", 275.0299987792969, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 275.0299987792969, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Fri 24 Apr 2020 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "7.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "24", ",", "0", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", 
                   RowBox[{"-", "7.`"}]}], "]"}]},
              "DateObject",
              Editable->False], ",", 
             TemplateBox[{
               InterpretationBox[
                TagBox[
                 InterpretationBox[
                 "\"282.97\"", 282.9700012207031, AutoDelete -> True], 
                 NumberForm[#, {Infinity, 2}, DigitBlock -> 3, 
                  NumberSeparator -> "\[ThinSpace]"]& ], 282.9700012207031, 
                Selectable -> False], 
               RowBox[{
                 FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
               "US dollars", "\"USDollars\""},
              "QuantityPrefix"]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{76.19999999999999, {3., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{60.6, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 41, 30229390248069674689, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{70.80000000000001, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{70.80000000000001, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 41, 30229390248069674689, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{52.800000000000004`, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{52.800000000000004`, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 41, 30229390248069674689, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{91.2, {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30229390248069674689 === $SessionID, 
   Out[41], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7968321361998167`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"88d65106-7e4e-4e75-8e3b-0c0ea587a326"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Out", "[", "41", "]"}], ",", 
     RowBox[{"Out", "[", "40", "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Marketing\>\""}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    FractionBox["1", "3"]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Nominal\>\"", ",", "\"\<Real\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7968321550682325`*^9, 3.7968322278714*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"7281a95d-8384-4f35-8f1f-d1ceb7c31550"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1., 0.4, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        PointBox[CompressedData["
1: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
g3h28zWHeJGbN4f5tHHN2f70/HkX26tNWkD+0Ee3YH3Q+8XNKLdvIfYi6oCN
ETrki9CGsJzy23Ud8qX8T0vIt1r2lsyfnu/XtsT6cTWMqV7/2xLrdZZW3J/q
S23GlG+VS61g/sCvVlBfjIytob6HaraGeusOaM32o/OJ7yh3qrXh9dL5Sb82
UF/UpW2g3ttp2gJWereF9oHFKDdOteX5qb5VbAdY64E4uKAdj0f1+Xg7Xh/d
h34fltP7o27t2f50nja3PdR/+0hYTueBb9qzvun7qSQduL2Qh2Z1YH0IuXuo
A7SXX3Xg9dH3Xwk7sr3o+6+SHVkuvu+RDnRkfYvvf9TnHXk+IdfjdWIs5GYx
xHbbTrxe+h7pSScen75HitPZ52uI75dChQlrkTWB3VYolyd3Zj7//A9bMbv4
/McL7BToAnJJR6xOIOxWrk3fU233+9/rS99PNesK7QNjCSs7uwpsbOnK6yG+
d7r648UXcq1xNx9PF/LgqG4cL/T91ybEzs1u/nhNBJYidof1msO7+/bfKLC9
vjvPL+bzrnF7KYLgLwV9/ReMKPhnCzIfIXfXBHl9AstXgv76vxL/P0F/vW+F
PJi5B/MV2KrVA+Sq04P5i/n0n4zvCGxm6Alyu0ZPXp/o7/XvyfoT2PjWk/Ut
cChtL15fJMG/KmE93Wkxnty3F7cX2Endm9crsFS5N7cX/dVevWE8fVFv7i+w
eZL7Xxb9lQp9oH0g2If1IeTGfMJGjxQCh4718eerTHzfcX9D4GDXvsyH/HdO
X9aPWK9zuC/oQ3rTF/xPTdzP9/foAtsz+/F6yR8OIlZe9uPxyZ8T9Of4FP5k
lOjvx5tN8bW/P/in9qw/5x8Rr0F5AOuD3hcUDWP6vrUNYv3xAMhPZuyBnA/p
+9ZCjP381nIg5C9l0kDIX6EYg9h/Rf5x8w+CfCW3GMT+J8bTxg8CPsFtYTl9
j5J3MI9Pz3dNB0P+1scMxvwc4vZ0v9q+TZjvYxsjh/B49P5r4xCYz70xhNvT
+/wIQ0FuGUN5faTPdYT/23/Q+/FrQ5kPvR//y+3peVPPOoyw/77EWz0M+CiX
CfPzYuD3MOZD9S6TwfPR+9CAwe1pv3DRYH1SvfuB7a30w3k9dD5RfTi0l/oj
Nr9ie1sZAXy8KiOwXvcZweuher1kBPsXPY+mGglyudJI1ifV656M6b6HdWIk
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
+Ow396f72W3/wPjq1D/Mh+5f7kFsPv7D+qH7orH/pfH833cJTPJx3sri92mM
nYS1lzvp91vcf3l+uo8b4y+N59/PlQv8Bbm17S/0d+5heyma9Oz/y9W8hK1p
Gej3Z5oS5vvB3m1f7t//VSL/88zXH90nzv0Py+k+biPC/+mP7kOPJPyfvgTW
IkR45vMV7YM5IsD4Vn1f7uvHMQiH+a/35Xkr0+/jZI0I7e06hP+rn2I8b0hE
5L8G2wcuR2Q+9Ps4gUjQXx4UCeTaykigr+DFSKBP60ck4Kv2j8z6FPbVl0UG
uXkO5fbXyMxPYE+JAjh0Osqz/29v9xNht9J08ofUUWE8rVJUaO+ciMr2Efe9
pQ/h9uL3k9QU0bi9kOvlozFfgc3u0aC/8o4w/z5SIGl06G+Uic76Iv5dosN4
7uzozF/gYKIYILdKIXY6xmD7C77SzBisf/H7UerBGDy/wHbxmIC9djGZv8DK
NMJWHEmMF9gXk+cTcuMpYXfgHfq9qjaxeD2ivTYlFttH4OBuxNYjbO/Eiv3M
z390f39ibPA3c0dsiD/7AWIvehyINyU/4tDWODw+fX9wNw7Emxw1Lsvpfnye
uByfFI9N4nJ80/3923G5P/3+UySZ29P3E7kI8/cVZkNf7v++kD1C5vXR7yf9
Ew/GN7LHYznxr4dyd1g8fzz63kBeFw/4W1ni8/rp+47a8Xl+ur8/JD63p+9f
VyPWL8Vnf6C/F18zAc9Pv/80MAHIAysQh74n8Mej33/S+iUEfsGlCUF/1lnE
zhdsLymJQG4uToT6PIXY+5gI9KukSgz2D1QMY8pvxxNDfpY9ltP3JVryJJif
yyXx9Xua8nO3JNBffctyyq96kqSQX83SSSF/2p2TQv40EiaD/qGSyYCP2wHl
8oxkwE87kAzqi1MsOfsj+W+75Oi/ZnIej+y/Nzn4s/kkOfsb6bN1CtYvfZ80
OQXo29iVgu1B/vuQMP8emhszJcbXBML8PYu1PSXo17mfEtYjRU8F61HzhTF9
n70lFa+Pvj+5k4rHp++roqQGfw+oqZkffV/VODXEi3wrNehDi5iGx6fvZ3Km
Af+3GqSB8Z3hiHVJ4fb0/Uw2heej/VBdhecj/kOxvbJW4fHoe5TMaQG7tdKy
PWg/Nzgt86W/l7AK2wedtDCfOiAd+wPt35YjNs+nY38gvt/ScX6g73n6pge+
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
2P9pf+b58sEpKJ8l787xRPubud1hPuVod1hP4C1h3l8ZSYKQ70Klg9BfswlL
e0vQfedXQRjPStgD9OmURCx17AH6MJ/34Pih9/vxerKc7ucW68n2p/sq7Xry
+uj+qNmT/Yvuh8bpxf5N9/eL9OJ6TPWudS9eL9W7yb3Y3nS/eFcvXj/dzy3Y
m/ivuUz3WSf05vxH98u392b9UH2+35v9me7PNOsDODS2D+uD7hNv6QP95bt9
2H/ofk2UvrA+Z1Rf9ge6P7O5L6xXvRWW033ciP3In84/If45+2F929CP8wf5
w/V+nO/o+3epP8hD2QgrI23iX7c/zBe8Qjj895P/9Af/cTIPAHtLtQdAe3Uw
4f/2e+QPPwdAfHgZBkJ9VWoOBP8NDBgI8WgsH8j1jOIr3SC/v/97ZdUIG69y
kj/3HcT5gvhbg1i/9P3BmUGc7yg/VB4M8W72Gsz5iPgvGgz68U4OBv0qH7F9
KDiE/Yvyw/whsD75+BDQh/Ye2weTDYX4VY8MBf3rb4aC/c3Ew5CvhjhwaBjY
w3g5DPNDAoPjk/iWMHg+qicdDI4/qm/PCP+336HnDXk41EOp2HCoh2rb4Zxf
qJ5MHQ713os9gsaPF6R6V3gE+xc9P7cizPsHY9IIqGehnSN4fbR/KDAS6mOw
BWJr/Eiop862kbxeOk+5P5LzN+0fmo6i+RM/pfOJMT5ufpnOJ0KjOL7ofOKO
L8+Xi+p15NFsX9r/jBzN/kDnK5tGg760m6Nh/cEIYzh/0N+PyzGG8yfpdz1i
/Rpi8y/2t7OOBb5enbEgNy6PZf+m/dvvsZwviH+mcX580fspudY45D9oHOjT
+TGO8yf5R4bxvH7af9YY7+cP//cY+49nf6P987LxbH/aT6SdwPqh5/uqEzj/
0P2wPhM4/ul5ZAlht/Jleh45PYH50v640kTfPv7v7/WcyPqj572FiNUPE9n/
6fmo+yQ/PxBfb94kiB/l2CTmQ/v5d5M4f9H+Lelk8E95zmT2F9q/HUYcfD2Z
44n4JppC87WMTnxLTWH7ULwdnALrM19MYX3R/i3+VPYHisfiU9kfKB7bT0V/
eDqV8zO9n4lrsn3o/Lioyfal97ltTOZP72+mmNBfLTSN+AytTfc7Wk5j+9N5
8cRpXC/ovHjHNM5X9P6l+XSK1wf0PiY0DrG7dTrrh/jdm875g+KpyQz2Tzof
Hj0D1iOFZkB79fYMrgcUb5Fmsj9SPI2YyfakfLCR8H/7PTofvjGT/YHi7Z9Z
1L+RRvyzE/5v/0Tn7+tmcXs6f786i+1J5+//zgJ9Ollmcz6k9191ZjMfep90
aTbbh94f/PKxW4jeH2ScQ/rKOoPeJwXmsL7p/cHAOew/9D7x+xzWF71PTD+X
44veJ1afy/5Df2+031yODzG+tZSw3n2XwKoyj+1N9zuqzGN70vuP3vOAn714
HtuD3oed8rH/fivUYz77H/FdMB/4ySfmo749xE63BcyX3sfMWwB81KMLgL/+
dgHMbyZZSDjTLnofM3sh86X3STZhY043gY1XCzke6f1XwkWkvyjDBXZLEub3
Y8EDhLXp0+n913Ns78RbTPNV6yawVHwx86P3X+0WQ3/7CWGr2l26DxhnCfRX
ihDWIt6l+3etCbt7d9H9u8mE/9sPiPZyLIvno/trBQm73eg+XVC3YDxrAmF9
1wq6v7bd4vxL9wPzLSV+/v0+sxlhvs9nj10K7b0tS9lfxHihxstIv7vuCOyO
Wgb6lDcj1m4tg/UHIy6H+aURy0GublgO+tSvL4f1mdIKWt9eul9oZyPsSitJ
n2tXoD6vYPvQnxXsb8Q/80riK3Wj96G1V0J7y0Hs/FwJ65cyrgKs1iRsZcoo
sD5gFdjL++a3j1iF/CHdavDvQDXC9j1632r0XQ3+FLJW8/giPrQ0a0g/md7R
+9HKayB+rF5rIB84i9ZAPpJOrYF8YFZYS/P3eEf5IUhYd+n9sjefsDXzNPE/
Ttid6cfj+7XAX567jvMXvc89sg70HXyzDvzBSrwe1qvOWg/61w+tB/82X65n
fyN/SLAB7OuV2MD5R2Bj/wb052cbIL5ceSP0l4sRVnpmFONrbQlLWZtSfD3e
yPohf4izifVB91sLb+L8JLDeCuXmpE28XnFfVYm5meNB4ECBzcz3ueDfYjP7
yzPBfzzK3W2bOT++EPrNG+L4FthqGgK5MybE9hHjqXcI6+krC2w32sL8ngp9
jtzC+hZY2bSF9Sdw4OYWtu8TwTfCVo5PgeXhW9l+j4U+12/l+BA4eA2x9Xcr
x5dYn5N1G9tHYH3NNo4Hgc3L25iPwPZvwkbWMwJ7mbbD+pVa29n/hL5DF7eD
/t0f23k9or2cYQe012rsYP8kffffwflHYOnbDphPTbsT7KFX3cn5Toxn9tnJ
+UFge8lO8J9A6l1sH7rvXGkX24P499wF/uUu3AXrkU9ie6v8bvBfp/tujhfR
X5q/G+ZTj+3m+CZ/frcb81uXPRBfyhzCSp2OlJ8P74H4N17vYf1Qfk60F+Iv
eHAvjGe9QOzE38f2IL4l9gFfc98+sJf9dB/o34u7n+Ob/KHofl6P8JdAm/1g
P/fRfrCXHPsAzKcVOgD6C7Y8wPEqsDXxAMcb6TPGQRhPz38Q7GM2R7k9DrG3
lfB/+xWB/4+qs46T2nf6eHGHxR2KOyzuUNxhcTug2OGwOBxWnEMXdyjusF/c
KW7HsbhDgcNtcYenz3wyvH7Z/96vSdvJZDKTNGnWKHwEz5vVGv7Q+ogUv+zx
R6T2dvmPsD3gz7eZk5F+gRaW5H/KWEtqf/cWS6q/fsOS43O0o1J7qsZRKZ97
NspsXD3K/Rf57s9RKX/YuY9Bn3utke/WHZPyqXnpmORfgZ/HpPyh5Dwusdtz
XPI/K1Lm4LfjUn3VbCckf/PUOyH3x8En5Pzx5QTHL4zf1JNSvvPWltkccJLb
F+PPZSel/KpnPMX+gfFbjVOS/ay+YKtOSYw/F5+S7KOeOsXtjf5W9bRkD7v3
acl+roWnpfLa8dOSfbxvTkvPV3qekcq7552R7KFbZ2R7pzgr9WfP7LMcP+EP
h2T2Pzsr3d9Oek5iV7lzUnlzvywPRJ2Tnq8kOS/lf3fp81I80zuel9o/+PC8
nK8TRkj91VMiQuovhh4hxV//5AgpPmjxLkj39xa9IF0fmHhB8i9luyz3uSPZ
/hSfrFaRUr5Ut0VK8ctzSy5vN78o5WvXmItcnljbfJHjB7H3+kX2F2JTCfD9
iN2jAmx/Yn1DQLq/70qA/YHyu/U7wPmbOJjrksTGWrAz3iL2By5J19s/LnG8
IXbluCzJtQaXuT2JAxcuc/wjVr7J7M56RWK97hVJH98gWa5+Btvz1zwi+2a+
yv33Ielf6yq3P7G//1VuTypvLxXyBsmJvRmusX9RebM62JnPEge81zgeUHll
8TX2B2L3yWuSPsFe1yX7qwuuS+3pOXad/R/2fn2d8xVd7+pxA3z/LLE29wbr
j/HakRvcfzFee3FDul8g+U32b7pen3VT0td38Cb3B2Lr6U3p+qDrlmzvsrek
8v59stx+fEvWP/Ft6flaqduS3NsB7MyfYM+Ht6X7uxPckfUvfkfWv90d2Z/D
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
g+uD78XDarD++J5ydQ2OlyQPRtZg/fC92neZ/YNrgsX36/aKmpyP8T1dRE1+
Hr7/+1JTxDtxvq9ai/sHvqc8W4vjAfT9WIv9G/pmrM3+h+83atSW4onnFJi/
PzGCtaX8509Xh/sTviepWkd6nqtPHTmfvakj2S+Qui73J8SvynU5PiH+9qzL
9UP+mFeX7Yv2TlEP+onvn9SK9aT84ulWT4r/xmwwf2/jP1SP9UO8Cq0vlTd9
9aV8EthfX+o/ypP63N8Qrzo2gD7lviJeTZM5uKeBFB/VRw3Yv6FvQo8UP+zJ
Hqn/uHZ5pPysPfCw/uhf8RpyPkS8Kgrm89bc2xuyPTE+u9tQig++2I04/uP7
EncjKX8FWzWS7mfcAqvJBuP78BiNpXxgF2gsyV0tZLk2pjHbF/1faSL1ZyVf
E+4/0L9pEyle6aOacDyC/huacH7C+CZ3U9G/cP6Pp1FT9mfE2+FNpXjqX9tU
yn/eBs04PsEfhjaT4ktgVTMpXymRYB5fu781k/KlNai5FN+DZnOpPdXzYOVK
Pej7ubmUL4zMLaR84lrWgvsb/OFMC8ne3g9gPg/AzNBS2F9871cd7IxfML45
2VLqn753Lbl98H1w2lYcP3C+RJVW3B/w/WrvVty++P+p12BnPIX/I0vVWopf
rkqtuX0Rz3q05nyL71fntpbioZIiBNfvEv9HViGE+z++X+0aIt3fNyuE/Rf6
Hwxhe+F70LJtJDY6t5Hu758BdsYTOH9kXxuuH75fjWrD/oHzfDq05f6O+Da1
LfsLxut72kr2cz9sy/XH96wJ2klydWc7jufQ93479k98zxxX5/iB77GL6Nyf
8b31fzrrg/8zuKNz/8H34bHa43kptuJ77ELtpeuVVu25f8CeN9vz/fB9bfQO
3L74Hjh/B/Yf/B9Z8w7c3/D/U6NF+QNvkN/+dpD9IW9HPE98n6016cj5APOj
kR05X8He68F8XoA7VyfWB/Zs2Em6n28Y2Gg9GP6wphPHW/jzRVnuH9KZ+zO+
x1/ZmeuD/8O+0JnbH//H8bUz92f8X8jAUO4/+L9bE6ye34L/4zgXyvbA/y98
CuX+jv/jyNSF64P/k17ahdsb/49+ugv3D/w/+nuwM17B/wGm78r1x/9HVOvK
9cP/FZ7oyvfD/xm87SrpF0jTjesP/auAlRr4/xZ3r27cP/B/Ia+6cf/B/0Ok
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
ByCaKw8=
         "]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.655728, 0.8, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        PointBox[CompressedData["
1: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
6acVbWI7psGP9WQ0tOR6iftzWAKuN1XROKlpYmsshK9t8Wv5MED889b+8KIj
dT6R8mL7n4V3TrP9+iOR7X8Kh3aWdFeKYf/OO1krxId4bLxhzf7dDgsGp9/O
yhY7LgmWMfXaXTBb7JJH8Iavu3+bvhX3j8QveKKLvaHvEnF8Rmw5VStkFscc
1MgWj/d5p+CVD3zLbq9k/VMMpyn45atYM799h3uOWHI64xWfvzIgEX8vbrOF
fnexq+Ph3F2+Y7brSYr7twgOHBJz/NtJPr+kDe7T9ew+szt8no3Gafy+sDAP
m6WsN6bD5w8siH3bg+PHPXjuxUytvQM5/jXDQ5WVBh0OYP2jnoR6f8fIp262
bP9UuM+w6p0Viaw31sHnZ3xbk8j86t8I+3V23h43WOx01WSMt2uU9rX5sf2T
4bORW1snD+J4vRbO8T08Z5M68/UReOyrk4fqB7Ae6n0G44W33NMJx1kPmcH7
UqTW9fhXf3rAcgOCP57bIv79jlGwQsOhJTWLWH/mwUFK8+d3b2d9POks8kmn
5qXOm9i/K+BRUl3fSzezvj8Iex6/U+F3gu19CxfflpHLTGQ975pSKzjLbTGP
Wcx6PgK+3GldiPsOPs/mCrwpN7X+WEc+z0YEB63QK/uVLf5+9Lun1gozh8ts
vPOazwcKhUsOmI5bNZ/Ps8mC7/U50/JrBttbA097FpPS+zjrza5ptcJRy3q7
PhtYb46GF84eaeb1lfV8Jqw8xTOpRZ71zyt4Voy3/3Fjjn8y52oFnV5vl45d
zHrDEA593Hp11yLWG0vgpZWRhxwHcfx4CQdO6fHpfBPHa+nzmA9tmxwVV8Dx
Wh9+Wl+tfNdMPF402sKdhobe/eXH8U4qvVbICzxy414L6x9deNovQ4tobY53
i2GLcodhA75yvNsJj4sOzVjVi+PbsP9qhdJh2d06lYnHH/0F8IKUtWFn8sR2
9IO7vr101X8Ex+czsFb90qiVZzk+P4HrpGVfRN5i/Tv3AuJr2fjN+5ZwfNsG
K912vGsjy/aehsPttN0fGHB8LoE79HNVlKMVfsJW1w2MZkWz3tl8EZ5dsttx
B8fnk/BT9+7qsf5sfzGcab181b39vN6+wdETxy6vKOb1ppVRKww/tmd4LxPW
v3EZf+9XXpZeO5X54D58cPOy7J2hbH8r7Gdc7F4Uwnqzf2atkPJKcl71TvHP
p1vCG43c0i1SWL/fhbcX37LRecz6/QscajvEYIQf6/e+l/D9Lrc/krGU3/8U
+Jp2lo3aHtab6+DYJRve+j0Qx0/EZzhqcrcFza9Yv/fJqhVGd7z5PXQX228O
H/CUGmH6L5+tge3UH6o3/KuXo+G7P0fY37NivSZk1wohk1bPrOJ8wnQV3PPj
8YqCCrY3Mvvv9xPZaXs+25sLe7pO9c25Lba+yeVa4efyK9fis8X97egOF1Rf
CnjJ+iniANzFuf5nd8ZT3jW4+8mb+tPyWF/WwRP19jTvy2X9u/wK5tP79w6d
FMR4CIdVU6XmbL7AeLgMP91yLC0ySRxfCrWwjWp1r7j8buL2y1+tFSzjps+a
Limuh0pC4KQJY+4U/hF/LpEF7zer330oWmz91/COrPYxcfViO8pdQ/6KTJqm
2cx4NoL3Z+Y9GTNZ/LlGBtytfHzn5INiW1fBVQlyt0fcYb3Z5XqtcKqf3ZmD
28WfpxvA0XG2rodviz+vtof9V19IrT4qtucLeP2knAnuMmLHdcqpFX7/uh0u
ry52yQj40vvzg1oHM55t4aw9D/S392X/B8A7DYxEapyv5EnmIh9OOLo7k/HV
OByuXh6qY6nLeFgEH33bYrnMmPG8A94ea7PPdS/nQzp5yJ/9f5SuuMz8NR/e
GZ1q7yYr/tzTF07zPN37SzzjIRme0LzYqKmd8fsYjk542a3rYOavOTdQH1/V
7bvBm/lrK1ybH2G35xjzVyLcsZuUr/4Mtvch3OOHml3DcM6Xfvz9fNnlyePp
dJ+bGC+VYgMyOL+uToA36l28c4fzN4UH8JrFby7vnsPx7CscGNYa0n0o2695
C/VF3VXnGbyeJeLge91lGz06sT8L4cHzolr9VrL9LbDJo4Mfdh5g+/vdrhXu
bPqz7sJ8tn8afGWmeaBImddXAdyv7+7qa4qM5ybY21FnpnoY84NaPn6/06cV
vS9x/mQB975ZuOJ0CK9HT1jrxL6xAePYv5/gMfLB9zu+Zf+q3MH3edJmbsoP
tt8czm8M9jJQZX5bDccoFEnomTG/HYaLHnbb6HuV+UGpoFYY2MtBboYh48EU
Xl+u+TI5m/GwEraWC7vZgfnQ/xAc9XbqmNW3WE/kwH/Wbvug+m9+P/Eu6in1
LU0j+3F8c4PVT7hqXU3h/G4/3CdznZfqGtYTV+G21I7JR36ynqiDbe4t/nGD
8ZgXdg/x76SmqDiH8ZANrx+n1yfjC9v7BraeVtk42of93a0Q+Ue6eswCjn/V
wXDU1ojbizlfU7gEbzkw+dSh1xzfqmHtF1/v/97J60/2PvL/Y6tXTWEcT0bB
8ya/77FMn+PdRbjv85/XFf043lXCR8cG2T49zfzQuQjzAVsPS5WvHO9Gwl+v
f4i+NozzUTt4+ePxG9bOY36ogHdEperVf2B+6/igVnh4vG3XERfmBz04Y9KI
CqtK5jcb+OOvoArzTWKb7oK/qGlLbNvI/NChuFaIqI69MHGA2BLD4Xmy/WZc
msj8tvDv5+/6bNSZw/zmDx+2sf+qNkHsiLNwft1VjWxn5rN5D5EvFc00u5aL
7b8dLjVrcMpdynyWBEdIxybd/Mb2PoIvXtG5kXmA/WldgvmUq0rHhK3MZ1vg
Wl3psq6cv5ecghN2K3ipTGR7H8JNn8+P3cP/v/53eGK1w9H9zuzPTY/QH583
BXv8x/6Mh2+d+LHVwVhsjSJYyfL1rBsirqe0wTN1ZPorqLG+0HhcK9x2kum2
4x6vrxPwu15Fr/p95nh3D45xmWY0+hPHu2Z4fM2mo7MaeP2pP6kV0k/GvzjA
9ZeSqfD+wL5OG5s43t35+7nThI8z+P1GNMKe8UVffyix/apPUX9V5xuoabP9
k2H/F7mzlRXZ/rWwYeuNiEtljIcG+Hi1tlZiCuO5dym8tEnJ2JbxbAbLTy55
c2ce2+8BL4vqskRLn+tBUbD+StvICOYXCaUyzNfUtj0reM/8MAlWeXuzz7cL
zG8rYIMDyw2Tuf4QcRA+7FE5Zvh/zG/X4S99Xsz4EsX8MOEZ5mN2vVNOcf3Q
3xWebvVHM76Q+SECHtc4ziTxAPPzFVh2d9Lx5brMzyK4/uvg4zGmrH+dnyO/
55y+vi6B+S0UvjFt4pxIjmcS2bBky57n+hJsfw2cPXl1dM1S8d9z7FqOfLG1
MXD1e7E1MuHK0ysL7tuKbf0KNi6WWJHVyvmFTAWu57cOPVUs2F5D+KKpclip
PceLC/CIXZcneJzlePESbsib0Rx+hu2VflErSJVf/1U7jeut+rCzrOXmFjn2
tx18zKx4rd5a9mc5PHxUv9XeHK/zpF7WClefTZ0a1sx8rAvPmp7/qugK89ti
eLH5ZP8vrGetd8Kd+32Pk7JhPEhUon6TvX1lHr9fhWFw87cTR5z7ML8tgO89
UP3oNZzx4AePcgi13LGV+e0MXP/lRmKyJNerhlbh+nFNWqC+l/EwF+7hJb/d
neNNxDa4WqZ4xbWdzM+n4Y3v+23qW8z5Zwk86c+y8dNYn/rPflUrzJ5T7DRW
iv27GW5fqjbebK7Y1Sfh/Tnz1u3V5vyzGH5munxpgjXHk2+wvvVt2w9DOF5s
rMZ4s7WzyrF23j+Ih0f5GDWu2sv1wvvwsqruwrgPjIdWOFmudOGhcra//+ta
ofG8UXTnfawnjsOy9/tF9nzL+LgL9zu3a98irt/7f4G7WXSM/bya7e9bg/qn
o5yrJeOlegocbbnY9lEL7yfkwy3+Py1tpTnefYa1S+cXdUjg/Y8+b2qF1HfT
l1Vos/2TYVmzoImj+HxX/TWwRKj8lArOh/M+wlemzYu6w/tZjcq1GL9eeXbr
+pH3PwTYvzZSFOrE9q+C3bw6fvHex/ZHwl6dXj1Mrhf/vIKiCOPVOKuod1rs
XxP4inVCWbMRx2t3eFLHwB1jorg+cQBW05hbqn2d7b8Gv1oVq5x0iPP78XW1
gt5ehZu/eD8qYjkctqw956kb7y+Fw5GXsh2GV3H+XAsXjltfqBrP59U6vcV8
YOOoF+WcT1eHwCJJt9xb+byflAUrj3xZXjab95NewyYH03zXdWB75d6hfuty
V+bLbNYPQfDAJTMOq3szHjLe/T3v6tA6awPjoQo2dtp/OteB86cu9ZjvWGvv
msv5eJ4BrDlvmmTgaPbnf/CGwVLeKo+YL17A9gGVg+u+8n5Sp/d/97u+H7si
kvEwAp5b2+u8FONFwRa+2F79dNi/9e3n8OogdZXDI5jfJD9gfP7e2cB6IfOb
Llz+vGerUhHz2yJ4xIWFNQnzWb/tgPMTpaYfdmP86nysFRbJdr3g1oH5eD68
tj7pS/dyfv++sKaPinPeH8ZvMqzzJMx+1TP235wG5NussyfqGP9xW2GtDT2m
JPyrLxPhp/NUn5rKM5+VwPe/Xy88znwXYfUJ+XhWQ5PmDuYzHzjL9PaUwRas
1xLgn+bng11a2d4H8OmxHVr6LmK99hX+HfJpV49E1r/enzEf7hk4zoLrGwpx
8JXR931dXzJeC+GVLSN6yPB+kWcL7KvT5ZHnJ7a/XyPqp1bDyysnsP+ONf5d
L5j27cNY9l8BXDTwYv2uGOaDJnj0rfnz2nYzn6k1oX9dTbZuT2M+toBNPk7v
PmsAv//bsNT1yw/Pfmf8foJ9Rau+vzDk+pTKl7/niXU+9e/P798ctpPPqmr2
YPtXw+NGx2/ep8589gGO3pFfbpzIfKDcXCs4nZdfJc/1L31T2L5b40j7bbze
VsKr90pvidrK9cBD8Pipcg7plby+erUgv70olhyawfWpifAC5Q3ben/m/Vw3
OG7Az0MvJ7D9++HfC7vX3J3N6+8qPOpI5vL3vH8a59JaKwxon/P07C/eHw+D
LQvnmxrv5v3xy7DZq1tfNwdy/e8NfNahrFfP7rz+l7Xh5ydWLLS24/pqMHxd
KfeGoyHbewku+Hi8wUuO7a2G5Y0qNnVYw/bKfsX8YM+vK+pTuJ62Dz72YaBJ
EJ+fbXoR7n/aJ/n3K94fr4QDvxQPa4ngemDnb6h3Qs+fCa/ieuBI+Ms4x1Bn
dz6/Oh0evCajt6Urn79dAa/TcFiVFcL7+x2/1woeFXY2NS5cD9SD62oOj7IK
5v4EG7hg4+ONX2bzeeHP4KG/M2oqZvH+eIcftYJMxBKvobTCcFjnkEn1/lg+
73wh/KhGVe9wu9gSf+B3MaOWGB7h87a1fyJ/1mQVR+Vyv8Q8OEwnds9HkdgR
2+Hc3BKbxYZsbxJcuC3qv4VXud9g8C9cf6nXVsYsYn9aw/G1VYovurC9W+CH
Ax4eHr2Q7T0FG5+oCgxqYnsfwuWbcktXFDAeZrXXCsP2b1h4NojxsAm+/m1O
7cvfjIcEuFhnpnwvL8ZvERw13mLc7PWM3zbY9Or2o4F8fnnjht+1wvNttgcG
1HI8OwEfnGe9OX0V8+89WHrbf+PyuL7l3wznvvEoXXef+Uz9D+rVjQOnzVrB
6ysW7rxwTdh7V+aHO3CMwxy3k6w34hrhNefnRDTo8PpTlRAJXWZpOZR95vVn
AVv18k5PzeD1dQs+OP3RQPsLHI8b/v68+bt3qWNZ7/TuIBLWxs46oe/FetMM
vqK20bfzv3rCA+6u4S350ZD173s4q2xlk8xp1r9KkiJBwv1T9+7M96aT4LGa
jiVzhnP+sQJO8hjQ/ucE5x8H4artGuYdeH9Xv6eUSCjNHLlnSx3nHxPghRc8
K4IDuN7mCv/uuGnaWE+ut0XAEvGKRZc0uT58BT645lpx12ucH43tKBIuPFA7
NqCa8w9nWGazx4Sz+1lvhsIBJgV+OQ2cj2bDzbYZKbPHcb2t5u/no7+0ajpy
fS24k0g48y3OZ8kNzucy4aBgyfO6bzl/fvX3859fnwzdwfmnjLRIyJG3ndh4
mutre+GuF1/ZLFgj/nnrC7D/lJsjLkzh/PklvDBncpqEHuej0p1FQo1B5vL0
V5yP6sODkkVbT6/kfPQ87FX2fal5Juej5fC+6CtzOs4W//sSqS4iYfeXxIta
v9h+PTgn83PV5gts/2J4V9mwQ/GvOd6VwePd9hRm7ed4JyEjEgw7dqib3Mbx
bhi8QNVLVz+Z4/OCv+48ePY4Na4H+f39+Snn7//awvHuN7wsw+CKjwnnc0Nl
RULEnG6FQZc4/5gLuxe+3xSux/nHNljKVWuHij/j+TR8OdzN+xqvF8dBciLB
d4RJaUM465vN8LUFNtf93Bi/J+GHM63Xj6tg/BbDy2eW3rNk/ZA+s6tIqF5T
mVLD+rJ6I6x+LM7N9hPryXjY5fic2h+9eP3dhw+VSsS78XrwbIX75o8dnR3I
+mxDN5HweHpVdeNO1mfH4flb74b1imF+uAsPdls54AjnaxFf4F2qD0ZmdmX7
+8qLhPjS4MIiOV5fMXB7bvyWq5Ecn/NhTaN3gQ1TWZ99hjdEee4f9IPjW5/u
IuFkwvXFCgfZ/slws/J/J1Zy/I27CTur+ypYv2S9+xHu5qL25RT/vxK9FUSC
/Lcfg/Jmsf0CrDLD775kHvt7FRy28kn0Vu4/aayHxwSlvezF/Ssaij1Ewt4t
1klpXF+3NoEfJ34P2cz9Pf7usEPVpXPLPnJ98wA87MH2jttUmB969BQJPVY/
7KDBfOc5Hi7evV+1y13mt+Xw7xvOkQ91GQ/h8LUdR99eCGH/X4GDtw53XzSD
9c+YXiJh6HUzr+3TWP84wTM1vs2ZncT2h8CbTI4azWY+0siCraYPPFTgwva/
hrv/se+75hbrNwdFkXB9vXToSq7nKwT9dff46CcOjOcMOGrr1k0G0cxvVXDf
tR+lDA8zv3VREglzko3HLT7D+ed/8Osv9g4u3F8S8eKvRZaNzlm8/jopi4Q+
ap6HnDn/bRwBx4icNx5+wf48B3e56BKgNYP57Dn8u+sxpxnMh9WSvUXCuEeP
pCLK2F5dWHOFzDDn82zvIlh+wJCI0Kec35fCLQZJhe1jWA9LqIgEo56pQyLz
WW/qwD9WVyW6RLH98+Ej/Wd4uHK/TYQvPHuZ7/Vt/+b37fBmw95P4xvZn0P6
IB+khsvGcT3Kfw4csnh1f48ErhdvheePO2GVwfsn1YnwOPdx9s7MH54DVUWC
qeVnD3d+P3FW8M4l7/zGcT9XiQ+8+bz3Byfu35E4Cf/8KS0R35XjyQM4yNn6
T58YrlfNUBMJW5bMGiK5QpwPG73hhpyIWfVuzM9xsP+7c3/uduZ6YSEs92Pg
vlTeL/FvgZ82rb29X4frVV598fMK/53yzuX6xDH42drPtq6yzM8F8Jy50TIT
45mfm+CRKqNu9P/I9UI1dZGgYzN9n+5mjh9H4WX/BVuP4/2miNtwwDfFBTIT
2P5P8MLd0pfHRHC8U+mH8XN8+ZTQR+x/c3iQRW5xaAn79wa82HSYqwvXT6o/
wM/UZISevP+koNwf+aTumolgzfabwnnDfT7168b+Xwknz1f84XOU87l6OHLh
TrvjhxkfvTQwvse+6jvt3/6wiXCI86Nx144zPtxgNYMRw/SNOF7vh1NGV3a8
yP1b1gqaIqGXTdSsu9s4Xo+D+2udCv++nu13gU1LfsQv4/2W6jA4NH9Uf6l1
jO/L8DWfL5JdPBkfxloiIVdFKy+d11fJMvhWSqHGRV5fEiGwaWV9iOYqtrca
PupqMWX4Cl5vSweIhLa322/95v1kjX2wQ9yKZ5+kGc8X4fzCmCM9ub7lXwkb
/wjf+aI329t5oEgoeBqTPZjxabobnuoRkPn8LPszHdb4ftdoYADbWwEr++zv
Vfpv/txxkEiwb/E+UMfxUGIErP/idpL2YY4faXCK+oyUs2qs357BbXtbNDqO
ZD3fYbBIKLJ9ED9en/X8cDiy7nWexG6+r2YhfEhqyamCF3y/0lM4vm2Kg4Yn
31/0Bza2GL5eKpL1vPYQjFcSJ//T5v5lz3mws8XkCTGcH8Rth9OeFKuu38D5
x+ChiDenFf3eVbCet4aN7Ppl34wXO28L3DLZw7FkAfdHn4I7ZM7oKHWR+3Fn
aeP7PDnUZv1L1u+bYPca71hDvj9IIQGeYmizS78X9xMXwfHX5PcqD2L9Pl0H
1//9ZzXDp7F+94aXpI6drsH5m/4JuHndIK3lqmzvPThq3EebsDFsbzNcF3nx
5UNjvu9n/TCRsEL2y1MlBfZfLPyyh+R4ldV8388deOcAX8NLPnx/VSNceCR7
xusWSXH7VYcjX7QdPazVjftljsDZXU4v1fIW/3zcLTjf7u24ebl8/1MDvGm6
fceutWJLqOhifCrP+yDfxv0dZnBE91td3IZwf0ce7Ga9aYWWJ9//9B4erOB9
6uwrsTWU9JDvswd//lzF91dNgo952U7uf1ps/xXwvUsBPcsk+f2/g8M9XJLu
Mh5Me44QCQYnGgYkT2f7J8CTdUsDs1ew/a7wzSG71p8yZ/sj4FbHI3cutovt
2F1fJKSv3nvUsIzvrxoLNw753t5Xg/HgDLs7pB2V/cH2h8I5r1Pnz/7O9mfD
qt/7vvuWxnh1HCkS7j9ve3EvkPv1g+FE6bvOKQ+5PykT7p6Tk3xnLN8X9grO
8GzvYr+U/bnUQCSMGLlwYtci9udeeKZJZmOhP9t7AdZU6Zp3pJDtfQlvnfdB
vfdn9re0oUiYddwt5i33Q1kHwlNOHp2/ogfj4Tw8xKp/3yX+jOdy+LvMxEWT
DohdLTVKJGwz/ZOmuZTzUT14Zr7rzh9reT2lwrviRVvXTuP8vgzeMOHd8XIP
7vfpYITx7kSExwYbnj8YBgdJxSimcb+Q4wI4PnLx48mOnI8+gT+72LYFc3+y
xm/4aOCW6C4dWW8OHY18Y7Mv12oo56Nz4btvDFTWs35M3waP3jhwrMMu1sM/
YZfiaYn/sT73HGSM6/3I1ennWd/GzYb1t51YsvE9683NsIbe1oo+z1hvnoIT
HTfF2M3nfFRrjEgof73s7sM5zGcz4eu+k6e5jWA9vxGOLr+c7PBvPh0P16YH
7JrM9VPr+/D8SX7DnytzvcpyrEhYFJDxeT/35ytsgBtfqfbW4X430+NwbLfQ
L9uYTz3vwqHabTdPc7+3/rpxaK/cjWjZmVxfi4FHPDjXtS/XIyPy4TWpPhmG
vF+T9xl2ezMt0sOc/d1nPL7/pEFbDpmxfo+GMx1mjejTxvWpm3DlkUKP1ctY
v3+EIz7knT3myPzWewLqkyNPFKzWM78JsOqqCI31UcxvufDAUXtuNmQzv72H
pVLrZ/x5yfymOBHfv613TuwnnjcwgecbVq/P6Mn+dv/7eUj73qoe7M+38M5y
xbdXuf5u3cNEJJTEnKu+pcB4GA/39Y+xtuf6evpyWPPRmbpL/D6rw2GhUP2r
wPmYp/wkzC90GxSDOZ+JGwO7X/jPP1WW9bsTfLTr/T9f+H1KhMLXDhdXK9H6
WfBF9V23bHheIs/IVCSMuj0hU/YK19sc4Hv7bskv4/erEQQndylIDWb8WmfA
zt9vzk/l/RX/Kjj4a62lowS//z2CSLhUeTdjVATvb/wHVxqt0tp5h/OlF3Dd
poiHEy8yfjuZiYSevRzm1bhzPhcAl4VGKNi6sj/Pweqdpq/IS2N7n8PanzZp
fub+wUZJc+RP0S/dNCeuD+rCUsKK6DPNXK9KgZ2GZm/04nmP6lI4ZW2UqHYc
41diMq6X1Ne7Gvg+PFMduOtlfSc12nM+/OSTrhDF/YMST+B1BsML/XwZD+1w
Lynt9vNcP3UcYiESpo9SWfnyPe9vzIGlJlW87sz7T3lb4YpDO+sG5zMefsAj
3K5dazzGeB44RSR0Sph+MVhgfrCC5/gccnidx3jwgUsDjsvfjeF68Um4eZBy
zCSuT8dpTkU8qsUXlvO8SckM2O/g0E2q/86fxMHRHRSz3P/N9wvhc2ObW2Mi
OX+bNg3Xd/ehK85zfV3DC5Y1UBiSw/mR9TH47tlB2l+4v8u/AHYSyWyX7sH5
UhOsmGtjfi+D8yFPS9Svhy8O+/mv3j0Kr15QZ2E0me29DYeu6CE7k+ctSj7B
aatHnV1UyvjtM10k6N0K0unhxng4DKd0P7/sdxr78wY85/fQzNguzGcf4Bbj
Fv0BqszHyjPQXydORiYdYX+bwrc2xae0cD2xOgeuCd61sozxrVAP739z/vOS
JsZzr5mYf73Pm+POePecCF+ruZRaxPvVcW5wi+5b5Yc7eH3VwZ3Ppfju5Pkw
R4VZGN8u7+n/3I/xMA7+YPR7xKIKxrMLvP36Zr9djKfGMPhJvNnRYAXuD+1m
hXjMmGu85wLzmzH88NbO78dPMJ6XwZulXXIHLGR+C4G3/16uNPod17svwVdN
TOOF2zxvN2o26mWZKfse13H92AFee65zvusxrh/vgy+btp5SYH3geBGWlZJK
9TnG8boSbujeKb1sLus3e2vMl35k+37z4vrxbthIXbj5/gzXj9Nhg5alnpI6
vB4r4Lmve+Y0HOZ43XEO8m1KXrwr99vGpcFv7NfqfOzA8fkZfFrTN/bLWrZX
ci7qgcsRet1msL3D4UEDJTaYJbLeOQv3XVnxO3ka69+nsNsLE+V3lqx3/sBL
NxifXkhba89D/nIIVtw0kPXaPHhNfsUrw2msfx7DmrtP9RytxfrnF3w93+TG
xA+S4ngYPF8k2F58mHtuldhx1vDNkNZeEz7yfcBb4A2+Rgqh5WI7foc/6r+X
y9biedEBC5APV9mGt7bzfbSz4NKlLXZG5TwvugkettUkL+g336ebAPf3WaG9
fRXPi2osxPX9fEiYhznfNzkdDt1eoTnoNt+n6w1bq89Pzg7jedcTsFucYcnu
8+Lf53kPtki32xt9ju+jnbYI48lGv+v3fPi+yfWwfFR9y6uzfL9yLLzjT0LA
f1/F52Uj7sDx6aJ5iY58H3AjnPdI8sSGRrGt1y7G3182KazNnu/TPQLPkReG
bzbleedb8MxT1jpBPK9b3QDLTDQpO9iH7VexQf2+YXFZKd+/GRcFH4wKHaR1
kP2bBzsNuzRojz/ft/wBdrX52O+eMd+3rGSL+L7y5mXHzzyvOwnWbpz+JPAT
+/c6PGnKdK8/FWJrvIN3ymmGXOb3Y93TTiSY5542mruY510nwL3vBPjkGfK8
qys8rb1q4YW3fJ+nCPYMu3kzOofx0d1eJFSdPdVHs4bxMRYWgvPq/K6LXeIM
T4l9mTRlHevnMHh+14rcnxKcL3VdIhLOVJp52K1ifI+GnwSWDM6cwvh2hNfa
5lVZlfF6DIZnfks6HmjB+VQm/FL2hU/5Hdb3hktFQkJyzuvRmzkfWQpff22V
Hsr5gele2NDs084/8/j+3Jdwnw+7fB5v5PVm54D5yeK1nzqk8P5SINxctjXU
WZn3w87Dle1jfxedYXvL4SM2pw8a0I1SjoivxcoG0cms53fCU74UzDvK+js9
FY49dKjfO563rS6Dze4320oGM791WIb6oMWuv+pw5udh8ITj7boGrD9LzsB+
npXbpq3j+PEUXpRc9bCXN8fr3/ABUUlNkAnz81AnkaB2TXlD2Cvm57nwkSkR
TcNYP2o8gkURCz9r7OL9xp/wxVVr5p5k/eI/yBn1ulmNXd/tHK9nw7f6dbwa
mMb1782wju2wEza8v+z5DT5o0jT09FnWazNdRIJyd69FC/+td2+C9Ze+9cxz
5HpxPGw3MsfGSoXr2f2XY/727ZjmKGWObxvggFnbY/zsWZ8dh6escZqqqsj6
7C58OlL9+0TuV1CY6op6pe3PVk3u3zBdB+s6TXBbPYrjWwy83Mrj24S5HJ/z
4cQLN06oLOV6z2dY9mtmtBv32zqucRMJbW3pL29Usn6Phi3CdceEDeR66034
7j4vhUmPuJ72Ee6caRzcj/uvNXq7ox43b5Mf2pvn0yLh3Xaep0zteT8mFx5d
v2tbWwLvH72HCxsay47Vcz+j4gqRsO91WPjafuL1RE8TuO6g4lfdGt6PuQ7f
75McELJGvJ9b/y1sJm1714v7ux17rMR8cGLX6ed+ih0xHh6os9vt7g+x85bD
ol1Ld8aqi88DWdfC4ccupG55Iv7cX36VSNBya9/yWE18fih9DPzn6DjlB5fF
P1/tBFtnHIx7o8rzYKFwycmIx7JXeT5NzkMkZA870y1LjeeRjOBa6bJm1cs8
j+QIT4jtLX8im+frguA1hw/L9i4T/37HDHjQzp6tpvI8j7ZktUhQaetvlp3J
81974NiUuZ93/eL5r//gIXvmHNi4mu19ARtk5Q73ShDb1HaNSPjvdv2ceQN5
ni4Azlit8C7FiO09Bz/SPisxii55Dgcr39so8YLnAaXWYr7pdNouSYHn03bA
PbJ82vLH83xaClzSJCdd7yj+/zaWwiqKnWwlAsTWkPBEPBydObLpP57/0oH9
h6xwnt2D59OS4b0Rll278vyXwhP4P0+nkco+PP/VDluE/fov2k38855D1iEe
HiidauvP82tz4KlXE9/udeX5tBJYf+r5irCHPJ/2A05zuXPAeYb4PFrEwPW4
3oK0xm4uFn+eZwXvGvhR8c43tt9n/d/18JUO6aFi+3+Fx2dcu9ZUy/Npml6I
j0eqjyVXiX9f9Qx41KcOk/WNxFbYCB8vDAmvfcHzdP02iIQFVpG3jNrFlrCE
b1g3i8bqKIrb6wVfGeFmGuQq/veOx+CuPp4HXErY3gK46G7Lkd5jeZ5uijeu
v/PPGnOdxbb2hNVW2WftlxXb/yi8xnufpWqg+O+l34brHmUltCSzvZ9g1af1
98MqxfZcvRH/fv3vZ5fG8TzdYfjSjjU+7wsYvzfgC7Zl7Qf8eR7wIxw476Ta
BZ5X1FfehPnp5/iaZ76Mh0Nw8JO8rdqS7M8c+FnlmvWpHRgP9bCJefYb5SLG
cy8fxGPrIQO74YzniXDljV+fb/N8qsI1WHrqwwtPVRjPdfDRTjLtrS4836qw
WSSkJiz+do/3U+PGwadlVG3Ce3J/rgucfT055C7nM45v4Ocvj7Vr5/F+Qbct
IqG78inBvYXr7cZw2vfIxw2bmN+Wbfl7f9tl0IaOzG8hsP2LGyfmTGd+k92K
6/tIQVKBmjg/VY+CF7ZZu70MEFvBAS6bGfF97kveL9gHhyhMMM7ozP2YF+H1
2sFVAbzfJ2GwTSREKru+0+T+BX37v7b+5hX2hfO73fCQklzldl/m53R4j8nF
ezv+nf+pgBM+KPnH836e/67tIkHB1uy4Dc+TpafB1zwWa514w/0Iz+DFS8c8
kBnP+wOSvqjnw5tVB/I8fJw/fMW6s6yMOvvzLJxXv/bIGZ7PkiiFi35VTFzK
+wP6f+ATCrvOvOb9bkdtP5FgqaWffn0Z56NJ8JafSbcaZ/F+wWPY+72hcUIw
x7tfcOLMqD9aVhyPB/uLhJ5XXbda6HA8toaFG28CKmM5v38I23vOKJfiepbn
d7g92tT662CuTwzYge+n65e1gU1cD5r11/lxv2UUWU/4wMXHE72W9eJ8tA0u
ujy4YRLXg/I0dqJ+0lq+zM+C61XT4Sc/kosSY7me4g3fvWG54PICzkdPwBKd
5Ox873I+p75LJIy0KfJQmMf1iWlwh413vNaNYL2zHp4y1HZr5Rm29w78dLPF
DokunN9bBKAeMfCWXcznFTiuhUPCWh84ZPL7PwKPsurSY1M919duwWfmrh6R
xf3TjQ2w2pldU4fT/h6BImHjct2BA5u4PhUF62jLDen2k/PnPNjY8LzmsBls
7wfY9vqRuGqu/5kq7cb1c3qp1wgjzu8Pwh+65UlHcX+LRA6c/+rd9MLTjN93
sFVTY/lk2rHnHly/l0pKi3m/OmIC7HQj7X7WQdY/V+ELGg+u3qxnPIjgnbkd
5jh6s/3d96I9bZXFpTzPkz4WTty5dLxBLe93OcMvMkPDDJby+qqBi8rNwhbw
eRlxXfeJhEy/t1WvlBjPo/9a77f1y3DG8zJYO/HxtdtxvB8aDL98YxFueIv5
QSZIJJwfNmHB2lncv28Ie1y90a9U4P3QpXDahX6NOR3E+cl6L1wcJi2cVOf5
iQuwqonRl060wshgjNfZM3TtjjI/2MEedc9G5rxi+wNhUwf3ZdUO4p+POw8v
vtND2jiR+1XKYRXDsrTcVt4PXRyC+urau7Pv/51X2wl3ONIipeEn/vm8VDhx
RpFFshLv55bB81qt3ih9YX7rEIr5ysbmtM1NrNfOwN6bZHYPOsN67Sn84OL8
ipK+rNd+w9mW2YcW87yC59AwkZC0evzReDWe50iCU+3j5lrJ8/zJI7j+WdFv
A+5fd/wJb1Sb4/ErhPl4UDjib8SBTTXH2N+z4f3bmt077uZ6VTFsdemGl8Nt
xsM3eEfhz+f9eP8yXSsC8d/7g0b0fN6/nQkfHRLVlN6f9283wXbTe42fcIT7
31vhheW1EYE/WA/334/xW2+v1n4nxsN0uN+jPYtecT+V/gZYaVmcyz4Ttv84
/PWn3Xh/np9o7HsA+fbmZsnQNq63TYXz9arump/i/dt1cGLkhlFTVXj/NgbW
Vxp34rUE258Pe3zJjekwhettkw/iet84zOCXAdfb1sC9+n6xKDJnPEfD2/7z
vbhOg+2/CZ+yHXBMnufvJBrgNp8NNj+4HyBi1SGRcFhy44vXWuzfSLhVrvBl
ZTjjORe+afxo0C5VxvP7v5+rTuo1dTv3XylG4np3bH2o957j3QF4j+5kWV+e
t1S4Dl/vfEVbIYH7wd7Cbbdbf/au4f39HlGon4peOszg8yvixsMvN/RZ/fkF
+/cKPPRj5M+vv9i/tXBow8hlGv0Zz/KHUT8+OOK3pAvbPwa+kaKlbfST47UT
LGWjVNojk/37Gi44uLDj3k5cz5SLFgkfX0fuf7eZ+cIIjm6pKVLjeVgFR9iu
2UGqVIrXYxD84VgHuducn5R0OYJ8f3mWrpsu5yOGsHz+xzHSkYzvJfDppDcf
ZnP/m+Me+LlhWffdl7i/7T94VNXZpRLsfw39o5jPpN+x9J7K/rWFb/abkWnz
gO0PgOt8xkQddWH7z8GvKnqf2HSG8f0cNpXpn370Pq+/RTGop+yV37y4x/je
ATtFxM78yfNlJSmw0cErXr+5n0BfIhbxWqM9YOBO9qcvvGr9Fw0NOcZDMjxF
vfvlITyfrfEEdrfzNoq0Zzy3w3UTGnskKbO9Q46JhG/rH6XnuLM/T8Ofb1t8
UuPzW0xL4E9xAcGhRxnPP2DbvDd+iTxvEjfwuEio+VO8t881xrMV/KNo1mmN
KYyHB/Dt34/fZvN5OBFfYa1udy4OpvM0T6BeO2K0Jq8D2z8Dvj5tV3sin8ei
sRHOG5Nm/IDno9Jb4ISyYZ0msj6r7hcnEo6UmUz3NWd+84KXfchZV5TG+egx
+HPGobubcvj9940XCXGuFl/vnuN8dAr869m9kzO2cP55FI6Z/0rvkiLr49vw
8c2lHcPfcP5pnoB6WtfVZdIisf1Xw+335lwz+iJ2+mHY+FtayPNFfB7JDdj+
mUg2oIT18Ud46I68aTp03MqTyK+5ESOfXud87hC89rup4/SVrN9z4Tnzz3Z5
PJDPI6mHq3JlvU408nkkvU4h34e1/9yyhfX7ftg8Wn1XhAXr92twtMGf6FjW
+9Z1cHj3A3JztThfUkjE3xclHZR243xpHJz7eNhxq7Wcz12Gj0iX+R9czud5
vIEjD9z+JHGE849up1EvB8vcDJfn/MMYtm7uNyFTn+13godWl/xw8ubzXarh
CY4+0jMv8/kuskkiIeD1x6MNfD5I4yg43LGv8/rHbL8DvDsgoXvvaWJb74Mv
nV2doTJJ7OrOyRifZ3Xq/h/nKwoGsJHHqi4q7B9Te7htRe+4XQfZ/t3wc42G
bSOs2P50WGqb+iBj9pejzRn0l6RzgYSI8+dd8KoI9ekt6YyHNPjOwWequ9kf
jc/g9iEHrf74sj8XnkW+ckt3XnGf/ekPF5vHTj+1hvPns3DVzz7Tvxfx+S6l
cMPMERbVq8U2/QMXFEwwOPbv+S7bU5DPXg6wmqzM+WgyvDY95WBKOePhMRx3
zmXDSX7/jr/gs6+nxUn3Yn8PThUJ+z7vju1pxP5MhBVGm4Xc5/dv/RBuc7kb
4PkvHr7DyoPtN1/g83vSB6Thejap+tT4kvE8C+7b+0exaxvXJ4rg7UMbS4Kk
2Z9t8NOriceL3jCeNc5hfvv+TUl0f8bDDNgpMXDj+Q+cj3rDez8d9djN9ZG8
Znjlk4CZ097zeT/q5zHeXm4KcPFi+6fBt+bXNJ3h82Ws18Nly+Y8bNRl+2Nh
pWG9Gr0ceL2ppYuElF/bp7wdKb4+TS3gpBN9klaYie25Fg7apzklP5nPWzoC
G265pp4fKHbJLVhn96j93klc7zH7TyRUKC6xE01nfHjAQe+ONIdlcL0qCt6l
Vh8//CvrtTy4ListwPKi+HOND7D8sNvqa25y//OKC6jn8rV0nlnyeVAH4RRj
X7um7eK/p5ADKz87MCRzNOP5HfzO0a7fl+Nc79l/USQslzKxuOTGfHYVttwb
G7pPi+trIli9suvFbVXMb90zEE+hw7qp72V7x8LL3TZkN5ux/s2GhyibXZhU
wfq3Br4p8Whhl65sb9dMkbDZ9UnZvAC2dzRsFpawW5LzfYVl8DarTbfcs9if
r+D8YbFNi/QZDzKXRILkyogFkrTEKPhUUYTOrEDGw1J4edzaNxtNmd/2woc3
mDdlRzIepLNQH+5IcilJ5HrbSLiDtoa7D21tBw8y/ZVkV8D1iUB42567TvXu
jOfz8Ks18uXjuX5mqpeN6zXIutvAAYznxXDmPcMNN66x/TthR9sS++IubH8q
nKquc3oCn88l8Qwued/fsvq+2Hl+l0XCvZ/ziuQZL41n4LaL7nH7e7O9T+Ht
6YnTmgo4nvyGX3bZtHlzPdcrt10RCV5mOUENjBeFJPjEkcC0OB2xTR/BowNy
B6zk89I8f8K5FjE28iqcbwy6inxqLOd6ZTrrm1NX/+5vf3HFj/MLx2K494jP
1TklrM++wUuL4xf9SeP+S61rImH1ox37/HM4Hs+EOx7YZmw3kPFwHy4NeWrh
04PrKa2weXhBqPJk1mf9r6O+MflaeJLn3xSmw5b2x3S/anA+ugGu7pRw3Ojf
fu0vcMkGZ9O9PL8ooZ6D62XY2IytfB6B/lT4u+/5SwsCOB9dB0u7P2lL43nT
iBj48Wats7/7cj6qmovv1/t+o+I7zkcnw3n3Lcf04Hlm/zWwbaeFr970Yf0e
DYdtve7rksD1dyEP+SnIapttHO8vr4JP9uxzZGI42xsJW2/d+FbXjvcL8uDz
g7csusrzL/rv4Ru71T8N436hPPcb+H4vLWpolOT8/gAc7e9zKngK11Ouw6Vy
J9MGBPG8wVv4fln0zOuf2d4eNxH/boajtjdyfh8BRzkff9paxPWIK/D9gMbw
hPlsfy1cvv3Ym898fmac/C3UL/EXe2+7z/aPgT9anTus7cL+zILNBoem7e/G
/nwNp4TEuw3KYvvlbouELTuEqv/6sv1G8HTz8711aQ1HuFLQlIzn+cT0Kvhi
zztXVa14/6VLPurb0B1bjgzj/Q9D2Fa+66I+3H9hugQuXzNnZBKfr+W5B17v
tfmFoQzjQfoO5lPvboRcW837+/rwu6aphlNUuF/FFo5YNqN7vgfXgwL+ft5p
q6zuDe5POAcP32ocfZ77N6x1C0TCxGM+jsa5XK9aBL/YWSd5JYfrVTtgxZqt
WtZcL6pOgeXOTl6Uy/O0CmVw3dRRMmZ03Py7ImH8vNieAxq5XuULX/bz2+W5
l+0/AxsHRt1v28j2P4E3Rrekr+L+B8d2+OH3svX5L7hetfUe6ovOmXlSPL+h
cRpukBUVz+PzwqxLYPexGpOGZzA+fsBxAy6rfOD6XPrAQpHw39Cpy8NleL/r
Afwnc52lNc8PxH2Fe6z8s2Qq9/+WaN7H9V9Q7Z+oxP3DM2HPE1PUHo/helUh
bLj4aB8XI95PaoFTcyLy3IMZD/2KMN+waZzo+5rttYStPtVd32bD9nrBv799
XpMZy3hogv88fHFB/9/+mb4PMF4veqmt/u9+2BR4oNtn9URNtt8Tbmh5feX5
Jl6PR+EHL439bvbg9danWCTEzsq0yzrL/jSHR8qV7B5+lfGwGjZ6veLmXuab
vMOwbmi1dMxy9vcNeGLCgHRPTcaD6UORcDW52UKP5+PSV8Lfd//MeXKa8XAI
PtSx/aBCf8ZDLjzgiSjmFs9bmtbDV8ItzFw/MB7cSkTC/nfOkTtMGA8H4Mzq
iLU/eB5Z/xqsaPe+rH0Gr8c6+HRQh7bqzrweFR4h/lf7pu6v5vUWDu9N6Vb9
vYr54jLcc/FvB/t/+eINvP/jsAkLuJ89vdtj9E/990PRfH5MtTH8QmmzVw/a
8xKsmHTly28+byCuGg4372PpSZfIPhEJFi4KKUN5nkzCCC6vyduQwvuF+g5w
WPngDff/43yuEq7fVLxmAZ/H0tj5qUjYmVJlJ+XB+ZwBnLhyQ3vLOc5H7eGu
MidcK/7w/MFuePOg9/EbXbg+0akU11N7U4Juf65PjIDdzNcY7eF6mqcNnOtr
UmDzjuPfLviNfNXIM9+43pYG70t2b8o4yfn98DLMZ1PM22LGsh5aCF94HHjG
nesnef6wSdaPHx9Xij9vPAs3+WWaXElj/VYKy6sqRX+bKnb6vGfIZ11tizq8
5vrKdnijS8hQXwuO38lwg9LdWRqcf3r+ggs1dB68u8b56NbnmN/UVpoXCKzf
EuEJElO6GJ5m/fYQXnJj+YDKfmzvd/hegJT2x0ms3waUY3xYcU7Q+8DzHAlw
oFllW18H3h8tgj3dP7yQ2M/2tsG17zxPdP/3/FGNCpGgqbkjprEP2zsDvrPE
b96PcWLH3YNDT8p/2dKbz+Nqhg80btg2PJ7t7/cC8WOreHw/zwfqT4PzrTfe
nPCG/b0errJ10AyPYX82wtqzlZ1i5/L5o2ovRUJRXsX21c9ZD1nAzwTbff2d
OL9eC6tdXPg47hfrH5VK1Pty4+2sJ7J+N4PPXJuxx28W6zUP+Ohtk+Txz9je
qL8uqLST+Pc8yUlVyHfGejFfIth/K2CPjIz0eGXWawfhO6JZSSI+L1UjB878
4KZlIMH68h1sYFD0+P48zodcX6H/L5bKpf2b3++Hl/RY0qSpwfryKnxs7i0L
udOsL0XwnMu1lg6ynC91r8Z4dTSxr1+U+O/rh8H78zqMbB7B+UY23KHMR6LS
mu2vgZ9uzPTJX8d6s+trkbCgZu8eTbpx9Ou/66mmZe667L9M2Fo+utOBNVyf
eAXPLGy9u/Ux602ZGpFgH2RypyCM841R8KG339e9s+N8aSncVjT+0tehnA+9
hB0CaoeUsB6W6PwG/TPgdkBDENs/Ev62zTqpxJ3tt4N737KQ1RnE9gfCEv7e
l2Q4P9LoWIv5qm5Wxs0Ixq9e7d/v+9jrlZwf+S+GX8r1OKY8jPOPnbCc06Kx
pXyeYXUqrKNzPeWxHtcnF4hQ743M7+uSxfzlBye/exPWyuc5SZyFDz46ZPrj
3/nWp3B9w6UzLnTe3Dq0P7bbZmfWx43b4DHZo1PSbbnengRXB34b4i/N9b9H
cGDto+WescxfP+HSr6r6t5gPFba8xfdjKV+1i/svTE/BwcePap3heqpnMZx6
atFyYS/b/w32Ne+pXXyZ65da75CvFw5/O4Z2jIfdolzs23h/IOI+fHbxreM5
ccxfrfCD4fuuDaQb+9djvA1QMrFKZ39Ph4Mkc/cOtWd/3oV3u9xsCGJ+qv4C
3xAqRupuZf5Vfy8SvOs8pzXf5PraVFhm3M0TL3m+13Md/MJ3m1RfngeTaISv
P3YOS83neqXqB9Q36+8PtOF6peNkuPy6VNLkzpx/rIFjPZV8RoWw/6PhD3sc
rDx4/8a690eMfx49MrZGcr+rAOtOMSzLHs/1wFVweNiYXRrPOP+IhK1ULae/
/cr1zDx4rdXYQTF8nnqcSYNIiMlIfTCvK9cr3eGg/Npw9eVcfz8IP+ihWNky
i/dHr8M/z645tY736xqXf0J7TxZNOMnzYBoR8IDx88aO5POQrK/Ada26Mzrw
/ql/Lez/Z+Ddo9Gsj+U/i4Shf/bqXe/K81Ohn/+ez44p0ZjI8TgL3jrXTGp1
R7b3NZzqqZjw5xHrNblGjD+xjikOUqzXRsOldTM8fx1nvZYBr3eQkRu4jfcX
q+B5EQEpXbR4v6NLE+o/k5hl1jwvpmH410X3U4Odeb9mCTx+UpzxwX/P93gB
3ztz+U3/f/0p/UUk/Ph1d/GoHMazPqx5deWKf8/P8rSFpZPedmn4xHoiAP4w
XqpuhRevN6lm9Od/5t+a+LwxR134/ealHStnMx4WwfmfHY8ocr08bwd8+8WV
+pQnvB5TYLeJCq3KtL9OC/5/wxeLDvF+WPp8+OutnUtv8fqt9oU35219cCub
8XwG9pueM8bfj+PJE9jG2f9c4XPWC3NakW+eejXHvuX4tg326DB28DdTzqdP
w+WjrIt+t3F8K4GTlq600Cvl9fgD3vPr+yJ33k+wPtkmEn75zztcEM589gA+
cGBwjxF0+lf4eXFC6ZnxvP40v4qExeradt/ZX55x8LNJb2485PM+4wrhiW3l
zh68X1/SAs+asurm7M/cH9//m0hQTnT41UmB9aUl/Cz4wS457tfPK4BPruml
dbsf698meLB2kL3mTZ6n6/sd31f8iIvlNdxPPAV2zssKu7eE+4k9Yb24vU8n
TuD5ns/wT8VeNWkBPE/V5wfqDZlVxuO4n9DTHPav3DTiyVfuZ1wNP88LP9rt
GPcXH4Zn+vUwu5TB/YzKPzGfaVRzl+N+6QhTuPTPz9+RetzPuBI+WGT4yonn
txoPwRHWsYozz3B/cS6c23S+dtgH7rd0+4X6L9UuzGU39xMfgK3C/exCqiXF
7b0Gd/NfIj2K9qyDBw06tbBVgvtBl7dj/mosbbM4keepwuHhCglWeQL3Z1+G
5zrvneBKR7yBH5+ft2r/FvHvy+v2WyTs+DKv76TVfH9PCDw6smR86lbx+4v8
L8FZHYqWvs4Xv28nvRpulDO/0c739VTL/hEJ425JFRxfJraCEbz/56jhEv/e
53MRtjhx61jZTb7PpxKeEmci1d9BbIkuEnXC8Lvtuk9u8P0+BvDvyZ2UVwwU
t8fRHu6v9fRlr2S+36cCNruaF3LLg+/36dShTpCbrzN9TiPf7zMCXuV0aJL2
OO4ntoF1lfcYOXiJ9zen74JfzrZckKvP/c6SknVC+fxkl1EXxfYcDg9XuhHn
4y7+fXEL4VklmpL5DuK/X+IPBwe9fKK1iO1PgS9WP8i7w/chRWhL1QkPCsvb
9Zbw/U7zYL/Z1ia55uLf17gdPv9pVKueC9ufDI/+2t4hwY79/xi+f0h/ttor
vi/JumOdECWzaGaIKd/vtBV+7PMuS6KS73dKhA8qaJ7bryy250PYoMUrUfsi
+/87fFHTL/7sbPavT6c6QSt9kaxlId9PlQAX+8e6ps3i+52K4JJrH2fOvif+
PK8NXln2euqb3WI3akjXCTtHPEpyo9Pvwam9Ws7N6MJ4aIYX+jrfiwlmPPTr
XCccndOl24p88c+bToOnrYxveCTNeLgDq4ns1zxu5/s4m2Bju5XKFa18355a
lzqhy+nk9RbGfN+eBazkXbor1Yfv21sLN1UedPn0k+/n/ASXf8iZ+IDv47NW
kakTHgbHCIGj+H5OM/hP2KrH7uPZfg/4rcKBvDXe4s+ro+Dk7bN7P7jE93Mq
yaI/qj98O+TF90lOgt+uyt/fjy5ZAc/pKLHUJYTvCzwEfy763bi4C9ufAxdI
d7ji4Cx+31jeBLk6oe5+q1cfJ76fzBU+57r81Z/BfJ/kfthpzs0X/nxfpfVV
eJxTWmpUAt+/J4J9RrSWR0zi+zlduqL/zc9n9XPl+9XC4J7P2zNXJvH9e9lw
wtSqAd9O832oNfCqyMeRhS58v1rXbnXCHc1gG38pcXw5BsNTH5a4Ptbi/v1M
OFH0J6J1O+P5Fdzjzdmx6+hGGfk6YV5xb79v3Xj+YBSsffeDhTudfgGe66tV
36lQfH1Vv4QXXMwKv7OH79vq3L1O0OvTT9Z6unh/velI+Nyqd2G/i3n+wA4e
ExmvmBPC8wcVsHNqmFuHoTx/0FGhTsjKGjH10X3u39eDBw32FZUbix2xGN49
7NLgI/t4fmInrDj612mlxWJbd+hRJxQ1X46V3sN8MQw+9kWp544a5osF8KSR
BTo1geLPq/3gsCnfdvynyPMHZ+FNjR3tDlvwfWBDe9YJIbIr1u9YzveBzYWl
gvq837eK5w+2wwrz4h4laPP8QRL86tkl83m04yO4vX9O5dq3PH8wu1edsHpg
vHfLKZ4/2AJvb34VOrqO7T8FZ0n9MX0n4nmPb/Dm552OD8lgf25SrBPkf17t
H2Uqtmc83LzD1WtPf7b3PjxDMezuBLqkFT5RKLk4Y5LYEhpKdcKos1+3JPVj
fx6H+7d4mnX2Z3/ehYt/tldf8WN7v8BJtzVVF1ixverKyKcBDwd+Txf3p/VU
2GXS7Osadcxv+fA0teQpj4cxHhrhOypZu/rdE8efqWrvOkHUrjBI34P5eTI8
Uv+ZpJ+M2HFr4L79TSRPaYut3wAP2aEQvojx69hbpU4otD3g0rcv87MA26+d
ae95nPG8Cn7d+Upwerk4H/kr9qkTFhVolCX3E//7dBM495mf3OEbPH/iDie/
3Zoco858fBD+/CZds9mZ48l1ODoyY2RCtfjzkvGqdcLJTt7aW3aKP5dwhTt7
LrRbrMT4jYDn5szpNXA8v/8r8KrrXgP7ZbO/a+E339ZqlL9jfzqr1QnXNJ8a
WjBerENhn4MXZBdMFn/unwVraIxRfajB6+81/GbGSu0vpoxfub4Yn8bM1jdN
4PUVBMtFjeji3M7+zIDPyR9Vi+P5nZIqOL7cYpFrmdgSMur4/7QmndbYzP42
hAveua8e24nvg/sPLvmtreD8XOzGF/Dz0UsGT7bg++yk+yGf3NrQvb0X268P
Z0x0+W2xnOdnbOGKwL2FcfP5PrtyOODPrxtR6Yxnqf7IB6rPluxuYjzrwkqx
vWOPljCeF8FneyiO3NOD5392wKPDZXeOoR0lNHC9hZxP23JYUty/OnCH2TUi
ByOx8+bDFSFN5402it3oC//8tj5lc5TYGmfgxackrs1/Jnb6EM06QWVqmY31
v/fZzYEjnEaZW9aJrbANbti5zrVbptimp+HUJQW9ZpaK7VkCD3QcunWMl9j6
m7Uw/uVnhQzn8wscT8JWLoenlzazvQ/gDxpy+SoJbO9XeOfetrIF1mJbbxyA
/LRcr9Y7Qmz/OPhBt9dBB9ayvYXw85FjU96rs70t8FXvYa3Pddne/gPrhMOf
n85MPS923DG4cKL5WEXWjyUFcMCAH2OqisWfS3yBJ1oZ9z7anfVn30F1gnTC
25rLn9j+KfCf9+8eO9GNt2HLvZte6zmwHv4M7xCKip6o87xdn8F1whnLD/6J
KWy/OXxpSu3Y+0Fs/2p4Y6xwdQzrV9OP8IY3mZqbOrM/lYfUCfqZhX007/A8
mCmsF1t0ULGM8bASLjBya9gWwHwcCS9NN5fLiuP11mtonbB+0I++xdXMbxNh
qbXVBwJPML+5wa0eY+2v+fJ6PAC7dfpxWPSK72Mcp10nuA8Yl32+iuPDcvjF
f0+SXvxm/IbDprdCToXSnpfhDR1nnE4pZfy+gXtoO59u4nk/fSedOuHeEPWc
zrRjCNzY+FVPahzbewkON9v91pzn4fKq4cfLXz2SaxJf342yw5Cf1Hv175Iq
vl7998ERC5ZoGHTh+HYR7tZh5EX35cxvlfDAaT1crBPE+VGhy3B8H30OSkRK
M78ZwME33u5cN1jsknS45sz4FpkVHJ9fwJ3i/+yZf4bnAUfoIr8fDzpTe0r8
8xE2sJKlz5AdzJcaz+GiqRv2qi7neUBJvTrhSO3utMEJbO9w+IfshzNjMjm+
LYTfuE8vvsbxsNof1l5d4H3Qjv35B64Y+n3/13jx74vTHlEnOBrccY3l+cOS
efDdt1WBt48xH/v+/fyEt85WOeazZFjHN2eRiO8DzRusj+shu1Qn5znrd2vY
os7+ZWUW6/etsPnhOgPVnxzfEuFb9cMHbuP46f8Q/mpxvth6lfjvK1iNRP94
a5/79Iz96QN7x2i+7qLCfJwAr/H3tv4YzfYXwU3bu6+ZWsb+boOtrulvHziZ
/XnCoE7oei9KqluEuD1592DdHKXk0hDWZ82wy2udmX/OiMc3jX6GdcKK3+Od
dN9zPhcLB5Wv3t2J73utvgP3jZs8/EEB6/cm+NLXSRcKnVm/q43C9X43osNu
C76/1QLOdbg55+Yt8ecSt+G5v2WSDppzvvEJdpsX3jx3Ht8nq2KE+mFsk/85
RY7HZvAH34pvJ+M43/CAX/sOPb0yT2zrD/BnY/3Nux05PiuNRr2ZrWs/fyLr
90nwtKqHhl7bxa5eAX992+C9wpbv7z0ET5g+crTSM9bvPY0R/zcLLypzflsy
Af5oN3Ld1Z9svxss76B+o96G7/PdD2t23nfT+ArnS1dhpXvDn6t+43zDZUyd
kB66wPdkFtsbNuZvvfOyddlCzp+z4Rk+B8ysOrO/a+BtWgWHLKfyfcLLxtYJ
X2b4NW02Yn8GwyUHROn/HRb3T1wm3KNizZ1T9RyPX8H+ChkXuj/j+3tlxyF/
31c6f8Wb/bkXvrlVL2XuIdY3F+C6uHuKW2rEv7/xJXylQiZbrkTcPo3O41GP
RMqN+DCS88+R8AGHLh0TRrNeOA8nrrysKlXH+K2AFQqdZlceEtu044Q6odTb
3+CBOeNXD15lt+XyeFnms8Vw85AaJadm5rNn8NTnrw8MLGQ+6zAR15dHff7o
Zcxnw+Cbc09ctzzDfLYAvhDVNET2MvOvHzz3Z9igS6yP/H/D1jFLxqp8Y34Y
alInvPtlYZPO+rl6Ljx5fuhYGXfWE9vhc9kqPwMm8TxuEmzw+nNnj00cHwZN
Qj1/4Pai+a4cH6zhBc3rF3fbyHp9C/y208dfVZGsJ07BTreKHaxYv0QU//15
va8q/QNZ78wyRXz/UXTtzfHGehN87vrcMw94Ptk/Hk4Lzjrrtovnhe/D+W3B
proxPK/dCpvNmNpPv1lszw1CnRBav1+q5QbHt+PwR73/WbrvuJq/Pw7gLSTJ
TdFEEtEgoiRxP0lkVErLaiiyG0SlZFYKiZJKGlJmtyib0hYNlBUS3SsqWamI
3+t73r8/n4/Prd6d+z7j8znnc87KoeJTJFj8FfAi1zCl1AnMYt/hE7+1467G
UPwjzIVcd+Lyb0foPOLOUjhrgG7PnGcUbyc8QPGj2chR7OdtVefg982e7Vs8
kjnMAvbnWw+Z20HlWQx/O5uXbNxO5dkOH1FfXfjpB8WrZIH2bvSq1YuTKV4O
3pwQqD5dluLdAKerz+RJzWR2+wRnb9B/dfkBlafiXCG3P0NaQ82Oxpez4NB1
U5xTVSh+bzh7e4T69B7qj4/B/Xxn2LSIUXnKW+LvzTkhL/xH+WAK514bH3rk
F/XPa+DuVWeSZpD5MXDOCPG/34dT/Dfhnu47i/ZRfy5mMk/ILZCok9wSR/m8
Gtbrf9vbkO6/3A7Bl1vCk7f9ZP9PzDU4u3RZv1dazIXv4L8DX01I3kfl6zYf
48MHOzxv+NP+Agfhkw6b7Vc/of2srsLCwc3xUxXofec38NBD21zv0n5GvIFW
Qm5a8/ZYJ3JqOLyl7Hj3YDp/rDYXnhh1vT0nlfZHaITPZKi3zCcb9F8g5G7M
H/61dRc93zSADXZ4btpD+4t1XoZ7X40+xh9Jz19fwFebmp89p/2HbSUXCrkn
/TaPX0bPS8P04cGa0770raD3tZ3g2OJDW9Nkab+JBvjSlrm9S4/R81exRbj/
2KS7w4j2P07VgaMNr10pOU/7USyF541/fM7kJsW/a9F/z//KQzR06PlrH6w7
QPmmpAs9f9VeLOTuTE9qWKpM8S+Baz8cERtfQe+/74SzBj369P40vf9+Fpbt
rVIPDqf9JrSshVxNU47/kWn0/NgGbh5WEBBJ+0fwA+GLuiHxfrT/mE8G/ON4
3Lq/P2g/rkew7qzKH4lkg0U2Qk5MR6NgjRQ9jw2A+5m6WQ46Q/mRCutKRO9r
WM3c+QM+Oswq7/Njqm/+trif/zTYRvwls+AU7PZqj/1ceXp+XA5//jZReslR
dp33DU6ZFrzScCAzX30JxrtjT+g+mU71LREeba/LOYQzi5XCX6x2izoKmA2+
wIqrr0tNmc3spmIn5PJbit2731B9nAM7fjV3i5Rj1zXuw6tuxmuo0/2DbRu8
QsK78as6xT/cXsgpaVp4VLyi+Pmw4ZjRZ5V3Mjeth3Nuq5+LimL2aYWNhmjc
DQ2k8lRYivbIX7NPZQLlsxmsNGWcU7syPf/2hr3tZTyzp1N5x8JTg+uXNDvR
fmYzHITcjLWjT+8IoPsNL3h26Pg2JbLtEVho/f6pHD0/D7sB9777YCfrRfsd
eDiivR8pvV5dkfYzi4bt/SZk9ztG8RXAC4TZV8XtKb4mWIIn90ijieqTq5OQ
q/6g8yyT9lOIiYQt39sLp+bT/tpX4H7n1mbvof2GOl/DMutUq3m0n4GGtLOQ
08zXGi9N5wUKDsDRWgtu/FSh9wEFsI20Y/VQF9r/4BU8QmOAdHA2rffp54Lv
r7n+2DHab9tnElz+uUZ7Ie23InYZHtu6XXpeD7UHz//z0IzaGNqPwU1iGcbX
3gYyTk4Uvx6sHxX6ZW0i7cfmCI/7uXDpw0oqz3r4y96Zr7I+Unn+g6OU7z0q
G0D7sU1YjvI5kRPdLKL8tYddxlzz+kX1ixcKqy8+/WnFcGrP/sDztI3WTxlG
7cG4Ff/dj8RPFc6k9mAJbD9rjPP7Xoo/GA5/tGuoOO0P4ZYJRy+6ecFeQO3B
mJUYP0nXHpSn89E1rOHznXdt0+dRe7YDLn84qGufErVn6XCS7qH982g/d8FD
uCRPzjJJjtqvbauEXMKu9uYKa4r3NBwvNFoqTfsX1lbCviW9FVL0/4r9gC2v
F98aYkvzMX6uyK9HXzeM7GT5X5gMT//3t/njIcrfMjh69FdnEe2Xp/EVNlLV
8ttPtlVzw3g6QW6dfBuV50nY48rvIUcv0HxSCawjdeuBLfVH/A74a6NvpQTl
r4+yO9rn8bt9N52nfDaHc2R7UzQPUn0qgoPSl0xeRPXX7TP8JWfyp2/W1B4M
8xByF47obzhFLpwNX9IxK9ffTP3zOtig3jVFaxWNdz7CSQsc99ZvpP556Gr0
F9PX10p+pvHOTFiuuj7uWw37e7y18NlTX39NcKH4j8IlQ38suZnFXDvEU8gN
4cW8tndlFpsB742PM3H5Tf2zJ+y/V3tzP7LbYbhutof4hECK/zocEGX1csw6
Gv8Ye6F/a6taGBpO4zV3uEO+cnkzjT/DomA7u/3TzMdT/PnwvMY+zVzq35ve
wibi7y44kX1WrUF/G/Qs8rQCc2oEbCreKjEnjeLPg5d59B6Im0X58RpW60sb
XPCW8mH/WpRfgrDkcztzZw7sXDS4+1cos8ZLOEtvyo+LnRSvlLeQy1CrXrju
MLseNhFWK3bYs3Yh5cMl2EGjxkxrBrVvz+BNpdKZs5IpXvF1Qs6ntEjYR/1N
qi4svTxz0kR6HlPrAD9fVm5mQdfdnsIBR4e90n/BHPMXLpsf/UC3kuIfvx79
pV2OY00FxW8Ha6zRfuf2i+IPgf9+D9TcMo7GO7/hwPnvihS+UT6P3SDknr3e
v32HLbUPtvB31YvpD9dSfxwEB0aoTuiaRP3xGdjzi0xFWRC1b2M2or/7JN8Z
GUj7NS6G7XUDHYsiqH3YDnd8P/k1IYv2p0mDb1uJNx2i/RwLq+C0r0bNhwdS
+7Bgk5CrSq8KSqf2O2wr/HaI/4ngOGofUuABuyxmX/Oi8VoFvFQ6/UaOA40n
vsNyOzRzsv9S+5C0GfU7sTJz61lqz8rgYe7SWQa0n5VBJ1xdkP7O+g61x6pb
cH9rnHZ5VT7NLyfA3i8DCh64UXtWDG95VvV1wWmKtx1+wF+ybQLtTxum5CPk
4m74XxqlQvFycLvWvYHarjQ+K4Q3bPdK25hH7dsnWCve2sUzmcZnir74PkoU
lk7eRPPjs+D2SxrTK/6/P+Y6eH/Bq7TDNJ6LEcGPg6dP0K2k8pT3Q/kmeUQW
0v51naawqvtlpfSZtD53DbyjQ8/xH62Xt42B80/3Si9op/Wtcv7I/9NXbA7R
fng8E/jeuY8Vg4qov1sNb8grO2HSRP3dIXhxxNsPOhNpPfQ1ePktvRNF1B8a
GG1FvFOfeOn2o/W4B2GjhvJlPQ9pPcJVeN/7S4GWgyjeN/Dhiki5kbT/YtjK
bULu9czuzrO0H50gHL6zbKNxN63/bsqFV+Z1rfeVpngb4RvtYalFjrS+vH8A
8nWtLt/8Pa1/3wevCw76JhSj9fs58PBK20UKtL+8wQu4UPyLh7wV7U8kuV3I
VWyLKs+Xpfj14YCa0gIJ+n40LsLtYs9PmxnT/kQN8Ih/j0StXrR/nNgO/D+p
9c1LjWh8oQNnHg25akf7EzYthQtKvn3rsqDyfAIfEzqG/JCi8zv64PJWaevU
/++Xqh0o5LzE3Go+U/0Qs4OHRGQIEiWpvHfC11QqR4dlUj70ws1hVwN3GlH/
rBUk5JxCBvV5/3+8bgNfLBMvjaH9o2wD4bshCXqqItofKgOWscy8UjCY6pdm
MO6PnBdJuND5JfxF8OzF8SrKkZTPAfCIAVmypvcon1NhKW3R1Kpqiv8BnKYd
Od25ndoHq50YD2br+QQepnz2hxe+bPkjQ/sjF56Ck2YEPdYyof35yuGCXjG7
Kc40fvsG/xO8WnT1JdU3nxD0Z/15M7yo/jclwsc43p6f/4+/FHY0nPktXI/i
/wJflh44V53Oc/FRCRVyrc9Oqkz5Se3Dfbjbe5vkFhOKtw126AoIDaT2K2b4
LiHX92ePUetTipcPJ8We57aTbe/Bm+t1om8dp/ahFeaNjx+zq5PGawphQm7+
d9cVl2g82GQGJ1qf5S7Tfr08b3ij/T6DkyF0fy+E32remF77jp6n8HYLuaag
x3/9Wul5iimc8iWAl0z73Rl4wRPeZV0/T8/v3Y7Ao+4Ne2GuxNw5eI+QE3T2
7DhkyawxHdY9ViFzYyqzrQf8JCUqTj+bxhfRcGJcV9pTD3ZdUAD3b9l6eyz1
x/xpe4Vc0by4yx+XMPu4wrFvu2dFklMj4d5O36aR+RT/Ffjl3ZpDxiUU/xt4
2Mebyy/TeCZmxT4hN/mbU6k4zUcVHoBjZ5tZ3qD5g04B/GKkeEM5PV/QeAUb
N/nXGE+k/rrffiHXtbTMfjA9/2naC1871Wj56Sg9X7kMXzbo06+toecrz+F8
Zy+xOD2KX+IA+tObZw3i6PlDqh78btCf0zKKVL4X4BFli8aK0XybWz28sfGH
c9ZQiv8fPMsionf/e4p/QjjyNVthVfI3it8ePujuvqyhmcY/j+Ey00k1/0bR
+OcPbDTUxKUrg+IfFyHktP22ecvQ8xveEjjbrlVpAJkfDEtseDHq/g0q3x7Y
wi9vm9Re9v+IaUVifL7M9/wQMxp/WsOWUhnuqjQectsBp/s+txWj+aKYdNg8
6dWBxTS+0Rh9EP253qJP5fU0Pl4IX/r2jv9Gk9qLbXCdyW4pD9rfW3Aarjrr
e0XCjcYblfBb460mc7bT+Hh+lJCTbPT/t/0W5Ycf/GxKxNUd5Npk+OiPlt1K
ZIOv8AvbcyM6g+n+aEs02qvnr/kfhtF4/iT8oUzBTHY1xVsCC/tCxFP7Ubwd
cGmM3qMLgez3hSkfQn1Jv8zPNGXmnYDzX3RtvPj//SaL4OwJPTOtyD6f4fFq
UYc/l1C8ww7j/jJBXjbkEsU7GxYrD7x6KY7K8y6sNsmudfcV5piP8NUTjgMu
ejEXDj2C/ydUv114jLlzJvxvZmGlNj2/0lgL5654WD6ER/nQAj/L3XX4wf+f
Hw+Jwfjr8WGd37n0/HgGHH6nuCQ5lp4fe8Kv3z0bN8+Pnh8fhmfuLzSzmMps
YHwU/fMVtURtSZpPcoeTxBSaHtswx0TBEbsNbip/o/mafPhIwN3W4sc0f7Qq
FuMDT9l76XI0Hx4BdzXljZYgN+XB1w5xvJe7af3Ba9jh7+ozKoeoPi0/hvHE
6qqcxJu0PmI/PL973YmDZ2i+SwCf+7hCuCmK7jdewkFtjhMT6fmzm9RxjGcW
tFctXkH1aQ8sUWXiERBE7cEl+NW+N/aSNL9t+wwOzx+Y83sd1TfxOCE35uyL
BlWa/xHowhEK465upOf//PPwOIPQuOYtbH7A5ync90SpS3c/zef/hW9/Dru8
axTNf42PF3Krkgd/eGxA8/n28I7gL8IRh2i9Tx2s6pxc9EqZ5g9+w4bbApQ/
OtP6r7EnhJxSbpDEukyaP7CFOz/rpRxayeYXbINgw5X6bTen0vqObnhCSs7W
PYY0nzgmQci5Xm0YcfcIxb8Ytlo05mW6Kc1/bId3r0gwH/KG/f7UNLguNchX
9x7Nx2icxHi66mLW8ACaT1oA20h4xCvH0fq1rbBZmcdY4SmaT0qB+z0svaLa
Q/FXwLXzmtab03yRwDdRyPW0qz5+20bzX0mwilvagFHhFG8Z7Ke+yj63mOLt
hIPChuuMINduTsL4yd9Z5oYnzcechIeMXDJ56SGa/yqGV8fve/PtKs0ftcM7
Mk6FOQQwxyglC7nG/fWuqo00nxQPX4hTWOHBp/VrhXD/+U+qfiTT+rVPcLHC
MxUVA2aB4inUN9naORJP2XquplnwS6m1stVitH7tDvxZR3ZjWROt/xLB1yVr
b++to/Vf8ilCzuNWQeacIlq/NhPelVPmOLeQ1q+tgV2kG3LL3jAXfoDzrj+O
tFBjv79T7rSQe6jWpzT/Lq1fM4H9Pu8zqTGn9Wur4XRXQcnjMcxhh+BFcs+U
7d2YebKpQi5+knP4YVm2no1vBI9Ril90qr2Lxe8GB1np314zm+I/CNuGPHL3
MGGfr70KW9xw+Wgfx+xmmCbkWrb21/sYyD4fsxKW1JrxNuYvrb8Lh61flPt0
xdL6u1yYv3Cwuoc2s2BZOsbv4zcu20zr85r2wV18vbziToo3B95vN+vqHDL/
BSz9p67ibR6tt5PMEHKipVU5e7ZSee6BLXKX934QUHlehOUXa697Ws3s1gAv
XxIhZjiN4hU7g/t5tbA9UjcpXh24J+KYhHJ/Ks9zsO0UM+NlilSeT+Cuum+2
Z65R/H3wq/EWy/fPpPi1M1E/BytfUKmn9YJ2sFrl61TjAubUWnjT4jj1qqtU
nr3wkBZ7B01nZrGxZ1F/rlTdPO/EbGADC0otdMzusu/HLRA2GXBAfmIjc+cv
+JzNoVejIygfNLMQz8TP8b43KJ8XwY9CskOjEimfA7L++38s6rXFKZ9T4aXe
cy+KK9J886hsfJ+FJfZrPlA+W8En40x9s6ypffCHJRYeGyNN8821p+CRR3kz
R2jR+twK+FxK2qENG6m+WZ5D/gab+E6j+dpCH3jF10q/9i+Uz4nwspc3d4l9
pvhL4R3PFmXsUab4v8CDL8isXhFL88sJ59H/Xkx0dKL1pfz78FvbcP3PJay8
fNrgpsPmo4eupPwdfgHjJYvvEnpdlA9xsPXccCnTM5S/9+B5BU1pjSrMMa3w
tbYs08D/56/CRZTX9Qfhx8dT/prB2SUFGydZ0vrQ2xf/y1ed2s3SlA9CWMG6
86XgI/t+mniXMD572/Kteizlgym8dIWrufFuqn9e8GDPwH/nn7PP176HN562
m6kcxSwmdxntRdXq2ryrP1n802G9vme+SjzKBw84e+lP8/or7HpMNPz7fuOD
kXHMGoNyhFylSvWrQdOZbafBMROeGRhd+M7id4Ufz7hnY/n9G4s/Ek4qn3Vw
03l2vekKvJC7IPdY6gcr3ykCIfegN8r6VAhz6gq4R6y4bqEkc+0BeHSq68UH
Aez3GbyCm2+J7m06zlzokovyuGn36cF05s698Oj5AwPnqzBrXIZPZJz+1K/x
K4v3OXx5uV5ran/mMIk83P+6N0ycNJWZtxs+d+JAYPXKTlaeF2DXuMOSIfLM
PvVw8vHwDBNy6j94Rfl88adv2f9XO+EK+rs/JjXzipjdsuF0xaLvwZbMMY/h
eMmR3fF7mAv/wK6Te5q4GubOcVcxHnNWLLn/m1ljCfxnSsyg/l9YeQhqYNV6
tQOrdFn5N/XAR14+thU4sOs8rXzc36TIH7FpZ+Zbw0nPTN3rjai8d8BtJ0e5
ysYyi/2CM+X/6et0s79nMLpAyM1ZkGoY7cuuuy2Ea3z7Nm22pHzYBqfE2sy+
MZC58DT8YeFz/ft/KB9GXhNyXywW3wtvZA6bD48dcXX/Pg9mgR/8Z8GmmKDT
FH8y3JKVbb9zLDOvHO661Se9w505de51tK/pS7tL/Sift8Da7gdq5tpTPifC
zR71CbYvKJ9L4IXm7jdnDqd87oD/6XplJ12i9m3jDSH3d2/DmfutzBon4D3/
woY7JLH6Y1sEOxXyJ9enUH38DHdINoweMofq47CbyP9fHwVe/al9uAv3PJ/t
WSJkvy/1I9xizj/vSa4degvjkeua5xLyWXxiZrD1zrmHkp5Qed6CZ72/eSvz
LSvvwha4/KdY2Bsv5s4ht/9bL2kcaTCIWWMGPPBJntqspez7svWEL6YfyNn6
mepXM9xxqFIsmuonb/Ad/L/88hpBDTPfGJ52JfNv/nzqn93hD9kiT74OxR8F
x1kZhocLqDxl7qK9XjD72SgjZrepsHfdbJm39hT/KjhrZ03h5mmUDxGwzLI2
k+Hkzjw4XIKfYjCO8mHyPZSf9+sNqv0pH5bDJ7Sspp1woP5uPzzuRH3uRQ8W
D08A232tH7B5CsX/Eo5/b+84MZm51rkQ9X3V69GnRVS+e+FHN+b+s+vHft7g
Epzm23vwbTnF/wxWOBa8YI+IXY8RL8J422SFWGYX5UMYHNJbZPVORPlwHr7n
XHw6hBz2FDack3Kr1JW1/4K/8DyB/GneLxq/jb8v5Hz7lNWnaVF/lwU75w5y
mcmn/qMOdl1vuCcnkvrr37D4o5ozczdQfz2uWMhVTD7F+7Ce+mtbWPBJsipI
n/qParh16eWxLnrUf3TDZecmPnzYR+3zmBL0X56T9+mmU31cDG+adPuNQiGV
/3a4VOPozYcdVL5d8KVVQ+TyBlH/oVGK9jH8vKmzGo2HFsBeWkPfflel+LfC
98ri3x/cRuPPFPjh/OWnNGppPDSiTMgNMJzf/f0ojYfmwaXqobrJjRS/L2yk
e2x5rja73pkEZ/2t2lVmRP11GexZ9NFnF9U/gUU5/t+7y1Pc3Ck/NsPJP+K6
e0Kp/zsJz7wfP/14MsVfDJecDPpuM4bqZzusfj6y+NZzKt+NFUJO97Sc7blE
Kt942C+nWrSzhdqLQjjniaBQbjTFq1iJ9lVf9tS6Mnbd9hgcGNobKKTxV9gd
mB/19NNeskAEC0fZBxidoHjlH6B/MJbb/DSe4p0J20+Js12RT+O3m/CHYQ83
LqLxb+0HuKLh6Dl9dYp3SBXyPTBdQT6D8tkE3u6Sklq8j+JdDSdN7A252071
7R0cval7wGBHygfZh0Luvq3X1xqqv7ZG8CSlVaky1ZQPbrC70KJ5bi/1Lwdh
y2arcara7PfzBz7C/czZ2rkGn9jnfQzhRVb9T32uovoXDgvHDpN3uEj1Lw/O
OdZl3viA2geDatx/Xx3U+Y3698JlsKO66pMVNB7QyIHtUguzU8upPXsB6/yo
60zZyT7f5FSD/uNS7jeunvW3vD3wzsjf5cuCqH++CEcPEX75kkD9cwOctkX6
2uEC6p/FajEernFPqJzI+neDXfC9If/GDuUxu52D9W853ld4wj4f8wSePSG7
NWAmc2Ef3GOftyc0/AsrX+06Ibem2+357wPMYWfhAc3r7vRrYhbUwhUuYxa+
n8F+vqkX5m+1vWysS/GPfYz+qc398Qq6zreBb3gnOWjeYz9f+whun2OXNMmS
WawbXnLi+vDLc5kNNJ+g/T9lE69HdlsEHzBqzVsWxhwTAM/5Ipc+wYJZ4ycs
N7t6986LHax8Rz0Vcjct4nOTRW0sfivYUFFmVvAFZoE/vN5qS27nUPb5plNw
qKbQr/1GOytf9fr/1tfvdR+4ijnVEu6RGCbcGMRc6wPvVCgquJ3ALJYEX723
V0V9Mft9BqVw69R32dJZzJ2bGlBflRbaxFSy8tBIgAsT7wy4dIjZ9j78yVKv
7kMblXcbPOrXxtJ1hezneRue4f5lzfXLF18z8+Pg3SOHHp51mX3e5x4cn6Nt
c06B8qEVXiMdwrNqpfJWeC7ktJy7VVx2s593i4WFxkVjrS2YY27DM+aPKtvb
xVwohDWzW9omCykfeC9QX+qi14obUnmbwo+iFSWkfrLPC27A8QZVH/sM2PWm
97Br/vAdwdcofrmXGO8dPz3VN5jinw5f37utKKSA2ccDrvtoVjWbR/nwDp71
eVxDv04qz0GvMD7X8RoRuoPinwYPVmlvC51J8bvC1QPzVuVT/hVGwqLxwzK2
6bLfZyvdiPZpp4RCRBv7fNgUOOOXzTZpsmAFHBo5ZtomT4r/ALx0Z5DGZ39W
f1InvUZ+W/v9TVdmrnWBc7dEmA32ZH9PbB9css0n8fwrZoPL8E0MQtZeovr3
HJ4ZZK4wZwCN3x3foH05mdr8lKPx+25YS864z+0jjd8vwJ88yprXV9L4vf6/
621p5/QvMAv+wbnpxxQ0hjHzQ9+i/1zpahQbzeyTDfd/UrwwiqP4H8P67vFq
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
h2o4oNl1VTPtr2fQDdvxorNtY6n9D3AScRGpt4pfOFH+psLTcH/sNp3GY1Vw
wgspdSspyoefcGS4wNmH+o+wUc6o/wEXk5y/0ftFKfDnF57OShG0v1oFHHgr
eHJvHuXDN9hI+YJ1YC/lg7oL7o/Li3ISVlM+W8L9bqyqyc+i+lUKd39JUhH3
pfbhC6yvkPDZNYn2m1FZJuLq9/+IznxO73fNgQu0ef4XV9L7XZvhC45nh829
Ru1ZGxzzIMdw9BJ6v3b4coxfR3U0p36h9oyDqwc1D/8+ntqzDfCEqfPuhUvT
+59xcObclmUP/v++uOIK9I9SvzW/raT3QWfBLmFaL/pp0fvi3rD3Xtthau20
f0csvOFb8e5X9H5t4W042/xO55NfNF43XYl8H+4zoL2LxutesEDpk1rocor/
CCw/WjOh3p7a4xuwabXenn/0Ph7vA3yiTPOlmjTtJ+GxCvcDdhbubo2s/Gqj
4ZotPWIbzzGLXYOfeLhkz6+l9/3ewVdr7rspHKH9cga5Yjz35LS4oIbK8yos
2O9QPXAs7d/zBh5tmRj2lv6/MGk3Edc7fljbCjt633YKfOKqw6rJtB8IPxe2
T3w8+XQfvQ/8CvbeJW8+h96XTu3njv7LU3+FbzG9DzwJDpfxemxG79OLLYOj
Yx9cLmuk8nwOByYu2/Ham8pTwkPEhfCG6VoJ6P18PdjK7fHx7HB6H9sJPlB6
furhJxT/bvijcdRC5wm0X8A/+EuJsU447R/D01mN9kLz/FsZV9rvYCmcNMAu
6VYy3R+FwiMebmkv/cvKMzUbfn2n6kHFF2YDbU+MRxpbF2qqUnkugdd9SI4X
rqD4g+EJe81exv4/HzLhyEHLBnk7UPw1cIp54aLScvr+d3iJuP7mOuX7Z1O8
6fBhuz+usqto/5lHsMO8udtD6Dws/i9YLlhdfSqdD1+7bY2Ie3B76R/JzfR+
eyqsFrS70YJH52U9gDcoDLudKkPn0/+A95r9zR35mt5vH7kW/enzsXo9Zcwa
p+DDYqJU9dW0X0A5fM94Yf2kHHo//yusc9Aw5bkRnW+h5i3irnk9L7+9ld7P
nwt7nXuq3/mWzncrgVN3dwzueUTvt3fAv4dE5y2VpviV14k4/kfF9hOOFP8c
ePTIKu8btF+BwSY40+pc/+LPdD7dZzjMQUXBlv7/zmHrRdy8ctebW+n8Og0+
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
Fd/6tj2S8kGxScT9CaubFNRA7fEs2ElWKHeK1id33oZjJx/vkwmm/k0E64Wk
7c+n8yxt5d+h/fQwkXbXpvG5Kby2KCGgYRnt5+sF/4+mO4+L6f/+AJ6QQky0
UWkULVRatNEyV0QJQxSyjEi2tCipxFBJaEOUNWtSki17pVSWNkuWSFFppkSy
Zcvv9X2fz+/P5+NO05lzz32/33funXPHh/1TFtD9xYImeMHmzhRTur8pYMA7
zBcel7WWn6f7821gM1WjhiolqgdvePnXvmdO0v32MvFw/6U31FYH0HzXr7GF
O7Jnroccn+YLS9hzzWXeLVuKfzFcIkhUG/Sa5rsd8Gk1xyOWdP+q8DJ8su/f
Mcn/3f9l3oT11Ss1ex1Vut92ITzq59mwo0kUfywcemUcN3wwxX8BfjgqyUvk
R/G/gp84jlZ6EkT3f85vxvora8NS45t0/1c0fDd4Y3MFPd8+KQfOVRi+Juoc
9Ud+AetqHik/J0PrNdn3WH8trfV0WEj53QLvvCwT+KeO8psFz9xUXxRIzwdu
qIFde5ztKexD96/JtLRwS9+YXf/13/NBR8EJekbHFe3pfOIJfFrD0HreDYr3
L9wWF6s5i9YjIn0J1rMfA6/Z1ND6cibc9uNHjECN7retho1WlvoPtqf+xj+k
LdzUIZbHtP97PuLwVtT7MdOS7Ef0e5Gp8FNxi4XPCerHux5O3DNmStsS+r1W
OtxvxYiZ+qHU/3NYG9aDFq6bvLLp+YhTYJcQ21ejRtD5wTo4dOqGZ60RtN4+
DI9w456dV6XnO5bBDR5rnvqQec4fcDxE7vnpp0O/dwmAnVVNDpnOoN9rHYAd
HQetKqX+vel34bDS5waNl+j3Th/hoeO/1iVSfwWRXzvGpxnuyuvsqL/xftjj
z2gHjfcU/x1YzWO75UVn+j1DG1y3P7h70mPKn+pHjEcDwgYYONP51174U93s
xXF2tD/z4dvaByqq6XmiPOn/tg8aGZUeT/2OB3/C+V3hrrF36XmsAfawlbZ3
8I5Cen7qLXjNgIp5477R+us9vMmkrn1eONUjrwProd77n658Rvd/j+v43++V
q0uP0fPEC5fBAdc8Al2p/oSN8KY564t7Hqb7KRU/t3AbN+xTqkyk8wlr+Mqp
W9IJm+h8Ygn8c1S/+Gd0vyBvF5wTOTzt3Rg6Xvp2YvzaPKbiLf1eoHosHBaw
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
R7+Bjiy/P+AzBcYS/l4Bi3/4PNR3/yuzAxKYRVNhZ+FEawtn5qQQWPT4+77Y
QGb+V7hoysDGoWHMwmHzcbwc1DY0PcksngI3yHyV//yeOTcIrtiwInbmOeaG
Q/DeTRdn5+QxB2h4Sbkdo1UH1tH/T58El3i+MtUbwLH4/eGk7rZBN5LYdpkD
cDXvRrOvBfs8pndhmz+/Tvf1pfxOWID1dVXn1lWzqT7WwE/Oy92+M5blg78f
3pOxzaoqmr1eeAe27P133Xkzyn8bnK+3fePvRGbeqoX4fC5OK3OGMQv2wpqp
y3vl/mEOyIef7Xk0d3Qrc/WgRajna81tu4PZ/xMlwxmJfjLZR5mTbsLc/oz2
j71Z/IXN8KiW4p+1v5g7Bi6Wcsum5nj4z6N8j4MHjevy+2dI+bwGX5M759Vw
jb2+4R3c4Xoiy7CRmacowng8OtBVGMReL7CGhY8/ZH18RvleAo/V/pw23Jbl
V6YB3ijZybtlyWzadwnW39mCkrOXqR7GwmMbwhyeS6geFsE2bb0u+HQzF26H
o59+0Xero3ro443jV2HHHOPZVA9msMKBi1HxFhS/F1yf8nClmxXVQwycembo
4cTdzLxceFVF8rtPhiyedJOlUs5W/1n3/P0UbxRc8qNe63EaxXsONgnce78g
iVn0HH665/jwR9nMHXOWoR7GPVtaGcUsPAuXfGp7mESfX/wUDtv+6brueObc
bvh8xNYz3U9YPgWRPhgPjuxJD1rGHJABf6v+nZkyge3P9EfwmP0JEWsusu3V
v+GMOcqvDdbR8aa3HMf/IpdFM7bQ/j8JN2j93GG9m/Z/JTwpqZgb9pLVT0cX
rLP02KFgGn/4ur4YT7o26lv7Mgun+f7v+2CZzRcimHnfYbsSo9ke61m9C/gr
sF4+qG0zlcbnAFdYRaty58s2Nt6nB8NfGlp3PPrI5hvTL/DAV1Ofy9J8KdJa
KeXuvdVKDjKj+WwyfPa4Q3f+NJrPAuGx6S15h1/T/HEQtii+2eWxh+azoauk
XJ9RLWsLzWm9MxHOS8+wqXtA8/FaeEpv20+zN9H6LA22d/5uvdGL5uNi+KeT
wxeNobQ+41YjX2v2/5j7kFlmDfxNq+/Hmt80H++DjxdZzn9bRvEXwroRnbr1
tB5IaoUV6g9XFX1irxfuWYN871szWXMzs/g2LPfDS7jyHnNuC1zcaq9jtITW
k0p+Us4o77pmhyytd5PgP73a6hoVab17A/Yf4bCprJOtH6qb4Kqipb6XDtP6
YeBarOceNf1sqqF828Jnmy0mOdH6tPAqnDsnNXYXrec73sK/Fz/R+0PrD35/
f7y/m0FwwhuK3wp2sF1s02RP8YvgezcKB13cQPmsh/dHnDHo7En5VAiQcpLR
Lnuyvdj/D7CA523yEhdpM6cvhJNj1Wb+DaZ8x8JZ+qO7T9pQPuUC8f/Sji2e
YUf5NIWto1RSHf6rh/nwI41KbeMCWq9Hw3HNvFo7Ee1/4yDMtz3ODypbT+sZ
T1jaOTre4iqtZ7bCwoiWkEw/Wk9mw+7XFbbopVD9PoPd/M8Yz+XR+mDOOoyP
z/fKLRhB693N8KYsm1a+OVsfiDLhj+r9+v6sofXDE7j8UPKMfgm0fvgLF+zY
qj6hilm4MVjKLR89oU19Kjt+xKfh19UZUy/dYdtzq+Exi8KnTtzK3PALdjPO
7G7vT+uHkSFSbrtybMm4QlrfnIANdV3M6mtpfVMBVyi7z+R9o/i74Brl5rWH
37H3M9VZj/lH1e6xW2/2fiI3uM/nbanPDGl98AD2SHoh776cjQ/8b3CGxn1F
YQ8aD7RDpdyGXoMPfNvALHaBh1bnm7Rto/XDOjigZML9sEyavzrhzcc2xvqp
sfEoQHODlEv4hv+/l8YzZ/igcPrJ2d60fgj43/YXa2f2D6Dx7CC876SJx4Q0
5qQhYVKuMtviswqf5gMnOL7E+ut9V+YOP/iWt2Z9/Rv2en4qHOozPsJMj+aL
IviY/Vbvqh40HwjCUe+u3nIFK2k+WA0P2fJryJZkms9SYGlk1fJwB5rPCmDj
nkOjonfS+kEKB7dEeHd70fpmRYSUe965sUKW3l+0G7ZtnTmuheajpFuwbLrj
884BNB6/h/OrV1m6vWKfv4O3Ucr1nb9exZnG69zrcMuD814P7CjeRnhR4sRN
ri4U74BI1N/dH5ducRSvDVzaJh5p589cnQfvNrA//96c1jNv4S4zzRtWOhRv
v01Srqfn/kP3tShey/9j2b7jqf6/OIDfMiIJaaIyEkVGtEj5UCGUvVrKKBXR
kihCQySFSpNKGQ0iVCotIYpKoURKuhclEir6vb7v8/vz+fhcOs7nvOe5wUVG
tcVVwRTvKnhtiZHpb8qf4ge4fvoiQe9xFp+NWCjW7+bPKdaqtP5Oh0+/+VZ0
czPFvxyWazmtVKRE+8l9cLj2qkEr+mg/IxLG58Luu4n23aV60IbtHgv6NkTR
+uYKLwngvXORoXqIhEdWbDo7k+pD5xpc/3BExA/a/xRp7uFz65x2HywYSfl0
gm9tM1PrpvpT3APbnEztn/eC2SYTPmdmu+DgbNqPVcMfNIvk1KNoP+YQjv3B
vqzW0TJUz7vhpQ3VZcPtqJ7T4N9bBjdZ0H4u+SX8Lc9B89h+2p8HR6AereJL
atfSepwKX1La3/NvKr3/F/CTmU1j4uZTvH3wseJj6WvTKd5Jkdi/vdnrtaub
xtd5uHB/bkGwNuWzHF4+cFBVaQvF2wMfE5qpJsOj/bnSXsxfw0Yfzn9F+baE
fU0ffnueycYvrwzeOEOoL/MDnS9+wpq2Xu9/KTK7T9jH51IL6nx31jPHmcNX
XZ6FzznN5o+izfDiDa5p51RpfvgB9975kHr9OZ3n5fdj/zxum9SnhezzWQvh
7FB9KZ+HdD7aBGuFRvUpJtH8dhJ2NtottFGPzj9jD/C5yeUu/eqn2O+rNIFT
wtcrn/3MnvN84WNWUe1B4RT/cdjKadLm394U/wO46K/Dy0Z/2u/Mj8J43L+x
f6UK5Xc9vGNS+UjXLKqHBLiiyyslS5m9n7B78LWkhUcvqFA9f4Wfz42yjI+k
/K49iHzI/YmYt43q4QgsUvtu53llquc7cHuQt/y6KJrfmuGcB6pNCQuYedLR
+Pukh04oy6H6iIW33HF6FdFD54sCWKtg3pBh6lQfTfAhuQtTvztS/JIxWB+v
tr5N1aT4Z8GvPVtTYwKoHhphna+LT9nS+zMeegh/j5pdUfI/Om/qw7YO3hN3
8piTV8IH+E+32r9k+dWph1f989Af4kfrxZBYzKcrX4lccGHvI04XfmO3buCY
I613y2CNzknSHyOYO/bCh08O3d/7ga1HYcKHcZ6YPywweTWd57Xgf17Ddqyw
ovXaBR509IBLtD7dn0TACwIV0v4uZuu78VW45cG2XU50P1CpEfff/c4TPZHH
tF9zgutLAoreidH+Jwy2EBa3k15O+4sM2Ofq+SS7VtpfvIafav2eYWFG9zv2
R/jc7dsanuss6H54F3yOZ/xA4j67jw27DP89+eTY9G72PKsK9n+jmi3lSf2C
P/B+zfuP7el+33/nUT53o39b53DqLyRfhDPXpaq5/KH+4HP4tskb8UDqV/H6
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
tlhD9TA+QMApRA5SuFdH9WAGr3Vpc/RspXrYDC+ePaCbVkv1cBpWtauz1d3L
HFYMOxjYfxHNoXwu3Iz9jrzT6hZDyucmmL8vVC+X3r9/EvznQ+1idfr3kx/B
kx+eeCYxheJvh8cVjN8TRPXpvnELzl/Z/qFLFKiej8E5h9yTXtP80iGA+ePe
LR5M9a84aivOQ6oR1wIv0fiKh1vkO50V+2g+uwurRMj3592l+ewrrJGWpjfu
GM1nI7YJOKGdZ01Nl9N8NhcuabXbNvsUja87sGnUN6O0azSfNcPTdu9OzSe7
S20XcD98vs7wuEzxzoEVT1ltFv9D85kHXOf7/MjOozQ/NMF/q7KDX8XQ/DAs
EPOxuHazhR/FPxM+Lju+omcV1YM73OagWVq6kvIdDfN4X27tL6V8iu8QcG9r
jt4P1ab5QQ/e8P1CveAlxb8S/vLN0zEuneI/ANtln761J4fivwHbCPW/jRZh
812HThD2S9/8f4jRfKu4DJ7dMsTuoQGzzV74/b/yugPaNB9fh09Z3wmzn03z
cS28Ze+B4+omzMYuO3EeknFacOM4s384HLby9sVB6TQ/X4EdX0xtrTjHXPkG
/iBqvqC6hubnQcFYzwp3Puu0Y/N3XCj8ZYqvrZXQMpbfdDgj/7DcwYvseccr
WHl7YP+GKey54gDsVFXmvvAre26jHoL19JBw/uRvzI2X4JlrXPY/92Ofl66C
E5O/rF7txWz8B+46UpVp6Mzsr7pLwO3QsM2b0cV+PnkpfHdoJk93EHvu3guL
Rt8u0aKfj1PeLeCenuoyu6RH8VrBNj+2+yluZu7YDiec73g59QxzWDd8Zqfs
7i2f2e/Pmhgq4IY/CY6uqaB4LeDz0gGyytMo3q1wa65Md91NivcsrBa1N7lY
YjnLp0KYgDu3seCmrgczzwzuSKhXFQ1i1gmAgz6od2TvZHY/BdcsOBM5zpk5
7gm8qUZ0sL0Xs+KCPXg/EmUzqoSYbfzgnfeEtDfbUPwnYBVzjRb3Por/IeyT
szIjNZk9b2yDs5IE9c+HUT43hKN+SqPrW+5QPhPh03PO+R5+Qev1ffin5wj7
yNns8zwBrJYc8PX3EGadkRH4+/du1jTayj5fdBS2yplpUFFP9VwIt/XKpQQ+
oXpugW3yO6py+6ieZSIFXOOunWujaL0PM4RbUg7zhPcyS9+GrW83LUsooHr+
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
b9ZZ1MdirT61I1QP62D3xj7fnWupHkLg9hfqo8J8qB4y4UrRlS+kPGj9NcJS
wu8c/wTT+rI5x+fuLRfRdN1F9XwQ3jvJ4eAdVYo/HU7pnV2jQa9rvIQ3yN84
6zOD4h+YyOfO+d9NrZ5D/SEAFpFas19Oier3OeyS1xwYTes34C9cqi3T/1yE
4lU5j//eYe7hgXq0vtLgv8GSzyRWU/0+gaWPluwqcaZ4f8OjxK9Njt1O8U5N
wvllQXhmaDbFawnbd7YNCX1N+XwEl93f6biwk/L5E04e16mb9pfinXwB84fV
kUEbJ1E9mMPa5bXzXwyl+vWBMw8HOY8fQvXwA45rWvFcaSHVg0Iynzt28t3n
76upHpbBo9w8tFQ8qB52wU5Zav5fxKh+z8GD1EMlvNspnxNT+NzpIVKTtaop
n0vgpmX9qvU/Kf6dcIbE/vZJfKrn+JR/9/UBnkY3qJ7LYHv5mISGWlpfxqnY
r4rXVOkpbmL5dYc1DsyKV1jO3BwDD7Z6KTXVjVmqBBaV9Du1+DLF3wl/G3ZV
4NdN62vbRazPyK6XExax9wtFwVENDi2r9jFr3IPbWz/veLGZ2Z4PH3U7YWTS
T+tRJg3nh/ZXUy9/ofxGwEYnDlXntlF+78Iz7g898kyf/fcB7fCtZRdHLDai
+Edewv4tETOtaAbFPx/OSNnwc7cBs0c+PP6G//Cpu5gTW+E7Mn/9SlKYayUv
ox8bd7msv07x68FCqo+XjXtA8TvBK1Kq9rlVMXeJXeFzYV0Rc36EMMvrwIHv
66JrA5h5G+GUyLXHbLZSvEfhH2OUZ0dIUT6HX8U88UX7q+gOZsPZcF7Syhmd
thSvHbzr9Ea9nZoU72H44Xyfz4cGUrzZsKbzb/FQXcqn5jXM5wsbZWwkmMPX
whPe5v0Rps8rCoYfaMum8/6vhwy4/LGZ42cbyncD7PhM41nyVOpva9JRnwLv
jvG91B8CYWn3nks3Laier8HLd3/p2eBF9fAC1v7wzKJsBdXzgAycn/vWXfvi
TvtFAFw43aLH3on2i8vwrIlK00p9me2fwVsKgnl+a6ge+mH5GXGt3dFUz9My
+dzG+lrnY2eoHi7C42QdRj5OpXp+DBe3nZ0ckEbx98EGI8cdm3WX1uOULD5n
FXP5iMYVip8HHxPdM2XrQ1pvNbBZal6kjSrltxc2jjSI6zekepicjfP1iLvH
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
qd+egecG3rn6CD/vP+s3tMo=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1., 0.4, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.655728, 0.8, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1., 0.4, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.655728, 0.8, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2.554416*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     FrameTicksStyle -> Directive[
       StrokeForm[
        Opacity[0]], FontOpacity -> 1], 
     GridLines -> {Charting`ScaledTickValues[
        (Charting`convertGridLines[
         ((Transpose[{#, 
           Table[
            Directive[
             AbsoluteThickness[1], 
             GrayLevel[0, 0.2]], {
             Length[#]}]}]& )[
          Part[
           Select[
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}][
             SlotSequence[1]], And[
             FreeQ[#, 
              Alternatives["", 
               Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
           1]]& )[
          SlotSequence[1]], {{2.5285356*^9, 3.8225556000000005`*^9}}, 
         Automatic]& )[
         SlotSequence[1]], {Identity, Identity}]& , {0., 100., 200., 300.}}, 
     GridLinesStyle -> Directive[
       AbsoluteThickness[1], 
       GrayLevel[0, 0.2]], ImageSize -> Full, 
     Method -> {
      "NoShowPlotTheme" -> "Marketing", "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{2.554416*^9, 3.7966752*^9}, {0, 328.7434815983983}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Prolog -> {
       GrayLevel[0, 0.7], 
       RectangleBox[
        Scaled[{0, 0}], 
        Scaled[{1, 1}]]}, Ticks -> {{}, Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}]& }}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Nominal\"", "\"Real\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1., 0.4, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1., 0.4, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.655728, 0.8, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.655728, 0.8, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.4, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666667, 0.2666666666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.4`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.4, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.4, 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.655728, 0.8, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.437152, 0.5333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.655728`", ",", "0.8`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.655728, 0.8, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.655728, 0.8, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7968322529509506`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"8acd7274-f263-41b1-84df-041a0ac05fa5"]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"beac5739-5eec-4f97-a588-9cc158009244"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 285, 6, 42, "Input",ExpressionUUID->"97dff5a4-e169-4575-a664-b3b42a76244b"],
Cell[868, 30, 225, 5, 48, "Output",ExpressionUUID->"c1812657-7b5a-43dd-aa3a-2d9d48f668ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1130, 40, 251, 5, 42, "Input",ExpressionUUID->"42886c29-d065-4cea-8c67-d7ff10e66448"],
Cell[1384, 47, 153, 2, 48, "Output",ExpressionUUID->"bf51c4d7-a1c0-4e29-8deb-d87aeace288d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1574, 54, 414, 9, 43, "Input",ExpressionUUID->"a0c13a14-3386-4fdc-8fb7-b6e2eee92dbe"],
Cell[1991, 65, 860, 21, 56, "Output",ExpressionUUID->"0a836afb-6a72-4d45-9230-33326e4d4a6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2888, 91, 419, 9, 43, "Input",ExpressionUUID->"ff93d0e0-a594-4e0a-b6d9-b04af6cc9e28"],
Cell[3310, 102, 878, 22, 56, "Output",ExpressionUUID->"9022da3a-3644-4375-9b1e-8fe26cd68c58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4225, 129, 398, 9, 43, "Input",ExpressionUUID->"90cd4b95-bd3b-458f-a385-9df1b8767ea8"],
Cell[4626, 140, 879, 22, 56, "Output",ExpressionUUID->"d9cecaf8-13ee-478f-af1b-78ed8127469f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5542, 167, 174, 2, 42, "Input",ExpressionUUID->"ed8a56d5-4212-4484-89a6-f11095353cbf"],
Cell[5719, 171, 531, 14, 62, "Output",ExpressionUUID->"c638d8af-c883-480f-94ef-cfd5f272e2f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6287, 190, 1012, 24, 50, "Input",ExpressionUUID->"b4699423-0cae-4169-8054-639ca880ecaf"],
Cell[7302, 216, 1048, 26, 56, "Output",ExpressionUUID->"6646b051-cf9f-445f-a1b6-a8b7acf735cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8387, 247, 509, 12, 72, "Input",ExpressionUUID->"4c99269c-fe6d-471a-bc97-fb8240aaf96c"],
Cell[8899, 261, 884, 22, 56, "Output",ExpressionUUID->"042265ce-2278-455f-89c1-3f70918ee8da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9820, 288, 326, 6, 43, "Input",ExpressionUUID->"cfe21b01-e0dd-40ed-97cc-e3eec43b56c8"],
Cell[10149, 296, 15958, 390, 228, "Output",ExpressionUUID->"87d25855-c350-4dc8-a661-b19520fdc7a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26144, 691, 777, 19, 100, "Input",ExpressionUUID->"502982fe-d283-41fe-85d8-ba4615fcf508"],
Cell[26924, 712, 12675, 318, 225, "Output",ExpressionUUID->"77cde884-5376-4a4e-9e12-1654c0a104db"]
}, Open  ]],
Cell[39614, 1033, 133, 3, 48, "WolframAlphaShort",ExpressionUUID->"cf15e7cb-7402-4499-a33f-4e2d99af5104"],
Cell[CellGroupData[{
Cell[39772, 1040, 450, 13, 66, "Input",ExpressionUUID->"4ba9b6b6-7e9a-4d8d-a472-00907e39d116"],
Cell[40225, 1055, 325, 9, 67, "Output",ExpressionUUID->"1387222e-4991-456f-b4bd-91da3b3068ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40587, 1069, 463, 13, 66, "Input",ExpressionUUID->"3fdf7fc1-b9b9-4b74-9171-5aafe33b1370"],
Cell[41053, 1084, 282, 7, 48, "Output",ExpressionUUID->"caef3326-35d4-467c-8d34-ff6327be608b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41372, 1096, 471, 13, 66, "Input",ExpressionUUID->"32afebe9-1989-42e4-8ff2-b7cea26576da"],
Cell[41846, 1111, 422, 12, 48, "Output",ExpressionUUID->"cc06cd0f-49cf-4737-9f43-e4be556196bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42305, 1128, 473, 13, 66, "Input",ExpressionUUID->"d8130bb4-bc9f-44f3-ad54-9b8c54db64e8"],
Cell[42781, 1143, 543, 16, 48, "Output",ExpressionUUID->"f8924a2a-c724-471e-8638-514dcc4c5281"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43361, 1164, 469, 13, 66, "Input",ExpressionUUID->"e93391a1-f1c9-4a1e-a909-62ec574378a7"],
Cell[43833, 1179, 545, 16, 48, "Output",ExpressionUUID->"911b664f-169e-4d08-bb28-7a1764abd260"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44415, 1200, 363, 9, 66, "Input",ExpressionUUID->"03ebb278-1fc4-45d8-91a8-2f9edf252df3"],
Cell[44781, 1211, 319, 9, 69, "Output",ExpressionUUID->"b924a2c9-62d1-4024-a872-5ba97d83ac2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45137, 1225, 388, 10, 66, "Input",ExpressionUUID->"d3be2108-a2b8-4c0d-b6e8-68958e612052"],
Cell[45528, 1237, 268, 7, 67, "Output",ExpressionUUID->"3a01a939-94b4-4074-b4e8-361283b5685b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45833, 1249, 614, 18, 66, "Input",ExpressionUUID->"445a1063-b27a-4153-930d-e2a67866546c"],
Cell[46450, 1269, 493, 11, 38, "Message",ExpressionUUID->"f89cd1e4-5882-4b15-bbd7-d1e4768ca82e"],
Cell[46946, 1282, 593, 18, 67, "Output",ExpressionUUID->"1fca2902-7b4c-4e11-b716-f459a4a320bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47576, 1305, 461, 13, 66, "Input",ExpressionUUID->"1398d636-be47-4f47-8078-b39e0db53cba"],
Cell[48040, 1320, 280, 7, 48, "Output",ExpressionUUID->"de5e30f4-e794-41e1-9ff0-09848a3d6c22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48357, 1332, 428, 13, 66, "Input",ExpressionUUID->"5ab2cfa8-40b9-4512-b3ad-da0fe7f4bf49"],
Cell[48788, 1347, 176, 3, 48, "Output",ExpressionUUID->"aee86c14-a491-45a1-a0fb-cf711f2f09d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49001, 1355, 318, 7, 66, "Input",ExpressionUUID->"430b1abe-b5ac-4220-8565-ed82fca73e32"],
Cell[49322, 1364, 194, 4, 67, "Output",ExpressionUUID->"3162b10b-35a5-4dcf-b7cf-6c2a7b0b6035"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49553, 1373, 315, 7, 66, "Input",ExpressionUUID->"76a5f819-ac37-442f-9fd5-bf91ae4ae73a"],
Cell[49871, 1382, 194, 4, 67, "Output",ExpressionUUID->"3cde69ca-937e-4022-8539-4922ed8b2c5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50102, 1391, 634, 16, 100, "Input",ExpressionUUID->"1f733639-0be1-4064-b33d-89c122184be9"],
Cell[50739, 1409, 12982, 325, 183, "Output",ExpressionUUID->"17efb52f-86c4-4922-9e5c-2b5d65e58667"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63758, 1739, 730, 18, 129, "Input",ExpressionUUID->"6e6c8277-1e64-441b-bc1f-fba73859c24d"],
Cell[64491, 1759, 13310, 331, 225, "Output",ExpressionUUID->"75edc01f-ceb1-4dab-978f-cb05a77a2713"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77838, 2095, 657, 17, 58, "Input",ExpressionUUID->"3e84f62f-8ad5-4155-8d56-37b81d9e819c"],
Cell[78498, 2114, 700, 18, 62, "Output",ExpressionUUID->"336d4bf5-e657-4095-8d57-38aafa9af6e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79235, 2137, 438, 10, 42, "Input",ExpressionUUID->"84b5d704-2d71-408e-9278-fb2dfbaba8b8"],
Cell[79676, 2149, 154, 2, 48, "Output",ExpressionUUID->"55fd7409-baee-41ed-a0ab-13a01e3acce2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79867, 2156, 569, 13, 71, "Input",ExpressionUUID->"aa7e306b-7c63-46bf-a51c-0643be005b9b"],
Cell[80439, 2171, 210, 4, 48, "Output",ExpressionUUID->"187b2882-c41b-4631-8b85-410c11ee97e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80686, 2180, 1506, 36, 300, "Input",ExpressionUUID->"931c2a20-eb19-41ab-b2ef-dac500eafb17"],
Cell[82195, 2218, 12503, 312, 183, "Output",ExpressionUUID->"712c0a03-b3be-4935-b6cc-4435eadef89c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94735, 2535, 202, 3, 42, "Input",ExpressionUUID->"014d9d92-7f9c-46f9-8d27-4032f1dd98d1"],
Cell[94940, 2540, 444, 10, 38, "Message",ExpressionUUID->"42563707-32bd-4232-abb9-fe8ba8e10340"],
Cell[95387, 2552, 183, 3, 48, "Output",ExpressionUUID->"c54dd406-44a3-4a26-abd3-3f182e5867e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95607, 2560, 230, 4, 42, "Input",ExpressionUUID->"c17a40d3-e417-44e9-8f4e-c6c3224c64ac"],
Cell[95840, 2566, 1197, 30, 63, "Output",ExpressionUUID->"60f7c738-b32a-401f-a0dc-e2353ebaa44a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97074, 2601, 359, 8, 42, "Input",ExpressionUUID->"e1ed8881-0f65-4fbd-bf67-b70592610683"],
Cell[97436, 2611, 1115, 20, 71, "Message",ExpressionUUID->"15e64582-b787-4a33-8cfa-526a4c148ccc"],
Cell[98554, 2633, 1415, 36, 63, "Output",ExpressionUUID->"4f0a0c6f-cbc1-4739-99bc-9dbcce656403"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100006, 2674, 392, 9, 42, "Input",ExpressionUUID->"0a488f0b-1f2a-4d95-94d1-2507625fad5a"],
Cell[100401, 2685, 209, 4, 48, "Output",ExpressionUUID->"603b3ef2-bbc4-4fa1-aa1d-45cd94912539"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100647, 2694, 272, 5, 42, "Input",ExpressionUUID->"11a53123-1936-4d18-97e7-6d1c991d0a2b"],
Cell[100922, 2701, 531, 14, 62, "Output",ExpressionUUID->"7a973a1b-2b58-48e5-a363-d48d2ba05a5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101490, 2720, 902, 22, 58, "Input",ExpressionUUID->"c93f9d1d-f9e4-439e-b219-abbee559c2ed"],
Cell[102395, 2744, 866, 21, 56, "Output",ExpressionUUID->"2b7d8867-d088-449f-8a17-bdcfb26c0600"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103298, 2770, 399, 10, 43, "Input",ExpressionUUID->"61f69073-4031-4b68-b5cc-69355e919efa"],
Cell[103700, 2782, 167, 2, 48, "Output",ExpressionUUID->"0bae8ca8-ffea-44e1-a289-4d81afe6f188"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103904, 2789, 393, 10, 43, "Input",ExpressionUUID->"201cd3c7-72be-4e3b-add2-891573fe5a2c"],
Cell[104300, 2801, 542, 12, 56, "Output",ExpressionUUID->"e66e1def-60b8-467b-831b-02a3cb083986"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104879, 2818, 242, 4, 42, "Input",ExpressionUUID->"2a0ee634-cf56-453c-a6e5-5ffa2ebbc177"],
Cell[105124, 2824, 235, 7, 91, "Output",ExpressionUUID->"a967b606-60cb-4b7f-8d99-b932351b2ad7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105396, 2836, 1048, 25, 173, "Input",ExpressionUUID->"3543032a-89c1-4bc4-9e64-b97d713d5eaf"],
Cell[106447, 2863, 546, 12, 56, "Output",ExpressionUUID->"fb0a0f61-1ffd-41fa-85c7-b2d5df1582e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107030, 2880, 1737, 40, 357, "Input",ExpressionUUID->"5ac0080c-0062-44c7-9d89-eac5c88e4897"],
Cell[108770, 2922, 15909, 389, 228, "Output",ExpressionUUID->"185ea4c7-bef4-4ae6-88ed-fea4c736b8df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124716, 3316, 327, 6, 43, "Input",ExpressionUUID->"b1eebc77-8be9-491b-b9a3-0f2d2f55b906"],
Cell[125046, 3324, 15930, 389, 228, "Output",ExpressionUUID->"88d65106-7e4e-4e75-8e3b-0c0ea587a326"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141013, 3718, 803, 18, 183, "Input",ExpressionUUID->"7281a95d-8384-4f35-8f1f-d1ceb7c31550"],
Cell[141819, 3738, 243487, 4086, 438, "Output",ExpressionUUID->"8acd7274-f263-41b1-84df-041a0ac05fa5"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

