(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    692968,      15037]
NotebookOptionsPosition[    666969,      14586]
NotebookOutlinePosition[    667303,      14601]
CellTagsIndexPosition[    667260,      14598]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776720045926736*^9, 3.7767200509013977`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"329c33cc-6863-4f0d-9372-19c489e9c8b0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1P0vFHAcwPHjMjp5XDTlyOM8zVCdRcYUc3LGjdHEOS01D6lbujOb0LWu
prFiu6TWdnci7UTJ5Nx5unlYpjx0uIudy3UY7nC6u3DVls/3h/de/8HbLaeI
fNUUg8GQ/vbPwEjHFaPRKDqwSO/B0huQ794He29pkSE+pBzlKjLUjjn3WYKM
UmhGn7UiyQ/GWk5RkPRxZuE14T44NWW50kfdA/G9RUdDnXfBjvxBM5vvBjC7
Klg9W6kHdU9KWaJIHcixnndiy3fAhvhg2uRDLVhZQGX4ErfBUuwbOm1tE6SW
j3t+a9KAdT1L7IY8NfhpwefIW/d10MM2Kjrl5SrY7sfKW1SowAVx20kCQQku
BdSFiD4qQLuyZkKgiRwMIGwE8LZk4L0La1+6GBLQIYVfc+nYBNi+I7YZ9hwF
edKlx8tMIZiZ7PxBeoULduFKp/uLOZEHnlk0calIF4Ee6m59WP8ISOTMjiWm
T4AxJHustkMCVlMk5UGdMnAoEW+VZC8H19wcyibqFWDxbX9qtaMSlMhsybnD
KjC75NxP84RVcMA/9NGA2TrofVig4sapQbwgP8aMpQExBtNm2uIm+Cu5J0vs
tQ1KT1NOeDG14M00Wzt32Q7oVPsj/RBeB/IzXr3eYujBtIi7ccM9BrAtq9A9
bPc3qMOdx3al7oHkr+EEPHsfxIVb9gleIPu4cxcvc5BBjBLqcz7S2rWzykmM
HCkIUThsIqMsfGusE4yg7pbuOD8Z2Sod4pHSkC6tud1VOcjdVK4SV4Ls5LhG
mDcib1htDDW2IL3pQnJsG7I2PvP6fQGSpql/ip1E+mXkuXBmkPLBs83R88gk
9oywYhlpYdpEdNtAivLpU73byDvTsZRsA/L/t8A/BhudfQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$2322#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-1.999999918367347, 1.999999918367347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776720051352903*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"61ca1801-eeb2-4931-bb17-7041be18f63c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "-", "7"}], "\[Equal]", 
  RowBox[{"19", "+", "x"}]}]], "Input",
 CellChangeTimes->{{3.7767200554798393`*^9, 3.776720061261443*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"8e2d347e-b672-4da6-9a75-d12d37475a00"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "7"}], "+", "x"}], "\[Equal]", 
  RowBox[{"19", "+", "x"}]}]], "Output",
 CellChangeTimes->{3.776720063447275*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f3ed38eb-e7c2-499c-85a0-7886cc97e443"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "7"}], "+", "x"}], "\[Equal]", 
    RowBox[{"19", "+", "x"}]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[3]:=",ExpressionUUID->"23d6aade-4b75-405b-9f91-6e8dabecb5f1"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7767200649558983`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ab35ff2d-6115-41dc-a4c7-b821ffb4c465"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "-", "7"}], ",", 
     RowBox[{"19", "+", "x"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77672007020584*^9, 3.776720078013812*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"af7d1ded-717f-4011-836b-1761b0aea9c7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtlPs3lHkcgGfEfJPMeTNGIczMe2il01qVwaT3m1gStQxSSXMWbWlkVzVF
pWWHkOykknCUXXJru1DKFu9n3aKytJQjpcbtmKhsLjM7btuesz885znPP/Dw
v432j9BhMBi+n/nPYTcVH+fnEXTbDUzPz5NgPG1mI5pB0Fib3ML+3A1fF4XI
NAhu+9lespgjwaa3umV0DEHa0YMOohkS3i3u/7VbicClXrNPpiHh+8h1wZX1
CPJ2Gr4YHSMh3vol7D2NQJLqeKtbSUJOLpnZykYwNJQSXllPwpU3KdF++iwY
FvbtCkgkwaRdvM2WqwesiU6xtwcJzd+I3Z9Y64JDp/GzGH0SvGytD5OCBeDv
rf86pVkALjdCrrV9qQMZdpdU42cEoE3by3GwZULtL91yH28BTKoLL4auYMCs
6/6iLn0BNAgy19ZGzdHB7plN91r5INI7VWkXPkMXv42WJaXz4QIWCjee1NJG
w0M2Jdv4EJYXPPjuioZO55SHzHL40FZsqc/MmaK1nSQfd/DAcvGtr+iqCVrO
dBzqyuLBIt5Qm6rsE81smHHeHcgDaUBSdknJGJ1RRnC4XB5I6t88scx8T0s1
x7s3VViBwHXOrzFBRRc+osqc7K2gdF+l8kHVIM2NcjzRVWUJkeO3Q87kKOmo
DVkH/NZYwup4vR0ssofu366IsK+wAE5sp0FWbgd9zrNGUu1sAV3h0pU3+5vo
FWHiWIt7y+Fo3MqMlos36MmA5eftXJdD2c9OuND+N0qZcepefqM5ZOxPeCFJ
fETdmdjyz+gmczCc8BFd9+ugaPst6wcfm8Hbw01rZfIeqiK7Mu++pxl8qPat
O9qspOq8qtDfTaZw7XSBJDx1kDJoGznUsdUUrKfKOcdyVZQoIW1W8XQZ9FZY
1Yj2vacK9UNSNP7LIPDS25QRxRhl9/KRRWPPUsgvSq/xyfpEZb/Ia5fuXAq6
u6Le68VOUFRpobxWaQJ/SkqL/eVT1NNibtBIqAncNTTbrZZqqPMnqr+oG+CC
TQ5/GPloKdlltd6clAtamXy2XDxDufXlM7gjxjCiNWeXOM1RHszYmec/GMPV
7053mpMMbO/zkBvzgQOKjU/TTa2Z2OnNZedDURxgR5e71XN1cKxXWajlpBHU
ut+vqTJbgAtekwWFMUYwG7XHMYiti3U2tw90apYAE/112W5WF/84Y7ImMmEJ
OHrF1HkzWHiwpyn/5TwB2lfXh7mfWPinc6UGk8kEuEubFb5TLNzbkivslhNw
drrfKUnLwi46GWE1iQTwzMxTJ3QQHouJeZAUT4Dn9lTbDg7CIQGiAyYyAi48
i4hUrEPYcWnrY2EEAaubLEcXxSKsyhtLjdtEwLFAlwtuJxF2f953N3QjAX8M
BK6PS0D4quFzpRtFQMCCs+mqVISD4qudDUQEHMfTq5pzEK7bk6jKdSCg+feu
qKSHCOcJjDfX8Akw8h7n1gDC6p2sIwVWBIR0s2snGhD2P6+5mmRBwEe1Bzu8
FeGFuq81vqYEmKy7c8OtF+Ejg0UlvQQBkoa2oLg+hNstsjvr2ASUikfmbg8h
vCoojVG8mID1MYJt/I8I9zUdDI5eSEAyc4M6eBxh13mJXMwioF2x44pCjXC2
UHxLqEuAGe+IZ/M0wuPRHq/MdQj4/194a4lwIYNBwL/pkli0
       "]]},
     Annotation[#, "Charting`Private`Tag$3388#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1Hs0lHkcBnDjMr8U09mmqWM41iVatPXO5Veier9ZxYoKKVqV3aGViFNR
dKpVCSU7SshsLkWEiMoWjfctslNqKfdsci+3CBkNw86es3885zmfP59/HuNf
gt381NXU1FxU+a9FReKRuTlELx7QVZGAxdNcc9sZRKdlrJMcV7lqc7Z32BSi
v9t1UPhZZfP2R8+HRhFtWyXb38UgYECn+2ZrJ6JFaWdrqjQICAnAnvcqEV3i
9jUxFhFwyuwtvT8a0dvLe5azFxKQKjG9/IqF6Etx5S7mhgSkv48JdtVm0jo9
rDeNGwhYUue+zYKjRSujOE279xAg2+5uX2OmSX+4Gpq8+QQBjhZmR01NNOjm
3ScSyiUE2BR636pdpU6vDRAuYJYRoLiwn823YNCZK69IW98S8EWedXXvcjWa
8fOW7xdPq/aYXBZWBM1SDe9KDZbp8cBW6/Q9K98ZqmChzF66lgeJsGbNxpMK
Sn4xbsjKkweiPzx7B9KnKJuwPFdGGA9qcwy1GamT1FnOoZF9STww1LnLo0on
qA1zPTqJ93kw36ivtj9vjJq7zhC5NvIgcEdUSm7uKPUo71hY6Bce+FS+rzG8
PEz1MjK1g9l8MFk/6/ossp9aygpp/Czgw23/e53lpb1Uue+YkZMbHwLGi70v
pnZSfiHcbKsjfFh5SsuLadpGoQFJ35ErfGCHNyxIktRTBoV1OQnFfGj2DbQs
6q6mVi/Pz7R+w4djEZbxz68WUpUD1voPRvmQ97s1ZBF3SEcDI7cUlgDiD0Q2
+Zz5i6xXv/NEc5UAdCecbQtc68k6wfDdzS4C6DhaLQw710Y26NW3fHNIAJ8e
uTw9Juska4MWVfwQL4Bb0Zk+vrG95HodLdMtBQIwm8xnH5f0k8X7rtNtLwXQ
XvKt1NZ/mExWfny3cVAAHskdMYPiUTJUO/4hS1sIadlxUuekMXL3i5YaXwsh
aP4UNKwVPkHebWzaK3YQwt8+t3Pczk2SukkRlpv8hfBAl7tHHjhFtmW8Dq09
LwTzVOOPyFlB3tA7c4rOEoIi7Jwy332GDHFooWyeCWFQoc/KtZ4li6jO3y50
CyHj1+gGfVM1mBgSR4g0MYg3vozTM2MAP+Ya7+YyDKzgfLtKjjp0BXn4P7TD
UGH/UFrK1YCUeX827xRhUAbtW72TpQn0cE31i0gMDPTmmpVSEzrA5kh2OobV
joefOqkxAf241VObxqD4p+AjZ4wJ6RKO1K4dg32gTOwyyYQYXb2S5ypfmu62
jlIw4fBpg5zt7zEYcfVjJ9QR2ItME/Z2YHDYFWtRz0bQb8nzi+jCkPjaL0CM
EfDLnHVL+jCsrDYcmh+OoLrl7B7jEQzHPWwS7U4iKHKKdstV+UmPx7qISAQp
jy84rBrFsEPjUlx/LIKAjATe+s8YTsD0ClkqgoX+6Vpe4xhkZc1BUY8ReMnL
7ojlGBY5jXOkNAK7AxU3lk5h8G5lVUxUIVjR9iQ5TeUR+SaW7ysEsxWyyIKv
GJbg+4V27Qhunm/ykE1j8Kmq3RnRhSBuqtVp2wyG2+6Ds8V9CEID3pFNKq87
bLLNeASB49Yeix4lhvOMDXLPcQQ8+oPhwVkMdWKvdLEcAZc/yB5TmWsU6iCb
RqCR9Wle+ByG//8LhjhjyjmV/wUK5Dla
       "]]},
     Annotation[#, "Charting`Private`Tag$3388#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-9.999999877551021, 21.99999987755102}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7767200782593727`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"a83fddd5-8b35-430a-b39a-3b23a3ed1572"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "7"}], "+", "x"}], "\[Equal]", 
   RowBox[{"19", "+", "x"}]}], "/.", 
  RowBox[{"x", "\[Rule]", "\[Infinity]"}]}]], "Input",
 CellChangeTimes->{{3.7767200895095797`*^9, 3.776720091968996*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"1d431945-5c52-45c9-aaab-405b7debc791"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.77672009228905*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"3fa7c2ac-1fd0-4aa4-984c-f3b6b4bb99ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   TemplateBox[{},
    "Reals"], ",", 
   RowBox[{"{", "\[Infinity]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776720103113673*^9, 3.776720114269669*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"9be82261-6cb5-4c45-b55c-04b8f4e970d1"],

Cell[BoxData[
 TemplateBox[{
  "Union","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{TemplateBox[List[], \
\\\"Reals\\\"], \\\"\[Union]\\\", RowBox[{\\\"{\\\", \\\"\[Infinity]\\\", \
\\\"}\\\"}]}]\\).\"",2,6,1,25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7767201145423393`*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"2673d614-f916-4d4f-9447-7ad214a014dc"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{},
   "Reals"], "\[Union]", 
  RowBox[{"{", "\[Infinity]", "}"}]}]], "Output",
 CellChangeTimes->{3.7767201146097383`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"67bbc2f9-4a04-4499-b8a1-6d4d6f63ae21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "7"}], "+", "x"}], "\[Equal]", 
    RowBox[{"19", "+", "x"}]}], ",", "x", ",", 
   RowBox[{"Union", "[", 
    RowBox[{
     TemplateBox[{},
      "Reals"], ",", 
     RowBox[{"{", "\[Infinity]", "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776720122613729*^9, 3.7767201317258587`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"788debbb-f68c-4d09-9373-c095ff8b65c5"],

Cell[BoxData[
 TemplateBox[{
  "Union","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{TemplateBox[List[], \
\\\"Reals\\\"], \\\"\[Union]\\\", RowBox[{\\\"{\\\", \\\"\[Infinity]\\\", \
\\\"}\\\"}]}]\\).\"",2,7,2,25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7767201321907673`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"ecf94f8e-065d-4f77-9f7c-e4509fae6cbe"],

Cell[BoxData[
 TemplateBox[{
  "Solve","bdomv",
   "\"Warning: \\!\\(\\*RowBox[{TemplateBox[List[], \\\"Reals\\\"], \\\"\
\[Union]\\\", RowBox[{\\\"{\\\", \\\"\[Infinity]\\\", \\\"}\\\"}]}]\\) is not \
a valid domain specification. Assuming it is a variable to eliminate.\"",2,7,
   3,25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776720132203092*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"0a126071-5f27-4b5d-9329-0a819b895928"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.776720132211895*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"4cf6f49f-d876-4d20-9a9a-97b1335afcf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Pyramid", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.776721402291293*^9, 3.776721411696631*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f2e0aa4c-a84d-4358-a85d-5c4a2c31199c"],

Cell[BoxData[
 Graphics3DBox[
  PyramidBox[{{-1, -1, 0}, {1, -1, 0}, {1, 1, 0}, {-1, 1, 0}, {0, 0, 1}}],
  ImageSize->{336.46874925239007`, 282.57037817929177`},
  ImageSizeRaw->Automatic,
  ViewPoint->{-1.3203243552781487`, -2.3375538019197375`, 2.059753825094135},
  ViewVertical->{-0.14894848169464, 0.07344755386597936, 
   0.9861134856759467}]], "Output",
 CellChangeTimes->{3.776721411937687*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"c021060f-b3dc-410e-a7fc-a51966a6af0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Sphere", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7767214402173853`*^9, 3.7767214441052523`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"dbfc8ac3-e4ad-43cd-bc85-11d48b843dac"],

Cell[BoxData[
 Graphics3DBox[SphereBox[{0, 0, 0}],
  ImageSize->{293.78214987466635`, 292.9939000715429},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.6236989671368416, -3.3257212842004025`, 0.024032024651782228`},
  ViewVertical->{0.1294389319773606, -0.5712417499924132, 
   0.8105112127257499}]], "Output",
 CellChangeTimes->{3.776721444436802*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"92a689e7-b1d2-4737-ad4e-3da9bc766b23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Cylinder", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7767214487613087`*^9, 3.7767214579046297`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"cab5d372-ab51-43f1-ad91-924c2f3bd850"],

Cell[BoxData[
 Graphics3DBox[CylinderBox[{{0, 0, -1}, {0, 0, 1}}],
  ImageSize->{371.9167585838242, 398.826340451189},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.9052137506358187`, -1.44515105322871, 2.3940966976586693`},
  ViewVertical->{0.013929251043993895`, 0.24175878087893246`, 
   0.970236397912017}]], "Output",
 CellChangeTimes->{3.776721458228505*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"0e112e63-0a4e-405e-a118-8ea05f2efcb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Dodecahedron", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7767214633532*^9, 3.776721489777618*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"3f6a4160-e9ed-4cb6-b0ea-018eb4c00e21"],

Cell[BoxData[
 Graphics3DBox[
  InterpretationBox[
   TagBox[
    GraphicsComplex3DBox[
     NCache[{{-(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 0, Root[
        1 - 20 #^2 + 80 #^4& , 3, 0]}, {(1 + 2 5^Rational[-1, 2])^
        Rational[1, 2], 0, Root[1 - 20 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[5, 8] + 
         Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[5, 8] + 
         Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 3, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
       Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
        Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
         Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[-1, 2], Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
       Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
        1, 2], Root[
        1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 4] + 
         Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[-1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
        Rational[1, 2]}, {(Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
        Rational[1, 2], Rational[
        1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
        Rational[1, 2]}, {(Rational[1, 10] (5 + 5^Rational[1, 2]))^
        Rational[1, 2], 0, Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 2, 0]}, {
       Root[1 - 5 #^2 + 5 #^4& , 1, 0], 
        0, (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
        Rational[1, 2]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 1, 0]}, {
       Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
        Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
        1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 8] + 
         Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[1, 8] + 
         Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
        1 - 20 #^2 + 80 #^4& , 2, 0]}}, {{-1.3763819204711736`, 0, 
        0.2628655560595668}, {
       1.3763819204711736`, 
        0, -0.2628655560595668}, {-0.42532540417601994`, -1.3090169943749475`,
        0.2628655560595668}, {-0.42532540417601994`, 1.3090169943749475`, 
       0.2628655560595668}, {1.1135163644116066`, -0.8090169943749475, 
       0.2628655560595668}, {1.1135163644116066`, 0.8090169943749475, 
       0.2628655560595668}, {-0.2628655560595668, -0.8090169943749475, 
       1.1135163644116066`}, {-0.2628655560595668, 0.8090169943749475, 
       1.1135163644116066`}, {-0.6881909602355868, -0.5, \
-1.1135163644116068`}, {-0.6881909602355868, 0.5, -1.1135163644116068`}, {
       0.6881909602355868, -0.5, 1.1135163644116066`}, {0.6881909602355868, 
       0.5, 1.1135163644116066`}, {
       0.85065080835204, 
        0, -1.1135163644116068`}, {-1.1135163644116068`, -0.8090169943749475, \
-0.2628655560595668}, {-1.1135163644116068`, 
       0.8090169943749475, -0.2628655560595668}, {-0.8506508083520399, 0, 
        1.1135163644116066`}, {
       0.2628655560595668, -0.8090169943749475, -1.1135163644116068`}, {
       0.2628655560595668, 0.8090169943749475, -1.1135163644116068`}, {
       0.42532540417601994`, -1.3090169943749475`, -0.2628655560595668}, {
       0.42532540417601994`, 1.3090169943749475`, -0.2628655560595668}}], 
     Polygon3DBox[{{15, 10, 9, 14, 1}, {2, 6, 12, 11, 5}, {5, 11, 7, 3, 19}, {
      11, 12, 8, 16, 7}, {12, 6, 20, 4, 8}, {6, 2, 13, 18, 20}, {2, 5, 19, 17,
       13}, {4, 20, 18, 10, 15}, {18, 13, 17, 9, 10}, {17, 19, 3, 14, 9}, {3, 
      7, 16, 1, 14}, {16, 8, 4, 15, 1}}]],
    "Polyhedron"],
   Dodecahedron[]],
  ImageSize->{364.78916066249354`, 347.8158347719487},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.058097275100464, -2.104526128420465, 1.6688934600565775`},
  ViewVertical->{0.10468726448977639`, -0.03275797382409859, 
   0.9939655385397359}]], "Output",
 CellChangeTimes->{3.776721490163599*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"abad04a4-a4f5-4910-a691-eeeddac5da02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Cube", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7767215421766148`*^9, 3.7767215468736153`*^9}, {
  3.7767218611461887`*^9, 3.7767218676901293`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"0f278281-afc6-40d8-b4fe-0ee05d424ac2"],

Cell[BoxData[
 Graphics3DBox[
  InterpretationBox[
   TagBox[
    GraphicsComplex3DBox[
     NCache[{{Rational[-1, 2], Rational[1, 2], Rational[-1, 2]}, {
       Rational[1, 2], Rational[1, 2], Rational[-1, 2]}, {
       Rational[1, 2], Rational[-1, 2], Rational[-1, 2]}, {
       Rational[-1, 2], Rational[-1, 2], Rational[-1, 2]}, {
       Rational[-1, 2], Rational[1, 2], Rational[1, 2]}, {
       Rational[1, 2], Rational[1, 2], Rational[1, 2]}, {
       Rational[1, 2], Rational[-1, 2], Rational[1, 2]}, {
       Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}, {{-0.5, 
      0.5, -0.5}, {0.5, 0.5, -0.5}, {
      0.5, -0.5, -0.5}, {-0.5, -0.5, -0.5}, {-0.5, 0.5, 0.5}, {0.5, 0.5, 
      0.5}, {0.5, -0.5, 0.5}, {-0.5, -0.5, 0.5}}], 
     Polygon3DBox[{{1, 2, 3, 4}, {5, 6, 2, 1}, {6, 7, 3, 2}, {7, 8, 4, 3}, {8,
       5, 1, 4}, {8, 7, 6, 5}}]],
    "Polyhedron"],
   Cube[]],
  ImageSize->{306.6242426280755, 307.8016038926578},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.6561126358361657, -3.294530237216028, 0.406923488097481},
  ViewVertical->{0.033730946778757404`, -0.49296609009713543`, 
   0.8693944198370217}]], "Output",
 CellChangeTimes->{3.776721867936501*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"1a589fc4-20ef-46fb-b25a-9d2b19286fa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Tetrahedron", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7767218752743807`*^9, 3.776721878938282*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"198fa6d5-49c9-4e7e-afad-a7fc867b2751"],

Cell[BoxData[
 Graphics3DBox[
  InterpretationBox[
   TagBox[
    GraphicsComplex3DBox[
     NCache[{{0, 0, Rational[2, 3]^Rational[1, 2] + 
        Rational[-1, 2] 6^Rational[-1, 2]}, {
       Rational[-1, 2] 3^Rational[-1, 2], Rational[-1, 2], Rational[-1, 2] 
        6^Rational[-1, 2]}, {
       Rational[-1, 2] 3^Rational[-1, 2], Rational[1, 2], Rational[-1, 2] 
        6^Rational[-1, 2]}, {
       3^Rational[-1, 2], 0, Rational[-1, 2] 6^Rational[-1, 2]}}, {{
       0, 0, 0.6123724356957945}, {-0.2886751345948129, -0.5, \
-0.20412414523193154`}, {-0.2886751345948129, 0.5, -0.20412414523193154`}, {
       0.5773502691896258, 0, -0.20412414523193154`}}], 
     Polygon3DBox[{{2, 3, 4}, {3, 2, 1}, {4, 1, 2}, {1, 4, 3}}]],
    "Polyhedron"],
   Tetrahedron[]],
  ImageSize->{413.00933777278317`, 336.5955713568541},
  ImageSizeRaw->Automatic,
  ViewPoint->{-0.16319353860481517`, -2.703571334697821, 2.028317013476414},
  ViewVertical->{0.5879875919390668, -0.1669552298034083, 
   0.791452173518393}]], "Output",
 CellChangeTimes->{3.776721879224875*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"d6855d65-62aa-4dee-bff1-bb05a28b85b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.776721887506361*^9, 3.776721903385697*^9}, {
  3.776722300482636*^9, 3.776722306713747*^9}, {3.7767252973984528`*^9, 
  3.776725303350834*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"5975531b-c2f3-4d96-b27e-3ab2fe24280a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1P0vFHAcwPHjMjp5XDTlyOM8zVCdRcYUc3LGjdHEOS01D6lbujOb0LWu
prFiu6TWdnci7UTJ5Nx5unlYpjx0uIudy3UY7nC6u3DVls/3h/de/8HbLaeI
fNUUg8GQ/vbPwEjHFaPRKDqwSO/B0huQ794He29pkSE+pBzlKjLUjjn3WYKM
UmhGn7UiyQ/GWk5RkPRxZuE14T44NWW50kfdA/G9RUdDnXfBjvxBM5vvBjC7
Klg9W6kHdU9KWaJIHcixnndiy3fAhvhg2uRDLVhZQGX4ErfBUuwbOm1tE6SW
j3t+a9KAdT1L7IY8NfhpwefIW/d10MM2Kjrl5SrY7sfKW1SowAVx20kCQQku
BdSFiD4qQLuyZkKgiRwMIGwE8LZk4L0La1+6GBLQIYVfc+nYBNi+I7YZ9hwF
edKlx8tMIZiZ7PxBeoULduFKp/uLOZEHnlk0calIF4Ee6m59WP8ISOTMjiWm
T4AxJHustkMCVlMk5UGdMnAoEW+VZC8H19wcyibqFWDxbX9qtaMSlMhsybnD
KjC75NxP84RVcMA/9NGA2TrofVig4sapQbwgP8aMpQExBtNm2uIm+Cu5J0vs
tQ1KT1NOeDG14M00Wzt32Q7oVPsj/RBeB/IzXr3eYujBtIi7ccM9BrAtq9A9
bPc3qMOdx3al7oHkr+EEPHsfxIVb9gleIPu4cxcvc5BBjBLqcz7S2rWzykmM
HCkIUThsIqMsfGusE4yg7pbuOD8Z2Sod4pHSkC6tud1VOcjdVK4SV4Ls5LhG
mDcib1htDDW2IL3pQnJsG7I2PvP6fQGSpql/ip1E+mXkuXBmkPLBs83R88gk
9oywYhlpYdpEdNtAivLpU73byDvTsZRsA/L/t8A/BhudfQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$9149#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-1.999999918367347, 1.999999918367347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776725303586359*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"910e24d5-7a83-49cf-a895-c6c26edf1714"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    SuperscriptBox["x", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.776725310125271*^9, 3.776725310415745*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"b0a9f2a2-cd59-432f-b7ed-a6e4e9ec90c7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$9797#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {0., 3.9999996734693943`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776725310796327*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"03c30b4a-d6d0-4e36-884e-c6cc5b4a9cff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.776725332559099*^9, 3.776725336831066*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"dcf44f63-fcb4-4d38-af38-ef1108ae9f78"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
T1Vlwf9//4L///4F/wMTRWSh
       "]]},
     Annotation[#, "Charting`Private`Tag$10447#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1P0vFHAcwPHjMjp5XDTlyOM8zVCdRcYUc3LGjdHEOS01D6lbujOb0LWu
prFiu6TWdnci7UTJ5Nx5unlYpjx0uIudy3UY7nC6u3DVls/3h/de/8HbLaeI
fNUUg8GQ/vbPwEjHFaPRKDqwSO/B0huQ794He29pkSE+pBzlKjLUjjn3WYKM
UmhGn7UiyQ/GWk5RkPRxZuE14T44NWW50kfdA/G9RUdDnXfBjvxBM5vvBjC7
Klg9W6kHdU9KWaJIHcixnndiy3fAhvhg2uRDLVhZQGX4ErfBUuwbOm1tE6SW
j3t+a9KAdT1L7IY8NfhpwefIW/d10MM2Kjrl5SrY7sfKW1SowAVx20kCQQku
BdSFiD4qQLuyZkKgiRwMIGwE8LZk4L0La1+6GBLQIYVfc+nYBNi+I7YZ9hwF
edKlx8tMIZiZ7PxBeoULduFKp/uLOZEHnlk0calIF4Ee6m59WP8ISOTMjiWm
T4AxJHustkMCVlMk5UGdMnAoEW+VZC8H19wcyibqFWDxbX9qtaMSlMhsybnD
KjC75NxP84RVcMA/9NGA2TrofVig4sapQbwgP8aMpQExBtNm2uIm+Cu5J0vs
tQ1KT1NOeDG14M00Wzt32Q7oVPsj/RBeB/IzXr3eYujBtIi7ccM9BrAtq9A9
bPc3qMOdx3al7oHkr+EEPHsfxIVb9gleIPu4cxcvc5BBjBLqcz7S2rWzykmM
HCkIUThsIqMsfGusE4yg7pbuOD8Z2Sod4pHSkC6tud1VOcjdVK4SV4Ls5LhG
mDcib1htDDW2IL3pQnJsG7I2PvP6fQGSpql/ip1E+mXkuXBmkPLBs83R88gk
9oywYhlpYdpEdNtAivLpU73byDvTsZRsA/L/t8A/BhudfQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$10447#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-1.999999918367347, 1.999999918367347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776725337099495*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"e0eeb415-2a35-4ef9-abd1-66188123df41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sin", "[", "x", "]"}], ",", "0", ",", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.776725437630395*^9, 3.7767254744711313`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ac836f07-c5cf-44e9-a9ff-a4484d73092b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.524, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {865., {271., 277.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$11409$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$11409$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Sin[$CellContext`x], 0, $CellContext`a$$ 
         Sin[$CellContext`x]}, {$CellContext`x, -2, 2}, PlotRange -> {-2, 2}],
       "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{912., {315., 322.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776725474894161*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"fa1c0f0a-8a4f-4e3f-9679-69d2fc92049d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sin", "[", "x", "]"}], ",", "0", ",", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"-", "2"}], "\[Pi]"}], ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], "\[IndentingNewLine]", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}]}]}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.776725449352828*^9, 3.77672552003436*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"197116f0-1b91-498f-8da3-3b39471962d1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.17400000000000002`, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {971., {304., 310.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$15544$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$15544$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Sin[$CellContext`x], 0, $CellContext`a$$ 
         Sin[$CellContext`x]}, {$CellContext`x, (-2) Pi, 2 Pi}, 
        PlotRange -> {-2, 2}], "Specifications" :> {{$CellContext`a$$, 0, 1}},
       "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1018., {348., 355.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776725523380601*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"92aea699-6419-4de0-8d92-ec4965f8dbaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}], ".", 
  RowBox[{"Normalize", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77672608276818*^9, 3.776726096046064*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"769ceeac-c234-41d1-b632-35a03501207a"],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{3.776726148515252*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"126c12f1-3831-4a6f-a6e1-d463b45c1350"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RootOfUnityQ", "[", 
  FractionBox["1", 
   SqrtBox["2"]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[28]:=",ExpressionUUID->"a5f206db-11b3-4d7a-813b-a08243c07281"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.776726216799787*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"a444354a-732b-47f9-964f-f31a4299fba9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlgebraicUnitQ", "[", 
  FractionBox["1", 
   SqrtBox["2"]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[27]:=",ExpressionUUID->"33054096-ab17-423d-8b7f-0c403133a641"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.77672621157239*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"18263d8a-82ec-443a-9c74-c496d0f6c316"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlgebraicIntegerQ", "[", 
  FractionBox["1", 
   SqrtBox["2"]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[26]:=",ExpressionUUID->"f3a174dd-7585-446a-960a-bd8089900d26"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.776726206307561*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"ddc5bd09-5062-4539-9e61-16806bdf87bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlgebraicNumberDenominator", "[", 
  FractionBox["1", 
   SqrtBox["2"]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[25]:=",ExpressionUUID->"80d75ace-e720-4797-8dda-7f9f698984e3"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7767261991680107`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"b8138559-a726-4290-8585-053a2c7aaa8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlgebraicNumberNorm", "[", 
  FractionBox["1", 
   SqrtBox["2"]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[24]:=",ExpressionUUID->"04c8e59c-4825-4793-afad-c6a562bacdff"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", "2"]}]], "Output",
 CellChangeTimes->{3.776726185096386*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"1ff11996-b49d-4489-a8b2-cf79328d0695"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlgebraicNumberTrace", "[", 
  FractionBox["1", 
   SqrtBox["2"]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[23]:=",ExpressionUUID->"5d787e74-7c1c-4e36-94e9-3ddc1cbbd6c2"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7767261812743196`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"4cd49f6d-401b-4f0b-91ee-eabe04ba6716"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToNumberField", "[", 
  FractionBox["1", 
   SqrtBox["2"]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[22]:=",ExpressionUUID->"5bdd757a-41fb-4181-9e58-6d22dbe57b5a"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"AlgebraicNumber",TemplateBox[{"\"0.707\"", 
      DynamicBox[
       FEPrivate`FrontEndResource[
       "FEExpressions", "NumericalApproximationElider"]]}, "RowDefault"],
    TagBox[
     RowBox[{"AlgebraicNumber", "[", 
       RowBox[{
         SqrtBox["2"], ",", 
         RowBox[{"{", 
           RowBox[{"0", ",", 
             FractionBox["1", "2"]}], "}"}]}], "]"}], Short[#, 7]& ],
    0.7071067811865476},
   "NumericalApproximation"],
  AlgebraicNumber[2^Rational[1, 2], {0, 
    Rational[1, 2]}]]], "Output",
 CellChangeTimes->{3.7767261755395527`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"7ec8e10b-129b-4bbb-bb01-3eee35c62a31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IsolatingInterval", "[", 
  FractionBox["1", 
   SqrtBox["2"]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[21]:=",ExpressionUUID->"27748dcc-b924-43fa-a94a-8f64c0f21a45"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["45", "64"], ",", 
   FractionBox["91", "128"]}], "}"}]], "Output",
 CellChangeTimes->{3.776726165142314*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"5bc4b76d-1530-4a09-88cb-cd3aa33b6ac3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MinimalPolynomial", "[", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", "x"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[20]:=",ExpressionUUID->"0b664b3c-ff4a-4151-8527-2df8a19d1a41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{3.776726160396578*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"fcdc1005-fc09-4447-933b-4ba7a4d9613c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ".", 
  RowBox[{"RotationMatrix", "[", 
   RowBox[{
    RowBox[{"2", "\[Pi]"}], "-", 
    FractionBox["\[Pi]", "4"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.776726638135602*^9, 3.77672665568579*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"085ad74c-9110-43cb-b3b1-8d31cdbc6991"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["x", 
     SqrtBox["2"]], "-", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox["x", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7767266706424103`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"bd964c68-7cfa-410d-841d-c431467ea3ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776726675349824*^9, 3.776726688166141*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"cb31bc36-02a4-4df7-8557-074e4294c96c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
haD+3//98H//91P/H7L71E0=
       "]]},
     Annotation[#, "Charting`Private`Tag$24487#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.7712431857491769, 0.7712431857491769}, {-2.057183938997013, 
   2.057183938997013}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776726691458555*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"7760a212-ac26-433e-a4ef-e13b6364a0ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776726709686385*^9, 3.776726711622614*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"f4fb3bd0-3469-4ee1-b1d2-f4a96025b63f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
Rb9ec9FvAf2X3hHxKA/n3at/E1knF9Bz6SuoKpcMK6dzBCg7FpDLcpfLQg4Z
Zgs3ClT9m0f6+yqH9uK+4lnoOapbOY9kO3aGnsrC6w+Xsq5MmEdttef1vTJx
f2T4+a2cnEeHtjVnhqWT4Tr5pLdo1Rz6Np6SYfWaDOre5+ScUudQ/IGXjSav
yBBcf1jua/AcepWVYcpIxX3Y9bMgR28OcZq6MHEk4++Z5jMXxdJZJOnFL2mA
+/hz+/qxf89nUVNBdTNzHBnGLtotFl+fRWM3thq/j8HvL7hYP1RjFkXHB22k
PSdD2laXyqa8GZT5IuPYmUgyfHeZecf/eAZV05zb+h7hfkydszzpMYMqOf6F
2D0kg5ulm7Xkthl057gaWes+GaKvp+qczZpGO57Sgx6EksFCdeeG9VlT6Oef
X/PJ18iw0QD5nn8whdYNRBm+9CbDCWb5b2WXplBuzJnYR144jzp4alPVptBA
s4eojTsZMs4dkzLPm0TyZ80dAs+TgRG7v35L5CS61/6bTf0cXj/dIoR+ZRJJ
bT+m8NsBf7+HLlzfojGJ5qcOv+azw/mV4k3fUzqBbp+rriFbkOHk74iL2bET
yP8UxJ8xIwOlSe6zZsAE+u19xR0Z4/2I1mG6rT+B7ms715gfJENqeROnVPU4
kltMKmVm4PFuD1Xt/DOGbu5K3Oe8CZ9fcpd33EZjiOf2mG/XejJIHIk5Phc7
hk4kev4+KE0Gb6sTB6VPjSHxoQ9oVpQMk7F2t49+GUW7uYc1sznIoLvt6sXY
26No3eH/shALGcICjv5dd3gU6cefLENkMpxKevka/RhBpRvdXZ7Mk6BAoDX8
XucwYust3JLwlwThiS9N7iYNo7BN1ml6PSS4GnA348N5fP3nTt2mPySIerqk
1jjxD7m2s/p+byLBcY/k0Vi2fyiGonZr3UcS7Cjwa17RHERn+5MZrM9JIGJz
tvYB0yBKStS9VBZJgi+eISO2XwfQpU+1P10ekED5geuldMsBxH4HBJ4FkyCr
0m5WzO8vYm15OqTtRoIVP6kt5t/70JhdY10GgwTQqCKb+bwP7XTvK/PeTQKu
n4TUAcc+9Fx0TkVNnQRe4+/rdpH6kPsfvVNem0hwKHJcn2VbLxKn3lnW5SFB
XCw192piN+IMbU+tSltFwvoTZa88ulFCjoBkyotVlFNqnimytxvJTbLFO9xb
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
       "]]},
     Annotation[#, "Charting`Private`Tag$25122#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-7.455748828483987, 7.455748828483987}, {-6.686386795246962, 
   6.686386795246962}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776726730883697*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"eb1b5abb-b39a-4bd9-bd5f-1877d5a3b1d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{"1", "+", 
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776726736470996*^9, 3.7767267772302027`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"cd820784-78a5-48ae-9e8e-25faa8d79c0a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox["5"]}], "+", 
    RowBox[{"ArcSinh", "[", "2", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.776726777923089*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"c00588ef-cc6a-438f-8425-0b7dae8b02ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       SuperscriptBox["x", "2"]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"len", "=", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{
             RowBox[{"f", "'"}], "[", "x", "]"}], "2"]}]], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"f", "[", "x", "]"}], "len"], "-", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"f", "[", "x", "]"}], "]"}], "len"]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"f", "[", "x", "]"}], "len"], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"f", "[", "x", "]"}], "]"}], "len"]}]}], "}"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776726790277615*^9, 3.776726890839542*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"683ca101-6883-4ed7-a4b8-4f2cb91a45fc"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
t8xNI3Jx2Pf6ul+LKcL2cLHH/jZDmIjwamu9KZZcrSxffDTDUkB5m1SNKTrl
3xRLNZmBzOXGsPehKcRedmcXlZlhVmDOOabMFI9vXX1+4JoZvLksNwYWmyLr
1NRYeIwZzuruOMZbYArNCyqLn/zMsLKL/qr/HVMUxAv1ltiZIblt30m3PFOo
OQhT/umagT1V5NTrHFN0cM0W9wubIej6Ppmnt0zhlFKv4rtmip8bFGkbCD/Y
rmRXQPR5Nbg6Oi/bFFu/6y1Vt5liWY375RHC76fb7cqJuoKKbeh8Ce/5Jn3q
VoophvdrMfgQZnPYXpsdaQqDb3dveRL22ey+/HyXKT4wPOzRJSx57cK0uJUp
BJb+LXy8aQrL90Nfm5VM8Usz+ZkJ4Qiq+KUuTlM83FVw2PKGKW4c2bhqN2eC
0+wHVj5lmmJ+s8cp2mcTiJk5C89fJ+ZzXODUj0YT5Jupe8SkE3Vmnp/VLzZB
JjU2U4yoS4V/m6/nFRPckQm6N37JFA4xaS8CokywT7E8602iKRQnejYd2WsC
Uft+nZY44v7b87afoZrgXNo+1icnTDFlZhZYZmCCyBP/bueEmYI96T/ORVkT
fJc6cyLogCn01rRrAnlMQP9cQFTY2xSRyd3t7OvGKPGxF7vpYgrVBq7Lw7+N
kXyu02huqymsBAqUfg0a40nheztJE1NUfp7M0uw2hkEEj5OomineVta+vdNs
jFrn/D2ToqbEe6hirs0TY6iZnMxLYTVFoVbLG6H7xpAqYrAXWTSBwdMwMnOh
MbT196Sc/WqCiPGQCo4cY1hY2V8YfW2Cio+PPCQzjLFa/EGaUmuCgXT9RI0U
Yxzdz7R657YJeJ9zLKpeMsbljw1+skkm+Dgp3s903hjNB+Tk20NNwN8lyVGa
YAyyT6TPfU8TpBxvFGOLNyYeP9gvj1GI6/eL49lPG+NctoXmKQUT3Niz0Jx1
iuhf/Xd9CpsJdlGV0vNijIHcG8kGU8Z4c/Pfvw2E37w+l3L6HbGPl+DZ2mhj
XCrjoSRVG2N7PF/gDcJ7bDO8Dt4whrvD+7JrhPfuNZ8wJu6rUVLmmUrYkqWs
l8vHGA1iutePEeZ+4rxOt9UYLUneAzqEhZN1J1XVjFG4Z1zs7kljzEjeuJfL
TeR6yfJD3QlifQRf7bE5I6QHHXb3OW6MSPOM1+0fjRAmytsSH0Xs63bxRUmD
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
CqZH8krXKMqDl10vE54w6lX/o7VG6Qtt8JIlHCnC2fPv0SplbChb/NoKCQ7X
koqajVYp5ZY9U9/+kRDX+arcrX6Fosxc7MJLWLWqv7rKeoWyjczzlfcvkUfF
5l3f2/9R6DPaHMaWSGjo+Lqy6PyPwqvuE5C4SMIbr6+N4/1/Kfkt24SX5kmY
Pfk8p97/L4V7V/1+nTkSTMRc7eNmlinb/rw7ofOHhDXnWXuj6GWK4sm9V+an
SEiLT/o5xrpMiW7/TTrxi4TzPV/MrlxfosS/urGpYZKEayOPxcwUlyhD6vST
DeMkWKwZaP2uWqS8bePNOz5KQtA7ufF7WxYpX9rGtX8NEfVObYqO6Fug+H3L
PSn4hYRLn17OuxxcoJh8UYyb6SNBYE++lO36PMXKZtnz1HsSDG7ppHumzVP6
hf4YPOsiYTotru6s6jwl6RWTf/ErEvgektrev5ijjJes21s1k7Dsr+I2ODtL
mQ9z9jlaS8JPliPIS56lsPcO9LM9IiG+bu9gsuoshXyYr9CmlIQrQfpT835/
KFXPI95VZZPAtLBmFcb0h8Ktq2f9NZ2Eraz3+eQLZih+OX9lKi+RkEU9NKXw
Y5rSrfmGYn6SBNGBB0eOXZ6maEht2jwXSgLmRncy6U9TMpKfWtoFksDKmDKT
wjJFcW3wuf7FhehvvCqDacdvSiWDnLeQLQmMUzev/Sr/RXlK0Vz7bUGC1tTR
+5LePynuMTVhp5RISD6bcCOg7gdFPvOwu6EYCXtNJE8piP2g1ByiU77MRcJj
0wMPVga/UzT8iwcsJtYpd/MnTs6cHacU7NZ/kxG+TmG9lZHmRhqn2CVqFqp5
rv8fR/cdT+X3BwD8XnuWvce197zWFfd8QikzKZSEkkjDlhmhZWSU+ipbkh0S
KjsVGSEhpOxR9sz4Pf3+fL/Oc9bnnOec83Dvc9FHg2yb7sAJxPTOhCCos4fM
RAnNDP7jaD604w4Bt4dwJPXrdVtjiCf957Laz120rO83Ex4yhqYklNcL6nfR
9aIkb+noUfRYZiOxLXQX3VpldKLkGkVVZc8O+tvvok/Pbd7/yPiFmFyri2J1
d5GEijz3/dqfKPM8yttZ30HHE4q+OLCNIPoDNVXCzjvo7VN5tQbrH2gn7m6w
CeygsbaKR3dih5EP76bBEu8O4oFsVwPaIfTxDl/Ay9ZtVMQfoip9dBDhPila
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
1WDChm7QHHWfiRsKuemDs5k4kc/8OPCYCY2uzZm+C5l46JxVcOUZWZfS3Je6
hAlht2Fs4QsmXk8uKz5kwsTeXeorNN4x0R1/SWGyFROchE+pbf1MDNv0RVqu
YmJ8C82k/wvJ23ckVHs1E0u/q15d+5MJX4mN79McmVhXf+6fzggTMq/Xbnu0
nYmSiw0RwjEmDGX1nML3MJHQo9L3fgILU2KvKHWGMFF9IuLD54ks/Coq2nMr
kokfYtF/vjIsaLnf3SeXyMRP29GmA7IshFlv/d2ayURZ4+B3ZXkW8hIO9U4u
YuJJGmeYO4UF2y3rN8RVMXHofnn9HAUWHI7EJPuQPu8xSucWEU9a3+d44i0T
3rV7xYqKLBw/lVzQ9I0J+xu3VlgQx7InrrEgucpatefZEtvJCJLyp7JwKPtE
OY+Yt03rzuLZLChe4zWKiGtt2lsSjFiY1yFJc/v/fgGLNHosWZA5OOFJMnHZ
l4YhSRELweeiNCYrseDYoTbtnSMLZ/+u25dPHPVhUoa/Fwvz/27IySF1fiyr
2557gIWIg65yk1VYGNpm+TDkOAvubZc1n05jYXS+9vDzsywwN9pnyamxYDb+
aWHhJbIu7Gd03UwWwgMnBUrlsJDSYHBZS5OF7xqty8tKWDC9efKiDMkde+rl
k7YqFq4ePDP1zDwWCvLdxvgNLKQ7DJvV6LOwYHN2t2onC+t3/Dcpi/Tl/Fjc
Y/SWBZF/5D8rExacSkZH4z6ycKpil2kkg4UrX6XDbIdYOBPcJD7FZeFI/1R3
m2HSv4Wqq4D0nXfGXyJ2nAWaZJdSxTpS72qCheEkNlK1ar17trEwvWDAX12O
jSKJbRp3drLg+bAzylmRjbdJgEUACweueDyQV2Fj84ItCZuOslApbivRVmXj
enpQqNppFmoo7W1XZrDBj0iV35bCQvyu8++yZrGxUNl3ivF1FuxTnsXQNNiY
y3Feub+UhcO5lRWummzctQ821H/EwmyTqPIVWmwMZKdkmnawsG7yjIxS4hj/
VyfO9LJgpBhtK63NRvITFanFv1nYr2kqp0fMbft+87s0GzyVihJj4l3Frffb
1Nj4uX39vqXET38dm/lwARvqD74ephGXDqr53jBhw+9zna4TcXArOyzYmg13
2eKaEuJb2a+r/NexMWriwXLUYYP25KPqIg82Iuf7uDnOZuPe0eYrRwLY5P9r
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
U7i3r+OL/T8Kjr7Pig43UfgfsCoCrw==
       "]]},
     Annotation[#, "Charting`Private`Tag$27029#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{1234., Automatic},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{0., 67.9582481016032}, {0., 67.27348108910286}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776726892877878*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"37b7a839-def6-4f10-bb41-9dff903e16df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"ArcCurvature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["x", 
         SqrtBox["2"]], "-", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}], ",", 
       RowBox[{
        FractionBox["x", 
         SqrtBox["2"]], "+", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}]}], "}"}], ",", "x"}], "]"}], ",", 
   RowBox[{"x", "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776726969004837*^9, 3.776726979614944*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"2f443e7c-3ef7-4e9a-bbaa-de48882d748c"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Abs", "[", 
   RowBox[{"Sin", "[", "x", "]"}], "]"}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Output",
 CellChangeTimes->{3.7767269802018538`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"a623bdf2-4697-4827-aeeb-098667c52799"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Abs", "[", 
     RowBox[{"Sin", "[", "x", "]"}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "10"}], " ", "\[Pi]"}], ",", 
     RowBox[{"10", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[35]:=",ExpressionUUID->"364ea2f9-f3d5-48af-b1a3-063ce3157f92"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
bT+hfhBTXTqSOi+HpwpXNqe1/4I3BcExa1oOzTbV+KJkBuBs6KV/JYNy6Bka
u9fShKSX8Pla6285PEd3/dTvqmFQ9zFQ7/4lh+kDFvuobUn99mX2Z/3lchh6
z/fYQ7pRsJhK3J3Il8Pk94qWzmfGYIK1g2YnVg51huI6s1omwKD/qz5ltBwO
PrNo+XN3EpIS7njTfZbDkc37/AIMU+CsRc7EGiiH17mFn55WmIYW2vpzB9/L
IadcQFItToNiS0gA91s59GEUCPisPwPrNpLsYu5yeHaiN+Py8Vkwl1s1lnoi
h1Q3OsSbcmahZLM0TP6BHPrKSvL+IulVvirfHpW7cniNJjAz2GMOPP2vHNa6
LYe/qnWXwrvmYOSqwHVdaznMPWzNoydMBD3h2S8nLeQw9XdjLastERKIuYOG
ZnKoW7Gz6B9JBIYCT0EjYzkM0rH4Zf6LCN/zmJ44X5BDDtvXh5LHSPo9N7zB
z1AOLYHt29F1Ev9niwgln5RDq3MD6eskPnfOynhSpyuHhsIEh5oNItBnajdO
askhO+PuZv4kEWLSa4Xo1OSQllLKerKeCJppxk9FFOVwTOQok/d3IrSnDDUe
l5HDqYzW2UFnIjglOwlbScih0fIlp1PyRKBL2njqIUza7y/GeyQm5yA68XXT
Fz45XA1Kyd8KngP1HywiJYfkkHLzHbO+2hy0xUe59nHIIYPSTcuo1llwjJNo
3tgvh0MneVMjrGfh6zfdZyp0cshWwCzKe38G1GIami9TyiF5fjHTJpG0X1+v
ij7YkUXJL1sOwrbTQB11ryVtSRZL10+Oc52cgtthMWISg7Los2w+V/R3HJTe
U7QfLpDFojz/XHbiEDT4+EloZMuiDmeJMbvxENh5c70wTZPFR03mZ5QIgxD+
Rv5ISJwsfpz4kBkTNgBknpYe+4JkUT7asdqxqw8+vZjrkPKTRYEsi4cLTb0g
//yppOE7WYwfefjqQ2MPWD8L7Hz7XBa1jn47Kf+3C2pdyqQoHGTxaaUn+Z2T
7XDr4VkvPltZ1O9b/XrcuQ227/d0aVvK4pxnXXlrVCvI/rfg5WoiizfT32b5
7mmB4DsCPUvHSfjJb814GTaA9O0UGVYdWYzzsZq6+68eftmpv5LTkEX1jIjw
c1/qYMPaSNZJThavW4envGGrAQsLz9fj3LIoQ0tDwW1WAZ3Ed9ERB0n5neQ+
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
PI9x6NywB6QQanunq/YY/u/7r/j/33/9HwXJtV4=
       "]]},
     Annotation[#, "Charting`Private`Tag$28976#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-10) Pi, 10 Pi}, {0., 0.9999998767919744}}, {{-31.41592653589793,
     31.41592653589793}, {0., 0.9999998767919744}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776726982218844*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"2903b062-5054-4394-9fb4-8bc742b6d7fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.776727066295223*^9, {3.7767271056387997`*^9, 3.776727106943074*^9}, {
   3.77672721452757*^9, 3.776727232344068*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"20896559-15af-4349-ad15-2262ffacc385"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.776727232585875*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"01a73b96-4b59-4510-a755-ae7541c97ebe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "@", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["x", 
        SqrtBox["2"]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "x", "]"}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{
       FractionBox["x", 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "x", "]"}], 
        SqrtBox["2"]]}]}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77672724685611*^9, 3.776727250080151*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"74e05fb9-b0e1-47ab-9777-4b6cddcd1a37"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Cos", "[", "x", "]"}], 
       SqrtBox["2"]]}], "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Cos", "[", "x", "]"}], 
       SqrtBox["2"]]}], "]"}], "2"]}]]], "Output",
 CellChangeTimes->{3.776727250302383*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"116fff55-4cef-43e2-9499-1ce0b9c48a43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        FractionBox["1", 
         SqrtBox["2"]], "-", 
        FractionBox[
         RowBox[{"Cos", "[", "x", "]"}], 
         SqrtBox["2"]]}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        FractionBox["1", 
         SqrtBox["2"]], "+", 
        FractionBox[
         RowBox[{"Cos", "[", "x", "]"}], 
         SqrtBox["2"]]}], "]"}], "2"]}]], ",", 
   RowBox[{"x", "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776727260063828*^9, 3.7767272641766768`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"7b4159ea-963c-40cc-94a3-8db82bbcb011"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"3", "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}]], 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{3.776727264655259*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"e3dd09b5-38c6-46f4-8e66-ea32e0329575"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{"3", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}]], 
    SqrtBox["2"]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "10"}], " ", "\[Pi]"}], ",", 
     RowBox[{"10", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[39]:=",ExpressionUUID->"bb502a6e-d1a2-469e-a379-151ba1fe4a27"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
JPFBMr/WxAZUbUI/c10h0ZMYe4M6fRvw5aCMB+SS6LD0gef1WjYgY+/zqDqD
RIp3c/Y2qtrAVFD/xGgKiV5vfTjfpGADRlnf5mYSSBRP+57TLGsDBQsGLI4T
JNK9JKp3d5UNCOa+F/wXRqIxXevOVlEbGKn90j61l0Rp3fv23BO0gcUbrs96
t5PIcv/F2XYefH3YCdMaJxL94G7NesBuAxcehPmcsSZRfvm49qNFCtj1mT73
1iHRhrUCHdQZCngFmwYYyZGI+dHE7zGdAsFwyVVMgEQesimXOiYp8C5NSWLx
KwuxtTVodn7Bn79UqxLuZ6G67aOPuz5SQFBUcIHygIWEsvSY3UMUyP939vjS
JRbq4h3y6Qfcn5Xt0q3HQlE3l2gD9ynAs7I2YI84C6mu00gfukuBxcJbEutn
mSgxPubh21oKCLOvOigPTGTLUlT+WECByc/ui/NOTKTSJfh6NoeCeRGUeQV/
v/ivkKfEL1GgvefQh0FBJhq26Rl2SqZAaOqizrpXDBR+9sT5O4cp0Pf1mYrR
Zgba6hVg3htGgTWcscuvdRnISnPzl8kQCih1rxv3F2Ig7h5l2zW7KfDg4Ozn
1Jd0VCLeS6Q6U2BYfIfLFhc6SvrWVlK+gQJt/jyvx3ToKLS13PmRPQU0OIcD
qEJ0ZLbz5A2GOQXuiiqJP3tNQ3J6gR7CxhTwfFtdzNFEQ+zLbv809SjgeDCc
4zXm4avrqj67VShAO8v/wGUXDd05JsJ9cg0FNnin1EmtpaErG+cbc2QoYHR3
b2W1Og0F/Xot+EKEAsT+G8PbmQRyedDe9kWAAnzu9tVp7wlklHEz6B83Bear
7le2PyPQktEpqsmiNVS9I7fYFeH6zRkc5jZjDcvPU1bXpBDoxfAWmVC6Ndje
f2e79jiB6ispnUnT1iD/73C2cCCB8k6qHy2dtIbHuwZD5XE9P+WyUvHeF2s4
n4WOHttAoL2rF3sGP1rDAaOBRgVLAjn+/X7yzztryJWVi1TXJZDe4351/mFr
OP5vt2km5qF4zoNBlT5rWLfvRss+acy7wMrTdi+tYTqwqb9ClECfzLP1fDut
Ie286tndAgR6xhc3evSxNZDazR8zuAl0azQkJeOBNRS5DXFQOAiUVetpWt1q
Dc+92+SDMP9OxNt+ftpkDS6TI3uEcdtvi2bGx9vW8OMaF7cF5uc6ZXHKXBVe
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
       "]]},
     Annotation[#, "Charting`Private`Tag$31178#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.0000000308020083`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-10) Pi, 10 Pi}, {1.0000000308020083`, 
     1.4142135623725136`}}, {{-31.41592653589793, 31.41592653589793}, {
    1.0000000308020083`, 1.4142135623725136`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7767272671368837`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"e6d3eec8-610d-4d71-960c-f6db0e9cab77"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.776727318992037*^9, 3.77672731991798*^9}, 
   3.776727357408269*^9},ExpressionUUID->"b2f3ffb0-e689-4a48-be6b-\
62ae6bbae535"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["x", 
      SqrtBox["2"]], "-", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]]}], ",", 
    RowBox[{
     FractionBox["x", 
      SqrtBox["2"]], "+", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7767273628885098`*^9, 3.776727371128706*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"a2ae315e-8529-4b51-9987-14340f75eff5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["x", 
      SqrtBox["2"]], "-", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]]}], ",", 
    RowBox[{
     FractionBox["x", 
      SqrtBox["2"]], "+", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.776727373357527*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"fadf6353-254c-4580-8626-af03444a7ae0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ".", 
    RowBox[{"RotationMatrix", "[", 
     FractionBox["\[Pi]", "4"], "]"}]}], ",", 
   RowBox[{"x", "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767273876431303`*^9, 3.776727435961268*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"6c830e99-ac6d-4549-b725-29a523ee8646"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"x", "+", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    SqrtBox["2"]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "x"}], "+", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{3.776727436243277*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"6e1eeab9-d54b-4a1e-854e-2f045bfbdb3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"x", "+", 
       RowBox[{"Sin", "[", "x", "]"}]}], 
      SqrtBox["2"]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "x"}], "+", 
       RowBox[{"Sin", "[", "x", "]"}]}], 
      SqrtBox["2"]]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776727440992443*^9, 3.776727451273472*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"52e57bef-9aec-4eb6-87bb-5c097aef8cbe"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
/cKh/rirrRYrcKH7kDyrXSV+vdY/smG3AlmNN5V2B1ai6sl9e/Y5r4CHoIEk
JFdidDGfuanvCvw8N1qDw5WYIRAW1f5lBcyalZ7HXa/Cj6NXl072rYDD9bUz
VKhGK0vveg2tVdiUn/OWZW8tZk7e8cy/tgoSmcGpW1Vq0TBP6YH43VWYlJB5
uv9uLfLYX/u2+mgVKte0OWNiavHclZMiz3xWYbMnc3Lc/joUNIh4Ple2Coyz
R0JnFOpxQctKuEhxDUa3nXfoyGxAYmudVROsweUn7wUqyhuw8f5o/8DpNUh5
N3eupKMBn1is76XqrMFjzf1H/lAa8MudB0uclmuwdNb25ftTjTh7knvsy5c1
SBdv5VX+3Yi0qLHi77zrIPPmmZnClmaM+mX3en73OthdFGe/vLsZ3Sd3lB39
bx0id3p32Ug3Y8b1X+FZB9fh9kE/auflZlw87JMXfGYddC8wWwt/aMZm1fBP
HQ7r8Ie/50eoTAuaNR+csP29Do4LafcO6rdipFPlhunfdbBKk+h4Y92Kx6o1
XugNrUNhxyafVc9WPDv7quXo7DpQGZozJr+34h2VgOw6FgrEXlUSvExpxT32
ImfdFCiQ7MpEZvzQhnOFF9eogRQ4/fJlmXBvO15+dSbc/T0FuEa11I0W2vHh
xAiZOYoCK+PuX5JZOtC9eyJm81cK/HeyV9hItgOdLKvShosoYH5QuVvVrQNN
b60SDo1TgEKRetct/hu/Rp09PqKyAR6jZyNeOHbi0cLSmL3qGxC5wb5B9e/E
naNmby+f24C7fZKnvOI78abQ+Y20KxvQK7DLJ6uxE2NiGPbpPtiAyatbJl6J
d2GDYnzcvoANsLY50MPa0YUOIFc52rsBepe0FJ6pdCN1T53K8eEN6GRuePnf
tW4sfBZX82piA56SDR61WXTjIKO97N6lDdixPLnXIKYbba4zioiwUUHN5N5f
IlMPHt1eUBwrT4W9q38tntT1YBB3JsNTDyqkOd0oo8r3omtsVvkjbyrEzGho
bVXtRSnP1fi7b6nAV/Ljo6BmLz4g7iYfD6OCCsXA/5ppL8aQ027WJVGB2M0a
vTWqF4WPMBk9bKaCZTrXDh+WPvQq67J1FqCBK0chrbWvD+WvNU5V/EeDzc+v
M6dO9eGVfOUJrv00+HqaheXteh8+WDK3CJOhASxkzunx9qPxJf4kXxINSn1s
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
pyD/H2j9fkM=
       "]]},
     Annotation[#, "Charting`Private`Tag$33175#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-2.2211072582198748`, 2.2211072582198748`}, {-2.02153342889941,
    2.02153342889941}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776727451895957*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"3daf314c-8a18-4738-988c-08ae980da1b0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"x", "+", 
       RowBox[{"Sin", "[", "x", "]"}]}], 
      SqrtBox["2"]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "x"}], "+", 
       RowBox[{"Sin", "[", "x", "]"}]}], 
      SqrtBox["2"]]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"cff050bf-65ce-4d5b-8301-e70175dad443"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "x"}], "}"}], "\[Equal]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"4", "x"}]}], "}"}], ".", 
   RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.776727498466517*^9, 3.776727513592825*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"9ae60874-b663-419b-9d26-99ea288edaab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "x"}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"4", " ", "x", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"4", " ", "x", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
     RowBox[{"x", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.7767275151707363`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"bc822fcd-0dd8-45dc-8599-14453fbb2695"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "x"}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"4", " ", "x", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"4", " ", "x", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"x", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[44]:=",ExpressionUUID->"5077e1e1-2eba-412b-aefe-df5cf18871d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "\[Equal]", 
     FractionBox["3", "17"]}], "&&", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[Equal]", 
     FractionBox["5", "17"]}]}], ")"}], "||", 
  RowBox[{"x", "\[Equal]", "0"}]}]], "Output",
 CellChangeTimes->{3.7767275202668657`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"849f7b7b-e177-4d2c-9b84-3eb4bba6860c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "x"}], "}"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"4", " ", "x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}]}], ",", 
   "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.776727531553582*^9, 3.776727532671687*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"c0dbc031-e8db-4840-81cd-df7f68d1c1d1"],

Cell[BoxData[
 RowBox[{"x", "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.7767275331767187`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"ac6ddf71-e2aa-4c15-ace9-b138bbbe1121"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Equal]", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], ",", 
     RowBox[{"x", "\[Equal]", 
      RowBox[{
       RowBox[{"4", " ", "x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}]}], "}"}], ",", "\[Theta]",
    ",", 
   TemplateBox[{},
    "Reals"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767275500011597`*^9, 3.7767275663539743`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"4cc11ef6-5b69-4f89-8019-0ebfcc528d5b"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.776727566619446*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"d06488b9-bf18-43ac-bfa2-6e89e64c82cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Equal]", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], ",", 
     RowBox[{"x", "\[Equal]", 
      RowBox[{
       RowBox[{"4", " ", "x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}]}], "}"}], ",", "\[Theta]",
    ","}], "]"}]], "Input",
 CellChangeTimes->{{3.7767275701925993`*^9, 3.776727570401638*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"7bf9d4e1-62d1-4f74-b50e-38ecef2018e4"],

Cell[BoxData[
 TemplateBox[{
  "Solve","bdomv",
   "\"Warning: \\!\\(\\*RowBox[{\\\"Null\\\"}]\\) is not a valid domain \
specification. Assuming it is a variable to eliminate.\"",2,47,5,
   25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7767275707400703`*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"9ccc6f5c-b7eb-4f5d-ad20-b202bbfbe241"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.776727570752417*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"1e8b81b2-2fb6-4981-8206-96d0faff9196"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Equal]", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"4", " ", "x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], ",", 
     RowBox[{"x", "\[Equal]", 
      RowBox[{
       RowBox[{"4", " ", "x", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}]}], "}"}], ",", 
   "\[Theta]"}], "]"}]], "Input",
 CellChangeTimes->{3.776727574320825*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"ffc80163-68b5-44ea-8258-c68ab1f806f4"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7767275746582317`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"b5db4a45-762a-4e28-b20d-56367deedfed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "\[Equal]", 
    FractionBox["3", "17"]}], "&&", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[Equal]", 
    FractionBox["5", "17"]}]}], ")"}]], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"e31c55e4-a451-4530-b983-30cebe6c8392"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "\[Equal]", 
   FractionBox["3", "17"]}], "&&", 
  RowBox[{
   RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[Equal]", 
   FractionBox["5", "17"]}]}]], "Output",
 CellChangeTimes->{3.776727585482177*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"e640da5c-3534-4f22-8dad-97c2f6979c0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "\[Equal]", 
     FractionBox["3", "17"]}], "&&", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[Equal]", 
     FractionBox["5", "17"]}]}], ",", 
   RowBox[{"{", "\[Theta]", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[50]:=",ExpressionUUID->"f8385eb9-ba73-40dc-a49f-57e82ee7dd73"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.776727587188562*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"955ad10e-cef4-463b-99fe-e064f9a6f300"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[Equal]", 
  FractionBox["5", "17"]}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"c1a64417-1f73-468e-bcab-a5558de09681"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[Equal]", 
  FractionBox["5", "17"]}]], "Output",
 CellChangeTimes->{3.776727591488662*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"f8c21f19-4903-42ae-84a2-981a193ebf50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[Equal]", 
    FractionBox["5", "17"]}], ",", 
   RowBox[{"{", "\[Theta]", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[52]:=",ExpressionUUID->"91a9be97-8ec2-496d-af9e-04e1209ce347"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Theta]", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "48"}], " ", "\[Pi]"}], "-", 
     RowBox[{"ArcCos", "[", 
      FractionBox["5", "17"], "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.776727592788342*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"49226929-3f63-4273-b44e-c6e07ee9dd2c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.776727623681345*^9},ExpressionUUID->"56dc31f7-8ec0-44d1-990e-\
570988e70816"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ".", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "48"}], " ", "\[Pi]"}], "-", 
      RowBox[{"ArcCos", "[", 
       FractionBox["5", "17"], "]"}]}], "]"}]}], ",", 
   RowBox[{"x", "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{3.7767276260476294`*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"102e68e5-e24d-4154-8aad-2c4fe463ce6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "17"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"5", " ", "x"}], "-", 
      RowBox[{"2", " ", 
       SqrtBox["66"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "17"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SqrtBox["66"], " ", "x"}], "+", 
      RowBox[{"5", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.77672762748302*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"e3f68b11-3740-4162-8134-4c0378c94bc0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.776727724065592*^9},ExpressionUUID->"d9b923c5-cd89-489b-a288-\
16e52b3f90a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"ArcCurvature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["x", 
         SqrtBox["2"]], "-", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}], ",", 
       RowBox[{
        FractionBox["x", 
         SqrtBox["2"]], "+", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}]}], "}"}], ",", "x"}], "]"}], ",", 
   RowBox[{"x", "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776727877713718*^9, 3.77672788993047*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"1b3c0d9f-f97a-4bd8-8e8f-d1f0b12e2875"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Abs", "[", 
   RowBox[{"Sin", "[", "x", "]"}], "]"}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Output",
 CellChangeTimes->{3.7767278904960957`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"5af37d35-f604-4844-9874-3b44a294e578"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Abs", "[", 
     RowBox[{"Sin", "[", "x", "]"}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "10"}], " ", "\[Pi]"}], ",", 
     RowBox[{"10", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[55]:=",ExpressionUUID->"ac065279-d0fc-41e2-9f18-4f70648a4fb2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
bT+hfhBTXTqSOi+HpwpXNqe1/4I3BcExa1oOzTbV+KJkBuBs6KV/JYNy6Bka
u9fShKSX8Pla6285PEd3/dTvqmFQ9zFQ7/4lh+kDFvuobUn99mX2Z/3lchh6
z/fYQ7pRsJhK3J3Il8Pk94qWzmfGYIK1g2YnVg51huI6s1omwKD/qz5ltBwO
PrNo+XN3EpIS7njTfZbDkc37/AIMU+CsRc7EGiiH17mFn55WmIYW2vpzB9/L
IadcQFItToNiS0gA91s59GEUCPisPwPrNpLsYu5yeHaiN+Py8Vkwl1s1lnoi
h1Q3OsSbcmahZLM0TP6BHPrKSvL+IulVvirfHpW7cniNJjAz2GMOPP2vHNa6
LYe/qnWXwrvmYOSqwHVdaznMPWzNoydMBD3h2S8nLeQw9XdjLastERKIuYOG
ZnKoW7Gz6B9JBIYCT0EjYzkM0rH4Zf6LCN/zmJ44X5BDDtvXh5LHSPo9N7zB
z1AOLYHt29F1Ev9niwgln5RDq3MD6eskPnfOynhSpyuHhsIEh5oNItBnajdO
askhO+PuZv4kEWLSa4Xo1OSQllLKerKeCJppxk9FFOVwTOQok/d3IrSnDDUe
l5HDqYzW2UFnIjglOwlbScih0fIlp1PyRKBL2njqIUza7y/GeyQm5yA68XXT
Fz45XA1Kyd8KngP1HywiJYfkkHLzHbO+2hy0xUe59nHIIYPSTcuo1llwjJNo
3tgvh0MneVMjrGfh6zfdZyp0cshWwCzKe38G1GIami9TyiF5fjHTJpG0X1+v
ij7YkUXJL1sOwrbTQB11ryVtSRZL10+Oc52cgtthMWISg7Los2w+V/R3HJTe
U7QfLpDFojz/XHbiEDT4+EloZMuiDmeJMbvxENh5c70wTZPFR03mZ5QIgxD+
Rv5ISJwsfpz4kBkTNgBknpYe+4JkUT7asdqxqw8+vZjrkPKTRYEsi4cLTb0g
//yppOE7WYwfefjqQ2MPWD8L7Hz7XBa1jn47Kf+3C2pdyqQoHGTxaaUn+Z2T
7XDr4VkvPltZ1O9b/XrcuQ227/d0aVvK4pxnXXlrVCvI/rfg5WoiizfT32b5
7mmB4DsCPUvHSfjJb814GTaA9O0UGVYdWYzzsZq6+68eftmpv5LTkEX1jIjw
c1/qYMPaSNZJThavW4envGGrAQsLz9fj3LIoQ0tDwW1WAZ3Ed9ERB0n5neQ+
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
PI9x6NywB6QQanunq/YY/u/7r/j/33/9HwXJtV4=
       "]]},
     Annotation[#, "Charting`Private`Tag$44425#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-10) Pi, 10 Pi}, {0., 0.9999998767919744}}, {{-31.41592653589793,
     31.41592653589793}, {0., 0.9999998767919744}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776727892718976*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"a45d7b4a-df42-4434-8e5f-1aa9b781d8d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"ArcCurvature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}], ",", 
   RowBox[{"x", "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776727900658821*^9, 3.776727902889496*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"ba026f2d-8747-4ace-b749-b9463ebae069"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Abs", "[", 
   RowBox[{"Sin", "[", "x", "]"}], "]"}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Output",
 CellChangeTimes->{3.776727932340365*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"39e454fb-5f6d-4092-a704-40e9f8a79281"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"ArcCurvature", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"g", "[", "x", "]"}], ",", 
        RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"g", "[", "x", "]"}], ",", 
       RowBox[{"f", "[", "x", "]"}]}], "}"}], "\[Element]", 
     TemplateBox[{},
      "Reals"]}]}], "]"}], "\[Equal]", 
  FractionBox[
   RowBox[{"Abs", "[", 
    RowBox[{"Sin", "[", "x", "]"}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]]}]], "Input",
 CellChangeTimes->{{3.7767280199678383`*^9, 3.7767280484350557`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"5230dc16-c8d1-4364-a6c6-6ddcf800d55b"],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["g", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], " ", 
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}]}]}], ")"}], "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["g", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]]], 
  "\[Equal]", 
  FractionBox[
   RowBox[{"Abs", "[", 
    RowBox[{"Sin", "[", "x", "]"}], "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]]}]], "Output",
 CellChangeTimes->{3.7767280490773277`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"f8c21b24-d4cd-4bff-8f44-34529afc809d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    SqrtBox[
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["g", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["f", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}], "-", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["g", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}]}], ")"}], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["g", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]]], 
    "\[Equal]", 
    FractionBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sin", "[", "x", "]"}], "]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}], ",", 
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[58]:=",ExpressionUUID->"0b09a9e7-8c44-4700-8081-9836cad6249a"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","underdet",
   "\"There are more dependent variables than equations, so the system is \
underdetermined.\"",2,58,6,25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776728055101224*^9},
 CellLabel->
  "During evaluation of \
In[58]:=",ExpressionUUID->"3ab25799-94fc-40c5-8f84-a02a8d55c0a7"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    SqrtBox[
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["g", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["f", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}], "-", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["g", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}]}], ")"}], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["g", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]]], 
    "\[Equal]", 
    FractionBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sin", "[", "x", "]"}], "]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}], ",", 
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.776728055114997*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"e70805cb-4a2a-409f-bdc5-2c781a760abe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    SqrtBox[
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["g", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["f", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}], "-", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["g", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}]}], ")"}], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["g", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]]], 
    "\[Equal]", 
    FractionBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sin", "[", "x", "]"}], "]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.776728066322144*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"34bdc929-2123-42bf-8140-5f3e04f89282"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.776731486538466*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"54969d27-2bcb-4e15-a7b4-5da2369074fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.77673152977177*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"b5f799b0-e55d-46dc-b2e7-2d8ae56c6cfd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
Rb9ec9FvAf2X3hHxKA/n3at/E1knF9Bz6SuoKpcMK6dzBCg7FpDLcpfLQg4Z
Zgs3ClT9m0f6+yqH9uK+4lnoOapbOY9kO3aGnsrC6w+Xsq5MmEdttef1vTJx
f2T4+a2cnEeHtjVnhqWT4Tr5pLdo1Rz6Np6SYfWaDOre5+ScUudQ/IGXjSav
yBBcf1jua/AcepWVYcpIxX3Y9bMgR28OcZq6MHEk4++Z5jMXxdJZJOnFL2mA
+/hz+/qxf89nUVNBdTNzHBnGLtotFl+fRWM3thq/j8HvL7hYP1RjFkXHB22k
PSdD2laXyqa8GZT5IuPYmUgyfHeZecf/eAZV05zb+h7hfkydszzpMYMqOf6F
2D0kg5ulm7Xkthl057gaWes+GaKvp+qczZpGO57Sgx6EksFCdeeG9VlT6Oef
X/PJ18iw0QD5nn8whdYNRBm+9CbDCWb5b2WXplBuzJnYR144jzp4alPVptBA
s4eojTsZMs4dkzLPm0TyZ80dAs+TgRG7v35L5CS61/6bTf0cXj/dIoR+ZRJJ
bT+m8NsBf7+HLlzfojGJ5qcOv+azw/mV4k3fUzqBbp+rriFbkOHk74iL2bET
yP8UxJ8xIwOlSe6zZsAE+u19xR0Z4/2I1mG6rT+B7ms715gfJENqeROnVPU4
kltMKmVm4PFuD1Xt/DOGbu5K3Oe8CZ9fcpd33EZjiOf2mG/XejJIHIk5Phc7
hk4kev4+KE0Gb6sTB6VPjSHxoQ9oVpQMk7F2t49+GUW7uYc1sznIoLvt6sXY
26No3eH/shALGcICjv5dd3gU6cefLENkMpxKevka/RhBpRvdXZ7Mk6BAoDX8
XucwYust3JLwlwThiS9N7iYNo7BN1ml6PSS4GnA348N5fP3nTt2mPySIerqk
1jjxD7m2s/p+byLBcY/k0Vi2fyiGonZr3UcS7Cjwa17RHERn+5MZrM9JIGJz
tvYB0yBKStS9VBZJgi+eISO2XwfQpU+1P10ekED5geuldMsBxH4HBJ4FkyCr
0m5WzO8vYm15OqTtRoIVP6kt5t/70JhdY10GgwTQqCKb+bwP7XTvK/PeTQKu
n4TUAcc+9Fx0TkVNnQRe4+/rdpH6kPsfvVNem0hwKHJcn2VbLxKn3lnW5SFB
XCw192piN+IMbU+tSltFwvoTZa88ulFCjoBkyotVlFNqnimytxvJTbLFO9xb
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
       "]]},
     Annotation[#, "Charting`Private`Tag$47236#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-7.455748828483987, 7.455748828483987}, {-6.686386795246962, 
   6.686386795246962}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776731535037342*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"fdc7e8ee-968f-48e4-9f8c-06eac866891e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.776731631870281*^9, 3.776731634248167*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"a18803c9-c3ad-494f-bbd0-04202f60b8e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], "-", 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.77673163458764*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"5d6da190-ceec-4d5a-8a58-9cdb173b6119"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Cos", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Cos", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.776731638312224*^9, 3.776731640015909*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"4ddafeeb-c85f-4f45-8e1c-af9e92f2545c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.776731640271146*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"e8e4a363-f9c0-44f1-b73c-cc2cc2c3ba1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], ",", "x", ",", 
   RowBox[{"GeneratedParameters", "\[Rule]", "C"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776731737167219*^9, 3.7767317454477663`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"3d9d5191-038c-40e9-a97a-a44c28615f3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1"},
     "C"], "-", 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "+", 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.77673174591296*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"b7f14ba4-e515-462e-98d8-e761b07156f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"Sin", "[", "x", "]"}], 
        SqrtBox["2"]], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}]}], "}"}], ",", "x", ",", 
     RowBox[{"GeneratedParameters", "\[Rule]", "C"}]}], "]"}], ",", "x", ",", 
   
   RowBox[{"GeneratedParameters", "\[Rule]", "C"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767317739593687`*^9, 3.776731777975937*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"e9940d46-18d8-4f55-b898-b2802508f6a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", 
     TemplateBox[{"1"},
      "C"]}], "+", 
    TemplateBox[{"2"},
     "C"], "-", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    RowBox[{"x", " ", 
     TemplateBox[{"1"},
      "C"]}], "+", 
    TemplateBox[{"2"},
     "C"], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.776731778384632*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"c90077c5-30de-4c5a-904f-fc30b7736c90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.776731808111335*^9, 3.776731810288107*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"5109ee4a-27a7-4eaf-94db-71b07e4b662e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], "-", 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.776731810651373*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"346341f3-04b0-4833-a89e-96c4964a0936"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Cos", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Cos", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], ",", "x", ",", 
   RowBox[{"GeneratedParameters", "\[Rule]", "C"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776731962615337*^9, 3.776731972767858*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"b426068b-ba4f-4774-b9f8-4c0537d9ab4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1"},
     "C"], "+", 
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["x", "2"], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "x", "]"}], "2"]}], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], "+", 
    FractionBox[
     RowBox[{"x", "+", 
      RowBox[{"Sin", "[", "x", "]"}]}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.776731973663813*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"d3850c8a-6912-4eeb-908d-e44307bba4cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     TemplateBox[{"2"},
      "C"], "-", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]]}], ",", 
    RowBox[{
     RowBox[{"x", " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     TemplateBox[{"2"},
      "C"], "+", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]]}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["x", "2"], "-", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], "2"]}], ")"}]}]}], ",", 
    RowBox[{
     TemplateBox[{"1"},
      "C"], "+", 
     FractionBox[
      RowBox[{"x", "+", 
       RowBox[{"Sin", "[", "x", "]"}]}], 
      SqrtBox["2"]]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.776731983841511*^9, 3.776731988631309*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"8b9bbab7-19e1-498e-91e4-5d60bcd0527c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     TemplateBox[{"2"},
      "C"], "-", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]]}], ",", 
    RowBox[{
     RowBox[{"x", " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     TemplateBox[{"2"},
      "C"], "+", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]]}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["x", "2"], "-", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], "2"]}], ")"}]}]}], ",", 
    RowBox[{
     TemplateBox[{"1"},
      "C"], "+", 
     FractionBox[
      RowBox[{"x", "+", 
       RowBox[{"Sin", "[", "x", "]"}]}], 
      SqrtBox["2"]]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.776731989146398*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"88da9ee4-6ba1-4781-9e70-864c7b37458e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", " ", 
        TemplateBox[{"1"},
         "C"]}], "+", 
       TemplateBox[{"2"},
        "C"], "-", 
       FractionBox[
        RowBox[{"Sin", "[", "x", "]"}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{
       RowBox[{"x", " ", 
        TemplateBox[{"1"},
         "C"]}], "+", 
       TemplateBox[{"2"},
        "C"], "+", 
       FractionBox[
        RowBox[{"Sin", "[", "x", "]"}], 
        SqrtBox["2"]]}]}], "}"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["x", "2"], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "x", "]"}], "2"]}], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"1"},
        "C"], "+", 
       FractionBox[
        RowBox[{"x", "+", 
         RowBox[{"Sin", "[", "x", "]"}]}], 
        SqrtBox["2"]]}]}], "}"}]}], ",", 
   RowBox[{"{", " ", 
    RowBox[{
     TemplateBox[{"1"},
      "C"], ",", " ", 
     TemplateBox[{"2"},
      "C"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776731994087572*^9, 3.776732002049168*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"62ed8bc2-2ca1-4b04-843e-bbd5c6984363"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   68,7,25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7767320023850193`*^9},
 CellLabel->
  "During evaluation of \
In[68]:=",ExpressionUUID->"b3589f49-adfb-4fb7-84aa-52fdd487c369"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"2"},
     "C"], "\[Rule]", 
    RowBox[{
     FractionBox["x", 
      SqrtBox["2"]], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
      TemplateBox[{"1"},
       "C"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7767320023994637`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"f05f354e-1237-4cf0-b148-1a580991ec01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", 
       TemplateBox[{"1"},
        "C"]}], "+", 
      TemplateBox[{"2"},
       "C"], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"x", " ", 
       TemplateBox[{"1"},
        "C"]}], "+", 
      TemplateBox[{"2"},
       "C"], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["x", "2"], "-", 
         FractionBox[
          RowBox[{"Sin", "[", "x", "]"}], "2"]}], ")"}]}]}], ",", 
     RowBox[{
      TemplateBox[{"1"},
       "C"], "+", 
      FractionBox[
       RowBox[{"x", "+", 
        RowBox[{"Sin", "[", "x", "]"}]}], 
       SqrtBox["2"]]}]}], "}"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"2"},
     "C"], "\[Rule]", 
    RowBox[{
     FractionBox["x", 
      SqrtBox["2"]], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
      TemplateBox[{"1"},
       "C"]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.776732027087328*^9, 3.776732033545987*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"70ed6d41-e5bb-4d07-b801-ece07f7d358f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["x", 
      SqrtBox["2"]], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{"x", " ", 
      TemplateBox[{"1"},
       "C"]}], "-", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]]}], ",", 
    RowBox[{
     FractionBox["x", 
      SqrtBox["2"]], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{"x", " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SqrtBox["2"]]}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["x", "2"], "-", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], "2"]}], ")"}]}]}], ",", 
    RowBox[{
     TemplateBox[{"1"},
      "C"], "+", 
     FractionBox[
      RowBox[{"x", "+", 
       RowBox[{"Sin", "[", "x", "]"}]}], 
      SqrtBox["2"]]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.776732034219328*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"a55f9ba7-5d44-4375-b446-eef7f76f01cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
       TemplateBox[{"1"},
        "C"]}], "+", 
      RowBox[{"x", " ", 
       TemplateBox[{"1"},
        "C"]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
       TemplateBox[{"1"},
        "C"]}], "+", 
      RowBox[{"x", " ", 
       TemplateBox[{"1"},
        "C"]}], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["x", "2"], "-", 
         FractionBox[
          RowBox[{"Sin", "[", "x", "]"}], "2"]}], ")"}]}]}], ",", 
     RowBox[{
      TemplateBox[{"1"},
       "C"], "+", 
      FractionBox[
       RowBox[{"x", "+", 
        RowBox[{"Sin", "[", "x", "]"}]}], 
       SqrtBox["2"]]}]}], "}"}]}], "/.", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"f", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.776732042383244*^9, 3.776732043679641*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"914d953b-ecf7-4387-881a-aaeeab4039b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       TemplateBox[{"1"},
        "C"]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"f", "[", "x", "]"}]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{"f", "[", "x", "]"}], 
      SqrtBox["2"]], "+", 
     RowBox[{
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"f", "[", "x", "]"}]}], "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"f", "[", "x", "]"}], "]"}], 
      SqrtBox["2"]]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       TemplateBox[{"1"},
        "C"]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"f", "[", "x", "]"}]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{"f", "[", "x", "]"}], 
      SqrtBox["2"]], "+", 
     RowBox[{
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"f", "[", "x", "]"}]}], "+", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"f", "[", "x", "]"}], "]"}], 
      SqrtBox["2"]]}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"f", "[", "x", "]"}], "2"], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"f", "[", "x", "]"}], "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     TemplateBox[{"1"},
      "C"], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"f", "[", "x", "]"}], "]"}]}], 
      SqrtBox["2"]]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.776732043995884*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"caa7403f-74aa-4b29-9ee1-3eefb5fd24d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        TemplateBox[{"1"},
         "C"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"f", "[", "x", "]"}]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"f", "[", "x", "]"}], 
       SqrtBox["2"]], "+", 
      RowBox[{
       TemplateBox[{"1"},
        "C"], " ", 
       RowBox[{"f", "[", "x", "]"}]}], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"f", "[", "x", "]"}], "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        TemplateBox[{"1"},
         "C"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"f", "[", "x", "]"}]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"f", "[", "x", "]"}], 
       SqrtBox["2"]], "+", 
      RowBox[{
       TemplateBox[{"1"},
        "C"], " ", 
       RowBox[{"f", "[", "x", "]"}]}], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"f", "[", "x", "]"}], "]"}], 
       SqrtBox["2"]]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"f", "[", "x", "]"}], "2"], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"f", "[", "x", "]"}], "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      TemplateBox[{"1"},
       "C"], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"f", "[", "x", "]"}], "]"}]}], 
       SqrtBox["2"]]}]}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[71]:=",ExpressionUUID->"65313147-ac97-47f0-b6ff-31e5c30cad7b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7767320486179533`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"2993f98d-d45c-47c3-afd7-0303e795a0bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         TemplateBox[{"1"},
          "C"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"f", "[", "x", "]"}]}], ")"}]}], "+", 
       FractionBox[
        RowBox[{"f", "[", "x", "]"}], 
        SqrtBox["2"]], "+", 
       RowBox[{
        TemplateBox[{"1"},
         "C"], " ", 
        RowBox[{"f", "[", "x", "]"}]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"f", "[", "x", "]"}], "]"}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         TemplateBox[{"1"},
          "C"]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"f", "[", "x", "]"}]}], ")"}]}], "+", 
       FractionBox[
        RowBox[{"f", "[", "x", "]"}], 
        SqrtBox["2"]], "+", 
       RowBox[{
        TemplateBox[{"1"},
         "C"], " ", 
        RowBox[{"f", "[", "x", "]"}]}], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"f", "[", "x", "]"}], "]"}], 
        SqrtBox["2"]]}]}], "}"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"1"},
        "C"], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"f", "[", "x", "]"}], "2"], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"f", "[", "x", "]"}], "]"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"1"},
        "C"], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"f", "[", "x", "]"}], "]"}]}], 
        SqrtBox["2"]]}]}], "}"}]}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776732060639372*^9, 3.7767320628820333`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"864250fe-9f2e-4c26-b763-a48773a545a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.776732063184754*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"a2ced99c-df1a-483d-a39c-e7403bd592ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ArcCurvature", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}], "\[Equal]", 
    
    FractionBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sin", "[", "x", "]"}], "]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{"x", "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776732094135035*^9, 3.7767321087523527`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"bf69379a-46cc-4c8d-aee4-fb06acdc53c9"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]], 
  "\[Equal]", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.776732109932222*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"83f0c646-be7f-4fec-b722-5c070fb1dae4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]], 
    "\[Equal]", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[74]:=",ExpressionUUID->"8d4f725d-b414-4d01-ad8b-c738cb412fa6"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.776732121684128*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"9be2ba1b-753c-408d-9b73-92621e3492a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpandAll", "@", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], 
    "3"]]}]], "Input",
 CellChangeTimes->{{3.7767321257033854`*^9, 3.776732137479969*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"0659ea46-6c92-4404-9025-ead23dfe8140"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "2"], 
   RowBox[{"1", "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "2"]}], 
   RowBox[{"1", "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "2"]}], 
   RowBox[{"1", "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "2"]}], 
   RowBox[{"1", "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "6"]}]]}]], "Output",
 CellChangeTimes->{3.77673213768073*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"d5aeaa1c-e673-4824-a0d7-9d3a301ad827"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", "%75", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[76]:=",ExpressionUUID->"c183250c-f4b1-46e2-81d4-60c37930ab7e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"126", " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
   RowBox[{"111", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
   RowBox[{"18", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "x"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"6", " ", "x"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "2"]}]}], 
  RowBox[{"32", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], 
    "3"]}]]], "Output",
 CellChangeTimes->{3.776732145283955*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"917d6a78-0bb6-4829-b4d5-d40309a04fb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], 
      RowBox[{"1", "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "2"]}], 
      RowBox[{"1", "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "2"]}], 
      RowBox[{"1", "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "2"]}], 
      RowBox[{"1", "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "6"]}]]}], "\[Equal]", 
    FractionBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sin", "[", "x", "]"}], "]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"f", "'"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"f", "''"}], "[", "x", "]"}]}], "}"}], "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776732164163*^9, 3.77673217913124*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"0aca81e4-d1e5-43ae-92a3-365c6daba095"],

Cell[BoxData[
 RowBox[{
  RowBox[{"512", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
  "\[Equal]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["f", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "4"]}]}]], "Output",
 CellChangeTimes->{3.776732183058976*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"60669840-7252-4b65-963d-95bccb5d48ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"512", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
    "\[Equal]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[78]:=",ExpressionUUID->"0021c810-8987-4ccd-9159-19b94de979fb"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7767322316934566`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"6b2a41d7-1f42-46d8-bd1e-b10abf835ff2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"512", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
    "\[Equal]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776732234881032*^9, 3.776732241592692*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"754f0090-2151-4659-b41b-68c5faa08925"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndnco",
   "\"The number of constraints (\\!\\(\\*RowBox[{\\\"0\\\"}]\\)) (initial \
conditions) is not equal to the total differential order of the system plus \
the number of discrete variables (\\!\\(\\*RowBox[{\\\"2\\\"}]\\)).\"",2,79,8,
   25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776732241918624*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"e35a2096-63b7-47e6-8e77-2fb5034c7b47"],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"512", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
    "\[Equal]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.776732241936448*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"332914f7-293d-4d36-bd0f-f7279e4fad98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"512", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}],
       "\[Equal]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", 
     RowBox[{
      RowBox[{"f", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767322916485443`*^9, 3.7767322980248337`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"32b0a802-ef04-4db0-9e25-4ed977f9cd2a"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndnco",
   "\"The number of constraints (\\!\\(\\*RowBox[{\\\"1\\\"}]\\)) (initial \
conditions) is not equal to the total differential order of the system plus \
the number of discrete variables (\\!\\(\\*RowBox[{\\\"2\\\"}]\\)).\"",2,80,9,
   25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776732298514851*^9},
 CellLabel->
  "During evaluation of \
In[80]:=",ExpressionUUID->"cb3c71e1-6d2e-4dac-8a71-e06d626bd49b"],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"512", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}],
       "\[Equal]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", 
     RowBox[{
      RowBox[{"f", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.776732298529642*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"c27d73e3-e662-4806-9440-6b4a8e138928"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["I", "I"]], "Input",
 CellChangeTimes->{{3.7767324850027313`*^9, 3.776732486623129*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"411e286f-1a13-4657-b7d1-fc9d6fcfac3e"],

Cell[BoxData[
 SuperscriptBox["\[ImaginaryI]", "\[ImaginaryI]"]], "Output",
 CellChangeTimes->{3.776732487204329*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"b6ce65ac-55b7-44aa-bcc1-c7c446cf0156"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  SuperscriptBox["\[ImaginaryI]", "\[ImaginaryI]"], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[82]:=",ExpressionUUID->"cca1bd10-c6b2-4d3c-a579-efedc35de36c"],

Cell[BoxData[
 RowBox[{"0.20787957635076193`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.776732489183201*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"20a13207-5134-4c56-b26f-b85c6f6e3c08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"512", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}],
       "\[Equal]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", 
     RowBox[{
      RowBox[{"f", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", "f", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776732980873809*^9, 3.776732982512789*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"3f47857f-9be4-4533-a9cf-96c7620ec13d"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndnco",
   "\"The number of constraints (\\!\\(\\*RowBox[{\\\"1\\\"}]\\)) (initial \
conditions) is not equal to the total differential order of the system plus \
the number of discrete variables (\\!\\(\\*RowBox[{\\\"2\\\"}]\\)).\"",2,83,
   10,25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7767329843604527`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"d9b95941-dee7-4c61-93ed-cb32a81c21ea"],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"512", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}],
       "\[Equal]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", 
     RowBox[{
      RowBox[{"f", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", "f", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.776732984374365*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"44422d08-88c7-4fc1-bd29-0d638996fb24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"512", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
    "\[Equal]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", "f", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776732994841007*^9, 3.776732996640679*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"435166ce-2b25-4ba0-a06d-41777fe6e4fd"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndnco",
   "\"The number of constraints (\\!\\(\\*RowBox[{\\\"0\\\"}]\\)) (initial \
conditions) is not equal to the total differential order of the system plus \
the number of discrete variables (\\!\\(\\*RowBox[{\\\"2\\\"}]\\)).\"",2,84,
   11,25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77673299731021*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"cb604ef7-8d1f-4f3b-9ec5-73f21444626b"],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"512", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
    "\[Equal]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", "f", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.776732997324108*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"e291007c-009e-4ce7-9baf-229426b0d190"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"512", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
     "\[Equal]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}]}], "}"}], ",", "f",
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776733002665*^9, 3.776733007145236*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"91d88a09-8544-4b31-9245-00ee021a8330"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndnco",
   "\"The number of constraints (\\!\\(\\*RowBox[{\\\"0\\\"}]\\)) (initial \
conditions) is not equal to the total differential order of the system plus \
the number of discrete variables (\\!\\(\\*RowBox[{\\\"2\\\"}]\\)).\"",2,85,
   12,25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776733007423852*^9},
 CellLabel->
  "During evaluation of \
In[85]:=",ExpressionUUID->"32b7c6fb-64fb-47f6-aca7-deebcefb938f"],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"512", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
     "\[Equal]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}]}], "}"}], ",", "f",
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.776733007439734*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"d9415a0b-951d-4260-94f0-85502e79f676"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"512", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}],
       "\[Equal]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", 
     RowBox[{
      RowBox[{"f", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"2", "\[Pi]"}], "]"}], "\[Equal]", "0"}]}], "}"}], ",", "f", 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776733045600554*^9, 3.776733048705173*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"7b5c4452-4f92-4658-87a0-84b8b005137b"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve","ndsz",
   "\"At \\!\\(\\*RowBox[{\\\"x\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"1.9253812188605346`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"",2,86,13,25127541967217847436,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776733049597786*^9},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"7f924e03-3163-4dd1-87d3-f9eb9ba67a44"],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"512", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}],
       "\[Equal]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "4"]}]}], ",", 
     RowBox[{
      RowBox[{"f", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"2", " ", "\[Pi]"}], "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   "f", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.77673304961103*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"9f186e70-63ac-4b9f-bc38-0090deadb6b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"512", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
   "\[Equal]", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "4"]}]}], "/.", 
  RowBox[{"f", "\[Rule]", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.776733073839692*^9, 3.776733076832386*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"d4d0a326-97f0-4450-a2da-8ec35740e2a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"512", " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Sin", "[", "x", "]"}], "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
  "\[Equal]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "4"]}]}]], "Output",
 CellChangeTimes->{3.776733080467787*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"b12cde53-fd21-4bc3-8fa3-35093bec15ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", "=", "Sin"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"512", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "6"]}], 
    "\[Equal]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "4"]}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.776733040535294*^9, {3.776733087385787*^9, 3.776733101391954*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"c6d85dc0-10ef-4442-89e6-18927886f602"],

Cell[BoxData[
 RowBox[{
  RowBox[{"512", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "6"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "4"]}]}]], "Output",
 CellChangeTimes->{3.776733101692729*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"b4ce4d2f-0d4d-4259-9c90-5498503407bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"512", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "6"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"]}], "\[Equal]", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "4"]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[89]:=",ExpressionUUID->"dfaed329-477d-4f6e-8f8c-dd00a6ace958"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"-", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"512", "-", 
              RowBox[{"19683", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"59049", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"78732", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"61236", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"30618", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"10206", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"2268", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"324", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"27", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
              RowBox[{"1536", " ", "#1"}], "+", 
              RowBox[{"1536", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"512", " ", 
               SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], 
         ")"}]}]}], ")"}]}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"512", "-", 
             RowBox[{"19683", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"59049", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "x"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"78732", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"61236", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"30618", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"10206", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"2268", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"324", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"27", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
             RowBox[{"1536", " ", "#1"}], "+", 
             RowBox[{"1536", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"512", " ", 
              SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], 
        ")"}]}]}], ")"}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"-", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"512", "-", 
              RowBox[{"19683", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"59049", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"78732", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"61236", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"30618", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"10206", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"2268", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"324", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"27", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
              RowBox[{"1536", " ", "#1"}], "+", 
              RowBox[{"1536", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"512", " ", 
               SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], 
         ")"}]}]}], ")"}]}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"512", "-", 
             RowBox[{"19683", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"59049", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "x"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"78732", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"61236", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"30618", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"10206", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"2268", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"324", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"27", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
             RowBox[{"1536", " ", "#1"}], "+", 
             RowBox[{"1536", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"512", " ", 
              SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], 
        ")"}]}]}], ")"}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"-", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"512", "-", 
              RowBox[{"19683", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"59049", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"78732", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"61236", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"30618", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"10206", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"2268", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"324", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"27", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
              RowBox[{"1536", " ", "#1"}], "+", 
              RowBox[{"1536", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"512", " ", 
               SuperscriptBox["#1", "3"]}]}], "&"}], ",", "2"}], "]"}]}], 
         ")"}]}]}], ")"}]}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"512", "-", 
             RowBox[{"19683", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"59049", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "x"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"78732", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"61236", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"30618", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"10206", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"2268", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"324", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"27", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
             RowBox[{"1536", " ", "#1"}], "+", 
             RowBox[{"1536", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"512", " ", 
              SuperscriptBox["#1", "3"]}]}], "&"}], ",", "2"}], "]"}]}], 
        ")"}]}]}], ")"}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"-", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"512", "-", 
              RowBox[{"19683", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"59049", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"78732", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"61236", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"30618", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"10206", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"2268", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"324", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"27", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
              RowBox[{"1536", " ", "#1"}], "+", 
              RowBox[{"1536", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"512", " ", 
               SuperscriptBox["#1", "3"]}]}], "&"}], ",", "2"}], "]"}]}], 
         ")"}]}]}], ")"}]}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"512", "-", 
             RowBox[{"19683", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"59049", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "x"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"78732", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"61236", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"30618", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"10206", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"2268", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"324", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"27", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
             RowBox[{"1536", " ", "#1"}], "+", 
             RowBox[{"1536", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"512", " ", 
              SuperscriptBox["#1", "3"]}]}], "&"}], ",", "2"}], "]"}]}], 
        ")"}]}]}], ")"}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"-", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"512", "-", 
              RowBox[{"19683", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"59049", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"78732", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"61236", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"30618", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"10206", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"2268", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"324", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"27", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
              RowBox[{"1536", " ", "#1"}], "+", 
              RowBox[{"1536", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"512", " ", 
               SuperscriptBox["#1", "3"]}]}], "&"}], ",", "3"}], "]"}]}], 
         ")"}]}]}], ")"}]}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"512", "-", 
             RowBox[{"19683", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"59049", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "x"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"78732", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"61236", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"30618", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"10206", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"2268", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"324", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"27", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
             RowBox[{"1536", " ", "#1"}], "+", 
             RowBox[{"1536", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"512", " ", 
              SuperscriptBox["#1", "3"]}]}], "&"}], ",", "3"}], "]"}]}], 
        ")"}]}]}], ")"}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"-", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"512", "-", 
              RowBox[{"19683", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"59049", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"78732", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"61236", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"30618", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"10206", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"2268", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"324", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{"27", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
              RowBox[{"1536", " ", "#1"}], "+", 
              RowBox[{"1536", " ", 
               SuperscriptBox["#1", "2"]}], "+", 
              RowBox[{"512", " ", 
               SuperscriptBox["#1", "3"]}]}], "&"}], ",", "3"}], "]"}]}], 
         ")"}]}]}], ")"}]}]}]}], "||", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Root", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"512", "-", 
             RowBox[{"19683", " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"59049", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "x"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"78732", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"61236", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "3"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"30618", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"10206", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "5"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"2268", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "6"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"324", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "7"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{"27", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "8"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "x"}], "]"}], "9"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "x", "]"}], "2"]}], "+", 
             RowBox[{"1536", " ", "#1"}], "+", 
             RowBox[{"1536", " ", 
              SuperscriptBox["#1", "2"]}], "+", 
             RowBox[{"512", " ", 
              SuperscriptBox["#1", "3"]}]}], "&"}], ",", "3"}], "]"}]}], 
        ")"}]}]}], ")"}]}]}], "||", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", "0"}]}]], "Output",
 CellChangeTimes->{3.776733103983567*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"616b1b65-1cd6-4c1f-a499-bfca6bc258c8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.776733071600367*^9},ExpressionUUID->"2ee9fa75-a09c-4a28-86ae-\
e4c7441f0ac0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"512", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "2"]}], "\[Equal]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "9"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "4"]}]}], ",", 
   RowBox[{"x", "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776733113671648*^9, 3.776733118847994*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"4f894d3b-3e2d-489f-b7bd-7748ef170d70"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], ")"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "3"]}], "\[Equal]", 
  RowBox[{"8", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.776733119828343*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"92fbc840-d253-45d3-a67c-05f37d66b881"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ArcCurvature", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"g", "[", "x", "]"}], ",", 
        RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}], "\[Equal]", 
    
    FractionBox[
     RowBox[{"Abs", "[", 
      RowBox[{"Sin", "[", "x", "]"}], "]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{"g", "[", "x", "]"}], ",", "x"}], "}"}], "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776733140824923*^9, 3.776733150497737*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"72922d50-00c3-4364-a9e0-da3f9e1c33c4"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["g", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], " ", 
        RowBox[{
         SuperscriptBox["f", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], " ", 
        RowBox[{
         SuperscriptBox["g", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}]}]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]], 
  "\[Equal]", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.7767331534875927`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"f45afaeb-2126-4130-9092-d8f884c60912"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["g", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["f", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}], "-", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["g", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]], 
    "\[Equal]", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}], ",", 
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[92]:=",ExpressionUUID->"073d80de-deb6-4bd6-82f3-f04bd915376e"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","underdet",
   "\"There are more dependent variables than equations, so the system is \
underdetermined.\"",2,92,14,25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776733155733604*^9},
 CellLabel->
  "During evaluation of \
In[92]:=",ExpressionUUID->"ae871ad8-76d2-46f4-b0f3-dda808242ff4"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["g", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["f", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}], "-", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["g", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]], 
    "\[Equal]", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}], ",", 
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"g", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7767331557476873`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"8919e909-4e99-4d3f-a143-523c17590eaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], " ", 
         RowBox[{
          SuperscriptBox["f", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "x", "]"}]}], "-", 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], " ", 
         RowBox[{
          SuperscriptBox["g", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "x", "]"}]}]}], ")"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["g", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]], 
   "\[Equal]", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.776733191639873*^9, 3.776733206065633*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"8868afa2-5efa-47bf-8edb-47c3f0186980"],

Cell["\<\
\\frac{\\left(\\cos ^2(x)+1\\right)^3 \\left(f''(x) g'(x)-f'(x) \
g''(x)\\right)^2}{\\left(f'(x)^2+g'(x)^2\\right)^3}=\\sin ^2(x)\
\>", "Output",
 CellChangeTimes->{3.7767332063799686`*^9},
 CellLabel->
  "Out[93]//TeXForm=",ExpressionUUID->"9f709d34-c02f-4b50-bcd1-71b8ec7fe4c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "=", "Identity"}], ",", 
     RowBox[{"f", "=", "Sin"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["g", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["f", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}], "-", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], " ", 
          RowBox[{
           SuperscriptBox["g", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]], 
    "\[Equal]", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.776733267872178*^9, 3.776733286418009*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"c4ab8672-7892-498f-8673-7a891764c25a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.776733286854678*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"671f5632-2349-4860-be1b-ec86406c6758"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpandAll", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "x", "]"}], "2"]}], ")"}], "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], " ", 
         RowBox[{
          SuperscriptBox["f", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "x", "]"}]}], "-", 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], " ", 
         RowBox[{
          SuperscriptBox["g", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "x", "]"}]}]}], ")"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["g", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "2"]}], ")"}], "3"]], 
   "\[Equal]", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.77673330248838*^9, 3.776733308194024*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"ce8748d6-7d96-42a5-b225-a87880f0ec45"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]]}], "\[Equal]", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.776733309723989*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"6be83af7-75bc-45cf-9e34-b26dbfd650cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]]}], "\[Equal]", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "2"]}]], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"22683a4d-e933-4839-8f9a-45fad8160054"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"6", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", 
     RowBox[{
      SuperscriptBox["g", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["g", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "4"]}], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "6"]}]]}], "\[Equal]", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.776733383802042*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"ffa5282f-aecd-446d-821e-6b37852cea6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ".", 
  RowBox[{"RotationMatrix", "[", 
   RowBox[{
    RowBox[{"2", "\[Pi]"}], "-", 
    FractionBox["\[Pi]", "4"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.776733395890703*^9, 3.77673340860835*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"20319974-3d2a-4772-bb9c-abdc80e697d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["x", 
     SqrtBox["2"]], "-", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox["x", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7767334088650923`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"765e0f1a-87d5-4f3e-b639-805c9073966f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Div", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.776733422208747*^9, 3.7767334238809137`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"446a7d8a-4d48-4c54-b45b-9d84a780354e"],

Cell[BoxData[
 TemplateBox[{RowBox[{"{", 
     RowBox[{
       RowBox[{
         FractionBox["x", 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{"Sin", "[", "x", "]"}], 
          SqrtBox["2"]]}], ",", 
       RowBox[{
         FractionBox["x", 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{"Sin", "[", "x", "]"}], 
          SqrtBox["2"]]}]}], "}"}],"x"},
  "Div"]], "Output",
 CellChangeTimes->{3.776733424122325*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"fd67bb71-e64f-43fb-bce0-aca17069d221"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Div", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776733428009068*^9, 3.776733428993127*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"baea4268-f04c-47a7-8ce9-fb25e95ba6a5"],

Cell[BoxData[
 TemplateBox[{
  "Div","ndimv",
   "\"There is no \\!\\(\\*RowBox[{\\\"1\\\"}]\\)-dimensional divergence for \
the \\!\\(\\*RowBox[{\\\"2\\\"}]\\)-dimensional vector \\!\\(\\*RowBox[{\\\"{\
\\\", RowBox[{RowBox[{FractionBox[\\\"x\\\", SqrtBox[\\\"2\\\"]], \\\"-\\\", \
FractionBox[RowBox[{\\\"Sin\\\", \\\"[\\\", \\\"x\\\", \\\"]\\\"}], \
SqrtBox[\\\"2\\\"]]}], \\\",\\\", RowBox[{FractionBox[\\\"x\\\", \
SqrtBox[\\\"2\\\"]], \\\"+\\\", FractionBox[RowBox[{\\\"Sin\\\", \\\"[\\\", \
\\\"x\\\", \\\"]\\\"}], SqrtBox[\\\"2\\\"]]}]}], \\\"}\\\"}]\\).\"",2,99,15,
   25127541967217847436,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776733429223703*^9},
 CellLabel->
  "During evaluation of \
In[99]:=",ExpressionUUID->"a0a43d58-43dc-40c6-873e-20a2e6b68304"],

Cell[BoxData[
 TemplateBox[{RowBox[{"{", 
     RowBox[{
       RowBox[{
         FractionBox["x", 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{"Sin", "[", "x", "]"}], 
          SqrtBox["2"]]}], ",", 
       RowBox[{
         FractionBox["x", 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{"Sin", "[", "x", "]"}], 
          SqrtBox["2"]]}]}], "}"}],RowBox[{"{", "x", "}"}]},
  "Div"]], "Output",
 CellChangeTimes->{3.776733429263392*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"40c445fd-2916-4425-abd0-0f8f5660cb84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.776733433736619*^9, 3.7767334354249487`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"ee7a1abb-ae83-48ad-b1ef-52a4a2f95d75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], "-", 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.776733435731176*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"b5c8906b-efe7-446c-ad18-c2cb8bf59bcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["x", 
         SqrtBox["2"]], "-", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}], ",", 
       RowBox[{
        FractionBox["x", 
         SqrtBox["2"]], "+", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Sin", "[", "x", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Pi]"}], ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776733469284246*^9, 3.776733488713599*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"b6459999-7380-4ca1-8c88-d324ebdd737d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw02nk4Fd/jB/A79177dq+SdhIlJJSyn1OpJGskfQjZKkVCUamUNUWSUrZK
IlK2ZM05FSqEbFlabEm27PvyO77P8/trntczc2fmnJnzfo/nsc72zEEHOo1G
+8Gk0Ra3nbY/VvqWsPH/b50vnvzf9ozK5QMDiI3fiGmJLlrNp+7KkXw2lux4
Krjo1uSonOLXbHz8v46568RZYoGTW9LYeNX6Pe2LXqJtrB2dzMZnf7PzFv3V
JT2WM4GNv5mFX1301R4LLrc4Ng7XENq66MYhXr8fD9jYxeVr9TVi4Zcey/bf
ZWOLpnVmi96xxejd6xA2Xn59P/YhDnM3DRQPIucNvMO/6N7/VE7dus7Gnzfs
VrlKzJWceWbSm41n85PgFeIe6mKkvScbv3vPvf4yseof7d/VZ9nYrS3t+yXi
mOzPFpqn2ViovcvpIrFIfNFcsiMb/8qbKPMiPpLT9GXZMTYWvSk3fZ5Yuba6
0teCjS8nVY15EP9+eoQxdIhc965sgdvi/D3b5GJlxMb+nDf3uRJziI2zK3TZ
GAyrPHAmPibuMaS6h40f+PikOBGvvmou9Byw8evlLy8dJ15ad9hlmRrZHuPl
sSf+5LWB7b+NjeGuTkMb4kw/r+kReXKevwH6lsTPyqjNdpvY+E+Z1sJh4q0N
517UrGfjTc/MbU0W5+NvoNeutWwcWNSluH/xeSQb86xfwsYXGeMPdhMPG7vU
3BVg45UHYxM1iR0Hh0eZ3Gws+KE/RYE46si0UfcsC199ui1mEzFw/HX7vwkW
FhIy3CRB/OHPoNKXIRZeKaHFL0zc/upIelYXC1fczbLkIdaWYYVtbGNhXRkt
LRpxs0/Gz+gWFr7e25jcV8zGFQ9dav2rWVgDhsi3E29Q6royU8bC08KPVL8R
e+vREs6WsHB+sHQjIu56Velgnc/Cs/w6jlnEuStauL69ZuGxiqWuicT1e9Xk
DdNYGOzg6wsmznoTLbwzgYX1S1rNvYkLRIbr8+NYOOdowXZnYgen3dLKD1l4
5ugPNX3i/doX/GRDWZiPUW+hQax/6+XdpCAW5ldS6pAhttH11pD0ZWEOht9K
TuI7JtcdxLxYmL7Ks+31B3J//7Ss19iysNKdHN5YYpvmpTukLVn4T7mZox/x
Ydqt71vNWHh9pW6SEfEZVByrr8vC7aED/srE/1nvwBbaLKwmePvGCuJX8OVb
Jy0Wzut0Gf75nrxXstNmN5VYOIWHwxgTax2/OBUjx8LOYXs+PiaW2mnkl7aB
hU3Sr/RbEd9t323zbSW5nu+q4qp35HrhtFAlBgsX1O/zTSZegPWPIqeFsFJU
KrhOfOKCyqaKASF8+ddMvALxlbMjjurfhHD43ekcH8zGyYLJe7Y+F8IFr2Q5
DhKnPHR/eT5GCH8xcFaWIP61co1hYZgQ3oGllBDJkcx8jv8MLgjh95+/7Owt
YuOh1BO7Q3WFsH/sd70s4velnls6tYTwzkCpdReJ414L39DYKoTLFSOWM4m3
t4fGja4Swj/ML/7lfkvez4fnOHz7BXFs5u/O0kIy/qRyVn+bIN58TyDMl9jt
6fPCIw2CeG7DYPdkARtfomsKqSNBPP6wXa+W5FjrOj6jtXcEcVUPj0sAse/O
v0Jx/oL4tF21lArxE/aNePGLgvikSpleZB4bG/YMmMvbCeL7J/LWaeeysd7t
DzmnlQVxaprBjkPZbPyRbyH2YrMADq1dITBBclGvjGdnT5UALpbbfzmSWHat
XppliQCm5wmsr8ti4z3CHJRuugA27RKAGplkfVcHUfsCBPBCy9OnJa/YuEzU
Ia1SSQA7tVnPGRLDJaG6ztICeCevQHnjS7J+PtbNCa4VwK3uNbm/U9lYgbqF
LHgE8FxjQExfChuvMUpSWtXKj69G5lxOTSS5ymHwWzmUHz+7endh9aLVdyhw
+/HjfU5e1TefsbHHacEfPy7wY5EySzN7ktOn8wJd7jrw49G3vVm0eDZu6Onv
36hJzjeYUdoZQ3Ip96TmdB8f3jz2RF6VmCNbppDZwYd/PbR9fzOajbvP6nYI
N/HhzyKl9rJR5H0JKFFXK+HDtxVuHzGNZOO9Tjm3smP58PXdIpsP3GHjjPNZ
/9ka8mGNksuG/mFsrPHovUTzHj5cfvjb7be3Sa8k/nt1SIMPv7ldZCsdysaa
oW0S5pv4cN3Bk6v/BJP8yuHvCGbw4bDqaE0uP7LeVidzvcjlxWVimlYSviT/
k/fW2qTxYgHFTVfVSU9YZRnErUzkxReG8vKP+7DxteB+GHWXF+cfW/onifTG
8JG8VWUuvJh5/WNIiQcb77xgqvxPihdH+p5vRe4kJ+MbYrpW82KTU69Fc93I
+zqvpt6+hBeLPdi6Od6VjednZzd1Ubx47I9QqSXpld0CJbLrfvLgUFsfbSc7
Nh73/H3PMZIH14Dhmy2GbKxymVmvLcCD+xr6VrobsLGMbbEDm8mDDXdOj3Lp
s3HoYyubjmluvKdC2ncT6ZHx9FNPIru5scHuqw0HtNk4QOhu9s5ibizafquR
T4Wc75T4xkfe3DjxWJmO53aSv1f/G/vgzo0Hhf91/yI98m1Lqd2AEzc2ngrL
fK5I8u9G32bTI9zYuukoWC7LxoMiG6vstnPj1KKWHuc1bBzbWdt/b4gLl1rv
ffJiFent7Kwty/5y4bGkB2e6VrCxpUrxzphWLhw742BgsozMb87dtrwqLtwZ
7zXAI8TG57J3Waq/4sLNcvTwvwssXK3WGHzkNBduLHVsP/mLha1UbeqX9HNi
3e0FSad/sPCDzNY9335zYmnFHx9Ok56YWVrK/fgnJ36w227O/hsLmz3mv7Wz
mhNLjc9aK1ex8JvoK1nFWZx4MFABHioivaRqW1FxiRNPvNRdsbmQhdfuOSzS
5cGJm4M/a9JJb5zruP6R6ULOX+3pmJDNwst4Lpw+aMOJp7wLpT6lsnCf0L1m
+T2ceFyi6cetKBZu9Uvc3S9ELCUgrfqAhecbjqcc5eHE3+1+v26/R3olq/Vm
LZ0TrzdLj9h8h4UXrsS+rxrjwOFnAm3iA1n4fmqEKO93Dizc9LWay4OFA6N0
WYHJHPiBQ9VPRHLfkvE7MVGHAxe5Sp1s3sfCFnI7tuju4sBWEdnpQ6QHHCRF
NEfVObDd/MD5ZYCF+yvjeiy2cOD41f7fVbaycPTtU3cvLOPAkum351tJzvfY
6uwY+M3EH80bD34UZeEBo2zZ6V9M7GxUYJeylIzvcX8ifzMTf+JPLXAUZOGP
idyKeyqZOCgjdF8uxcJn/9MIYeYw8Ujm+77LVUL4F/OGaOENJpZ4XKDf/kkI
z5uFmij4MTHmUJSH74VwioIo68UVJi7cKuPa/VoI77q2kvu1OxM7fZbm730o
hAu7l7YusWJis02XLfJshfBa30wv3m1M3Jri8uDaP0GsNp7AV9HJwMFFV+3U
ugXxrX1foyVbGdjteC9ff6sgfsx4auDbwsDPeMqnQY0gdpDVWmZSw8ASo6OX
Yl4L4uY6HroGZuCF+/7eil6CuO2IfYtiLANXcrr9DHIVxCzD7LreBwy8xeCV
SvMJQZx8+k39iwgGvlKKfjgdEcQHi8T+aN5i4OlCq3XaaoL4k8V5VsolBn5z
Su5o47QAHqy7++qxBQP/jSraUT0sgAt4wZb8wwx874iu3PseAcyTMXivyYSB
Tys/Ph1BekDukQi/jB4DT1z5d2s4TwDf+VtgztZk4O/sj+cjPQVw2JUqnQkx
BtaIzrp/f4Afj2vnfRfooWN057KDcxc/dph8nC3yh46ZAqVHwU9+zNrI6yDR
Scfrbo7X1X3hx02zGpq6P+m4KbJBqjSVH/+JXH+ztoaOVZd9eVx8kh8vOZmv
X1ZIx0W7jHcaHuPHV7r+mK7Np+NCy1nlenN+7HF+gMszh44PnGFvrN3Hjz/m
aDhuz6Rj9wRVr0gpfmwn05LVl0THrKOaDtqtfNj0nT1TOYKOL79Yl+D/jQ9/
W63kXHOH3I/pf47vK/mw1NoXBz1u03H/9OZr8m/5sGa5WmBJMB0ruIic+PqQ
D79fWAFir9HxmdNJpdoH+bCAschaMVc61ml+SU0hXqx3fZPVISM6FvyqY9md
zYsTVovomxrQcXD5k4GaF7x4b9YuprkeHf/Ip748jOTFW7r+5Trr0LGxX+3w
AMnprcdU8r5COm79KMRVQHI5PFFhyFOJjt3StwnbCPPitYbhW94p0PHye0ZP
aNy8+P7M7F/BLXS8q1bRetsID078JY1yZOm4bnrpb8fPPPjWrLW1lhQdd78N
95/14MGO75fxrVpBx/ZyN2UtnXgw9++EV8midGwd8iUxx5oHy4r89dZYRsdL
C+WVbHV5cCb3PT+XJXQ8UmmtECDGg/erXUllCNLxR7OQC4KfubGdun9aP4OO
dxyOGNlcxI3ZFcyrhXQ6VioYe7A/ixtvm9q0/jZFx5Hnui+di+XGfMe0a8EC
hTMD7bUen+XGJ+62b6+cJj5uGL93BTc21ZATixqm8H8v9C90C3Ljokrpn1lD
FM6TXq0TyOTG7hsPPasepPDpLlprwT8u3CXiqLrkH4U/2Zy9TJVy4YaR1pGC
Xgrv32EfebOACx8f6T7T30NhPQmJKuEMLnz+p1TlOmLJwq0vlsdw4eJBnrV3
uync8LYghu7Gha32OftF/ibHV9Pkzh/nwrO862/+6qSwWuP7hS5LLizeZKEv
Q2w8qxuE93HhLcc+D35sp/D3pz8STdZw4UG2hMz6VgrHqMm7zH/kxKWyz4UP
tVBY96DWPZ23nFiuJ/xaaTOFacmbjcIyOXHQyThLNeJcevO95bGceLLgz65N
TRSu0tUc4HfjxLIVZ3at/0bhqP28u7SPc5LvwVi/pAYK++00OXjBkhPHXDPk
lSe2Gaop/L6XE3ddLinfWU/h8adH9t9YRfavl4n0raXwio5SVhqLE4fk5zis
IHbx/f62hoP01GCMQUYNhU1D0Y8lgxw4+E7af3++UniiS6D0cjEHVryjV3aq
msLlN8317uZx4LPvZ5vYxI/d5toSX3Hg9IyDzXlVFN7yn6nRpwcceM/5oUgh
YsahiIrR0xz4bW2M+9cvZD74ppKVbDlwz3K3nkDiyI6rNS6HOXCWhtQySMyW
H17evpMDf/i7wSu7gsLOKdlc2aQHLlkeaM4qJ+dzOF32m48Dv4ytPOVJPO7q
RBOhOPCVEN5gDWKFnlPNLr1MXMl32by8jMK2M+J1LMzE6X/T0qY/U/jcsYQi
5WwmPnbVcUUZMUf1sPaRFCa+x3/wTxTxmWg91ZgIJs5ROR0NiQMlbmQUkJ5w
eHnSU4S4dXa4qYn0Qk2l6tPeTxTuaC8yFD7JxEda2+qjif1XWCbJkV649OxK
zTniyH8xH/aYMPHmck9eY+Jn329ZeWgycXL9jCgfcTfP3MsPbCb2jnRfEfKR
wnyKAfl1nEwsdlrymCtxe2bD684ZBubvEigwJf5c6x5IdTFwWmFnmDjxozER
J0HSI4/ue9O5iZudZQxXVjOw9Mr4s4OlZHx91spb8hk48G7r1mLidfSfUCWN
9MaFGO804tX+QXYwgfTEkOyraOL3sRsYBqEM/LOayjlPPKZ0JdjEl4Hdd3T6
OhDLypRpmnsxMKVRI3mIOEGIpWlty8DCBrTK7cQHDTzuHiM9Is3XUC5N/M//
iYwd6Q3jqvagVcR70iu57HcyMHr8b0GQ+KTXVgX77Qx8rK5YlkGMlbmT7WRJ
zwnLcE2WUJjrj7+nrTgDHzjadaufWG6fnYwVLwNnjnpfbyZ25FNZYbFAx1py
7X++Eht0PnI7PErHqw1ft38mji1rUDf5S8d37HOc3xNfgisuGpCe8ex55VtA
7KeXoLS/lo63NR8VyyYu8ch22v2JjnNeBqinEX/IC96o+ZaOr9r31iQTe92x
dVnsldAg/dYEYv1Cq90gkY5fQBvqMbF9vmnUvig6DpC68Dia+NDo5AXDUDoO
rOx4E0kcaU77a3adjpX1ezUjiJmm4gNHz9Nx7rZm+TvE+8sEw+yd6NjhyfT1
UGJbwev1TlZkfPD+1lvE/C0KJa4H6djPbFw1ePH4AzUO5/eSnvxsdzuI+HPN
mqJLauR+JDduDiQ+tb28zkeejmeeBvEHEL/wC0/3lyD7Vao3+BOLC8qZB5Oc
3xC+55wf8b+jRjWhvHS8X0phyJdYTSlX6u48hQe3fru76FiP1UciSS5frbtm
tugnStvdo7vIOp06r7TozfeLLj4iOfbVa0580fSfLuefVlJ4YInlqkVvNKM5
J70nOX6laeWiHYzkHF68Ifd5vHD5ovNXpzqkpVCY+8oBwUWXUqrnsuLI7y99
Gb1OfED5VlROOIUtZG+ULPpBndX3ggCSo2dKLiya+ePkTnyRwgH7P/Mu2kbS
sbrYhcIrf7ecvUbsbMwf9tmWwgtR2s99iI3rlgZWmpF1N6ObdJVY6NeOwlpd
CoPa7SeuEI8d3by9SWuxR4w6vYlXD6bO/FSi8NKgX0svETf+cl7yewPJ9Uub
R7yIt6za6Ne7ksK/JXy9zhObyN02HRakcNbopjh34hVKljen6BT+8fXUUVdi
18bdW6gJGj4veDftNPEPo5m9PL00POPVE3KCuFd3RxP7Fw3/OvZ2yI44re9F
38paGuZ7erjOihiU8wdJfqRh5ySOLUeIZTr4M+ULaNjDbenMwcX7D7M6q5pG
w9FJXxX1iB/eyKrQfkrDf+7crNBefD61hWVGkTTsInunWIM4qFDG7ehNGm6W
VFqyjfj4v6FvXu7k+jlBD8WJ+RjPnwYep2HZwLYPIsQnNLy3RlrQMFZYLcNL
fP7vytAkQxpOcLxVMldM4XiPLfm5u2n4RFHA7UFio6P2RWU7aDgl1+ZaO7Gt
gt2TH7I0HPzJNaKW+N0v67WcS2nkOdxhZBFP1L8oWcVNw+XlpgefEPe8Kaiw
n1xAIDkjKZR4uJf7aMmnBRRb9/yAI7FuhXfpZPoCsvs4d8uIeHpFzWH5hwvo
MsM2X5VYYfvqjY9PLiDtguYibuKxL6983U0WkE7kUpPBDxTe6cQa0NFcQLxD
jq0NxHvKZUSnWQvIhNVa/Zj4lodJb/30PLrfYbDJj/hig8xkVuc88v/P0cGR
2GjiZdf53HnUvULWfSOxglbuD4v4eWS1dpMaJ3GNirzK7lvzaETnbFUHWQdZ
E7RdK2zmkZFqqGE08TLpbbUdXPMoD1LsmXdkfM/ihH4MzaGMTYbZVcT527yZ
TS1zaGuw3Vw8Mftox86mtDlUv+eN3R5iQwf+rbOH55DxMfkxL0z6ZX/Ff/y7
5lDP/a/rdxGHBFjeFpObQ1cf81fwEHtm/dYxpM2hb0cMPCIQ6fOt2RL1z2eR
par7nftFFH5evKFhPnwWFT3QnD5IrKvN1SN7eRbV+lRnChBnGCRZhhnPotPl
AfOX35Lxrk287Ts9g/Yxlp7ZX0hhLd/uE587Z1Di5FjxRAGFWcYOY8JVM+hZ
ntrOBOLpGgXjjKczyFvH4sFEPoUvGG/dulp/BjU8d1QMzKPw8i7/Ep8dM8g5
AMtsIG7inrD8u24Gjay+ue5DLpkPjp8fSsenkeHAmpHxHApXDF0OyXo8jVoj
/3uwh+RK70m31qNjU4gZPXX9YiZ5nzgF2Jo/p9AdC2ZVbwbJK46c3HUfp1Dw
qUDr/4idzj19NPNgCt02frdtSzqFpd/YyI5oTKFL/btoOS8pvNZd0mNBagot
WauK2cTynpIP2EJTaK3snfCTqSTfzN2e7mubRB/Now6xXpDvpT9j4rP+kwh8
UXmu+pzkw+jFWJUzk0jczMDAO4nCb6byD18yn0SutgH1BYnk/Tol9WaJ7CRK
2UedUXxGYYnZtS53qidQSoG95PgT8v2zSdCgfPUEqordfLg1isLh91L0znJO
oKjzOzQGHlJ4VNVPZ+3gOPLOio+ffEDhxD/IMeTDOPo0ve07PZLCPD/3+r5z
GkdtBcbWfSRHxx0rjG7mjyHK1TBaMJjcT3N0aGLCGNpWglrbgih8/YXUtc+h
Y6itt+ZARiDp+xcrMzbYjaHRG0He2v4U3iR5zh3wj6HZGwWp6j5k/nbbrxq1
HkUjbn6XTpyjsE+W2a8R3VGUekZCg+5B4TKr57kzyqPoSyVrONKN9Gf59dr1
/KNIlF6zKecMhVVFK3BD7gjatiVYs/gkmc/so+zqJSPIjnMmeelR8j7Mm5Yf
WhhG6ffvnzllQb5HSrq2d/YMo94/9t/fHiH5xXyks+r9MCpVzHlwiOS6a2yS
5YjrMHLIFVphZEhhS03mEZPqIXRfMHqLMyR5Y+Hpf6JwCMm8nlT3Jjlv2C8x
HvB8CG0QV0sM0CA5/tLp4y+fIWSfXHw9RIXkmbTzWrrSEFoJHrfZKpDriV1c
x74/iKpO1npIi5H1kWhRJlk+gAy+n56lpmhYndNLfc/zAcSvpVj1eJyGj73+
csfTfwBp6iVJq4/S8CPuqLXCcADFy9y0s/1Hw7vviHOLv+lHx84cfnbxNw2r
Ph+0TH7Whzx2XP1UVU3DC9n7X/T79qFC59GnUpU0HPKk+IG2bR8Kl3vy7Xw5
DRful78sI9aHprNjNfhKadjKUjvm28NepLacM2Mmn4ZNFaMu4fAeVOl6a2iS
9MCg7m681a0HrUtwFmI8IferJaCXb9yDuJ8EWHDH0fCWLB8bit2DQI6PB/MB
Da+b0AzxCvuL5PSvOrwnPaErZKa+5G43Gl56SMnEjYalx5iKKkldaOXE49+5
6jScme+dFx3QheIc7SIaSO7XKduoijp2ocJu3T0DW2l4h17wHjOpLvRPkkrg
k6NhGdHDEWMJv1HFuaol86toOEb0chN+3oneT7HvXh1bQCXffos+v9GJLlrE
iUz1kRyfrW1KcupEnHwnzBw7F9D6/mtcQ3KdSOG+MGN17QJyE2n6mZLZgdR5
nOJG0haQZcqlj+/ftyO5L2tzjY4vIAPrDa+Un7Wjq9uCHZlWC8jzWFbQu8B2
tP0cM/qF6QIS6cpSlNRvR9ffcATX7VxAye4t4yJNbahn3EM+bNUCqtjJJ5A+
1oo01topplbMI2bYwJK3vj/R3x1Tgsel5lHuB/Oecwd/otfjXBFw1Tzyq/u7
2WLdT7RjvmJOkD2PHA+853+BfqA+z5OXgmfnkFrmtTs289/R0i8/mbM1xFm/
T0j5taBgGaOET5fnUEVlbFzioRZ09MxN9qDbHNJ689jFdGMLUqG2mfOfIP7x
pV25vBl1GVxyXX9wDuU+WraDJdKMJPQFS8ul5lB6b1CTREYj+i5aOMwsn0U1
wxsmnP0bUVnb3O8LaBaxgtXTfx9pRJlctpkdWbNo1lro33+MRvQseeHbvZhZ
xImznC3NvyFvPGPr4TyLDtboGOfxNqD4JpuFlQKzSM0vpRiH1aII6TVflmrP
IJW3/2injtci+1ErDfb2GSR/OIi5X6sWjf8pz6NJz6BtJ89qPe6rQRHfJv7k
8s2gn05qF/IP1CDHhTsHQ2umkdlqh433lnxF19c/flh1dBrVLBxT9+yvRpnM
UeF5g2kUJR/jcutjNWLd9SoWg9PIwCeeZuRdjbBS7HcNiWmkcYxe6VFdhXoG
jDV+/p5CFRZ7VMTvfkFLbeLfYacpFDHFvKuu/wU5BcSaSlpMob6KQocCri+I
lfjQ/NKBKbR09tzQn8sVSOf1pw8MuSlULG4yN+hSjgY9H0Zf6SM53on3JNh9
RvO3JaXET00iaRd7Ed/7JSgTHVPYZj2BvLw/Nw4dLUGWvqU1VgYT6Ltyb36h
VAmKzzAZuqw5geTqBGUd3xQjzD2c+3DVBIoQW1ZD//4BSWSbCel8G0cav8SS
1FTeo4rnsNdPbxxx79nWdIjjPfK/VrUwpTaOdN7EqpXVvENfc90H7DaNo9Pm
De/eurxDHme2uC/jHEdhSQs6ZSkYWbXc/jJeNIakVTpt7jsWIadcucAU+TE0
WJP17R1fEVKUvKPrunoM0WqtuB5mvEUJTccPyvKOIZsJgy86C4VoT/yLA9d+
jyKfkytdnsQXoGGfztSX0aPIa6f4qWruPMQyfHRXkHMUGQ0bniszfI20Xgg/
3lA7jIKOmp/fLvgadS8pHBnGw2hQLdpd5ksWOlv/5OObV8OI27Yt+bleFso3
zuCTCh5G5lqKzUPGmciFHfExBg4jr5G3e0zPpSP+dylaCy+GkJFVixGfRjoq
bMps2/twCHm1FKruZqSjvRk/zwcEkP1nQyOPb0hDCj2K9/pthpDNJuMvIm4v
UfedU26WIkNIx0ZZ0kAlBYn3+up/8B5ERj+aRY/XJ6P7rx4/DDk5iHLNmm67
uScj6ZQoYyOzQZR+dNfao5nP0SsYLYm2DKIgB6MZe/UkVLFK+WRA8T8UpKA6
bnUhAc36SXE03hxA3TWTR6SlElD4yaP3r9kPIJ+1jmJ1X5+ie+4XqTWaA+gT
x5+kys1P0QOJ5qRNA/1osHPDaaXBJ+jeIweeGMN+pGCg/OW2+iN08MjR/hGh
PiS+miH9ND4OGToaUDadvQg/PHcnni8OVeuXvS7M7UXi+9e5/dcRg+T/mJjo
HOtFrJG5NTbJUSjin3BbSkYPUlhale4vFoUm23bbxfn3IMzu++ET+RB5notX
8T3Sg1ojQhL6bj1AqjazO9ZRxCFyRftD7iNJM33eDMO/yKeymb+CfR/dsn6U
qLj+Lxr0dp/hf3AP+YkM6yeMdyMFjdqlKDkCOQq+WWkT242qPTSNw9vCkWnK
oPq2nj8IVgtXF8HbSHzD+f1217oQdksUrr8SihgmWx8JmRK3ixTy4BCUzjp0
KW0DcYkk/5sDt9B8+dONZeW/kQ/sNncNvIE+vgidchb5jaCS1dOqH0HI2VBO
Nu9PJ7Kh37q5ekcQilpikjiZR+zfeNtxOACdaKxuMbXqRDAoTFbwph9idV2d
9EvsQK3TeVqbJ31RZsG0zDmvDgQHrhtxn/BFB5dccv5PtwM9Zg/bNRleR3H6
hQHMgXaEPYN0dwAflNcGypq2tSPamF1yuvwFtEzUpDAOtyJ4dIfD2RNeKGDB
fRXHvVZE05fYuzfRE/3N1T1od7KVrB+lILr8eST6ZiKKS7gV4bKNz+JOu6N+
YVjWUfITQS1TreYSNxR/lT9WyeUnshHRz62XcEOf8g+5ui0j+/u6Otr+uCK3
MJ73JY4/EA63LdZVc0a8bXW5iPM7osnu+nx6w2lkCWeVo1+1IJ8d3pvsV5xC
H3tOc580a0G0D1ral5ecRDnxD82/P2tG+K3syYVDDqhi19IjG7SbkE88WHA7
b48CVVdsfdjbiLDe5m9CsXbotXdU/kI48XzbR5fZY8jMaNXV523fEC067FIJ
3QqVzI1EO19pQD77Q7R8n1iiKDHbR9elGhDN2WKnygELNHUm7MWtinpyfdnQ
piJzlPL92S2flfXIx83ymkvQYeRd1pHr9K4O0a4Jc+lZmqFhpdsxuifqkI9O
QoqihClS+Kmv2pddi2iJFWLtS0yQWR2P7itL4n6nBlmhgyjc1O+dI4PY9Yhe
yzojJPLUNaLAqAbRDj9xeu2wH3VJ6UVN9VQj2ro1yTxN+5Af58909zvE9cyk
asu9SE4xLPT3DmI7PbWDEbvRtwjjx7Y8VcjH8Hadxb5daDB0xQpRs0pEO/Na
5RzPTtSYKHq9MP4Loiluv/7XTROp5ZsEtqhXIBotofOgvjoyx8z6Q0HliNbN
z1q2WxX16Hw9976uDNHaLEvaLyuj6ZXqSz2cPyPavOPtoHdb0fDB3A95eZ8Q
zXZpAl6jhPapsmRGOIi7ru/QUpNHZd8fXN0VV0rG39O17KYsoke/S2vrL0E0
zhz2N45NaKkPn+N5TWKYZS+fvAHJH7k5TgspJm5wqHCXRJHPrbOvkR6hOfmd
s7GXQNsOpY9PyhK//1r18II44v7vleDxS+8RzXyT/tkVK9GjpidLNq18h2j8
3W0TQqJouGl98uWTGNGE7+vAPUvRa5VvFRFnEaIlzGYlvWGjY7efATFWEaKd
+KC27IMgcnX0MIl+VYhopqtCQwN4UbHskgwe/QJEi4m/fDaTE8mfsqJO9eYh
Wp/oO8+dDNQgB/rRjVxEe26XcUSehl6ZpKzhkc4h87c/Ou7PdFHDzCP1faXZ
iLb8io/4ivGirkaZwYv2rxGt+svHpK6hIs0I684EehaiDRZL7LnZV6Qta/mu
5HEGorVe75w16yp6pr9P4adWOqJNfp01WtVWNH/+0esfeS/J88o5oBzQVMSz
7/DXwbEUYjsfe7eaIn26As+E4nPizTFvn3wuMh1LezXk/AzRxPmFEwZwkfeV
E0vbk+OJY+Vf9L8ukov4u+Ju+SNy/IWphPtJRWOrh+oP7o4inobxWyOLtoVp
0jkLIhDNZ8AgSed60Wz9sSArh1Cyv/rEvSrboj36ztfjTX2JHyu4BWwsCn7P
vJQf6Ers41yi80Oztf5Gi/VxM0CjWZrrlRzQSlk2mX+84BLxgfbMzR5a0j9e
rjk3EERcNC5uFarl4xSqcm/hzuJ+t10Tj7UoeG7vn8BIQMN5Xg8m0rS+n5Vc
Is+KBTSfou0xY/lagR2PvLfqPQG0x+isEk+Jlu2mwuR9rARyvAOzYK5Sa8OV
fVoH6xIBLcwjO6ChXsvD98Uf4wfJ5PzbjLqyf2jV61ma7LFMBTTpBLnEpx1a
YU+b5GXF08j5ZWN8//urpSHVuIQaTge052Yd5ryDWt8fvz3XaZJJjuejvxgZ
0drlP7wEZWcB2iTDqMx9Usv2nOmeMNFs8vsqW517c1qHl5fZHL7wBtAaK1da
ZFBAomD32yUtOYAmHi50cIQJjg8XZBRr5JH97zqq73EDcQ2Veyfj8gHNe5mQ
WBw/UCPPkKIVkvsdrn0XxAIqh0P8bx17C2gRnGnx08Lg3bGXkOdDEaDVzagd
ShIBrKj0p+rCGNAk8THvO8uB5SbPyZ73xI2eNfkFq4DmRVPdcPd3gPZ9Yj5T
WgwsPTitrSj5HtDkHt/ydV4HWlwlIj7WEY9fCkp1Wg9wW2iHqf8HQDvvriMV
IgXeHOD91ahcDGgw5I3OPhkwHOF/48P9EkA76B4iuHozuF59uk7crBTQ3mrk
B7IVAC8zLOysyEdAW2gFs68UweyGlIPZdcR2V7XVj28FPyv80nrvfgI0rY/L
VqkrA464SfWlJp8BjUe/66zsDqBU3X9LXrgM0OR3RH23Vwd7SvSrt4eVA5p/
sWpMmiZIHWnuW29YAWirfKREBCD4o7tFghL8AmjgXTMjeRfoGdkqF3yzEvjM
F9b7sLSBVv89WWXdKkBLNXp2+8YecDDpjt5xZjWgbYoP4s/UAYkj3sG/3xMv
vahnaKsL1K7vT1om8RXQXsprf5HSA14S3hu0rhGvu6y9vtsQGA02ep4BNcDn
81zSnxEjEP+CavWKI763XHfLvDGw4Qtt8JyrATTesK4uJVMwH2QQfaigFvgU
GPjho4dAg/avha0r6wBt/Rvmr7tmYOJwiBjXBWJs4vRW4ghwSfN7G7y9Hvjc
lhfG1VaguOh+FpXRADDtdybebAO+x55V8BH6Bnw+nvl+b8oGNNL1i4ecvwFY
cU+B85ktaH9B2byUaQTwklZpo74jSNEOy/J52gSwqMSNnP3HwfSEyrZwqhn4
DCznadE7ARr9jsves24GUEDs0+GTTuCV895XLqtaAFZMkJiZcwHB+gdsnMK/
A5q+hfvJVa5g99OhAWrwO/CxfF/xs8AV3L6Wf/iG/g9Ae8C7dgWPG8g+VNPj
yP0TtAabYsUGD8Bazrh2+PIvIL41mG4YcQ5MF0jrnmj+BaCqaGaL2Xmw7VpF
StaqVkCriJs499cTPOw78zrSqxXgdgsTob2XwJXjIvODim2A9sUK5q3wBqtu
XhNdcZRYonT4/pA3aPtt+1klqA1AxkbtZa+uAJqn3jOrn21A/Ibr9KPN10D8
cwbXruB2YOOR8P7r82vAnr7ppWR2O2h99almz4broC9KXnf+Vzug/dtexy3t
C8q3ZS+/r9xBfl+9NmCfP5DweNp4qLUD+DzjmzpUT5zhwznA2wnEk/OGbzsE
AD+J1pveyp3A5vIswywkEAg7bTTwDu4EPtpGpq+nb4AcPH+Due03sJma27tg
dBs4HnL4tMG/C7BesjV+MsKA6d8uuCqtC7Syamof2ISBZ0JnmphNXcBV/elt
2bV3gELT6rU5cn+Az3bjOp6UcLBCiNV2r/YPoA3+6M7jvA+qRmPKZMX+Apsl
7YdHve6DDXNO9id1/oLHUW426X33gWX86aGos38B3hzv9qYxEjz1Oh7d9OEv
GGQ7v1H78BDs+nhM/sPxHmDE8Lwv1hkLVD6En93xshcojDBf7L0UBy62tq4V
auoFrhzSR44ufQQSTW0NvzH7gM9jpaNKGx4DHT/NVhXLPqASNf9lqdMTkDIx
baTF2w+4d/AfviiRABp95zcCuwEA/6RHK1xJABEliclLQwfAYxrng9HmBFBI
qzNsyh0A5v94eF5EPgMGLc9fbxH8B2jV9Xh8TRKARuNhgrn/APeEhshm6xTQ
tS5+806/QZB706rMoiIFPLIYlhF/OAgefw7vTVV7AVi09qXjLwcBt/oNt4KV
qWBPU0xAwLdB0KqucSC1+yUo/K+wXEVmCEgXy+7x/JkOTLNCjJu/DAGV3REJ
p9ZmgOKzYVfWtw+B5Va8/dNWGcDDjD5nOz4EctcNhvS1ZYDpgK5PxWuHAV7D
oSb3LxPkGfFGCZ8ZBkZlWaoxG7NB/4MmxSqBEfBc8u1HaddssGve3XrNuhHg
kzJhYJKXDVqNLr08tm0EqLjBg376b4BlvkZwxX8j4EHkvr32l3PA8NZue5mk
ERC0++Lp4Jk8INhm+WZBcxRwR4wqKRnkA/oOV4VUo1HQGPO69OqTfOCqmKZv
YDcKVJTUlQR1CwCrqM/EPWgUSDdYjDOfFoKiR/ffgZpRoBMk8abIA4Hz/G5N
LXZjwMs/IHbqKwJxH8+v+3VuDGgbSuUMimLAfe131LfAMYCjAwq/n8fAVX8L
1/MXY8BH7Jptuco78Lvbgr90eAxss4mXUPjyHqQ82CI9dGUcnMhSunhKtRRM
aPZLNoVOkP2ZX43PlAKXvNs55nETQO5gwO2gZ6UAph7XrHw5AXKLGcV/hD8C
odZZdnTFBNCRUXnuOvQRxIviUwU8k6B6+YdVn95+Bkd2tZ9ccn0SnMgR6Pow
+Rk8sJY1GAybBH2XQnmFt5WB5bmb/7x/NAkGn1nVPXtRBqYilm/a/3YS2BjO
eb2KKwdCfpXBTROTwLLmnrNFxBegMlvZyHlqCiT8rbt/o+4LsAlWPat5YQos
ffaiiE+kEjAlv944GTgFzM8onuCPrAQ/9Eq2xD+dAqnThk+pR1XgDXgxH9Ey
BWJ2dx45/qsapL7Zsv/K/mnQxd+7WlOsFpwQuZdhsGYGuOhsqKjZVwvg31fW
e2VnwHximFa0ay04ODprqag6AyTOBIcWv68FhR+rNNpMZ0DK0si8CyfrgMam
tCPPb84AU8sLbh64Hoi8LLhYMz4DGs1QhWpfPZD/Kqw1z5gF1XGWZkrLG0D3
ugjlNexZsG02l/etawOgjAwKt8nOkvVPP6sq+Q3ouFvxllnNAm17Uc2vEY3g
iVlc160Ps2B4Xbhx+YdGMLj/xKXeqllQGO36cXK4ESgbNO3Q/D4LbNQ6WvqN
m8Bsb8iG/NFZYLs5IR8KN4PVaj4NK6TmwPlfqtI3YlqAZYd1sKvvHEi37rwT
+e0naHC5Gnpl+zxY3ryP7szzC/AmO2bdhPMgrP/hhIv6LzCtIZwTojsP6uhi
Rycf/QJ7NmVYu1rNg+QeQxCm3ApaDxtbpPvPA4N5l7OtzDZwOWKX7uqaebCh
qmpys1gb+KUdzuXVMg/2rPwZdke1DaxVuVn4qXMeaEqGd0S5tIEie0WR/RPz
oJ/pHZ/d1AbivhXmlaxaAI1/luZyvW4HUXJDb9JtF0BG7IL+66p2cKVnps/y
1AJ4mDaVer63HZhPX9Gad18AYYlaGRrrO4BXuqWWuP8CSOHX1fhytwM8tfk2
25a4AMwvj1nPeHWCIhf6iFX3AmjKPh5tbdIFMs48c0tRpEHPvAwn8bNd4HL9
kne7lGkQKwPbsdAuIH70LEeDCg0e4w5MbSnrAu3Kxzz7ydfV6zd6zQ92/wHr
HEa2terTYK7MEVyp0g0+Xfb80nCCBp/VjLlXHu4G19W+2oqdpsEe6Q/Vbee7
QWL5TwG7MzSYHh5ptzu7G8ReefGy5RwNXs1NnhpU+gvmbssYh1+nwX0VeZwD
ij0gC/eLiUbTYO+rOHHJgz0AuWSvEo6jwYltg8bObj1gaOSJMfcT8tdYaVet
SlYP6FydeK4rkQarQm7BLOVeMLXHp+NkJg2uFFn9Q06rD1Q+tAu9/YkGhaZT
fLstB8DPA5WfTgzRIDfdepvV9QFwcr+AJnOUBtdEd3zsThoAqRIPvKLGabBJ
0OY/jZEBUMX8apozQ4NOz1Zebgn+B/SO1ghkcVCQP7VmfMxqEPxJFRrLXk7B
atCuZuo2CG63u2ctrKRg4uuNZwv9B0Hqxrde2msoqFM/E56SOghOLXshjdZR
MMhmGM1OD4J/lb/uXpChoEHaBY2zD4fA1/Wz5pzqFNx8qSbB6eUQcHqr7k/X
pGBfOP8553dDYElG8NwU+Suk7sjyTbf/DoGMCsvO5l0U1C4faN2pNgxWh6/j
ddCl4PyafC/LH8OA43f0uzhzCkpv2MvqHhoGXq07G4z/o6DD7W8XvTlHgK2s
wzWaJTk+0y0ebRkBSQ/OvDKypmBAm5bsq+sjwP9qXm+hAwX/Pl13bb3MKIha
Ka39+SwFP9lWTXwhuV809ilGzJ2CKOnU3avGo6A+ZNjWzYOC3Vlyyye9RsEf
72s6Ap4UHB/2ctb8NArS9uX3L/em4B47uZ/sE2NA0n7toZv+FCy+V5om401y
n2O/T0oAub8GhbW6YWOg4BHf0dJAMn9FAa9icsfAkHi1xugNCordOZB0m2cc
1D/RY20KpWDLFqj8LHUcsDey/k7fo2BFWsOr9e/GwcsnGvDPfQouSL3c/rx+
HGxYtz+sOpKCV4Ke6H2YHwcCDlqbox5S0PjqsjvQeAKM1LY388RS0DRG23vA
YQIwfXZf+En8YrusXPzFCXC6f59yehwFd/4aer0ygfSCYN3yA48p+H7ih73h
xAQw6ytkWT+l4M+7rq4y/JPgu3nv2jUJFPS1qBjjXTcJYrcouzYSt7bRdL7r
ToL7x3j/7U2koPWqdTQUNwkktzS1M5IpGGjmbum9bwrIdTnXUa8oaHs+NMjN
agokbvJNjyf+LmDg4nJuChgrlqbBNAouP/FrmyfpAUr2g4JHOgWF1ncYli9M
Acnoit68TDL+xO6e/mXTIDz1dJh2FgV/qW9vEZGfBjeyTwRXEDtRHDfOWZL9
U6WRda8pWLrkSbZb3jSgtJhlJW8oyGm7K7KoehrsdzIrV8+h4Kytzgmh7mmg
rDlumkYszbf+GVo2AwZuV668nUvBnDS47ojHDNjNd0BKKZ+CbN2jIuWkN67c
sV5zjzjf5c6dnU9nwJ2DJ76OEcvhbQPqNTMg0cgyML2AgjHK02X2CrPgVodf
G99bCqpFBIdP7ZsFCYG/zhwldhV7eCHcehacEbk0kEp85U/g2erQWbDD/HPD
niIKFtzkj7zUPwtyTML5bRAFJUVZf7dwzAGnY1n1T4hVFMoG/6yeA3ulpz60
EWsIyvbZ6s2BpTahMpaYPD/1HWt8X8yBX/fvNqu/oyCXxLMkkw9zQNHzauAZ
YivasPfGljlwpmUm9Anx6UK3mkbeebBN8ton2nsK3nV+v+ONxDzgEZvlkif2
+S6deV9tHkzn9xYeIV53WDfdxmkeeCaIx6cSvxtnrtC9Pg9Y0l2/aol7oupt
tkfNg2PJ4q+miI9fvntYtGweDFtxie78QEEP0TKHqU0LIMjasxERD5Y7OxyD
C6BwiemVZuINWiuDys0WwJKTqcKjxNrHZHgTfReAkwe1RrKYglkOh02WRS2A
BJ8VcWrEa36L3Q1KXwDHqjrWGxH3rqKVuf1YAL+qq028iJ+d/5rSM7IARjOW
8dwkTqhrlFHioMGlGw81xRCvHLni8moVDV6X4m97S1z9NPhr/wYahIy09V+I
30nsZ8gr0eA74UeRLcSHv/sUpuvQoMD54k3jxO0Gn1VGTGhw9I6MCb2EgvG8
ds7brWkw0R4UCxAvq8syvehEgwmbYq8vJ1Z7K/63iPTIcOXPuxLEErKCUsxr
NOj979GcLHFEyy+67i3iL94l24i3NxaEfIunwaL+OX9t4m8hwVvEXtHg7dIf
Nw4QL7cvtTyeR4PvrxjRDxIfkK4WSi+mQWr/2OhhYjEJ7t1TVTT46Mep40eJ
d6yoHNzVQoNTHqbWtsSV/11bEtJFg3XvDNsdiU2Rz7NvpGdw7/yYE7FAuswT
iTkavHCD8diFOFPuB82Fm4J7oxd+nyVmfx0ryltCwSP+9754EKc2f63nEKOg
Au8JS09ia/lKcJD0xJD2ygcXiKeO7puIU6bg56eGAZeI/758ON4LyX23v5C7
TFy/cp2Kqh4FvzJqw64Qa1urvgk4THpD/2TuVWKtKc1TdbYU1Nu1JNmHuH9L
sLGEC8mNqHMnrhHvWXHBzvUCBTcB5dlFP37kEF3kR0G4b+LkdWKnwJQR/jDy
nvbb5Cy6wCPe0SKagny3RXsWzTGUNJBMcm3rE8zlS5zuKhIwmUHB6TRq2aKx
+Z6N+8i6tTTzWfx/NXiRGV5x7xMFl6q2/8885YdcO2spOEH7snrRYhy9/Ft/
UdDkUJfUoqOFU2Ou9VBwf0Ot+qLlbEZWVI+Rrai6/aJHTq+6upaiw28P3iUs
Wr76SulpfjoULOZn+BHXaXn15IvSYXPHO79Fa9yx/c29ng47xQK2+BOjTw8y
zOTpsPb8PHfA4vyLnN+foEqHz3KrlgUS27ccShrSpkPha3FWQcSceXdLtIzo
sF1RqOsGMd+tm3E3LejQuL8k8yaxo+dDuUZHOnQMcywLWZzPXUW5vWfpsG9z
hlQYcYrohuF5bzqMf5dbG754vMa1WnYQHSZyfGm6R7zzgM9hybt0eNNaU/Mh
8X6VOq/tcXS4u8WcEUusYyavpJNMh8wNLopPiJst4JUjr+lQ6UZ5xTNi/xOF
h50QHe77XdScQlzLcyjvYhkd5qTes0lffJ7wbWxwPR22/oyxe7M43/7PFx62
0mE/fd3fwsXxVJY1Pe+lk3XsMv5h8X7vNm7IGSfjLakKKyf+Ux/QVkwxoENf
2Nta4oS70cE/RRlQmmbR8Zt4uM3FpUeCAaNWTnT9I35iWZgytpkBX3CvCJ9e
HO+uRFFebQa0HxUYZZdScDTgteYSQwa8v/xM9lrikdfiSav+Y8DDJm5b5Yjb
JOflZVwZsPe1+8X9xOy/XbsULjHgpSPT+keIzZ+t9lcOYMBRjm0jJ4m7Qhyv
asYwYNfAp48hxLyBk3IwiQGvWyVST4iXrq4d2ZnJgOTvVIls4m9Lj+fu+sSA
I7wBcq3E7orPXuysZUDRwzniE8SfHZSfgp8MeO3mfZbQRwpKlVoHq4wy4LNZ
3cmdxCIqAWe2LjDguZG705bEDw6Lam/mZcJMDTeBC8Rle2MT14gzIU2s/MJr
4tEbG2SWyjLhfe2MH7XE6ad2B/FsZ8KYcsbxUeKHf0+jwQNMqCiWN69C1smm
bIWgdE8mfDKeWVtNfGUnZRh7nQn5a41Hpxb3W/eXBoUwodjaejvJzxRcf8Q9
2+IpEyaNbda+TFzInp0drGRCwVbbKFBGwY+6joU1TUz4QejEe3fiouPFjKxO
JrxlccE2mVjLq13kzDTxajWxFeUkv0F8bp0UB3Sf3LGSr4L0cUbbXIQiB+zj
urvSmPj3ZVlzE00OyPe2g+Mh8deOacUyUw64/7/9OfJfyPv7oLLkkS8HFEv9
pepWScGbUZHzhrc54FnZjL2fiN+s/rV8PooDNssw3cSryPcPh1GjSSYHNN3z
SfMbMZe1UHVnKwdcGHKztP5K5u8j29a3jwMm8vKxPhJXcz6OF5vkgJb6oiKK
NRRU1RNdZizECVfx1cvxk1xZE8+zLFKTE/oX6O3+VUfB+y21C8kPOWFKqFnA
fCMFj03m3xB/xgndR3h2hTZRsNNP3yoinRP6dbOzxJvJ/O3rqHT/yAlrpDO+
6LdQcHK/nwR7jBN2yV0M+/yDgteu2pudpXHBIa9t8Wd+UtAsZm1CJR8XfPVj
adRykmPeXaMePhJcMP2+u6l7K8m/iMzd2JAL0v+Jxeh1UHCbWF0stwUX/P77
QSBvJxnvw6o2fUcuGNu/40Y5cWTgPaEqby6oTE/qMusi38+FvZYvkrmgWW1+
2t2/FGywF31USueG7TvsolIGKbjlY9LnNQLccKPw1IlbQxQUrJoZPivKDbv2
lqucHSZ+ZLOFLccNJQczB3aPkjy50vZF5hA3tGeUbxOcpKDn+o4npYnccNPu
mU1qNDqMaNIL703nhimfc5QMSM6OWCWoCBRww16fAH8HOh1aFB66t7eKG76L
WbcqjkmHlnJcS+5McEM1MZ7rO3jocIozT+/aPh54Z9MNttASOozC/iFnjHlg
WGr75yNL6TDtbaLWfxY8cEXfH/ZzEXL85Hir5BkeKCDTecxwOR1KIlZ66H0e
+J+ZnefnNXR4uWaoPr2TB05sfL3yzCaScx/ObbQf4IHl7mbvR2XoUE5OOWnJ
JA/02/dW/YocHXouO7buOB8v9Gz4kRWzhQ7lD6y+80uRl3xnFkhzb6dDjUdb
BoWv8EJxqebwmN10KP4lNtY4iBe+0nurEbiHDodXAP+b4bzQ6JBz6vl9dFiZ
NPFvMJEXmrsdHrQ7QId7x66+ulbFC59fXHrby4QOrwlbFb4R44ML3O/UQ+3p
sLffozlxEx/k8p3x+Eh64Ywl6r6zlQ+OnaQXcZykQ1cDlWLzfXywWULuzh1n
Oowr45h97sIHz88+fdN1nvTYucFUw0I+GDW3GwcH0+Fxj/Uf+0r4YLaJ7dyy
EDp8r2AX4lfFByv63EOf36bDVedrBRLa+eDhg4mFLRF0aLPM0iWemx9+57LL
u/6IDle3vtn50IQfvv4b/rghmw7BsSerD/3mh9norVp6Fx3OdteVLBvgh7nH
Y2R+/aXDpzPLWmrG+eFXv9OvlvTTYUf1JU01bgG4REjuSsgIHVZzrQgpkRGA
kpHfwotpDLi29ENpuYsAbDQrWrd7NQPul1ryRclTADpvvPa6QowBxQrXsiOu
CsDDOJDHcj0DMpxe79sTJgDHzi7juCXDgMsV90nZZgjAnycrbiqqkhxXznLy
HRaAwh1DgvcOM6BHQtXykGkBqJ3wZ+qSBQNeNEXfw+iCkCbJW3XCmgFX8jBi
A4QFYWtlDzQ9zoB6byawjJIgfNWqdc3NkwHjVTULTFwFoXlLsGHlAwZ8a101
t7JbEIKMVXGsVgbks5X06BoQhG8f2nuc6GRA9b3VYaljgvDwY7OEkm4GbF8e
kCvNEII6T7+LhA0x4DK/+Seta4Qg7GixcmAwYZnDj2H9g0Kw/XCfm7A0E4Y7
tup/MBeCXTsD7bEcE/ptmNXaai0E8Wke7K7IhE32Uq3000KQYq7O7VFjwle3
priO+QtBs0D0foUBE36zea+3PEcIBvJ0tXufY8Jq5Ya07W+FoLmYa8W1i0zo
Ys+IM/wgBP1aWmVuXWXCwuT4FWerhGDlqcs6GTeYUEe+18ftjxB0CU9dohnH
hFusLS138LFgmnkltPjEhMvO7LgvpcKCd3+P388S54C7RUGGqDoLNjxI5+vY
wAEf/vK9y6nFgmV8g0PLN3NAg265V827WTCOUhB+oMoBbZlPgaUhCw5+Ox7V
cZADaqEjs8UOLCh/dZdnWgD5/bH5ON8TLCiq9f77nhAOiH9v4genWPCE6rb/
6+HOo6la+wCOV3I4nOM8z5UT4dIkTURRhvLLFY50KrfhUqbIkESRQpkzRCE0
4Hp5S+GayjwrSqHSZMiQSsn8JmRIvT9rvev9a6/P2nut85y9n/37/rezPsQI
wl5lB4NMVwJBWbwI5RRBEE6J2mnlTSCqVUaZW47Xk3m9SlEEuNxgPvebIHQt
3W1deoXA2e+5C8WnBaE2iJulG0fAWG1gMXc+A2y6eGW8eAI7w7h7lbEDd8ay
H6jcIrDVyXUoay0DDDZksY4VERgj5TlvjzJA6cJIjV87AfGUuqHeLgasCOo2
COwk0GStqbf6MwMSL5hJB74jcFE2YcZliAHrwtfne30kUB6ZFMz+wQBSUF3L
GyCQqN7QFSolBMfc2lY6TBPYlKPD8d0vBMbDL5jwg4DU2ZupEuZC0DRydafE
TwKlG0/43bUVgthIt8Gi+RSCT1rMTLoJQcXFoKpOYQqtpyOfPboiBPoV32Iy
uRS4jIOSh18IwYeKjudmkhRCa9p+7mgTgigFNy/GEgotufOF1d4LQbeVpvwB
WTxfIuO57Ct2R6b6WfNyClHatnGaVBgOLbGqtdhAIUi9PtHcRBj43IfT0QYU
NFYbS5i3Yge8y2P7DCksnDzlX9YtDPO70ru2GVGobsi69HufMLxJ6gr5YExB
+JyL9+iUMLgquR0QM6GQW51o8UKaCeVyYUunDlF4nSr7xMGKCaqeHjbrzCl0
h//1iePIhFA79ePmFhTWGw27lZ3E6/dtaC22onDvXys75AKZcFcmRm//UQpp
boWBsreZoLFkVf3KExRMQMuzb5AJ1K5dRd2FQvz2L7zmcSYsnDD31HOlkF46
aVb3kwkbXu3LNjtFQVdVXaWQiMBP5touZw/8v4rdex9tEoH+peJPN/hQsK8u
d886LwLvXyVPyflSODFeWNYRLAJ2Fb/k2X4UTMvE2CRKBHKC1e3f+1MoNmus
Dvi3CMhZSgqcukChkG3JvF4nAsfc7UXVIih0ZjhP+fwmCtv+DuVxL1FYIHrc
u1RGFEx1lvHG0VfPenpNK4jCh/N7rmZGUpCyTOoI0RIFRpNc5rwYCrP+CzJa
bEVBvL+1D25Q0OqIkzcoFgXW6xybX2jxUsW1jx+IgkXlkUdl8RS0rwnY7nqK
XQkK26OUSCHQZbOxLc59i7RrVdNJFOYPy9rXsFiglC7P33iLQokX1dY9wgKG
UGX4C/Rr18VVAs4sUP32rd05lYKh0aDMkzMsMDP7XJl8G/fLu9A/LS+xQDoq
5O1IGgVNLZ5ESTELXvPPTfqkU4h0SW65XsOCY8Wl21gZFDbxbXnnnmFXhhbt
XvoP2kBlJb+HBVvk8xvVsigcTh9fJkvYsPv9Ya9C9ERrz0MpaTbc+BRkp5ZN
QSngzYCUAhsW+8UIKuVQeJKrkbFCmw0KlzuzRO7i/j6UZmLjwIbVZ34ouOdT
WCPpauJ3nw2LpOfxX6HXblUrHG1gQ1uGrYRKAQXvi1va7JvZYOj45vIX9B+9
IzyzATZcS9juYlCE91uNt8dSQgyyLJU7EtAZSzQVe+XEIHIi/ccwutKU3ji5
RgykF41ZRxfj/puUUL2sIwYRzr3z60pwfZNWJZ8cxaBVZdtuWkqB2enb5O8u
BpzZJBsz9LG8i6byvmIQY75v4AtavLE4yzZWDC6tSiv7XkbBY0D3NbMKf88w
OKKrgsJy0l99fxEHKhwG3biVFJK0+28GyHHgePlmo11oqQXy6TvWcGDbSPzT
IrSMx6jgSx0OLPC45uFXRWFAeq23gBMHHj1cLpOL1u7rev/6NAd2BPTVdqHF
O+V00/w4UPe7xRqNagql55+/3XeVAzaj9REf0G/DVnXW3udA/7vpGJH7FFKl
Y/1SGzkQrjdxTwW9ucpxLKSFA2/K0nXPo/kZCVtMhjjQNPbPV+aDuXnV03Se
RcD3U9uvNeiYskTpcUpgSj5Jcyf6QmGlhvNigt22gDA0Sa7/ZLmMgLuyfPMM
OmI4JY+PHWr2/poiVUOhPsiv2QW785duu586+kuy/udoPZzLv24HO6Oz095W
tO4hoLjkY34IesyV7zN7gIDL4MDCFPQu/3GZ5eYEEh4sl3qBNneV/ezqSKDH
qqCnF52fr8W84UKg/UNr9yz6kMTjmfunCVTXpHquqsX3e8oMuAEEMrK2xp1E
G8YHvKvDrrwS37YrAF3FVeVOJBPwng398wq6gHPt54o7BOw8B0xz0cKmsW+C
8ggcSfO2rkRnsPLLC0oIaIYbPGpAn2Jd1++twvtlHFHYg3YieRuNGwkwZwJ5
/0H76zlF+r4k4DOWbziDzlzf75PXSoCt/zie8xDXm6IuIvuJwAmO8rgk+nqp
b5IJdmjFbEv9UnRATnBR6FcCOtrzvqugU9UqHSZmcb1s5n4NtJDB0an1CymE
TdltBfS1rUW/jopQWLGhO08fndQ3dCaJUOhw0io3RgdF6Vq0YIeChnTMTNBe
X4eyCXbm8pmC6IPo34wU7YywM4ukJTqs0I+dFKcqlSkoSkZP2KL37T38dEqN
Qnh7SokDOtJ1ZnKTNj6HY3T1cTSjVuusqy6uSyXD0AW9t9vEIBM7BDPqMqfQ
xZOnj3zhU2gcDbjjjq7/2PZwxX4KG2+YDnugBeTznK2xO841wWNn0Y6tageS
rCnoxzVXeKGV+uK82+2xY+ck+Ofm1tPDeCuJXXFaT9LPo3nccucD7hTqEmJe
+qDDL35RjfWicGvy+DNftDGpWvkSu3Au0zHZD71I55QuCaHw1OSgsT/a2nvT
BT7O+YACgeY5G89s7o/Auf7HY+3tAejVDdnODTjHW282Rc9508t6UZFk7L7/
pYY5K7RUVBvi3HUs3D465/dBJaEhmRReZJcxA9FSLiOWj+7NPZcnEnMe5Ebr
CuIc+vub5tz32SB85Pk6PXzP//fdtv8f/wtI0fdG
       "]]},
     Annotation[#, "Charting`Private`Tag$77792#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$77792#2"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-6.283185307179586, 6.283185307179586}, {-4.442882938158366, 
   4.442882938158366}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776733489152245*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"b1917b0a-9de8-4e46-b312-79ccd15afc05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["x", 
         SqrtBox["2"]], "-", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}], ",", 
       RowBox[{
        FractionBox["x", 
         SqrtBox["2"]], "+", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"Sin", "[", "x", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "8"}], "\[Pi]"}], ",", 
     RowBox[{"8", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77673349512945*^9, 3.776733498801649*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"9e1b446d-8fa9-43b6-bd6e-c350d7b699ca"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw012k4lG8bBnBj3xm7sQ5mhsEs9qSiRVJRkr1Cq6iUNlIiaaFoo7KmJJWt
EKmclS1EWohKohRJRIuyvPf/w/tpjt/xzPM8133f13kx9MBtbusFBQQEdkgI
CPz3+THwHe1QDR///6zpzlD871P1+UK3oSo+XDv6u2OIL9Ualnrf5UMnxNnz
P3/SHdtaU8LHEUG3xdHEZ/ao3eAX8iE5duFUFLFB2MTZjDw+lrFrpyKJfxhN
eEpf4eNQ9ZGN4cQvIjfo7Mvgo6kiM2snccbOCJWv5/n4HvHhwFbiU1nrNvmd
4aP4tGX7BuIPu+zsW07wIb0g7cAq4rQiypN5R/noMOE5uxH3ll4wvRvDx992
Q7kFxG2/m86b7efjesC7bEtiO9/5lvl7+BiUrOvUJ5bNjDNl7+Dj67NDCXLE
+rU/b+SF8KFM6Tjxp5oPuUNNncYbSZ0NpSVdxOuvanwsCuDjbrNl+0Pi04l1
IzZ+fAjfuNx4iXh11mHTag8+jA7v23SAeOntDrgt5yM6aUusJ7HEOcVXHxfz
UXDK/5cJ8Y+DS85EOPJRsXrnuanHfPzLWmeg5EDsKzyjiVjulEBx8Uw+Okfz
ys8RC/bFBayw4iNFds6gD7FvudbqcR5ZR3T3DQ3iP2bXmi8b87Fg33BL+yM+
XjGqO92YfBiPqPETiUXS6/JE6Xx0OT+T/f6QjwitTSb7VfgIXcWdnUI88dvC
1J5K/G+xvC2x/ML58eLSfJz//VFkG4gZQr/yKHycbHzaJUDMm+249NAED/JZ
y2sSSJ888hhKDvzNw5DnkNHpB6Su8LzT5t94YMV7+UsR95sFJzC+8ECvFFY+
cJ8PoeEBMe1eHirWUre63uPjHN1KTr+Dh1X1357mV5J6rx9+z33Jw5iJuL4I
cYxZyt15LTwk9SYbZlSQejz8laNreJjaPJbyvpyPskpO23XwMOm2IUKd+Cm+
6L+t5KEh01tjdxkfhi5Le1fe4uFrZ2ja+VI+tAQCT2fk81D9vlH5Nuljry9m
i75fI+5u3Ndyi4+DD4/Py8vkYZbad05rMR8ae85AIZWHx3IeGxuK+MgL8SqP
Tebh1/aEv9kFfGR9DD8cc4IHSt2hhn7S95/nme3+so+HG/Q5lGPXiBedsLfb
w8O4Re5SrVxyTikzf17cwYM6t/6WAclF+OqFp8ODeLhrRz+Tkk3WWyx8e3wd
Wa9XsNp0Fqnv1zPOYX/i76N5N9JJH+nuynzgycNO3vLY4VQ+dtpzakNW8KCS
1p1pdJGPSMvSG0xXHoSjhO33JvPRo/hA5oEjDy1rdTtjT/LxuPjfnv1WPIjU
/NoSlMCHZfHMT/FmPEg+511xOM7HW2G1oqscHlbYClQ0HSbnt2pXOoXFQ0/C
xoioQ3yIhhi8c9An55P4+jIjmuTxyZOSkzo8rE3zm1ocSXJ+YIefixrZr4hd
6k3h5DwEQuc+VOJhekFO6BySw1nJHoP2VFJfiU/x9HY+Evqf5m+Q5GHe5h8P
P23gYyhYZ96Fv1yslbWanFpL+uFTdfOSMS7G1S84SZEcmiYa29KGuBh2cZaa
9CG5ztWrEOzhIt+uMKbHk4/aE4ebtN5yMaEWIFnpzse+ZJcqtzYuwuNEVy5w
IffPXsWRbOQi+/Nund/OfFjMyktNqOHC3sVUIm0hH4v5QQ2GIO+bfWxFlT3J
8XNJ24JSLtICDXJDzEi/Jh1J/XqJ1HcnzKmcw4f3NWVf23Qu1FLEV/xm87Ho
uppT9nkuAsNmdbrq87Fqp/js+4lc6K613hmkQ97n4SAdGs9F63XDW7s1+GAf
jT898wgXHUXrV4cokvqnNs/WjOKicVxzxF2ODyuOkQZ/HxcWylmhfCk+ystd
tVfv4WJTZ9DRWkE+xouUR6e3cbFDbnX82hEe7JZ0/1wVyMWJ54PfZ5AcujSt
3bduDRdvONlbRftJbtQvNh3w4+JV07hCTDcPGQMm9CEPLi4Xr97Af8vDUpbw
k7nuXJxODeG2t/NQ7n3s8PXlXDR9TY8VJTlsr9m099YSLixfLZiX1MCD23jF
IjdnLioup72Vr+UhOTB/vbATFxffFkn+vsdD0GTt1Yx5XHzrVF/rc53MCfVw
Xs5MLjZyX1IycnhYsCfHoXUGF7Rwa/+OLDI3BqJeyNiQ8/p45LV1CqlXh37w
jgWpf2iK73uahzjqSw0Dcy5ePOE07Ca56wpQts3ik/1eajIz5RDp241+P2s4
XGS9DPBMO8CDwZrTUttMST+Uasy4GE7Wk12VzDTh4pbZ8OuD23h4W+o1VmXE
xbZgma6gzTwUOlfZXDLk4l5jodWS9TysTtJoS2Rx8TjRZNekDw99Sut+nWFw
MfPgqpymlTzMtb388ZoBFx5y9+6fW8aDh94RwQZ9LrYuD/7otZiHrVeeCP3W
4+KUzbc5KiSHO99uSOUS95vq/n5qz4Psn0v7wujk+zl2/IMzyXnJSXo80uXi
5ra6ppc8HjYcsboXpcNF8mO3A3uMeXj3CbnftLnYlz7hpszkYY2N7NL1xLqJ
F8MKdIl9w3z6tMj52S6VmKfBwyPJwv2hxDUP9896oczDNcHva4WIs/lvZqyR
58HG6FVFhiYXz754Gn4mOTR4GGk8l9juL9M8WISHC1ei1n3T4IKpGibRPs2F
zdF/clnEL9fsTXxGcvl8Qcprb+IN+w1dHvdzcZxzdBONmOtyN7WwiwuZdSlB
H2hcUA42Np97wcVhG9bhAuJ2I9/Zu+u5+H3WZl00sf+aaofl97m4uz600Ju4
7kE5j3WLi3RpLTlrYvNx27V/rpK+eD3TWJ1Y1+MCvyaVi87oAzem1bn4x980
diKJi4U3l1kPEMftjRRecZhL5tW7Xa+JpTX67ipFkD5uUZJtIB6LGQh9sZUL
k63FVx8QK1KmoxLXcuH5a1ZfKfGXGY8dFnlx0fyYFlZIPCf4feWMpVzsetAl
coN4t1z8dcO5XNg6KhpcI6Z4ngpUseYij/1t71XiVLlnNkKkz2QyThbmEHuf
NIv5Ts516WLpsP+scuHmmTfKZL9Cdmz9z26ulo/qJLlw7nmy5D83KTwKLJnm
oNlZq+IKsXOoQ8OlMQ5c1A+svkwM8eSlSf0cvLwp8SWLeMa+Uw4Huzjw3jAk
kE5c4vr97/YXHHTeD3VPIV7X69q8vp4DQ4/hE4nEhz3M5f3ucyAk983rMDEj
ckxp5S0O1ihLB+wl5jU95i3P5WDZiKbbJuIfntl3lqVxkHBK+7U7cfRDv8kV
pzj4vWJ+5ixiV6u4lb5xHDCk/q3QI6ZtCVPcuI8DL4GhbEHia7mWx/eEclA/
IjWjS43Mp/Jz0ifWc/BeOuFxCfFCGblvuT4c6H/88f0w8fi9hv31rhxs8VcN
WU6smXZR/vt8DpzyWX0qxOtWjv3SsOWQ+VAg3abKhdHRwWhXLgfm6sknTxKX
D/IFjxtwkNXN07AnTjkgXt+ozkFVhG3ggAqXPGe+vrIcB+J7uxRPEL+z+tlW
NW6KLY5D4XfJubQ0VDTRv5sivEvi1HziUwL7Tid8NMXtl4ava5S4aPA5v0ug
0xQ7r36lzCb+efzTo/0tpliYfeDhTUWSj7acWuEaU2yIyWigEqfGHWk6d9cU
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
lKDPhmfcF/fcQBZo2S/GV8v/t95BKs2RBfdb0tUrpdhYNjqcbTGHhSNT7/PM
Sc5UpX3VNtmwYN5ee/LKPyOsnxzqVzdmIZm5eZf1LyMIKB5bfd6AhdKBesfi
YSO8ub3xC1ebhd35lATvT0ZQqMzzvk5l4VHvqp9H3huhuv/44hNSLLwoj7BI
7zBCYfiNjcdEWFDcbW0W+dQIG+OCdJ+OM8FzioiWLiG5cdKcHdPLxMXn7j3b
843wTC/KhtPFxG6Pj3MfXCU5ETI1H33NxMtB2xnSF4xw3Hr5aF0zEzd91w7J
nDZCkemGC+1PyPNcKD2/jhuBmSVCEahhQsfHs+1ApBH4q9mPL1YySf9bCGvv
MkLDhuPD0neYUBtvbrhCcsk7Zno45Rb5/ucZiUGrydxYP2vPzzwmNI/KuLyY
bQQVrzWM1gtMJG201p9jbYSzep9/z0tmIji/NT2Za4S8uCmDxtNMCOhZi0ro
GuHv+gkplQQmPptG2RioGUFIeEN0x1EmVKxMLxjLG6E+J6i+6DATf9tG901P
G6LWS9TyYhQTbUK6S5p+G+Ltq3jpm5FM2KS97Dv83RCbPx9Vbw1n4vyMdgN0
GWIwvZ/tvpOJQR+z7JX3SA4MVi6ZsZmJx06+6SduGyK8+92f9xuZON0S9Pz2
dUNkCEUHn1/PRE57Q1njeUNscT3UNiuAiUYT6Zb7iYawvjK6nr2GiaYgydGM
OJJTam4/axUT79rCZ3J3GmL898Vhd2+y349lWrs2G4JWWi4Y68nElxnp7gcC
DPHsSyfz8UomRCfvK5x0MURyuFZ5qBsTc8NtaqfmG2JJrvvNrmVMuJ8I9/af
aQjOrBr4ujJx1nuJxm8Wub96pUvMEiby76g1mGgbIld+5kLjxaQea3VvdyVD
RNgOrulZxMSASz49QsAQ9nsq+8IXMlE4sqxn7y8Wthx48tTbkYmUbPtTmwdZ
CN8TX+u4gAlB/9FnrNcsDMvYtTnOY6KPp/599CkLE311a7znMrFEykml5DEL
R8ucu/c4MNHMlkjcVMHCL/uZctn2TLzNv5hNLWShc6Pv5fY5TJxgfb1YeIUF
9fP33NSIW5jnHs29yMKTudXP185mwqkq6+miwyxYTGmo0mYxMXJq86IHESzs
fyU0L9aOCRnGSoZRKAsrBxtk/8xkInmfQuHx9Szcm1Nlsos4YeijRa8PC+W7
M1z+2TIhvf2iiPkyFgwzLjKOE8s2HQmNWMCC2rfVgXTiwdZDNRW2LLBPKZVi
BhPax3vcR7gsDMRsfLqR2Hll6DY6g4WCgHgfFWKW5JYNzjQWHnvYSzXZMOEi
dSQ+RI6Fk9PtJ44Sb/Ro4x0VZmHjatukxcQ/EtqvpZOcNrUOVCkRj//a4Jg/
xEQFVaah15qsL6rS7w7J7W2zzb7lxOyCgDn3SE43F+zSPU3MCZve39xEchex
2ngr8XXdspA3YIK5mhPnSlyrYrOnt4QJw3GzGkvimJokic/XmDj+xj9Slzhi
UjOpL42JIgvfOXLEr20P7elJYiL06L5LFGK5rzdM3sQy4RnUYfnbiomP+RWa
rXuZyLJ2S/xO7HKaUlodwoTbxyT7AeJmV6G1Zf5MDN9RfttHfD0y4OxVdybM
NGePfSSufNhRds6JiTmblmj8Z1fpWTb/nduTgm29vcTZDzbG7eCRvj3R2PWf
T72fIRdgQHI3GZX5nwWcE+2XqTGxw6D4Tg9x6lvro/bSTPzUS6zoJl59/fsK
MwEmlvWtsn5HnGziSWWOMWDxM/JxO/GL3V9NNb8woGy3bbiF2HvLlIryWwby
23qW1fxX71TBDOozBiLayvfcIc73/yBIrWbgnIjMnxxiUTfr90rlDPjkzFqf
REz3F5+pdZOBVYajbruJE8x8YthZDMh/Zq30JNZ6+1p31lkG0pu5AubEEWYt
0SuPMuAngS/ixKdNdOR3RjIQmPXr8mtLJiKdbK0uhDKQrBxYd4l4/bj66pp1
DDT+FO9fS0zRthn548XA0sDtmdrEsgePeFksZWD1qWvRrRZM7FkVMrHHgQHF
Bc6sSOKz/0rmV1syoGRz1FCbWHvB6fPqbAauRfG175gzsTAsafVebVJfT8Ul
R+JzjxInuhUYCDZwWNpkxsRRn3j31n8GKClwO1rOZ6Lc6kab97ABstdWuGoT
y+uIPPz20QCbpPsK9pJz871TvOtEhwFmimBeHZeJw79+rJzRbACup0i+BHHt
TNNHI48MIH15+fE5HPL8sG71O3fI/RMGkZtMmRA+oCCy+ZIBmEoCBqeNmbDX
7nLzSjaAuEilzmk2mfdShQIr4w0QdS208pARme/M/k8RuwxwrXBekC2L/D27
vr3lymYDON93eDLFYGJBJH9/1xoDXIgUX3+b9NH3wuD9Mc4GMA5+8/srnQlV
V5nwb3MMQF+FBdt0mXAsNIwPsjSA7Enj/R+0mbCd0WedrGsAD+a+tac0mJhN
+719oYoBQtuGdzSrM/HpxQqKlLQBPufTTMdVmYhbl76s4bc+Ds7pClVRYuLg
aO/a0CF9nI87PWqsQPLtLLKd9Ukf5iIhkTx5Ju7MjF/z5Lk+UvGmQoT08Xy3
1OKSJ/rQO1g7+UqCzAduW1cx9BG3N27DWTEyT5fLZvUU6MNNaH5rpyDJVcHb
VJWr+jgQGRocSPre8dz2uavS9REZ3ObTPsnA3SeDbvoJ+uD0Ltt99A+DzO+p
Mymb9ZEeyD4h+I2BicgugQ2B+liyekHZ934GrG5FRDn56MNg+vLT+j4GMhxM
XJyd9dGj8YU9u5sBMcE5/UFz9RHPf8boJLmpmSdskmGrj/c1IuEBHQzs8Enl
LTDWh4/vuiz+cwbefTcxL9fXByXtqXlEMwP6sYOr7TX10fJOPCO/gYETfUo5
STL6OMZqO/TyEQNRJfl15iN66C02rNC5xcC8qj1/3Ab0YL7fW/tePgPZVEmV
o7166BN4lDw3j4FbLyrWWLTpYWpALFyG5C60JO7mjRY9uHVbPlqeysCc8r2s
GU/0cO7W7HdRyQx876B2Jt/Tg9SsVI8LCQzsNw1ibSzTQ2LV7MzYIwy43pnf
vLRID61Sq096xzAwVFQ4f/UVPXg9+DIPexjYviB3ccIJPdBj3p49GEDWv5LR
J3dUDx8WeieV+zKw2d9jKC9GDy6K+tqdKxl4rHbAmr5XDxpiIwKdi8gccnge
MrVDD/dKUgLK5zGgoHDuz8gWPQxXtAQfnMXASu/eQY11enihvefyUx4DmcoV
s93W6CHdJu2zG8ntoa1nKjJ89PC09J7gI30GWp7Ufwtfrocc0f1/V6kwQPV/
42ttr4fC+pUfT/41gMqb1VF8Oz2ELpJWPjZqgEbFCS97Gz1ESeclbh00gNuv
zqZUnh5i6LOr/70zwKVb1uZfTPTw21/j1uU2AwgHff7sZKQHn6s5y61bDLCb
oVnnqKeHHR8+0vRAcr1YrqRXWw/Rd4xjwssNMHul5c6zGnqwypujcr/IAEfn
fP3EU9bD7rLJJRIk1/MKIs4ul9BDi5XH94qDJHen2wyPieqh1MWicPdeA2TE
CAS+ENLDhPf8Bt1QA/RbyatkTtExK/3ag1kkx8nCH6x1J+jwaKSOFHmQ9zv4
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
BgTmPKVqYuhOzA5jYtqXLe+8/2pgQn+++vM8GtLyIjs6ezQg3LQ2MJZ4c/o2
geWNGnjkkHnQgVjgu5Pu/dsaKPEeyxEnLnO6J6abRvowqFCo4xoNf4/qxkXE
aqD5dHhDMfHSkIDgpyEaEFHfyD5NLGA6ckSd5KTzociKcOJL6ndvrpmlgYez
g8M2ECvoy9/IYmjgbca8u17ELmuz3d/JaIBd/36lK/GP9JB9Kr9okP09b+ci
4j2V10aWdNGgOM9qniOxtD2ORdeSPjNcOjyf2Kpqlkop2dfNClPX/jNj6YOg
L8k0CA3duPifHw/1eGhG0fCttPTHPOK9EnOLlm+k4ZHw4S4H4twXXk7HXGnQ
uZIWP4t4qDZy5LE1OWdaLsuK2Ez56X5BXRquWB7uZhOvpBtULRCnQeaM30ca
cfGE+JGTw+qYSb8aIEK8cSDr6rvX6pBJtzvSn0tDcH/WkPlDdZwSC46tJXZ0
nMM9naeOuUr/jqYSZ1sybMZPqWPHyXk1G4nT9/q/DopQx3SJ1WY28VuplV0f
A9XhFB+a13OVBo+eAtXgxerw0l5QmkjcfHPF8klzdYTcbwaPWKXQ3TNNUx03
DSamq3NomLjcPeYkog6XCxm5i4m7iizHhIbU8Ofnnm+Pr5B+Dzqj3dymhvir
TuKmxEmfTeyuVanB6/Q7btxl0q/faUpnrqmhfFQrvTmbhlaeS0jiKTUy59SP
ixCfOR0tkRGhhlF9JTP2JRoepJoUVq1Vg3tsSuvMLBpOdTI05lip4Zzav+96
GTTES10IyNBRg/7ysqFfaeScF98uUpRQA3tfw8eSVBoG/Z9XZ/5QxevmDmW/
izRA+qHXvLeqOJmgXvf1POlvjeuM6RpV2H5ePWdtCnn+RaneF4WqaG01rnt4
joZM31jhxkOqaO+V4/FP09ATUNs8tEUV2gsnrtsn0fA07f5KjpcqKneZB1mc
pEFq7erlQqaqOBXz/XfNMdIvz95oXlRVxdoDWdsDj9BQeSjDzVVQFT8tpKO7
Y2lI3dp4RvW1Clhadg0HSF99HZVsPFOtgsXxitufRdJwdIXVFZNiFejpTO8S
iaDhSdfkjLLjKmiMWJ+mupOGRR1iI7l7VFAVtuPxaCjpW7uG2eXrVKAgXLei
eAsNd3IWR1nNUUF+dFhL8wayHw0PV+WYqGDQVanFdC0NY0HLrlvQVOBzJc0/
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
vowwIZz3szruQix7TObimoVCGNr5+a4ycUfHZNcPmhDeCwanf6mh4K/69yf7
hgQRcelbRw2x1omVt/89FISyzD/Vm8SpIfyxsHOCWCF9ZuoC8fDP8U+fNgni
bsBsi5PEv7cf7XGzI31brb/mCLGpldD8e3KC+NmlyYglXnKpfp1+LwWn3RqN
DxEfUPLJPFZGAe1Bvtp/3jXg6DJ8jJxzrcWpGOLkLapNXqsoiNR7bXuQOL/Z
OqyaR4FOlnFlBPEird50C2EK5vDG7oQSS8yTvXq9XQAz++3a/YnnCK34xLoh
gIdiIVWLiGUF3pTkHxBAQb+nKpt4Va3zllluAtAS9IsTIH714eaG1wwBBNRs
KWmsJu8fqxie/jFdlRvPdz5OvPb3p5HNF6erJjbJjdgSj57xixxzmK7aNr5w
xdvHFFgKP5qR2T9VJaErobmFeOB0WeuWU1NVwXdifn99REGrd35/4IypqhKz
f6c9ia/THxtEf5isOmT6Ma3gIQU7N5zTbzw2WdXZP1T9HWSfYtRj55lNVh25
q0t+7VNgIrTzw2DnRNUvr88WxlUUeBk+e/Hk0ESVJsO0V+8BBWFnrIffmkxU
LXbZEjl9jwIuc3O9Ydu/quu9dXeqKikoUCobKIz6V8VsVHYJvEueZ/rsw06j
f1XZ6RPjn8op5PfaTYuIF3+rWBsF9y66Q/bd1WPDo/1/q34suhQXX0rBqYsN
P10N/1bpCfn2Xb9NQWB5i9KCA+NVt/nIiSyk4GVZcUKx0XiVFXXeKZN8Cr5p
lJhtefWnasP90k8l1ymYUeu4LSL6T9U/x+6tStcomLjyKeeN6Z8qjzLhf4ty
KFh6YdTiTOfvqoGLIz7u2RTsuHpu1+Ujv6uUwpQCzTJJnum0le09v6r6fsx4
uO48BaED9Td1jv+q+iPBnr/+LAV7++IXveH/qgoUSzIwSSJ9dcq24E7Mz6qB
a3WuYkcocNrQJttl/LPq4QyHZrUYks+og59iXo1VZV67Tf0aScG625HVbuyx
qojD1VFN2yloMV2udejVaNWtx3TBjmAKfM61J9hFj1Z5STHHs9ZTcLSpuM+9
80dVWl+d0WovCmL9F70oP/KjSvL8vJ5ly8l59z/oLLT8UfXcZZnM30UUrD5z
osn/zEjVx+HfI5ttKbjjYbFeZ95I1RXJEHeeGdm/51M7I0aHqwSdXPblGlFw
kjb0VtZjuEog9dOVq6oUbCxTOL5EfLjqfxTcdzzUfxwH8DOy19nOujMOd0gi
kfq+VaKorEqKKAmlhDSkFKWUkVGykh1llZHki+wyMgvZJHsr8/f5/fl83Pc+
9xmv1+fcP3xqSN7KPAylV/lEsm08p/EtXcMVZ1APaEUtmz/0p3DX1AdBddOE
Upbt0q8jsibxlP0rgoRhQqkizdfmLWkSP1juKNj7k1DKPdW6srQwjtMNB+si
ygmlUT6izWeL/uA6pmoh9cGEUgHbeRHzrX/wWsF7KjvuE0oP+h73LkwexZ2q
p+/reRBKgz50aE09/43PXe25uvsEoVQsYDd/BfE3vnadK13ZkFDqZHlcmBQ0
grfh9R2fdhJKG/IWb5o8GcaP93rEFIgSSofO+Phqcg3ju7N/ssmyEUqtma9y
JAUN4aJb6uiWU5t45PGabPnIQTzzYLEALW0TH1mf4pr63I9f+T506iL/Ji5l
KO9uZtSP0xMtHzKOb+CDysq5hzv78CQF+/0N5Rt45h6WANJKLy4RI7yDwXUD
z/XcR0ul9OJL+59fvKC/gV96JuDiZNyDUzSv7iSQNvDwa6EG4Rnd+Fenad2a
0nW86ssfxs3eLlw4MG18KXQdj/yznpoo0oXfuTUnfcJ+HYfQmssxIT9xlhLr
NxnM6/jz2MZ9Rm/a8aj2E87Ju9bwIKHCOC2mdlyqo0Gwh2MN90hO+jF7pg1/
893P4NzPVdyZ/ZbLV0ornpuXY2/hsYqnZS6SRh+24CNjviulsIpfyqk0rp9q
xgvY9K54ca3iDeYmK3+qvuNysVDV9XoFlzgv6iCp9R23KLj79v7FFdzSMWQH
Mb0JZ20LvXlTYwVfUHPeYqvWiDOPjBuerPiHa9wTt11U+opz7LBKWOz6i/f9
ivtUqVmHL42SLLfG/8W/MZpyjByoxbvLr/Hi5/7ifx8/+7x8oxrfmLpyamh0
GWdL9Jz68bIKP+Pst+SVvozPLGi//YNX4klS669cLiIT5tuviVfgNB222HPj
S7j95zyvHpMvOJnh9UHn9CXc9ru4lOmTclzG+kF+o+MSbrFyy4LOW4Zz5InP
fRpcxEWPtEqyJBbjdw6GbmLNC7hh0L4S0ulP+IZ7sefZpwv4zve+p4OlinD1
EPapKf0F3Me0dO92vAA/xsSmblwwj/NFKLmrxubjcYHqQL4yj6v137pG8cvD
bV/s+W5PRa93SIT6XHqPs+W12x0Im8MJfgFSH1xy8eK/MDZiOIe79sTZX76e
g0d+52PdXJ/FXRkSMIJhFn5rAneJdZjFS0WYQjUD3+GHGG38FEizuMns060P
BjJwQnNCjVr9DP7D9N2aR3EazsgV861m2wxuqGD6LAxS8Q8iJuoFVdO44VHD
fbUtybjOQOjJccVpPCRe4+QlaiK+7cVf5ZCxSTx7UyDeZPg1rt8z4cx+aBJX
fJ3QrJ0bj2tso1olpE3gthlkoY0/Mfjfxouc+ufGcbAynItojcIfNg41nMDH
8JDmIOvlH5F43Y8J/RjSGD7jb04PWnqOU2f6iCLX/uDkWL+4CuUI/H7Sm75v
DaN46bXpq0xeYfiXANdL5QqjuEnGm/6cvme41JKF19rd33j8eMOTkd5AvPXe
soep6ggez7WlOmf3E/yW3pnMev9hvK9T5cOvL49w5x2b9ml9Q3jpF1/v3Vcf
4tOeqsYjO5GjdBdf7/fDi+lJ5Kchgzhh8k3qT937eDTP1rS43wN4n9TtyWxL
H3zN+lKOzJ4BvLS6iblu4iau86vsXeifPrz0eNvh+HFP/MAlvwuP9vThfS2C
NtMKHvgox9UzLNRenHz3Iq/uq6t4UJ/FP96GXzhhJcmJN+4y/sfD8YXWtW7c
R1/qXryTM56UO6DnL96Fl07R28gxDnhS9SA3e9lP3Gf7nsy7aufwSy2dEtXn
f+Bwv+VWCsUWl/o5Fv2VvQMnEHN15lqtcPuNI1/I79pwgmmpx1vO4/h1cklb
09FW3OeIIc/WX6b4t5p66ZHZZpwQ42JneMcYjw2wWHYO+44TCndXWh05gPc1
fy1y0mjCCeRu4xohPXz9wtnXP9/U44QNFwfnu9p4uUvD4fU/dTjhirSp62V1
PPMa3d5cqQaNp3TocqwS/rpLoHPmQiVOkBrZ7jVBxuXq6dljyeU4QTHc6tO4
IP78Dd6fUYXjhBmfDIUIVrz2lb5NMBThhL9dIYXqyyWXvxznSP/4ASeYXLbY
bzhQwtLzxdjYPhPNB9O+1Fhecrv89d9TFok4gUCscnzoX8Iyy+SR5R+CLCpU
Ybh7z9rJA3I2FzwxAuEor0plxh5RX4M32z9FYwSTL/ZOKq171BV1a39NpmGE
ppOOOtZTe/gSv3rnbORgBONxQ4clAqbKus1x7EEBRlirSZde5MXUOGxtrnB9
Rr7DmzZHwuTs2vk5D5ZhhB1TWaIs8ljrwklDK84KjBDvxP19WRU7pjkDfPVV
GOHvueaD3zUxyfXlJZGgWoxwmCmV+m431mC868rpI98wH0kGrqyYfdiHS2pF
NdyNGOFVTlbn0YNYjUrsiuxIE+bjFXXiGqMJVrdrIXlgfzNG+LjBajZqju1K
jVoTSmzBCIMaL36ds8RwOJv0ntCG/pR3Bae71tihNl7jHOt2DJI3jscl2GG5
Iv8ymIs6sFLnpXd1vfZY+/Lrh4lCPzHCzox1s9uO2Lj1yTe+rp2YTw5l/JD3
JSwV2iai6rqw+AIid5+7K9bJ1aDZK/sLIzyZnz7d54bpHHt57cDtHjQ/Lq+Y
h9cwatmX9KqWXjS+3AtxpxvYU9G2GVpEH1aa1RdqHuCF/WB9TFrE+jFYHFn7
OHEHkztn+1t3rB8j4xKY7cF72Jg8u8d62ABm63/ByhnzxeLPGgxv2z2IlZ7S
YM0++QCTf4E5tg0PovXmsudvPsbyLz31Pa45jPWJlghrVD/F5jTyWI3GkCV9
TVjxYGxOiK51J24Ea5LVtT7m8Qyz2dEnP2b6GzMJtB+vkwnDqKNfFx8xj2LZ
pEX9uPFwrMHSosMifxQjS2o98G98jjXsLmA3vPAHsz335o7beBRWFpGcHlg1
hhHKGjI75WKx32fuDbd6jGN9Vcefy99+hX0VTOBQkZnA0vjutz/dl4BJhaec
Xbk5iZkE0IErLhGLnHUctZebwmbmMmOb2ZIxSvbkRl39FOYamevozZeG/c3y
Si7imcFKw6l3mTLfYHEBS7kddjNY4cZqo4B1BvbjZNxlxw8zWN/sZRb22UzM
rMBAr+vELAahS517L2ZjBrDysjBtFiucvyJocyEHK5J7Jkf4N4tF+kTX7rr9
Htuwja6seDGHOd48NLw/4gO2Ms7jtntkDhNVzJPcWZiHRX7Kvy2iMY8pDu15
fFaiEJsQPGX2u34ecyQJ5B2w+4xlfjrBVvJvAWNr0V+Qqy/BMjnCzrLvW8Q8
otR/zVFKMdHgM+EpTxaxSH6zS3velGEKET/iGklL2I9+Len918qxmmPpVEu7
JaxU7yxl5sAX7Jhf2BA9dQnrY+WvubhagSX7kCYy1ZYx2wn3SrOeSiyuJObQ
KY9lTLFJtZynugrL7t7OfrhgGTOMOz25Nb0G2xSh267q/MUIAz8VFAq/YZkn
I67aaf/D/g69Eq2tq8d+CGRcFb7+D9M1mgl4PNiARd0Lfs364R/mmBt2tCys
CfMKO78aRV/BhoyjwV7pO3Zewcx7l8MKtrRXLFe2/Dt2SY7SKxi/gu14lzLN
uN6MTZWQnl4hrmLh0g+jFV61YP2nTV9NG65inRJy/m77WzFRy0iZlLurWKaH
weX7kW3YjuvKyR/GVjGORkedHIcfWBVHz9jhgjWs/f33fSGodx5yfEyaw2tY
uoKyhGb1T8y280GqM/86FhR9ya1JvQtTPMfjX+a8jlWlTr2qmujCVtR12gci
1jFPw1er9950Y5nWnT/NStcxB4moEn16D+Z2RCNOWmADW/ny56bxTA92uWCi
9vauDcxCJpBTqLAX+6jO56N0bgOrYW3ZM5/ah9FiE364ZW9gY1iBnarJAPby
m11O095NLD4390vC5wGM7DBjlXd+E8O4dTJdlQexbE5tmPTfxB6vRbYL8Axh
37Rl7E7WbWKGAfG6Iz7IlelswWObmOaTUi+uxSFM/GmLHfcWAmy4zk4f7h/G
ApLNe6NlCeCMx6ecPzmC2a5O2pxXJ4CyTLd2XfMIJm18PrULCOAWwS3qVvsb
U917PqDpNAHwnw+0Gar+YF3t0tfHQghQNhUytt9wDOPaJftXMZYAZp6OH758
HcMi78/nir4hwOOj9bsc28cx2quUizylBMjPNYp7ZD2BNWw9XCr0lQASWd/O
/RyewORJ29ea2gjwUtMmjLAyiV3g7OJwGCPA1oyt3N8fTGFXO96e1FsgwJ/C
AfYq/mnMfXeVf8s6AWIPebmxic5ge14GZkjzMcCTmwm/RnbNYgGp/PTL2xig
NctQffvDWawjb8tlEW0GoM0GA/P3WSxmj6LFHWCA3feUFFQc5zC32gufHh1h
gEEJss69D3MYX7K6tOoxBvjpt+u2GcM89pB0cTz8FAPYui++s4+Zx2Q8Se/S
LzBAjOSvqNdj85hH3UTiKRcGcK4syjHXXsDWpSu2NLsxQJ8HkY33xwImKy6v
KeDNAPU1DpyCiotYTFQpue8eA8RT3pU+uLGIJb44997zIQPw/Iq4k4J6+u3p
quqWYAaYS387oeK+hEXlDlibhTHA1LrrGdq3JaxLyJ3j/AsG+DAiOBUpv4zt
yBR4syeaASRbwlI97y5j5RUHcvviGOBt2Who6c9lTKczKME4gQHC2fSz3DX+
Yg/2ma/4JjMAh56mGfv4X6wWShesMhjA5Jha7vCBf5j9vrz09Xdo/6zdlqQS
/2EDXx9OXc1mAEzmwUrO5j/MZemK2cdcBniZdDss+vQKtlk2crHtAwPU3N0W
8uPjCqbQf6elOp8BRgu9Pp4XWcWOm36TCy1kgP2bLs3YtVVspEh/Q7OIAWKP
P4s817KKrURTGfI+McANBUpF/bY1zBhMv/N9ZgC1HAM2r5A1TPWRmpBRCQM4
/rQScJxew5p8Xl47j6P9thALfnZkHeNtehtrV8oA8jKj5IV369jsYoGOXhkD
WJ7ic37KvYEJOwivbSlngDuH1llPuGxg+7z4w3KQf369FW5Sj3ppUJWr/4UB
7Gbmk6+pbGJNemu8FcidPTmN5YGbmHkHr51qBQNkT5ESNKY2MWp3vfVDZMa1
G23nFAigO2SB1yNTxup0ik8Q4Nf9RYylkgFcHsRXUh4RwNSDP3ob8ofmpI+h
hQSoeU8INEU+F5Z9kvsPAX7e/d18AVnOZOx3sBgDtB+Np3kin3UdSRY9hNZR
/NzsDvK+09WtybcYQMs6jf0+cleKdZ4mOrczr5h5fZEP7jF8VNXFADnhXDL/
2+aVYNBxLkawKlVn9EN+wnGGdUiXEcb7Oy/7I5cVzGm4uDDCtTJthWDkPpax
EzOxjCC8qTEWg/wovSHnYgMjKI/u9cz9//W6j36/Nhgh1OLQ4+/IW6Q8BPZv
ZQKVoPt9q8hN8xGvY88wgYy++c7tVQyAq6e6jwYzwWyohvFN5KB9WKNMKRP0
8QS3NyIf+SO3emgGeTE6ZGc1A0QxXcbOkJnBwlFfPQ+5ZOerYWsTZpjCWdwM
ahjg8oOvO/V9mGFj8xvzLPL3rPcPBLKZ4dTZjtj3tSiP0cOk6l5mMGeKnAqp
Y4C/t7sMbXi3QG5meErAVwYQHiWd7dizBSyaDNwTvjHAQJH5J7XLW8AwgIHQ
Wc8AhN47GY6xW2B0rmZRvRH1pX/tife3LSDovXs1s4kBSm0+FLqsboG0pzc+
HG1mgMQ9aiFaNBbw1Z4uF25lgLSyz+4/LVlgzz6Lyi3taDyrgGpTfxZI0bp1
QuoHAyxufXMGH2SBrV7wpLmbAarWjqh28bGCRVLIG/teNF7tqd6a3azgUn9z
WG4Anc+VA2sPnVnBQPJBnuAwA/RXNRMFX7CCZPHUU81RBnBzoGdf/sIK9/mf
dj0aZwB92qpzxDQrpO7P5eabRudjVPFcz4ANWnjbPuFL6HymPPUq3Nhgw050
Y2yFAfie7L/NHccG+Z8g++gmA+xKrIepeTa4GZxYWcfGCJ22FDlfKXZoqtZv
HORmhNr06UM/Ddmhw90lYpcAI1xmdtaviGEHKZZej7dSjHBH+E7E8Sp2YBkr
JdbIMULJGXaZ5Gl2KH5Od1OgM4Ink5uEmx4HzPRkmubvZASOA6bKU04cYBZa
qTqKofGi2oopoRwwtF3ryVkDRogtD+tM7+eAxGV7A80TjHCkiV19g40TRnuH
uoPPMEJ4YkUcsxonRDKSrbUcGYH5x9uHVG9OEC6SPXr1FiMkaKU6JQhwgYU6
A/ldAiPs6v8k7baTC3LuDBx/8o4Rtiv8EZ08zQVZqhmHSgoZoea+j2V/Ehew
4ZtD8k2MQHr8bdqyhgsyM9/onO5mhPZF/ks3xrlgVOtkxtgoI9yLVPqbocYN
SvdU//EzMYGhBv64xIwbLLuCLDL5mMD/4QKTpwc38N49Wp0kxQRnhedXmvK5
Qa5LNz15FxNEvN57Ql6LB74qVDKw32KCpKKe84eP80Aus3RfUAATrFF9ngtd
4wGTIPcYj2gmSNtncd0vhwdCrZ9E2JUwATl4iz6tkQf42Zo+ODUxQQ+p9srl
CR445MZ4vWWACe78arZrkueF59FDNvVszKDCVHl7Uo8Xfl0cVbORYIa9u1Ri
Uq15oUTJc8NUjRlKk0hds2G8oPzW4+W5k8yw8oVw98cqLzTYO7zRQD1jeiKi
9JydD/oXTj87WYl659PoKCjEB8cniPVtncyQkiLQHkjnA4J9i2MryxYIvTCz
+WgHHxhX7Gk6LrkFMg4H37DU4wPtTvkoNY0twPcn/6LHcT4ouECmjZ3dAhxt
qcultnwwdPVcfe2tLfD6AG2x35kPOlx9AwlhWyAFT/R7fYcPiPs6h9wqUE9p
Fw+IJfGByGLPYQc6CzTd9IzlfMcHTtqTViv6LBAmE6jUkscHTHVD64O2LKBV
seA+UIXmZ3SmN/8FCwizYPdpjXxw/s2096v3LKBge/+8YQcf2HcEunU3ssBK
2bIDy2/0/h8Tw6bsrHD25J0/KVNovU+YYx5TUQ9Jr9mlltB4E4PCgvtZgVNq
geUZMxEc0/xDpX1YwT3iw+cQaSLI7I0iMq2xgkOXw+CEPBFsIq3ufRFngw7e
qUyKMhHiiFeTm3exwY2X9k7CO4nwurw+pfM28g3F5fbdRKgYcT7QHMsGT7/Y
Ol7dR4RidWlpYZwN2uMNjDWPEOGSbnT9XUZ2OJ2t5nrGnAh+m5OQJMcOhzz+
/rS3JELNSV9FfgN2uPGMssJ4lghZg7dsqp+yg7fm2X0v3ImgLBdYeE+cA7K9
RaxTrhPh9zUD6MY4QC/6/FiYFxFGJZr6btpzwP0OBSkuXyKkOUZM38rkgNz1
srQXD4ngsvEgoruFA9T2bb/CFECEkGM1X7z/cUCn1tZA7xAi+KiRNm7pc0Jn
vuaPp2FESBJUl227yAlte9f07zwnQkNPLePFUE6I4Kr1Y48hQhjvrVX9Pk64
35p3IimOCN12lXyPWbmAUYVsKvuaCOuhQj+ZtnKBrsJ0fWMyEb6eLTsWc4cL
rBnPWyunoddnU5wl07lA3kKv0DmdCJ1h+GhnGxd0L7aEPHmLxou4eLGFgRsW
Zv2igzOJID3Y+XiLKjes5lUHXc8mwoN4ascVK26wleaR3Z9LBBWBiwN8/txg
3SFMCsojAr/q2qnZPm6ICNyzzFVABCLrnTYVHh6o6BZzdi8kgmJmpGz0Lh7g
LTHSKP9IBMZtLF+0nHhgK6+82EoREdRb5VQYX/CAe97zX+LFRJCq5//xt4IH
tBJlDRU/E4FFq24HaZ4HukubyeQSdD56uz/aU3hBpYi8jRknwkqY27f2o7yg
nzO7rw0ZG3/defkOLwx13JcPLyXClUETI/o7Xjg9cypRr4wIM8tXfDm6eWE6
H572IEv/+OT2YAsfNGnIZF8sJ8LSWrmjkCQffF7n7fuDXNb+2eyDBh/sOak0
dfILEf5KBtrYGfNBomXQu2Lkw2V8H8Xt+aCk02SOv4IIY/07gga8+ODunfPP
rJH7+zjY88L40Pd1uG0scvrtCvPQDD6gpjrvaPnf6+0vbn5BvW5XGttEznEl
bDh18cHC6kdzuUoiGE9ZZp6d5wPBVy+N9JCHJu2aznISgfy0If0Ecmii0BMn
WSJMO7cfckT2vrDE7LmLCMeOvtjigdwoL2Xvj3rQpmeS54XM2n64IeYiEf6V
PdbwQY7+u+aYh3J8fR+LzX3kNjGnk03RRNBOzeXyRf5qmVwx8Z4IdjnPxf/3
qdk3jezfiODgXXn+f/PUnHtFHSLC2dnDVX7IdUtfLPeuESFjG130EfKuk43k
04L80CakuSMIuVYkU8JdmR+2x/OtvkCWVft09eF+fti4QdZLQeZfCdOPOM0P
kpevDXxEzkhVKInz4Ifvf0sKW5Cz8CqGhKf8oFu3K3YBeSNEXSsuiR/mz6Q7
SlYRYTP27YPQYn549Vp7/ggy5+YWoTut/ND96KZgAPLDokxu2wl+MG81SmxE
riVWRmoxC8DO6tZr5GoixJTJ9TFJCMCepYt23shHND15KrYLALdsoM5vZO2M
3UevGwnAUYXaVpsaNJ+DYw0S5wTAcyafcRgZZIeL3t8SAI3AoYhbtUTQUYrX
2xUqABWHa2zIdWifOJNDc98IANffHOUO5FampB7RMgF4w1dc/+orOsfA+ydc
fgjArPZnHi+0z3aszmpZ0wLw5432J6d6IlB02mN/sQjCoUKL2EsNRLjRkNi2
LCkIkayHNa82ony+yCi5tl0QfFYeFz1qIkLP58tFfYaCoFG8VP/+O3pdkFFx
p40gaLYZ8s43E6FSMPuClzt6/tCShEErEY3L2PXmkSD4NdHDs9uIIGhUP1Qe
Kwj1PNoqVT+IcGFP6eHcakEoeJR0372TCEa/LG76dwtCSMjbtJ3daP1Txq37
ZwUB667+zNWH7ovWbWXXSELQ+jWlVWIA5WbdjD6qKgQGx1I5DVBuyp6aXYN9
QrD/qaToxCgRbP27neMvCoGTihub4zgR2Df9V1PuCkFxU/gRwhS6zz3O73gW
JgQHjJY3/OeJ8JzO9IjnkxAIPiB63lhC5vjzLL5BCIyHY0/7/0P3xZfTyoID
QsC594A3I4Ef2CM/oD/zhMFLSDXvChM/OP36dvy9uDC84OCzXGfhB3GGcY00
VWH4+e1ehRcPP1xzvVmnaiEMpRINXPzS/FDlq/IwIVYYlHj57wbL8oNK+p/w
1CxhaJswm1VT5Iejw2mJj8qEYW+l8PX+bfxwZ8+w9K8hYXjS8uLY7A5+YDpo
X350SRhYHbbUUXX54VjjUkMMqwgs1OrMMhnwA3Ns2ZsKJRF4Gep4+q0xP2yd
DMPjdESA5LCvwcuMH26rf2wwNRKBqffnJZ7Z8MN+4Rf39S6JQC5vlmbcDX4o
lDzisuetCHgPWRf53+WHz3avnDo+iYBSMDk36iE/9DZ2zx34KgJqHiIMeyL4
wUNiJDntjwjM10y3NsTww90+bvOovyLQ6yYhFIB6ZXe0P8yOVRR2dS/n+3zg
h0QRloUrcqJgOnvYpxj17JR4dka+uigkxcID2Up+aPf/rNAMouCYvTjv3s4P
mSlsnx6eFoXjdk8yZFb54a+lO+vAM1F4/uhu2xPUO/ImYeBxHBrf7mqsNI8A
DM+HSLFmoPEun7WupgiAyb3EC/e+iIKFLP+tLroAcERdO3qnURQ2rKTukHYI
QN3W8aMmXaJQmZziJIZ62XHXwcV9ThTMrrnY/TwmAB+8Kbcq1kWh2VDersJW
AOKuj98ZYxMDe51ft8WvC0AfWetSnpQY7J12zKtPFoD017n6BoZi4BH6Kmg4
RwAGvq67gpkY+Brq7lAsEYDdgwP1PKfF4K26S6JKhwCMhOU50a+IwbFcTt2Z
QQFI7Y9su3lDDEQeKRz8NYPuiZ8b32LvicF7TNpoB6cg+BdztDqEicHDA+0b
r0UFQcq3TY4rRgxef6tI0qIKgkudo69/khgc4fNV6tMThHBKJitDnhiovwre
RfESBMuaNFbmVjEYWHhR0PFYEPhBJsSmSww85Q6l50cKwuiv2dchA2KgmPWe
dTJfEDimnhy+PSMGIf3Xl/ZVCQLX44PndiyLgfcKi315myA83q27UrMuBqqc
uW80FgXhbXX45xscJGCdEphX2CIEu3M/3HjORwIL9rZYPSEhsLK/1hwoTIKk
v7V9I5pC0MPrF8khQ4KM81LkmRtC4P1jx0V9LRLUuWg94g4QgorYV6zauiRI
2R+afiRaCMzCq/6w6ZHAdpfxa50SIbi0k29tzyES/LzHmzvUKATWeMN08hES
ZPmNLmb3C8Hs4+vZY2YkYFOUupm5RRgu3dPfwXuKBNefxgz1iAjDhTHDxmkb
Esx88+naShMGy+sj3VlnSWCjfihz21FhKHlLFmhyIsEm9UdKv50w+D8QlN7m
QoK9JLp9tocwZJ7Z5+DuSoJz12XN0qKEwS72yL1YTxKERFfvdUe9PnDjvmnF
TRJs/RSnYFshDAUnfFVqb5PAoHz6YOyUMHw5MvD0yn0SZO9MxiaYROBSB7Ml
/wMSVBeKR1mJicCF4w4lEf4keO51oC10vwgUPhtn1ntKgvEXiadPWYmAu4fD
HucgEpyOoT8HVxEQvpJf6RlCgu9SQk16D0UgbzzJ+EIoCZZZXh+3iRGBV4yz
D3XDSZAmo+ARkSsCG8N7acsRJLjVLXN1pEYEdOnSUy9ekOCzoKNMy6IISM4+
LgmKIsFkdoONC5coMFis7h2JJoHqtc0AKVlRaApK6KDGkmD7xtjIsLYodDEH
65rGkcDVaSG73EQUMiOttzu8QvPt35D/cEEU9KXpdx3iSTBm4HXv4x1RsCx8
OGT2mgRP5q6tf48Qha9c9krKCSQwCkhqXnsrCuIe3ELzyC9X3XdqV4jCLwZh
17REEpzwET7/EPV2620j5sNJJLiIPwscRL1V0U2L6Uc+xlA/fJQD9erf/i0X
kknQeuNVfB1FDMZ8DnH2IIfF9UybaYvBLqvB2wYpJBiKu8Q8aiIGK5YqSknI
3j8O8Dx2FAN3KXrfArLGxXBdTR8x+BaQ56aTSoKatg+fx1+IwSFpl9xryMGv
j+AZWWLwwizjaiqygrjNZY9qMeD94e7bhMwjsn95f68Y6HSd/zSLzFvW+kAC
9eig2rtJzjS0vmsO+is8JGi8NT8ljdya2Gf7i4rOycg0XBXZp6COsXIPGkcL
e78TOZj91LHs42icoYcUDPlK+4P7cZdJoCeskbcXuX8n14eghyTozX2wf///
71d8IuCDzsWkvCf5f3+6FVB3NZ8ESlcKsv63/vATxnMNJMhhCtqpj8zLQBo2
GyHBv5EOYQPkR8Yd0bCBch01RzZC1lUONKELi8PER0EVM+TCUR0VflVx8Fnb
Q7RGfpsmd3pBXxzid6kkXkKmOQywfrcWhx3eBoX3kGV7Lp9KvSYOh5nD5GOR
J27suO8ZKA7hjok4jlxDo6btThaHmrwnVmP/z9+o6N9qsTiQwxtrJd+g/Jzj
TspuFYe6WxZ9VsiWMyOtVhPi4Dpp5pqAvCZcV/SPSQK6Kw2MFpGppswPnopL
QHnAsJ5FOgmOsBSf498uAemtW+RKkZdFNv0DDkmAQHlUqXYGul+sv8su2ElA
sVf8cBmybm/StZLrEsB2pfjTkbcoPyZZNbcCJaDN7XXIH2SFQ4o3FBMlwGlK
hD3sHQnO5tH7qgolwOIvU61RJgkCar5YH2tAtjrlLphFgkMLc0daBiWgKFE8
fRL5YaIGezSPJPr9Voi15qD1ZnmHDcpKworBmV8DuSRgMe0RENOWhBjxKT/m
DyQIGqiY1DkiCbqbS83aeSTg3tn8wPCcJAxK/Tzrm/9/Dgb19G5IQkdeQUN/
AQlePxd7LBcoCbHprlnHPpJgnyX/6bR8STBqOa7sU0wCs96qYoOvknC27Nm8
VgkJrL69MGvslYT7B7MfsJaSgI9M7QhnkwJSH8F05gsJNEdcUr5LSIFkcNob
jiqUC4u/FxfUpGA0gpsLqyHBykXy2z+WUtDgWCH+9xsJDDP/Cny6JAUp0V1d
3o0kqHr00tjVRwpMdtC+SjeToL3YXNIvVQqCJo4cKupAeXx7Lru/SAoM3FR7
33eSoPOANgelQQp+GBu++/oL3d8byhL7FqTA/+728RNDJLjNs/ZLjlUa0ofM
Tet/o/PIYbg1IiYNsgW7f50dR/u/3dmJFZMGHukPu2fmSPDeSbH9vKk0cNsM
/x1dQvsz0X804Zw06JuIpzKtovs8IfD9e39paPE7EhbPJA4XTB2q/V9Kw+Kh
86mybOJQaSKouzNDGvDSFKs6LpS79ivvlRuk4aw8bbsf6oXXUedEZXYy3Njm
i32gi8Mmz53e+0QyRCoYTdtsE4f22dTWSjEyCHSMKKtpicP3Zx77iTQyON9T
jjXYJw6La7QrYupkMCRnXQk6KA6TlbLvuXXIcJfpHe/6UXG4FHlw4eNBMjQZ
wi8z1KueNd2Mq6ZkEFw0fKFjLw67i5mmBU+SwXs8XcvoojiIb+6Ok3QkA5+J
kNLoTXFIdbdz1nhAhme7nqqJvETjKX892/2UDB2uG7Kbr8VhhOHm4YvhZMi9
NKouliEOnRZqgbsTyXBecMvtoc/i4Ah+2T7pZBAbShB7Xi0OY+8/nE3PIcNw
ov/LW9/FwY91j1wOTobDhwi93cPiEM3nzhdURYaJnq4xqxlxeH8d0zetJ0NA
waPzXKvIGcHHAzrJoBjrzslBlABbJmlK1TwZ2B9fZHXDJCC0e/eR1n9k8PB2
fxZoJAGGCrPBNZtkaA8ym+s+IQGBZw5bneOkwNhFearIVQnQf6Q5wU6kgGFZ
1AjDHQk4Pr01+bkwBRZejluSn0igde58f5ZCgZCh81v+JktA2YwZOYFKgYAn
nrw57yVAo+z5UDWdAh7PNC7GlkmA7LXp/CpNCmy/zhPM2yMBOemPq8MMKWCe
OrNhISYJnvBGnu0wBZ7LLFOTFCVhTmUq9JwpBZynctXkd0qCmQ1FrOkkBQy6
OiY+nZCEWtXoa/3WFKD1K4l+vyAJUjHGjp12FDB5xyUignqra/Ex3deJAjkB
JVYaLyVBWXTVSMOFAvFvfNY40iWBM8KLWu9KgczjlXTiJ0kYeie4u/A6BWLc
pKrTf0mCTe0Tg5t+FOhrP7CPTV4KbJNer7v6UyCt2vaTiZYU6LH89DULoEBR
ulZY5UEpUBkaG2sJpsAt3VeB6lekQPV5w36PULR/dyVLlO5LweOQX7ab4RQ4
t03f2ShCChoDnAbaX1LgakDhVq5iKdiSL1YvG0OBjs7YPemNUlC1ZOp3Oo4C
FIL7B9dBKaBwfXMLTaAAhyxHvAenNGjdbNYJSaJA+vTehWxpaXBr7J25lUIB
5jGXSwIa0vBbr/yEaDoF8s00LhhaS4PFpSs2WRkUKCNpJRe4SsPR87TGHe/Q
+vWleA/4SYPDCcdlkWwKGEefPlaCejnXEaXplkMBsQILuVRcGm7Ubxv/nEuB
6VFf5nct0iA3x9xKy6OA7c8Xtdxr0mDjrh5hnE+B0X/GtdvZyGC6Le6PbQEF
LtQFky7zk6H4mvPVsx/RfiaQe9gVyCBp7aptUkSB+YO1n5y3oVyuLn7e9okC
PDpz3R27UK67Tqh+L6ZAp+dkQZsJGVKl/30I/kyBrWUr7edPkYHLM0plXwkF
dP+xMjM4kKHiu93vceQl+vR0iivqcR9ZPQCngOjbnkMnvMjQw2ViI1VKgVJu
mwriQzJE32b/nIZ8Tdmcsz2EDAd+B558XYb2o4dedCuFDO7Mj3T5ytH8jvbd
tkK91DppG+OJnPg4v3xvMRkcFrjqW5FHbhdqba8mw+VsFln6F5S/oy7+9GYy
nJzcN38TuSO+5zT9Fxk29m4PK0NO+hl7Vn2UDFn0fEvGCgqcv1u7F1BPP6eK
R+ki1z7jT7XYIINCJynTFfn7ZNnOK+wUKI+rH49DTiv4HB8sSAEgZaRXI8fU
BfnnSVPAZv/9vePIc6oOEX00Cry85MHJUUkBpQgZN74dFCj5OG0th+zZfqxy
vx4FspLehOogL988tMPbmAIFl18yHka228N+6eMJChSGzbGcRm5OteH+dxbN
e6f0vwvIls/6SnddpsCD50XqV5H/lM0r37uJxj37hPsGsrPf9+Ua1Jsh9TuD
t5Fd9wZW84dQwH3gFY8PsjmFtNcmGuVgRuTPvf/He23CnYFyu3NApv4+stue
hYa/KHelMVxCvsin+T8qG6BzH6ykif/vjOsHv0XUUCBQqkP7f7u/MzIfaqHA
rl6nr/9by+vCBfVedC8IatAeIBe1GmXeHaPA4r+b2f7I57w/1H9dpADDKZfC
J8i16VcuCjPIAN+UQswzZOWUcypnuGTAIj857yWy1aXwj8kiMmB7HrdJQi41
Usr/IyMDBrjcbA6ykY9bLU1VBo4wnKgqR87/NvXSUVsG/IwStTqQ5/hMGxL2
y0Ast2Tc9P/P/3rA/fOoDPq9E2nGVUWBfwwfNzhOyYDEZNI7FeRs0qmDOx1k
wMNRW8ccWZRtR5LiVRlg8xwY8Ubef26tR+C2DEwsabBkIpONxFL/PZSBPxJu
Y4PIg4FG6T+fyQDB6/6wdDUFnkamP38fIwPa4rOGZ5EF7DJI/qkywB01cj4D
efOQ/LB5rgyUGMgFriLzsJxIFvssAz+PbvKYo33OcRjn+FEtA3q/T+3KRWbf
uVEZ1CwDCz5pdmK1aH6sFP/dv2RgjP1n0yPkgZEzm4O/ZcBY+WwHoQ7lVOVA
37055CiNL/eQCYqDXcLrMjC7t+buq68U6DJRnZLjlwVLiXd/dL9RQKOv8GKs
hCz4HxG7OIRcKVz8nVNBFh5ryh19Xk8B30hy25VtshCRot9n1kABzZDL9Npd
sqB0w9SR1Ijyq9AcIHJAFlYE3NUmkU0WpNOtTGShdxAS8r5TYHJRjbXEXhbW
vJo7M5rR91cVT/6vy7JwXkD3aibK0e8XgqyzN2Thqezx+p9taP4nf96cfSoL
H0PXxJk6KNBilsDf81wWdPJtOrV/UIA/MmvX53hZKBD0yWrqRPvL6aJp9kEW
xu3LDbd1U+CVbJQva4ksiOIlx+N/UUBdnds6s1oWrsre/pbeR4GTr1TzGztl
4bpUU9aBAfR+7kNFB4dkYSZqbWN2EOXv31OzD5OywF03U3/9NwU+R183syLI
QUHmUJnZHzQf6Xn9CHY5sPFh5NgzToGp/P3DOL8cpGw/73FgmgJybaUHB+Xk
wCFW9LHcXwrY83xtPm0oB7nRHmv+KxT4caPnAK+pHOy1rbVfX6MAi+S/yqyT
cmDOXd0kxSgD1/U6FYuc5aD7/J+tX5llINNUIUfWXQ4if8/qBLDKQO7OoMBb
XnLQSHTcBG4ZWO1dejH9RA6yBE9yavPJQJf+NXfucDkQZlR33C8gg/4u4NwQ
iZGDd8bzbyPEZEDSUOnRXAZ6/zNNI6oCen9ykv/HOjlwknAM4KTLwHwMV1Bn
sxycy8Fr2LbKQODjoxGDnXKgcd+pxUhLBkY+dQq9G0PzsyoefLZLBprtZYxc
5uTAN13NawaTAfy54T/BFTnQeXr/w7KhDKgW0o1I7PIgKub/NP6wDAy9LSu8
zicPP7DlE2fNZKCQdUK9WEQezC8Kymw7jXray7TwT14e3pK+Bq27yoDVjoLY
A3ryEPWPieTqiXr2U9Sy00Ae2gNPS6x5ycDxKqtoiyPysHVjX4qtvwzIn0yL
WbOShz/9u7W1A2Vgc8nwKM1OHr5/Uraih8lARtyC+54L8mA0OGp4+pUMnLjl
wkdyl4dHKu8FopNlIDtn95P+G/LwPvaSw3yGDIh8kboTfEceXPy/P54plIEH
3VPDcY/loZstM1O8VQbs7W53PI2ThyfmAxnyXTJwMHJA+nGiPCzkJDUYDqB7
5VPR3ktp8qBnVbStc0YGDgt3Ov/OkQe+aaH9hn9lQJBJLO5uvjwoXxIgN27K
QABrPutmkTwM+BVWUnlRb2b1J99/kQcVXSfzZWFZ0C/emvynWh7GjzSr90nJ
ghjdjpP1mzx83DV5akVVFtz1vFz+tcjD+pqIsjHq4d2HRe9LB9B+EG4odlnK
ggLz4prWiDz8LWXQvGcnC28rt+yI/CMP2uXWJUR3WQir7tESnJGHGm/ejlUv
WYgMrLZXm5eH5tVsrTU/WZB5Vnpwx5I83OASX97zQhYSfJ8IEdbkoXWv6rAP
6mV3A79LxYY8yN9o0P7xRhYkxblt3Bmo4DcfLFdVLAsjCT4bz1ioMFV9nCdy
UBbqWmXpP3mpkC3Rm946IQspxWX+bUQqTLZ0KsosyQLr3gnGMgEq/CvN6Z1i
kwPtBrs9DiJUUGvd99oF9S5+efEaWYwKr6xKjq2Jo1y/e11UR6ICyWMp1nCr
HIRy59vPSKLPiwrN3aKNeisLBy9JU2FcpfvT971ysPlNQvsnmQrubKuJEcfl
IO/ioX3+slRYTDFfe2orB9/ZRYdq5KhQleSoG4p6GWeoFLsmTwVGwYPWlXeQ
zSIu71KkQvtoafbcIzlwLNonaKBEhXfhx78rh8nBNqPWCX0aFV7HXDpelSoH
XsUcVlLKVJC9dFhBPlcOXiqZ3P+L7MEtHBdcLAcjFe+Yq1WooOcqdeThdzk4
1jV7YO9WKuiMMU0Ru+VgJVY9fhpZXYjKkDaC1p+142GoGhXmVtS1DWflwIfF
xIC+jQr75nYazK3KQb2Rq3oRcsXNjK5kFnkYI8i9wNTReBKOKWeJ8sAfHVj5
CZnnw/noJao83L7dXf5yOxXm78XL1G+TB63xao015CMyslEZuvJwy/9i/nEN
dF6LClnPUA/zZ55GvUHGb17luWsmDwZvnDQWkdMuHLV3t5aHteWcDm1NKiT+
TDx92VEeXpX7/riOvO36aMIV1Lssu/NPspArUrcPeKKeFbmAfj+y39fdlb6o
Z1EPT5/i3kGFzpsOSxHhqBeCVrIayDcqP0q/e4W8RWX+GPLtB4tjNenycOe+
CMUd2TYxiOFPnjzovE5ieors5pLPxV0mD1UCibPxyJcmz+RpoN44N0nvzUXu
26ufdKZDHsILbI1LkakMk/cCUW8mNHsvfP3/80Kylj5PysPOwb0TLf8//6w4
feavPLhKnd7WiZysTz4gz0yFg6lSwT3Ii/M1rqdQrl9oxlj3I1uceNocinLZ
zrO5MIAcyaYi8BXlSC3K790gMu/EmU4mdE4n56/3/m+vV98bdXWpEHhb+f//
Nw/ho/ToawZU4Hf9yzeEXCwrPvTOjAqPrm4t+983c83Nhq2pcFFa0ngE+b7T
i0BxJyoQkjfZ/yBPrxftNvFA+36Y0XwSef/VDA7fu1S4Jbzz7jzyqpd7zPsA
KtgZPh9ZRU78ljbZ9JwK9MO5E6xaVOhI9qwdS0Dj12o6iiBTEkNKCVlUCKO4
1NCQHazmzvF/okIpfvr2XmR929/7paupYM77cc4GGT8gsEhtoYLRnZ6XPsg3
Im6yKPVSgeVBbW8qMt+nB5zy41To+cCj3obMuMz/grRMBZuG5nW2nVSw3+Wh
y86kAK695Vn7kJlZbgfP8CjAXmeuDw+Qj6v5yTWRFOBsxDHPRuSovGshqVQF
CD2fZ0fRpkL85SZHT3UF2GB42+eF/Kk8d5/uHgU4xiRu3Yusdri/4O9BBTBp
2A3GOlTI9Gw4nXFMAfavvJ4rR1ZjTKgzt1MAjQrp7n27qND8FKJmLykAc3Dz
uUbk5U2z8343FMD8KnHmPDq3g4uHqzj9FODa9wsjrLupsM5509I/WAG28wVl
5CF/q6u5dzJFAQzX+tR2YFTQWOg2z8pBn68olc8OVGi9zVO/XKwAcou7w8eQ
DZa3BqrXKIBCkwv9px4VaG+ImmdaFOCD+6/Otr1UGHF+5ODdowDOrIWE/n1U
8PfwqHj6RwF2mUuurOxH9+e5oOfemwqQxZPSfhrlyPLT7DEbDkWo4Aq/nGyI
+m+894eqkCL4fA/ft3EQ5Uu1sSaWpgj5L9MZBoxRn0QTnuzSVIT7W5SeuxxB
+/M1uqgaU4T0VJ8SDhMqSKStCaRbKALZs1zAyxzdT08psZs2inD791T/kWNU
IB5bOLrXSRF4PVweap6gQkDx5EagN3q9QPih7imUu9vv7Z/7K4LY4YTr1ijH
IZhrdcAzRTjdu+NS6BkqnL9a77AjWREuWt720ranwlGxGNHJTEWY3bJJfuuA
7ovdNTlBhYqgqiXXux3lXtFQM+LZV0Vw7TiZ7nuZCiUdLbZzrYpwJJZrh/FV
KrCdChfe3aMInldiO2ioF6y5CRbBM4pw6ss2Q/otKtwb5L34/J8imP4WenzY
G813fdj/IaMSFMk8+/LQhwqH57YyUQSV4NePP0t7/KmQ03grUXuHEuwzHXr/
NQLdr5k3+az3KMGthOXeyJdUEGFNmHY8oATWN/tfesdSoXBIwE37uBLsWQ07
GJRMha4106Z1ayXo4nf0K3pDBSe/VOH080rA/UmuY+Mduv/wocGPHkpA6uXU
bcpH348btO2St5WgtrHjgTXqnVDiwdULvmj8U1+PM5VS4eyZRy/fP1OC0I3s
schatB8+r0bI75SgIWaAYeoXun/eHK39/F4JpBL3F+oNUuGnUlKkXpESxJox
3s8cpUJvFOXHepUSiOm98WiZp8K1F5I6O+rR+jzwjCf/0Ho27S8da1ECO90A
futN1Hu/8p2GvUqwQ9j0hhGnAlBccprFh5XghbXHdUeiAvw9EavbPqYEdxKi
UuJEFOB8w4WwzUUlePZk4d5xOQXglcvYLs9Jgz8L//TnUS93bIgqqvHR4P6h
uLEf+gowVDCKyQjR4Hlp38UOYwU4JOUkVyxFg+yPfh+lTilAi0cVyV6WBr9D
tU9fOKsAIyLd/vMK6HnpHY9qnBSgU9JGuVaNBuSbP4RaUU/HgBzNq0mDpgeK
cMdHAVqP753erU2DpFeiD+CRAtz+21pjpkeD29bpv7giFWDTzoVqZ0KD1Vyr
odJCBQi2jXg5Zk4D+tB+DsUyBVCLPyZtfYIGxq3PJVNqFWBNglF0w5oGhAKe
EyOdCiBkFPpH2Y4GqYUhUmmDCpC4ZS1A354GXSrawj4TCiAo9JFT05kGo97x
1Vc3FODrF47jXC40mN2wFX7CqghsQD/QcIUGbrlm+Ec+RRgKPrjBf40GwuWW
2sdlFaHt1cNLKXdooHDVfuuDg4qw6HBu/wcfGrSEyydFmSkC7NDRzLlPA7Ps
ic3SU4rAGDoPNx/SQJF2JRC7jHp/YrR+/yMaeBwVPfziuiI4ZS6cIATQ4OTg
G95NH0UYVdU1MwykweWdcZnrYYqw28VIty2IBoNDysTwWEWw3iIgYh5Cg2At
Jl/tVEWYOfc8RiaMBiGZn55nFymCJL9bjUc4DVTGvQvuVSjCYZE9vwsjaFDb
dHTYtkERQh3OsItG0oB0wvm04YAiEEwTw7e/pMGNExWSJhOKYPbirczeKBrM
rVp22y8pQrVGzhntGBoIaITs/MChBDzqIzEysei8Kf8MplAvKTpG/zaRDzOr
79SQVoJooGhEvqKBU8uL5wPblcBQOjDFPJ4GD3trXQ+hnuY2C9kyv6bBiHAv
02dDJRD3tXubjmxkuo1Zx1wJ0lkKOw4koOcLb8iXoZ7G791Q/YlsdaGJZOao
BCv3czbtEmnQQPz0fMJNCWT41A9YJtFA18rzj+4jJWB7WnuyCplce1tmLlQJ
qrssZZSTUX7sn6RkxSpB/w6+mcfIvfNX5a+lKUHOs2iBPuSfvn5H9qKePiqS
7FFNocE3/fgm4RLUmyv0157Iz7zUrOZqlKDMpSqzAJnuuP1lK+ql4U3Lk3PI
lw2wXZ97lCDqTOY8NRXly8h/MuMPGm9+rukYckVC3+n4BSVIYkrffxfZzbta
M2pTCXYbZSQkIieS7eVecqBc20hiX5Bt/ga3xvzfwxDXyz3Ifdmds0lkGhz7
cfLBIvKkebBCDp0GZW/rf7Clof13/kgu20GD3L6Vz6LIVArtUSvq1beb+gHy
yJ1u3mzjxjQ446cXthWZaC5tzGxJg0tD71S1kBt+maxLn6MBp9yVXF3kf49U
qnZfpsETLMADkPdZZptY36RB3BXpr3uR1/g/HrjjR4PmWXuu/cihXkSz+GAa
fG18HfS/zz1yk/iCcnQ2WTHtfz+PfXx0BO2zlINZ1v9Oq14PZ8+hwQGZmyv/
+9CSx3PlYhoMf53r1Ue+rvVy/Ug1DZjXOPMNkOXmJD1cm2nwqJCx5RCyM7ky
MeQXDbp1GAKPIg88st+RNUoDSb2CwePI2MPrAZ8WaID3Vs/ZIu8e30qtJNDh
/M1nCpeRtY5tjfnKRYdiXu3pO8h3yk3uNojSIdM7IT8MmWaZfbZejg778h3H
3iJvl33/s1qNDq/Z2pfqkK+28tz4rEuHfqdugynkFs/v398Z0kGwkvugyBsa
gLSTV6QFHbTMws8fQP4UkcHubUuHOws0ttvI/Mu/iKcu0eFRvFB0IXLSkWIl
9Rt0kPwq9mgN+Z3Cvd8MfnT40ee50zCdBuFCk/21wXRwrO4RjEFOUj+S/Tia
DpOOlx/8Rf4c7j8GqXToPZgya52B+lcgqjSdSwd52rnSb8hfOuW2hJfQoTWn
/YT+Wxp8OH5LdGsdHURpPpI1yDwDL9fxNjq075X3PPaOBlPfPh890E+Hh8N1
lZPI3Sr96WUTdODo022HLHSeOgwzEUzKcPUE76k15MaqZaEpHmWAhD6bimyU
k7vTxdokZQgUfqT3Ep3zNA/xwQ15ZVh2mLPzyqWBbPkV3nQ1ZRDuI0ldfE+D
eGO+jfpdyiBbwNzi+IEGmjen5wcPKMOsutLz4HwaJDNbPxw6rQxKT46f/FiA
cpr916XhgjJcqJS8O1dIA5ebK3Npbspw984dk/BPNPT7mn5d9ZEybD9kkLaO
cuW9Sa/7EYrmc2St6HoJ6s0GdtYtVhnUuiNPvyqjwekbmsJuucogp6wYdPgL
DdiUrwR3FCtDydvfOHclDbiybrDRq5XhdpvFqcoaGgQExpZHdSmD7k0n6891
NHCYNL2YP6wM7s5XQ2q+0eD7Jv9gybQyrP3SzxD7ju6zsCbJCCYVyP0XQLZt
QfeFl4X5WW4VeHA/vb+ojQa7ltZ1xUVUYJdNillmJzovSjjlKE0Fgisu+hmg
nHPjL6Jqt6uA753WLUu9NChg+/tFdbcKnFhuHAsbpgHlRZBG4VEVWDqkWOGL
eiBjsLml21IF4gtTfjweR99fvw7G/LFTgU4788CfszQQ3bV1d5m7CvxyrSx/
uonuN53+3NPPVYCpnFV/kZEOQmnzQTpxKug2r7jtxoJyv/AkjylFBWSxibAM
bjrMOnCfOpGnArY6Re8vEOlgSwt/2V+sAqoSX9i1heiwk7Xv9fEKFbgm1l0n
LkkHA3/XWEKLCjjFV11UodBhtaTTSrNTBbYHxmZayNOhK8TS06JfBT6c4rw+
pEKHt1i4s+m0CpCL5k05gQ6jXRts+zlUYbz93aFv++lQ7f3yci2fKvQpznsl
HqTDrbG06J0iqjB46NzHcHM6fNUfILXKqgIppagz05IOum96TxBoqmC9tmDT
a02HROLKNmE19HwxNcPXkQ5XGq4mbOxC43mqeC+70EGqBVf9rqcK9+n/1Vyn
4VRtfxzAUVwyhaIyZEjJOWfvvcoQ1fUzVEKIqJQGJCEkUmkwJEPIPKSQa6iU
IWOKDEWGEglR0iRdtwyFMuT/68X/1Xk+zz5nnbXX+n7X2Ue93v84C1a+ETKI
2ELBUQGx2lfnWPh/sWd+rQUFd2Pt1RITWDDyX4+gnBMF3L3pKVVXWWDsMMaz
8SiOL6C2fyaDBRI/iq5t8qRA2DjpRUU+C9Yzvz5JnKEgfqfY0fWlLLB933Hr
lR8FMkVErf0BnhObBPRCgyg4wxsprIc99fKwVs6OpOCTivvssjYWFAk2xUrE
UrBf0qBToJsFH15vXeqSSMGKwcXDKgMs8AhRqOxOo0DV6u0qZ+zpQsnc2YJ8
CnZqn3gxvIANl4edCo4VUVAVUngtTJwNz/cHGMiW4XqdrhKdU2DDkyG5y+pV
FJhHrPDuXs0G7UThkIwaCioE9nrVEzacfqX6eeoRBTx6hnfe6rLhgtygs1sz
BZ1yO68sMGKDDRf1OvQZBcVOI8FbLdig4v3FJLqNgijpykoeezak6tS/cOjC
66XaVbZBbJBPSzFRek/BhuXF4ZMRbIhq1ZRL/Ijza5DS+CeBDfOrvyz6NUDB
9ObAXfQNNpR53lwTMoTv37DPTbSQDa6SHx+UfKVANrk1iauCDUEWIWvahyn4
bd22e3ELG2LqCwu7v1PQfkIkaN1LNpTqhK2sG6fg83vdby59bEh2dbW9NklB
6kvlZJ5RNrTnFo0pTFPQrVR3+NAUGyInWI9aZih4q6oZ2YU9PhvydKPTbwr6
JCzHBiU54Nb2eqknNw0NsfElwfJ4/d/8iX4eGiKshnrVsMf5Ne4euvNpeCDl
a3kPe+tGBLW6+WiwtvZUitrCgWeXVguI8tOgKDBn6bWdAz+P3T25ToCGmPse
zfaHOHBy1EXXQZCGnSMFYW7uHLhppat4WIgGcelNKUGnODBQV1toK0xD/Luv
SV0RHLCkN/1YKUrDPqmzP8WSOOAX06w2hbYbtI3cmcGBEzZcOrULaSjVjNKe
V8YBkY2/2ok4DYFVPFVONRzQMrs6/ArtWCxm0d3MAZOxjGkfCbyf849yt3dy
YHk1r57QIhr8jCLOd/RzQDHSQiQRzX9xm/+BIQ5EDeXcXrKYhpTjNg7j4xyY
TCg4Eo3unxBOXidIQfomFe8jkjQYeTWbDiymgH3Qb38jWq5aKC9FngLTvB3p
ClI0zD+cf3gXiwK79IaLnuift+TZMhoUOIy72D1Ax+nZ5Q4A5mRCJ3AOfU1O
NL7MmIL8ohtaG5bQUKV+ICnSmoKL6kc7PdEsa+LgcpAC0bzCW/+ga2Z4c7a5
UuCePvZXK9qZiIiq+1DwYD4XjKMjnVhGCgEUPjf/zJRcSsPCI+O84hEU8M3p
h65Ff9R4OMyXhD1ruqxjgo7hvlo8l0GBV9KTZQfRcZIO3DN3KHCWkXTzRBt2
3QuYLqfg9o+X4X5oobsin2brKHh/N6HpElpN7kYHTysFBW/FfePQT69kzgr0
4Lkxwxq7gg7J5xKS+ESBid+nwDR08XBKruwIBZKv9l/IQIvNbQxZjbkttHux
JRP9OTFlmwbm7IXdJcUstGXMnhx9MRr2c79z+uNHB2ZSdWVpqPjo5/7HsdGq
J3RW01ByKDbhj8tuLa/ZoE7Dnt99W7PRLQuWL9LSxXUwlx/PQTeeOjtPbRsN
b2J45ueivctvKHF20zDLu+R9PlpShBZYcYgGFbv2qVL04It6wyXHaJA39b1X
jS6ZtfIROEuDbCc79ClaPu3X6skQzNVAY8cb9Kyr8ER/HA3uTRN8Y2gb7bXH
6tNpeJ0nFrZgGebLw4bk3KbhkCrrySr0woCGloBy7FnTb1Uj9DVr6Z5dj2iY
zhmS9kQPFNqMqDyn4czv/+alo8/HjGeP9dJwpzXGuAMdGPosvuQz3kfYlI2o
NM57gZ7Vse80pN5vSN6OrivgnFOew32pl3FPQdtXT3c48TIQdyNW9ys6PNzo
nrYgA6K1Gj5bZGhgu2/V4hdjIDnvlPcttFlEhGKbJANyK9Zcl8R1Fwj9rRcv
w4B3X9S+cPQv3h6nHYoMHEhYJiYkR8PjVWV2IioMJMy/Lp2A3rwgbK6Ww4Dt
6Pp+1eU0aK/NEfFcy4DOdr3qJrTSbP1+aS0GtNz1ZU7I03DPapJ/rwEDmQoO
9SMKNJQvD+P5vpUBd53zbdWKmI9/VP0DzRjoGzzXfk0Jz4tbpdbCVgxUReQo
h6zAdS4JtIqyYSBcxXSlnzINhevszIUOMJDb0UZdXEnDTHX6Mv9DDLzzjk+6
soqGDg/uozs8GHhyympkGHNUaW6Zetcbx3MZu0RYNDg9dB7l92VAE+Z/DGDT
8O60odW1IAZesZuWWNM0fKi7KdEbxkCGieGVbgbXz1bIbGEUA2+a6xRc1/zp
Q1jqgSsMkGLD8w2YSxUBgUO+aQzoh4aPXNakYV6rpXBEJgM2+ZqpzlqYS5aQ
e1weA3/vNuzauZEG+uL029AiBuysb3131qGh9eXD697lDHxzsnOLxlyvsFSL
pGsZ6G2bil66mYa0G53es/UM5HVPVPsa0mDxU0OlppmBJUMnbMaMaNi4ftBt
9UsGOp/EN8qa434VK2ud/szA2FVZymsPDV+s+79lDzEQ8NjLy3gfDbsLEicb
hxnwPd++SOMgnofC9/PGJhlYlLpiwebDOB9HXvWf0wyI7N6b7+JMQ2ecYNX3
OQZeHpExyzpKw6rissiWvwi8mW8rZuVFQ1ayXNFNQQIV2XtON/vQYO7wOPaM
KIH153qcrX1pWH9dzWieFAHxvriDtwJwfv5dozHKBKyf+73aFkND9zdpG5nV
BPjtH1W4JGBP5LkXprAJRLvUc6Vdwd7352qdXEsgoF5AbPM/+Pu2PT65U4PA
WfN58ypyaAgOdlquqk2gc/vqm/rYw/LAvWcKgID82h6LpBI8/5qHDT7oE9Bd
6HfcvgLHq7KQFNxCICzxYoDBQ8zrq8ZKrW0EMtaTRMNGGtZ9mLotvpvA8x4u
v919OL/yboOvewg4XRXjefmBhpdSUc0P9hHYbOye7fiFhr8aHLO0HQhcqrex
bvmB39+2YmrQkQCXXO6+9Ck852p+QfgRAnUvHXU3cTFgXBKfX+hG4I5p4gVz
Pgb2H7HvW3uMAG9bfp6jAAPCP3YI5x4nUHMmsztYiAGrmCX+J08SMDO+Izkk
zkCbQ5dvlD+B8xbB59XksQdK1Xb3AwmINV0Yva7EgMt7iYu9QQTu60qtWrYK
91Wr7PZ0KIHBnXBXlWKAteqvhulLBDamd47UEgb8d9cYj0bg+Jk8jw+p4+eb
kxofROP1tMmfTRuwJ+c+9MXEEuhVjN0QAZjDjNGEffG4Pmoub3Zjr08PF1Jd
SQR6dvhMiplgD0wMek3TCFS2nc2b3oPnxNoXvlzXCeg/TZ0Jwd4mPpf4nJVB
4Ka4iJ8i9lZ1sCW6JYvAjuriu6fcGBAyzhA2zSGwEC4rax5n4HFKX0vdDQKT
bTxWXCcZOJHITgrPxTykLDpc4o/rIV/7+e1tAg0/KL7rFxn4RNdwq+QR2P7k
bU/iJQbSpXyVEwswH1lBcdnxDFw8F3mqqpBApIIiXYU9jn5Tyu69S0Ap66Zz
P/b4X9Mf28aLMY+/mlca3GLAi++10PcSgudlnHVQPs6326dloJQAn/qNoOfF
DAjyDE4WlBOwf56oeeEhAzNJ2RXB93D+MqH2/z1i4LDKZ5ZVBYFN7j/7bZsY
WBN2s7XjPoHy9vhle7G340Z1+4IfEIj/wTo92MPAUHuwFakkoGMm5Xm2nwEz
h68f2tGn0g+2LxtgoPzvSG3XKgIFNzycq7HXikOZYbPoj30CAm6jDFT68vMF
PyTwhbE+o4S9/uayYGtgNYEJ3mLJLB4C3zX0fSbQl2VZXR78BJ+zx6/Z1RDY
ZaySpi+COfZ4NtqA1rw5pyW7iACrbjZnZS0BdS0/z9mlBGaH1CfOobm/T4p/
XE7gwECWeBsaejU/Pcde76J0o+3rCFzYNaP/gBAoe73YLhP9OLzrYIUm7lO+
a99btOVVpqNyIwGL2uy/JR9hv1yz7eqxpz6vQu5vQb/T9Op4sZWAl5hmpBf6
wnvvkU9mBCQCmZGr6EBL9tkZK1zX90bSNejRzhqQ2ov7Jpm39R36WZAIt4Yd
geVNrSWzaKviq4G7nAi0T7ldkXxMQM/xTsQ57KG07+U1bHTykw0fc7xwH7y9
7/2NrizgM+k4jd87mO5sinaVvxQ6D3tnLNvovwe96Zn4QfVgAnnS3dqOaL+7
RQlHsEfrlw60uaFjE62+pWFvFD+pBXqjjfJKWd3JBEbMWZdOo2WUPcTF0wkc
TTBfeQ6tUzt1aFs25ur+lmg/tIFf0ZdQzLXsaBN/APopu/9AA+Y0fDK78Y9/
8xdH8mLOHvuULgxE27vs0DDAff9o92bZH///9X9hq8Zg
       "]]},
     Annotation[#, "Charting`Private`Tag$78426#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
7o8v+j8TWy0X
       "]]},
     Annotation[#, "Charting`Private`Tag$78426#2"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-25.132741228718345`, 
   25.132741228718345`}, {-17.771531752633464`, 17.771531752633464`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776733499155099*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"7273f396-b41d-4c8c-b30c-dd2a410d0790"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["x", 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "x", "]"}], 
           SqrtBox["2"]]}], ",", 
         RowBox[{
          FractionBox["x", 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "x", "]"}], 
           SqrtBox["2"]]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"x", "-", "a"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "8"}], "\[Pi]"}], ",", 
       RowBox[{"8", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767335156968393`*^9, 3.776733546955433*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"8f75cb39-0ea9-4fff-988f-268c40714599"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10}}, Typeset`size$$ = {360., {177., 183.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$79049$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$79049$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`x/Sqrt[2] - Sin[$CellContext`x]/Sqrt[
          2], $CellContext`x/Sqrt[2] + 
          Sin[$CellContext`x]/Sqrt[2]}, {$CellContext`x, 
          
          Sin[$CellContext`x]}, {$CellContext`x, $CellContext`x - \
$CellContext`a$$}}, {$CellContext`x, (-8) Pi, 8 Pi}], 
      "Specifications" :> {{$CellContext`a$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {221., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7767335480579977`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"78063099-9103-417d-a72b-0fe6255bf408"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["x", 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "x", "]"}], 
           SqrtBox["2"]]}], ",", 
         RowBox[{
          FractionBox["x", 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "x", "]"}], 
           SqrtBox["2"]]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"-", "x"}], "-", "a"}]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "8"}], "\[Pi]"}], ",", 
       RowBox[{"8", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.776733554234153*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"f81c6365-e5bb-4992-bda3-41f7ccb6bef7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10}}, Typeset`size$$ = {360., {177., 183.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$79491$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$79491$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`x/Sqrt[2] - Sin[$CellContext`x]/Sqrt[
          2], $CellContext`x/Sqrt[2] + 
          Sin[$CellContext`x]/Sqrt[2]}, {$CellContext`x, 
          
          Sin[$CellContext`x]}, {$CellContext`x, -$CellContext`x - \
$CellContext`a$$}}, {$CellContext`x, (-8) Pi, 8 Pi}], 
      "Specifications" :> {{$CellContext`a$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {221., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776733554494216*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"57c9e2f7-f81e-4af9-9cf3-0f315ef8155b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox["x", 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{"Sin", "[", "x", "]"}], 
           SqrtBox["2"]]}], ",", 
         RowBox[{
          FractionBox["x", 
           SqrtBox["2"]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", "x", "]"}], 
           SqrtBox["2"]]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"-", "x"}], "-", "a"}]}], "}"}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "8"}], "\[Pi]"}], ",", 
       RowBox[{"8", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", 
     RowBox[{"-", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.776733566818089*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"fa924501-4e02-4795-b223-40ea7a285eb3"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -6.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, -10}}, Typeset`size$$ = {360., {177., 183.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$80384$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$80384$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{{$CellContext`x/Sqrt[2] - Sin[$CellContext`x]/Sqrt[
          2], $CellContext`x/Sqrt[2] + 
          Sin[$CellContext`x]/Sqrt[2]}, {$CellContext`x, 
          
          Sin[$CellContext`x]}, {$CellContext`x, -$CellContext`x - \
$CellContext`a$$}}, {$CellContext`x, (-8) Pi, 8 Pi}], 
      "Specifications" :> {{$CellContext`a$$, 0, -10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {221., 228.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776733567089344*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"668d4cbd-a695-47a2-9665-3e37ca85d743"]
}, Open  ]]
},
WindowSize->{1920, 1027},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 306, 7, 31, "Input",ExpressionUUID->"329c33cc-6863-4f0d-9372-19c489e9c8b0"],
Cell[889, 31, 2745, 64, 240, "Output",ExpressionUUID->"61ca1801-eeb2-4931-bb17-7041be18f63c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3671, 100, 249, 5, 31, "Input",ExpressionUUID->"8e2d347e-b672-4da6-9a75-d12d37475a00"],
Cell[3923, 107, 243, 6, 35, "Output",ExpressionUUID->"f3ed38eb-e7c2-499c-85a0-7886cc97e443"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4203, 118, 307, 9, 31, "Input",ExpressionUUID->"23d6aade-4b75-405b-9f91-6e8dabecb5f1"],
Cell[4513, 129, 167, 3, 35, "Output",ExpressionUUID->"ab35ff2d-6115-41dc-a4c7-b821ffb4c465"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4717, 137, 405, 11, 31, "Input",ExpressionUUID->"af7d1ded-717f-4011-836b-1761b0aea9c7"],
Cell[5125, 150, 5417, 110, 240, "Output",ExpressionUUID->"a83fddd5-8b35-430a-b39a-3b23a3ed1572"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10579, 265, 334, 8, 31, "Input",ExpressionUUID->"1d431945-5c52-45c9-aaab-405b7debc791"],
Cell[10916, 275, 150, 2, 35, "Output",ExpressionUUID->"3fa7c2ac-1fd0-4aa4-984c-f3b6b4bb99ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11103, 282, 288, 7, 31, "Input",ExpressionUUID->"9be82261-6cb5-4c45-b55c-04b8f4e970d1"],
Cell[11394, 291, 495, 11, 23, "Message",ExpressionUUID->"2673d614-f916-4d4f-9447-7ad214a014dc"],
Cell[11892, 304, 239, 6, 35, "Output",ExpressionUUID->"67bbc2f9-4a04-4499-b8a1-6d4d6f63ae21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12168, 315, 467, 13, 31, "Input",ExpressionUUID->"788debbb-f68c-4d09-9373-c095ff8b65c5"],
Cell[12638, 330, 495, 11, 23, "Message",ExpressionUUID->"ecf94f8e-065d-4f77-9f7c-e4509fae6cbe"],
Cell[13136, 343, 502, 11, 23, "Message",ExpressionUUID->"0a126071-5f27-4b5d-9329-0a819b895928"],
Cell[13641, 356, 165, 3, 35, "Output",ExpressionUUID->"4cf6f49f-d876-4d20-9a9a-97b1335afcf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13843, 364, 236, 4, 31, "Input",ExpressionUUID->"f2e0aa4c-a84d-4358-a85d-5c4a2c31199c"],
Cell[14082, 370, 480, 9, 300, "Output",ExpressionUUID->"c021060f-b3dc-410e-a7fc-a51966a6af0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14599, 384, 239, 4, 31, "Input",ExpressionUUID->"dbfc8ac3-e4ad-43cd-bc85-11d48b843dac"],
Cell[14841, 390, 427, 8, 310, "Output",ExpressionUUID->"92a689e7-b1d2-4737-ad4e-3da9bc766b23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15305, 403, 242, 4, 31, "Input",ExpressionUUID->"cab5d372-ab51-43f1-ad91-924c2f3bd850"],
Cell[15550, 409, 440, 8, 416, "Output",ExpressionUUID->"0e112e63-0a4e-405e-a118-8ea05f2efcb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16027, 422, 240, 4, 31, "Input",ExpressionUUID->"3f6a4160-e9ed-4cb6-b0ea-018eb4c00e21"],
Cell[16270, 428, 5049, 92, 365, "Output",ExpressionUUID->"abad04a4-a4f5-4910-a691-eeeddac5da02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21356, 525, 291, 5, 31, "Input",ExpressionUUID->"0f278281-afc6-40d8-b4fe-0ee05d424ac2"],
Cell[21650, 532, 1261, 26, 325, "Output",ExpressionUUID->"1a589fc4-20ef-46fb-b25a-9d2b19286fa0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22948, 563, 243, 4, 31, "Input",ExpressionUUID->"198fa6d5-49c9-4e7e-afad-a7fc867b2751"],
Cell[23194, 569, 1142, 24, 387, "Output",ExpressionUUID->"d6855d65-62aa-4dee-bff1-bb05a28b85b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24373, 598, 427, 10, 31, "Input",ExpressionUUID->"5975531b-c2f3-4d96-b27e-3ab2fe24280a"],
Cell[24803, 610, 2746, 64, 240, "Output",ExpressionUUID->"910e24d5-7a83-49cf-a895-c6c26edf1714"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27586, 679, 353, 9, 39, "Input",ExpressionUUID->"b0a9f2a2-cd59-432f-b7ed-a6e4e9ec90c7"],
Cell[27942, 690, 7612, 144, 246, "Output",ExpressionUUID->"03c30b4a-d6d0-4e36-884e-c6cc5b4a9cff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35591, 839, 412, 11, 31, "Input",ExpressionUUID->"dcf44f63-fcb4-4d38-af38-ef1108ae9f78"],
Cell[36006, 852, 11754, 214, 240, "Output",ExpressionUUID->"e0eeb415-2a35-4ef9-abd1-66188123df41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47797, 1071, 812, 22, 78, "Input",ExpressionUUID->"ac836f07-c5cf-44e9-a9ff-a4484d73092b"],
Cell[48612, 1095, 1745, 35, 656, "Output",ExpressionUUID->"fa1c0f0a-8a4f-4e3f-9679-69d2fc92049d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50394, 1135, 942, 25, 147, "Input",ExpressionUUID->"197116f0-1b91-498f-8da3-3b39471962d1"],
Cell[51339, 1162, 1771, 35, 722, "Output",ExpressionUUID->"92aea699-6419-4de0-8d92-ec4965f8dbaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53147, 1202, 325, 8, 31, "Input",ExpressionUUID->"769ceeac-c234-41d1-b632-35a03501207a"],
Cell[53475, 1212, 181, 4, 57, "Output",ExpressionUUID->"126c12f1-3831-4a6f-a6e1-d463b45c1350"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53693, 1221, 199, 5, 54, "Input",ExpressionUUID->"a5f206db-11b3-4d7a-813b-a08243c07281"],
Cell[53895, 1228, 153, 2, 35, "Output",ExpressionUUID->"a444354a-732b-47f9-964f-f31a4299fba9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54085, 1235, 201, 5, 54, "Input",ExpressionUUID->"33054096-ab17-423d-8b7f-0c403133a641"],
Cell[54289, 1242, 152, 2, 35, "Output",ExpressionUUID->"18263d8a-82ec-443a-9c74-c496d0f6c316"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54478, 1249, 204, 5, 54, "Input",ExpressionUUID->"f3a174dd-7585-446a-960a-bd8089900d26"],
Cell[54685, 1256, 153, 2, 35, "Output",ExpressionUUID->"ddc5bd09-5062-4539-9e61-16806bdf87bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54875, 1263, 213, 5, 54, "Input",ExpressionUUID->"80d75ace-e720-4797-8dda-7f9f698984e3"],
Cell[55091, 1270, 151, 2, 35, "Output",ExpressionUUID->"b8138559-a726-4290-8585-053a2c7aaa8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55279, 1277, 206, 5, 54, "Input",ExpressionUUID->"04c8e59c-4825-4793-afad-c6a562bacdff"],
Cell[55488, 1284, 187, 4, 53, "Output",ExpressionUUID->"1ff11996-b49d-4489-a8b2-cf79328d0695"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55712, 1293, 207, 5, 54, "Input",ExpressionUUID->"5d787e74-7c1c-4e36-94e9-3ddc1cbbd6c2"],
Cell[55922, 1300, 151, 2, 35, "Output",ExpressionUUID->"4cd49f6d-401b-4f0b-91ee-eabe04ba6716"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56110, 1307, 200, 5, 54, "Input",ExpressionUUID->"5bdd757a-41fb-4181-9e58-6d22dbe57b5a"],
Cell[56313, 1314, 691, 18, 43, "Output",ExpressionUUID->"7ec8e10b-129b-4bbb-bb01-3eee35c62a31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57041, 1337, 204, 5, 54, "Input",ExpressionUUID->"27748dcc-b924-43fa-a94a-8f64c0f21a45"],
Cell[57248, 1344, 243, 6, 53, "Output",ExpressionUUID->"5bc4b76d-1530-4a09-88cb-cd3aa33b6ac3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57528, 1355, 229, 6, 54, "Input",ExpressionUUID->"0b664b3c-ff4a-4151-8527-2df8a19d1a41"],
Cell[57760, 1363, 237, 6, 37, "Output",ExpressionUUID->"fcdc1005-fc09-4447-933b-4ba7a4d9613c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58034, 1374, 388, 10, 45, "Input",ExpressionUUID->"085ad74c-9110-43cb-b3b1-8d31cdbc6991"],
Cell[58425, 1386, 462, 16, 58, "Output",ExpressionUUID->"bd964c68-7cfa-410d-841d-c431467ea3ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58924, 1407, 700, 21, 120, "Input",ExpressionUUID->"cb31bc36-02a4-4df7-8557-074e4294c96c"],
Cell[59627, 1430, 11833, 208, 449, "Output",ExpressionUUID->"7760a212-ac26-433e-a4ef-e13b6364a0ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71497, 1643, 702, 21, 120, "Input",ExpressionUUID->"f4fb3bd0-3469-4ee1-b1d2-f4a96025b63f"],
Cell[72202, 1666, 33990, 571, 340, "Output",ExpressionUUID->"eb1b5abb-b39a-4bd9-bd5f-1877d5a3b1d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106229, 2242, 378, 10, 48, "Input",ExpressionUUID->"cd820784-78a5-48ae-9e8e-25faa8d79c0a"],
Cell[106610, 2254, 315, 9, 53, "Output",ExpressionUUID->"c00588ef-cc6a-438f-8425-0b7dae8b02ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106962, 2268, 1539, 44, 212, "Input",ExpressionUUID->"683ca101-6883-4ed7-a4b8-4f2cb91a45fc"],
Cell[108504, 2314, 52705, 878, 1239, "Output",ExpressionUUID->"37b7a839-def6-4f10-bb41-9dff903e16df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161246, 3197, 729, 23, 56, "Input",ExpressionUUID->"2f443e7c-3ef7-4e9a-bbaa-de48882d748c"],
Cell[161978, 3222, 390, 11, 61, "Output",ExpressionUUID->"a623bdf2-4697-4827-aeeb-098667c52799"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162405, 3238, 580, 18, 58, "Input",ExpressionUUID->"364ea2f9-f3d5-48af-b1a3-063ce3157f92"],
Cell[162988, 3258, 41250, 696, 246, "Output",ExpressionUUID->"2903b062-5054-4394-9fb4-8bc742b6d7fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204275, 3959, 421, 10, 31, "Input",ExpressionUUID->"20896559-15af-4349-ad15-2262ffacc385"],
Cell[204699, 3971, 149, 2, 35, "Output",ExpressionUUID->"01a73b96-4b59-4510-a755-ae7541c97ebe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204885, 3978, 601, 19, 56, "Input",ExpressionUUID->"74e05fb9-b0e1-47ab-9777-4b6cddcd1a37"],
Cell[205489, 3999, 587, 20, 76, "Output",ExpressionUUID->"116fff55-4cef-43e2-9499-1ce0b9c48a43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206113, 4024, 773, 25, 72, "Input",ExpressionUUID->"7b4159ea-963c-40cc-94a3-8db82bbcb011"],
Cell[206889, 4051, 275, 8, 63, "Output",ExpressionUUID->"e3dd09b5-38c6-46f4-8e66-ea32e0329575"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207201, 4064, 461, 15, 61, "Input",ExpressionUUID->"bb502a6e-d1a2-469e-a379-151ba1fe4a27"],
Cell[207665, 4081, 46505, 782, 246, "Output",ExpressionUUID->"e6d3eec8-610d-4d71-960c-f6db0e9cab77"]
}, Open  ]],
Cell[254185, 4866, 174, 3, 31, "Input",ExpressionUUID->"b2f3ffb0-e689-4a48-be6b-62ae6bbae535"],
Cell[CellGroupData[{
Cell[254384, 4873, 556, 18, 56, "Input",ExpressionUUID->"a2ae315e-8529-4b51-9987-14340f75eff5"],
Cell[254943, 4893, 531, 18, 58, "Output",ExpressionUUID->"fadf6353-254c-4580-8626-af03444a7ae0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255511, 4916, 479, 13, 45, "Input",ExpressionUUID->"6c830e99-ac6d-4549-b725-29a523ee8646"],
Cell[255993, 4931, 403, 13, 58, "Output",ExpressionUUID->"6e1eeab9-d54b-4a1e-854e-2f045bfbdb3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256433, 4949, 637, 18, 120, "Input",ExpressionUUID->"52e57bef-9aec-4eb6-87bb-5c097aef8cbe"],
Cell[257073, 4969, 17738, 305, 345, "Output",ExpressionUUID->"3daf314c-8a18-4738-988c-08ae980da1b0"]
}, Open  ]],
Cell[274826, 5277, 549, 17, 120, "Input",ExpressionUUID->"cff050bf-65ce-4d5b-8301-e70175dad443"],
Cell[CellGroupData[{
Cell[275400, 5298, 390, 10, 31, "Input",ExpressionUUID->"9ae60874-b663-419b-9d26-99ea288edaab"],
Cell[275793, 5310, 612, 17, 35, "Output",ExpressionUUID->"bc822fcd-0dd8-45dc-8599-14453fbb2695"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276442, 5332, 635, 18, 31, "Input",ExpressionUUID->"5077e1e1-2eba-412b-aefe-df5cf18871d7"],
Cell[277080, 5352, 446, 12, 53, "Output",ExpressionUUID->"849f7b7b-e177-4d2c-9b84-3eb4bba6860c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277563, 5369, 729, 20, 31, "Input",ExpressionUUID->"c0dbc031-e8db-4840-81cd-df7f68d1c1d1"],
Cell[278295, 5391, 180, 3, 35, "Output",ExpressionUUID->"ac6ddf71-e2aa-4c15-ace9-b138bbbe1121"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278512, 5399, 753, 21, 31, "Input",ExpressionUUID->"4cc11ef6-5b69-4f89-8019-0ebfcc528d5b"],
Cell[279268, 5422, 166, 3, 35, "Output",ExpressionUUID->"d06488b9-bf18-43ac-bfa2-6e89e64c82cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279471, 5430, 717, 19, 31, "Input",ExpressionUUID->"7bf9d4e1-62d1-4f74-b50e-38ecef2018e4"],
Cell[280191, 5451, 411, 10, 23, "Message",ExpressionUUID->"9ccc6f5c-b7eb-4f5d-ad20-b202bbfbe241"],
Cell[280605, 5463, 166, 3, 35, "Output",ExpressionUUID->"1e8b81b2-2fb6-4981-8206-96d0faff9196"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280808, 5471, 686, 19, 31, "Input",ExpressionUUID->"ffc80163-68b5-44ea-8258-c68ab1f806f4"],
Cell[281497, 5492, 168, 3, 35, "Output",ExpressionUUID->"b5db4a45-762a-4e28-b20d-56367deedfed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281702, 5500, 340, 9, 48, "Input",ExpressionUUID->"e31c55e4-a451-4530-b983-30cebe6c8392"],
Cell[282045, 5511, 354, 9, 53, "Output",ExpressionUUID->"e640da5c-3534-4f22-8dad-97c2f6979c0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282436, 5525, 438, 12, 48, "Input",ExpressionUUID->"f8385eb9-ba73-40dc-a49f-57e82ee7dd73"],
Cell[282877, 5539, 166, 3, 35, "Output",ExpressionUUID->"955ad10e-cef4-463b-99fe-e064f9a6f300"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283080, 5547, 194, 4, 48, "Input",ExpressionUUID->"c1a64417-1f73-468e-bcab-a5558de09681"],
Cell[283277, 5553, 237, 5, 53, "Output",ExpressionUUID->"f8c21f19-4903-42ae-84a2-981a193ebf50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283551, 5563, 313, 8, 48, "Input",ExpressionUUID->"91a9be97-8ec2-496d-af9e-04e1209ce347"],
Cell[283867, 5573, 371, 10, 53, "Output",ExpressionUUID->"49226929-3f63-4273-b44e-c6e07ee9dd2c"]
}, Open  ]],
Cell[284253, 5586, 128, 3, 31, "Input",ExpressionUUID->"56dc31f7-8ec0-44d1-990e-570988e70816"],
Cell[CellGroupData[{
Cell[284406, 5593, 572, 17, 48, "Input",ExpressionUUID->"102e68e5-e24d-4154-8aad-2c4fe463ce6a"],
Cell[284981, 5612, 625, 20, 53, "Output",ExpressionUUID->"e3f68b11-3740-4162-8134-4c0378c94bc0"]
}, Open  ]],
Cell[285621, 5635, 128, 3, 31, "Input",ExpressionUUID->"d9b923c5-cd89-489b-a288-16e52b3f90a0"],
Cell[CellGroupData[{
Cell[285774, 5642, 728, 23, 56, "Input",ExpressionUUID->"1b3c0d9f-f97a-4bd8-8e8f-d1f0b12e2875"],
Cell[286505, 5667, 390, 11, 61, "Output",ExpressionUUID->"5af37d35-f604-4844-9874-3b44a294e578"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286932, 5683, 580, 18, 58, "Input",ExpressionUUID->"ac065279-d0fc-41e2-9f18-4f70648a4fb2"],
Cell[287515, 5703, 41250, 696, 246, "Output",ExpressionUUID->"a45d7b4a-df42-4434-8e5f-1aa9b781d8d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328802, 6404, 450, 12, 31, "Input",ExpressionUUID->"ba026f2d-8747-4ace-b749-b9463ebae069"],
Cell[329255, 6418, 388, 11, 61, "Output",ExpressionUUID->"39e454fb-5f6d-4092-a704-40e9f8a79281"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329680, 6434, 902, 27, 58, "Input",ExpressionUUID->"5230dc16-c8d1-4364-a6c6-6ddcf800d55b"],
Cell[330585, 6463, 1395, 43, 75, "Output",ExpressionUUID->"f8c21b24-d4cd-4bff-8f44-34529afc809d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332017, 6511, 1735, 52, 72, "Input",ExpressionUUID->"0b09a9e7-8c44-4700-8081-9836cad6249a"],
Cell[333755, 6565, 373, 9, 23, "Message",ExpressionUUID->"3ab25799-94fc-40c5-8f84-a02a8d55c0a7"],
Cell[334131, 6576, 1757, 52, 75, "Output",ExpressionUUID->"e70805cb-4a2a-409f-bdc5-2c781a760abe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335925, 6633, 1617, 48, 72, "Input",ExpressionUUID->"34bdc929-2123-42bf-8140-5f3e04f89282"],
Cell[337545, 6683, 156, 2, 35, "Output",ExpressionUUID->"54969d27-2bcb-4e15-a7b4-5da2369074fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337738, 6690, 677, 21, 120, "Input",ExpressionUUID->"b5f799b0-e55d-46dc-b2e7-2d8ae56c6cfd"],
Cell[338418, 6713, 33990, 571, 340, "Output",ExpressionUUID->"fdc7e8ee-968f-48e4-9f8c-06eac866891e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372445, 7289, 561, 18, 56, "Input",ExpressionUUID->"a18803c9-c3ad-494f-bbd0-04202f60b8e3"],
Cell[373009, 7309, 459, 16, 58, "Output",ExpressionUUID->"5d6da190-ceec-4d5a-8a58-9cdb173b6119"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373505, 7330, 561, 18, 55, "Input",ExpressionUUID->"4ddafeeb-c85f-4f45-8e1c-af9e92f2545c"],
Cell[374069, 7350, 352, 11, 58, "Output",ExpressionUUID->"e8e4a363-f9c0-44f1-b73c-cc2cc2c3ba1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374458, 7366, 511, 14, 56, "Input",ExpressionUUID->"3d9d5191-038c-40e9-a97a-a44c28615f3f"],
Cell[374972, 7382, 443, 16, 58, "Output",ExpressionUUID->"b7f14ba4-e515-462e-98d8-e761b07156f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375452, 7403, 655, 18, 56, "Input",ExpressionUUID->"e9940d46-18d8-4f55-b898-b2802508f6a5"],
Cell[376110, 7423, 578, 22, 58, "Output",ExpressionUUID->"c90077c5-30de-4c5a-904f-fc30b7736c90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376725, 7450, 561, 18, 56, "Input",ExpressionUUID->"5109ee4a-27a7-4eaf-94db-71b07e4b662e"],
Cell[377289, 7470, 460, 16, 58, "Output",ExpressionUUID->"346341f3-04b0-4833-a89e-96c4964a0936"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377786, 7491, 627, 19, 55, "Input",ExpressionUUID->"b426068b-ba4f-4774-b9f8-4c0537d9ab4f"],
Cell[378416, 7512, 581, 21, 58, "Output",ExpressionUUID->"d3850c8a-6912-4eeb-908d-e44307bba4cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379034, 7538, 1101, 42, 56, "Input",ExpressionUUID->"8b9bbab7-19e1-498e-91e4-5d60bcd0527c"],
Cell[380138, 7582, 1078, 42, 58, "Output",ExpressionUUID->"88da9ee4-6ba1-4781-9e70-864c7b37458e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381253, 7629, 1358, 50, 56, "Input",ExpressionUUID->"62ed8bc2-2ca1-4b04-843e-bbd5c6984363"],
Cell[382614, 7681, 354, 9, 23, "Message",ExpressionUUID->"b3589f49-adfb-4fb7-84aa-52fdd487c369"],
Cell[382971, 7692, 460, 16, 55, "Output",ExpressionUUID->"f05f354e-1237-4cf0-b148-1a580991ec01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383468, 7713, 1451, 56, 56, "Input",ExpressionUUID->"70ed6d41-e5bb-4d07-b801-ece07f7d358f"],
Cell[384922, 7771, 1392, 54, 58, "Output",ExpressionUUID->"a55f9ba7-5d44-4375-b446-eef7f76f01cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386351, 7830, 1548, 57, 56, "Input",ExpressionUUID->"914d953b-ecf7-4387-881a-aaeeab4039b6"],
Cell[387902, 7889, 1870, 69, 58, "Output",ExpressionUUID->"caa7403f-74aa-4b29-9ee1-3eefb5fd24d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389809, 7963, 1947, 70, 56, "Input",ExpressionUUID->"65313147-ac97-47f0-b6ff-31e5c30cad7b"],
Cell[391759, 8035, 154, 2, 35, "Output",ExpressionUUID->"2993f98d-d45c-47c3-afd7-0303e795a0bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391950, 8042, 2112, 72, 56, "Input",ExpressionUUID->"864250fe-9f2e-4c26-b763-a48773a545a1"],
Cell[394065, 8116, 189, 4, 35, "Output",ExpressionUUID->"a2ced99c-df1a-483d-a39c-e7403bd592ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394291, 8125, 757, 23, 58, "Input",ExpressionUUID->"bf69379a-46cc-4c8d-aee4-fb06acdc53c9"],
Cell[395051, 8150, 765, 24, 66, "Output",ExpressionUUID->"83f0c646-be7f-4fec-b722-5c070fb1dae4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395853, 8179, 987, 31, 62, "Input",ExpressionUUID->"8d4f725d-b414-4d01-ad8b-c738cb412fa6"],
Cell[396843, 8212, 156, 2, 35, "Output",ExpressionUUID->"9be2ba1b-753c-408d-9b73-92621e3492a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397036, 8219, 738, 22, 62, "Input",ExpressionUUID->"0659ea46-6c92-4404-9025-ead23dfe8140"],
Cell[397777, 8243, 2963, 92, 62, "Output",ExpressionUUID->"d5aeaa1c-e673-4824-a0d7-9d3a301ad827"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400777, 8340, 165, 3, 31, "Input",ExpressionUUID->"c183250c-f4b1-46e2-81d4-60c37930ab7e"],
Cell[400945, 8345, 1272, 39, 65, "Output",ExpressionUUID->"917d6a78-0bb6-4829-b4d5-d40309a04fb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402254, 8389, 3889, 114, 61, "Input",ExpressionUUID->"0aca81e4-d1e5-43ae-92a3-365c6daba095"],
Cell[406146, 8505, 770, 24, 40, "Output",ExpressionUUID->"60669840-7252-4b65-963d-95bccb5d48ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406953, 8534, 992, 31, 40, "Input",ExpressionUUID->"0021c810-8987-4ccd-9159-19b94de979fb"],
Cell[407948, 8567, 158, 2, 35, "Output",ExpressionUUID->"6b2a41d7-1f42-46d8-bd1e-b10abf835ff2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408143, 8574, 1039, 31, 40, "Input",ExpressionUUID->"754f0090-2151-4659-b41b-68c5faa08925"],
Cell[409185, 8607, 505, 11, 23, "Message",ExpressionUUID->"e35a2096-63b7-47e6-8e77-2fb5034c7b47"],
Cell[409693, 8620, 1016, 31, 40, "Output",ExpressionUUID->"332914f7-293d-4d36-bd0f-f7279e4fad98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410746, 8656, 1201, 35, 40, "Input",ExpressionUUID->"32b0a802-ef04-4db0-9e25-4ed977f9cd2a"],
Cell[411950, 8693, 505, 11, 23, "Message",ExpressionUUID->"cb3c71e1-6d2e-4dac-8a71-e06d626bd49b"],
Cell[412458, 8706, 1174, 35, 40, "Output",ExpressionUUID->"c27d73e3-e662-4806-9440-6b4a8e138928"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413669, 8746, 197, 3, 33, "Input",ExpressionUUID->"411e286f-1a13-4657-b7d1-fc9d6fcfac3e"],
Cell[413869, 8751, 196, 3, 37, "Output",ExpressionUUID->"b6ce65ac-55b7-44aa-bcc1-c7c446cf0156"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414102, 8759, 202, 4, 39, "Input",ExpressionUUID->"cca1bd10-c6b2-4d3c-a579-efedc35de36c"],
Cell[414307, 8765, 247, 4, 35, "Output",ExpressionUUID->"20a13207-5134-4c56-b26f-b85c6f6e3c08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414591, 8774, 1143, 33, 40, "Input",ExpressionUUID->"3f47857f-9be4-4533-a9cf-96c7620ec13d"],
Cell[415737, 8809, 508, 11, 23, "Message",ExpressionUUID->"d9b95941-dee7-4c61-93ed-cb32a81c21ea"],
Cell[416248, 8822, 1120, 33, 40, "Output",ExpressionUUID->"44422d08-88c7-4fc1-bd29-0d638996fb24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417405, 8860, 985, 29, 40, "Input",ExpressionUUID->"435166ce-2b25-4ba0-a06d-41777fe6e4fd"],
Cell[418393, 8891, 505, 11, 23, "Message",ExpressionUUID->"cb604ef7-8d1f-4f3b-9ec5-73f21444626b"],
Cell[418901, 8904, 962, 29, 40, "Output",ExpressionUUID->"e291007c-009e-4ce7-9baf-229426b0d190"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419900, 8938, 1032, 31, 40, "Input",ExpressionUUID->"91d88a09-8544-4b31-9245-00ee021a8330"],
Cell[420935, 8971, 506, 11, 23, "Message",ExpressionUUID->"32b7c6fb-64fb-47f6-aca7-deebcefb938f"],
Cell[421444, 8984, 1012, 31, 40, "Output",ExpressionUUID->"d9415a0b-951d-4260-94f0-85502e79f676"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422493, 9020, 1249, 37, 40, "Input",ExpressionUUID->"7b5c4452-4f92-4658-87a0-84b8b005137b"],
Cell[423745, 9059, 451, 11, 23, "Message",ExpressionUUID->"7f924e03-3163-4dd1-87d3-f9eb9ba67a44"],
Cell[424199, 9072, 1230, 37, 40, "Output",ExpressionUUID->"9f186e70-63ac-4b9f-bc38-0090deadb6b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425466, 9114, 898, 27, 40, "Input",ExpressionUUID->"d4d0a326-97f0-4450-a2da-8ec35740e2a6"],
Cell[426367, 9143, 841, 26, 40, "Output",ExpressionUUID->"b12cde53-fd21-4bc3-8fa3-35093bec15ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427245, 9174, 1015, 30, 102, "Input",ExpressionUUID->"c6d85dc0-10ef-4442-89e6-18927886f602"],
Cell[428263, 9206, 627, 19, 40, "Output",ExpressionUUID->"b4ce4d2f-0d4d-4259-9c90-5498503407bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428927, 9230, 654, 20, 40, "Input",ExpressionUUID->"dfaed329-477d-4f6e-8f8c-dd00a6ace958"],
Cell[429584, 9252, 36126, 911, 791, "Output",ExpressionUUID->"616b1b65-1cd6-4c1f-a499-bfca6bc258c8"]
}, Open  ]],
Cell[465725, 10166, 128, 3, 31, "Input",ExpressionUUID->"2ee9fa75-a09c-4a28-86ae-e4c7441f0ac0"],
Cell[CellGroupData[{
Cell[465878, 10173, 809, 24, 40, "Input",ExpressionUUID->"4f894d3b-3e2d-489f-b7bd-7748ef170d70"],
Cell[466690, 10199, 450, 13, 37, "Output",ExpressionUUID->"92fbc840-d253-45d3-a67c-05f37d66b881"]
}, Open  ]],
Cell[CellGroupData[{
Cell[467177, 10217, 914, 28, 58, "Input",ExpressionUUID->"72922d50-00c3-4364-a9e0-da3f9e1c33c4"],
Cell[468094, 10247, 1346, 41, 66, "Output",ExpressionUUID->"f45afaeb-2126-4130-9092-d8f884c60912"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469477, 10293, 1682, 50, 62, "Input",ExpressionUUID->"073d80de-deb6-4bd6-82f3-f04bd915376e"],
Cell[471162, 10345, 374, 9, 23, "Message",ExpressionUUID->"ae871ad8-76d2-46f4-b0f3-dda808242ff4"],
Cell[471539, 10356, 1706, 50, 66, "Output",ExpressionUUID->"8919e909-4e99-4d3f-a143-523c17590eaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473282, 10411, 1439, 42, 62, "Input",ExpressionUUID->"8868afa2-5efa-47bf-8edb-47c3f0186980"],
Cell[474724, 10455, 290, 6, 50, "Output",ExpressionUUID->"9f709d34-c02f-4b50-bcd1-71b8ec7fe4c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475051, 10466, 1657, 48, 129, "Input",ExpressionUUID->"c4ab8672-7892-498f-8673-7a891764c25a"],
Cell[476711, 10516, 152, 2, 35, "Output",ExpressionUUID->"671f5632-2349-4860-be1b-ec86406c6758"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476900, 10523, 1440, 42, 62, "Input",ExpressionUUID->"ce8748d6-7d96-42a5-b225-a87880f0ec45"],
Cell[478343, 10567, 16275, 484, 168, "Output",ExpressionUUID->"6be83af7-75bc-45cf-9e34-b26dbfd650cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494655, 11056, 16232, 483, 164, "Input",ExpressionUUID->"22683a4d-e933-4839-8f9a-45fad8160054"],
Cell[510890, 11541, 16275, 484, 168, "Output",ExpressionUUID->"ffa5282f-aecd-446d-821e-6b37852cea6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527202, 12030, 388, 10, 45, "Input",ExpressionUUID->"20319974-3d2a-4772-bb9c-abdc80e697d6"],
Cell[527593, 12042, 462, 16, 58, "Output",ExpressionUUID->"765e0f1a-87d5-4f3e-b639-805c9073966f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528092, 12063, 565, 18, 56, "Input",ExpressionUUID->"446a7d8a-4d48-4c54-b45b-9d84a780354e"],
Cell[528660, 12083, 549, 17, 58, "Output",ExpressionUUID->"fd67bb71-e64f-43fb-bce0-aca17069d221"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529246, 12105, 587, 19, 56, "Input",ExpressionUUID->"baea4268-f04c-47a7-8ce9-fb25e95ba6a5"],
Cell[529836, 12126, 796, 15, 48, "Message",ExpressionUUID->"a0a43d58-43dc-40c6-873e-20a2e6b68304"],
Cell[530635, 12143, 569, 17, 58, "Output",ExpressionUUID->"40c445fd-2916-4425-abd0-0f8f5660cb84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531241, 12165, 567, 19, 56, "Input",ExpressionUUID->"ee7a1abb-ae83-48ad-b1ef-52a4a2f95d75"],
Cell[531811, 12186, 464, 17, 58, "Output",ExpressionUUID->"b5c8906b-efe7-446c-ad18-c2cb8bf59bcb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532312, 12208, 948, 30, 143, "Input",ExpressionUUID->"b6459999-7380-4ca1-8c88-d324ebdd737d"],
Cell[533263, 12240, 41337, 694, 272, "Output",ExpressionUUID->"b1917b0a-9de8-4e46-b312-79ccd15afc05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574637, 12939, 947, 30, 143, "Input",ExpressionUUID->"9e1b446d-8fa9-43b6-bd6e-c350d7b699ca"],
Cell[575587, 12971, 81577, 1354, 272, "Output",ExpressionUUID->"7273f396-b41d-4c8c-b30c-dd2a410d0790"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657201, 14330, 1296, 38, 226, "Input",ExpressionUUID->"8f75cb39-0ea9-4fff-988f-268c40714599"],
Cell[658500, 14370, 1918, 40, 468, "Output",ExpressionUUID->"78063099-9103-417d-a72b-0fe6255bf408"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660455, 14415, 1297, 39, 226, "Input",ExpressionUUID->"f81c6365-e5bb-4992-bda3-41f7ccb6bef7"],
Cell[661755, 14456, 1918, 40, 468, "Output",ExpressionUUID->"57c9e2f7-f81e-4af9-9cf3-0f315ef8155b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[663710, 14501, 1318, 40, 226, "Input",ExpressionUUID->"fa924501-4e02-4795-b223-40ea7a285eb3"],
Cell[665031, 14543, 1922, 40, 501, "Output",ExpressionUUID->"668d4cbd-a695-47a2-9665-3e37ca85d743"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

