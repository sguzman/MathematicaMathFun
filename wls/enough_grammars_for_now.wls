#!/usr/bin/env wolframscript
(* ::Package:: *)

(* ::Input:: *)
(*$RecursionLimit=Infinity*)
(**)
(*collatz[1]=1*)
(**)
(*collatz[n_Integer/;And[n>1,OddQ[n]]]:=collatz[n]=3 n+1*)
(*collatz[n_Integer/;And[n>1,EvenQ[n]]]:=collatz[n]=n/2*)
(**)
(*collatzseq[1]={1}*)
(*collatzseq[n_Integer/;n>1]:=collatzseq[n]={n,Splice@collatzseq@collatz@n}*)
(**)
(*collatzseq[93571393692802302];*)
(**)
(*map[n_Integer/;OddQ[n]]=o*)
(*map[n_Integer/;EvenQ[n]]=e*)
(**)
(*c=Map[map,collatzseq[93571393692802302]];*)
(**)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[c,i,1]*)
(*,{i,1,20,1}]*)
(*],Last,10],*)
(*{"Lexeme","Frequency","Strength","Strength-1"}]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[c,i,1]*)
(*,{i,1,20,1}]*)
(*],Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*SequenceReplace[SequenceReplace[SequenceReplace[c,{e,o,e}:>\[Alpha]],{\[Alpha],o,e}:>\[Beta]],{\[Beta],o,e}:>\[Gamma]]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[c,i,1]*)
(*,{i,1,20,1}]*)
(*],Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*SequenceReplace[c,{e,o,e,o,e}:>\[Alpha]]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[17],i,1]*)
(*,{i,1,20,1}]*)
(*],Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*SequenceReplace[Out[17],{e,o,e}:>\[Beta]]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[19],i,1]*)
(*,{i,1,20,1}]*)
(*],Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*SequenceReplace[Out[19],{\[Alpha],o}:>\[Gamma]]*)


(* ::Input:: *)
(*Sort[%21]*)


(* ::Input:: *)
(*Tally[%21]*)


(* ::Input:: *)
(*Length[%21]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[21],i,1]*)
(*,{i,1,20,1}]*)
(*],Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*SequenceReplace[Out[21],{e,e}:>\[Delta]]*)


(* ::Input:: *)
(*Tally[%26]*)


(* ::Input:: *)
(*Length[%26]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[26],i,1]*)
(*,{i,1,20,1}]*)
(*],Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*SequenceReplace[Out[26],{\[Beta],\[Beta]}:>\[Zeta]]*)


(* ::Input:: *)
(*Tally[%30]*)


(* ::Input:: *)
(*Length[%30]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[30],i,1]*)
(*,{i,1,20,1}]*)
(*],Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*SequenceReplace[Out[30],{e,\[Gamma]}:>A]*)


(* ::Input:: *)
(*Tally[%34]*)


(* ::Input:: *)
(*Length[%34]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[34],i,1]*)
(*,{i,1,20,1}]*)
(*],Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*SequenceReplace[SequenceReplace[Out[34],{e,\[Alpha]}:>B],{e,\[Beta]}:>F]*)


(* ::Input:: *)
(*Tally[%38]*)


(* ::Input:: *)
(*Length[%38]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[38],i,1]*)
(*,{i,1,20,1}]*)
(*],Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[38],i,1]*)
(*,{i,1,20,1}]*)
(*],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*Out[38]*)


(* ::Input:: *)
(*Tally[%47]*)


(* ::Input:: *)
(*{*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma],*)
(*{e,e}:>\[Delta],*)
(*{\[Beta],\[Beta]}:>\[Zeta],*)
(*{e,\[Gamma]}:>A,*)
(*{e,\[Alpha]}:>B,*)
(*{e,\[Beta]}:>F*)
(*}*)


(* ::Input:: *)
(*SequenceReplace[c,*)
(*{*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma],*)
(*{e,e}:>\[Delta],*)
(*{\[Beta],\[Beta]}:>\[Zeta],*)
(*{e,\[Gamma]}:>A,*)
(*{e,\[Alpha]}:>B,*)
(*{e,\[Beta]}:>F*)
(*}]*)


(* ::Input:: *)
(*Map[SequenceReplace,Out[49]]*)


(* ::Input:: *)
(*Apply[Composition,Reverse@Out[51]]*)


(* ::Input:: *)
(*Apply[Composition,Reverse@Out[51]][c]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[38],i,1]*)
(*,{i,1,20,1}]*)
(*],*)
(*Extract[#,2]!=1&],*)
(*Last,50],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*{*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma],*)
(*{e,e}:>\[Delta],*)
(*{\[Beta],\[Beta]}:>\[Zeta],*)
(*{e,\[Gamma]}:>A,*)
(*{e,\[Alpha]}:>B,*)
(*{e,\[Beta]}:>F,*)
(*{e,\[Zeta]}:>G*)
(*}*)


(* ::Input:: *)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][c]*)


(* ::Input:: *)
(*Tally[%57]*)


(* ::Input:: *)
(*Length[%57]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[57],i,1]*)
(*,{i,1,20,1}]*)
(*],*)
(*Extract[#,2]!=1&],*)
(*Last,50],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[27]]]*)


(* ::Input:: *)
(*Grid@*)
(*Table[*)
(*{i,Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[i]]]}*)
(*,{i,1,30}]*)


(* ::Input:: *)
(*Grid@*)
(*Table[*)
(*{i,Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[i]]]}*)
(*,{i,1,100}]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[57],i,1]*)
(*,{i,1,20,1}]*)
(*],*)
(*Extract[#,2]!=1&],*)
(*Last,50],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*Length@Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[Out[57],i,1]*)
(*,{i,1,20,1}]*)


(* ::Input:: *)
(**)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,100,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,50],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,1000,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,10000,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*Grid@*)
(*Table[*)
(*{10^k,Timing@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,10^k,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]}*)
(*,{k,1,3,1}]*)


(* ::Input:: *)
(*Timing@*)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,10,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,100,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(* *)


(* ::Input:: *)
(*Timing[*)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,100,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)
(*]*)


(* ::Input:: *)
(*First@*)
(*Timing[*)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,100,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)
(*]*)


(* ::Input:: *)
(*First@*)
(*Timing[*)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,10,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)
(*]*)


(* ::Input:: *)
(*First@*)
(*Timing[*)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,1000,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)
(*]*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/Length@c),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,10000,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*{*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma],*)
(*{e,e}:>\[Delta],*)
(*{\[Beta],\[Beta]}:>\[Zeta],*)
(*{e,\[Gamma]}:>A,*)
(*{e,\[Alpha]}:>B,*)
(*{e,\[Beta]}:>F,*)
(*{e,\[Zeta]}:>G*)
(*}*)


(* ::Input:: *)
(*Grid@*)
(*Prepend[*)
(*TakeLargestBy[*)
(*Select[*)
(*Table[*)
(*Splice@*)
(*Map[{*)
(*First@#,*)
(*Last@#,*)
(*Length@First@# Last@#,*)
(*PercentForm@N@(((Length@First@# -1)Last@#)/998),*)
(*(Length@First@# -1)Last@#*)
(*}&,Table[*)
(*Splice@*)
(*Tally@*)
(*Partition[*)
(*Apply[Composition,Reverse@Map[SequenceReplace,{*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma],*)
(*{e,e}:>\[Delta],*)
(*{\[Beta],\[Beta]}:>\[Zeta],*)
(*{e,\[Gamma]}:>A,*)
(*{e,\[Alpha]}:>B,*)
(*{e,\[Beta]}:>F,*)
(*{e,\[Zeta]}:>G*)
(*}]][Map[map,collatzseq[j]]]*)
(*,i,1]*)
(*,{i,1,20,1}]*)
(*],{j,1,100,1}],*)
(*Extract[#,2]!=1&],*)
(*Last,10],*)
(*{"Lexeme","Frequency","Strength","Percent","Strength-1"}]*)


(* ::Input:: *)
(*Length@*)
(*Table[*)
(*Splice@*)
(*Apply[Composition,Reverse@Map[SequenceReplace,{*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma],*)
(*{e,e}:>\[Delta],*)
(*{\[Beta],\[Beta]}:>\[Zeta],*)
(*{e,\[Gamma]}:>A,*)
(*{e,\[Alpha]}:>B,*)
(*{e,\[Beta]}:>F,*)
(*{e,\[Zeta]}:>G*)
(*}]][Map[map,collatzseq[j]]]*)
(*,{j,1,100,1}]*)


(* ::Input:: *)
(*Length@c*)


(* ::Input:: *)
(*Apply[Composition,Reverse@Map[SequenceReplace,{*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma],*)
(*{e,e}:>\[Delta],*)
(*{\[Beta],\[Beta]}:>\[Zeta],*)
(*{e,\[Gamma]}:>A,*)
(*{e,\[Alpha]}:>B,*)
(*{e,\[Beta]}:>F,*)
(*{e,\[Zeta]}:>G*)
(*}]][c]*)


(* ::Input:: *)
(*c*)


(* ::InheritFromParent:: *)
(*{e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,e,e,o,e,o,e,o,e,e,o,e,o,e,e,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,e,e,e,e,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,e,e,o,e,o,e,e,e,o,e,o,e,o,e,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,e,e,e,o,e,e,o,e,e,o,e,o,e,o,e,o,e,e,e,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,e,o,e,e,o,e,e,e,o,e,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,e,o,e,o,e,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,e,o,e,e,o,e,o,e,e,o,e,e,o,e,o,e,e,e,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,e,e,o,e,e,o,e,e,e,o,e,e,e,e,o,e,o,e,o,e,e,e,o,e,e,o,e,e,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,e,o,e,e,o,e,e,e,e,e,e,e,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,e,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,o,e,o,e,e,e,e,e,o,e,o,e,o,e,e,o,e,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,e,e,o,e,o,e,e,o,e,o,e,e,e,e,o,e,o,e,e,e,o,e,o,e,o,e,e,o,e,e,e,e,e,o,e,o,e,e,e,o,e,o,e,e,e,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,e,o,e,o,e,o,e,o,e,e,e,o,e,e,e,o,e,e,e,e,o,e,o,e,o,e,o,e,e,o,e,e,e,o,e,o,e,o,e,o,e,e,e,o,e,e,o,e,e,o,e,e,e,o,e,o,e,e,o,e,o,e,o,e,e,e,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,e,e,e,o,e,e,e,o,e,e,o,e,o,e,o,e,e,e,o,e,o,e,o,e,o,e,o,e,e,o,e,e,e,o,e,o,e,o,e,o,e,e,e,e,e,e,e,o,e,o,e,e,o,e,o,e,e,e,e,o,e,e,e,e,e,o,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,o,e,o,e,e,e,e,o,e,e,o,e,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,o,e,e,o,e,e,o,e,o,e,e,e,o,e,e,e,e,o,e,e,o,e,e,e,e,o,e,e,o,e,o,e,e,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,e,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,e,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,e,e,e,o,e,o,e,e,o,e,o,e,e,e,o,e,e,o,e,e,o,e,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,o,e,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,e,o,e,e,o,e,o,e,e,o,e,o,e,e,e,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,e,o,e,e,o,e,e,e,o,e,o,e,o,e,o,e,e,o,e,e,e,o,e,e,o,e,e,o,e,e,e,o,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,e,o,e,e,o,e,o,e,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,e,e,e,o,e,o,e,e,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,e,e,e,o,e,e,e,o,e,e,o,e,o,e,e,e,o,e,e,o,e,e,e,o,e,e,e,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,e,e,e,o,e,o,e,o,e,e,o,e,e,o,e,e,e,e,o,e,o,e,o,e,e,e,o,e,e,o,e,o,e,e,e,e,e,e,o,e,o,e,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,e,e,o,e,e,o,e,e,o,e,o,e,e,e,o,e,o,e,o,e,e,e,o,e,e,o,e,o,e,e,o,e,o,e,e,o,e,e,e,o,e,e,o,e,e,o,e,o,e,e,o,e,e,o,e,o,e,e,e,o,e,o,e,o,e,e,o,e,o,e,e,e,e,e,o,e,o,e,o,e,e,e,o,e,o,e,o,e,e,o,e,e,e,o,e,e,o,e,o,e,e,e,e,o,e,o,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,e,e,e,o,e,e,o,e,o,e,e,e,e,o,e,o,e,e,o,e,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,e,o,e,o,e,e,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,o,e,o,e,e,e,e,o,e,e,e,e,o,e,o,e,e,e,o,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,e,e,o,e,e,e,e,e,e,o,e,o,e,o,e,e,e,e,e,e,e,o,e,e,e,o,e,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,e,e,o,e,o,e,e,o,e,e,o,e,e,e,o,e,o,e,e,o,e,e,o,e,o,e,e,e,o,e,o,e,e,o,e,e,o,e,e,e,o,e,e,e,o,e,o,e,o,e,e,o,e,e,o,e,e,o,e,o,e,e,e,o,e,e,o,e,e,o,e,o,e,o,e,o,e,e,e,o,e,e,e,o,e,o,e,e,e,o,e,e,o,e,o,e,o,e,e,e,o,e,o,e,e,o,e,e,e,o,e,o,e,e,o,e,e,o,e,o,e,e,e,o,e,e,e,e,o,e,e,o,e,o,e,e,o,e,e,o,e,e,e,e,o,e,e,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,e,o,e,e,e,o,e,o,e,e,e,e,o,e,e,e,o,e,e,o,e,e,o,e,e,o,e,e,e,o,e,e,o,e,o,e,o,e,o,e,o,e,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,e,o,e,o,e,o,e,o,e,e,o,e,e,e,o,e,o,e,o,e,e,o,e,o,e,e,o,e,o,e,o,e,o,e,o,e,o,e,e,e,o,e,o,e,o,e,o,e,e,e,e,o,e,e,o,e,e,o,e,e,e,e,o,e,e,e,o,e,o,e,o,e,e,e,e,e,o,e,e,e,e,o}*)


(* ::Input:: *)
(*Map[ToString,c]*)


(* ::Input:: *)
(*StringJoin@Out@82*)


(* ::Input:: *)
(*eoeoeoeoeoeoeoeeoeoeoeoeoeeoeoeeoeeoeoeeoeoeoeeoeoeeeoeoeoeeoeoeeeoeeoeoeoeoeoeoeoeoeoeoeoeoeoeoeeoeoeoeeoeoeoeoeoeoeoeeoeoeeoeoeoeeeeeeoeoeoeeoeoeeoeoeoeoeeoeoeoeoeoeeoeoeoeeoeoeoeeeoeoeeeoeoeoeeeoeoeoeeoeoeoeeoeeoeoeeeeoeeoeeoeoeoeoeeeeoeoeoeoeoeoeeoeoeoeeoeeoeeeoeeoeeoeoeeoeoeoeeoeeoeoeeoeoeeeoeoeoeeoeoeoeoeeoeeoeeoeoeeoeeoeoeeeeoeoeoeoeeeoeoeoeoeeeoeoeeoeeoeoeeoeoeoeeeoeeoeeeoeeeeoeoeoeeeoeeoeeeoeoeoeeoeoeeoeoeoeoeoeeoeeoeoeeoeeoeeeeeeeeeoeoeoeoeoeoeoeoeoeeoeoeoeoeoeeeeoeoeoeeoeoeeoeoeoeeoeoeoeoeoeoeoeoeoeeoeoeeoeoeeoeoeoeoeoeeeoeoeoeoeeeeeoeoeoeeoeeoeeoeoeoeoeoeoeoeoeoeoeeoeeeoeoeeoeoeeeeoeoeeeoeoeoeeoeeeeeoeoeeeoeoeeeeoeoeoeoeoeoeeoeoeoeoeoeoeeoeoeeoeeeoeoeoeoeoeoeoeoeoeeeoeoeeoeoeoeoeeeoeeeoeeeeoeoeoeoeeoeeeoeoeoeoeeeoeeoeeoeeeoeoeeoeoeoeeeeoeoeoeeoeeoeoeoeoeeoeoeeoeeeeoeeeoeeoeoeoeeeoeoeoeoeoeeoeeeoeoeoeoeeeeeeeoeoeeoeoeeeeoeeeeeoeoeeoeoeoeoeeoeeoeoeoeoeeeeoeeoeeoeeoeoeoeoeoeoeeoeoeoeoeoeeoeeoeeoeoeeeoeeeeoeeoeeeeoeeoeoeeeoeeoeoeoeoeoeoeoeeoeeeoeeoeoeoeoeoeoeeoeeeeoeoeoeoeoeoeoeoeeoeoeeoeoeeoeoeoeoeoeoeoeoeoeoeoeoeeoeoeeeeoeoeeoeoeeeoeeoeeoeeeoeoeoeeoeoeoeoeoeeeoeoeoeoeoeoeeoeoeeoeoeoeoeoeeoeeoeeoeoeoeeoeoeoeoeoeoeoeeoeoeeoeeoeoeeoeoeeoeoeeoeoeeoeeoeoeeoeoeeeeoeeoeoeoeoeeoeeoeoeeoeeoeeeoeoeoeoeeoeeeoeeoeeoeeeoeoeoeoeoeeeoeoeeoeoeoeoeoeoeoeeeoeoeoeoeeeoeoeeoeeoeoeeoeeoeoeoeeoeoeoeoeeoeeeeoeoeeeoeeoeoeoeoeoeoeoeeeeeoeeeoeeoeoeeeoeeoeeeoeeeeoeeoeoeoeoeeoeoeoeeoeoeoeeeeoeoeoeeoeeoeeeeoeoeoeeeoeeoeoeeeeeeoeoeeoeeoeoeoeeoeoeeoeeoeoeoeoeoeoeeeoeeoeeoeoeeeoeoeoeeeoeeoeoeeoeoeeoeeeoeeoeeoeoeeoeeoeoeeeoeoeoeeoeoeeeeeoeoeoeeeoeoeoeeoeeeoeeoeoeeeeoeoeoeoeoeoeoeeoeoeoeoeoeeoeeoeoeoeoeeoeoeoeeoeoeoeeeeoeeoeoeeeeoeoeeoeeoeoeoeeoeeoeoeoeoeeoeeoeoeeoeoeeeoeoeoeoeeeoeoeoeoeeeeoeeeeoeoeeeoeoeeoeoeoeoeeoeeoeoeoeeoeoeoeoeoeeoeoeoeoeeeoeeeeeeoeoeoeeeeeeeoeeeoeeoeoeeoeoeeoeoeeeoeoeeoeeoeeeoeoeeoeeoeoeeeoeoeeoeeoeeeoeeeoeoeoeeoeeoeeoeoeeeoeeoeeoeoeoeoeeeoeeeoeoeeeoeeoeoeoeeeoeoeeoeeeoeoeeoeeoeoeeeoeeeeoeeoeoeeoeeoeeeeoeeeoeoeoeoeeeoeoeeoeeeoeoeeeeoeeeoeeoeeoeeoeeeoeeoeoeoeoeoeeoeeoeoeeoeoeoeeoeoeoeoeeoeeeoeoeoeeoeoeeoeoeoeoeoeoeeeoeoeoeoeeeeoeeoeeoeeeeoeeeoeoeoeeeeeoeeeeo*)


(* ::Input:: *)
(*Grid@*)
(*Table[*)
(*{i,Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[i]]][[-3;;]]}*)
(*,{i,1,100}]*)


(* ::Input:: *)
(*Grid@*)
(*Select[*)
(*Table[*)
(*{i,Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[i]]][[-3;;]]}*)
(*,{i,1,100}]*)
(*,{\[Delta],e,o}==Last@#&]*)


(* ::Input:: *)
(*Grid@*)
(*Select[*)
(*Table[*)
(*{i,Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[i]]][[-3;;]]}*)
(*,{i,1,1000}]*)
(*,{\[Delta],e,o}!=Last@#&]*)


(* ::Input:: *)
(*Grid@*)
(*Select[*)
(*Table[*)
(*{i,Apply[Composition,Reverse@Map[SequenceReplace,Out[55]]][Map[map,collatzseq[i]]][[-3;;]]}*)
(*,{i,1,10000}]*)
(*,{\[Delta],e,o}!=Last@#&]*)


(* ::Input:: *)
(*Grid@*)
(*Table[*)
(*{i,Apply[Composition,Reverse@Map[SequenceReplace,{*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma],*)
(*{e,e}:>\[Delta],*)
(*{\[Beta],\[Beta]}:>\[Zeta],*)
(*{e,\[Gamma]}:>A,*)
(*{e,\[Alpha]}:>B,*)
(*{e,\[Beta]}:>F,*)
(*{e,\[Zeta]}:>G,*)
(*{\[Delta],e,o}:>T*)
(*}]][Map[map,collatzseq[i]]]}*)
(*,{i,1,10,1 }]*)


(* ::Input:: *)
(**)


(* ::Input:: *)
(*2*)


(* ::Input:: *)
(*Grid@*)
(*Table[*)
(*{i,Apply[Composition,Reverse@Map[SequenceReplace,{*)
(*{e,o,e,o,e}:>\[Alpha],*)
(*{e,o,e}:>\[Beta],*)
(*{\[Alpha],o}:>\[Gamma],*)
(*{e,e}:>\[Delta],*)
(*{\[Beta],\[Beta]}:>\[Zeta],*)
(*{e,\[Gamma]}:>A,*)
(*{e,\[Alpha]}:>B,*)
(*{e,\[Beta]}:>F,*)
(*{e,\[Zeta]}:>G,*)
(*{\[Delta],e,o}:>T*)
(*}]][Map[map,collatzseq[i]]]}*)
(*,{i,1,100,1 }]*)
