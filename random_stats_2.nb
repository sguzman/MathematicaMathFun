(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    968499,      19165]
NotebookOptionsPosition[    958858,      18996]
NotebookOutlinePosition[    959220,      19012]
CellTagsIndexPosition[    959177,      19009]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"EntityPrefetch", "[", "\"\<Country\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.779688704697667*^9, 3.779688715052886*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8f24eca8-6cb0-467c-b99d-a93684694389"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Values\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["185500", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Values\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["185500", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Domain\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Country\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"CloudBase\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"https://www.wolframcloud.com/\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success["Prefetch", 
   Association[
   "MessageTemplate" -> "Prefetch successful.", "Values" -> 185500, "Domain" -> 
    "Country", "CloudBase" -> "https://www.wolframcloud.com/"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7796904452052526`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f52bab63-5b62-4c76-a311-88f2b734f468"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<Country\>\"", ",", "\"\<China\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7797043420865793`*^9, 3.779704351672584*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"01b9fde2-c90c-4501-a5f8-91ddb66f57f9"],

Cell[BoxData[
 TemplateBox[{"\"China\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Country\"", ",", "\"China\""}], "]"}],
   "\"Entity[\\\"Country\\\", \\\"China\\\"]\"","\"country\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.779704352580759*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"93f49464-02d2-4796-900f-1e7f8bfd0b62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"China\"",RowBox[{"Entity", "[", 
      RowBox[{"\"Country\"", ",", "\"China\""}], "]"}],
    "\"Entity[\\\"Country\\\", \\\"China\\\"]\"","\"country\""},
   "Entity"], "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.779704356456402*^9, 3.7797043578005877`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a81051c3-039d-4181-a810-88af01dbeb7c"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 750, "InitialType" -> 
        TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 750], 
        "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape, 
            TypeSystem`PackageScope`UnknownShape]], 20, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[356677859], "Type" -> 
        TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 750], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[356677859]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 41, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"adjusted net national income\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdjustedNetNationalIncome"]]]],
                    "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"9.10574337989528`*^12", 
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                    "US dollars per year", 
                    FractionBox["\"USDollars\"", "\"Years\""]}, 
                    "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdjustedNetNationalIncome"]]]],
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"seasonal bank borrowings from Fed, plus adjustments\"",
                     FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AdjustmentSeasonalBorrowings"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AdjustmentSeasonalBorrowings"]]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"regions\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdministrativeDivisions"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 31], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 31], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1156187653][{
                    Key[
                    EntityProperty["Country", "AdministrativeDivisions"]]}]], 
                 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdministrativeDivisions"]]]], 
                 "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"adult population\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdultPopulation"]]]], "Mouse"],
                   ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"9.95072896`*^8", "\"people\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdultPopulation"]]]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"obese adults\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdultsObese"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "$Failed", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdultsObese"]]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"number of aggravated assaults\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggravatedAssault"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Null", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggravatedAssault"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"rate of aggravated assault\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggravatedAssaultRate"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Null", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggravatedAssaultRate"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 15 to 24 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue15To24"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue15To24"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 25 to 34 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue25To34"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue25To34"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 35 to 64 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue35To64"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue35To64"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 65 years and over\"",
                     FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue65"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue65"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate household income\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHouseholdIncome"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHouseholdIncome"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate weekly hours index\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateWeeklyHoursIndex"]]]],
                    "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateWeeklyHoursIndex"]]]],
                  "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural irrigated land fraction\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AgriculturalIrrigatedLandFraction"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   TemplateBox[{
                    "10.4910475694438`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AgriculturalIrrigatedLandFraction"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural land fraction\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AgriculturalLandFraction"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   TemplateBox[{
                    "56.2123131033498`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AgriculturalLandFraction"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural production index\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionIndex"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["127.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionIndex"]]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural production per capita index\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionPerCapitaIndex"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["122.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionPerCapitaIndex"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural products\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AgriculturalProducts"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 13], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 13], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1156187653][{
                    Key[
                    EntityProperty["Country", "AgriculturalProducts"]]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AgriculturalProducts"]]]], 
                 "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"consumption\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1156187653][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AgricultureConsumption"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AgricultureConsumption"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 (-20), {1, 750 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 750 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    750, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 750 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 20, {1, 750 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 (-20), {1, 750 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 750 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    750, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 750 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 20, {1, 750 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1156187653},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1156187653},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1156187653},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1156187653},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1156187653},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1156187653][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1156187653]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1156187653][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {609., {333., 340.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.77970437895992*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"c48c44fb-012a-4116-8f93-d7d06ba2cec1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"TakeLargestBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         FractionBox[
          RowBox[{"CountryData", "[", 
           RowBox[{"#", ",", "\"\<GDP\>\""}], "]"}], 
          RowBox[{"CountryData", "[", 
           RowBox[{"#", ",", "\"\<Population\>\""}], "]"}]]}], "}"}], "&"}], 
      ",", 
      RowBox[{"CountryData", "[", "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
    "Last", ",", "15"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.779720489142428*^9, 3.77972055275616*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"36fdebcb-9f6a-4162-a803-e001f7bfbaae"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,4,1,25147008568202135835,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.779720561615196*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"62d7ed4e-3049-4124-9f71-dbf5a1f77d75"],

Cell[BoxData[
 TemplateBox[{
  "Quantity","compatu","\"Incompatible units.\"",2,4,2,25147008568202135835,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7797205632066593`*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"1e4c4083-ac1f-4d8a-8b51-37e9dc318f79"],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"TakeLargestBy", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Afghanistan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"547.9588466934596`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Aland Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"AlandIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"AlandIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "29013"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Albania\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4048.842609053347`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3849.376788173316`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"American Samoa\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"","\"country\""},
         
         "Entity"], ",", 
        TemplateBox[{"11825.811901295807`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Andorra\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"37140.48852225089`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Angola\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3446.2274904076803`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Anguilla\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"14164.20613449992`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Antigua and Barbuda\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"14313.460217461672`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Argentina\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"12379.534189099688`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Armenia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3607.7388597525296`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Aruba\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"24552.208610264093`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Australia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"49267.435615420436`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Austria\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"44737.23241913934`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Azerbaijan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3851.1699803523125`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Bahamas\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Bahamas\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Bahamas\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"28484.853083637485`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Bahrain\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Bahrain\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Bahrain\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"21559.301954822105`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Bangladesh\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1344.601307168115`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Barbados\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Barbados\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Barbados\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"15578.242958991177`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Belarus\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5006.920700461053`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Belgium\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"40943.38549654494`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Belize\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4646.886284599433`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Benin\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"768.0089428213261`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Bermuda\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Bermuda\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Bermuda\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"90852.49963324585`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Bhutan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2739.736791761358`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Bolivia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3058.9593826910314`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Caribbean Netherlands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"BonaireSintEustatiusAndSaba\""}], 
            "]"}],"\"Entity[\\\"Country\\\", \
\\\"BonaireSintEustatiusAndSaba\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "21133"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Bosnia and Herzegovina\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4821.840650799896`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Botswana\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"6799.058531681954`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Bouvet Island\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"BouvetIsland\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"BouvetIsland\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           "ComplexInfinity",
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Brazil\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"8582.35637265098`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{
         "\"British Indian Ocean Territory\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"BritishIndianOceanTerritory\""}], 
            "]"}],"\"Entity[\\\"Country\\\", \
\\\"BritishIndianOceanTerritory\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "2500"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"British Virgin Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"BritishVirginIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"BritishVirginIslands\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"29144.428516476473`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Brunei\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"36137.495210884845`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Bulgaria\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"7514.623323375657`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Burkina Faso\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"609.2326793718324`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Burundi\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"276.78214458529794`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Cambodia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1250.626758527852`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Cameroon\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1339.3973196124243`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Canada\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"41769.118068666845`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Cape Verde\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"CapeVerde\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"CapeVerde\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3343.8171445932194`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Cayman Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"CaymanIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"CaymanIslands\\\"]\"","\"country\""},
         
         "Entity"], ",", 
        TemplateBox[{"52096.89099793775`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Central African Republic\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"376.92520351586796`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Chad\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"644.3466671051934`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Chile\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"13682.174549442068`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"China\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"China\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"China\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"7945.375616849658`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Christmas Island\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"ChristmasIsland\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"ChristmasIsland\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "1513"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Cocos Keeling Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"CocosKeelingIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"CocosKeelingIslands\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "550"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Colombia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5756.8329953039`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Comoros\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Comoros\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Comoros\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"757.6427063529952`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Cook Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"14255.440639367158`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Costa Rica\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"CostaRica\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"CostaRica\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"10417.672952751424`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Croatia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"12105.677747981084`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Cuba\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Cuba\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Cuba\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"7586.901317551553`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Curacao\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Curacao\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Curacao\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"17883.504942724197`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Cyprus\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"16995.46121730752`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Czech Republic\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"","\"country\""},
         
         "Entity"], ",", 
        TemplateBox[{"18393.248423890145`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{
         "\"Democratic Republic of the Congo\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], 
            "]"}],"\"Entity[\\\"Country\\\", \\\"DemocraticRepublicCongo\\\"]\
\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"392.560377583487`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Denmark\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"53526.977157716225`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Djibouti\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Djibouti\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Djibouti\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1804.6259868232`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Dominica\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Dominica\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Dominica\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"7865.864482270572`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Dominican Republic\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"DominicanRepublic\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"DominicanRepublic\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"6648.422660389145`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"East Timor\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1375.4214845048757`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Ecuador\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Ecuador\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Ecuador\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5931.718153622726`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Egypt\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3411.3818216267255`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"El Salvador\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"ElSalvador\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"ElSalvador\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4201.644346459538`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Equatorial Guinea\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"EquatorialGuinea\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"EquatorialGuinea\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"8428.569463043461`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Eritrea\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Eritrea\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Eritrea\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"514.4657293562105`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Estonia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"17820.2026359446`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Ethiopia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Ethiopia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Ethiopia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"689.5578400970468`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Falkland Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"FalklandIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"FalklandIslands\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"37007.042253521126`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Faroe Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"FaroeIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"FaroeIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"53022.09252793792`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Fiji\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Fiji\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Fiji\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5194.5031357959115`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Finland\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"43181.7717404722`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"France\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"France\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"France\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"37941.99946238838`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"French Guiana\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"FrenchGuiana\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"FrenchGuiana\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5485.779769462846`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"French Polynesia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"FrenchPolynesia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"FrenchPolynesia\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5022.856644499112`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{
         "\"French Southern And Antarctic lands\"",RowBox[{"Entity", "[", 
            
            RowBox[{"\"Country\"", ",", 
              "\"FrenchSouthernAndAntarcticLands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"FrenchSouthernAndAntarcticLands\\\"]\
\"","\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "196"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Gabon\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Gabon\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Gabon\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"7018.566215609956`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Gambia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Gambia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Gambia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"459.2087369364391`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Gaza Strip\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"435.52549723911994`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Georgia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3675.304840379202`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Germany\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"42353.15278016632`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Ghana\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Ghana\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Ghana\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1480.5553520118124`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Gibraltar\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Gibraltar\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Gibraltar\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"31992.132133869425`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Greece\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"17266.55310344216`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Greenland\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Greenland\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Greenland\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"39312.69125939429`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Grenada\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Grenada\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Grenada\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"9795.396175215303`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Guadeloupe\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Guadeloupe\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Guadeloupe\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"7814.168268204143`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Guam\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Guam\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Guam\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"35273.91629980089`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Guatemala\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4065.583336810494`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Guernsey\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Guernsey\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Guernsey\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"41795.59484795366`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Guinea\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Guinea\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Guinea\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"644.8167425709969`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Guinea-Bissau\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"GuineaBissau\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"GuineaBissau\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"625.8825283120245`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Guyana\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Guyana\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Guyana\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4502.611777238536`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Haiti\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Haiti\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Haiti\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"730.5774901807557`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Honduras\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Honduras\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Honduras\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2322.372726453959`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Hong Kong\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"42081.97071596046`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Hungary\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"12942.023025377823`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Iceland\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Iceland\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Iceland\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"59838.55833548869`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"India\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"India\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1690.4316706164873`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Indonesia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3531.4000832023644`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Iran\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5162.177027834074`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Iraq\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4480.488915449058`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Ireland\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"64015.325022495526`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Isle of Man\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"IsleOfMan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"IsleOfMan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"80586.77034773417`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Israel\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"35579.275882433365`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Italy\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"31315.97532892946`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Ivory Coast\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"IvoryCoast\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"IvoryCoast\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1497.1388066533716`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Jamaica\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Jamaica\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Jamaica\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4863.479089654911`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Japan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"38751.069456840894`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Jersey\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Jersey\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Jersey\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"53273.72247524338`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Jordan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3984.057037141289`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Kazakhstan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"7540.900745698687`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Kenya\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Kenya\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Kenya\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1419.0988051098634`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Kiribati\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Kiribati\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Kiribati\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1559.7474603968196`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Kosovo\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Kosovo\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Kosovo\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3576.7416946341473`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Kuwait\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"26804.019962320577`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Kyrgyzstan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1083.7321986698223`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Laos\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2318.891579226848`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Latvia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"14142.23867725133`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Lebanon\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"8154.54041618338`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Lesotho\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Lesotho\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Lesotho\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1025.9623225504324`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Liberia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Liberia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Liberia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"444.00712947383147`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4573.249172140596`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Liechtenstein\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Liechtenstein\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Liechtenstein\\\"]\"","\"country\""},
         
         "Entity"], ",", 
        TemplateBox[{"165844.7710974917`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Lithuania\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"14787.018760829875`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Luxembourg\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"100489.88278350243`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Macau\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"71964.36982674395`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Macedonia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5232.237747886696`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Madagascar\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Madagascar\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Madagascar\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"391.11628357755177`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Malawi\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Malawi\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Malawi\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"291.75213748762064`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Malaysia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"9376.848434515978`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Maldives\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Maldives\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Maldives\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"9681.226592783374`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Mali\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"756.9299683022796`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Malta\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"25529.605487920202`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Marshall Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"MarshallIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"MarshallIslands\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3660.999115327423`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Martinique\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Martinique\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Martinique\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"15892.604755570335`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1072.1948973862557`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Mauritius\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Mauritius\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Mauritius\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"9618.269109191568`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Mayotte\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Mayotte\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Mayotte\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1844.7311742970617`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Mexico\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"8105.4207889622585`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Micronesia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Micronesia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Micronesia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"625.3589369324967`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Moldova\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Moldova\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Moldova\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1617.0867888655469`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Monaco\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Monaco\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Monaco\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"156994.04027883112`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Mongolia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3636.131887309662`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Montenegro\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"6954.539577062739`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Montserrat\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Montserrat\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Montserrat\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"10708.86213236609`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2898.923873548094`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Mozambique\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Mozambique\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Mozambique\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"371.2602454091118`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Myanmar\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1215.3789580933524`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Namibia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4320.746157924046`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Nauru\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Nauru\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Nauru\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5588.459000817667`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Nepal\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"721.1050908853671`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Netherlands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"45622.82050928496`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"New Caledonia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"NewCaledonia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"NewCaledonia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"9709.677885881523`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"New Zealand\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"NewZealand\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"NewZealand\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"39306.481173829925`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Nicaragua\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Nicaragua\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Nicaragua\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2041.3987670596007`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Niger\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"350.5268834097855`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Nigeria\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Nigeria\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Nigeria\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2119.8624356298606`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Niue\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Niue\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Niue\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"6186.650185414091`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Norfolk Island\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"NorfolkIsland\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"NorfolkIsland\\\"]\"","\"country\""},
         
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "2196"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Northern Mariana Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"NorthernMarianaIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"NorthernMarianaIslands\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"22522.849267372698`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"North Korea\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"481.6673607256344`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Norway\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"69943.33688561033`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Oman\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"14298.883024816781`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Pakistan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1415.6892582738542`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Palau\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Palau\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Palau\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"14278.075383128536`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Panama\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Panama\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Panama\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"13465.055151934068`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Papua New Guinea\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2449.7415238872295`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Paraguay\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4026.262748889734`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Peru\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5975.577299850476`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Philippines\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Philippines\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Philippines\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2906.1280742462145`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Pitcairn Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"PitcairnIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"PitcairnIslands\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "56"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Poland\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"12348.850309995683`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Portugal\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"19830.24143743815`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Puerto Rico\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"PuertoRico\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"PuertoRico\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"28154.81564814362`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Qatar\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"57764.204179553286`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Republic of the Congo\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"","\"country\""},
         
         "Entity"], ",", 
        TemplateBox[{"1489.0479264299959`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"R\[EAcute]union\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Reunion\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Reunion\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"12434.944704424788`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Romania\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"9532.451898454548`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Russia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"8911.488146505897`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Rwanda\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Rwanda\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Rwanda\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"686.0886030898962`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Saint Barthelemy\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SaintBarthelemy\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SaintBarthelemy\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "9035"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{
         "\"Saint Helena, Ascension and Tristan da Cunha\"",
          RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SaintHelena\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SaintHelena\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4445.542109162756`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Saint Kitts and Nevis\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SaintKittsNevis\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SaintKittsNevis\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"16439.689574821918`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Saint Lucia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SaintLucia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SaintLucia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"9321.412536644784`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Saint Martin\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SaintMartin\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SaintMartin\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "36286"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Saint Pierre and Miquelon\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SaintPierreMiquelon\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SaintPierreMiquelon\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"7642.405063291139`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{
         "\"Saint Vincent and the Grenadines\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SaintVincentGrenadines\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SaintVincentGrenadines\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"6990.402164450959`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Samoa\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Samoa\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Samoa\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4003.0356078332825`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"San Marino\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SanMarino\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SanMarino\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"47625.986964124844`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{
         "\"S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe\"",
          RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SaoTomePrincipe\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SaoTomePrincipe\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1677.6134114457705`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Saudi Arabia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"19625.78785193963`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Senegal\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Senegal\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Senegal\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"926.3831149321031`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Serbia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4356.923073297341`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Seychelles\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Seychelles\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Seychelles\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"15066.171496839672`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Sierra Leone\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SierraLeone\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SierraLeone\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"494.4400863127751`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Singapore\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Singapore\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Singapore\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"52020.28267197457`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Sint Maarten\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SintMaarten\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SintMaarten\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"19775.67298105683`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Slovakia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"16478.371459791433`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Slovenia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"21494.76659771853`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Solomon Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SolomonIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SolomonIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1966.3674892817942`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Somalia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Somalia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Somalia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"421.705294270187`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"South Africa\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5209.291338444491`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{
         "\"South Georgia and the South Sandwich Islands\"",
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"Country\"", ",", 
              "\"SouthGeorgiaAndTheSouthSandwichIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \
\\\"SouthGeorgiaAndTheSouthSandwichIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "30"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"South Korea\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"27681.13690274227`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"South Sudan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"716.8754868506663`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Spain\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"26691.255377332785`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Sri Lanka\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"SriLanka\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"SriLanka\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3895.3010306672963`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Sudan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2358.167464459646`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Suriname\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5818.980636071899`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Svalbard\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Svalbard\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Svalbard\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "2637"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Eswatini\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Swaziland\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Swaziland\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2721.25689489672`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Sweden\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"51909.544320444234`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Switzerland\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"78911.14932615495`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Syria\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2211.5652946813084`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Taiwan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Taiwan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Taiwan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"18072.960244227914`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Tajikistan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"779.2164429616629`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Tanzania\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"826.0348178796277`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Thailand\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5895.7240726564705`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Togo\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"564.2688705872235`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Tokelau\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Tokelau\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Tokelau\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1153.8461538461538`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Tonga\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Tonga\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Tonga\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3717.4783024436865`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Trinidad and Tobago\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"TrinidadTobago\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"TrinidadTobago\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"20309.13609834829`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3647.423358655857`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Turkey\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"10696.779942918016`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Turkmenistan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"6283.3300563618395`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Turks and Caicos Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"TurksCaicosIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"TurksCaicosIslands\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"38953.25782881002`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Tuvalu\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Tuvalu\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Tuvalu\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"3057.4408898395372`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Uganda\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Uganda\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Uganda\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"561.7655210230195`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Ukraine\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2109.0968765271186`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"United Arab Emirates\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"",
          "\"country\""},
         "Entity"], ",", 
        TemplateBox[{"37099.7751316135`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"United Kingdom\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"","\"country\""},
         
         "Entity"], ",", 
        TemplateBox[{"40009.59866154973`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"57401.546645597446`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{
         "\"United States Minor Outlying Islands\"",RowBox[{"Entity", "[", 
            
            RowBox[{"\"Country\"", ",", 
              "\"UnitedStatesMinorOutlyingIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \
\\\"UnitedStatesMinorOutlyingIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "300"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"United States Virgin Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"UnitedStatesVirginIslands\""}], 
            "]"}],"\"Entity[\\\"Country\\\", \
\\\"UnitedStatesVirginIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"35890.98292675951`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Uruguay\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"15164.452365294452`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Uzbekistan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2106.517871878998`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Vanuatu\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2800.0712990240586`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Vatican City\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"VaticanCity\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"VaticanCity\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "792"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Venezuela\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"15084.540084204196`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Vietnam\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"2148.570790017469`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Wallis and Futuna Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"WallisFutuna\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"WallisFutuna\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"5096.407033041706`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"West Bank\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"4905.472323485602`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
         
         "Entity"], ",", 
        RowBox[{
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], " ", 
         RowBox[{"(", 
          
          TemplateBox[{
           FractionBox["1", "552628"],
            RowBox[{"\"/\"", "\[InvisibleSpace]", "\"person\""}],
            "reciprocal people",FractionBox["1", "\"People\""]},
           "Quantity"], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Yemen\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1272.7068235978118`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Zambia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1232.2352575137957`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Zimbabwe\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"1005.4481506578593`",RowBox[{
            FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
            RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
          "US dollars per person year",FractionBox["\"USDollars\"", 
           RowBox[{"\"People\"", " ", "\"Years\""}]]},
         "QuantityPrefixUnit"]}], "}"}]}], "}"}], ",", "Last", ",", "15"}], 
   "]"}], "]"}]], "Output",
 CellChangeTimes->{3.7797205638026943`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"89add1ac-1e19-4da8-9e48-9c9d1ee07fa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"TakeLargestBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         FractionBox[
          RowBox[{"CountryData", "[", 
           RowBox[{"#", ",", "\"\<GDP\>\""}], "]"}], 
          RowBox[{"CountryData", "[", 
           RowBox[{"#", ",", "\"\<Population\>\""}], "]"}]]}], "}"}], "&"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"CountryData", "[", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"And", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Not", "@", 
            RowBox[{"MissingQ", "@", 
             RowBox[{"CountryData", "[", 
              RowBox[{"#", ",", "\"\<GDP\>\""}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Not", "@", 
            RowBox[{"MissingQ", "@", 
             RowBox[{"CountryData", "[", 
              RowBox[{"#", ",", "\"\<Population\>\""}], "]"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], "&"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", "Last", ",", 
    "15"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.779720607652584*^9, 3.77972067085108*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"5b9836e3-93e9-4f41-b6b7-2a72b6ca4dcf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Liechtenstein\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Liechtenstein\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Liechtenstein\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"165844.7710974917`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Monaco\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Monaco\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Monaco\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"156994.04027883112`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Luxembourg\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"100489.88278350243`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Bermuda\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Bermuda\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Bermuda\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"90852.49963324585`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Isle of Man\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"IsleOfMan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"IsleOfMan\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"80586.77034773417`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Switzerland\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"78911.14932615495`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Macau\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"71964.36982674395`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Norway\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"69943.33688561033`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Ireland\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"64015.325022495526`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Iceland\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Iceland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Iceland\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"59838.55833548869`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Qatar\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"57764.204179553286`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"57401.546645597446`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Denmark\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"53526.977157716225`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Jersey\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Jersey\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Jersey\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"53273.72247524338`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]},
    {
     TemplateBox[{"\"Faroe Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"FaroeIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"FaroeIslands\\\"]\"","\"country\""},
      "Entity"], 
     TemplateBox[{"53022.09252793792`",RowBox[{
         FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],RowBox[{
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"person\""}], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}]}],
       "US dollars per person year",FractionBox["\"USDollars\"", 
        RowBox[{"\"People\"", " ", "\"Years\""}]]},
      "QuantityPrefixUnit"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.779720672848935*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"4dfcabfb-d1e9-48a6-a298-97263f54a0ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"TakeLargestBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         FractionBox[
          RowBox[{"CountryData", "[", 
           RowBox[{"#", ",", "\"\<GDP\>\""}], "]"}], 
          RowBox[{"CountryData", "[", 
           RowBox[{"#", ",", "\"\<LandArea\>\""}], "]"}]]}], "}"}], "&"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"CountryData", "[", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"And", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Not", "@", 
            RowBox[{"MissingQ", "@", 
             RowBox[{"CountryData", "[", 
              RowBox[{"#", ",", "\"\<GDP\>\""}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Not", "@", 
            RowBox[{"MissingQ", "@", 
             RowBox[{"CountryData", "[", 
              RowBox[{"#", ",", "\"\<Population\>\""}], "]"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], "&"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", "Last", ",", 
    "15"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77972259761761*^9, 
  3.779722607305565*^9}},ExpressionUUID->"8c8c9650-c2c9-430b-94e2-\
35cdb65cdfd2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"And", "@", 
  RowBox[{"{", 
   RowBox[{"True", ",", "False"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.77972261498355*^9, 3.779722619492611*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c663d87c-73a9-40d9-bd71-417b01675c83"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.779722619770463*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"365b6ce2-ce9c-459e-bc5c-d023b2b29d3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"And", ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.779722628716773*^9, 3.7797226332065277`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c6081c51-bcc8-4ab8-b0d1-0270efda7e55"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7797226334801617`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6b56e646-68ae-4b5a-8e9c-016f17150849"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"TakeLargestBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         FractionBox[
          RowBox[{"CountryData", "[", 
           RowBox[{"#", ",", "\"\<GDP\>\""}], "]"}], 
          RowBox[{"CountryData", "[", 
           RowBox[{"#", ",", "\"\<LandArea\>\""}], "]"}]]}], "}"}], "&"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"CountryData", "[", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{"Function", "[", 
             RowBox[{"p", ",", "\[IndentingNewLine]", 
              RowBox[{"Not", "@", 
               RowBox[{"MissingQ", "@", 
                RowBox[{"CountryData", "[", 
                 RowBox[{"CountryData", "[", 
                  RowBox[{"#", ",", "p"}], "]"}], "]"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"\"\<GDP\>\"", ",", "\"\<LandArea\>\""}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
           "\[IndentingNewLine]", "&"}]}], "]"}]}], "\[IndentingNewLine]", 
       "]"}]}], "]"}], ",", "Last", ",", "15"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.779722640966168*^9, 3.779722824433578*^9}, {
  3.779724715631227*^9, 3.779724716827389*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"59cc8014-ff75-4407-95d0-1b5589c0c8d2"],

Cell[BoxData[
 TemplateBox[{
  "Attributes","attnf",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"GDP\\\\\\\"\\\"}]\\) is not a known \
attribute.\"",2,10,16,25147008568202135835,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.779722817409999*^9, 3.779722824913803*^9}, 
   3.779724717305873*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"00e29c17-e122-4005-a162-c68c08647ce0"],

Cell[BoxData[
 TemplateBox[{
  "Attributes","attnf",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"LandArea\\\\\\\"\\\"}]\\) is not a known \
attribute.\"",2,10,17,25147008568202135835,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.779722817409999*^9, 3.779722824913803*^9}, 
   3.779724717318778*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"e06981ce-f18a-4a37-ba27-3f5ac5a040f0"],

Cell[BoxData[
 TemplateBox[{
  "Attributes","attnf",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"GDP\\\\\\\"\\\"}]\\) is not a known \
attribute.\"",2,10,18,25147008568202135835,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.779722817409999*^9, 3.779722824913803*^9}, 
   3.779724717422142*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"7e3a50ea-06fc-4f64-b8eb-bbf920426c21"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Attributes\\\", \
\\\"::\\\", \\\"attnf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,10,19,25147008568202135835,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.779722817409999*^9, 3.779722824913803*^9}, 
   3.77972471743143*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"c2e3948a-5c7f-40b2-8e53-4eafdf9c9e5e"],

Cell[BoxData[
 TemplateBox[{
  "TakeLargestBy","rank",
   "\"The rank \\!\\(\\*RowBox[{\\\"15\\\"}]\\) is not an integer between 1 \
and \\!\\(\\*RowBox[{\\\"0\\\"}]\\).\"",2,10,20,25147008568202135835,"Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.779722817409999*^9, 3.779722824913803*^9}, 
   3.77972471744109*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"3b9abc4b-1437-43be-8c4b-48da0b4dee2b"],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"TakeLargestBy", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "Last", ",", "15"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.779722817460313*^9, 3.779722824964314*^9}, 
   3.779724717448848*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"42471c1c-ec6f-49e5-85e2-a19e612565a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{"\"\<UnitedStates\>\"", ",", "\"\<GiniIndex\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.779725187531324*^9, 3.779725190426828*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"114d642d-262b-4916-8fac-af20ebc9e9e7"],

Cell[BoxData["0.45`"], "Output",
 CellChangeTimes->{3.77972519064613*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"5bb405d8-c67d-4af7-a2af-75a43071b6de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"ReverseSortBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"#", ",", "\"\<GiniIndex\>\""}], "]"}]}], "}"}], "&"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<UnitedStates\>\"", ",", "\"\<China\>\"", ",", "\"\<Denmark\>\"", 
        ",", "\"\<Netherlands\>\"", ",", "\"\<Switzerland\>\"", ",", 
        "\"\<Germany\>\"", ",", "\"\<France\>\"", ",", "\"\<Spain\>\"", ",", 
        "\"\<Japan\>\""}], "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
    "Last"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.779725196611629*^9, 3.7797252610725803`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"378227a5-05f6-464a-80c7-5779a385a9d6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"China\"\>", "0.47000000000000003`"},
    {"\<\"UnitedStates\"\>", "0.45`"},
    {"\<\"Japan\"\>", "0.381`"},
    {"\<\"Switzerland\"\>", "0.337`"},
    {"\<\"France\"\>", "0.327`"},
    {"\<\"Spain\"\>", "0.32`"},
    {"\<\"Netherlands\"\>", "0.309`"},
    {"\<\"Germany\"\>", "0.27`"},
    {"\<\"Denmark\"\>", "0.24`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.779725268749886*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"7c649f59-0929-490b-afba-37288ac7ae08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"ReverseSortBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"#", ",", "\"\<GiniIndex\>\""}], "]"}]}], "}"}], "&"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<UnitedStates\>\"", ",", "\"\<China\>\"", ",", "\"\<Denmark\>\"", 
        ",", "\"\<Netherlands\>\"", ",", "\"\<Switzerland\>\"", ",", 
        "\"\<Germany\>\"", ",", "\"\<France\>\"", ",", "\"\<Spain\>\"", ",", 
        "\"\<Japan\>\"", ",", "\"\<Sweden\>\""}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "Last"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.779725287667049*^9, 3.7797252900192204`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"2ef8945a-4ce8-46db-a018-cacc87f5d7d1"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"China\"\>", "0.47000000000000003`"},
    {"\<\"UnitedStates\"\>", "0.45`"},
    {"\<\"Japan\"\>", "0.381`"},
    {"\<\"Switzerland\"\>", "0.337`"},
    {"\<\"France\"\>", "0.327`"},
    {"\<\"Spain\"\>", "0.32`"},
    {"\<\"Netherlands\"\>", "0.309`"},
    {"\<\"Germany\"\>", "0.27`"},
    {"\<\"Denmark\"\>", "0.24`"},
    {"\<\"Sweden\"\>", "0.23`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.779725290313136*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e0ec2dd6-e70d-433c-86b6-57c6213d90d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"ReverseSortBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"#", ",", "\"\<GiniIndex\>\""}], "]"}]}], "}"}], "&"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"CountryData", "[", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
    "Last"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.779725301380003*^9, 3.779725312756805*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"c4e57961-1307-440f-90f8-2062c6a316b0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"West Bank\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Wallis and Futuna Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"WallisFutuna\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"WallisFutuna\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Vatican City\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"VaticanCity\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"VaticanCity\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Vanuatu\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"United States Virgin Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"UnitedStatesVirginIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"UnitedStatesVirginIslands\\\"]\"",
       "\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{
      "\"United States Minor Outlying Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"UnitedStatesMinorOutlyingIslands\""}],
          "]"}],
       "\"Entity[\\\"Country\\\", \
\\\"UnitedStatesMinorOutlyingIslands\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"United Arab Emirates\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"",
       "\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Tuvalu\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tuvalu\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tuvalu\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Turks and Caicos Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"TurksCaicosIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"TurksCaicosIslands\\\"]\"",
       "\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Trinidad and Tobago\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"TrinidadTobago\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"TrinidadTobago\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Tonga\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tonga\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tonga\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Tokelau\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tokelau\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tokelau\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Togo\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Taiwan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Taiwan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Taiwan\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Syria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Svalbard\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Svalbard\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Svalbard\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Suriname\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Sudan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"South Sudan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{
      "\"South Georgia and the South Sandwich Islands\"",
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"Country\"", ",", "\"SouthGeorgiaAndTheSouthSandwichIslands\""}], 
         "]"}],"\"Entity[\\\"Country\\\", \
\\\"SouthGeorgiaAndTheSouthSandwichIslands\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Somalia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Somalia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Somalia\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Solomon Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SolomonIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SolomonIslands\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Sint Maarten\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SintMaarten\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SintMaarten\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Seychelles\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Seychelles\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Seychelles\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Saudi Arabia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{
      "\"S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SaoTomePrincipe\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SaoTomePrincipe\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"San Marino\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SanMarino\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SanMarino\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Samoa\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Samoa\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Samoa\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{
      "\"Saint Vincent and the Grenadines\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SaintVincentGrenadines\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SaintVincentGrenadines\\\"]\"",
       "\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Saint Pierre and Miquelon\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SaintPierreMiquelon\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SaintPierreMiquelon\\\"]\"",
       "\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Saint Martin\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SaintMartin\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SaintMartin\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Saint Lucia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SaintLucia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SaintLucia\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Saint Kitts and Nevis\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SaintKittsNevis\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SaintKittsNevis\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{
      "\"Saint Helena, Ascension and Tristan da Cunha\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SaintHelena\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SaintHelena\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Saint Barthelemy\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SaintBarthelemy\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SaintBarthelemy\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"R\[EAcute]union\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Reunion\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Reunion\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Republic of the Congo\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Qatar\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Puerto Rico\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"PuertoRico\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"PuertoRico\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Pitcairn Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"PitcairnIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"PitcairnIslands\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Palau\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Palau\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Palau\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Oman\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"North Korea\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Northern Mariana Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"NorthernMarianaIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"NorthernMarianaIslands\\\"]\"",
       "\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Norfolk Island\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"NorfolkIsland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"NorfolkIsland\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Niue\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Niue\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Niue\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"New Caledonia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"NewCaledonia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"NewCaledonia\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Nauru\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Nauru\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Nauru\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Myanmar\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Montserrat\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Montserrat\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Montserrat\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Monaco\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Monaco\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Monaco\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Micronesia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Micronesia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Micronesia\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Mayotte\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mayotte\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mayotte\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Martinique\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Martinique\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Martinique\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Marshall Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"MarshallIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"MarshallIslands\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Maldives\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Maldives\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Maldives\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Macau\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Liechtenstein\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Liechtenstein\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Liechtenstein\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Liberia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Liberia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Liberia\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Lebanon\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Kuwait\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Kosovo\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Kosovo\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Kosovo\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Kiribati\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Kiribati\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Kiribati\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Jersey\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Jersey\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Jersey\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Isle of Man\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"IsleOfMan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"IsleOfMan\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Iraq\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Guinea-Bissau\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"GuineaBissau\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"GuineaBissau\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Guernsey\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Guernsey\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Guernsey\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Guam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Guam\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Guam\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Guadeloupe\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Guadeloupe\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Guadeloupe\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Grenada\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Grenada\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Grenada\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Greenland\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Greenland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Greenland\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Gibraltar\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Gibraltar\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Gibraltar\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Gaza Strip\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Gabon\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Gabon\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Gabon\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{
      "\"French Southern And Antarctic lands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"FrenchSouthernAndAntarcticLands\""}], 
         "]"}],"\"Entity[\\\"Country\\\", \\\"FrenchSouthernAndAntarcticLands\
\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"French Polynesia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"FrenchPolynesia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"FrenchPolynesia\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"French Guiana\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"FrenchGuiana\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"FrenchGuiana\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Fiji\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Fiji\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Fiji\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Faroe Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"FaroeIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"FaroeIslands\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Falkland Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"FalklandIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"FalklandIslands\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Eritrea\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Eritrea\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Eritrea\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Equatorial Guinea\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"EquatorialGuinea\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"EquatorialGuinea\\\"]\"","\"country\""},
      
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Dominica\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Dominica\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Dominica\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Djibouti\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Djibouti\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Djibouti\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{
      "\"Democratic Republic of the Congo\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"DemocraticRepublicCongo\\\"]\"",
       "\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Curacao\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Curacao\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Curacao\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Cuba\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Cuba\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Cuba\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Cook Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Comoros\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Comoros\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Comoros\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Cocos Keeling Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"CocosKeelingIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"CocosKeelingIslands\\\"]\"",
       "\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Christmas Island\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"ChristmasIsland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"ChristmasIsland\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Chad\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Cayman Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"CaymanIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"CaymanIslands\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Cape Verde\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"CapeVerde\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"CapeVerde\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Brunei\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"British Virgin Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"BritishVirginIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"BritishVirginIslands\\\"]\"",
       "\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{
      "\"British Indian Ocean Territory\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"BritishIndianOceanTerritory\""}], 
         "]"}],"\"Entity[\\\"Country\\\", \
\\\"BritishIndianOceanTerritory\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Bouvet Island\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"BouvetIsland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"BouvetIsland\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Caribbean Netherlands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"BonaireSintEustatiusAndSaba\""}], 
         "]"}],
       "\"Entity[\\\"Country\\\", \\\"BonaireSintEustatiusAndSaba\\\"]\"",
       "\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Bhutan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Bermuda\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Bermuda\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Bermuda\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Belize\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Barbados\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Barbados\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Barbados\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Bahrain\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Bahrain\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Bahrain\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Bahamas\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Bahamas\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Bahamas\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Aruba\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Antigua and Barbuda\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Anguilla\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Angola\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Andorra\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"American Samoa\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Aland Islands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"AlandIslands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"AlandIslands\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Afghanistan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"","\"country\""},
      "Entity"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"Namibia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"","\"country\""},
      "Entity"], "0.7070000000000001`"},
    {
     TemplateBox[{"\"South Africa\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"","\"country\""},
      "Entity"], "0.65`"},
    {
     TemplateBox[{"\"Lesotho\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Lesotho\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Lesotho\\\"]\"","\"country\""},
      "Entity"], "0.632`"},
    {
     TemplateBox[{"\"Botswana\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"","\"country\""},
      "Entity"], "0.63`"},
    {
     TemplateBox[{"\"Sierra Leone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SierraLeone\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SierraLeone\\\"]\"","\"country\""},
      "Entity"], "0.629`"},
    {
     TemplateBox[{"\"Central African Republic\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"",
       "\"country\""},
      "Entity"], "0.613`"},
    {
     TemplateBox[{"\"Haiti\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Haiti\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Haiti\\\"]\"","\"country\""},
      "Entity"], "0.5920000000000001`"},
    {
     TemplateBox[{"\"Bolivia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"","\"country\""},
      "Entity"], "0.5920000000000001`"},
    {
     TemplateBox[{"\"Paraguay\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"","\"country\""},
      "Entity"], "0.568`"},
    {
     TemplateBox[{"\"Brazil\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"","\"country\""},
      "Entity"], "0.5670000000000001`"},
    {
     TemplateBox[{"\"Bosnia and Herzegovina\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\"]\"","\"country\""},
      "Entity"], "0.562`"},
    {
     TemplateBox[{"\"Panama\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Panama\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Panama\\\"]\"","\"country\""},
      "Entity"], "0.561`"},
    {
     TemplateBox[{"\"Guatemala\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"","\"country\""},
      "Entity"], "0.551`"},
    {
     TemplateBox[{"\"Chile\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"","\:f3b5country\:f3b5"},
      "Entity"], "0.549`"},
    {
     TemplateBox[{"\"Honduras\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Honduras\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Honduras\\\"]\"","\"country\""},
      "Entity"], "0.538`"},
    {
     TemplateBox[{"\"Colombia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"","\"country\""},
      "Entity"], "0.538`"},
    {
     TemplateBox[{"\"Hong Kong\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"","\"country\""},
      "Entity"], "0.533`"},
    {
     TemplateBox[{"\"El Salvador\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"ElSalvador\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"ElSalvador\\\"]\"","\"country\""},
      "Entity"], "0.524`"},
    {
     TemplateBox[{"\"Papua New Guinea\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"","\"country\""},
      "Entity"], "0.509`"},
    {
     TemplateBox[{"\"Zambia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"","\"country\""},
      "Entity"], "0.508`"},
    {
     TemplateBox[{"\"Niger\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"","\"country\""},
      "Entity"], "0.505`"},
    {
     TemplateBox[{"\"Eswatini\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Swaziland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Swaziland\\\"]\"","\"country\""},
      "Entity"], "0.504`"},
    {
     TemplateBox[{"\"Gambia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Gambia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Gambia\\\"]\"","\"country\""},
      "Entity"], "0.502`"},
    {
     TemplateBox[{"\"Zimbabwe\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"","\"country\""},
      "Entity"], "0.501`"},
    {
     TemplateBox[{"\"Dominican Republic\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"DominicanRepublic\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"DominicanRepublic\\\"]\"","\"country\""},
      "Entity"], "0.499`"},
    {
     TemplateBox[{"\"Peru\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"","\"country\""},
      "Entity"], "0.498`"},
    {
     TemplateBox[{"\"Sri Lanka\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SriLanka\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SriLanka\\\"]\"","\"country\""},
      "Entity"], "0.49`"},
    {
     TemplateBox[{"\"Argentina\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"","\"country\""},
      "Entity"], "0.49`"},
    {
     TemplateBox[{"\"Venezuela\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"","\"country\""},
      "Entity"], "0.48200000000000004`"},
    {
     TemplateBox[{"\"Singapore\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Singapore\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Singapore\\\"]\"","\"country\""},
      "Entity"], "0.481`"},
    {
     TemplateBox[{"\"Costa Rica\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"CostaRica\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"CostaRica\\\"]\"","\"country\""},
      "Entity"], "0.48`"},
    {
     TemplateBox[{"\"Mexico\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"","\"country\""},
      "Entity"], "0.479`"},
    {
     TemplateBox[{"\"Madagascar\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Madagascar\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Madagascar\\\"]\"","\"country\""},
      "Entity"], "0.47500000000000003`"},
    {
     TemplateBox[{"\"Mozambique\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mozambique\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mozambique\\\"]\"","\"country\""},
      "Entity"], "0.473`"},
    {
     TemplateBox[{"\"Nepal\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"","\"country\""},
      "Entity"], "0.472`"},
    {
     TemplateBox[{"\"China\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"China\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"China\\\"]\"","\"country\""},
      "Entity"], "0.47000000000000003`"},
    {
     TemplateBox[{"\"Rwanda\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Rwanda\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Rwanda\\\"]\"","\"country\""},
      "Entity"], "0.46799999999999997`"},
    {
     TemplateBox[{"\"Malaysia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"","\"country\""},
      "Entity"], "0.461`"},
    {
     TemplateBox[{"\"Ecuador\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Ecuador\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Ecuador\\\"]\"","\"country\""},
      "Entity"], "0.46`"},
    {
     TemplateBox[{"\"Philippines\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Philippines\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Philippines\\\"]\"","\"country\""},
      "Entity"], "0.45799999999999996`"},
    {
     TemplateBox[{"\"Uganda\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Uganda\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Uganda\\\"]\"","\"country\""},
      "Entity"], "0.457`"},
    {
     TemplateBox[{"\"Jamaica\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Jamaica\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Jamaica\\\"]\"","\"country\""},
      "Entity"], "0.455`"},
    {
     TemplateBox[{"\"Uruguay\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"","\"country\""},
      "Entity"], "0.452`"},
    {
     TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
      "Entity"], "0.45`"},
    {
     TemplateBox[{"\"Ivory Coast\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"IvoryCoast\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"IvoryCoast\\\"]\"","\"country\""},
      "Entity"], "0.446`"},
    {
     TemplateBox[{"\"Cameroon\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"","\"country\""},
      "Entity"], "0.446`"},
    {
     TemplateBox[{"\"Iran\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"","\"country\""},
      "Entity"], "0.445`"},
    {
     TemplateBox[{"\"Nigeria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Nigeria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Nigeria\\\"]\"","\"country\""},
      "Entity"], "0.43700000000000006`"},
    {
     TemplateBox[{"\"Turkey\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"","\"country\""},
      "Entity"], "0.436`"},
    {
     TemplateBox[{"\"Guyana\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Guyana\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Guyana\\\"]\"","\"country\""},
      "Entity"], "0.43200000000000005`"},
    {
     TemplateBox[{"\"Nicaragua\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Nicaragua\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Nicaragua\\\"]\"","\"country\""},
      "Entity"], "0.43100000000000005`"},
    {
     TemplateBox[{"\"Cambodia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"","\"country\""},
      "Entity"], "0.43`"},
    {
     TemplateBox[{"\"Kenya\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Kenya\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Kenya\\\"]\"","\"country\""},
      "Entity"], "0.425`"},
    {
     TemplateBox[{"\"Burundi\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"","\"country\""},
      "Entity"], "0.424`"},
    {
     TemplateBox[{"\"Thailand\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"","\"country\""},
      "Entity"], "0.42`"},
    {
     TemplateBox[{"\"Russia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"","\"country\""},
      "Entity"], "0.415`"},
    {
     TemplateBox[{"\"Senegal\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Senegal\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Senegal\\\"]\"","\"country\""},
      "Entity"], "0.413`"},
    {
     TemplateBox[{"\"Turkmenistan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"","\"country\""},
      "Entity"], "0.408`"},
    {
     TemplateBox[{"\"Georgia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"","\"country\""},
      "Entity"], "0.408`"},
    {
     TemplateBox[{"\"Mali\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"","\"country\""},
      "Entity"], "0.401`"},
    {
     TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
      "Entity"], "0.4`"},
    {
     TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
      "Entity"], "0.4`"},
    {
     TemplateBox[{"\"Jordan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"","\"country\""},
      "Entity"], "0.397`"},
    {
     TemplateBox[{"\"Burkina Faso\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"","\"country\""},
      "Entity"], "0.395`"},
    {
     TemplateBox[{"\"Indonesia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"","\"country\""},
      "Entity"], "0.394`"},
    {
     TemplateBox[{"\"Ghana\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Ghana\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Ghana\\\"]\"","\"country\""},
      "Entity"], "0.394`"},
    {
     TemplateBox[{"\"Mauritius\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mauritius\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mauritius\\\"]\"","\"country\""},
      "Entity"], "0.39`"},
    {
     TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
      "Entity"], "0.39`"},
    {
     TemplateBox[{"\"Malawi\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Malawi\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Malawi\\\"]\"","\"country\""},
      "Entity"], "0.39`"},
    {
     TemplateBox[{"\"Macedonia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"","\"country\""},
      "Entity"], "0.39`"},
    {
     RowBox[{
      TemplateBox[{"\"Israel\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}],
        "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"","\"country\""},
       "Entity"], "T"}], "0.386`"},
    {
     TemplateBox[{"\"Portugal\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"","\"country\""},
      "Entity"], "0.385`"},
    {
     TemplateBox[{"\"Japan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"","\"country\""},
      "Entity"], "0.381`"},
    {
     TemplateBox[{"\"Guinea\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Guinea\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Guinea\\\"]\"","\"country\""},
      "Entity"], "0.381`"},
    {
     TemplateBox[{"\"East Timor\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"","\"country\""},
      "Entity"], "0.38`"},
    {
     TemplateBox[{"\"Yemen\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"","\"country\""},
      "Entity"], "0.377`"},
    {
     TemplateBox[{"\"Vietnam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"","\"country\""},
      "Entity"], "0.37`"},
    {
     TemplateBox[{"\"Armenia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"","\"country\""},
      "Entity"], "0.37`"},
    {
     TemplateBox[{"\"Uzbekistan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"","\"country\""},
      "Entity"], "0.368`"},
    {
     TemplateBox[{"\"India\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"India\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
      "Entity"], "0.368`"},
    {
     TemplateBox[{"\"Benin\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"","\"country\""},
      "Entity"], "0.365`"},
    {
     TemplateBox[{"\"Azerbaijan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"","\"country\""},
      "Entity"], "0.365`"},
    {
     TemplateBox[{"\"New Zealand\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"NewZealand\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"NewZealand\\\"]\"","\"country\""},
      "Entity"], "0.36200000000000004`"},
    {
     TemplateBox[{"\"Lithuania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"","\"country\""},
      "Entity"], "0.36`"},
    {
     TemplateBox[{"\"Latvia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"","\"country\""},
      "Entity"], "0.36`"},
    {
     TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
      "Entity"], "0.353`"},
    {
     TemplateBox[{"\"Poland\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"","\"country\""},
      "Entity"], "0.349`"},
    {
     TemplateBox[{"\"Tanzania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"","\"country\""},
      "Entity"], "0.34600000000000003`"},
    {
     TemplateBox[{"\"Laos\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"","\"country\""},
      "Entity"], "0.34600000000000003`"},
    {
     TemplateBox[{"\"Egypt\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"","\"country\""},
      "Entity"], "0.344`"},
    {
     TemplateBox[{"\"United Kingdom\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"","\"country\""},
      "Entity"], "0.34`"},
    {
     TemplateBox[{"\"Estonia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"","\"country\""},
      "Entity"], "0.34`"},
    {
     TemplateBox[{"\"Switzerland\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"","\"country\""},
      "Entity"], "0.337`"},
    {
     TemplateBox[{"\"Moldova\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Moldova\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Moldova\\\"]\"","\"country\""},
      "Entity"], "0.332`"},
    {
     TemplateBox[{"\"Bangladesh\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"","\"country\""},
      "Entity"], "0.332`"},
    {
     TemplateBox[{"\"Greece\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"","\"country\""},
      "Entity"], "0.33`"},
    {
     TemplateBox[{"\"Mongolia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"","\"country\""},
      "Entity"], "0.32799999999999996`"},
    {
     TemplateBox[{"\"France\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"France\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"France\\\"]\"","\"country\""},
      "Entity"], "0.327`"},
    {
     TemplateBox[{"\"Tajikistan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"","\"country\""},
      "Entity"], "0.326`"},
    {
     TemplateBox[{"\"Canada\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"","\"country\""},
      "Entity"], "0.321`"},
    {
     TemplateBox[{"\"Spain\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"","\"country\""},
      "Entity"], "0.32`"},
    {
     TemplateBox[{"\"Romania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"","\"country\""},
      "Entity"], "0.32`"},
    {
     TemplateBox[{"\"Italy\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"","\"country\""},
      "Entity"], "0.32`"},
    {
     TemplateBox[{"\"Ireland\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"","\"country\""},
      "Entity"], "0.32`"},
    {
     TemplateBox[{"\"South Korea\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"","\"country\""},
      "Entity"], "0.313`"},
    {
     TemplateBox[{"\"Ukraine\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"","\"country\""},
      "Entity"], "0.31`"},
    {
     TemplateBox[{"\"Netherlands\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"","\"country\""},
      "Entity"], "0.309`"},
    {
     TemplateBox[{"\"Bulgaria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"","\"country\""},
      "Entity"], "0.307`"},
    {
     TemplateBox[{"\"Pakistan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"","\"country\""},
      "Entity"], "0.306`"},
    {
     TemplateBox[{"\"Australia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"","\"country\""},
      "Entity"], "0.305`"},
    {
     TemplateBox[{"\"Kazakhstan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"","\"country\""},
      "Entity"], "0.304`"},
    {
     TemplateBox[{"\"Kyrgyzstan\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"","\"country\""},
      "Entity"], "0.303`"},
    {
     TemplateBox[{"\"Serbia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"","\"country\""},
      "Entity"], "0.3`"},
    {
     TemplateBox[{"\"Montenegro\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"","\"country\""},
      "Entity"], "0.3`"},
    {
     TemplateBox[{"\"Ethiopia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Ethiopia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Ethiopia\\\"]\"","\"country\""},
      "Entity"], "0.3`"},
    {
     TemplateBox[{"\"Finland\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"","\"country\""},
      "Entity"], "0.295`"},
    {
     TemplateBox[{"\"Cyprus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"","\"country\""},
      "Entity"], "0.29`"},
    {
     TemplateBox[{"\"Croatia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"","\"country\""},
      "Entity"], "0.29`"},
    {
     TemplateBox[{"\"Hungary\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"","\"country\""},
      "Entity"], "0.28`"},
    {
     TemplateBox[{"\"Belgium\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"","\"country\""},
      "Entity"], "0.28`"},
    {
     TemplateBox[{"\"Belarus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"","\"country\""},
      "Entity"], "0.279`"},
    {
     TemplateBox[{"\"Germany\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"","\"country\""},
      "Entity"], "0.27`"},
    {
     TemplateBox[{"\"Albania\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"","\"country\""},
      "Entity"], "0.267`"},
    {
     TemplateBox[{"\"Slovakia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"","\"country\""},
      "Entity"], "0.26`"},
    {
     TemplateBox[{"\"Malta\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"","\"country\""},
      "Entity"], "0.26`"},
    {
     TemplateBox[{"\"Luxembourg\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"","\"country\""},
      "Entity"], "0.26`"},
    {
     TemplateBox[{"\"Czech Republic\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"","\"country\""},
      "Entity"], "0.26`"},
    {
     TemplateBox[{"\"Austria\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"","\"country\""},
      "Entity"], "0.26`"},
    {
     TemplateBox[{"\"Norway\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"","\"country\""},
      "Entity"], "0.25`"},
    {
     TemplateBox[{"\"Iceland\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Iceland\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Iceland\\\"]\"","\"country\""},
      "Entity"], "0.25`"},
    {
     TemplateBox[{"\"Slovenia\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"","\"country\""},
      "Entity"], "0.24`"},
    {
     TemplateBox[{"\"Denmark\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"","\"country\""},
      "Entity"], "0.24`"},
    {
     TemplateBox[{"\"Sweden\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}],
       "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"","\"country\""},
      "Entity"], "0.23`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.779725317002235*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"e0611e5c-c381-436d-96e3-ecd3dd95f786"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{"\"\<UnitedStates\>\"", ",", "\"\<Regions\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7797254224691553`*^9, 3.779725434580139*^9}, {
  3.7797335288767757`*^9, 3.779733615228812*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"10229efa-d33c-429f-874d-9dd1f84cdd2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Alabama\"\>", ",", "\<\"Alaska\"\>", ",", "\<\"Arizona\"\>", 
   ",", "\<\"Arkansas\"\>", ",", "\<\"California\"\>", 
   ",", "\<\"Colorado\"\>", ",", "\<\"Connecticut\"\>", 
   ",", "\<\"Delaware\"\>", ",", "\<\"DistrictOfColumbia\"\>", 
   ",", "\<\"Florida\"\>", ",", "\<\"Georgia\"\>", ",", "\<\"Hawaii\"\>", 
   ",", "\<\"Idaho\"\>", ",", "\<\"Illinois\"\>", ",", "\<\"Indiana\"\>", 
   ",", "\<\"Iowa\"\>", ",", "\<\"Kansas\"\>", ",", "\<\"Kentucky\"\>", 
   ",", "\<\"Louisiana\"\>", ",", "\<\"Maine\"\>", ",", "\<\"Maryland\"\>", 
   ",", "\<\"Massachusetts\"\>", ",", "\<\"Michigan\"\>", 
   ",", "\<\"Minnesota\"\>", ",", "\<\"Mississippi\"\>", 
   ",", "\<\"Missouri\"\>", ",", "\<\"Montana\"\>", ",", "\<\"Nebraska\"\>", 
   ",", "\<\"Nevada\"\>", ",", "\<\"NewHampshire\"\>", 
   ",", "\<\"NewJersey\"\>", ",", "\<\"NewMexico\"\>", ",", "\<\"NewYork\"\>",
    ",", "\<\"NorthCarolina\"\>", ",", "\<\"NorthDakota\"\>", 
   ",", "\<\"Ohio\"\>", ",", "\<\"Oklahoma\"\>", ",", "\<\"Oregon\"\>", 
   ",", "\<\"Pennsylvania\"\>", ",", "\<\"RhodeIsland\"\>", 
   ",", "\<\"SouthCarolina\"\>", ",", "\<\"SouthDakota\"\>", 
   ",", "\<\"Tennessee\"\>", ",", "\<\"Texas\"\>", ",", "\<\"Utah\"\>", 
   ",", "\<\"Vermont\"\>", ",", "\<\"Virginia\"\>", ",", "\<\"Washington\"\>",
    ",", "\<\"WestVirginia\"\>", ",", "\<\"Wisconsin\"\>", 
   ",", "\<\"Wyoming\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.779733615469367*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"01a13773-0d7c-4ce8-a8be-f57756e5f43a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
     RowBox[{"\"AdministrativeDivision\"", ",", 
       RowBox[{"{", 
         RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
   "\"Entity[\\\"AdministrativeDivision\\\", {\\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
  "Entity"]], "Input",
 CellChangeTimes->{{3.779733621443565*^9, 3.779733623943939*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"379c9fde-be54-4675-ba7e-b5f540d75497"],

Cell[BoxData[
 TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
     RowBox[{"\"AdministrativeDivision\"", ",", 
       RowBox[{"{", 
         RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
   "\"Entity[\\\"AdministrativeDivision\\\", {\\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.779733635320898*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"a61d332e-cb26-4be0-a1b5-d20cf9d1afe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityClass", "[", 
  RowBox[{"\"\<City\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"EntityProperty", "[", 
       RowBox[{"\"\<City\>\"", ",", "\"\<Population\>\""}], "]"}], "\[Rule]", 
      
      RowBox[{"TakeLargest", "[", "10", "]"}]}], ",", 
     RowBox[{
      RowBox[{"EntityProperty", "[", 
       RowBox[{"\"\<City\>\"", ",", "\"\<AdministrativeDivision\>\""}], "]"}],
       "\[Rule]", 
      TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"California\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       
       "Entity"]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.779733639568469*^9, 3.779733674616331*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"55ca968c-6609-433e-9824-c1b7b266fa17"],

Cell[BoxData[
 RowBox[{"EntityClass", "[", 
  RowBox[{"\<\"City\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"city population\"",RowBox[{"EntityProperty", "[", 
          RowBox[{"\"City\"", ",", "\"Population\""}], "]"}],
        "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""},
       "EntityProperty"], "\[Rule]", 
      RowBox[{"TakeLargest", "[", "10", "]"}]}], ",", 
     RowBox[{
      TemplateBox[{
       "\"administrative region\"",RowBox[{"EntityProperty", "[", 
          RowBox[{"\"City\"", ",", "\"AdministrativeDivision\""}], "]"}],
        "\"EntityProperty[\\\"City\\\", \\\"AdministrativeDivision\\\"]\""},
       "EntityProperty"], "\[Rule]", 
      TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"California\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       
       "Entity"]}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.77973367994893*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"eff08a1f-eaa6-43aa-8071-aa407b108fa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"ReverseSortBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EntityValue", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EntityClass", "[", 
       RowBox[{"\"\<City\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"EntityProperty", "[", 
            RowBox[{"\"\<City\>\"", ",", "\"\<Population\>\""}], "]"}], 
           "\[Rule]", 
           RowBox[{"TakeLargest", "[", "10", "]"}]}], ",", 
          RowBox[{
           RowBox[{"EntityProperty", "[", 
            RowBox[{"\"\<City\>\"", ",", "\"\<AdministrativeDivision\>\""}], 
            "]"}], "\[Rule]", 
           TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
               RowBox[{"\"AdministrativeDivision\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"\"California\"", ",", "\"UnitedStates\""}], 
                   "}"}]}], "]"}],
             "\"Entity[\\\"AdministrativeDivision\\\", {\\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
            "Entity"]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Name\>\"", ",", "\"\<Population\>\""}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", ",", "Last"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7797336842535543`*^9, 3.779733704318015*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"db10d8be-0a12-4899-8755-05f433ab30bf"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","timeout",
   "\"A network operation for \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) timed \
out. Please try again later.\"",2,18,22,25147008568202135835,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.779733724637166*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"94994555-a953-486d-9757-e9c0585a1e44"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Los Angeles\"\>", 
     TemplateBox[{"3999759","\"people\"","people","\"People\""},
      "Quantity"]},
    {"\<\"San Diego\"\>", 
     TemplateBox[{"1419516","\"people\"","people","\"People\""},
      "Quantity"]},
    {"\<\"San Jose\"\>", 
     TemplateBox[{"1035317","\"people\"","people","\"People\""},
      "Quantity"]},
    {"\<\"San Francisco\"\>", 
     TemplateBox[{"884363","\"people\"","people","\"People\""},
      "Quantity"]},
    {"\<\"Fresno\"\>", 
     TemplateBox[{"527438","\"people\"","people","\"People\""},
      "Quantity"]},
    {"\<\"Sacramento\"\>", 
     TemplateBox[{"501901","\"people\"","people","\"People\""},
      "Quantity"]},
    {"\<\"Long Beach\"\>", 
     TemplateBox[{"469450","\"people\"","people","\"People\""},
      "Quantity"]},
    {"\<\"Oakland\"\>", 
     TemplateBox[{"425195","\"people\"","people","\"People\""},
      "Quantity"]},
    {"\<\"Bakersfield\"\>", 
     TemplateBox[{"380874","\"people\"","people","\"People\""},
      "Quantity"]},
    {"\<\"Anaheim\"\>", 
     TemplateBox[{"352497","\"people\"","people","\"People\""},
      "Quantity"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.779733751625269*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"dc99b94c-4285-4969-90ea-0ad95cd7d80a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "@", "\[IndentingNewLine]", 
  RowBox[{"EntityClass", "[", 
   RowBox[{"\"\<City\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<City\>\"", ",", "\"\<Population\>\""}], "]"}], "\[Rule]", 
       RowBox[{"TakeLargest", "[", "10", "]"}]}], ",", 
      RowBox[{
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<City\>\"", ",", "\"\<AdministrativeDivision\>\""}], 
        "]"}], "\[Rule]", 
       TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"California\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        
        "Entity"]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7797337986865587`*^9, 3.7797338113180523`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"3f1f3105-2b9c-4271-b690-4382e99219d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Los Angeles\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Diego\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanDiego\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"SanDiego\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Jose\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanJose\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"SanJose\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Francisco\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"SanFrancisco\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"SanFrancisco\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fresno\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Fresno\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Fresno\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sacramento\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Sacramento\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Sacramento\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Long Beach\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"LongBeach\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"LongBeach\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oakland\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Oakland\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Oakland\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Bakersfield\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Anaheim\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Anaheim\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Anaheim\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.779733813312324*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"a5c37b1b-5f90-47ee-8b3e-add8f551077f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{
          "\"Bakersfield\"", ",", "\"California\"", ",", "\"UnitedStates\""}],
          "}"}]}], "]"}],
   "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
  "Entity"]], "Input",
 NumberMarks->False,
 CellLabel->"In[20]:=",ExpressionUUID->"ce8bb573-924f-4096-a95e-af6957c44cd5"],

Cell[BoxData[
 TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{
          "\"Bakersfield\"", ",", "\"California\"", ",", "\"UnitedStates\""}],
          "}"}]}], "]"}],
   "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.779733818837451*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"206a3342-2921-4ae5-a9eb-0389c5b56c6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
      RowBox[{"\"City\"", ",", 
        RowBox[{"{", 
          
          RowBox[{"\"Bakersfield\"", ",", "\"California\"", ",", 
            "\"UnitedStates\""}], "}"}]}], "]"}],
    "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
   "Entity"], "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7797338219167347`*^9, 3.779733823316958*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"5cf655f0-682f-4108-a6c5-3b888eeb416c"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 97, "InitialType" -> 
        TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 97], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape, 
            TypeSystem`PackageScope`UnknownShape]], 20, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1314376127], "Type" -> 
        TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 97], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1314376127]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 78, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"administrative region\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AdministrativeDivision"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"California, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AdministrativeDivision"]]]], 
                 "Mouse"], ImageSize -> {{150, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"number of aggravated assaults\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AggravatedAssault"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"941", 
                    RowBox[{
                    FrameBox[
                    StyleBox[
                    "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                    BaselinePosition -> Baseline, RoundingRadius -> 3, 
                    StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"yr\""}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AggravatedAssault"]]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"rate of aggravated assault\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AggravatedAssaultRate"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.0024688`", 
                    RowBox[{
                    FrameBox[
                    StyleBox[
                    "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                    BaselinePosition -> Baseline, RoundingRadius -> 3, 
                    StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
                    "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", 
                    "\"yr\"", "\[InvisibleSpace]", "\")\""}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AggravatedAssaultRate"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AggregateHomeValue"]]]], "Mouse"],
                   ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "26820852400"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AggregateHomeValue"]]]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 15 to 24 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AggregateHomeValue15To24"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "279500000"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AggregateHomeValue15To24"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 25 to 34 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AggregateHomeValue25To34"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "2668153700"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AggregateHomeValue25To34"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 35 to 64 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AggregateHomeValue35To64"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "17530990300"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AggregateHomeValue35To64"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 65 years and over\"",
                     FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AggregateHomeValue65"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "6342208300"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AggregateHomeValue65"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate household income\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AggregateHouseholdIncome"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"8.6545978`6.*^9", 
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                    "US dollars per year", 
                    FractionBox["\"USDollars\"", "\"Years\""]}, 
                    "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AggregateHouseholdIncome"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"airport codes\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AirportCodes"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{
                    Entity["Airport", "7CA2"], 
                    Entity["Airport", "CosterisanFarmsAirport::92jmp"], 
                    Entity["Airport", "JoeGottliebField::98d72"], 
                    Entity["Airport", "KBFL"], 
                    Entity["Airport", "KernMedicalCenterHeliport::d52ts"], 
                    Entity["Airport", "KL45"], 
                    Entity["Airport", "MemorialHospitalHeliport::82g63"], 
                    Entity[
                    "Airport", "SanJoaquinCommunityHospitalHeliport::87rk8"]},
                     ShowStringCharacters -> False], 
                    Style[
                    Style[{
                    Entity["Airport", "7CA2"], 
                    Entity["Airport", "CosterisanFarmsAirport::92jmp"], 
                    Entity["Airport", "JoeGottliebField::98d72"], 
                    Entity["Airport", "KBFL"], 
                    Entity["Airport", "KernMedicalCenterHeliport::d52ts"], 
                    Entity["Airport", "KL45"], 
                    Entity["Airport", "MemorialHospitalHeliport::82g63"], 
                    Entity[
                    "Airport", "SanJoaquinCommunityHospitalHeliport::87rk8"]},
                     ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145839667][{
                    
                    Key[
                    EntityProperty["City", "AirportCodes"]]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AirportCodes"]]]], "Mouse"]]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"fuel spent in delays\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "City", "AnnualExcessFuelConsumedPerCommuter"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"9.`", 
                    
                    RowBox[{
                    "\"gal\"", "\[InvisibleSpace]", "\"/(\"", 
                    "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", 
                    "\"yr\"", "\[InvisibleSpace]", "\")\""}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "City", "AnnualExcessFuelConsumedPerCommuter"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"total fuel spent in delays\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "City", "AnnualExcessFuelConsumedTotal"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3.743`*^6", 
                    
                    RowBox[{
                    "\"gal\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"yr\""}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "City", "AnnualExcessFuelConsumedTotal"]]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"average annual delay\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "City", "AnnualHoursOfDelayPerAutoCommuter"]]]], "Mouse"],
                   ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"19.`", 
                    
                    RowBox[{
                    "\"h\"", "\[InvisibleSpace]", "\"/(\"", 
                    "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", 
                    "\"yr\"", "\[InvisibleSpace]", "\")\""}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "City", "AnnualHoursOfDelayPerAutoCommuter"]]]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"total annual delay\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AnnualHoursOfDelayTotal"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"8.001`*^6", 
                    RowBox[{
                    FrameBox[
                    StyleBox[
                    "\"person hours\"", ShowStringCharacters -> False, 
                    StripOnInput -> False], FrameMargins -> 1, FrameStyle -> 
                    GrayLevel[0.85], BaselinePosition -> Baseline, 
                    RoundingRadius -> 3, StripOnInput -> False], 
                    "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    "\"yr\""}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AnnualHoursOfDelayTotal"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"area\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "Area"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"142.16448157834698870091546937506690032255`12", 
                    RowBox[{
                    SuperscriptBox["\"mi\"", "2"]}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "Area"]]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"area code\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "AreaCodes"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{661}, ShowStringCharacters -> False], 
                    Style[
                    Style[{661}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145839667][{
                    
                    Key[
                    EntityProperty["City", "AreaCodes"]]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "AreaCodes"]]]], "Mouse"]]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"arterial street traffic\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "City", "ArterialStreetDailyVehicleMiles"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "City", "ArterialStreetDailyVehicleMiles"]]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"arterial street length\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "ArterialStreetLaneMiles"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1085.`", 
                    RowBox[{"\"mi\"", "\[ThinSpace]", 
                    FrameBox[
                    StyleBox[
                    "\"lanes\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                    BaselinePosition -> Baseline, RoundingRadius -> 3, 
                    StripOnInput -> False]}]}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "ArterialStreetLaneMiles"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"average public transit trip distance\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "City", "AveragePublicTransitTripLength"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3.602496598237`", "\"mi\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "City", "AveragePublicTransitTripLength"]]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"number of burglaries\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   145839667][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["City", "Burglary"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3667", 
                    RowBox[{
                    FrameBox[
                    StyleBox[
                    "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                    BaselinePosition -> Baseline, RoundingRadius -> 3, 
                    StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"yr\""}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["City", "Burglary"]]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    97 (-20), {1, 97 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 97 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    97, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 97 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    97 20, {1, 97 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    97 (-20), {1, 97 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 97 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    97, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 97 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    97 20, {1, 97 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145839667}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145839667}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145839667}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145839667}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145839667}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145839667][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 145839667]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[145839667][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {590., {338., 345.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.779733867456479*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"85fd87b6-e5cf-4b69-b0ec-f245950d00a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
      RowBox[{"\"City\"", ",", 
        RowBox[{"{", 
          
          RowBox[{"\"Bakersfield\"", ",", "\"California\"", ",", 
            "\"UnitedStates\""}], "}"}]}], "]"}],
    "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
   "Entity"], "[", "\"\<Population\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.779733896933002*^9, 3.779733898348838*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"0f71f3e3-d85e-4c53-8d9b-d9385d64466c"],

Cell[BoxData[
 TemplateBox[{"380874","\"people\"","people","\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.779733898661084*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"121aaa3b-bb9e-4756-aa98-1c69ea5e9c32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Bakersfield\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], "[", "\"\<AggravatedAssault\>\"", "]"}], 
  RowBox[{
   TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Bakersfield\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], "[", "\"\<Population\>\"", "]"}]]], "Input",
 CellChangeTimes->{{3.779733929733687*^9, 3.779733948412444*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"b55fe9ab-7f9f-4dd4-a236-8612d76f40b2"],

Cell[BoxData[
 TemplateBox[{FractionBox["941", "380874"],RowBox[{
     FrameBox[
      StyleBox[
      "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> False], 
      FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], BaselinePosition -> 
      Baseline, RoundingRadius -> 3, StripOnInput -> False], 
     "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"person\"", 
     "\[ThinSpace]", "\"yr\"", "\[InvisibleSpace]", "\")\""}],
   "crimes per person year",FractionBox[
    RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
    RowBox[{"\"People\"", " ", "\"Years\""}]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.779733948681452*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"5614dcab-81cf-4f72-ad5e-e34cf6f9c38f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    FractionBox["941", "380874"], ",", 
    FractionBox[
     RowBox[{"IndependentUnit", "[", "\"\<crimes\>\"", "]"}], 
     RowBox[{"\"\<People\>\"", " ", "\"\<Years\>\""}]]}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[24]:=",ExpressionUUID->"daea3c3d-8fc2-4d1c-8729-641bc504c09c"],

Cell[BoxData[
 TemplateBox[{"0.0024706333328082253`",RowBox[{
     FrameBox[
      StyleBox[
      "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> False], 
      FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], BaselinePosition -> 
      Baseline, RoundingRadius -> 3, StripOnInput -> False], 
     "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"person\"", 
     "\[ThinSpace]", "\"yr\"", "\[InvisibleSpace]", "\")\""}],
   "crimes per person year",FractionBox[
    RowBox[{"IndependentUnit", "[", "\"crimes\"", "]"}], 
    RowBox[{"\"People\"", " ", "\"Years\""}]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.779733950983632*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"3b73f084-0d34-403e-9ab4-e1c343f96bce"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.779734197007099*^9, 3.779734197020679*^9}, {
  3.779734259213228*^9, 
  3.779734259413196*^9}},ExpressionUUID->"06c7472a-bd8d-4bc1-88a0-\
7fa9f706654f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AstronomicalData", "[", 
  RowBox[{"\"\<Earth\>\"", ",", "\"\<Image\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.779737462260251*^9, 3.779737462260643*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"b258bb79-887b-454a-8f91-effecfd4a012"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzUvAd4Gne6Paxe7PTdf7a3lE02iZ24xF3N6r0XhBAIUQQIEKJJSEhCFXUk
0YQACRACdYQq6s2y1dxLbMd2ulM22bS92c0m6/87YDtO7t777b3f3uf7Ls/r
eYZmMWfOnPec329mfodnJpBcnJyc2F6wSMjiB+TnZxUmPgZPkhlsCplBJIQz
OEQyMf8Q3hVeLLj7D1l3dXb558rt/7Hcnezl7PJAOXk6u3q6uni4OHm4OHs6
O8PSzcXT1fkhF1cvVzcvVxdPNxd3D2d3+Ji3kzPUDifnnc4u3s5O3k7uUDuc
du509n7IaYe3k+cOJy8oTydPj3t/xc3+lbtfdHbxcnKBt5APOHu6OXtBwR+C
ghX4MPxp5FtObg+Ux4MFm+DyP/b4F+J8r773RQ8XV1cXJyh4A7YUWXd1d3Xx
ckHg94R1BGcXVygvFxeAy9PFycsVKW8X751uOx92feghZ8+dTh4AIFLO7oCP
h4tj3yG4OUD2dHLycHLsUzc3F1cod/gvXdzgT8DudXEGDJGd7n7vVyG/wv5r
XZzcXZF3/zHOrvDb/3+GM7JR/w5kR93/EGAKS1fk4W4v+wMQcAXonB3liTAf
KftucIDpBLx1c0KWHnYMkf/NzcXZ2QnKzdXJDiByvCD7zM0JCl50cXVydXMC
QB2YOvb13Xpgo+7j7GY/sv5VqP7P4fwPyYyA7EDmXjmIbQfExbFyn+2OcrWX
47c5uzpBObk7AeJuXp6unh7IDnFFBMNR8NQZWO7tCgXHg6s78nlQE0DY1b4v
YMUhEA7AEfC/h7bjb97F+X+VbvxDnBFc4UBGNNzVDZ54IMAi5erY9rvYOlbs
PHd3c/VCNh1A+8HDGXkA+i6AKYI5sjOQZw5aA/wIvK6IfCD/oR1nB+wOnN1c
v8P5nnp4OAoOyf8VOP+732kXE4DMzcOuyQ4l8LRDbUfFzb69DpDtH3RBDnhP
O4nvP+ATHh47H9/545898bPf/PSXz/7kF888+dNnfvzkU4889kvvnT9x3vGo
k5sXfMXZ3tednez/QFbvIezieq9cvtuhD/5CKPgtLv9LcHZA6vq9ByLCnl4P
ubt5w1bAtri77YAOCC+6OIOB8HS3b5anp6ddBDwQDYZy8X78yV/ufvVoSFx6
ahadWVAjlmik6l6ZeqBVaW5RmFQai6ZrtL3D0ibrkyr6hNWK/KIGFJ4VGptx
yDfit8+8AuA7uTzi5ATeC9ojNEFvRPXtD3d3T0drc3Nzs68jh4Mz0jHgt3nb
+fAva3z/QzjfF7cf4Iw4N1dvT4+HEIRddri57tzh9TAiyIgwIwe83ZJ4/ujJ
Xxw84kemMhtk6r7R6emVjZnli7MrlydmLxt6FxSacbV+Smea6+lfslg3R0Y2
h4Y2hoZOjVo2R2ynbUuXB8bWNcZpjcGm0U+0SE3cgvqoaOzzzx18/LHfurv9
2MXlIXcPxPLC7/Hy2oEQ2I6t40D7jtL/3/DZ7b/OZ1fHgQm/3a6/7qCfO3c8
ajfJD7u5PeTmvsPL43EoJ6cdwLcdO578+S+fj4hKq2tSmftn18/cunjtvbXT
120L2wPWRVXnrKpzQd5hq28eqG/oVyomuzoXujSzBu18V8dMp9LWZ1yZHr+w
dfbjzbMfL554a2LmtXHb5YHB9S7dnE4/P9C7ptPNlJV3JCbS9+wJf+LRn3ru
+JGr68MIz509PL0ehp3rhBhDN4deIU3V7T7OTv8ZZP9inP8hnz2+A9YJaXCO
le/47AYgI0oIv9neAz2BsO7uD3t4POLquvPhnT91tm/mkz974cCxKAarEhRg
0LJ0avP12x9+u332Tdvs5qnTN89efm9obFXePiWuHxCV6+rq+9qVU0bdsqFr
Qa+19RuXertmtNJheYOxo6VXq52yjm0vrby+cuLm3NzVkZFts3nVZFqB6h84
NTB0cmh4s2/gREtTJxaXv3uX36MP/8LV+RHQLTiy3D12url7O6B29/T4Dua7
hHf9PuD/r9j+38PZgfBdkO2HHqwjJvWe50JIAqLh5vXwI08AbdzdH3VzA810
e/rpF9Mz2C1K69Do2c7upXbNVLtmon9wbXb+yvjk2Q7NWEWVGqq8sr2gQFVV
2SOXjes75ztV04pWi6plqFs1OmKcGTPPDunG+7UWc/tAlUitaBvo1k/rOieh
unWzVuvW1NT56emLNtulyclz1tEzg0MbI4OnzMZFedsQjy0OCUx54vHfODvv
RCyjE0Jmdzjg3BAf47B/CEmcHU//ZY9/Hue7/uEBkL+DGlkiDLDrnLPDPDkj
OQ+anTeQ2dnZ+1e/+kNuboG5b2LUdk4/cFamXVAZVifnbiyefMc8uKnUzHR0
zspVk3K5Va2eMpuXBwe2BszrBu2sXDIgqetRtZp6NSOjPZN92oFuha5b0dXf
YRzpMo+Ybd2aQU27Wa8d1qgGm+q7WiU9HR2jOsM00NhiXR8ZPzs2dWFi8vLM
7DVAfmBgVSrrKy5p9PWP+vXvnnfz2gldAtFpDyT13NVqO8L3+Oyg8T0H/q/H
+YcNDujqKMcDCbZ2W/rgjgBz5MhmSMxyRyTC2fnhn/zkaQKZ0T84PWlbG5s4
0Tt4SqFe7jZvT0zfWFp9e+3kuxPjF2dtlxfnXlteuDZnu2gbPztvO7u+eMva
u6Zo6m2q6pLU6GWN3Rppb6fUqJd392lMFp15SGPoV2q7lCZT55Clb2q0f9qk
HVa1GWWN+tZGQ32NVlytbWjUd2rG9frZphZru8pmGdyam782MroBvVIqN+Zz
yo4dC3riRz9B2jFixt3uHY0uiD1H4H5QK9weqP8Gzv+UkbAjbI++9ozmSFtg
F+BtL0/3u6kZLNsOF2cvZ7st9nJyefThR56KiCAoFKMWy4bBMDc7ffbiufcu
nr197bVPrmy/e3LmzMnpze3ZrfWxlZVB29mZ1bNTJ7Zty1eWtq+unDkztTWm
G+9RDLXVGdnMOiazpaxMXys2NdYZte3D3R1D3QqzUdHTqxq06EdH9daFwRlb
96iprXNUOzhlsA51DClr1YV0EZ8hKuDWCSs6mqR9o1OnF1ZuTk1faO8Yq6jQ
iEQddTX6vNyaPbvCHvL+vbPTI8ANNy9vhEvgvT2cHFt9l9XO9y2i23+D2P+8
YXMgbA+2zo4I4ZBgR3Z2d/Lw9PR23+mNgIzsEs+9e/zENe1Wy6nJsfXZye0L
p9/55INvP3rn325c/ODS5tsXN966vHHzxOSpxf7Z5QGbTTd0fmrl6sLW6ekT
J4bm50yjI6qBEfWwuX0Iml2poCU1iRUdTSkqUgBL26V9ykatsd2kl+t71YNj
pqlR49iUeXyi2zppHB03jJoVpr5Oi6bVIC6RN1R2NNUZOvSzp7ZuD4+ebpAM
dhrmtfq5yipdcbFSwJcC1FApifm//MWLkJJc3He4IeV5t+04NvmHOP/L+Hxf
jf89zva/i1h9b08vUAwH6MiAm9cOSCWgFY8//rPsLEa3zjpn25ie3Doxd/Ha
2Q/eu/HptXNvrUyfWZncPrP8+tbChZO2je2Z9a2JldW+ye3R+dW+8SXT2KmB
6bX+6cmuvrmeCYt2oKulW9tqVkpMhZx6DJqNJwiZzJqKMll1aUtHm37QaL1w
4vLK+Jq1e3R2wDY3OD1qsAx1DWpaOjvlJr3C1K2yjg6t9pmW2UJ5aVUni9+C
whYSqJVsfiu3UFpX31sj7mHlNfN5svJSLY9Td/hoKHIkOiEjJ6Db7p4u97bX
yY6VPZ7/t5LjP4Gz3WN8f7DLjruHIwMCqd09dgCZ7Sry6O9+s6usqNk2srY8
d25+fGPNtn1yeuvswrnN6Y0TowuXl09fX796bv78cv/clG5kbcC2bZ05YRqe
au9cNfZvDY6u91mW9H3L+sG5HstU9+BUj9Ws7pPUqBTS3i7taBqKERKKzmOK
JI3amorWHr3ljdduXz5949Tc5sb8xqxl1tTR29PRr5Yahvpsc1NbQwPLDXX6
LFJxWHzesZCsaBQ7BVOYniUk5oqzc6qYnJaiUjW/uD2P2wolKG4rEbUmpZIe
+/FvIZYCZyBD2bX6flv87z/+Gd1AsL03pIaMJ9v3gmMkByyohye0bMQgeXs/
7n8oukc7Oje+Nd6/MjG4PD24ZJCa+lUDK0MLFxY2L85vXF3eWrXM9stNY+q+
zZH5JePIZLtuzTS4PWhd7DIu602neocXdb1DEuWwUmuSq/s69D1qk1LS2Vin
0etGVR3DbI74eGByPkvUrjC2NKvHhmYXJlfHB6ctPSN92r6RnrEpy0KXylxX
2y6uUhYWSXD4ooBQrH8kJSGDn5ZdmoAuSMUJ07DFSeiC+DQunlzFFihYBTIq
q4lMq+Tw6iuq2zOz8n/56xeQ8WyQEVdP5wdMCMIvu7f+l+NsZ7Hzd2O8yF/1
dEYMsjfSJ1x2QACBn7TzkR/FxWSM9q6enL44Zloa1s2Mm+ZN0r5xrcWmt57o
n9ocmV02DY3KNJ1VTaZG1YJheAHo2q4DeC+OjEOWW+/p2+od3Oy3LGiN1rb2
PqnC0CaXVdY1iGqldbLaGlkBv0ZvGO8fmMdlsUPCUkuE9Qp5d12lpEvV09dt
Gekd61Tom6rbqkobSfi8kFCUf2CKTyDqeHi2b1iWX0ROMq44K7cuNr0gIpkd
npQfncKNTGLHpPKSM4UZxEoSs4nKasSTSgk5osKiVhqjdNfLx5ycHoL8aJ+C
cPuf4/P9oOfhBm3Y1THS7uXi4RjchY6AjLu7QIL23PHQT7Op+Zbhpbnh84sj
py26+QH1xJh+2maY2p5cXR6YWukdOzk0dmrQeqrfMm3onTIMzHQPjKv1o0rN
ssG83j8416mDWjGaFg2mqY4ui0zVJWkp43DKOAWF+YWi4gomvYBG4eWzSlva
9PruUV5BDTW3SGewytu0TWJpdVlDIVuYhSJEBMWFHI/z84k8GhDvE5QaFEv0
iyT6hBEA2OzcehpPiqfXQ0WmcHzDyaEJebACsMMynVgBlKYw6nEEEY5QyuE1
5tJF+14NAl8KGwiBy83D3T5C4vxAPP8X4HwfZEcGcbHz2RuRiR0ebshIl4f7
wwCyi8tD3t4/YjKKpxe3Ri0nVqyXhztnhzunrV1T072zZ2e2zs2tb9tWz01D
LW+PTZ8G3o7NLI/YFsyWya6esXbtpEo7pugYlEjHleq+ZmlXTSNStS0t5TVV
gpJSjiCflp+RjMnCUkkEJoslrKpsBag7NAONzdq8fBE6OSsqJCEqJC46OC48
MDomLAlaMA5LT81ghseTQhNpxyKIx+NoyZlFgrIucl5zJrmyrN6UL2xPJ4pi
03lhiczguFyoeGxxDktCZTaSKGIStQaXJSRTyvLY1T5+McgAoLOHu4cXZHOH
VtsTzb8M5wdyn925uSEDFvbhW0RCdng/7uzk9cjDvygsqB4fWx6xri5Pn5vr
25g0Lmzazp2wro3qRlZGFq6tnbuydvbGqXNXVra2p5Y2JxZOjM1P9Y8Pao1G
qbqrsa29slZWVtVVL9HWN7eKahqElXXC6mJWYSFHwMnn49D4HGIuKg3HYgpo
FA4nv7S5saOttUuvG+7rtcllRnFZo5BbVsITVQnF5YKqGlFzq0RLySk4HooO
jsbHorm+MTm+UZTgCHISig9NMD6NQ+NKGuQjzEJpRk55Cr44Jp1zPCYnJoNH
YjbwitobJcO1Df0cbhudUUckl9AZ5QC1u9fjALWX98OA9r14/q/B+Xustk9P
uCJD6YiTdHfbYZ/H2/nYIz/LZ5atrVycGF2zDKws204vDpxctZ5aG9sAkHvb
u+cGpy6sndle3jg1s7o0Nj89ODnRM2LUmNVyvbxBVltSXcErreIJ64srmkRi
oK4wX8Cm8chZNHIWnUxm0Whcag47h8TCZVLwOHqxoKamoqVVouk1jfV0WxUy
Q2NdR6esS9Go1Eo7Bw1DQz2jvYaRtuaubDwnFZWXQSjKotYkZJVgqXUgBWSa
OB0niIynZWQLSfSaZGxBTBorOaswIZPnH0UISc7NIIn4xapO/ZKma0HePgXL
SrGBzqxmsCoPHQl3dX8cTIirm7d9Eue/PPTxn4N8d0TObhcRdUIyiad9TN7D
2/PHuVT+wszW5OjqYN/Cgu3CvHVtcXDl5MT6hGl6SNtvGxg/YVtZGJsdMQ0b
FDqAAmytVCwvE1QXFVYX8krz6Bwaic7OZRdzizl0Dj2Hyc7jYzE5GAxFrTbX
N3fQWEIcnonDMwqLaooF4nZFt7iyta5a2tqk1nSYW5s0Al6ViF8uyCvi5fLr
yuq7ZAZFSycJzw4MSIlPpGKJpThKdWR6YTKuLC+/nkIXZxFLElPzk9I5EfG0
+LT841HEo8GZoC3xGG5cBicZK2AXyKXtE3rjKuT0mrr+qtoefoGURq/MInBf
PRjk5PywM0QVV8//Ksg/wNnl7jzSA2g7ed6dKHF3QcYPPb3sds7dzXUnHkud
mVybHF61mBdmRjfG+tcWreuzfdNLg1Nzg5OLo3Nz1qlhY49e26lWaGqrm4VF
YgFfnM+qIJJ5hBwOIYeNJzLw+FxCNo2UnYvPomSTmNTcgtRMBplZPDR+4sTW
LZl6OJsqqKiWGYxjapVJ0aarLGuqr2qpLqmXNnQYVX0GZa+iXtFSIRHmCZrK
Gns1vfVlkqz03CC/RF/flIg4KjanKhZTHpHET0xmBASgUlLyouIoIRHZKels
FJYfk0L3i8AFx5GSs/gp+ILEdA6OWF7fNDg8dn5k4qKxb6O5dbyiXE+hVpNz
ijOwjBd3HXZyfgSxdfd0477He3D5HzzcflB350HuzmfenWp3dUcAhp5rnyLZ
ER+NHrMszY6tT1tOLUxsbixdXhrfHDPPj5unTar+fu2w1TTeo+2XNyskjfLm
RmWFqAGklZrDo5ILiGROFjEPT8rPwNFgBZ1JxuAoGThKKpqEwuSkplPgLU5B
ZXmVXNLWgyfyNJ1Dxm5rS7NGLtXV18rra+Qmg1UpNSrbTCpZb4fMoFX2NNfI
YWXIPMFnl0dHZQYHpgWEZBwOSAtPosZi+ChiKcTATEIxABseRwU8kzN4wbE5
8WhOOkEIohEcT0kjFMelsgjU8vpms6F3ZX715tzyLZlyslCoorMbs8ll2ZTS
JBT9F0+9ivREdzuqYK/dPRDaudqHK+8nOJf7o23/2aDT/WknxzrYGKC4pxdy
2pCnp6eHs9fBPX6DxulT81cWxk9vzr92buWabWB+0Dg22DsNkU2hHOhQDUjb
DOIaRXllWwG3GswYK68EipjNgsrE0NDpOalockRMehKaGIfCp+IoyZnkFAwx
DUvOItAzsKTERDSFwm2o7+ByquG/AiluaFAqld1aTX+PcXTEsqxSDlZXqjra
Rzo6+5tbderOoS6DlS+sD4nGBESgocLjCQFRmVB+UZjAWGI8mpdGKoM8GJdZ
EI8tTMAJUoml8AqZ2xyWkucfk5NJrUxIZ+FIxRVitbFvcf3M7aWTt7r7VkVi
PYPbjCOVocHvUaqjUliP/5/fOtiHjO24Ii7XcfbOvRztGJr49xz+j3B2vw+1
OwRrT5cdOxC7/sRjv5C3da8tvba2+PrG0s31xeuTQyvdHQMGhVGnGmhrMdU3
6ESlspIiSQG3jk4r4/PEubQiQjYbn8VCo8hkApdM4FNzhMy8Sugv4L4INCGR
ISQzSgjUgvhUYnJKTkJSNoctKuRXiUqax8dWgcy1tTKJRA1LgFrd0SuXmfp7
53u6Z9Uqa1l5S3NLV4d6SFgiiYnHxyaRiVQhllQQl0o9Eow6ejxjr0/80ZD0
VwNQr/glBceTMTklKIIgm1EJlYBhZ1JKsdSyiGRaTBobnS1ISs+LT6Hmcev7
LKfmV183D61V1HULRB3UvDoCo5bArM8gV/iHJAAgoBje3jtBZj3tgeI+zveG
gP4LOLshj7ua4448PF1dvFhM4cLsuRNL15bnrk9azvTp5s1dU0aNtaVOVSpo
AoSZeVXkHCGLWcXj1OVSSyk5gkwMMwuXLyxuEpVJhIJ6Aa+xuc6sVA2r1KNM
Tl2TtE+hHdEap1rkvSWVUmJOIYdbo+uymrrHAdJR6+Lw0Gx3j3V42CaT6aCa
m9TG7rFOjVWlHGqsN/ALxWxeDRbPDgnPOOqfGByRGRlHiE4ix6fRopNzQCsA
PW6ZvFrSm4DNj0igpGXz0SQBgVmRgGFBioFCk4oBcP8wbFwaPTmDGZ+SC+pN
plc1SQeM/UuVtT3CSi2T28gqkjMEUgiVaZnU559/AbqVh4cXAOvl6ungs90z
3B9tc0jHP4Oz6z07Z8fZY6eT847g0MTFlctTU2dHR8+YTWvajqk2yaBU0t/S
2FPIbaBTyjh5tUx6VQEPAFcIi1polFIMmpWdxauqUE6MrVtHVtpa9XC8Nzf0
1oi7q6r1JeWa/uENODzrJOaaRmNDax8pp1QgkFZVdHQoB0eG5wyG4fn5Dat1
3mweKy4WKxQGcM5dncMN9Rr4f6oq2kmU4qO+8b9/3uel3YG79obs3he+71DM
Yd+kiNjcqCRaUnp+XBozGccj0cswJG46Nj8xPTc+jRoag0tA5WYSC3BkQXVj
p0isikokQX6E3YTG8WhMMeygwlJFi2KwvdNWWW/MplRk08WsYmVWrhiTzYpN
TPnpz34N+dgLcpuzO1D6Hs5u358N+WHv+wd98J50IPrs5uHk9PBvntonbR+Y
X7zaYzrR2bXQ1mqtq+2tqTSISjp47CYGozqfWcdhNVSVa1RKS2OjkcuuZ+RW
tstH+szzAPLA4HJrm6mpWdfcaKit1hUJ5QRSaWGJVNYx0tBqFtVoxM16cVN3
i9Q4Yl0bHJi3Di9aLXMyqV4q7SourlareyQSVVlZA0i0Rj2g140O9C2gUUwf
v6SEVBp0vRdfCYFlFqk4LiX36T/4vbgnfNe+cJ9AFKhuVEJOZExWcATmqH/S
/sNRsBISiYVvESjCumbD1rl3Ll//pFlqysjihEbhgiNwiShWWiaPL5RVN3QL
KzTFFRoyQ4wmlkHAAelA4fKycxhHfEI8PR9FBi3vndTkWLl/Ttp/DrJ9XNnj
LsKuXo51ZCLV62e0vOqpxSvGvpPyjhmZcqZFOikQqJl5zWxOK4NZn59fV16u
bmzs7ey0jYxsyuUWoGVNTefs7GXLyFpf/5y5d76lra+8Qsnl1dfWdCqVlpQ0
OnTwNCwrAUVD4zkFQomwXH5q89obb35x5vTN5eXTdHohmcQRi6UtLR3t7TpA
u6CgfGjABvHz4z9+02uajY8lECilRGoZiSZKzchPTMutbzU2y/oB2DRsPoVZ
U1qhlcgtnMLmunoNgSzIoYuEZS0NzV0FRU05tJLMLE5hcfPayauffnbn/KX3
R0ZPVYi1KCw3IY0RHkvGkaBlVCamcemcpmxqZXAsNQVXRGVLcOTCbAoXjaH8
9umXnJwgi++8fzKkfTrAAxlNdYB5d6T6LnsfXHecQAJLb29kPBkS4I6HvEHz
d7+aMGg9r9TOyzpmpMqZmvohoaibymhh8xR0RiOH3apUjukNS4buZccZLN3d
8+0d1tHx02MT2739y93GaUmLsVQk79CM9Q8sLs5v9vRO9Y3MlFZLopNxQVGp
kUnouFQMnsIanZm/fvP2v/3lK5PREhSQQKXw29o65fIulUqv1w+IRPUqVc/U
5MnqKgUWk0/NKQGHgCUW4XPK+EJFYakMQJ6cPzczdxlLKABiVFS3a/QTo1Ob
ff0LesPkyfXXPvjoq9sf/Pm997+6ceuTi5dut7T28Pj1Q5aFK5ffe++Db67e
/LKja0JUrQbBCY7MRmcVpmYUgtnAZAvD43Jj07hZtMosSklGNpuQW3g8JN7D
+wlkWsnJ/XuJA4Ha0/kBbJ0dmMO+QM4TvjvLBzR2vXeSqocbMgT66MM/FdX0
D49ebm6bKKvuKyrt5hd1sbhKfpG2uXWUlltXX9e7uHSjTWrRd8+du/C+qEKZ
z6m3jq2//e7XS0tXu3vmikpagD9NEuPC0uXXrt3+8ou/XAMw/3bn5rsfERnc
OBQuMCqexGCVVNXPr6xfeu3GW2+/vzC/JZfr+/omenoscpmmxzg4PjY7O7tm
NI5o1H1ymRHUnsOu8g1Kj4gngMzm8evyCxtqm40bZ99b37olVfX5h6SkoKgK
1eDpc+/IlL2wf7Wdoz0mm04/sbp2CdA+cfLywOACHGugaafP3vrjn+6MTp1u
autVakYZnAYWvzmP14SnVIFo5Be2QVqMQXHBihPzqtHZvEwiPyk957dP7QZK
uzkGTu2T0A4MwYw4f5/DzvfeerCQM+Lsr+/wfhTidmIiZnjijbpmm6Ckm1ek
4xZ2cgu1TLa8y3iiTT7O48tq68w1YlMeq7GyWiOqUKEyOZVi3fb59+fmL0hl
vSxODYtXV1gk6dSPX7/58fbZq9tb5yds82cuvnbj3fcJjLyAyKh0ApFVWMQu
Em6cOX/91s1v/v7tpUs3Rkbm2pU9Go1xcMC6tLi2uXF+dHQGhPr1199/+61P
e81TGWj6AZ84Gqums8c2MrERFoul5FW0qQZBbHMYJYIyCRbPzWNX640TtQ2d
6k7r8onX6hq1qem0wBAUgVSEJxbUNXbBTvnw428++ezO7T/e2TjzLrQMcEEc
QWuzbFBvXmxoG0zDFrIKWnllHRnE8pB4OppYAm4QeiiRVhQYmrhj52PIqWsu
bt/NatkHfxxt7jtBduB/f0fYTx1BdpCzh6fHQ/D0p0/+Ag5VuWadJzCViPoA
ZyZbSWdJVZ0LEJekiomKSr2wRC0SaUg5IkpuKZlSUtOgV2gtlvH1btM0vxhM
PoddWMMR1MnVA+dfe1/fPdLfO2adWJhf3p6cW2+QaZMwhLzCMnZxhVxjPH3h
yo033/nbN3fWTlwAJqtU3efPv/72Wx9eungN6sKF6ybTCJdT3tSowWex/Xzj
qOxyaefIxoV3Pv/bnS6TLV9QU1ojxefw2PwKUZWEziqOicuobVR2984VlrSk
YVjHQ9F7DkT4B6PCY7L2H47OzinW6MdnFi/ceuuLzbPvjNnOAM7sgiaJfMgy
cdrYvwJkjk3Ji4in5bKbFbrZ7NzasCQGkVmXTSsDoUZjac88+wIiHS4ujuEg
O4zA0ofvRen7OHveL2cnD+SKBmfEJyNN0NULRCM+NsEyZBNVjXMLzSyOjkxr
4RRooAmqO+dLSrUMZiO/QM7jtYrF3a1tw5zCxpmlc+eu3DYPLspUQ9bJjSaZ
qVVlqm9Vk+mFTXJDn3WhWNhcL+4QNygNvZOrG69tXrgpqGigcYSSdv3GuevN
UuXK2vbfvvn7F599c2LlLGjy4uIps9nS128ZHbNdvfrm2trZiIgUKqUQRINI
4Kl6JprVg2gyd2H90idf/X3x1IUiUWNCGkHWbtToBhksgVbX9+VXf5+cuShT
D7EFjWAngsKx4TH4JFQuuA6/oLTM7MI25dCYbWt0amtp7XWNfgp4AqZubuV6
q9KSgS9OxwmS0HxafpNUaxO3DSdmCnC0GnK+GIVn4wh5vn5Bnl4PudqvfHFM
fwCZXZwesTfBf4izQ6i97CAjE+hOTi6PP/Zka6u0vd1YLBzlFhgJZGlVzVB3
z5a8fZaSW8/lSTnctubmfp1htq9v1WiaF5bLPvwTMOvOrbc+s06tNbZ1Lpy8
OLN0Rt9jpdALAW1D73hDY6dQ0NzQZGpuMa+cugl9CtQVTJ1aN1Yh7uAKJHPz
57+98/e//vVvp7euGI3DU1PLfX1jS8sn1zfOLC9vAM5abV9NtRRyfXFRPYbC
ZwlrDwcnWm3rf7lz58/f3qmqV/gGx84vnbr90ZcjE9NTM8sDFhsKywcTUlKp
Ss1k+QangarvPxJ3NCAVvB9Yi4LSViavlsmtb1UOiRsNkAqT0dDaLTX13S1K
a2l1F6dIQedIQKJZQgXgnJxdRsqrRRF46ThGdFzqz3/1FGB1d2DT2dt+8ZED
5+88nr0zet6fvLafE++JjLK6PASHw1Hf6O7eWXGDic3rpNBbDebTq6c+Br+R
m9fG5EixeBGHL2+RWUcnL3YaFlGYgqo6zad//tvnf/767ff+fPr8TZ1x6Pyl
m/2DNkmrFjLdtG19YnK9XTVg6p24cu2jzTPXP/3yzvVbH43bTmycvmYwWZns
khZZ1+tvfPDxZ1+urp5taFJJ2tSjowsWy9Tw8OT8/NrFizfff++L7c3XxNVS
EiE/OhJ1PDQ9l11d3dShMYysb7+2tHphYeV0q6y7rqFjeu705ulb/IKG0AgM
oHosCAV2OiwWf9AnGeA9EpAEy72H4sJiCFDRiRSANyaJmkkQwFMys5rGqtUY
bKtbb1unz5XXGnI59WDFU7G8RExBYkYhtMis3JKkDEoCCvvy4aNuO3YgULu7
OTTBzXmHA/YHcEb8nkNM7MPXbm7u3q5uXk4uj7h7/phfKlfq5nmiTkpeg0a/
fOH1v4GvY/EVVHZrNqWWQK0Dd0dhtqCwpXhyTQq6AKzpu7f/7fYHf1k9deHU
xpU/fvz53/769c2b762duvTapfdmp9b7TNPLqxdOrF8yGK1bZy5/9fWdcxdv
wC7YPnO9UdI+PrXU3Tu8eGJ98/Slrm5Lq1z/1jufvffe5zeuv//WW59MT69N
jC0tLWyfPf06REWVsgeNIodHYNGZLDDexBy+oXuqrkllNNt03ZPBIWg8oYjK
qPXzz3zx5agDfnHh8SSgsU9wul9oRlIGC5aH/BMBfP8wzPEITEomO4NQmI7n
Q04MCM/EkouhoGNsnH+3z3qyuLKdzq7NyimCdyHCgJjQ88WEvLI0PCMtm+wT
GfXoz59Ezh1zR040dUditKd97O67VOLA+f7ZegC1lxdy1r2T00O/eepVld5W
1dQvqusdtV3dPvelWrfEK1bT2W34HIifFcnoIiKtnpTbEBnPwuDLSyq1jPx6
QWlrda26WqzoG7Cdvwxm6S9vv/vZlStvn96+YeqZKCluralVArA95vEhy1x3
z6hcaZTK9ZquXtvsie2zV3Td/SqN/rMv/worinbjwNAMuLvp6dU//vEvV6++
C45O3dF78sR5kO7aGmlLs1pYKqUxRJA76Hmi2gaNqLKtskaZQysGDvv6J+/e
HeLjm/775wJ/vzswKCrrVZ+E518JjkzMAZwT0plpOC4sYT2TVAQ4p2I50N1C
YwlRSZTjEdj9x+JhWddqUnSOtaqGBeWKfEEzFOCcllmAhCN6KeCcjCNFJKOe
3rXbCbk4D/EYQGzQ6gdDiovjFGVnhwO5O7KBtD/karyHIauqu2ealZNLGx+d
2PyoodVKzZMUl+sBaiZXBjgnpBWgs0RA77TMktSMYq5AAYk1Po0am5QDW907
MNNtHquqlY6MLo5NLHdoBrSdIzViTWW1jF9YBfCCeqjUvfCBBklHl2FgZe2M
TKnrGxwbGZtpaJYXFFXKFIaxiZV33v5sc/OKyTS6tXm1xzjaWN8+2G/7+KO/
rp+8ZDSMAHWHRlat42sKVX9ljTyPXV5QVEemFian0aJisg8fjg8JzT4ehHlp
f/iL+8IS0XmBkbhkTP7RwDSAl1PcIqrV5uRVxabmRiSQgc+wTs2vgbeA5A7m
F5TJOk2zALWya1yuHYV1JrcROiMEfFp+JZ4mSMumpGQR9x7zcfN+CJEOO86e
LvZI8h/y2cXh9JwgrXj8n9JKpbRjXG1cG5+/VVzRlZvfWlHbWyTSAdpZ5JrY
ZC7wOQNfTmO1JKIKY5P5ApGmvE5XWqPKyOYFR2WiMlnJaBqTW8ERiLsM1qGR
5f6hhfomnbiuHYQXmKxUmXSGYZXaPGSZnVtcX1je1BuHVle3JicXKqoboQNK
JCqLZXZj4zIYy9mZ9VMnL7W1dikVpsGB2Vs3P7l08R1YmVu8AK74xhufGc2T
IMupaDJArVD1QsoGqCMi8H4B6XEJNMDt6Rf9ga7IJHgswTcEDeyNSaEB8iRG
BTq7IDgaHxKTDVAz+Q3wbnQyFXIfLEuqO1T6yeomQ+/IGoCs651X66cLS9tj
k2loPJclqM2m81KyyAGR0U/85OfIGVn2NO15V4ofjIT3wvjdaRc7zk5eTz9z
QN4x0to+rjGul4kHOEXKovLOijoTAI7Gl6ZnleTxpXGpnIAwIo5cmUksh2po
G9YProjbTGnZ/NBYfGQCIQFFSc7IxVMK51cvLkJGaNbT86tEFa19vZNymYFG
45vNY0BU6HTLy1uQ9W7cuP2nT/9s7h3q7x/t7h6SSrVbW5dPnTqvVpuXV89Z
rAtSubG5pUsqM0GIw+Ly6YzyC5c/6B9aMvRMStr0xaVN6ZhcQHtx5XxTSzeJ
UhyfQD7qk3LMNxVgfGFvKEjHQb8kKFg5HJCy90jskeOpYXFEh1aAepTXddK5
dagsHuAPLwL+oNLwCr9UKpYYiyqULe1DE7MXO3QzcORCSyXQSzJz8lOzqLEo
9NPPvwRgOkaEPJzdvycaD4ws3ZvDRa46dXLyjI7Bm/pXjQPrtqX3xJKx/EIZ
jlxRVK5NwxazBYpey7ah72Q2tSY4ihKfxg2LzY1JZgkqO5X6mcb2EQKzCk8V
kZnl6VnsyARiCoapNU7qzFOV9R0MTnmnzjI2utShMtfXK4aGpiUS9eLi1vCw
rbd39E9/+us7734ISfDNNz/q6DBCEtzcvHD9+ruAc11De4GgpqaufdCypNJY
JDIzkVriG5haWNys0gwlJJNYnAqpsru4rGFq9hS4yoHhRSq9LC6edOhI/Iu7
ggBSgBoUA0MUAGkBZ5CR3QciYfnywSiQEeA2QA0iDKiCbjjkBYAF5EHPAXZC
rohX0taum7AtXIEIwyuWxiTnJGbQU7PoGDIrBUvad8jXzX0HcuGeuyco9Q/G
jh4ks8NvgKlzdt7J4ddZxrZ1ppNd5jOVDRaRuJvBbS6vNbYox4Dkhr61jOzS
2JT86KS8FExheFzu8XBidWOvvMuWTRcnZHDR+GI47lBYbnAUNjmD0arom1s5
t7J+ZWHt7PTsektTJxjgjg6TRtMLaIM/12hMwOf33//86mtvfPTh57PTJ0ZH
ZjdOXbhy5c1z525MTZ4oK29ubNa2yU3NrUaw2aBpSShmRCwxOY1SImrNZZZg
sugT0yfGbav6HjB4Vzl8cR67sk3am4rKQ6HzgcNkZmWhSB6PYkD72/VqBLwC
CrzvaBzgD+IMWgGSAmgDvLACOpNX0AgchoJ3oQBn2AWVDTrbwqXJuUsS+QCV
VYmnCnGUghQsIwlD8j0e+diPfo5cFunm4W43G9/L3ffIfG+uFta9n3jilyr1
iGXsjLhpqKphoqZ5DFInWyCFpbRj0jJ5AWBPTOcBh32CcBCUMokicXO/pnuR
kFvhH5oFx5qgTElj1WCyi/xDMuJTyS1SIzjkU2euntw6f/r0tZqqtvpaOTjk
/v7J4eEZvX7IbLYCb9+4dfvjP365srxx5vTlDz/47H1QkU+/vnz5La2mH9oo
4FlR3Z5DLwPDnIEvOB6WGZOUGxOPj47Dlpa3MPJLIGXb5k5dv/XhgGUmOY0M
u0ChHJAphgBn/zB0RAIRyAzMBK145qUAwBnsBBTQFaB2UBok+pVD0SAgYOSg
IRLp5bAtwHPgDBS4PqD3qO3M0NhWp3GmSdoHYp6CzYtDUTMIzLBY1M9/9Yw9
g7uBKPzDcf4HJsTdQJxffTVgYemyqX+tpnG4oLS3qc2mNizMLL8+tXB9cOzs
2StfDE+cJ+aKmbxWWDZKLWU1Bl3PSnvXNPwSdbft2ptftCgGA8OxYOa5gia+
oH56dvP6rfe3z10TllfLZJ1gfdtatLbJ1Zqq1sZ65dCAbWhg8trVN7/+650/
fvTFxvqZ929//PEfP//zl1+fP39tdHROLJaCl6ioVgCTOUVNOFIxWNxjQeiQ
aHJEdGZAULJU0dPYoiHksIvL6gHq4dGF8ippWGQGK7/aNnO+sbkHQyyISiLD
twDS3/3BF/i853AMAA4CAjoMrwOBHSrtkIj6NnNFfRfwHz5wwDcR9gVsGiAP
fXBy7oKhd6l3+IRaPwWfhN2XjudmEFhxKfjf/2GvfbAOuQTd0ey+64P3Jlkc
Szdn5CxrfBZz9dSbjS1D5TXDZIaKK+y+/sYX62ffHhw73WvZKKnqDI+jRibk
onDFGEKZYxg8IS0/HVeQwxSdvvjh5pn3CaSig4fjSOQiMBhFxU3WsaVz565+
/sVfyitKigorDZ1DJcJ6o8EiLBJz8ksL+ZWtko7hwakvv/jbJx//+cOPv/zm
b3e+/vqbD977E3C7qrKVxyvn8Cokbd3QRlE4NvAtKZN/ODDTL5wQFpoaHJrU
1KptbtPiCMzo+HRxgwIwb2nTU6jFLF7txOTW1eufLpx8HdR1/7FEaH9/2BMC
8QQABPaCo4M+CALiH4aFp4AbaHJCGgNCOlAdfB3gD9oOHwaDDT5wxHZ66eQN
vXle1zPb3jlJY9fBrklCM6DdJ6SRXtnr6+X5kLOTi7vbD+etvj+ZZT93ztm1
vLxpcHittExbXT9OZxuqoLcsX6OwxBFJ9EN+qKBIIhApLJZCoteIxPpMYumx
QExgBCmHUV1U1ra8etVsXoyOyQ4IQAuK23CZbElz58jIzLBlbH1jq1XWlJvL
IRPZoBu9prGqCom+a7CosLpC1KRWGU+snP7gvY/Bcnz52V/+9MmXtokl4DmF
wiWTWRXVMianJgWTB8dvDIoZlkALT2b6hGcf9Y0+7BNOZ5dyC6tiEjAp6cRW
uS4ZRYyKwaAzGPS8CiKpqEli7B1ZTc/iAMIOfQDtBfYCUR0+GdHqQNQh/2RY
B30GhGFHgHQjmdE3CdbhK+DxsMQihWZ0evGytnu6sdXc1j7S2NYP8ggNMSYZ
ZIp86EjIo4/8GHB2u3f7iwemApELje6fmAef8fR8VK8b6THPNTb1yVSLjdJF
i+2d0kpdcAQ5AcXO47c1y62WyXOa7nmdeXlk6qJKN0eg1UiUww2t5laZua9/
gZVfc8wnITqWRKGVYTH5ndqh3Fwei8Xmcvn8gnw+r7iqqkWtMnXrhwFeEBBd
58CYdWHMOrcwd2plZfPq1TfPn359em7VaBgSV7ZSSZyMdDJ0usQ0GuCMhDgM
OzCahKNWpeGFvgEJR3yiElLwLG5ZKpqAJVD5xeUv7D6470BwCorapuwXVSgh
N+05FLnvSDQAAnCB6potJ4DG4Kgd1g7KLwTBGQoghZ4IgANR49LocOw4bB4I
DnyFwqqGzgimGplWKGiqauwurVFjyYKI+Oyk9Bxf/6ifPPlLZ2RM6e4gxoNQ
OyOcRuZrkesTndwfe/xZvX5eq9sQ108UlVsq6yerGsfyec0EUqmifQiOwTff
+erKtY+WVi9pdVZ5+0BDs35+8dKZix/mcRpxpBLISvsPp/gex8Qk0HwDUZFR
mWCYeRwRh8mT1rVqpLJSgai6osGsH7L0TVgHpuoqW+USraVvanPl7EjvmEGh
mxgYa29W8gq4gtIiGpOBJZCxOXSwEygsEyxiVg7icqubjNT82thURlBgeFxs
EoXK5HCKcdm51WJpFpH16tHIPQdDd+0PyaaU1jQaICzT2GKgbplYA0oLygz+
DaIfqDSEa8AW+Ax6YuctPTmDd9A3DQ7YNBw/gyykcZsSMTxOqQyU6lgINj4j
n8Sq4YlkadjCWBQHQy5HE8ty8uvTiYVpWFZ0YtbPf/Fb+5j/D3XD3dXDgTMC
PDLl6vHr3x5WaebFDTN5HAOZqWUXG/ml3e2qCaNxqa2t/8YbX9x88/PbH/4V
POrY5NrI2IkWqUlY1pbPqQ2JyI6IzQUvfTQo60hApn8IDnxXQFAqlSbUdJgV
zaqWquaBru5ebU+nTDNgHNSp9APdw+1tmn6DxWIen7LMaNq0nW2dA7reKkE5
KSc7KweHxqWn43BZVGZuXjGZXgQWEUPg80taBGXyVAwbkAkJCkelptNpeTlk
OpHILCyqCY1GPfPS4b2HI4HDv98d+NzesF2HYsDUQeiAYwGMMeAMjQ9YCgUr
IA7A3qde8DvolxKTxopL5x4NxvmE4g4dRwOwr/qlwxKcKj63Ki6d7ReOTyMI
eBXyNHxRPIYbi+FHprJyCyRVLSYiozQyMfPJn/36/lkyD068Os7uQC5gdXec
P+C2a2+YSjNbVNaXy1TjyLIcZjvgPGI93WNaKStvX9+4deuNL9c3Xp+0nZqd
37aOnmDmVQYGpfkdTz54LOGoP8Y3OMs/NBvKNxh7xD8lODQDh2WBrygXVpbw
S+rLqjUSRZdUCSWpqlc1y5SNsqnB8TMr22vTq93tOkllk6SqsYRdRM0lp2am
YrKxgrKyQlElPoeTkpELwQeaDuR6QBuO4oN+CUcO+8bHJVNyGGh0NomUl5FJ
DYpIe3Hv8adfOLb3SDR4v4PHU379B5/7Rg7Y6xjfgHJkcFiBbgg8PxCQ+sqR
xIgk5vEoIuC591gyoO0fkQ047/NJYRS0JGML4GlkSm4qnheVworH8FOyhHFo
fm5Ba1FNZyapMDg6/bdPP+/h6e0459/53kkasGK/2Yur45o/BG5n92O+yfL2
qaLSARZHl01pJ9Hbi8oHdMbl5jaLUj25tPb6Ox982ze8LG7SEqiCYwFJh3zi
IJf5HE85HpIVEkkJDCPuO5LiH0rIzqlCZxUVCFpQ6QwwzLLWjlKAjF8sLi6p
ExRJysul1dWalpbWarG2TTGoN4/1DgPsHAqLiM5mkmi5LHpKRnoWmVheUy+s
EhNphSkYOvSyuFQqQA0F0d4nOO3AAd/gkEgqNR/ITMrhJKZm7z8SBjg//3LA
k7/e88wL/oeD0vb5Jjz1vO/Pnzr40t4wyHq4HCGIhmNQDgzGS/vDQajD4wn7
jia8fDgBdADE/0gQBqAOjacGxZAB8ODYHFaRFGxAeGJuWCLFLyIDwI/L4GQz
a1OzhSl4AYhJejYnMh7zwsv77p2L7vLg+TDI/Zfstyq6ezMiJ7fA4ExJ2wRP
YKKztGSmhiUwlomHW+XDoqquuqbe1fVbyydvgK8QVbfnsiqDIzAHjsYGhWOS
UPRUDDcmkZWaKcCRRRDJG1oHuvtWx2ZON0u69Z2WznaTuAwIrGgWiWq5nIYC
vkpcrZc0yaqqAHBJZbVK0iKrbxByCqmEnBw8AZWZjsJiaCxmPl9IorGyKfws
Mj8jmwutMDGdHptCgaQJOPv6BENhseTsbHpaOik4PPm5XUd/+puXn3v5+Iv7
Qn719OHfvOT33P5QABxs889+dwAgBUpDvoD0nYrlQAwBzwbZZP8xaIioo8GZ
FHZTQCRhv28q4OwblnXoOAYwBz2BCoqhxKN5PmGZsOMA/IBockZOOeAcHE8D
nPG04ngUYfe+g27uno7cd++Mo7v3GUBut+Xu6mS/4xn0wfBIQnPrCOAM+swr
GeQIe8A/tyomm1os4KgXV28Mj23giIUMdg2FIYKqazbMLl2aXbwqV09UN/Q0
S0falOPyDtvC2huzy6/PLr8GkWd8bK1bbzHqB0d6JxpKhC0CTi2HqSgXdlSL
FJUlmoYqaXlJc2WZkM2ikykkHIGYTSIQyWQ6PYeeR6CxyAwejsTBEDhYUkEa
Nh8oHZlADIwEaU3394/y9Y3w8Ys8HhTvezzmxT1+f3jFPyQaS82rJlDLfEMw
B3yTwRuDWwCfBvXLZw6DxwBHBwiD8cjl1IKMgGiAbvsEZwB6mTkiMI0gzq/6
pb10IHbP0SRYAeQP+KNgHTA/FIjyCcsAzr8agAZviaFUhCUx0rILcRRBIop4
+FiA945H3N3dfzBe5+rs4eHmjvg96IH2S7jT0tky5aRQNFRQ3M8vHWIJDLic
ZnJuQ5XYJJFZ1V022/xFcm5ZRhaXllc5aF1798O/f/DJnas3/gKoKrVTglI1
Bl9aVqWfXbkxPnt5deONzbPv3Hrj8w/e+2pr48r48JyitraZz5YU8dpKCgHn
nrZGs6xZXVetlTSKS4pJODyTQstjsHj8wjweLwWNTUbhWQXlDE45gVaEIwtS
M1nRSeSoRBIEsYAItH9Q3BHfiH0HA338Y48GxL609/j+o9F+IWmQRiFrxKPA
jxFe2h8Jbg1aIdhmUAxHAHQYDCA29EHgM/i9o4HpgB6IMMgySASgvetgHCAP
OIfEUaDxgYbAWwApp7Qtl9fsG0E4GpoVk84BoQZLn4DOjUvL9jse+tDDj9vv
l+X6INTILfKQOw8gN4GxGw8PHL5I2TFdXj1aXj1eKLIAn+NRZXFJfCq9iZxb
R2PVz61cLyiRHvZLLqtWn3/tk7OXPxmbPl9a0ZWaUQjSEZ3ABFlu75oFjw35
8Z0P77xtv4fJzPRGl7Zf2qI2aztr8lmNAl5nQ7W5rWm4Q2psrVfVlA3r1W++
dmHKat1YXRsfneBwC4vKKrJzGJA+MNlMIq0oO6comyqEDugQDd8QlF8Yyi84
cde+gIDQ1KR0qn9wGoB8yC8BnMZzuwJf3BO669WoF/aG/2FPGNiJZ3cdh1YI
2RkKOAzp7zfPHWMVNhFyS/ccjgK5fnZXELQ5KqcRFAPUGEEyLAs64PN7IwFq
wB9UGjxeRVN3R880fADgDU2kHwvDp+CL4zLyo5JJ4Dd8/IMfefRHjgt5Hjzj
6z7O9qvjXZDQTRC2q2cqasYk0hVx03wutysmRZiYKsjMrmBypDGJeRRmbZGo
PTaZDgGwRTGSx21NQvEiYulh0VTfoIwDx1ICQrM4RYryWiOrSF7bbAIPlo5l
h4SiQ4KTuVzRxsrmhLFfxMo3yxSddbU9bc0TBo2tR69rk1xYP/nZRx9fOH1+
ZfkkPY9LpOZlk/OgtUGkxRK57IIGtqARKA0SDXwOjsFC+QYng4UDoYBEdtg/
8YBP3N5DMc/vDnr6DwHPvhh40Cc5IAwfGIkHRwGMdcxbgVDvPhAJzhmWEDpe
e+MLYZUSVPq5l0NAlvMEbRhyGa+sHSAFuYZXnn05DGQEGA5PgdX18oFcfj2s
gyxHo9ggGgmZBanZhfHptJiUrGN+QQ4+/2CwzqHPyK3I3F0c9zGjMmp6ek+B
3xCUDDK5RjShOSa5NDqeExyem4EvD42iAp6YbGFEHPXY8YzYJBYUtL+ohPzI
OMYxfxS8uHt/1KvH0g76pu/3RYXFkMDdvXosNiAoOTA4KSkFPz25/MblN6f6
rRszi8MdGrO0TSoSdjaIu+VtPWrVxuqpk8unFHJ1HluQkp6dlJadiiYnoykY
PMSWNqV2rKhcBu4uNo0CFRaPD4rEgIxA+Yemv3o0Hv7WseNp+w7Hvrgn/KW9
EXsOxu8/mrz3CAIpqIRDLoDVkPgA+ZcPRsHyrQ+/Xd64Ae46OjkXXAT4ZHXP
QmWTCYAFNQaJBmUGVgPg4KJTcIWCqg5iXiUg7xdJBJCBzGiyCPIL/J741Gzg
84M4P4i2A+d7d+RzwZNKTX3r/CIzidqOwjYnZtQkoCqS0aU4Qm0GvrKovBM0
gZJXB1ksOokRk8wMCCMkoHhhMQwff+xB6BT+6bBpB33RgPPeY6n7jiQBqYIj
s0DPk9NoaekUrWb4+uUPr557Y2N+a25gYnNqdrBdVUAg2vr7z5081aXSDg9a
6+pam1pU3MLy3Lwi6IAxycTUDGZ2TnG5WCtu1oPr8AlJ9Q9PPxqUvP9oDCg2
BGTobiCzAB2oxK+ePfbLp44An3/3XMAvfnf0qRcCQDRAJYDJYKRf3BcGSRBc
B6RpYDik5smF83LtaIdhGsQBLDRkQL5IBZACsQFPwBl043BgBpZSDh/Iyi3H
5BSDtgDOwGQUsRSiCpi9yCQi4OwbEPLwI0/Y/cb3+OyYB7+nGwjOsYm5mq4l
QUk/IUeBJcpQ+Mb0rHp8TgOT217TODw0dtHQd5JV0ArmLQHFJuZWZxJFoTG0
Y8fxyWn8qBjyMX/0Kwfj9xxIOhKAORiIASZAf/EJSg0MQx8PTY9LyCoplvb2
rsxNbdmsywsj8xdX1m9tbysrq6r4/N7OrrnJmYaaxrHxaamii84SlJQ3FZQ0
ZBK5aRhWZBwpOpGCwrHj06jRKWQQjT1HIp97OQgaGRB1/7HE3Qeif787GHAG
Ar9yIG7XvuhDvtAQs32DMgF/h81wTKCAZwbMYSUlEwmVULySttfe+ErXvwqd
7pndoRCl2UJ5YYWawKiBTQBiQ0F+QXJiIOpIMGr3oXhQZiytKgknCIqjQh8E
PkMfBN3Y+dBjDj5/bz7F2RX8hv3uRndxhvgMuRtwJlKUOQwtjiJNw9ZiibW5
+XIaSyYo0xeUaIsrOlMwfAyhpLLeVF7bwxYoUHhRHqdFWKoEm52b3xCXzD4e
TvSPIgVEE/1CM185GHHAJ/ZYQHJwaEpqEpNArGhtMi5Mn57st6kbpdtz85/e
vDlhNoN/7jeaOuSqqck5mbIzA4dce8XiVOTxa5kcMSqTE5NEhSbo0A3f0LTj
kRngZvf6JMK2B0ThfcOxYOGOR2QlovPDYnJeeCUiJIqEI5WFx1L+8HIwODeg
PSAMYRwwhxUQkyPHU7MoJSAm8FRYpV7afEehmwaJAPaSWXUS1Wh5gxG6IRSY
uoMB6SDLrxyNh4wJ4APOwGeHdKCIRcmZzNhU/KuHfLy8H/73fEbun4GkbWQy
3H4LLK9jvqnt2tkikTE3T44lNGHJstiUyvSM8kxcNZ2lyCY2sLlqOlPGYElr
GwYrxUZRlbZe0kPnVAvKJAJhA46Ql0Xm5jCK8VQ+CkuHDhWbknPYPwG8FsRk
6FORMVmJSaTo2AwWtEmpwjLQPzEyuL40//kHH57b3N46sX1iYX3UYmtq6S4q
aSHRy7JIghxGpbBSXl6ngQQXlUpLwObj6GU+4diDYGUDMUf80/yC0TFJuegs
vn8YGhIHqMGLByKe3n382VdCXjmW9Js/HAfqvrg3GJiPvLUvDBRmz+EYeBEc
NfyfCelMsB+/+N1BEq307KUP9Kbp53YH+IdkNEn70NmCY0Fo2HF7DycCyKlZ
Aki7ew4lRyYwjh7HBkSQAyJJSRnsLEpxaiYjJgm3Z8/hh3Y+hpzY/4NrZt0c
NwJyQq5ydYLAuPOl3cFq3XxZdR8jXwk44ykyLKk1M6sym1jPyFfwC7vqGkZh
nUqXAO3rmvoLhfKe/qV+y2qfZfH0uTc6tIOUXGEeV0zPryoQSpg8MWTkABCN
8IzDAUlgBvyC0uh5ogJBTVYWTVBYsry0cOH05ts3r398+/YXf/r0k/e/XFnY
nppYEderi0slOYySNrlJa5gAPheUtqDx3OjknDg0HU0qCIjKhLwADmf/kbiD
vvGZxALwIbsOhD73SgBo7zMvB+71id/vl7zrcPyLB6IO+SfCbwCQjwamBEUB
7dF7j4DIBEDBfolKIpMYIog/v3rqAIEivHbrc4FIumt/KPzPhwPSII9DhHnm
xWDog6DPv98VfiQgE40vjUnOT8sqgYSYiuXB13FkfgIqe8/eg/Yz/F1/gDNy
Wz/373B2cvL+6c9flndM1TZayip7uQI9maEi58rz2FISpQE4XFxibGmzcXhq
LL6KL+jgFylr6rvHp8++efur2x99+ddv7nzxb99evPL+zbf/unHm7dnls6ah
peGJ9fauUXZRU2WDrlHWV93YpeuxzcxtTUwsazWGMev45Kh1Znzy7Ztv3fn2
zjdff3vl0hsD/XM6g8ViXWpq6aqpVRaVNKZhmcJKaV2Lrl6mK29QZuTw/KPS
o9II6VguKjN/96uhKFx+Vo7gWHDKK4cjfvXskef3Bb/wauivnj8WEIWLTKFC
qNl7OOr5VwJBwYIiM8GfwH4Hi/L8y8cBT+TMxhAUMbc0NSNv78FINI6zce4d
MkP07IsBoPZgwg/5p760LxpwBrO3az/sVnRQOJgcFo5SnYYXJmAQPmPJnPg0
/Isv7bFftPLDC8AdN5V14Oxsl45Hn3i2STogkY23axal7UtFZX3C8j6j+WR9
03BDs7WmdriyekBcPxSbwE1BFcQm5qEwPGn78ObZt99+76/v3f7bx5/cufnm
5/Mrl+eWL08vXJpevHzm0keDo+uw07Hkkjx+C4lRRcuvqm3SdRmsY5OLn/zp
yzduvfP69TdAk02m4bNnX//mzreffXHnq6/ufPrp16+//v7U1KpCYeDyq+ub
Vevbl19/46PL197Tma2NUrV5ZHpt65p1aq20Rmq2zMm1/b4hic+94vfK4bDA
WCy4PhSRu+dYDPA/Ec1Iz+LgKcVwRABvsaRCSl4F2c7hl/aFHAtMgWMtMAID
3TY+hfrz3+xTdloB6gPHEiC8AKVDYoiH/FDQBNHEkkN+6L2HEekIisyJSs6P
Ts3LIAsxxIIMAisqEfPMsy8422/K+4NrkF3d7t73++5Na512ODk/ls9vbJZa
e/q29abtnv5Lw6NXF1bfHJ24ZOg5WdswTGO04InV0XGs6DgmhV6XBwEqKJ1E
K1ldu35y/eal1z565/bX66ffBD73Dq1K5AN1ErNcPcbgNIEP9AnCgetDpoqO
xb16KDw4NEkm67x+7a0PP/jsxo3ba2vnJ21rpzav/enLr7/9+53/2913gLV1
nm2LDXHiNKMj42tW27RNmjROvGPseBtssMEsm7333nvvKZaE2EMsIYGEkNhi
CSGGALHE3tsTMBiM+Z6jgx03o03b9L/6/ed6L10HIWO4z3Pu577f877Ps7mx
B8f2Y2Tce7g5u7C6vvlkc+fpzt7enYdb8ysPNnb3Zlc2giKSjS3d4wkFYbGZ
ShogSOyvKhsdllX88utrumbuCrfM4dXYygeAVdG0RrGFSIZ8Cq7nhrrFb39/
DPzjF8fkgFhkz6nB+PLENXUd++GpdRev+A/+dObydRN5ZXMQ0pAcEaV3+jaA
fOSUBuB89BvNM1cNQeYZWHoBzpcVNd57/3fCNbrfCWdhxe9nJZGRcnkiMhjM
y6YW3sSiFiqjPyKOnpnXWd+01NQ2w+lYSkmrCQjOc/VIuSxvLnfN0tgsVF3T
5fQ5zVNgDY7JnzqrEovN7+TN9vCXaxuHWM0TNEYvgGxsGezgFm/nEqdt4Hvl
uuU38oZn5HUgxSuqmSNTytrmclfVff1j8gsrWjiDgtGVto4xoJ2Ha1s7OztP
n+w+3toFPtnefvL06VOA/fHjnd1dBH/4Eq7F2PSch2+wlaOnqY2bmY2HVxDW
xjnY1Mbn82NX/vzFua9OXZW/aaB02xwQvnxNz9DCy841HIaLdyyIcCB8Eq3l
2k1joJ1vLt8Cj3n20u2vjl/7+NMzgDwhm97IGT986uaJsxpySmZ/OXodJIeC
ut0NdUdFVYdDx1W+Pqcjd9MGlMZNHQc9cw9VbYvTF6+/8+77qFR+vpt4v7qj
+LNCXsg7YqIIztJX5G9VVPfQqwaBpaOxTCAQFnucP3i/tJyXTWyKiCFdlDO5
ctVC3zjAwiY8IDTd0S3K0i5I18hN9oxaUEg6q1FQVtERFVcUGJoVGk1088Ff
umYCLvLsJUMQe3CjXVBCllq5+GBzC2sScYU6eraX5TTMLNxd3SKScJTKet74
3Oadu2sA6cbG5pPdva1HO493tlBst7e3nj4FzJ/s7Dx+ure9sb07vbAyNr1Y
28hJSsv39I/19EtITCXfvG31x8+/ee8PRy7d0FLTtQE5pG3gkpxKiccV+wbh
FG+agJ53co9Ky6ab2/jLnlMF837yzM3zV7SAnL88dvXdj45AVgXGM7IKvKRo
rGfmC/4FnYjWMfa/IGd6/orxJQVz0H7WbjF6lt4a+g6XFG8dlb148NU3hPPO
Yt+rXYBBy8Xsl2gTBd6Q/N0fvmRW8ejVfE+/LCu7pKhYWj6pcXRqk17ZW1HV
Dwr52g3rW9oeIREFppYhQDL5JBalvDUjl2lg5Hn4qIKza0xlXR+IkGhscVhM
fkh0gaKKjZKaIzh0uRtWN247gjAzcwx18MYaWXprGzqqqpnpGzipa1ioaphr
6TrYuYZGxhN5vMHFpbvrawDm7vb2NiC8trZ27969R48e7e4Cc2w/2Xn0dPfx
NmD9dO/x7h68BR8nlzdm5DLicSTlW5agJ68qGyhqGBlauhmaeVrYBsIrxIOZ
tT+ACV+CwfQOSE4iUOCdE98oHzt146K8jpa+s7qW7edHrkDGJJW1FlHbTG1D
1HVdQDCDKwRveFXZ5shJDSV1e2QzhVO0uVOEka2/kobF2cs3Pzt0UlS4Xxvl
jefBDAfaiASFGq2oicFIHDjwBkip+oahyJhSR0dcWgY7MZUyt7RR3zzU1Dod
EkEEutAx8Da3DoN4xiaXlFW0VVRy6YyO/Px6Q2MPEzPv9BwGiGrfIEJgeKaT
e6wOyHgtx6vKVmABvpS9eVEZIsTb2ikU1JqNfZC9Q6ijU1gyjpSMK7Kx91NS
MQWaDQmPpzGq5hbvbD1GaGJza3t19e7c3MLa2oM94JGnT4Rje/Px+pOnu4+2
d+FTIHWWVvdGxh7mFNTomyDa0tjK65Ki5uGvr/7p89NK6qbWjoGe/thIbHZU
fI5fSLKrd3RiKonDm4hKyJU9f/PkGWXIGkpqFvYuEcDSh0/e8AoggEkEFX1B
3gDE81+OK39+/Oap89rfXNK7oW6vpu9q6RIFw9DS56Ki9lk5lfc++hTFWUIc
fd79vECHsCPJfuEIzD5Di0pKyvzC0TmouXmUQuuOwdKx2HISlQUJbnD8Qe/A
vbhE8rUblleumVrYhEbG5cNFb+KMjs48au+ebe+aYreNhkakm9sE+AbhcWml
7r5JJ79R++Lotc++kjsiqwK+GJhZ09DF3T8ZNKp/CCE0LI2AJ+dkVdTWdJVQ
6nx8sfoGLpr69noGtubWLvi0gorKxunp5fsPHsGYnJpZX3+I8gYcQB07gPVT
JJjXN/faOkZq6ruLSE3WDmGWdiE6hq4KKkYgCN/98NCZi6rmtr7RCbkF5DrQ
+fDqHZhQ28Rv7Rxr75kikmqUVU1OnFYCx6qsbunln3T6osZ5OV1tQ092z1xl
w9AtPY8zckbHz2mDJQTh8fVZzfNXDRTVrLVMvY2BMC28zlxRP3NF6dVfvYs4
PwkxKcn9ysYoe8AJsgEc2ZAlfOQtZGhk6lRM+rSsQht3vK1rtbJ+orZ5qkcw
39Ez2z98Z2DkbmhU1rUb5jfVHUwtg+A2hKsPqHr4J3r5J9o7BadmkGvquzx8
4z18E0Anh8flgBl8/+Pjfz0mL3vx9idfXPnjZ+fllU2jEwt8AnGx8cTiwrp0
Qqmfd3xUeFpxUU1mNsXdM8LOJcDZPVhOSeuiwm1nz9Dqxg5er2BoZHJ6ZmEd
GBmUH3JAQtxFgnlr4/Hu08XlR2mZNFf3uCRcGQ5PB5eqetvukoLedRXTW7q2
ts7B/kFJvgEJOURGflF1QnIBNpHYwhEQC6tKShtKac1Gpm5nLyEqCCg6MYUs
r2QEmkTLwI3ZONLRt+Lqm3z9th3oZAD5qKy67AU9cC7nFY0Ub9neNnZX1XM4
La92WPaS+IHXkNLownz3nJfRwH7eLElcWCpURASDVLAUkXjrnY9xKYXMyn48
vjY3nzMx92Dx7tOB0dUu/oJfcKqJRSDIubwiFvDbNSXjE6dVDh27fPzra5cu
3zp6/LLcNU24N0toTZD6yXROHK4YBOrbHx4GCwa/PCR6UFzOHtEJeFJ2DiMj
jRofQ8xMoxYX1NKprWmpRX6+0VEx6c5u4Sq3rIA2IQ6Zddze/vHObsHDh9uQ
Fp8ix95ToeoQKpHHC8v3uJ0DGZnUxMSy0rLOPGKznRNWSdVO18jDyj64vLJj
QLCcmVPu4x8XHIKnV3Ays2jY+LyUNLKLewQYzxhsjpau3S0tW4jnIycVM4iV
WoYuCiqmlvahNc0jbT3z4dh8M9twFR33C1dNgTeQsniXtOVVLa+qWagbuCho
WJy+ovLRn78CxkXqGwuRfF4r5nkafF45Da2OJCosiSLzyluWNr6c9uW07MaY
hLJewdT6k72lO1v1zcNe/jgzq1AHlwRXz2Q9I2+I25DIjJiEAnJZc1NLH7OK
jU3KBpo1t/XG4ogefnEt7SOBEWmQ/X/3yamvTl4DTXXsGyX/MEJeUa2Gpo3i
dcOIsHQKqZ7XMdZQx2tgddXXt2Ox6aD31LTMTpxRuK1nU1HF3trZu3N/8/H2
Hmg7COPNzcdPdpCTrd3N8an56rpWMrUOWW2OLXRwxF64qH/8lPrh40rXlEzB
4iEytbAKhE10XDa5rBGGX2BiZEwmBHZySjHgbGMfoKJuYWMXfEvHQf66YWpO
hZ6pBwSzlUMYo5Zf0zgUj6e4+eGAk2/re4IuPXFR+/QVfTlVSxBONzSt5ZT1
vz6v+OZb7yH1rsWQWiU/pDeEKw1E0JLZ+zU6xCWkwLBAENa2TWSVdhKp3LHF
2bnV9bXNvd7BO05uSVo6QTp6oWfOmmnrBebkN/YJ7rA4/fUt/fWN/KXVjSd7
iAYYHpuuZYGLTPb0jSgm16rctvjw45N/+uy8krr1oRM3XH3jLR2Cryjoqaib
GRo7VVdxRkYW+vnjm+t7S/P38jKJOXmZTq52Ds42tazK9Y17O08Q9YzsK9x+
uiPkDQjmnZ3d1XtPx6fW8enUoPA0XDrZ0t7/0jWtL45egAEC4Lqqvp6Jg4G5
Y2pmMam0Jjw6JQlf4OYZlZVLr6rtAqHOaR8lURpxBLKza9RlOR3ZcxohkdnM
uj4H12gjc9/wWGJWXh2V0Ymswk0sADuppuWgrOV65JyBlmng5ZuWJy5oKGta
XFTQOPr1WemXX0WfCYo9a9DzfDeKsD8Euo4Rg3bPQWahRTCSUjIiGIm33/+U
SG4KxpICooj0muaJuY27D59OL2z7BmaYmEdo6/mq3XKLTy4fnXxcRGnSM3U3
MveCPwGfQsol0hube+49fAyADwjGPX1CE/F5FGrTN+fVPvjo2HFZpWNnlK2d
w9S07Y6cUlTXtrZ19E1LK8zNJQ8NTIFMnhpfWJ5ZBsE8PjU8MzctlM2IjAPG
ALSBkMGebDzaBoHdyx8CqTMyuQZynV7VxW4fx+KLzey84ZfRN3W+qqQrd10b
rKKRhUtASDyzmuvjH6+haREWSWhsGWBWd7R3TTS3DiWnlDi7RWrcttXScQyO
yEoilOEz6HFJJHefxBIqJzu/urySR6JyYxKKwCDYuUZoGvt9dc5QWdv9tonP
N1e1r9zQlr1w7ZO/foXUs8WISiJb48UkRL5rCZ8VNxb2ytnvTyQq3F8PSuQ1
R3dsFK7c2ZcANz6HN72x/XT5/tP0bMgjTG//jIiYoph4cnp2rZN7tKVdoINr
hK1DoId3lKGpo4WNBy41v6d/HKCenltOJhBLaY34VIr8Vb0Tp5XVdR3ACJ++
qH5c9oanT2xWDrW4iJmbXcpu7AHzMTd9Z+vODiQ7JH6FBnBraxs1gwDvw7XN
R5tPVlcfTUwslZYyXb1iM/MqweY3t40Ojd2va+5z84mxcvI3tfbU0LHS1Lc1
sfKAkDazcs3MLfXyjTEydcnILuvpm+vtn+f1zpSUNrl5xtg6BGdmM/oGVgZH
H5bQ2nDp5Zl51f4haUWUFlpVJ4nKyS9pSs+p9PJJAM7U0Pf58ozB2WtmelZB
F5X0z1xWPvb1hd+88yGyDwIjCTiLozNGIt8mQVQwiwgD+nmFZ0lJZAcWRgyo
Q+azL87HEMo8gzOc3XBJKfT5lb27D/b6h5ZozHZg15DIzBuq5qBUnT3iAPOw
KKJ/EC4kPC08KtU/OM7Cxj0iCs/jj4OyXb2/VsFoZ7cNd3XPObpF3tZ3VNG0
Ae0EjqyheZBKb+7tm1pd3WIyG0uKmduP9zYfPd3eQVB9tLG9Jzzgy62tPYB3
ZWWjp2cM4j8mhoDD5aZlV0BKtXcJ9w9JqWbxy6u4Vg4BqsLVyOralloGdsaW
rq7e4clwvxRVWDv639K1dvKI4HZPDk/eX4G/ZfgOq2VodGp9+T5Y+Edc3hw4
rOa2iYzcqqDwTLiCNQ39RFIj4FxQ0oRNLg6OzNYx8z8jb3LkzG1tMx85ZcPT
l5Q+PyIrfeB1ZCIOeWgitV9Y5m/nRYXA72/S3O+xJYas/hKVeBkoWubld8Ad
x+FLLazivf0yRyd3wAjcXd+bWtjMK66+oWYip6gPGTCLWBONLQkOzwmPygwM
ScERSBk5FDsnP2//6GxiWW0Dd33zKZgIYn7lxPQDFnvguppZUGQGWMjs/Cqg
dNBXPfzp+/d2x8aWwkOT+D2jd1c3l5cfbmzsAhXff7Cxtr51797jiYkVNru3
sKAilVAYFIg1MXZ0dPDzC05JIpAhqsNjsqPjiSBOwGDCADyBOiAXA8hYXG5Y
DCESmw5BrmvsaGLllZZD6+TPwF+xeGdvfOYRp3Oysq6nsq6XTGuDAWhTyrnF
pWzgDWZtDxgEGDkFdcmppVgc2cUbd8vAF2zLbQNXyICyFxQ//PgvSFsuYZV3
tD2EkJz/ljf2twKJiop+O9EhfLZ1ACMijRF95egpeVwG1cO70NuX2MRZhJCe
Xd4em3mQmErUNrTNLWJW1femZjGwSbREPDU+qTCHWJmdx0zNKAXJhE3MJZex
7J0CafTGrSd7/P5pNneAP7AAPjciNqeghBUQjK+s6RwSrPQNzA0NL7Fb+BXl
DTOTK5sbe5OTq5PT97p7x9Fts+TSehK5NiIq1djUJSYuk1LGMjV3u6lqYO0Q
AiBb2QfpGLqADtQ1dkZxhmA2NHf1C0kEnK0cfD49JOvkEYLPKHH2DLdzCckk
VhRS6tkdo72Dy4waXjyuGH6IoZmXT2BKbeMQ4Iwub2vijMNJKR1uXhbwBpBJ
PI4cFJHj6JF4UcEAbsnzVzWANF75xS/RJ1LC5YuIeHs+j/QdnPdXku4HNzga
pEaECBCOuIzUS294BcThU9s8vHIa2POzS7vjs+s9gzNYfFZKVnHP4Bz4l/Tc
qrTM+kR8OeQUCrWFUsZOSSuNis2Jis3y8I7RM3QyMXVfWl3b2Npt542MjN9L
TCZ5+yUQC2uodE4vf6G9Y7yza5LdKujrX7izsvXg3u7y4sYisvR3rW9wETxm
K3esFjiBwaUz27PzKsBZgCSDpAZeA5dWllNQ7RuEu6lhCUY7KZUEIQ3j5i1T
gNrOJcgvJP6Lo+dUNU2dvEKBt83tffzD8LXNfZWs7vLqzub2Ma/ApAhsrpGl
91cnFexdopi1/Kr6fk7nTM/AKmDe2jENOPsGESJiiQGh6S6eWMiVNk7IhKrc
dV00mMWlDwiXhn47m/H9ApgorihL71duxKAdA6VEJWWkZV7BYCS+uXC9sGgg
JY3FqBGMTK6DJeQLFkorGt19IzPy6ENjD3ILGtw8CSERRAjmEkpzTl5VRlYF
ngAhHRUYggMXBhzS0soH1yYYnYPQBR1lZunDbZ8YHFplMDvAeBYW1ZXT2wTD
dwVDy338uYnxu1PTj5hVvLqGvtn5nYXlXUhSnPbxFs4I8Ew5gyPcmJkL0reg
pAHIBxgjLDorCpsXl5wfFEGAqNYzcYIMqHBT3z80Qfb8dV1TBz0zR+Xbpu7+
MYAzLoNibOXl7hdPqeAYWiB1BXVN3K6rmUOaAx6G9NfFXxLOWHaXMTohmD18
k6zsQ8Fg3lC1dPWKA+8Dl/WbSyp//erU679EtsGKfLvR9YcP4e7v/RL0YiLf
9qiVlkTqUElIvoROd3j6ZJKpvJrG4ZHJR60dk+3dM5DigyPSUzJoE7PbBaQW
bX0vsLoVzM7yivbI6LyomNz4RJKjc0RQKMHDCwtSqpzZvLEFaXRrcGiZ3Toa
HEKglDYPCe7QK7hV1byi4no4b2gcgDc7u6a7eFOQMVNSafDTOnmzxSWNhcUs
CH4IaVZTXzG5Hga3cxxiu7i0OTOPiU8vA4GXkcsIDE+JxxcCMwA527sGAz8H
hifJ39ACHwEuXtfUydLRzy8UR8imaho4qGlbWzkGX7ymI3tB7bKi3pXrBvI3
TJzcY8Oic0Ezg5wDrs4uqIvCFkCi1zZwA9dzUV7P0MzTzNLrurL+kRMX3/nt
x1LSr7ywsPxHD6Q/sJiwNARSygBpRysDGIsgdR0hqpEEKo0w/OGjCvi0CkgK
bO5MVd0gj7/a0b1SRu+qYQlAC0EAqNyyhYvO5oxxO2YysqrCIrIjo/PxhHIw
aHBeSmsem1q9t/YEPN3S8pOe3oU8YhWgyuuepZVzCgprKyo7SCUNxPzqAcHq
8Mid0YmHLdxxSK9wzwLU2ITi6Ph84IeUDGpqNrWRMwTUyuufA2uPOhRQlQGh
BC//RBB1QBoQz6qa5hZ2Pk4eYSFReKAOIyvX6+oG7oGxdm7BNs7BGrq2hhYe
JtbeCiomfz165S9fXTz8tSKAfOiYwtlLWoFhGeExeSCYIevFJBabWQeCpoJg
vq5qqaBspmvgrKNvd0Ve/U+fHD148Ffoxu3nvbH+Hs7iUsKuy/ttf6XFpMSF
s/4yUsh6abRSrqj4G6ZWfiXUlnImv65xrIWz0NqxnFfQWlk7xB+6S2W0K6lZ
QEpqaR1dXN7r4a9mZlcGBGamp9Uk40uLyQ3stlHQ3uvb21Pzqw/W9qprulMI
FAC5izcDaENIQ9jLXdPVuGVdVcOHeK6tH6hpGGS3T4HNh0AtpbeVV3ZC3oSE
BcqNxe7LyKORqKysfHoCvgQUXUxCfhGlEU4gkm2cggDn4MgUyHqe/rFVrI7B
saXQWIKmsa26vrW1a6CxjbeOqYu2ibOLb4yOqZvsJfWvTil8fgQpKghI3tSw
sbANRtk4NDrXzjlSWd0a5OsFOd1zV3Suq5gZmbrd0jQ7derK22//DilTiUEn
P/f7ov4Y2gAyWjobKYskxBlAPiAhg1RTkkAmrMXRqmAimI/++Glcck4xhVNZ
O1xVO1ldOxMVSysq6WjnLQMgoKMA6uzc6vHJzbm5PS53OjGpHEZgcEZqOh0Y
dXZxffXe1tzS8tLKNoc9kpFGo9M4IKobmwYHBldKyI22dsHnL9w6dlyBkFbO
ahyEe2di5kltwzClnNPdv9jdvwRkRWVyouKzlNQNIa+V0OrrW3oSU8iEzPJ8
EiskMgPuaN/gJHwGxcMvLjAcl5BSEInNJGSVBEQkeQbHEArKHL1DzRy8lLXM
YFy+oauibXXmivqhk3KfHb386aHLZ69omtkEAci3tF3cfbCotLCwDZS/bnhe
TvfSVX2AWuGmuaGRyw1FrU8+OXzgwBsiwm2AyFLbF9rZ/PAhbDSDlikQgors
WJGWBLGNzC6JCB0O4CwhhTQVvXZDE5deUVDSXsOaKyoZ8A8mFZV0d3Tf4XYt
+PknnD2vAckCVOj0ws7S3T1gGEAJeMMnEEeht1TXdQ6NLK8+2JiaeQi6orKq
AwRGfkENmdI0PHa/tW0cKL2qutvdMw7+SSdvkdUywumcAhHb1jFxb+3p0Mjd
nr4FOrNNW88eIioqNiMiOg1eQ6PTmzgjxaVNIMwgmP1DccGRqXA5wBNFJ+SC
wLutZwfGJCWrrK51wM03VtvICbKeoqqp7AX1c3JaX5649pevLh0+eQMAdPSI
cvaKAVcLFK1n7G5uG2zvGmtuG45sHDuvDR9QuW2noGKqcdvk9JkLb77xFlKz
69v09083dHtRnCCeBdHfGKSytJgUJEQrh4iMvBZcWishu9s/mIZNqhka2e4f
vMvljJma+9i5hkcnF9BqOsfnNsbntnoFq6BOvfyTcGmlyXgyaIYHG3tzi5vD
o0sVzNYmdj+F2tTEHuT1zkGyA5zdPeM5bXNt7bPVtQPN7DHIqk0tw1Mz2+0d
k+CLSeSmmjo+ZNVYbD5IGvg8tbwtN78iMiYdzDtoSFB6MFhNA3DhQA3C5908
YsEsk0tbgHZScypMrQKc3KOBAI/L3vz8K7lTZ9XPX9bT1vdw98YHhueGxWaH
xqX4hWLdfKIcXCN1jT1VNZ1VbrlcV7G/pGCqqu2goeeorGklr6Dy+49/J9yg
LSQEYQtm0X9QzPx70f1s/v+79ILQELLA4+33/wp3Ez6jPiqxMjSWbmaFxRFq
Wtiz/fwV+HOSMsi5pXUpOeUtHaPTS0/q2AJQ1xGxubpGbsl4ahmtA8JybvHx
2OS9bv708NgqKGFiYRUQeF5BNaOyKzo2z8klEuR3bX0ft2MK2B6CuZbVk5RM
cnQJBzUYGpHu5hkD0hE+08wegQ/gU4sTkokgHfWNnEGrM6o6xybX4EeBsIRX
ZlUPXF+4LsERGd4ByY5uMb5BePhlzl3Wvq5iYe8cExVXlFvQVEzhZuY25BbW
g3+BFOAfQjC3DjOyCFLTBI1hc1XJUlHN2tDSR8vIVVXH9tjJs6+99ioKL6qZ
/50WNs9/CAo+2HZQ1BLiL2FEDp48pZSV35BbxMUSalRue6lreSXiGHX14yVl
HfQ6XgN3hD98h1nfW9s82Nm/CPd+eg5D9bYNyA9//9QiUkNjyxCnfbSuoXdA
sDw2+aCzewYMS2oGNRFXXEiqB9izcyt5PfMQk4AYvAK3Z+ZU+PgnwnfBBIG6
6x9agaAFOQ22BW4H8CwR0VmlNDZ8GORKLrHaLwBnbOoVFJKeS6wNj8yxskEe
uQJ6IH0hniFW3bwT/EPTcwobaIzu0nIesailgNRaWt6ZkctMy66Ai6Ku6WJk
FmxmHamh46Zj4Kmh52xi7atv5nHhqvZb7360v4L5BaBejNJ/7RA21xWXRCaj
JISlR6XFJF9VuKlLrWyjMLjeQVmXFWxNrOLw6eyQqBJcJq2E1lZZ3y8YX0/P
Y9JruuqaBrPzq60dgk3MvC0s/ewcQgEEUMtwy8N93dgsGJ9a5w8swWjhCABS
yInLqzsQ82AGB4dX4HKERWSC6YuNJ+YX1gkXhyyOTax38+ebWyEdd2flMuC1
o2uG378Mg0bnBgSlJOEoSCdNWkcRqSU9sxIScVB4urtPvK1TmJs3YuhAIefk
syi0DoA3K4+VldcIXxZTOgjptRHRJeFRJA/vNHevVE0971vabpB09M08Dc3d
wWC+9/svECEnBFm42ee76+j+Doz/8LuAs4z4gZckXhbHSMjIIG1VAWptI5vC
UlZFXb+FfcxFRVsDC7xfWImDR6ybT3JqdlV9y1gnfyk8Ljc1i15W0QEhraZh
ffHKLUNjDzAvTk5RoEyaWkbLKzoB8MHhO1Ozm4Dt+NTD0fHlje29iZm703OP
wGv7BSYq3NAHU9nVMw2pDWDv6ZvrH1oC897bPw+JFSIfHE137wKQP5wARZRQ
2JBGm1rGgalMzYJsbCNz8upAh8cmF8UmFmKTS5JTqWCsCks4OfmN8cnURHxF
enY9nCSnVqVlNSen1qSk1cUl0PwCcyzsIozMAp1cI8xsfG5rWx37+rLUgTfR
5UbfaWHwE3F+Ee0fWuAhLiMqIy2CzKyKoitqRMXFZV6xsPcsZXBLGfyQ2DJd
06SQGJqZXaCSuq2ajrNPcGb/yFptkwD4sJDSUkLlxMQRtXTtQE5Hx+aHReTi
CVRwH0WkJg53on9wdWT8AQA7NbsxM/dwcvb+6v0deAVmqKzhJacU5hGZoxP3
+wYX+QMLC8s780vbkzPr8PnZha35pSfDow/KaBy4O8Dpk8gtLa2Tefksb1+8
s2ucnr63rp5XfCK5vXse7jIy0naPDSflzB4IYyC6bGJTPI4eHkOCkYCvxKc1
JaXUR8TQg8JI3gE5PkEZbh4J9k7BYEzOnFU8+NrbSD1+cbRjnSj6RFscLa//
rx77CRF9jCUqIYORksFICJ/Y7k/rwX/x2q/eNrFxp1b1sNoWKdVzGfkdEN4x
SVQrx2gtA4+svLqe/rv1bEFGXnVmXjVkSeBh4FhqeTsoCl7PcgWTByE9KLgL
bACSo39oYWZhbXzq/vT8QxDbEKtAHYDq7NzmyOh9wHlmfhMQhjfhdWl1F+If
oIYLBLkSLged0VFV0wOsAj+tshpZXZBNrM/NaygoaigsbqQxEeuamsUoIrcC
vPnFbMA5mVABwYxNogWF5kfElsQnVcYnNMfjWEERlICg4pDQXF9/grNbuLG5
88nTl199/dfiEi9JSrz0vNfJz3igxh3hZwwyhItqkO54yEZDZAWC+Bu//tDe
IzKruJlQ1MpoHC9j9lEZ/VzeakwimAVCPXtyZGKrhTsJMjgrh1lc0ghU0N27
ND29vbC0Nzu/OzL2sLdvCcbkzKPhsbu83ile78zI+J3e/llu5ygkytmFR/NL
W1OzawApAAsIQwwD1IA5vDM0strVMwsDMuDE9Abw9vjkxurdvb7BZXJpK0AN
FM2o7AWVCPmOQm9PJpQDXZBK2+EVoE4iMFPSq/MK2elZLIjnyFhaXEJ9YCjZ
J4Do458FdwSIH30jxzPnFX/11vti4tL7ruTfa5D3d47n3cQkhCtKkYfm4vtt
a0Qw0q//5g827pGZxfUp2ZW5xZyisk5gEjKtm8roa+Eu8Ph3B0YedPevgPVu
aR2H2AOWGBi6A5w8u7A9OvEQTtBX+ADIPIhMIF7hc6VZkH8AMujtyZmHALUQ
7fWJ6Qc9fTMwQBk2NPP5A3OCUfhRWyt39xZXnqCUAvjzuufKyluReiCkpo6u
BbCx5HJuGb2rrXOxqXW2un6UUSMorxwoq+AXkNqSUyoTcPRoLD0gtDQ4vNTb
l2jvHGdk7ntb2+bMuau/fvsDdHpZaK//3UaEPw4y8op2/kX7LUuIoM8EwLpI
SR04iDSE/c1v7TyCsgury+jDhRReacVQIbmLXt3f1DbF7Vrq7J0H+QERC/BC
iEKyg/ADpoUBlAuxB+IB8AecO3jTwAPg+4Qn9wBeABlIG/5VN4R6z+TI2OrY
xN3+wXk4mZ3fGBQsLq5uLd/dXljZBKoB2oFrAbcAkM/4xBr88xbOICjzjCxm
amYlxHBtw2hr+2JV3Qi9coBc1k2h9pSU8oiFHHxqdXRMiW9gfmAYxT8k39w6
AjS2po693FWNd979AKm2isFIiu+3fv/+s5Kf60AbzcMlReZJMCJIcxYRCXgL
ebYrIikqdQC45OU3f2Vg5pKWxU5OryaSugrJHRAtlfWC1vbZ5raxgeG1qZkt
wchDweg9BMCptfGJByAbYACq3M5JYGnQZiAbpmd3IOzZnDFWUx9Qx+jEXcAN
YhjiFgZANzO/AVEN+K/c3YVon1/eWFzdnFvaAFaH1DkysTI8vgwOCP4XGBD2
VdWdYGpqWCMQw6zmKThhVA8AzkXkdlJpJ/CGp0+6g3Oii2uys3uao2eWvSvO
1DrUwNxTXkHr7f/5AzoXh7YFfNZOVOz7y5t/Rpz3O3ejfUsxktKiL4PYg+iW
kpICIQkfePkX7ygqu8Xja3OLusoqBuoaJllN0xBC7d2z3f1LfRCE43fAD8LJ
gGARoBCMrkCggumAkAZqBXhB5g0KHvYN3OvtW+nmz/YNzU7NPYBYhaCdXVx7
PuaW1qfnH4D2m5q7P7N4d3bp3sTMqmBsfnx6BQZ8CwDv7ptEGH54vl8w19w6
xGoZYdQOUit4YEYqa4dojD4ylQeCOSyy2NAk2NQi3Mc/BwSGlT3WwjbaxCrk
zAWN13/1gQjy1A95MI2mfmlxZLL++3sifkac0UkSZFGTiChatQNtkYBu2sIA
Y0uLCsn7jRNfy0dFZ9PKOTR6R0vbLAQPtYLfwJ7v7F7j8R/1DjzpGVrsHR7r
GZrsH53vG57vHpiFqAYfx22frK3t7+lZmZjYmZnZnV/YmYMkuPB4bn4LPQHh
MT2zMTP7CD2Bm2Jqen1i5h6wBORQGMBIEMNw4SCxwq3R1j7d2jbJ5kyxmsdq
m8YgR5eU99Aq+cDMJdRuSnlvdn5reBQ5MKQoLJLiG1jk6pZo7+StrWt56hu5
V37xa7QrPNp2CkEBKboqgexp/clG+8WOP3/vY/sVjJ+f73e6Qc/RDp6i+5Mh
GHT/srjwse//vPuhm0sgk9FWwWiHmMGn15CoA3VNdyrrFpvaHnMH5ht7uho7
OtndvZ0DY/zhWQg5bvtYa8twS5OAz1ucm3y6MPN0bmprbgbG49np7ZmpzZmJ
RzDgzdnJTRjT4xuTo2swIOWBbYQ0CgNFuJMHzmWJx1tq75xvap6srRsDxihl
9BTSOwvpPECbUsGH9JFb0E7IaE5IqomIKvf2zbd1SLeyDtDUvPmXTz6VlpYW
EUG2OaB9rL6NNxGR75z8RJB/1tSJQWsaS0seANKWlHjl8iUVHL6EWcXDpzFd
vdOTUuvKGAJG1Uw9e7qubYTFGWkABdIxwetb7BOsQh5saO5vbhkcEqxArA6P
Lo6NPwT9BrEKyhliFfCEgbIufAnYwl0AaZTXP4OOrr5pbvdkc9sopIPWjkl2
+0Rz20Q1awAsCYnKJZXxIJjLmP2ljD5QRLmFrfj06pgEalB4gbtPmo1DrJFR
yBU5zd/+9rfCKcr97mkimH+6P+l/GmdkiS9a3AMjdkDmoLjYARGRV373hy8t
7YLACHv5pRpbhccmVeQW8orL+OXVQ6xWyI8LzW3zrZ0LHd2IJmliC1hNA53d
UwCsYGwJmBzABGz7R1b6hpdRVNHUCUIF2BuceAdvso03wekaB4TbuqY4nZOs
FkF981Bt41BNw2Bl7QCjuq+0oruE1kmmghnkk6i9xBJuRm4DsnEvptAvKNvd
O9neOUbllu1nn11+9eC76L2JTlwgZW/F/3VL8h+LZ2FjUzEx4TMCCGwZcXFk
pY2kxBtfHpbzDkzNzK118UgKCi0soQ6XMWdrGlbqm1dZzUtNnMW2rhVu93wz
uOy6nqqGdm7PyNDEQu/QfM/gHLz2CpaA0vmCBWDyTv5Ue88Et3uc0zXK7hhu
5sL1Gma1CmA0cUcbOMNgP2uaBipqu6mVHaUVHfRqfnlVbxmjJ7+4G9k+Rmwj
ZNbFJlJDIog+gSmuXnHGZu6nzyq/9c6fMaKvYjDSKMAoLSDL8iX+63AWFpyX
lpGRQveJI030xKXBqIpKvCwiIvPyq7+RPa/k4hkTFpORW9hGq56uqp+Dwayb
rm6YqWuZZncutbTPgSQoY3Qy6/oa20Y5XbPtPQuAP7yiJ/AOu2MaRkv7VFPb
RCNnvKF1rK5lopI1XFE7yKwXwIATRt0QraqPROsupnYVU3kFlPbsQnZaViuw
MT61Nj6J7h+cZesYZWKOPLP++M9fIr2MwQuIy0hJyaA5DgQG/C3PnnH8d+Es
rO2PQTuJCyMC4TbQRZKSv8BgDohLviGCOfjSgf85f0nV0T0hLqkc7EwVa7K6
cYJRN8KoA6AEIANozH4qs7eKNVzfAjBON7XNNHOBXuYbW2cbWqdg7L/DnYXv
stiTdc3jzPpReo0AiBeyG5neS6H3lzEGyeV9+eT2nKLWTCLo+SpsMiMusSoG
S4+IRqppmZj5XpHX/ej3h9DG3CBNX3r5wPMHHCBT0ZBGFd1/G87or/bCYzIM
Wix9v+Qj6BDRA8L942IHX/vNoRMX9Myc41OKyphciF4IYzKth1LeV0zpLSYP
ksuGGVVz5cyxiqqJ2oZ5VvNCXeNcfdMinFfXz9aw5mBU1c3QK8cptKGSskEy
dRBO4JVU2g+vxCJeenZraiY7KaU+MpYeHl0WEV2GTCl7phga+1y4pPn+B4fF
JN5EdqTC77O/jgiz/8D6hYaM/6Yb+c/x84sgv/CQcb8HnLBVmZRwHyh8G2lM
/fZ7H52/fMPZLTSJQKbQOsogIGk9hSW9eYVd+UX8Uno/tUJAqxBQqP1FJd2F
pM5iMq+ktIdEQc4LijuIhdy8gjb4FrGwI7+oM4fYlpnDTkmrS8RVxiXQAdiA
4PyA4Dwf/yxPL4KqhuXhI/Kv/uJDMdHXMZhXMBikPbQI5llv1m/3MiA4I/U/
f8LSl79//MdwFkYCsk8cIwxs0WfhvV8JGdk8Dn8XRgpZZS0tLEYh7Lv+0itv
vv/RoXOXNc2sgmPiSzNy2HmFHQUkMBEtACPgCagCpDDQcxRhGLn5nBxia0ZG
A4FQi8dXZ2TWp6bVxCdQI6OKg0PyvH0ItnYxN1Ucvjh0/c03PxOTfBUjchBi
WFT0oITYQTHRl56VH8E8X5CMSlM0SP79yc//ZDyjxw+0QxXelCL76yTRuT9R
DPj1gwcPPusIIC0u+fqrb7z3+z8evySvZmzm6u2bGBaRGRtPxBHIyXhyckpJ
agY1J6+KWFALI5dYnZlTkZZJy0gvTUwgRkakBQYkujgHm5q4qNzUl5WVe/99
sBtvgrZE+UFcQmZ/rlF4cyHdCoS/EjrTi7ZBEvveIvx/5/h/j7PY8z9BiDOS
2iXEQf49n/6Sln4JMjyy6FpMGsEcyFxEWkLqzdfe+PD9Dz//66HTJ09dvXhZ
Re6qxg1l/ZuqRjCUbhpcU9SEd87Iyh8/ev6zT49/9MGnv/7l+y/JvCbcOi2B
DqSBFHLzSCE1EuGCiiJ7cMSE61SQa72P87ebVX+uQ+x7x8/2o/ePF8vRC49n
YfziAO5AAUcnG9FihfuKRUoIsyRGuDNXXPhEAalKjUGHsJIhOhv8bGDQ50fo
M2gR4dy4hCSyIhMlsedf7ldmEMOg20PE0A3XIvs7+37GYP4+yP+ZeP4Hv4Nw
XnH/KjxLl8/2xYiL7bfeQnKTFPJ4/Vue3K/m9J0h+rfTDs/+qOd54dtjv4bt
s0NUVPQ7V//HfuGf5fg5QfzJx49kGXHhAte/WbAt+rf66ic+xP/efyf2HNsf
TB9//9/+38UZPX5wKuzFPXcv/Hr/GJnvL74S+5G1Vf/U8f8BzqI/tHrku7cw
QpziP0XMfh/VH5nGxHzvnX/wY/9P4PxjEH23HNY/WNjzr88z/O3xTy+0+Llw
/l9YS7dv
    "], {{0, 120}, {120, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{120, 120},
  PlotRange->{{0, 120}, {0, 120}}]], "Output",
 CellChangeTimes->{3.779737514334427*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"b8107915-914f-44a0-8565-c74ca29e705a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
      RowBox[{"\"City\"", ",", 
        RowBox[{"{", 
          
          RowBox[{"\"Bakersfield\"", ",", "\"California\"", ",", 
            "\"UnitedStates\""}], "}"}]}], "]"}],
    "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
   "Entity"], "[", "\"\<PopulationDensity\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.779737903124364*^9, 3.779737932181313*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"325224ee-d8c2-4430-897c-fb5b2035ea85"],

Cell[BoxData[
 TemplateBox[{
  "2679.1080006161732862029`3.",
   RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
     SuperscriptBox["\"mi\"", "2"]}],"people per mile squared",FractionBox[
   "\"People\"", 
    SuperscriptBox["\"Miles\"", "2"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.779737934583115*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"6e378e6d-f944-45d2-8cd1-20b4aadbfaac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Bakersfield\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], "[", "\"\<Population\>\"", "]"}], 
  RowBox[{
   TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Bakersfield\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], "[", "\"\<SampleEntities\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7797379429953327`*^9, 3.779737951339553*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"95b0547e-dc0b-4044-98d5-b6ffa3b156f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Missing", "[", 
   RowBox[{"\<\"UnknownProperty\"\>", ",", 
    RowBox[{"{", 
     RowBox[{"\<\"City\"\>", ",", "\<\"SampleEntities\"\>"}], "}"}]}], "]"}], 
  " ", 
  RowBox[{"(", 
   TemplateBox[{"380874","\"people\"","people","\"People\""},
    "Quantity"], ")"}]}]], "Output",
 CellChangeTimes->{3.7797379530730457`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"7d010bc3-2a06-41ce-ac75-1d3d4b01bc15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Bakersfield\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], "[", "\"\<Population\>\"", "]"}], 
  RowBox[{
   TemplateBox[{"\"Bakersfield\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Bakersfield\"", ",", "\"California\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Bakersfield\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], "[", "\"\<PerCapitaIncome\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.779737954787469*^9, 3.779737963179606*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"4417f2fa-03f2-4448-854e-f3025b5df34a"],

Cell[BoxData[
 TemplateBox[{"9.290278608`6.*^9",RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}],
   RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}],
   "US dollars per year",FractionBox["\"USDollars\"", "\"Years\""]},
  "QuantityPrefixUnit"]], "Output",
 CellChangeTimes->{3.779737963430902*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"f325db9d-90d1-4565-95fe-45dcaf79a782"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Log", "[", 
       RowBox[{
        SuperscriptBox["10", "i"], ",", "10"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.779737973470457*^9, 3.7797380186034*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"c9c7a5f1-b32d-4512-9458-1385211fe7b3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", 
     FractionBox["1", "2"]},
    {"3", 
     FractionBox["1", "3"]},
    {"4", 
     FractionBox["1", "4"]},
    {"5", 
     FractionBox["1", "5"]},
    {"6", 
     FractionBox["1", "6"]},
    {"7", 
     FractionBox["1", "7"]},
    {"8", 
     FractionBox["1", "8"]},
    {"9", 
     FractionBox["1", "9"]},
    {"10", 
     FractionBox["1", "10"]},
    {"11", 
     FractionBox["1", "11"]},
    {"12", 
     FractionBox["1", "12"]},
    {"13", 
     FractionBox["1", "13"]},
    {"14", 
     FractionBox["1", "14"]},
    {"15", 
     FractionBox["1", "15"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.779738020671153*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"7ca27d7f-92f7-4b89-85a7-3f7ce2176400"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      SuperscriptBox["10", "i"], ",", 
      RowBox[{"Log", "[", 
       RowBox[{
        SuperscriptBox["10", "i"], ",", "10"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.779738033100347*^9, 3.7797380362122726`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c1cbe687-7bf1-437f-a44b-fcb942902240"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "10", "1"},
    {"2", "100", 
     FractionBox["1", "2"]},
    {"3", "1000", 
     FractionBox["1", "3"]},
    {"4", "10000", 
     FractionBox["1", "4"]},
    {"5", "100000", 
     FractionBox["1", "5"]},
    {"6", "1000000", 
     FractionBox["1", "6"]},
    {"7", "10000000", 
     FractionBox["1", "7"]},
    {"8", "100000000", 
     FractionBox["1", "8"]},
    {"9", "1000000000", 
     FractionBox["1", "9"]},
    {"10", "10000000000", 
     FractionBox["1", "10"]},
    {"11", "100000000000", 
     FractionBox["1", "11"]},
    {"12", "1000000000000", 
     FractionBox["1", "12"]},
    {"13", "10000000000000", 
     FractionBox["1", "13"]},
    {"14", "100000000000000", 
     FractionBox["1", "14"]},
    {"15", "1000000000000000", 
     FractionBox["1", "15"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.779738037595418*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"5e49fbc6-bddd-4f01-b6e4-c41d8d5cf2ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      SuperscriptBox["10", "i"], ",", 
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        SuperscriptBox["10", "i"]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77973805059665*^9, 3.7797380535677233`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"e9b7e4fc-8163-45c3-8f71-a6473c01827c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "10", "1"},
    {"2", "100", "2"},
    {"3", "1000", "3"},
    {"4", "10000", "4"},
    {"5", "100000", "5"},
    {"6", "1000000", "6"},
    {"7", "10000000", "7"},
    {"8", "100000000", "8"},
    {"9", "1000000000", "9"},
    {"10", "10000000000", "10"},
    {"11", "100000000000", "11"},
    {"12", "1000000000000", "12"},
    {"13", "10000000000000", "13"},
    {"14", "100000000000000", "14"},
    {"15", "1000000000000000", "15"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7797380537756042`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"a53d0548-a328-4fd4-9680-fa217ff2d3ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      SuperscriptBox["10", "i"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7797380657482147`*^9, 3.7797380669810877`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"1d3bd7dd-2168-4913-95fc-27b492fde847"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "10"},
    {"2", "100"},
    {"3", "1000"},
    {"4", "10000"},
    {"5", "100000"},
    {"6", "1000000"},
    {"7", "10000000"},
    {"8", "100000000"},
    {"9", "1000000000"},
    {"10", "10000000000"},
    {"11", "100000000000"},
    {"12", "1000000000000"},
    {"13", "10000000000000"},
    {"14", "100000000000000"},
    {"15", "1000000000000000"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7797380672096653`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"45c03324-6637-4600-89d3-f23d29f4468d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "@", "\[IndentingNewLine]", 
  RowBox[{"EntityClass", "[", 
   RowBox[{"\"\<City\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<City\>\"", ",", "\"\<PopulationDensity\>\""}], "]"}], 
       "\[Rule]", 
       RowBox[{"TakeLargest", "[", "10", "]"}]}], ",", 
      RowBox[{
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<City\>\"", ",", "\"\<AdministrativeDivision\>\""}], 
        "]"}], "\[Rule]", 
       TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"California\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        
        "Entity"]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77973815751401*^9, 3.779738158844349*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"b80a2011-52b5-483c-bac5-22e920a5237a"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.779738211470487*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"47c700ff-bc4c-4e39-8491-3842f0ad928b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "@", "\[IndentingNewLine]", 
  RowBox[{"EntityClass", "[", 
   RowBox[{"\"\<City\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<City\>\"", ",", "\"\<RentZeroBedrooms\>\""}], "]"}], 
       "\[Rule]", 
       RowBox[{"TakeLargest", "[", "10", "]"}]}], ",", 
      RowBox[{
       RowBox[{"EntityProperty", "[", 
        RowBox[{"\"\<City\>\"", ",", "\"\<AdministrativeDivision\>\""}], 
        "]"}], "\[Rule]", 
       TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"California\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        
        "Entity"]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.779738225475978*^9, 3.7797382433637466`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"60f93f60-9079-4964-b76c-83040585eed3"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.77973823084324*^9, 3.779738247635261*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"3a2fea8b-2a6f-4d17-bd44-44a28eeb0ec0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<Country\>\"", ",", "\"\<UnitedStates\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7797396782621603`*^9, 3.7797396829874477`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"b79508ff-5a70-472b-97be-8bdb11a9065a"],

Cell[BoxData[
 TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
     RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
   "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.779739683231872*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"f68eb463-c85c-428a-952a-4281963cb25d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
      RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
    "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
   "Entity"], "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7797396861711082`*^9, 3.779739689259499*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"0372eda2-7888-408b-81ff-4e221d538833"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 750, "InitialType" -> 
        TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 750], 
        "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape, 
            TypeSystem`PackageScope`UnknownShape]], 20, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[451026658], "Type" -> 
        TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 750], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[451026658]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"adjusted net national income\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdjustedNetNationalIncome"]]]],
                    "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"1.67401804198667`*^13", 
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                    "US dollars per year", 
                    FractionBox["\"USDollars\"", "\"Years\""]}, 
                    "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdjustedNetNationalIncome"]]]],
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"seasonal bank borrowings from Fed, plus adjustments\"",
                     FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AdjustmentSeasonalBorrowings"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    InterpretationBox[2.7*^7, 2.7*^7, Selectable -> False]}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AdjustmentSeasonalBorrowings"]]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"regions\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdministrativeDivisions"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 51], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 51], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 36138692][{
                    Key[
                    EntityProperty["Country", "AdministrativeDivisions"]]}]], 
                 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdministrativeDivisions"]]]], 
                 "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"adult population\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdultPopulation"]]]], "Mouse"],
                   ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2.13071223`*^8", "\"people\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdultPopulation"]]]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"obese adults\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdultsObese"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "$Failed", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdultsObese"]]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"number of aggravated assaults\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggravatedAssault"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"810825", 
                    RowBox[{
                    FrameBox[
                    StyleBox[
                    "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                    BaselinePosition -> Baseline, RoundingRadius -> 3, 
                    StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"yr\""}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggravatedAssault"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"rate of aggravated assault\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggravatedAssaultRate"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.0024890000000000003`", 
                    RowBox[{
                    FrameBox[
                    StyleBox[
                    "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                    BaselinePosition -> Baseline, RoundingRadius -> 3, 
                    StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
                    "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", 
                    "\"yr\"", "\[InvisibleSpace]", "\")\""}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggravatedAssaultRate"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "18305894706200"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 15 to 24 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue15To24"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "92880335800"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue15To24"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 25 to 34 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue25To34"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "1346440834600"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue25To34"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 35 to 64 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue35To64"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "12060782567000"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue35To64"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 65 years and over\"",
                     FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue65"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "4805790968700"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue65"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate household income\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHouseholdIncome"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"9.1660461764`6.*^12", 
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                    "US dollars per year", 
                    FractionBox["\"USDollars\"", "\"Years\""]}, 
                    "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHouseholdIncome"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate weekly hours index\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateWeeklyHoursIndex"]]]],
                    "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["118.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateWeeklyHoursIndex"]]]],
                  "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural irrigated land fraction\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AgriculturalIrrigatedLandFraction"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   TemplateBox[{
                    "5.52719371969861`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AgriculturalIrrigatedLandFraction"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural land fraction\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AgriculturalLandFraction"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   TemplateBox[{
                    "44.3690679995015`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AgriculturalLandFraction"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural production index\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionIndex"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["105.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionIndex"]]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural production per capita index\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionPerCapitaIndex"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["98.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionPerCapitaIndex"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural products\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AgriculturalProducts"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 12], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 12], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 36138692][{
                    Key[
                    EntityProperty["Country", "AgriculturalProducts"]]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AgriculturalProducts"]]]], 
                 "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"consumption\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AgricultureConsumption"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AgricultureConsumption"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 (-20), {1, 750 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 750 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    750, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 750 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 20, {1, 750 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 (-20), {1, 750 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 750 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    750, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 750 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 20, {1, 750 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 36138692}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 36138692}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 36138692}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 36138692}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 36138692}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 36138692][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 36138692]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[36138692][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {714., {338., 345.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7797396957378073`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"26e8ac7e-8a92-492a-9818-63510d5aabe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
      RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
    "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
   "Entity"], "@", "\"\<Dataset\>\""}]], "Input",
 CellChangeTimes->{{3.7797396989000177`*^9, 3.7797397005552263`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"0bfd0075-1a37-48c2-81ac-d57853c7ea50"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 750, "InitialType" -> 
        TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 750], 
        "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape, 
            TypeSystem`PackageScope`UnknownShape]], 20, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1043162677], "Type" -> 
        TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 750], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1043162677]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 21, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"adjusted net national income\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdjustedNetNationalIncome"]]]],
                    "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"1.67401804198667`*^13", 
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                    "US dollars per year", 
                    FractionBox["\"USDollars\"", "\"Years\""]}, 
                    "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdjustedNetNationalIncome"]]]],
                  "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"seasonal bank borrowings from Fed, plus adjustments\"",
                     FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AdjustmentSeasonalBorrowings"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    InterpretationBox[2.7*^7, 2.7*^7, Selectable -> False]}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AdjustmentSeasonalBorrowings"]]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"regions\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdministrativeDivisions"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 51], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 51], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 217609194][{
                    
                    Key[
                    EntityProperty["Country", "AdministrativeDivisions"]]}]], 
                 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdministrativeDivisions"]]]], 
                 "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"adult population\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdultPopulation"]]]], "Mouse"],
                   ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2.13071223`*^8", "\"people\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdultPopulation"]]]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"obese adults\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AdultsObese"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "$Failed", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AdultsObese"]]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"number of aggravated assaults\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggravatedAssault"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"810825", 
                    RowBox[{
                    FrameBox[
                    StyleBox[
                    "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                    BaselinePosition -> Baseline, RoundingRadius -> 3, 
                    StripOnInput -> False], "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"yr\""}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggravatedAssault"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"rate of aggravated assault\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggravatedAssaultRate"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.0024890000000000003`", 
                    RowBox[{
                    FrameBox[
                    StyleBox[
                    "\"crimes\"", ShowStringCharacters -> False, StripOnInput -> 
                    False], FrameMargins -> 1, FrameStyle -> GrayLevel[0.85], 
                    BaselinePosition -> Baseline, RoundingRadius -> 3, 
                    StripOnInput -> False], "\[InvisibleSpace]", "\"/(\"", 
                    "\[InvisibleSpace]", "\"person\"", "\[ThinSpace]", 
                    "\"yr\"", "\[InvisibleSpace]", "\")\""}]}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggravatedAssaultRate"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "18305894706200"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 15 to 24 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue15To24"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "92880335800"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue15To24"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 25 to 34 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue25To34"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "1346440834600"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue25To34"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 35 to 64 years\"", 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue35To64"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "12060782567000"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue35To64"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate home value, householder 65 years and over\"",
                     FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHomeValue65"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "4805790968700"}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHomeValue65"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate household income\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateHouseholdIncome"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"9.1660461764`6.*^12", 
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
                    "US dollars per year", 
                    FractionBox["\"USDollars\"", "\"Years\""]}, 
                    "QuantityPrefixUnit", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateHouseholdIncome"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"aggregate weekly hours index\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AggregateWeeklyHoursIndex"]]]],
                    "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["118.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AggregateWeeklyHoursIndex"]]]],
                  "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural irrigated land fraction\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AgriculturalIrrigatedLandFraction"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   TemplateBox[{
                    "5.52719371969861`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AgriculturalIrrigatedLandFraction"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural land fraction\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AgriculturalLandFraction"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   
                   TemplateBox[{
                    "44.3690679995015`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AgriculturalLandFraction"]]]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural production index\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionIndex"]]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["105.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionIndex"]]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural production per capita index\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionPerCapitaIndex"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["98.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty[
                    "Country", "AgriculturalProductionPerCapitaIndex"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"agricultural products\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AgriculturalProducts"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 12], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 12], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 217609194][{
                    
                    Key[
                    EntityProperty["Country", "AgriculturalProducts"]]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AgriculturalProducts"]]]], 
                 "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"consumption\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   217609194][
                    GeneralUtilities`Slice[
                    Key[
                    EntityProperty["Country", "AgricultureConsumption"]]]], 
                   "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
                 
                  GeneralUtilities`Slice[
                   Key[
                    EntityProperty["Country", "AgricultureConsumption"]]]], 
                 "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 (-20), {1, 750 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 750 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    750, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 750 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 20, {1, 750 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 (-20), {1, 750 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 750 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    750, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 750 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    750 20, {1, 750 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 217609194}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 217609194}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 217609194}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 217609194}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 217609194}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 217609194][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 217609194]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[217609194][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {699., {336., 343.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.779739705020946*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"8f8b4925-0564-4d0c-919f-a083cf5031ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", "\"\<US Federal Outlays by Agency\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.779742897632021*^9, 3.779742897632844*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"049f7323-5d3a-48d6-a19b-5b62b93684cf"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 36, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Department or other unit", "Budget"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TemporalData]}], 36], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Department or other unit"} -> 1, {All, "Budget"} -> 
           1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Department or other unit" -> 
              TypeSystem`PackageScope`AtomShape[412.80000000000007`], 
              "Budget" -> TypeSystem`PackageScope`AtomShape[160]]]], 20, {}]],
         "InitialData" -> TypeSystem`PackageScope`CacheHandle[688896776], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Department or other unit", "Budget"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TemporalData]}], 36], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[688896776]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 17, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Department or other unit\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Department or other unit\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007280225][{All, "Department or other unit"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[All, "Department or other unit"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Budget\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Budget\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007280225][{All, "Budget"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[All, "Budget"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Legislative Branch", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[1, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[1.96*^8, "USDollars"], 
                    Quantity[1.92*^8, "USDollars"], 
                    Quantity[1.99*^8, "USDollars"], 
                    Quantity[2.12*^8, "USDollars"], 
                    Quantity[2.34*^8, "USDollars"], 
                    Quantity[2.52*^8, "USDollars"], 
                    Quantity[2.69*^8, "USDollars"], 
                    Quantity[2.89*^8, "USDollars"], 
                    Quantity[3.53*^8, "USDollars"], 
                    Quantity[3.95*^8, "USDollars"], 
                    Quantity[4.99*^8, "USDollars"], 
                    Quantity[5.53*^8, "USDollars"], 
                    Quantity[6.38*^8, "USDollars"], 
                    Quantity[7.39*^8, "USDollars"], 
                    Quantity[7.88*^8, "USDollars"], 
                    Quantity[9.9*^8, "USDollars"], 
                    Quantity[1.064*^9, "USDollars"], 
                    Quantity[1.099*^9, "USDollars"], 
                    Quantity[1.224*^9, "USDollars"], 
                    Quantity[1.214*^9, "USDollars"], 
                    Quantity[1.367*^9, "USDollars"], 
                    Quantity[1.437*^9, "USDollars"], 
                    Quantity[1.577*^9, "USDollars"], 
                    Quantity[1.607*^9, "USDollars"], 
                    Quantity[1.662*^9, "USDollars"], 
                    Quantity[1.81*^9, "USDollars"], 
                    Quantity[1.848*^9, "USDollars"], 
                    Quantity[2.216*^9, "USDollars"], 
                    Quantity[2.231*^9, "USDollars"], 
                    Quantity[2.245*^9, "USDollars"], 
                    Quantity[2.629*^9, "USDollars"], 
                    Quantity[2.394*^9, "USDollars"], 
                    Quantity[2.537*^9, "USDollars"], 
                    Quantity[2.609*^9, "USDollars"], 
                    Quantity[2.263*^9, "USDollars"], 
                    Quantity[2.348*^9, "USDollars"], 
                    Quantity[2.572*^9, "USDollars"], 
                    Quantity[2.592*^9, "USDollars"], 
                    Quantity[2.871*^9, "USDollars"], 
                    Quantity[2.959*^9, "USDollars"], 
                    Quantity[3.187*^9, "USDollars"], 
                    Quantity[3.396*^9, "USDollars"], 
                    Quantity[3.89*^9, "USDollars"], 
                    Quantity[3.984*^9, "USDollars"], 
                    Quantity[4.101*^9, "USDollars"], 
                    Quantity[4.294*^9, "USDollars"], 
                    Quantity[4.408*^9, "USDollars"], 
                    Quantity[4.704*^9, "USDollars"], 
                    Quantity[5.839*^9, "USDollars"], 
                    Quantity[4.582*^9, "USDollars"], 
                    Quantity[4.44*^9, "USDollars"], 
                    Quantity[4.316*^9, "USDollars"], 
                    Quantity[4.164*^9, "USDollars"], 
                    Quantity[4.899*^9, "USDollars"], 
                    Quantity[4.794*^9, "USDollars"], 
                    Quantity[4.969*^9, "USDollars"], 
                    Quantity[5.007*^9, "USDollars"], 
                    Quantity[5.065*^9, "USDollars"], 
                    Quantity[5.113*^9, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[1, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Judicial Branch", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[2, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[5.7*^7, "USDollars"], 
                    Quantity[6.2*^7, "USDollars"], 
                    Quantity[6.6*^7, "USDollars"], 
                    Quantity[7.5*^7, "USDollars"], 
                    Quantity[8.*^7, "USDollars"], 
                    Quantity[8.8*^7, "USDollars"], 
                    Quantity[9.4*^7, "USDollars"], 
                    Quantity[1.1*^8, "USDollars"], 
                    Quantity[1.33*^8, "USDollars"], 
                    Quantity[1.45*^8, "USDollars"], 
                    Quantity[1.73*^8, "USDollars"], 
                    Quantity[1.88*^8, "USDollars"], 
                    Quantity[2.07*^8, "USDollars"], 
                    Quantity[2.84*^8, "USDollars"], 
                    Quantity[3.25*^8, "USDollars"], 
                    Quantity[3.93*^8, "USDollars"], 
                    Quantity[4.37*^8, "USDollars"], 
                    Quantity[4.81*^8, "USDollars"], 
                    Quantity[5.67*^8, "USDollars"], 
                    Quantity[6.41*^8, "USDollars"], 
                    Quantity[7.1*^8, "USDollars"], 
                    Quantity[7.87*^8, "USDollars"], 
                    Quantity[8.66*^8, "USDollars"], 
                    Quantity[9.66*^8, "USDollars"], 
                    Quantity[1.071*^9, "USDollars"], 
                    Quantity[1.18*^9, "USDollars"], 
                    Quantity[1.342*^9, "USDollars"], 
                    Quantity[1.499*^9, "USDollars"], 
                    Quantity[1.646*^9, "USDollars"], 
                    Quantity[1.997*^9, "USDollars"], 
                    Quantity[2.308*^9, "USDollars"], 
                    Quantity[2.628*^9, "USDollars"], 
                    Quantity[2.677*^9, "USDollars"], 
                    Quantity[2.903*^9, "USDollars"], 
                    Quantity[3.059*^9, "USDollars"], 
                    Quantity[3.259*^9, "USDollars"], 
                    Quantity[3.459*^9, "USDollars"], 
                    Quantity[3.789*^9, "USDollars"], 
                    Quantity[4.057*^9, "USDollars"], 
                    Quantity[4.381*^9, "USDollars"], 
                    Quantity[4.828*^9, "USDollars"], 
                    Quantity[5.127*^9, "USDollars"], 
                    Quantity[5.389*^9, "USDollars"], 
                    Quantity[5.547*^9, "USDollars"], 
                    Quantity[5.823*^9, "USDollars"], 
                    Quantity[6.006*^9, "USDollars"], 
                    Quantity[6.347*^9, "USDollars"], 
                    Quantity[6.645*^9, "USDollars"], 
                    Quantity[7.181*^9, "USDollars"], 
                    Quantity[7.296*^9, "USDollars"], 
                    Quantity[7.227*^9, "USDollars"], 
                    Quantity[7.063*^9, "USDollars"], 
                    Quantity[6.893*^9, "USDollars"], 
                    Quantity[7.567*^9, "USDollars"], 
                    Quantity[7.724*^9, "USDollars"], 
                    Quantity[7.852*^9, "USDollars"], 
                    Quantity[8.012*^9, "USDollars"], 
                    Quantity[8.135*^9, "USDollars"], 
                    Quantity[8.225*^9, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[2, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Agriculture", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[3, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[6.437*^9, "USDollars"], 
                    Quantity[7.414*^9, "USDollars"], 
                    Quantity[7.569*^9, "USDollars"], 
                    Quantity[6.94*^9, "USDollars"], 
                    Quantity[5.633*^9, "USDollars"], 
                    Quantity[5.952*^9, "USDollars"], 
                    Quantity[7.43*^9, "USDollars"], 
                    Quantity[8.446*^9, "USDollars"], 
                    Quantity[8.412*^9, "USDollars"], 
                    Quantity[8.673*^9, "USDollars"], 
                    Quantity[1.1021*^10, "USDollars"], 
                    Quantity[1.0167*^10, "USDollars"], 
                    Quantity[1.0302*^10, "USDollars"], 
                    Quantity[1.5518*^10, "USDollars"], 
                    Quantity[1.7682*^10, "USDollars"], 
                    Quantity[2.3287*^10, "USDollars"], 
                    Quantity[3.0179*^10, "USDollars"], 
                    Quantity[3.1698*^10, "USDollars"], 
                    Quantity[3.4721*^10, "USDollars"], 
                    Quantity[4.1541*^10, "USDollars"], 
                    Quantity[4.5623*^10, "USDollars"], 
                    Quantity[5.2317*^10, "USDollars"], 
                    Quantity[4.1928*^10, "USDollars"], 
                    Quantity[5.5435*^10, "USDollars"], 
                    Quantity[5.8599*^10, "USDollars"], 
                    Quantity[4.9507*^10, "USDollars"], 
                    Quantity[4.393*^10, "USDollars"], 
                    Quantity[4.8256*^10, "USDollars"], 
                    Quantity[4.5858*^10, "USDollars"], 
                    Quantity[5.399*^10, "USDollars"], 
                    Quantity[5.632*^10, "USDollars"], 
                    Quantity[6.3019*^10, "USDollars"], 
                    Quantity[6.0615*^10, "USDollars"], 
                    Quantity[5.655*^10, "USDollars"], 
                    Quantity[5.4218*^10, "USDollars"], 
                    Quantity[5.2393*^10, "USDollars"], 
                    Quantity[5.38*^10, "USDollars"], 
                    Quantity[6.269*^10, "USDollars"], 
                    Quantity[7.5071*^10, "USDollars"], 
                    Quantity[6.8071*^10, "USDollars"], 
                    Quantity[6.8622*^10, "USDollars"], 
                    Quantity[7.2737*^10, "USDollars"], 
                    Quantity[7.156*^10, "USDollars"], 
                    Quantity[8.5308*^10, "USDollars"], 
                    Quantity[9.3533*^10, "USDollars"], 
                    Quantity[8.4427*^10, "USDollars"], 
                    Quantity[9.0795*^10, "USDollars"], 
                    Quantity[1.1444*^11, "USDollars"], 
                    Quantity[1.29459*^11, "USDollars"], 
                    Quantity[1.39397*^11, "USDollars"], 
                    Quantity[1.39717*^11, "USDollars"], 
                    Quantity[1.55895*^11, "USDollars"], 
                    Quantity[1.41808*^11, "USDollars"], 
                    Quantity[1.47536*^11, "USDollars"], 
                    Quantity[1.47863*^11, "USDollars"], 
                    Quantity[1.53151*^11, "USDollars"], 
                    Quantity[1.52653*^11, "USDollars"], 
                    Quantity[1.48559*^11, "USDollars"], 
                    Quantity[1.4603*^11, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[3, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Commerce", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[4, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[2.15*^8, "USDollars"], 
                    Quantity[3.54*^8, "USDollars"], 
                    Quantity[7.02*^8, "USDollars"], 
                    Quantity[7.36*^8, "USDollars"], 
                    Quantity[4.85*^8, "USDollars"], 
                    Quantity[4.77*^8, "USDollars"], 
                    Quantity[5.82*^8, "USDollars"], 
                    Quantity[6.07*^8, "USDollars"], 
                    Quantity[7.78*^8, "USDollars"], 
                    Quantity[7.83*^8, "USDollars"], 
                    Quantity[8.5*^8, "USDollars"], 
                    Quantity[9.34*^8, "USDollars"], 
                    Quantity[9.92*^8, "USDollars"], 
                    Quantity[1.077*^9, "USDollars"], 
                    Quantity[1.484*^9, "USDollars"], 
                    Quantity[2.01*^9, "USDollars"], 
                    Quantity[4.72*^9, "USDollars"], 
                    Quantity[3.538*^9, "USDollars"], 
                    Quantity[3.129*^9, "USDollars"], 
                    Quantity[2.296*^9, "USDollars"], 
                    Quantity[2.054*^9, "USDollars"], 
                    Quantity[1.925*^9, "USDollars"], 
                    Quantity[1.894*^9, "USDollars"], 
                    Quantity[2.139*^9, "USDollars"], 
                    Quantity[2.083*^9, "USDollars"], 
                    Quantity[2.127*^9, "USDollars"], 
                    Quantity[2.278*^9, "USDollars"], 
                    Quantity[2.57*^9, "USDollars"], 
                    Quantity[3.734*^9, "USDollars"], 
                    Quantity[2.585*^9, "USDollars"], 
                    Quantity[2.566*^9, "USDollars"], 
                    Quantity[2.797*^9, "USDollars"], 
                    Quantity[2.915*^9, "USDollars"], 
                    Quantity[3.401*^9, "USDollars"], 
                    Quantity[3.702*^9, "USDollars"], 
                    Quantity[3.782*^9, "USDollars"], 
                    Quantity[4.036*^9, "USDollars"], 
                    Quantity[5.02*^9, "USDollars"], 
                    Quantity[7.788*^9, "USDollars"], 
                    Quantity[5.003*^9, "USDollars"], 
                    Quantity[5.312*^9, "USDollars"], 
                    Quantity[5.665*^9, "USDollars"], 
                    Quantity[5.829*^9, "USDollars"], 
                    Quantity[6.147*^9, "USDollars"], 
                    Quantity[6.372*^9, "USDollars"], 
                    Quantity[6.475*^9, "USDollars"], 
                    Quantity[7.721*^9, "USDollars"], 
                    Quantity[1.0718*^10, "USDollars"], 
                    Quantity[1.3236*^10, "USDollars"], 
                    Quantity[9.93*^9, "USDollars"], 
                    Quantity[1.0273*^10, "USDollars"], 
                    Quantity[9.14*^9, "USDollars"], 
                    Quantity[7.895*^9, "USDollars"], 
                    Quantity[9.971*^9, "USDollars"], 
                    Quantity[1.0441*^10, "USDollars"], 
                    Quantity[9.321*^9, "USDollars"], 
                    Quantity[1.1907*^10, "USDollars"], 
                    Quantity[1.3722*^10, "USDollars"], 
                    Quantity[1.7032*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[4, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Defense--Military Programs", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[5, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[5.0111*^10, "USDollars"], 
                    Quantity[5.1147*^10, "USDollars"], 
                    Quantity[5.2585*^10, "USDollars"], 
                    Quantity[4.878*^10, "USDollars"], 
                    Quantity[5.6629*^10, "USDollars"], 
                    Quantity[7.0069*^10, "USDollars"], 
                    Quantity[8.0355*^10, "USDollars"], 
                    Quantity[8.0771*^10, "USDollars"], 
                    Quantity[8.0123*^10, "USDollars"], 
                    Quantity[7.7497*^10, "USDollars"], 
                    Quantity[7.7645*^10, "USDollars"], 
                    Quantity[7.5033*^10, "USDollars"], 
                    Quantity[7.7864*^10, "USDollars"], 
                    Quantity[8.4852*^10, "USDollars"], 
                    Quantity[8.7917*^10, "USDollars"], 
                    Quantity[9.5147*^10, "USDollars"], 
                    Quantity[1.02259*^11, "USDollars"], 
                    Quantity[1.13605*^11, "USDollars"], 
                    Quantity[1.30912*^11, "USDollars"], 
                    Quantity[1.53861*^11, "USDollars"], 
                    Quantity[1.80693*^11, "USDollars"], 
                    Quantity[2.04356*^11, "USDollars"], 
                    Quantity[2.20863*^11, "USDollars"], 
                    Quantity[2.45109*^11, "USDollars"], 
                    Quantity[2.6544*^11, "USDollars"], 
                    Quantity[2.73919*^11, "USDollars"], 
                    Quantity[2.81889*^11, "USDollars"], 
                    Quantity[2.94829*^11, "USDollars"], 
                    Quantity[2.89694*^11, "USDollars"], 
                    Quantity[2.6186*^11, "USDollars"], 
                    Quantity[2.86574*^11, "USDollars"], 
                    Quantity[2.7851*^11, "USDollars"], 
                    Quantity[2.68577*^11, "USDollars"], 
                    Quantity[2.59487*^11, "USDollars"], 
                    Quantity[2.53196*^11, "USDollars"], 
                    Quantity[2.58262*^11, "USDollars"], 
                    Quantity[2.55793*^11, "USDollars"], 
                    Quantity[2.61196*^11, "USDollars"], 
                    Quantity[2.81028*^11, "USDollars"], 
                    Quantity[2.90185*^11, "USDollars"], 
                    Quantity[3.31845*^11, "USDollars"], 
                    Quantity[3.88686*^11, "USDollars"], 
                    Quantity[4.37034*^11, "USDollars"], 
                    Quantity[4.74354*^11, "USDollars"], 
                    Quantity[4.99344*^11, "USDollars"], 
                    Quantity[5.28578*^11, "USDollars"], 
                    Quantity[5.94662*^11, "USDollars"], 
                    Quantity[6.36775*^11, "USDollars"], 
                    Quantity[6.66715*^11, "USDollars"], 
                    Quantity[6.78074*^11, "USDollars"], 
                    Quantity[6.50867*^11, "USDollars"], 
                    Quantity[6.078*^11, "USDollars"], 
                    Quantity[5.77898*^11, "USDollars"], 
                    Quantity[5.67702*^11, "USDollars"], 
                    Quantity[5.86478*^11, "USDollars"], 
                    Quantity[5.75087*^11, "USDollars"], 
                    Quantity[5.6315*^11, "USDollars"], 
                    Quantity[5.61075*^11, "USDollars"], 
                    Quantity[5.68339*^11, "USDollars"]}}, {
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[5, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Education", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[6, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[8.16*^8, "USDollars"], 
                    Quantity[9.85*^8, "USDollars"], 
                    Quantity[9.73*^8, "USDollars"], 
                    Quantity[1.152*^9, "USDollars"], 
                    Quantity[2.416*^9, "USDollars"], 
                    Quantity[3.596*^9, "USDollars"], 
                    Quantity[4.072*^9, "USDollars"], 
                    Quantity[3.99*^9, "USDollars"], 
                    Quantity[4.594*^9, "USDollars"], 
                    Quantity[5.099*^9, "USDollars"], 
                    Quantity[5.537*^9, "USDollars"], 
                    Quantity[5.709*^9, "USDollars"], 
                    Quantity[5.747*^9, "USDollars"], 
                    Quantity[7.331*^9, "USDollars"], 
                    Quantity[7.897*^9, "USDollars"], 
                    Quantity[8.717*^9, "USDollars"], 
                    Quantity[9.828*^9, "USDollars"], 
                    Quantity[1.2167*^10, "USDollars"], 
                    Quantity[1.4612*^10, "USDollars"], 
                    Quantity[1.6973*^10, "USDollars"], 
                    Quantity[1.4707*^10, "USDollars"], 
                    Quantity[1.4433*^10, "USDollars"], 
                    Quantity[1.5424*^10, "USDollars"], 
                    Quantity[1.6596*^10, "USDollars"], 
                    Quantity[1.7577*^10, "USDollars"], 
                    Quantity[1.667*^10, "USDollars"], 
                    Quantity[1.8145*^10, "USDollars"], 
                    Quantity[2.1468*^10, "USDollars"], 
                    Quantity[2.2972*^10, "USDollars"], 
                    Quantity[2.5196*^10, "USDollars"], 
                    Quantity[2.5832*^10, "USDollars"], 
                    Quantity[3.0109*^10, "USDollars"], 
                    Quantity[2.4557*^10, "USDollars"], 
                    Quantity[3.1205*^10, "USDollars"], 
                    Quantity[2.9727*^10, "USDollars"], 
                    Quantity[3.0009*^10, "USDollars"], 
                    Quantity[3.1294*^10, "USDollars"], 
                    Quantity[3.1285*^10, "USDollars"], 
                    Quantity[3.3476*^10, "USDollars"], 
                    Quantity[3.5523*^10, "USDollars"], 
                    Quantity[4.6373*^10, "USDollars"], 
                    Quantity[5.7145*^10, "USDollars"], 
                    Quantity[6.278*^10, "USDollars"], 
                    Quantity[7.2858*^10, "USDollars"], 
                    Quantity[9.3368*^10, "USDollars"], 
                    Quantity[6.6372*^10, "USDollars"], 
                    Quantity[6.5963*^10, "USDollars"], 
                    Quantity[5.3389*^10, "USDollars"], 
                    Quantity[9.3743*^10, "USDollars"], 
                    Quantity[6.5484*^10, "USDollars"], 
                    Quantity[5.7249*^10, "USDollars"], 
                    Quantity[4.091*^10, "USDollars"], 
                    Quantity[5.961*^10, "USDollars"], 
                    Quantity[1.03288*^11, "USDollars"], 
                    Quantity[6.8506*^10, "USDollars"], 
                    Quantity[7.3669*^10, "USDollars"], 
                    Quantity[8.0852*^10, "USDollars"], 
                    Quantity[8.8426*^10, "USDollars"], 
                    Quantity[9.4971*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[6, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Energy", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[7, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[2.755*^9, "USDollars"], 
                    Quantity[2.7*^9, "USDollars"], 
                    Quantity[2.726*^9, "USDollars"], 
                    Quantity[2.579*^9, "USDollars"], 
                    Quantity[2.343*^9, "USDollars"], 
                    Quantity[2.253*^9, "USDollars"], 
                    Quantity[2.474*^9, "USDollars"], 
                    Quantity[2.393*^9, "USDollars"], 
                    Quantity[2.393*^9, "USDollars"], 
                    Quantity[2.2*^9, "USDollars"], 
                    Quantity[2.299*^9, "USDollars"], 
                    Quantity[2.304*^9, "USDollars"], 
                    Quantity[2.233*^9, "USDollars"], 
                    Quantity[3.23*^9, "USDollars"], 
                    Quantity[3.841*^9, "USDollars"], 
                    Quantity[5.049*^9, "USDollars"], 
                    Quantity[6.412*^9, "USDollars"], 
                    Quantity[7.441*^9, "USDollars"], 
                    Quantity[7.26*^9, "USDollars"], 
                    Quantity[1.1756*^10, "USDollars"], 
                    Quantity[1.1656*^10, "USDollars"], 
                    Quantity[1.059*^10, "USDollars"], 
                    Quantity[1.099*^10, "USDollars"], 
                    Quantity[1.0586*^10, "USDollars"], 
                    Quantity[1.1025*^10, "USDollars"], 
                    Quantity[1.0692*^10, "USDollars"], 
                    Quantity[1.1165*^10, "USDollars"], 
                    Quantity[1.1386*^10, "USDollars"], 
                    Quantity[1.2083*^10, "USDollars"], 
                    Quantity[1.2472*^10, "USDollars"], 
                    Quantity[1.5515*^10, "USDollars"], 
                    Quantity[1.6933*^10, "USDollars"], 
                    Quantity[1.783*^10, "USDollars"], 
                    Quantity[1.7608*^10, "USDollars"], 
                    Quantity[1.6195*^10, "USDollars"], 
                    Quantity[1.4458*^10, "USDollars"], 
                    Quantity[1.4414*^10, "USDollars"], 
                    Quantity[1.5879*^10, "USDollars"], 
                    Quantity[1.4971*^10, "USDollars"], 
                    Quantity[1.6319*^10, "USDollars"], 
                    Quantity[1.7669*^10, "USDollars"], 
                    Quantity[1.9379*^10, "USDollars"], 
                    Quantity[1.9892*^10, "USDollars"], 
                    Quantity[2.1271*^10, "USDollars"], 
                    Quantity[1.9649*^10, "USDollars"], 
                    Quantity[2.0116*^10, "USDollars"], 
                    Quantity[2.14*^10, "USDollars"], 
                    Quantity[2.3683*^10, "USDollars"], 
                    Quantity[3.0778*^10, "USDollars"], 
                    Quantity[3.1371*^10, "USDollars"], 
                    Quantity[3.2484*^10, "USDollars"], 
                    Quantity[2.4731*^10, "USDollars"], 
                    Quantity[2.3638*^10, "USDollars"], 
                    Quantity[3.014*^10, "USDollars"], 
                    Quantity[2.8303*^10, "USDollars"], 
                    Quantity[2.8348*^10, "USDollars"], 
                    Quantity[2.7611*^10, "USDollars"], 
                    Quantity[2.8359*^10, "USDollars"], 
                    Quantity[2.9398*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[7, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Health and Human Services", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[8, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])]}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[3.529*^9, "USDollars"], 
                    Quantity[4.11*^9, "USDollars"], 
                    Quantity[4.61*^9, "USDollars"], 
                    Quantity[4.7*^9, "USDollars"], 
                    Quantity[5.715*^9, "USDollars"], 
                    Quantity[9.639*^9, "USDollars"], 
                    Quantity[1.3074*^10, "USDollars"], 
                    Quantity[1.5411*^10, "USDollars"], 
                    Quantity[1.7397*^10, "USDollars"], 
                    Quantity[2.0391*^10, "USDollars"], 
                    Quantity[2.5309*^10, "USDollars"], 
                    Quantity[2.5578*^10, "USDollars"], 
                    Quantity[2.8062*^10, "USDollars"], 
                    Quantity[3.3751*^10, "USDollars"], 
                    Quantity[4.0261*^10, "USDollars"], 
                    Quantity[4.6493*^10, "USDollars"], 
                    Quantity[5.1752*^10, "USDollars"], 
                    Quantity[5.782*^10, "USDollars"], 
                    Quantity[6.8255*^10, "USDollars"], 
                    Quantity[8.0821*^10, "USDollars"], 
                    Quantity[8.8408*^10, "USDollars"], 
                    Quantity[9.5008*^10, "USDollars"], 
                    Quantity[1.02374*^11, "USDollars"], 
                    Quantity[1.1427*^11, "USDollars"], 
                    Quantity[1.2294*^11, "USDollars"], 
                    Quantity[1.3141*^11, "USDollars"], 
                    Quantity[1.40035*^11, "USDollars"], 
                    Quantity[1.52689*^11, "USDollars"], 
                    Quantity[1.75515*^11, "USDollars"], 
                    Quantity[1.98095*^11, "USDollars"], 
                    Quantity[2.3155*^11, "USDollars"], 
                    Quantity[2.53821*^11, "USDollars"], 
                    Quantity[2.78887*^11, "USDollars"], 
                    Quantity[3.0306*^11, "USDollars"], 
                    Quantity[3.19788*^11, "USDollars"], 
                    Quantity[3.39514*^11, "USDollars"], 
                    Quantity[3.50341*^11, "USDollars"], 
                    Quantity[3.59429*^11, "USDollars"], 
                    Quantity[3.82311*^11, "USDollars"], 
                    Quantity[4.25885*^11, "USDollars"], 
                    Quantity[4.65326*^11, "USDollars"], 
                    Quantity[5.04922*^11, "USDollars"], 
                    Quantity[5.42982*^11, "USDollars"], 
                    Quantity[5.8139*^11, "USDollars"], 
                    Quantity[6.14274*^11, "USDollars"], 
                    Quantity[6.71982*^11, "USDollars"], 
                    Quantity[7.00442*^11, "USDollars"], 
                    Quantity[7.96267*^11, "USDollars"], 
                    Quantity[8.54059*^11, "USDollars"], 
                    Quantity[8.91247*^11, "USDollars"], 
                    Quantity[8.48056*^11, "USDollars"], 
                    Quantity[8.86291*^11, "USDollars"], 
                    Quantity[9.36012*^11, "USDollars"], 
                    Quantity[1.01295*^12, "USDollars"], 
                    Quantity[1.092946*^12, "USDollars"], 
                    Quantity[1.110867*^12, "USDollars"], 
                    Quantity[1.131418*^12, "USDollars"], 
                    Quantity[1.215288*^12, "USDollars"], 
                    Quantity[1.270995*^12, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[8, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Homeland Security", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[9, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Minimum increment: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[5.66*^8, "USDollars"], 
                    Quantity[6.42*^8, "USDollars"], 
                    Quantity[7.47*^8, "USDollars"], 
                    Quantity[7.74*^8, "USDollars"], 
                    Quantity[7.05*^8, "USDollars"], 
                    Quantity[7.82*^8, "USDollars"], 
                    Quantity[9.73*^8, "USDollars"], 
                    Quantity[1.055*^9, "USDollars"], 
                    Quantity[1.089*^9, "USDollars"], 
                    Quantity[1.011*^9, "USDollars"], 
                    Quantity[1.34*^9, "USDollars"], 
                    Quantity[1.833*^9, "USDollars"], 
                    Quantity[1.661*^9, "USDollars"], 
                    Quantity[2.099*^9, "USDollars"], 
                    Quantity[2.455*^9, "USDollars"], 
                    Quantity[2.755*^9, "USDollars"], 
                    Quantity[3.217*^9, "USDollars"], 
                    Quantity[3.415*^9, "USDollars"], 
                    Quantity[4.296*^9, "USDollars"], 
                    Quantity[3.943*^9, "USDollars"], 
                    Quantity[3.847*^9, "USDollars"], 
                    Quantity[4.689*^9, "USDollars"], 
                    Quantity[5.06*^9, "USDollars"], 
                    Quantity[5.007*^9, "USDollars"], 
                    Quantity[5.383*^9, "USDollars"], 
                    Quantity[5.383*^9, "USDollars"], 
                    Quantity[6.18*^9, "USDollars"], 
                    Quantity[5.671*^9, "USDollars"], 
                    Quantity[7.219*^9, "USDollars"], 
                    Quantity[6.654*^9, "USDollars"], 
                    Quantity[7.577*^9, "USDollars"], 
                    Quantity[9.653*^9, "USDollars"], 
                    Quantity[1.0708*^10, "USDollars"], 
                    Quantity[9.376*^9, "USDollars"], 
                    Quantity[9.692*^9, "USDollars"], 
                    Quantity[1.0533*^10, "USDollars"], 
                    Quantity[1.0617*^10, "USDollars"], 
                    Quantity[1.3321*^10, "USDollars"], 
                    Quantity[1.3159*^10, "USDollars"], 
                    Quantity[1.498*^10, "USDollars"], 
                    Quantity[1.757*^10, "USDollars"], 
                    Quantity[3.197*^10, "USDollars"], 
                    Quantity[2.6575*^10, "USDollars"], 
                    Quantity[3.8697*^10, "USDollars"], 
                    Quantity[6.9025*^10, "USDollars"], 
                    Quantity[3.9156*^10, "USDollars"], 
                    Quantity[4.0676*^10, "USDollars"], 
                    Quantity[5.1719*^10, "USDollars"], 
                    Quantity[4.4457*^10, "USDollars"], 
                    Quantity[4.5741*^10, "USDollars"], 
                    Quantity[4.7422*^10, "USDollars"], 
                    Quantity[5.7217*^10, "USDollars"], 
                    Quantity[4.3263*^10, "USDollars"], 
                    Quantity[4.5685*^10, "USDollars"], 
                    Quantity[4.6155*^10, "USDollars"], 
                    Quantity[4.6443*^10, "USDollars"], 
                    Quantity[4.5993*^10, "USDollars"], 
                    Quantity[4.3099*^10, "USDollars"], 
                    Quantity[4.114*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[9, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Housing and Urban Development", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[10, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[8.26*^8, "USDollars"], 
                    Quantity[-6.09*^8, "USDollars"], 
                    Quantity[7.3*^7, "USDollars"], 
                    Quantity[4.92*^8, "USDollars"], 
                    Quantity[2.482*^9, "USDollars"], 
                    Quantity[3.093*^9, "USDollars"], 
                    Quantity[3.727*^9, "USDollars"], 
                    Quantity[7.13*^8, "USDollars"], 
                    Quantity[2.432*^9, "USDollars"], 
                    Quantity[2.796*^9, "USDollars"], 
                    Quantity[3.6*^9, "USDollars"], 
                    Quantity[3.58*^9, "USDollars"], 
                    Quantity[4.781*^9, "USDollars"], 
                    Quantity[7.512*^9, "USDollars"], 
                    Quantity[7.026*^9, "USDollars"], 
                    Quantity[5.808*^9, "USDollars"], 
                    Quantity[7.65*^9, "USDollars"], 
                    Quantity[9.22*^9, "USDollars"], 
                    Quantity[1.2735*^10, "USDollars"], 
                    Quantity[1.488*^10, "USDollars"], 
                    Quantity[1.5232*^10, "USDollars"], 
                    Quantity[1.5814*^10, "USDollars"], 
                    Quantity[1.6663*^10, "USDollars"], 
                    Quantity[2.872*^10, "USDollars"], 
                    Quantity[1.4139*^10, "USDollars"], 
                    Quantity[1.5484*^10, "USDollars"], 
                    Quantity[1.8938*^10, "USDollars"], 
                    Quantity[1.968*^10, "USDollars"], 
                    Quantity[2.0167*^10, "USDollars"], 
                    Quantity[2.2751*^10, "USDollars"], 
                    Quantity[2.447*^10, "USDollars"], 
                    Quantity[2.5181*^10, "USDollars"], 
                    Quantity[2.5845*^10, "USDollars"], 
                    Quantity[2.9044*^10, "USDollars"], 
                    Quantity[2.5236*^10, "USDollars"], 
                    Quantity[2.7527*^10, "USDollars"], 
                    Quantity[3.0181*^10, "USDollars"], 
                    Quantity[3.2693*^10, "USDollars"], 
                    Quantity[3.0781*^10, "USDollars"], 
                    Quantity[3.3865*^10, "USDollars"], 
                    Quantity[3.1788*^10, "USDollars"], 
                    Quantity[3.741*^10, "USDollars"], 
                    Quantity[4.4984*^10, "USDollars"], 
                    Quantity[4.2453*^10, "USDollars"], 
                    Quantity[4.2435*^10, "USDollars"], 
                    Quantity[4.5561*^10, "USDollars"], 
                    Quantity[4.9088*^10, "USDollars"], 
                    Quantity[6.1019*^10, "USDollars"], 
                    Quantity[6.0141*^10, "USDollars"], 
                    Quantity[5.7004*^10, "USDollars"], 
                    Quantity[4.96*^10, "USDollars"], 
                    Quantity[5.6577*^10, "USDollars"], 
                    Quantity[3.8527*^10, "USDollars"], 
                    Quantity[4.239*^10, "USDollars"], 
                    Quantity[4.3896*^10, "USDollars"], 
                    Quantity[4.3574*^10, "USDollars"], 
                    Quantity[4.2981*^10, "USDollars"], 
                    Quantity[4.1983*^10, "USDollars"], 
                    Quantity[4.0642*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[10, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of the Interior", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[11, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[6.06*^8, "USDollars"], 
                    Quantity[7.3*^8, "USDollars"], 
                    Quantity[7.55*^8, "USDollars"], 
                    Quantity[7.45*^8, "USDollars"], 
                    Quantity[8.66*^8, "USDollars"], 
                    Quantity[8.63*^8, "USDollars"], 
                    Quantity[9.73*^8, "USDollars"], 
                    Quantity[1.073*^9, "USDollars"], 
                    Quantity[1.087*^9, "USDollars"], 
                    Quantity[1.345*^9, "USDollars"], 
                    Quantity[1.609*^9, "USDollars"], 
                    Quantity[1.78*^9, "USDollars"], 
                    Quantity[1.854*^9, "USDollars"], 
                    Quantity[2.221*^9, "USDollars"], 
                    Quantity[2.433*^9, "USDollars"], 
                    Quantity[3.22*^9, "USDollars"], 
                    Quantity[3.874*^9, "USDollars"], 
                    Quantity[4.168*^9, "USDollars"], 
                    Quantity[4.472*^9, "USDollars"], 
                    Quantity[4.456*^9, "USDollars"], 
                    Quantity[3.944*^9, "USDollars"], 
                    Quantity[4.552*^9, "USDollars"], 
                    Quantity[4.936*^9, "USDollars"], 
                    Quantity[4.804*^9, "USDollars"], 
                    Quantity[4.774*^9, "USDollars"], 
                    Quantity[5.037*^9, "USDollars"], 
                    Quantity[5.138*^9, "USDollars"], 
                    Quantity[5.194*^9, "USDollars"], 
                    Quantity[5.814*^9, "USDollars"], 
                    Quantity[6.082*^9, "USDollars"], 
                    Quantity[6.531*^9, "USDollars"], 
                    Quantity[6.879*^9, "USDollars"], 
                    Quantity[7.064*^9, "USDollars"], 
                    Quantity[7.479*^9, "USDollars"], 
                    Quantity[6.776*^9, "USDollars"], 
                    Quantity[6.763*^9, "USDollars"], 
                    Quantity[7.222*^9, "USDollars"], 
                    Quantity[7.783*^9, "USDollars"], 
                    Quantity[7.998*^9, "USDollars"], 
                    Quantity[7.743*^9, "USDollars"], 
                    Quantity[9.739*^9, "USDollars"], 
                    Quantity[9.193*^9, "USDollars"], 
                    Quantity[8.606*^9, "USDollars"], 
                    Quantity[9.292*^9, "USDollars"], 
                    Quantity[9.037*^9, "USDollars"], 
                    Quantity[1.0469*^10, "USDollars"], 
                    Quantity[9.817*^9, "USDollars"], 
                    Quantity[1.1775*^10, "USDollars"], 
                    Quantity[1.3164*^10, "USDollars"], 
                    Quantity[1.3519*^10, "USDollars"], 
                    Quantity[1.2891*^10, "USDollars"], 
                    Quantity[9.607*^9, "USDollars"], 
                    Quantity[1.1279*^10, "USDollars"], 
                    Quantity[1.3008*^10, "USDollars"], 
                    Quantity[1.4707*^10, "USDollars"], 
                    Quantity[1.5111*^10, "USDollars"], 
                    Quantity[1.6006*^10, "USDollars"], 
                    Quantity[1.5986*^10, "USDollars"], 
                    Quantity[1.5936*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[11, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Justice", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[12, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[2.36*^8, "USDollars"], 
                    Quantity[2.56*^8, "USDollars"], 
                    Quantity[2.75*^8, "USDollars"], 
                    Quantity[3.27*^8, "USDollars"], 
                    Quantity[3.05*^8, "USDollars"], 
                    Quantity[3.36*^8, "USDollars"], 
                    Quantity[3.59*^8, "USDollars"], 
                    Quantity[4.23*^8, "USDollars"], 
                    Quantity[5.37*^8, "USDollars"], 
                    Quantity[8.01*^8, "USDollars"], 
                    Quantity[1.053*^9, "USDollars"], 
                    Quantity[1.46*^9, "USDollars"], 
                    Quantity[1.728*^9, "USDollars"], 
                    Quantity[1.985*^9, "USDollars"], 
                    Quantity[2.14*^9, "USDollars"], 
                    Quantity[2.22*^9, "USDollars"], 
                    Quantity[2.248*^9, "USDollars"], 
                    Quantity[2.353*^9, "USDollars"], 
                    Quantity[2.438*^9, "USDollars"], 
                    Quantity[2.438*^9, "USDollars"], 
                    Quantity[2.325*^9, "USDollars"], 
                    Quantity[2.493*^9, "USDollars"], 
                    Quantity[2.816*^9, "USDollars"], 
                    Quantity[3.182*^9, "USDollars"], 
                    Quantity[3.336*^9, "USDollars"], 
                    Quantity[3.807*^9, "USDollars"], 
                    Quantity[4.656*^9, "USDollars"], 
                    Quantity[5.275*^9, "USDollars"], 
                    Quantity[5.886*^9, "USDollars"], 
                    Quantity[7.67*^9, "USDollars"], 
                    Quantity[9.208*^9, "USDollars"], 
                    Quantity[9.485*^9, "USDollars"], 
                    Quantity[9.369*^9, "USDollars"], 
                    Quantity[1.0149*^10, "USDollars"], 
                    Quantity[1.1049*^10, "USDollars"], 
                    Quantity[1.3076*^10, "USDollars"], 
                    Quantity[1.4045*^10, "USDollars"], 
                    Quantity[1.6181*^10, "USDollars"], 
                    Quantity[1.6846*^10, "USDollars"], 
                    Quantity[1.8443*^10, "USDollars"], 
                    Quantity[2.1178*^10, "USDollars"], 
                    Quantity[2.079*^10, "USDollars"], 
                    Quantity[2.9601*^10, "USDollars"], 
                    Quantity[2.2361*^10, "USDollars"], 
                    Quantity[2.3324*^10, "USDollars"], 
                    Quantity[2.3349*^10, "USDollars"], 
                    Quantity[2.6545*^10, "USDollars"], 
                    Quantity[2.7711*^10, "USDollars"], 
                    Quantity[2.9556*^10, "USDollars"], 
                    Quantity[3.0519*^10, "USDollars"], 
                    Quantity[3.1159*^10, "USDollars"], 
                    Quantity[2.9745*^10, "USDollars"], 
                    Quantity[2.862*^10, "USDollars"], 
                    Quantity[3.6087*^10, "USDollars"], 
                    Quantity[3.2463*^10, "USDollars"], 
                    Quantity[3.5333*^10, "USDollars"], 
                    Quantity[3.39*^10, "USDollars"], 
                    Quantity[3.4387*^10, "USDollars"], 
                    Quantity[3.6419*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[12, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Labor", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[13, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[3.914*^9, "USDollars"], 
                    Quantity[3.523*^9, "USDollars"], 
                    Quantity[3.454*^9, "USDollars"], 
                    Quantity[3.121*^9, "USDollars"], 
                    Quantity[3.239*^9, "USDollars"], 
                    Quantity[3.562*^9, "USDollars"], 
                    Quantity[4.18*^9, "USDollars"], 
                    Quantity[4.161*^9, "USDollars"], 
                    Quantity[4.976*^9, "USDollars"], 
                    Quantity[8.456*^9, "USDollars"], 
                    Quantity[1.0426*^10, "USDollars"], 
                    Quantity[9.561*^9, "USDollars"], 
                    Quantity[9.964*^9, "USDollars"], 
                    Quantity[1.8578*^10, "USDollars"], 
                    Quantity[2.6524*^10, "USDollars"], 
                    Quantity[2.3225*^10, "USDollars"], 
                    Quantity[2.3694*^10, "USDollars"], 
                    Quantity[2.3448*^10, "USDollars"], 
                    Quantity[3.0542*^10, "USDollars"], 
                    Quantity[3.0911*^10, "USDollars"], 
                    Quantity[3.1479*^10, "USDollars"], 
                    Quantity[3.8683*^10, "USDollars"], 
                    Quantity[2.5348*^10, "USDollars"], 
                    Quantity[2.4738*^10, "USDollars"], 
                    Quantity[2.4934*^10, "USDollars"], 
                    Quantity[2.4208*^10, "USDollars"], 
                    Quantity[2.2662*^10, "USDollars"], 
                    Quantity[2.3442*^10, "USDollars"], 
                    Quantity[2.6087*^10, "USDollars"], 
                    Quantity[3.479*^10, "USDollars"], 
                    Quantity[4.7889*^10, "USDollars"], 
                    Quantity[4.5452*^10, "USDollars"], 
                    Quantity[3.7819*^10, "USDollars"], 
                    Quantity[3.2808*^10, "USDollars"], 
                    Quantity[3.3163*^10, "USDollars"], 
                    Quantity[3.1088*^10, "USDollars"], 
                    Quantity[3.058*^10, "USDollars"], 
                    Quantity[3.2995*^10, "USDollars"], 
                    Quantity[3.1873*^10, "USDollars"], 
                    Quantity[3.9707*^10, "USDollars"], 
                    Quantity[6.4686*^10, "USDollars"], 
                    Quantity[6.9563*^10, "USDollars"], 
                    Quantity[5.6687*^10, "USDollars"], 
                    Quantity[4.6949*^10, "USDollars"], 
                    Quantity[4.3138*^10, "USDollars"], 
                    Quantity[4.7544*^10, "USDollars"], 
                    Quantity[5.8838*^10, "USDollars"], 
                    Quantity[1.38157*^11, "USDollars"], 
                    Quantity[1.73053*^11, "USDollars"], 
                    Quantity[1.31975*^11, "USDollars"], 
                    Quantity[1.04588*^11, "USDollars"], 
                    Quantity[8.0307*^10, "USDollars"], 
                    Quantity[5.6774*^10, "USDollars"], 
                    Quantity[5.2797*^10, "USDollars"], 
                    Quantity[5.6921*^10, "USDollars"], 
                    Quantity[5.7997*^10, "USDollars"], 
                    Quantity[5.6094*^10, "USDollars"], 
                    Quantity[5.9006*^10, "USDollars"], 
                    Quantity[6.0458*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[13, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of State", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[14, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[4.57*^8, "USDollars"], 
                    Quantity[5.72*^8, "USDollars"], 
                    Quantity[4.55*^8, "USDollars"], 
                    Quantity[5.52*^8, "USDollars"], 
                    Quantity[6.29*^8, "USDollars"], 
                    Quantity[6.55*^8, "USDollars"], 
                    Quantity[6.45*^8, "USDollars"], 
                    Quantity[6.31*^8, "USDollars"], 
                    Quantity[6.61*^8, "USDollars"], 
                    Quantity[6.8*^8, "USDollars"], 
                    Quantity[7.47*^8, "USDollars"], 
                    Quantity[8.07*^8, "USDollars"], 
                    Quantity[9.55*^8, "USDollars"], 
                    Quantity[1.075*^9, "USDollars"], 
                    Quantity[1.393*^9, "USDollars"], 
                    Quantity[1.449*^9, "USDollars"], 
                    Quantity[1.658*^9, "USDollars"], 
                    Quantity[1.987*^9, "USDollars"], 
                    Quantity[2.382*^9, "USDollars"], 
                    Quantity[2.347*^9, "USDollars"], 
                    Quantity[2.684*^9, "USDollars"], 
                    Quantity[2.793*^9, "USDollars"], 
                    Quantity[2.982*^9, "USDollars"], 
                    Quantity[3.303*^9, "USDollars"], 
                    Quantity[3.59*^9, "USDollars"], 
                    Quantity[3.572*^9, "USDollars"], 
                    Quantity[4.217*^9, "USDollars"], 
                    Quantity[4.576*^9, "USDollars"], 
                    Quantity[4.796*^9, "USDollars"], 
                    Quantity[5.149*^9, "USDollars"], 
                    Quantity[5.927*^9, "USDollars"], 
                    Quantity[6.385*^9, "USDollars"], 
                    Quantity[6.784*^9, "USDollars"], 
                    Quantity[6.263*^9, "USDollars"], 
                    Quantity[5.73*^9, "USDollars"], 
                    Quantity[6.029*^9, "USDollars"], 
                    Quantity[5.396*^9, "USDollars"], 
                    Quantity[6.554*^9, "USDollars"], 
                    Quantity[6.687*^9, "USDollars"], 
                    Quantity[7.487*^9, "USDollars"], 
                    Quantity[9.327*^9, "USDollars"], 
                    Quantity[9.343*^9, "USDollars"], 
                    Quantity[1.0915*^10, "USDollars"], 
                    Quantity[1.2748*^10, "USDollars"], 
                    Quantity[1.2953*^10, "USDollars"], 
                    Quantity[1.3737*^10, "USDollars"], 
                    Quantity[1.7493*^10, "USDollars"], 
                    Quantity[2.1427*^10, "USDollars"], 
                    Quantity[2.3802*^10, "USDollars"], 
                    Quantity[2.4354*^10, "USDollars"], 
                    Quantity[2.6947*^10, "USDollars"], 
                    Quantity[2.5972*^10, "USDollars"], 
                    Quantity[2.7483*^10, "USDollars"], 
                    Quantity[3.0521*^10, "USDollars"], 
                    Quantity[3.0189*^10, "USDollars"], 
                    Quantity[3.0567*^10, "USDollars"], 
                    Quantity[2.8935*^10, "USDollars"], 
                    Quantity[2.877*^10, "USDollars"], 
                    Quantity[2.8528*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[14, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Transportation", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[15, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[3.854*^9, "USDollars"], 
                    Quantity[4.145*^9, "USDollars"], 
                    Quantity[4.736*^9, "USDollars"], 
                    Quantity[5.201*^9, "USDollars"], 
                    Quantity[5.145*^9, "USDollars"], 
                    Quantity[5.242*^9, "USDollars"], 
                    Quantity[5.555*^9, "USDollars"], 
                    Quantity[5.724*^9, "USDollars"], 
                    Quantity[6.136*^9, "USDollars"], 
                    Quantity[7.039*^9, "USDollars"], 
                    Quantity[7.244*^9, "USDollars"], 
                    Quantity[7.834*^9, "USDollars"], 
                    Quantity[7.724*^9, "USDollars"], 
                    Quantity[9.144*^9, "USDollars"], 
                    Quantity[1.1709*^10, "USDollars"], 
                    Quantity[1.1978*^10, "USDollars"], 
                    Quantity[1.2791*^10, "USDollars"], 
                    Quantity[1.4642*^10, "USDollars"], 
                    Quantity[1.8166*^10, "USDollars"], 
                    Quantity[2.0922*^10, "USDollars"], 
                    Quantity[1.7931*^10, "USDollars"], 
                    Quantity[1.8239*^10, "USDollars"], 
                    Quantity[2.0507*^10, "USDollars"], 
                    Quantity[2.251*^10, "USDollars"], 
                    Quantity[2.4885*^10, "USDollars"], 
                    Quantity[2.2851*^10, "USDollars"], 
                    Quantity[2.3698*^10, "USDollars"], 
                    Quantity[2.3828*^10, "USDollars"], 
                    Quantity[2.5642*^10, "USDollars"], 
                    Quantity[2.7237*^10, "USDollars"], 
                    Quantity[2.9098*^10, "USDollars"], 
                    Quantity[3.0958*^10, "USDollars"], 
                    Quantity[3.3563*^10, "USDollars"], 
                    Quantity[3.5132*^10, "USDollars"], 
                    Quantity[3.5144*^10, "USDollars"], 
                    Quantity[3.6072*^10, "USDollars"], 
                    Quantity[3.5554*^10, "USDollars"], 
                    Quantity[3.7672*^10, "USDollars"], 
                    Quantity[4.1555*^10, "USDollars"], 
                    Quantity[4.9231*^10, "USDollars"], 
                    Quantity[5.6252*^10, "USDollars"], 
                    Quantity[5.0764*^10, "USDollars"], 
                    Quantity[5.4879*^10, "USDollars"], 
                    Quantity[5.6596*^10, "USDollars"], 
                    Quantity[6.0139*^10, "USDollars"], 
                    Quantity[6.1697*^10, "USDollars"], 
                    Quantity[6.4944*^10, "USDollars"], 
                    Quantity[7.3004*^10, "USDollars"], 
                    Quantity[7.775*^10, "USDollars"], 
                    Quantity[7.7302*^10, "USDollars"], 
                    Quantity[7.5149*^10, "USDollars"], 
                    Quantity[7.6322*^10, "USDollars"], 
                    Quantity[7.6174*^10, "USDollars"], 
                    Quantity[8.0208*^10, "USDollars"], 
                    Quantity[8.3932*^10, "USDollars"], 
                    Quantity[9.0187*^10, "USDollars"], 
                    Quantity[9.4047*^10, "USDollars"], 
                    Quantity[9.5293*^10, "USDollars"], 
                    Quantity[9.6815*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[15, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of the Treasury", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[16, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[8.474*^9, "USDollars"], 
                    Quantity[9.553*^9, "USDollars"], 
                    Quantity[1.0289*^10, "USDollars"], 
                    Quantity[1.0791*^10, "USDollars"], 
                    Quantity[1.1761*^10, "USDollars"], 
                    Quantity[1.2737*^10, "USDollars"], 
                    Quantity[1.429*^10, "USDollars"], 
                    Quantity[1.6473*^10, "USDollars"], 
                    Quantity[1.907*^10, "USDollars"], 
                    Quantity[2.0452*^10, "USDollars"], 
                    Quantity[2.1539*^10, "USDollars"], 
                    Quantity[3.0201*^10, "USDollars"], 
                    Quantity[3.5369*^10, "USDollars"], 
                    Quantity[4.1843*^10, "USDollars"], 
                    Quantity[4.3407*^10, "USDollars"], 
                    Quantity[4.8061*^10, "USDollars"], 
                    Quantity[5.401*^10, "USDollars"], 
                    Quantity[6.383*^10, "USDollars"], 
                    Quantity[7.5451*^10, "USDollars"], 
                    Quantity[9.1691*^10, "USDollars"], 
                    Quantity[1.09418*^11, "USDollars"], 
                    Quantity[1.15366*^11, "USDollars"], 
                    Quantity[1.39911*^11, "USDollars"], 
                    Quantity[1.63688*^11, "USDollars"], 
                    Quantity[1.78076*^11, "USDollars"], 
                    Quantity[1.78684*^11, "USDollars"], 
                    Quantity[2.00406*^11, "USDollars"], 
                    Quantity[2.29334*^11, "USDollars"], 
                    Quantity[2.53915*^11, "USDollars"], 
                    Quantity[2.74606*^11, "USDollars"], 
                    Quantity[2.91005*^11, "USDollars"], 
                    Quantity[2.96825*^11, "USDollars"], 
                    Quantity[3.0555*^11, "USDollars"], 
                    Quantity[3.46875*^11, "USDollars"], 
                    Quantity[3.62862*^11, "USDollars"], 
                    Quantity[3.77491*^11, "USDollars"], 
                    Quantity[3.89005*^11, "USDollars"], 
                    Quantity[3.85045*^11, "USDollars"], 
                    Quantity[3.90524*^11, "USDollars"], 
                    Quantity[3.88268*^11, "USDollars"], 
                    Quantity[3.71187*^11, "USDollars"], 
                    Quantity[3.68256*^11, "USDollars"], 
                    Quantity[3.75844*^11, "USDollars"], 
                    Quantity[4.1024*^11, "USDollars"], 
                    Quantity[4.64675*^11, "USDollars"], 
                    Quantity[4.90589*^11, "USDollars"], 
                    Quantity[5.48797*^11, "USDollars"], 
                    Quantity[7.01775*^11, "USDollars"], 
                    Quantity[4.44338*^11, "USDollars"], 
                    Quantity[5.38707*^11, "USDollars"], 
                    Quantity[4.64714*^11, "USDollars"], 
                    Quantity[3.99068*^11, "USDollars"], 
                    Quantity[4.46897*^11, "USDollars"], 
                    Quantity[5.06375*^11, "USDollars"], 
                    Quantity[5.80379*^11, "USDollars"], 
                    Quantity[6.76958*^11, "USDollars"], 
                    Quantity[7.61724*^11, "USDollars"], 
                    Quantity[8.44885*^11, "USDollars"], 
                    Quantity[9.21121*^11, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[16, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Department of Veterans Affairs", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[17, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[5.608*^9, "USDollars"], 
                    Quantity[5.501*^9, "USDollars"], 
                    Quantity[5.662*^9, "USDollars"], 
                    Quantity[5.71*^9, "USDollars"], 
                    Quantity[5.962*^9, "USDollars"], 
                    Quantity[6.691*^9, "USDollars"], 
                    Quantity[7.018*^9, "USDollars"], 
                    Quantity[7.67*^9, "USDollars"], 
                    Quantity[8.652*^9, "USDollars"], 
                    Quantity[9.758*^9, "USDollars"], 
                    Quantity[1.0713*^10, "USDollars"], 
                    Quantity[1.197*^10, "USDollars"], 
                    Quantity[1.3339*^10, "USDollars"], 
                    Quantity[1.6577*^10, "USDollars"], 
                    Quantity[1.8416*^10, "USDollars"], 
                    Quantity[1.802*^10, "USDollars"], 
                    Quantity[1.8965*^10, "USDollars"], 
                    Quantity[1.9891*^10, "USDollars"], 
                    Quantity[2.1137*^10, "USDollars"], 
                    Quantity[2.2907*^10, "USDollars"], 
                    Quantity[2.3941*^10, "USDollars"], 
                    Quantity[2.4827*^10, "USDollars"], 
                    Quantity[2.558*^10, "USDollars"], 
                    Quantity[2.6322*^10, "USDollars"], 
                    Quantity[2.6523*^10, "USDollars"], 
                    Quantity[2.6932*^10, "USDollars"], 
                    Quantity[2.9253*^10, "USDollars"], 
                    Quantity[3.0014*^10, "USDollars"], 
                    Quantity[2.8976*^10, "USDollars"], 
                    Quantity[3.1191*^10, "USDollars"], 
                    Quantity[3.3872*^10, "USDollars"], 
                    Quantity[3.5461*^10, "USDollars"], 
                    Quantity[3.7377*^10, "USDollars"], 
                    Quantity[3.7748*^10, "USDollars"], 
                    Quantity[3.6896*^10, "USDollars"], 
                    Quantity[3.9253*^10, "USDollars"], 
                    Quantity[4.1724*^10, "USDollars"], 
                    Quantity[4.3125*^10, "USDollars"], 
                    Quantity[4.7044*^10, "USDollars"], 
                    Quantity[4.5012*^10, "USDollars"], 
                    Quantity[5.0868*^10, "USDollars"], 
                    Quantity[5.6921*^10, "USDollars"], 
                    Quantity[5.9554*^10, "USDollars"], 
                    Quantity[6.9815*^10, "USDollars"], 
                    Quantity[6.9777*^10, "USDollars"], 
                    Quantity[7.2792*^10, "USDollars"], 
                    Quantity[8.4749*^10, "USDollars"], 
                    Quantity[9.5457*^10, "USDollars"], 
                    Quantity[1.08274*^11, "USDollars"], 
                    Quantity[1.26918*^11, "USDollars"], 
                    Quantity[1.24124*^11, "USDollars"], 
                    Quantity[1.38464*^11, "USDollars"], 
                    Quantity[1.49074*^11, "USDollars"], 
                    Quantity[1.60797*^11, "USDollars"], 
                    Quantity[1.79869*^11, "USDollars"], 
                    Quantity[1.80868*^11, "USDollars"], 
                    Quantity[1.77875*^11, "USDollars"], 
                    Quantity[1.92701*^11, "USDollars"], 
                    Quantity[2.01047*^11, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[17, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Corps of Engineers--Civil Works", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[18, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[9.44*^8, "USDollars"], 
                    Quantity[1.065*^9, "USDollars"], 
                    Quantity[1.091*^9, "USDollars"], 
                    Quantity[1.171*^9, "USDollars"], 
                    Quantity[1.245*^9, "USDollars"], 
                    Quantity[1.273*^9, "USDollars"], 
                    Quantity[1.252*^9, "USDollars"], 
                    Quantity[1.222*^9, "USDollars"], 
                    Quantity[1.168*^9, "USDollars"], 
                    Quantity[1.337*^9, "USDollars"], 
                    Quantity[1.49*^9, "USDollars"], 
                    Quantity[1.676*^9, "USDollars"], 
                    Quantity[1.664*^9, "USDollars"], 
                    Quantity[2.031*^9, "USDollars"], 
                    Quantity[2.112*^9, "USDollars"], 
                    Quantity[2.271*^9, "USDollars"], 
                    Quantity[2.564*^9, "USDollars"], 
                    Quantity[2.898*^9, "USDollars"], 
                    Quantity[3.218*^9, "USDollars"], 
                    Quantity[3.139*^9, "USDollars"], 
                    Quantity[2.962*^9, "USDollars"], 
                    Quantity[2.918*^9, "USDollars"], 
                    Quantity[3.036*^9, "USDollars"], 
                    Quantity[2.998*^9, "USDollars"], 
                    Quantity[2.806*^9, "USDollars"], 
                    Quantity[2.757*^9, "USDollars"], 
                    Quantity[3.028*^9, "USDollars"], 
                    Quantity[3.256*^9, "USDollars"], 
                    Quantity[3.324*^9, "USDollars"], 
                    Quantity[3.341*^9, "USDollars"], 
                    Quantity[3.565*^9, "USDollars"], 
                    Quantity[3.354*^9, "USDollars"], 
                    Quantity[3.483*^9, "USDollars"], 
                    Quantity[3.745*^9, "USDollars"], 
                    Quantity[3.627*^9, "USDollars"], 
                    Quantity[3.598*^9, "USDollars"], 
                    Quantity[3.775*^9, "USDollars"], 
                    Quantity[3.934*^9, "USDollars"], 
                    Quantity[4.229*^9, "USDollars"], 
                    Quantity[4.64*^9, "USDollars"], 
                    Quantity[4.727*^9, "USDollars"], 
                    Quantity[4.682*^9, "USDollars"], 
                    Quantity[4.728*^9, "USDollars"], 
                    Quantity[4.719*^9, "USDollars"], 
                    Quantity[6.944*^9, "USDollars"], 
                    Quantity[3.918*^9, "USDollars"], 
                    Quantity[5.075*^9, "USDollars"], 
                    Quantity[6.842*^9, "USDollars"], 
                    Quantity[9.876*^9, "USDollars"], 
                    Quantity[1.0138*^10, "USDollars"], 
                    Quantity[7.777*^9, "USDollars"], 
                    Quantity[6.299*^9, "USDollars"], 
                    Quantity[6.535*^9, "USDollars"], 
                    Quantity[7.463*^9, "USDollars"], 
                    Quantity[7.595*^9, "USDollars"], 
                    Quantity[6.731*^9, "USDollars"], 
                    Quantity[6.561*^9, "USDollars"], 
                    Quantity[6.34*^9, "USDollars"], 
                    Quantity[6.208*^9, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[18, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Other Defense Civil Programs", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[19, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[9.56*^8, "USDollars"], 
                    Quantity[1.077*^9, "USDollars"], 
                    Quantity[1.287*^9, "USDollars"], 
                    Quantity[1.465*^9, "USDollars"], 
                    Quantity[1.681*^9, "USDollars"], 
                    Quantity[1.937*^9, "USDollars"], 
                    Quantity[2.206*^9, "USDollars"], 
                    Quantity[2.557*^9, "USDollars"], 
                    Quantity[2.974*^9, "USDollars"], 
                    Quantity[3.51*^9, "USDollars"], 
                    Quantity[4.002*^9, "USDollars"], 
                    Quantity[4.505*^9, "USDollars"], 
                    Quantity[5.216*^9, "USDollars"], 
                    Quantity[6.319*^9, "USDollars"], 
                    Quantity[7.358*^9, "USDollars"], 
                    Quantity[8.251*^9, "USDollars"], 
                    Quantity[9.203*^9, "USDollars"], 
                    Quantity[1.0315*^10, "USDollars"], 
                    Quantity[1.1961*^10, "USDollars"], 
                    Quantity[1.3788*^10, "USDollars"], 
                    Quantity[1.4997*^10, "USDollars"], 
                    Quantity[1.6004*^10, "USDollars"], 
                    Quantity[1.6536*^10, "USDollars"], 
                    Quantity[1.5809*^10, "USDollars"], 
                    Quantity[1.7483*^10, "USDollars"], 
                    Quantity[1.7962*^10, "USDollars"], 
                    Quantity[1.9039*^10, "USDollars"], 
                    Quantity[2.023*^10, "USDollars"], 
                    Quantity[2.169*^10, "USDollars"], 
                    Quantity[2.3238*^10, "USDollars"], 
                    Quantity[2.4746*^10, "USDollars"], 
                    Quantity[2.5957*^10, "USDollars"], 
                    Quantity[2.6969*^10, "USDollars"], 
                    Quantity[2.7972*^10, "USDollars"], 
                    Quantity[2.8947*^10, "USDollars"], 
                    Quantity[3.0279*^10, "USDollars"], 
                    Quantity[3.1204*^10, "USDollars"], 
                    Quantity[3.1987*^10, "USDollars"], 
                    Quantity[3.2801*^10, "USDollars"], 
                    Quantity[3.4131*^10, "USDollars"], 
                    Quantity[3.5136*^10, "USDollars"], 
                    Quantity[3.9874*^10, "USDollars"], 
                    Quantity[4.1726*^10, "USDollars"], 
                    Quantity[4.3481*^10, "USDollars"], 
                    Quantity[4.4435*^10, "USDollars"], 
                    Quantity[4.7112*^10, "USDollars"], 
                    Quantity[4.5785*^10, "USDollars"], 
                    Quantity[5.7276*^10, "USDollars"], 
                    Quantity[5.4032*^10, "USDollars"], 
                    Quantity[5.4775*^10, "USDollars"], 
                    Quantity[7.7313*^10, "USDollars"], 
                    Quantity[5.6811*^10, "USDollars"], 
                    Quantity[5.737*^10, "USDollars"], 
                    Quantity[5.9725*^10, "USDollars"], 
                    Quantity[6.3757*^10, "USDollars"], 
                    Quantity[6.146*^10, "USDollars"], 
                    Quantity[5.9701*^10, "USDollars"], 
                    Quantity[6.5946*^10, "USDollars"], 
                    Quantity[6.7366*^10, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[19, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Environmental Protection Agency", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[20, 
                   Key["Department or other unit"]]], "Mouse"], 
                ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["TimeSeries", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{}, {{}, {}, {
                    GrayLevel[0.5], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.5], 
                    StyleBox[
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}},
                     AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])]}, 
                    LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None}, 
                    PlotRange -> {{0., 50.}, {-7.030970816185017, 
                    4.273359296964368}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{1, 1}, {1, 1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1962\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2020\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["59", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Year\""}], "}"}], "SummaryItem"]}]}, {
                    TagBox["\"\"", "SummaryItem"], 
                    RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TemporalData[TimeSeries, {{{
                    Quantity[7.*^7, "USDollars"], 
                    Quantity[8.7*^7, "USDollars"], 
                    Quantity[1.17*^8, "USDollars"], 
                    Quantity[1.34*^8, "USDollars"], 
                    Quantity[1.58*^8, "USDollars"], 
                    Quantity[1.9*^8, "USDollars"], 
                    Quantity[2.49*^8, "USDollars"], 
                    Quantity[3.03*^8, "USDollars"], 
                    Quantity[3.84*^8, "USDollars"], 
                    Quantity[7.01*^8, "USDollars"], 
                    Quantity[7.63*^8, "USDollars"], 
                    Quantity[1.114*^9, "USDollars"], 
                    Quantity[2.03*^9, "USDollars"], 
                    Quantity[2.531*^9, "USDollars"], 
                    Quantity[3.118*^9, "USDollars"], 
                    Quantity[4.365*^9, "USDollars"], 
                    Quantity[4.072*^9, "USDollars"], 
                    Quantity[4.8*^9, "USDollars"], 
                    Quantity[5.603*^9, "USDollars"], 
                    Quantity[5.242*^9, "USDollars"], 
                    Quantity[5.081*^9, "USDollars"], 
                    Quantity[4.312*^9, "USDollars"], 
                    Quantity[4.076*^9, "USDollars"], 
                    Quantity[4.49*^9, "USDollars"], 
                    Quantity[4.867*^9, "USDollars"], 
                    Quantity[4.904*^9, "USDollars"], 
                    Quantity[4.871*^9, "USDollars"], 
                    Quantity[4.906*^9, "USDollars"], 
                    Quantity[5.108*^9, "USDollars"], 
                    Quantity[5.769*^9, "USDollars"], 
                    Quantity[5.95*^9, "USDollars"], 
                    Quantity[5.93*^9, "USDollars"], 
                    Quantity[5.855*^9, "USDollars"], 
                    Quantity[6.351*^9, "USDollars"], 
                    Quantity[6.046*^9, "USDollars"], 
                    Quantity[6.164*^9, "USDollars"], 
                    Quantity[6.269*^9, "USDollars"], 
                    Quantity[6.733*^9, "USDollars"], 
                    Quantity[7.223*^9, "USDollars"], 
                    Quantity[7.367*^9, "USDollars"], 
                    Quantity[7.451*^9, "USDollars"], 
                    Quantity[8.041*^9, "USDollars"], 
                    Quantity[8.328*^9, "USDollars"], 
                    Quantity[7.913*^9, "USDollars"], 
                    Quantity[8.321*^9, "USDollars"], 
                    Quantity[8.259*^9, "USDollars"], 
                    Quantity[7.939*^9, "USDollars"], 
                    Quantity[8.07*^9, "USDollars"], 
                    Quantity[1.1007*^10, "USDollars"], 
                    Quantity[1.0772*^10, "USDollars"], 
                    Quantity[1.2796*^10, "USDollars"], 
                    Quantity[9.484*^9, "USDollars"], 
                    Quantity[9.399*^9, "USDollars"], 
                    Quantity[8.325*^9, "USDollars"], 
                    Quantity[8.627*^9, "USDollars"], 
                    Quantity[9.745*^9, "USDollars"], 
                    Quantity[9.268*^9, "USDollars"], 
                    Quantity[8.528*^9, "USDollars"], 
                    Quantity[8.796*^9, "USDollars"]}}, {
                    
                    TemporalData`DateSpecification[{1962, 1, 1, 0, 0, 0.}, {
                    2020, 1, 1, 0, 0, 0.}, {1, "Year"}]}, 1, {
                    "Continuous", 1}, {"Discrete", 1}, 1, {
                    ValueDimensions -> 1, DateFunction -> Automatic, 
                    ResamplingMethod -> {
                    "Interpolation", InterpolationOrder -> 1}}}, True, 10.2], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
                  GeneralUtilities`Slice[20, 
                   Key["Budget"]]], "Mouse"], 
                ImageSize -> {{160, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    36 (-20), {1, 36 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 36 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    36, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 36 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    36 20, {1, 36 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    36 (-20), {1, 36 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 36 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    36, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 36 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    36 20, {1, 36 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007280225},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007280225},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007280225},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007280225},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007280225},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007280225][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007280225]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007280225][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {871., {647., 654.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.779742998110021*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"e89b4431-810a-49f0-97bf-6234f491985b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"TakeLargestBy", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"#", ",", "\"\<AircraftCarriers\>\""}], "]"}]}], "}"}], 
       "&"}], ",", "\[IndentingNewLine]", 
      RowBox[{"CountryData", "[", "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
    "Last", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7797433043045464`*^9, 3.779743353912058*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"e69e63e2-1a7b-4d11-8394-46415aecae8d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.779743260080374*^9, 
  3.779743292719151*^9}},ExpressionUUID->"bbb61e4c-face-449f-865e-\
86408880bddc"]
},
WindowSize->{800, 547},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.2 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 225, 3, 38, "Input",ExpressionUUID->"8f24eca8-6cb0-467c-b99d-a93684694389"],
Cell[808, 27, 5696, 119, 76, "Output",ExpressionUUID->"f52bab63-5b62-4c76-a311-88f2b734f468"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6541, 151, 254, 4, 38, "Input",ExpressionUUID->"01b9fde2-c90c-4501-a5f8-91ddb66f57f9"],
Cell[6798, 157, 326, 6, 53, "Output",ExpressionUUID->"93f49464-02d2-4796-900f-1e7f8bfd0b62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7161, 168, 396, 7, 49, "Input",ExpressionUUID->"a81051c3-039d-4181-a810-88af01dbeb7c"],
Cell[7560, 177, 64183, 1311, 695, "Output",ExpressionUUID->"c48c44fb-012a-4116-8f93-d7d06ba2cec1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71780, 1493, 739, 18, 166, "Input",ExpressionUUID->"36fdebcb-9f6a-4162-a803-e001f7bfbaae"],
Cell[72522, 1513, 360, 9, 47, "Message",ExpressionUUID->"62d7ed4e-3049-4124-9f71-dbf5a1f77d75"],
Cell[72885, 1524, 307, 8, 27, "Message",ExpressionUUID->"1e4c4083-ac1f-4d8a-8b51-37e9dc318f79"],
Cell[73195, 1534, 174793, 3328, 3050, "Output",ExpressionUUID->"89add1ac-1e19-4da8-9e48-9c9d1ee07fa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248025, 4867, 1431, 34, 382, "Input",ExpressionUUID->"5b9836e3-93e9-4f41-b6b7-2a72b6ca4dcf"],
Cell[249459, 4903, 9550, 187, 571, "Output",ExpressionUUID->"4dfcabfb-d1e9-48a6-a298-97263f54a0ab"]
}, Open  ]],
Cell[259024, 5093, 1411, 35, 382, "Input",ExpressionUUID->"8c8c9650-c2c9-430b-94e2-35cdb65cdfd2"],
Cell[CellGroupData[{
Cell[260460, 5132, 248, 5, 38, "Input",ExpressionUUID->"c663d87c-73a9-40d9-bd71-417b01675c83"],
Cell[260711, 5139, 200, 4, 42, "Output",ExpressionUUID->"365b6ce2-ce9c-459e-bc5c-d023b2b29d3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260948, 5148, 285, 6, 38, "Input",ExpressionUUID->"c6081c51-bcc8-4ab8-b0d1-0270efda7e55"],
Cell[261236, 5156, 154, 2, 42, "Output",ExpressionUUID->"6b56e646-68ae-4b5a-8e9c-016f17150849"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261427, 5163, 1673, 37, 456, "Input",ExpressionUUID->"59cc8014-ff75-4407-95d0-1b5589c0c8d2"],
Cell[263103, 5202, 416, 10, 28, "Message",ExpressionUUID->"00e29c17-e122-4005-a162-c68c08647ce0"],
Cell[263522, 5214, 421, 10, 28, "Message",ExpressionUUID->"e06981ce-f18a-4a37-ba27-3f5ac5a040f0"],
Cell[263946, 5226, 416, 10, 28, "Message",ExpressionUUID->"7e3a50ea-06fc-4f64-b8eb-bbf920426c21"],
Cell[264365, 5238, 498, 11, 28, "Message",ExpressionUUID->"c2e3948a-5c7f-40b2-8e53-4eafdf9c9e5e"],
Cell[264866, 5251, 451, 11, 28, "Message",ExpressionUUID->"3b9abc4b-1437-43be-8c4b-48da0b4dee2b"],
Cell[265320, 5264, 327, 7, 42, "Output",ExpressionUUID->"42471c1c-ec6f-49e5-85e2-a19e612565a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265684, 5276, 269, 5, 38, "Input",ExpressionUUID->"114d642d-262b-4916-8fac-af20ebc9e9e7"],
Cell[265956, 5283, 152, 2, 42, "Output",ExpressionUUID->"5bb405d8-c67d-4af7-a2af-75a43071b6de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266145, 5290, 891, 20, 151, "Input",ExpressionUUID->"378227a5-05f6-464a-80c7-5779a385a9d6"],
Cell[267039, 5312, 608, 16, 223, "Output",ExpressionUUID->"7c649f59-0929-490b-afba-37288ac7ae08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267684, 5333, 915, 20, 151, "Input",ExpressionUUID->"2ef8945a-4ce8-46db-a018-cacc87f5d7d1"],
Cell[268602, 5355, 641, 17, 246, "Output",ExpressionUUID->"e0ec2dd6-e70d-433c-86b6-57c6213d90d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269280, 5377, 634, 15, 151, "Input",ExpressionUUID->"c4e57961-1307-440f-90f8-2062c6a316b0"],
Cell[269917, 5394, 63487, 1399, 9229, "Output",ExpressionUUID->"e0611e5c-c381-436d-96e3-ecd3dd95f786"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333441, 6798, 318, 5, 38, "Input",ExpressionUUID->"10229efa-d33c-429f-874d-9dd1f84cdd2e"],
Cell[333762, 6805, 1551, 24, 99, "Output",ExpressionUUID->"01a13773-0d7c-4ce8-a8be-f57756e5f43a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335350, 6834, 525, 9, 49, "Input",ExpressionUUID->"379c9fde-be54-4675-ba7e-b5f540d75497"],
Cell[335878, 6845, 502, 9, 53, "Output",ExpressionUUID->"a61d332e-cb26-4be0-a1b5-d20cf9d1afe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336417, 6859, 1020, 23, 50, "Input",ExpressionUUID->"55ca968c-6609-433e-9824-c1b7b266fa17"],
Cell[337440, 6884, 1250, 26, 54, "Output",ExpressionUUID->"eff08a1f-eaa6-43aa-8071-aa407b108fa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338727, 6915, 1489, 31, 230, "Input",ExpressionUUID->"db10d8be-0a12-4899-8755-05f433ab30bf"],
Cell[340219, 6948, 394, 9, 28, "Message",ExpressionUUID->"94994555-a953-486d-9757-e9c0585a1e44"],
Cell[340616, 6959, 1392, 37, 326, "Output",ExpressionUUID->"dc99b94c-4285-4969-90ea-0ad95cd7d80a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342045, 7001, 1091, 23, 78, "Input",ExpressionUUID->"3f1f3105-2b9c-4271-b690-4382e99219d5"],
Cell[343139, 7026, 3880, 94, 54, "Output",ExpressionUUID->"a5c37b1b-5f90-47ee-8b3e-add8f551077f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347056, 7125, 477, 11, 49, "Input",ExpressionUUID->"ce8bb573-924f-4096-a95e-af6957c44cd5"],
Cell[347536, 7138, 499, 11, 53, "Output",ExpressionUUID->"206a3342-2921-4ae5-a9eb-0389c5b56c6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348072, 7154, 574, 12, 49, "Input",ExpressionUUID->"5cf655f0-682f-4108-a6c5-3b888eeb416c"],
Cell[348649, 7168, 70018, 1454, 705, "Output",ExpressionUUID->"85fd87b6-e5cf-4b69-b0ec-f245950d00a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418704, 8627, 575, 12, 49, "Input",ExpressionUUID->"0f71f3e3-d85e-4c53-8d9b-d9385d64466c"],
Cell[419282, 8641, 220, 4, 46, "Output",ExpressionUUID->"121aaa3b-bb9e-4756-aa98-1c69ea5e9c32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419539, 8650, 1023, 23, 87, "Input",ExpressionUUID->"b55fe9ab-7f9f-4dd4-a236-8612d76f40b2"],
Cell[420565, 8675, 740, 14, 67, "Output",ExpressionUUID->"5614dcab-81cf-4f72-ad5e-e34cf6f9c38f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421342, 8694, 378, 10, 62, "Input",ExpressionUUID->"daea3c3d-8fc2-4d1c-8729-641bc504c09c"],
Cell[421723, 8706, 736, 14, 56, "Output",ExpressionUUID->"3b73f084-0d34-403e-9ab4-e1c343f96bce"]
}, Open  ]],
Cell[422474, 8723, 201, 4, 38, "Input",ExpressionUUID->"06c7472a-bd8d-4bc1-88a0-7fa9f706654f"],
Cell[CellGroupData[{
Cell[422700, 8731, 261, 4, 38, "Input",ExpressionUUID->"b258bb79-887b-454a-8f91-effecfd4a012"],
Cell[422964, 8737, 41586, 686, 164, "Output",ExpressionUUID->"b8107915-914f-44a0-8565-c74ca29e705a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464587, 9428, 582, 12, 49, "Input",ExpressionUUID->"325224ee-d8c2-4430-897c-fb5b2035ea85"],
Cell[465172, 9442, 419, 9, 51, "Output",ExpressionUUID->"6e378e6d-f944-45d2-8cd1-20b4aadbfaac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465628, 9456, 1019, 23, 49, "Input",ExpressionUUID->"95b0547e-dc0b-4044-98d5-b6ffa3b156f7"],
Cell[466650, 9481, 437, 11, 46, "Output",ExpressionUUID->"7d010bc3-2a06-41ce-ac75-1d3d4b01bc15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[467124, 9497, 1018, 23, 49, "Input",ExpressionUUID->"4417f2fa-03f2-4448-854e-f3025b5df34a"],
Cell[468145, 9522, 402, 7, 51, "Output",ExpressionUUID->"f325db9d-90d1-4565-95fe-45dcaf79a782"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468584, 9534, 481, 12, 71, "Input",ExpressionUUID->"c9c7a5f1-b32d-4512-9458-1385211fe7b3"],
Cell[469068, 9548, 865, 36, 487, "Output",ExpressionUUID->"7ca27d7f-92f7-4b89-85a7-3f7ce2176400"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469970, 9589, 524, 13, 71, "Input",ExpressionUUID->"c1cbe687-7bf1-437f-a44b-fcb942902240"],
Cell[470497, 9604, 1060, 36, 487, "Output",ExpressionUUID->"5e49fbc6-bddd-4f01-b6e4-c41d8d5cf2ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471594, 9645, 523, 13, 71, "Input",ExpressionUUID->"e9b7e4fc-8163-45c3-8f71-a6473c01827c"],
Cell[472120, 9660, 726, 22, 361, "Output",ExpressionUUID->"a53d0548-a328-4fd4-9680-fa217ff2d3ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472883, 9687, 422, 10, 71, "Input",ExpressionUUID->"1d3bd7dd-2168-4913-95fc-27b492fde847"],
Cell[473308, 9699, 645, 22, 361, "Output",ExpressionUUID->"45c03324-6637-4600-89d3-f23d29f4468d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473990, 9726, 1101, 24, 116, "Input",ExpressionUUID->"b80a2011-52b5-483c-bac5-22e920a5237a"],
Cell[475094, 9752, 156, 2, 42, "Output",ExpressionUUID->"47c700ff-bc4c-4e39-8491-3842f0ad928b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475287, 9759, 1103, 24, 78, "Input",ExpressionUUID->"60f93f60-9079-4964-b76c-83040585eed3"],
Cell[476393, 9785, 189, 3, 42, "Output",ExpressionUUID->"3a2fea8b-2a6f-4d17-bd44-44a28eeb0ec0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476619, 9793, 264, 4, 38, "Input",ExpressionUUID->"b79508ff-5a70-472b-97be-8bdb11a9065a"],
Cell[476886, 9799, 349, 6, 53, "Output",ExpressionUUID->"f68eb463-c85c-428a-952a-4281963cb25d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477272, 9810, 419, 7, 49, "Input",ExpressionUUID->"0372eda2-7888-408b-81ff-4e221d538833"],
Cell[477694, 9819, 66685, 1357, 705, "Output",ExpressionUUID->"26e8ac7e-8a92-492a-9818-63510d5aabe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544416, 11181, 416, 7, 49, "Input",ExpressionUUID->"0bfd0075-1a37-48c2-81ac-d57853c7ea50"],
Cell[544835, 11190, 67560, 1400, 701, "Output",ExpressionUUID->"8f8b4925-0564-4d0c-919f-a083cf5031ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612432, 12595, 248, 4, 38, "Input",ExpressionUUID->"049f7323-5d3a-48d6-a19b-5b62b93684cf"],
Cell[612683, 12601, 345323, 6370, 1323, "Output",ExpressionUUID->"e89b4431-810a-49f0-97bf-6234f491985b"]
}, Open  ]],
Cell[958021, 18974, 678, 15, 179, "Input",ExpressionUUID->"e69e63e2-1a7b-4d11-8394-46415aecae8d"],
Cell[958702, 18991, 152, 3, 38, "Input",ExpressionUUID->"bbb61e4c-face-449f-865e-86408880bddc"]
}
]
*)

(* End of internal cache information *)

