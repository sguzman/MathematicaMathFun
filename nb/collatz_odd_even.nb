(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    772624,      17453]
NotebookOptionsPosition[    760183,      17241]
NotebookOutlinePosition[    760606,      17258]
CellTagsIndexPosition[    760563,      17255]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.800889756678631*^9, 3.800889765987306*^9}, {
   3.800889800201466*^9, 3.8008898606228123`*^9}, 
   3.8008904288961353`*^9},ExpressionUUID->"2ad7d572-b2e8-4440-bd21-\
8b4e94ff9ee1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"poop", "[", 
     RowBox[{"even", ",", 
      RowBox[{"poop", "[", 
       RowBox[{"even", ",", "odd"}], "]"}]}], "]"}], "\[Equal]", "odd"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"poop", "[", 
     RowBox[{"even", ",", "odd"}], "]"}], "\[Equal]", "odd"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.800890343007782*^9, 3.8008903931563673`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bf252074-2eea-4784-b202-61c38dc6faa6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProofObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {-1., 0.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQo+2MNYy+dt7L5u/x7OT5po9KEk+x2cr3ejSfdG
01s4n6d4kTNj2xs4/1ciSMNrBH+JPxC9Qqi3uTtLXuwlnG+obiWScOI5nJ8G
Bs/g/MUg7b+ewPmPLfpACM5XVgKBR3B+Ive2BO5tD+B8+5eT7V5Ovgfn79kN
ArfhfEuwcTfgfJDuBO5rcL4xGFyG88HBk38Bzj/H3z2lcflpOF8856BYzsFj
cL5kxS5Te51DcP6K9DePvp7fDedPsQM5cDOc/+DltT8bPFbC+f+0znTysc6A
82EAAJo2a0Q=
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-1., 1.}, {-1., 0.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-1., 0.5}, {0., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.03676955262170048], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-1., 1.}, 0.03676955262170048], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Hypothesis 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, $CellContext`odd]]}],
                  "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-1., 0.5}, 0.03676955262170048], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{
                  "Substitution Lemma 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 0.}, 0.03676955262170048], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}], "\[Equal]", 
                    "odd"}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {-1., 0.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQo+2MNYy+dt7L5u/x7OT5po9KEk+x2cr3ejSfdG
01s4n6d4kTNj2xs4/1ciSMNrBH+JPxC9Qqi3uTtLXuwlnG+obiWScOI5nJ8G
Bs/g/MUg7b+ewPmPLfpACM5XVgKBR3B+Ive2BO5tD+B8+5eT7V5Ovgfn79kN
ArfhfEuwcTfgfJDuBO5rcL4xGFyG88HBk38Bzj/H3z2lcflpOF8856BYzsFj
cL5kxS5Te51DcP6K9DePvp7fDedPsQM5cDOc/+DltT8bPFbC+f+0znTysc6A
82EAAJo2a0Q=
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-1., 1.}, {-1., 0.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-1., 0.5}, {0., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.03676955262170048], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-1., 1.}, 0.03676955262170048], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Hypothesis 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, $CellContext`odd]]}],
                  "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-1., 0.5}, 0.03676955262170048], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 0.}, 0.03676955262170048], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}], "\[Equal]", 
                    "odd"}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}], "\[Equal]", "odd"}], 
                   Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProofObject["EquationalLogic", $CellContext`poop[$CellContext`even, 
     $CellContext`poop[$CellContext`even, $CellContext`odd]] == \
$CellContext`odd, $CellContext`poop[$CellContext`even, $CellContext`odd] == \
$CellContext`odd, {{"Axiom", 1} -> 
    Association[
     "Statement" -> $CellContext`odd == $CellContext`poop[$CellContext`even, \
$CellContext`odd], "Proof" -> Association[]], {"Hypothesis", 1} -> 
    Association[
     "Statement" -> $CellContext`odd == $CellContext`poop[$CellContext`even, 
         $CellContext`poop[$CellContext`even, $CellContext`odd]], "Proof" -> 
      Association[]], {"SubstitutionLemma", 1} -> 
    Association[
     "Statement" -> $CellContext`odd == $CellContext`poop[$CellContext`even, \
$CellContext`odd], "Proof" -> 
      Association[
       "Input" -> {"Hypothesis", 1}, "Position" -> {2, 2}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`poop[$CellContext`even, $CellContext`odd] -> \
$CellContext`odd), 
        "OutputExpression" -> $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]]], {"Conclusion", 1} -> 
    Association[
     "Statement" -> True, "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 1}, "Position" -> 2, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`poop[$CellContext`even, $CellContext`odd] -> \
$CellContext`odd), "OutputExpression" -> True]]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8008903947364187`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a09f2f67-c3ee-4d5c-bd9c-d405bfcf6ea3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ForAll", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"add", "[", 
       RowBox[{
        RowBox[{"mult", "[", 
         RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}], "\[Equal]", 
      "even"}]}], "]"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "\[Equal]", "odd"}], "\[Or]", "even"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mult", "[", 
       RowBox[{"odd", ",", "even"}], "]"}], "\[Equal]", "even"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mult", "[", 
       RowBox[{"odd", ",", "even"}], "]"}], "\[Equal]", 
      RowBox[{"mult", "[", 
       RowBox[{"even", ",", "odd"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mult", "[", 
       RowBox[{"odd", ",", "odd"}], "]"}], "\[Equal]", "odd"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mult", "[", 
       RowBox[{"even", ",", "even"}], "]"}], "\[Equal]", "even"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ForAll", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"mult", "[", 
         RowBox[{"odd", ",", "x"}], "]"}], "\[Equal]", "x"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ForAll", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"mult", "[", 
         RowBox[{"even", ",", "x"}], "]"}], "\[Equal]", "even"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800890435393609*^9, 3.800890450687112*^9}, {
  3.800890485586474*^9, 3.8008906032937307`*^9}, {3.800890842055565*^9, 
  3.800890928193408*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"aa6277eb-e112-49e3-8a2a-917c90c04648"],

Cell[BoxData[
 TemplateBox[{
  "FindEquationalProof", "invs", 
   "\"Invalid specification of propositions \
\\!\\(\\*RowBox[{SubscriptBox[\\\"\[ForAll]\\\", \\\"x\\\"], RowBox[{RowBox[{\
\\\"add\\\", \\\"[\\\", RowBox[{RowBox[{\\\"mult\\\", \\\"[\\\", \
RowBox[{\\\"odd\\\", \\\",\\\", \\\"x\\\"}], \\\"]\\\"}], \\\",\\\", \
\\\"odd\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"even\\\"}]}]\\) and axioms \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"x\\\", \\\"\[Equal]\\\
\", \\\"odd\\\"}], \\\"||\\\", \\\"even\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"mult\\\", \\\"[\\\", RowBox[{\\\"odd\\\", \\\",\\\", \
\\\"even\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"even\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"mult\\\", \\\"[\\\", RowBox[{\\\"odd\\\", \\\",\\\", \
\\\"even\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"mult\\\", \
\\\"[\\\", RowBox[{\\\"even\\\", \\\",\\\", \\\"odd\\\"}], \\\"]\\\"}]}], \
\\\",\\\", RowBox[{RowBox[{\\\"mult\\\", \\\"[\\\", RowBox[{\\\"odd\\\", \
\\\",\\\", \\\"odd\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"odd\\\"}], \\\",\
\\\", RowBox[{RowBox[{\\\"mult\\\", \\\"[\\\", RowBox[{\\\"even\\\", \
\\\",\\\", \\\"even\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"even\\\"}], \
\\\",\\\", RowBox[{SubscriptBox[\\\"\[ForAll]\\\", \\\"x\\\"], \
RowBox[{RowBox[{\\\"mult\\\", \\\"[\\\", RowBox[{\\\"odd\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"x\\\"}]}], \\\",\\\", \
RowBox[{SubscriptBox[\\\"\[ForAll]\\\", \\\"x\\\"], \
RowBox[{RowBox[{\\\"mult\\\", \\\"[\\\", RowBox[{\\\"even\\\", \\\",\\\", \
\\\"x\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"even\\\"}]}]}], \
\\\"}\\\"}]\\).\"", 2, 8, 8, 17822207334271402157, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.800890496082402*^9, {3.8008905595566797`*^9, 3.8008905658036222`*^9}, {
   3.800890902533259*^9, 3.800890928494494*^9}},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"9c085e50-f0ae-4c62-b7cc-bce611cef50a"],

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[ForAll]", "x"], 
    RowBox[{
     RowBox[{"add", "[", 
      RowBox[{
       RowBox[{"mult", "[", 
        RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}], "\[Equal]", 
     "even"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "\[Equal]", "odd"}], "||", "even"}], ",", 
     RowBox[{
      RowBox[{"mult", "[", 
       RowBox[{"odd", ",", "even"}], "]"}], "\[Equal]", "even"}], ",", 
     RowBox[{
      RowBox[{"mult", "[", 
       RowBox[{"odd", ",", "even"}], "]"}], "\[Equal]", 
      RowBox[{"mult", "[", 
       RowBox[{"even", ",", "odd"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"mult", "[", 
       RowBox[{"odd", ",", "odd"}], "]"}], "\[Equal]", "odd"}], ",", 
     RowBox[{
      RowBox[{"mult", "[", 
       RowBox[{"even", ",", "even"}], "]"}], "\[Equal]", "even"}], ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", "x"], 
      RowBox[{
       RowBox[{"mult", "[", 
        RowBox[{"odd", ",", "x"}], "]"}], "\[Equal]", "x"}]}], ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", "x"], 
      RowBox[{
       RowBox[{"mult", "[", 
        RowBox[{"even", ",", "x"}], "]"}], "\[Equal]", "even"}]}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.800890496250855*^9, {3.800890559566985*^9, 3.800890565813899*^9}, {
   3.800890902550518*^9, 3.800890928505546*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"440e6863-1303-455c-bb19-54630ca43d3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ForAll", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"add", "[", 
       RowBox[{
        RowBox[{"mult", "[", 
         RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}], "\[Equal]", 
      "even"}]}], "]"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ForAll", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"mult", "[", 
         RowBox[{"odd", ",", "x"}], "]"}], "\[Equal]", "x"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ForAll", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"add", "[", 
         RowBox[{"x", ",", "odd"}], "]"}], "\[Equal]", "even"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8008909605159407`*^9, 3.800890985762418*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"d7b7d037-113a-44de-bc34-d2bcccbe5572"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProofObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {1., 0.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 1.}, {1., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{"x1", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", $CellContext`even == \
$CellContext`add[$CellContext`x1, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}]}]}},
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Hypothesis 1", $CellContext`even == $CellContext`add[
                    $CellContext`mult[$CellContext`odd, $CellContext`x], \
$CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.}, 0.04223904260875941], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}], 
                    "\[Equal]", "even"}]}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {1., 0.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 1.}, {1., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{"x1", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", $CellContext`even == \
$CellContext`add[$CellContext`x1, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}]}]}},
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Hypothesis 1", $CellContext`even == $CellContext`add[
                    $CellContext`mult[$CellContext`odd, $CellContext`x], \
$CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.}, 0.04223904260875941], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}], 
                    "\[Equal]", "even"}]}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"odd", ",", "x"}], "]"}], "\[Equal]", "x"}]}], 
                    "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"add", "[", 
                    RowBox[{"x", ",", "odd"}], "]"}], "\[Equal]", 
                    "even"}]}]}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProofObject["EquationalLogic", 
   ForAll[$CellContext`x, $CellContext`add[
      $CellContext`mult[$CellContext`odd, $CellContext`x], $CellContext`odd] == \
$CellContext`even], 
   And[
    ForAll[$CellContext`x, $CellContext`mult[$CellContext`odd, \
$CellContext`x] == $CellContext`x], 
    ForAll[$CellContext`x, $CellContext`add[$CellContext`x, $CellContext`odd] == \
$CellContext`even]], {{"Axiom", 1} -> 
    Association[
     "Statement" -> $CellContext`even == $CellContext`add[$CellContext`x1, \
$CellContext`odd], "Proof" -> Association[]], {"Hypothesis", 1} -> 
    Association["Statement" -> $CellContext`even == $CellContext`add[
         $CellContext`mult[$CellContext`odd, $CellContext`x], \
$CellContext`odd], "Proof" -> Association[]], {"Conclusion", 1} -> 
    Association[
     "Statement" -> True, "Proof" -> 
      Association[
       "Input" -> {"Hypothesis", 1}, "Position" -> 2, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`add[
           Pattern[$CellContext`x1, 
            Blank[]], $CellContext`odd] -> $CellContext`even), 
        "OutputExpression" -> True]]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.800890987409587*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"029680df-4941-4cd2-8d40-526342a811c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"poop", "[", 
     RowBox[{"even", ",", 
      RowBox[{"poop", "[", 
       RowBox[{"even", ",", 
        RowBox[{"poop", "[", 
         RowBox[{"even", ",", 
          RowBox[{"poop", "[", 
           RowBox[{"even", ",", 
            RowBox[{"poop", "[", 
             RowBox[{"even", ",", 
              RowBox[{"poop", "[", 
               RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}]}], "]"}], "\[Equal]", "odd"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"poop", "[", 
     RowBox[{"even", ",", "odd"}], "]"}], "\[Equal]", "odd"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.800891009530849*^9, 3.800891013239931*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"80c14812-5920-4de8-ad56-4b999982072d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProofObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 5.}, {-3., 4.166666666666667}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQpEHDrflQUlTN65v+jJ6S3xV4Ud/hXo9IWkntnf
Lqb2LGKhsMO0sszpZZnX9ztM45vyOlnY4cuu003zWB7un5ncuk9cVtjBSvrC
iX8cz/dPretKvXtGyEHmzkHZOwff7jd5LttpUyzkcK7ugsPs6Z/2l8211zQV
EHK4u9/sV9uKb/ujFr53Pb5Y0MFqo7D1RuHf+x980r3/SVfQQUI8tMtY5s/+
YyvFW/T4BB3Wqb4snc76d7/SpZ25Vi8FHP7dOf8XiPZ/zhaZI7ZfwIHVllOJ
pfrfftNydf7D/QIOx1ynPuJh/7//7edPx+yjBRwcvhfbfy/+v1/yUdnhHkUB
h6LApRaHD/7fX9ScxhlylN8hNkTzXMGH//tnqwaI6tvyO0AD5sDqVSDAB+cz
Hn3uoyuO4P9Wq6yX7eF1YITyZ16Ic6rm5IXL3zg4Y6pbPw+cv+cXSAOCD1T8
VnULN5yf5+zw0TIYwbcOPt26+xcXmnu4HADimrE9
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQpEHKYcrvf78nbF/tSGSxnF14QdRKTt2mqkdu8P
aHPYtnypsMOH0No+569H9x8R9HoxJxcof2rX157i8/v3Kr3/F6Qn7PB3S7YN
L8vV/bY79X+dfC7kcG7WS+6ym7f2u17lvsU4S8jBoXt1CcPcB/uvlDXP++Ui
5MApEvXqmtCT/a/mTnPf8kLQ4VA6Q7rduef727xcr+q1Cjq4ZFdUNbe93B+2
bF+rdLCgg4LRkZV/uF7vb1z999F/WUGHsD2Pv6yMfrOfOYrp7e2nAg7POa9H
d1e83X9v45nF61cJOFyUmndvQeK7/UKbY9ircwQcxN5b1L4Se79/XuwmcTtt
AYctbcvNM2a838+SPHvlx7P8DusevuSVevZ+f0NsbG2YPb8DJFw+7A8LBQFe
OP+Wd4b+wr08cH6CUzXnW1UeB0Yo/5lF32OLPm64PEh1yzcuOP+d6pbpF+IQ
/CKZ44Uyxznh/G9CIBsQ/Bqg6Vumc8D5EBrBD5OyXdSUww7nB9acu1L0kA3u
nrdg+9jg8nri717NfsIK5wsEgDQg+DMuxAF9hOAfmjHVrX8FC5w/YYXCbYEA
BB9CszgAAMLA4+w=
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQjQpEHGCsHavzJ32/LgznzzfeGrNjNYK/dfqFOKdq
BP/H9YMzproh+JlfOrg28SL4XG9Vt0y/IATn3wAp70fwrxY9XLfPE8GHAATf
qZoTaIIgnN/6TeiWdwaCf6JQ5nihDIIPsU8AzvfJ0F+4twXB73tsAUQIPlAS
aCI/nK+2BeRBBD8sFAR44Xyg5UADeeD8BLADEfxnIOP7uOF8sPXfuOD8dyDn
xSH4RSDnH+eE88He00fwa0Den84B568CAzY4Xw/sAQQfEj+scL4V2MMscP4+
kHe9EXxI+DLD+ZDwRPAh4ccE51+KA+lgRAsfBB+cfA4ywPlLLyprnTBD8NvA
HvxvD+Oz32xreFT8D84/47XYPWTCXzj/Nji8/8D5+neump/8/RvOP/X7dcIZ
LwR/NTh8ftkDANG2oXI=
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQjQpEHKYcrvf78naFfWrDpYzia8IOItJ2bTVSu+0D
2hy2LV8q7PAhtLbP+etR+yOCXi/m5ALlT+362lN83n6v0vt/QXrCDn+3ZNvw
sly1t92p/+vkcyGHc7NecpfdvGXvepX7FuMsIQeH7tUlDHMf2F8pa573y0XI
gVMk6tU1oSf2r+ZOc9/yQtDhUDpDut255/ZtXq5X9VoFHVyyK6qa217ahy3b
1yodLOigYHRk5R+u1/aNq/8++i8r6BC25/GXldFv7JmjmN7efirg8JzzenR3
xVv7exvPLF6/SsDhotS8ewsS39kLbY5hr84RcBB7b1H7Suy9/bzYTeJ22gIO
W9qWm2fMeG/Pkjx75cez/A7rHr7klXr23r4hNrY2zJ7fARIuH+zDQkGAF86/
5Z2hv3AvD5yf4FTN+VaVx4ERyn9m0ffYoo8bLg9S3fKNC85/p7pl+oU4BL9I
5nihzHFOOP+bEMgGBL8GaPqW6Rxw/iowYIPz9UDGCyH4W4GmO1Wzwt1jBXLO
Yxa4/L4WkA0IPtj5W5jh/BOFIAch+D5gDzDB+ZfiQDoY4XxoAoLzOUDOvfDP
HsYXBgfYX3uYe+RA3i38A5dXAwWH02843wDsn19wPsT9P+B8Z7B7v8P5vpAA
hvMh8fUVzmfsOj8zSu8LnP/N99M/K4nPcPcYgu37BJff0Gyo3Sv3Ec4v/wrS
8AHO5wL77x2cv4mX8ehzn7dw/gsfXfF3r17D+avB8fXKHgAHBTWV
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBwAGIQjQpEHDrflQUlTN5pX/Tk9Jb4q8IO/wp0+kJSz9i3
i6k9i1go7DCtLHN6WeZ1e4dpfFNeJws7fNl1umkey0P7mcmt+8RlhR2spC+c
+Mfx3H5qXVfq3TNCDjJ3DsreOfjW3uS5bKdNsZDDuboLDrOnf7Ivm2uvaSog
5HB3v9mvthXf7KMWvnc9vljQwWqjsPVG4d/2Dz7p3v+kK+ggIR7aZSzzx/7Y
SvEWPT5Bh3WqL0uns/61V7q0M9fqpYDDvzvn/wKR/edskTli+wUcWG05lViq
/9mblqvzH+4XcDjmOvURD/t/+7efPx2zjxZwcPhebP+9+L+95KOywz2KAg5F
gUstDh/8b1/UnMYZcpTfITZE81zBh//2s1UDRPVt+R2gAeMQFgoCvHD+Le8M
/YV7eeD8BKdqzreqPA6MUP4zi77HFn3ccHmQ6pZvXHD+O9Ut0y/EIfhFMscL
ZY5zwvnfhEA2IPg1QNO3TOeA81eBARucrwcyXgjB3wo03amaFe4eK5BzHrPA
5fe1gGxA8MHO38IM558oBDkIwfcBe4AJzr8UB9LBCOej0xwg5174Zw/jC4MD
7K89zD1yIO8W/oHLq4GCw+k3nG8A9s8vOB/i/h9wvjPYvd/hfF9IAMP5q8Hh
8wnOBxtf/RHOh/j/A9w9E0DGW7yDy4Otv/UazoeE50s4H+x8medwPiQ9PIHz
IfH7CM6HUA/g/E2XXgiKptyG8xsfFS+bxn0d7p5MsHcuweWvFj1ct8/zHJzP
w3j0uY/ucTgfHBzTD8D5lhKbgTZshfMvK2udMGNZguYeBgYAicowlw==
                  
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-3., 5.}, {-3., 4.166666666666667}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                
                ArrowBox[{{-3., 4.166666666666667}, {-2., 
                 3.3333333333333335`}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-2., 3.3333333333333335`}, {-1., 2.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-1., 2.5}, {0., 1.6666666666666667`}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                
                ArrowBox[{{0., 1.6666666666666667`}, {1., 
                 0.8333333333333334}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 0.8333333333333334}, {2., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 5.}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-3., 5.}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Hypothesis 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-3., 4.166666666666667}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-2., 3.3333333333333335`}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 2\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 2", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-1., 2.5}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 3\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}]}},
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 3", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.6666666666666667`}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 4\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 4", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, $CellContext`odd]]}],
                  "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.8333333333333334}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 5\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 5", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{2., 0.}, 0.13207106781186548`], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "]"}]}], "]"}], "\[Equal]", "odd"}], 
                   Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 5.}, {-3., 4.166666666666667}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQpEHDrflQUlTN65v+jJ6S3xV4Ud/hXo9IWkntnf
Lqb2LGKhsMO0sszpZZnX9ztM45vyOlnY4cuu003zWB7un5ncuk9cVtjBSvrC
iX8cz/dPretKvXtGyEHmzkHZOwff7jd5LttpUyzkcK7ugsPs6Z/2l8211zQV
EHK4u9/sV9uKb/ujFr53Pb5Y0MFqo7D1RuHf+x980r3/SVfQQUI8tMtY5s/+
YyvFW/T4BB3Wqb4snc76d7/SpZ25Vi8FHP7dOf8XiPZ/zhaZI7ZfwIHVllOJ
pfrfftNydf7D/QIOx1ynPuJh/7//7edPx+yjBRwcvhfbfy/+v1/yUdnhHkUB
h6LApRaHD/7fX9ScxhlylN8hNkTzXMGH//tnqwaI6tvyO0AD5sDqVSDAB+cz
Hn3uoyuO4P9Wq6yX7eF1YITyZ16Ic6rm5IXL3zg4Y6pbPw+cv+cXSAOCD1T8
VnULN5yf5+zw0TIYwbcOPt26+xcXmnu4HADimrE9
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQpEHKYcrvf78nbF/tSGSxnF14QdRKTt2mqkdu8P
aHPYtnypsMOH0No+569H9x8R9HoxJxcof2rX157i8/v3Kr3/F6Qn7PB3S7YN
L8vV/bY79X+dfC7kcG7WS+6ym7f2u17lvsU4S8jBoXt1CcPcB/uvlDXP++Ui
5MApEvXqmtCT/a/mTnPf8kLQ4VA6Q7rduef727xcr+q1Cjq4ZFdUNbe93B+2
bF+rdLCgg4LRkZV/uF7vb1z999F/WUGHsD2Pv6yMfrOfOYrp7e2nAg7POa9H
d1e83X9v45nF61cJOFyUmndvQeK7/UKbY9ircwQcxN5b1L4Se79/XuwmcTtt
AYctbcvNM2a838+SPHvlx7P8DusevuSVevZ+f0NsbG2YPb8DJFw+7A8LBQFe
OP+Wd4b+wr08cH6CUzXnW1UeB0Yo/5lF32OLPm64PEh1yzcuOP+d6pbpF+IQ
/CKZ44Uyxznh/G9CIBsQ/Bqg6Vumc8D5EBrBD5OyXdSUww7nB9acu1L0kA3u
nrdg+9jg8nri717NfsIK5wsEgDQg+DMuxAF9hOAfmjHVrX8FC5w/YYXCbYEA
BB9CszgAAMLA4+w=
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQjQpEHGCsHavzJ32/LgznzzfeGrNjNYK/dfqFOKdq
BP/H9YMzproh+JlfOrg28SL4XG9Vt0y/IATn3wAp70fwrxY9XLfPE8GHAATf
qZoTaIIgnN/6TeiWdwaCf6JQ5nihDIIPsU8AzvfJ0F+4twXB73tsAUQIPlAS
aCI/nK+2BeRBBD8sFAR44Xyg5UADeeD8BLADEfxnIOP7uOF8sPXfuOD8dyDn
xSH4RSDnH+eE88He00fwa0Den84B568CAzY4Xw/sAQQfEj+scL4V2MMscP4+
kHe9EXxI+DLD+ZDwRPAh4ccE51+KA+lgRAsfBB+cfA4ywPlLLyprnTBD8NvA
HvxvD+Oz32xreFT8D84/47XYPWTCXzj/Nji8/8D5+neump/8/RvOP/X7dcIZ
LwR/NTh8ftkDANG2oXI=
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQjQpEHKYcrvf78naFfWrDpYzia8IOItJ2bTVSu+0D
2hy2LV8q7PAhtLbP+etR+yOCXi/m5ALlT+362lN83n6v0vt/QXrCDn+3ZNvw
sly1t92p/+vkcyGHc7NecpfdvGXvepX7FuMsIQeH7tUlDHMf2F8pa573y0XI
gVMk6tU1oSf2r+ZOc9/yQtDhUDpDut255/ZtXq5X9VoFHVyyK6qa217ahy3b
1yodLOigYHRk5R+u1/aNq/8++i8r6BC25/GXldFv7JmjmN7efirg8JzzenR3
xVv7exvPLF6/SsDhotS8ewsS39kLbY5hr84RcBB7b1H7Suy9/bzYTeJ22gIO
W9qWm2fMeG/Pkjx75cez/A7rHr7klXr23r4hNrY2zJ7fARIuH+zDQkGAF86/
5Z2hv3AvD5yf4FTN+VaVx4ERyn9m0ffYoo8bLg9S3fKNC85/p7pl+oU4BL9I
5nihzHFOOP+bEMgGBL8GaPqW6Rxw/iowYIPz9UDGCyH4W4GmO1Wzwt1jBXLO
Yxa4/L4WkA0IPtj5W5jh/BOFIAch+D5gDzDB+ZfiQDoY4XxoAoLzOUDOvfDP
HsYXBgfYX3uYe+RA3i38A5dXAwWH02843wDsn19wPsT9P+B8Z7B7v8P5vpAA
hvMh8fUVzmfsOj8zSu8LnP/N99M/K4nPcPcYgu37BJff0Gyo3Sv3Ec4v/wrS
8AHO5wL77x2cv4mX8ehzn7dw/gsfXfF3r17D+avB8fXKHgAHBTWV
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBwAGIQjQpEHDrflQUlTN5pX/Tk9Jb4q8IO/wp0+kJSz9i3
i6k9i1go7DCtLHN6WeZ1e4dpfFNeJws7fNl1umkey0P7mcmt+8RlhR2spC+c
+Mfx3H5qXVfq3TNCDjJ3DsreOfjW3uS5bKdNsZDDuboLDrOnf7Ivm2uvaSog
5HB3v9mvthXf7KMWvnc9vljQwWqjsPVG4d/2Dz7p3v+kK+ggIR7aZSzzx/7Y
SvEWPT5Bh3WqL0uns/61V7q0M9fqpYDDvzvn/wKR/edskTli+wUcWG05lViq
/9mblqvzH+4XcDjmOvURD/t/+7efPx2zjxZwcPhebP+9+L+95KOywz2KAg5F
gUstDh/8b1/UnMYZcpTfITZE81zBh//2s1UDRPVt+R2gAeMQFgoCvHD+Le8M
/YV7eeD8BKdqzreqPA6MUP4zi77HFn3ccHmQ6pZvXHD+O9Ut0y/EIfhFMscL
ZY5zwvnfhEA2IPg1QNO3TOeA81eBARucrwcyXgjB3wo03amaFe4eK5BzHrPA
5fe1gGxA8MHO38IM558oBDkIwfcBe4AJzr8UB9LBCOej0xwg5174Zw/jC4MD
7K89zD1yIO8W/oHLq4GCw+k3nG8A9s8vOB/i/h9wvjPYvd/hfF9IAMP5q8Hh
8wnOBxtf/RHOh/j/A9w9E0DGW7yDy4Otv/UazoeE50s4H+x8medwPiQ9PIHz
IfH7CM6HUA/g/E2XXgiKptyG8xsfFS+bxn0d7p5MsHcuweWvFj1ct8/zHJzP
w3j0uY/ucTgfHBzTD8D5lhKbgTZshfMvK2udMGNZguYeBgYAicowlw==
                  
                  "]]]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-3., 5.}, {-3., 4.166666666666667}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                
                ArrowBox[{{-3., 4.166666666666667}, {-2., 
                 3.3333333333333335`}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-2., 3.3333333333333335`}, {-1., 2.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{-1., 2.5}, {0., 1.6666666666666667`}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                
                ArrowBox[{{0., 1.6666666666666667`}, {1., 
                 0.8333333333333334}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 0.8333333333333334}, {2., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 5.}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-3., 5.}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Hypothesis 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-3., 4.166666666666667}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 1\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-2., 3.3333333333333335`}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 2\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 2", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{-1., 2.5}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 3\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}]}},
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 3", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.6666666666666667`}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 4\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 4", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, $CellContext`odd]]}],
                  "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.8333333333333334}, 0.13207106781186548`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 5\""}, {
                    RowBox[{"odd", "\[Equal]", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 5", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{2., 0.}, 0.13207106781186548`], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "]"}]}], "]"}], "\[Equal]", "odd"}], 
                   Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}], "\[Equal]", "odd"}], 
                   Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProofObject["EquationalLogic", $CellContext`poop[$CellContext`even, 
     $CellContext`poop[$CellContext`even, 
      $CellContext`poop[$CellContext`even, 
       $CellContext`poop[$CellContext`even, 
        $CellContext`poop[$CellContext`even, 
         $CellContext`poop[$CellContext`even, $CellContext`odd]]]]]] == \
$CellContext`odd, $CellContext`poop[$CellContext`even, $CellContext`odd] == \
$CellContext`odd, {{"Axiom", 1} -> 
    Association[
     "Statement" -> $CellContext`odd == $CellContext`poop[$CellContext`even, \
$CellContext`odd], "Proof" -> Association[]], {"Hypothesis", 1} -> 
    Association[
     "Statement" -> $CellContext`odd == $CellContext`poop[$CellContext`even, 
         $CellContext`poop[$CellContext`even, 
          $CellContext`poop[$CellContext`even, 
           $CellContext`poop[$CellContext`even, 
            $CellContext`poop[$CellContext`even, 
             $CellContext`poop[$CellContext`even, $CellContext`odd]]]]]], 
      "Proof" -> Association[]], {"SubstitutionLemma", 1} -> 
    Association[
     "Statement" -> $CellContext`odd == $CellContext`poop[$CellContext`even, 
         $CellContext`poop[$CellContext`even, 
          $CellContext`poop[$CellContext`even, 
           $CellContext`poop[$CellContext`even, 
            $CellContext`poop[$CellContext`even, $CellContext`odd]]]]], 
      "Proof" -> Association[
       "Input" -> {"Hypothesis", 1}, "Position" -> {2, 2, 2, 2, 2, 2}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`poop[$CellContext`even, $CellContext`odd] -> \
$CellContext`odd), 
        "OutputExpression" -> $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
           $CellContext`poop[$CellContext`even, 
            $CellContext`poop[$CellContext`even, 
             $CellContext`poop[$CellContext`even, 
              $CellContext`poop[$CellContext`even, $CellContext`odd]]]]]]], {
     "SubstitutionLemma", 2} -> 
    Association[
     "Statement" -> $CellContext`odd == $CellContext`poop[$CellContext`even, 
         $CellContext`poop[$CellContext`even, 
          $CellContext`poop[$CellContext`even, 
           $CellContext`poop[$CellContext`even, $CellContext`odd]]]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 1}, "Position" -> {2, 2, 2, 2, 2}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`poop[$CellContext`even, $CellContext`odd] -> \
$CellContext`odd), 
        "OutputExpression" -> $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
           $CellContext`poop[$CellContext`even, 
            $CellContext`poop[$CellContext`even, 
             $CellContext`poop[$CellContext`even, $CellContext`odd]]]]]], {
     "SubstitutionLemma", 3} -> 
    Association[
     "Statement" -> $CellContext`odd == $CellContext`poop[$CellContext`even, 
         $CellContext`poop[$CellContext`even, 
          $CellContext`poop[$CellContext`even, $CellContext`odd]]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 2}, "Position" -> {2, 2, 2, 2}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`poop[$CellContext`even, $CellContext`odd] -> \
$CellContext`odd), 
        "OutputExpression" -> $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
           $CellContext`poop[$CellContext`even, 
            $CellContext`poop[$CellContext`even, $CellContext`odd]]]]], {
     "SubstitutionLemma", 4} -> 
    Association[
     "Statement" -> $CellContext`odd == $CellContext`poop[$CellContext`even, 
         $CellContext`poop[$CellContext`even, $CellContext`odd]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 3}, "Position" -> {2, 2, 2}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`poop[$CellContext`even, $CellContext`odd] -> \
$CellContext`odd), 
        "OutputExpression" -> $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
           $CellContext`poop[$CellContext`even, $CellContext`odd]]]], {
     "SubstitutionLemma", 5} -> 
    Association[
     "Statement" -> $CellContext`odd == $CellContext`poop[$CellContext`even, \
$CellContext`odd], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 4}, "Position" -> {2, 2}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`poop[$CellContext`even, $CellContext`odd] -> \
$CellContext`odd), 
        "OutputExpression" -> $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]]], {"Conclusion", 1} -> 
    Association[
     "Statement" -> True, "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 5}, "Position" -> 2, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`poop[$CellContext`even, $CellContext`odd] -> \
$CellContext`odd), "OutputExpression" -> True]]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.800891014259121*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"bdb8649e-c187-4f86-8efe-649c71c967bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Out", "[", "10", "]"}], "[", "\"\<ProofGraph\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.80089101764069*^9, 3.800891024550867*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d7341ab6-ff3c-4f6b-846b-a41b5094111f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Axiom 1", "Hypothesis 1", "Substitution Lemma 1", 
       "Substitution Lemma 2", "Substitution Lemma 3", "Substitution Lemma 4",
        "Substitution Lemma 5", "Conclusion 1"}, {{{2, 3}, {1, 3}, {3, 4}, {1,
        4}, {4, 5}, {1, 5}, {5, 6}, {1, 6}, {6, 7}, {1, 7}, {7, 8}, {1, 8}}, 
       Null}, {AnnotationRules -> {
        "Substitution Lemma 4" -> {
          Tooltip -> Column[{
             "Substitution Lemma 4", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                $CellContext`poop[$CellContext`even, $CellContext`odd]]}]}, 
         "Axiom 1" -> {
          Tooltip -> Column[{
             "Axiom 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}]}, 
         "Substitution Lemma 2" -> {
          Tooltip -> Column[{
             "Substitution Lemma 2", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                $CellContext`poop[$CellContext`even, 
                 $CellContext`poop[$CellContext`even, 
                  $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]}]}, 
         "Substitution Lemma 3" -> {
          Tooltip -> Column[{
             "Substitution Lemma 3", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                $CellContext`poop[$CellContext`even, 
                 $CellContext`poop[$CellContext`even, $CellContext`odd]]]}]}, 
         "Substitution Lemma 5" -> {
          Tooltip -> Column[{
             "Substitution Lemma 5", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}]}, 
         "Conclusion 1" -> {Tooltip -> Column[{"Conclusion 1", True}]}, 
         "Hypothesis 1" -> {
          Tooltip -> Column[{
             "Hypothesis 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                $CellContext`poop[$CellContext`even, 
                 $CellContext`poop[$CellContext`even, 
                  $CellContext`poop[$CellContext`even, 
                   $CellContext`poop[$CellContext`even, 
                    $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]]]}]}, 
         "Substitution Lemma 1" -> {
          Tooltip -> Column[{
             "Substitution Lemma 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
                $CellContext`poop[$CellContext`even, 
                 $CellContext`poop[$CellContext`even, 
                  $CellContext`poop[$CellContext`even, 
                   $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]]}]}}, 
       EdgeStyle -> {DirectedEdge["Axiom 1", "Conclusion 1"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 1", "Substitution Lemma 2"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 1", "Substitution Lemma 4"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 2", "Substitution Lemma 3"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 1", "Substitution Lemma 3"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Substitution Lemma 1"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 4", "Substitution Lemma 5"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 3", "Substitution Lemma 4"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 1", "Substitution Lemma 2"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Hypothesis 1", "Substitution Lemma 1"] -> RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 5", "Conclusion 1"] -> RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 1", "Substitution Lemma 5"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]]}, GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {Automatic}, 
       VertexShapeFunction -> {
        "Substitution Lemma 4" -> "Circle", "Hypothesis 1" -> "Diamond", 
         "Substitution Lemma 3" -> "Circle", "Conclusion 1" -> "Square", 
         "Substitution Lemma 1" -> "Circle", "Substitution Lemma 2" -> 
         "Circle", "Substitution Lemma 5" -> "Circle", "Axiom 1" -> 
         "FiveDown"}, VertexSize -> {{"Scaled", 0.03735533905932738}}, 
       VertexStyle -> {"Substitution Lemma 1" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Hypothesis 1" -> Directive[
           RGBColor[
            Rational[146, 255], 
            Rational[10, 17], 0], 
           EdgeForm[]], "Conclusion 1" -> Directive[
           RGBColor[
            Rational[13, 15], 
            Rational[1, 15], 0], 
           EdgeForm[]], "Substitution Lemma 4" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Axiom 1" -> Directive[
           RGBColor[
            Rational[71, 255], 
            Rational[182, 255], 
            Rational[109, 255]], 
           EdgeForm[]], "Substitution Lemma 5" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 3" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 2" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{0., 6.}, {-3., 5.}}, 0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQokHNRucey7nbVzv/e7Zg+ts+IOlh4Bqd4iZ/Y/
2Jd1aV2/uMPOE4WePnzX9+8u3DK3113cQX/S+8ipmx/sv8eWuOrYFzGHdukf
FQldz/Z71BX8iJwu5pDUcKmxnfvt/l/XH7W764s5JCbYW7VKf9r/RXhHRP8e
UYfgvLoVJWzf9psZfcgytBd14Mhaxj3J7df+/Ubd+3S3izj0HZ1joVj1e3+Q
jYL/2m4RByf2iPzGzj/7tYKfrJoaJeKgpH9j/aaSv/tdy69ffKYs4qBjK/tr
i/W//YtW/Dy84LmwQ4qhul/HvX/7nZ57NR5eKuxwgvvbap3Y//vVjE9z+scJ
O0Sc6RRetP3/fr+eqlhnQWEHseJHLS/e/t+/81NEzYJ9Qg7QgDmQBgYIvknZ
x1/PeRH8vxs8JCt2CTowQvmHxHIOiuUIwuWblkd/PqyE4Nsli6+vvycA53/x
nA9ECP4KkPJUBD9shrAslwGCD6EEHAAOZKv5
          "]], 0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQokHGbympsuPrRi/5OJU3dWnRN3kFu/JvjW4V37
XXw3TvswRdyhas9M0bOTj+6XNQqenhgs7qDxafoEj2Pn9uc7VO8+yynu4FOT
cXZ9zZX9NhWazKY7xByepCtJdYrd2t90MzZvepyYw/u7NuIREg/2O6dI/P3y
R9RB1sa8dVLq4/21EpHrfSeLOlT7MVz//OnZfsNv8q0LFUUdIiaHitrffLF/
plLn5JP3RRzOtYT6hLS92l+x2MX/9ywRh0dKDDXGv17vP1sRtMMsWMShPzd0
yR2Tt/unLdp0rppDxOFaSuhRf7N3+68opE46tUvYYScHw/2ef+/2d3zOZFbO
EnYwiwz9OLn3/f5NUgcVW8WEHfzCQv+kPH6/P2ha1tsP+4UcIOHyYf+smSAg
COe/mmz3crIdgm/Z99ii77GAAyOU39UBAgJw+RtNukCE4Af8WuL/awk/nP/h
HQjwwflg4ywQfD2wAbxw/tkzIMAD56e/efT1vDSC/ytxotGHEm64e1pA1t/g
gsuz+G9/1u6K4Fcf04v7v4cTzX8IPlj5KQ44f42BupVIAoIPoTkcAFqp6z8=

          "]], 0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQjQokHGCslelvHn09Lw7nRy7hsbk7C8Hn2ZbAvS0B
wT8850VAgyKCXx8B0iAG59u/nGz3cjKCz+K//Vm7K4J/tpOPVeKTKJw/ayYI
IPhg7XYIvmXfY4u+xyJwfmcHCCD4N5t0bzTpIvgatZfUay8Jw/kV5SCA4B8v
lAEiBF8856BYzkEhNPcIwvmvwO5B8CHuEYDzu8DuQfBvgN2D4Af8WuL/awk/
nP/hHQjwwflg4ywQfD2wAbxwvjEYcMP5F9VBHuSC84tA3jnOCecLC4IAgr+B
NRqIONDcww7nvwe7hw3NPQg+xD2scP4ZMGCB89NAyUcawf+VONHoQwkznN8C
Co4bTHA+JD0g+FXH9OL+72GE8yHhjeCDlZ9igPPXGKhbiSQg+FDgAADXDptE

          "]], 0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQjQokHGbympsuPrTC/snEqTurzok7yK1fE3zr8C57
F9+N0z5MEXeo2jNT9Ozko/ayRsHTE4PFHTQ+TZ/gceycfb5D9e6znOIOPjUZ
Z9fXXLG3qdBkNt0h5vAkXUmqU+yWfdPN2LzpcWIO7+/aiEdIPLB3TpH4++WP
qIOsjXnrpNTH9rUSket9J4s6VPsxXP/86Zm94Tf51oWKog4Rk0NF7W++sJ+p
1Dn55H0Rh3MtoT4hba/sKxa7+P+eJeLwSImhxvjXa/uzFUE7zIJFHPpzQ5fc
MXlrP23RpnPVHCIO11JCj/qbvbO/opA66dQuYYedHAz3e/69s+/4nMmsnCXs
YBYZ+nFy73v7TVIHFVvFhB38wkL/pDx+bx80Levth/1CDpBw+WA/ayYICML5
rybbvZxsh+Bb9j226Hss4MAI5Xd1gIAAXP5Gky4QIfgBv5b4/1rCD+d/eAcC
fHA+2DgLBF8PbAAvnG8MBtxw/kX12kvqtVxwfpHM8UKZ45xw9wgLggAnXH4D
azQQcaC5hx3Ofw92DxuaexB8iHtY4XwTsHuY4fwrYPcwwfmFYPcwwt0jBHYP
I1x+I9g9DHD+gi+e8794/reH8e/dBYG/cL4syLjCP3B+DNhDv+F8SHz9hPPP
3zj6er75Dzj/82Gl1Acvv9nD3MMOsn7DV7g8+7y8s/zdX+D8rz2xe/5Vfobz
L4H99wnOByuf8hHOj0j0K9E48AHOh9EARKkvHA==
          "]], 
          0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBwAGIQjQokHNRucey7nbXT3vtds4fWWXEHS4+AVG+RM/YP
9mVdWtcv7rDzRKGnD991+92FW+b2uos76E96Hzl18wP7e2yJq459EXNol/5R
kdD1zN6jruBH5HQxh6SGS43t3G/tf11/1O6uL+aQmGBv1Sr9yf6L8I6I/j2i
DsF5dStK2L7Zmxl9yDK0F3XgyFrGPcntl/1+o+59uttFHPqOzrFQrPptH2Sj
4L+2W8TBiT0iv7Hzj71W8JNVU6NEHJT0b6zfVPLX3rX8+sVnyiIOOrayv7ZY
/7NftOLn4QXPhR1SDNX9Ou79s3d67tV4eKmwwwnub6t1Yv/bqxmf5vSPE3aI
ONMpvGj7f3u/nqpYZ0FhB7HiRy0v3v633/kpombBPiEHaMA4zJoJAoJw/qvJ
di8n2yH4ln2PLfoeCzgwQvldHSAgAJe/0aQLRAh+wK8l/r+W8MP5H96BAB+c
DzbOAsHXAxvAC+cbgwE3nH9RvfaSei0XnF8kc7xQ5jgn3D3CgiDACZffwBoN
RBxo7mGH89+D3cOG5h4EH+IeVjjfBOweZjj/Ctg9THB+Idg9jHD3CIHdwwiX
3wh2DwOcv+CL5/wvnv/tYfx7d0HgL5wvCzKu8A+cHwP20G84Pw0MvsH5i/1B
HvwC54O90/fZHuYeZSUQ+ASXT+TelsC97QOcb/8SFOHv4Pw9u0HgNZwPif8X
cD5IdwL3MzgfEl+P4fx5G7uv2+c/gPPP8XdPaVx+G+4e8ZyDYjkHr8HlJSt2
mdrrXILzV6S/efT1/Gk4fwooOb48DOc/eHntzwaPnXD+P60znXysK+B8KM0A
ACLbL/Q=
          "]], 0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-3., 6.}, {-3., 5.}}, 0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-3., 5.}, {-2., 4.}}, 0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-2., 4.}, {-1., 3.}}, 0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-1., 3.}, {0., 2.}}, 0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{0., 2.}, {1., 1.}}, 0.14587726239074741`]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{1., 1.}, {2., 0.}}, 0.14587726239074741`]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         TagBox[
          TooltipBox[
           {RGBColor[
             NCache[
              Rational[71, 255], 0.2784313725490196], 
             NCache[
              Rational[182, 255], 0.7137254901960784], 
             NCache[
              Rational[109, 255], 0.42745098039215684`]], EdgeForm[None], 
            PolygonBox[{{-0.13729617830787408`, 5.954234655856463}, {0., 
             5.862703821692126}, {0.13729617830787408`, 5.954234655856463}, {
             0.13729617830787408`, 6.137296178307874}, {-0.13729617830787408`,
              6.137296178307874}, {-0.13729617830787408`, 
             5.954234655856463}}]},
           TagBox[
            GridBox[{{"\"Axiom 1\""}, {
               RowBox[{"odd", "\[Equal]", 
                 RowBox[{"poop", "[", 
                   RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]],
          Annotation[#, 
           
           Column[{"Axiom 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
         InsetBox["\<\"Axiom 1\"\>", Offset[{0, 2}, {0., 6.145877262390748}], 
          ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          TooltipBox[
           {RGBColor[
             NCache[
              Rational[146, 255], 0.5725490196078431], 
             NCache[
              Rational[10, 17], 0.5882352941176471], 0], EdgeForm[None], 
            PolygonBox[{{-3., 5.8369602776889815`}, {-2.836960277688981, 
             6.}, {-3., 6.1630397223110185`}, {-3.163039722311019, 6.}, {-3., 
             5.8369602776889815`}}]},
           TagBox[
            GridBox[{{"\"Hypothesis 1\""}, {
               RowBox[{"odd", "\[Equal]", 
                 RowBox[{"poop", "[", 
                   RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]],
          Annotation[#, 
           
           Column[{"Hypothesis 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
               $CellContext`poop[$CellContext`even, 
                $CellContext`poop[$CellContext`even, 
                 $CellContext`poop[$CellContext`even, 
                  $CellContext`poop[$CellContext`even, 
                   $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]]]}], "Tooltip"]& ], 
         InsetBox["\<\"Hypothesis 1\"\>", 
          Offset[{0, 2}, {-3., 6.145877262390748}], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          TooltipBox[
           {RGBColor[
             NCache[
              Rational[15, 17], 0.8823529411764706], 
             NCache[
              Rational[52, 85], 0.611764705882353], 
             NCache[
              Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
            DiskBox[{-3., 5.}, 0.14587726239074741]},
           TagBox[
            GridBox[{{"\"Substitution Lemma 1\""}, {
               RowBox[{"odd", "\[Equal]", 
                 RowBox[{"poop", "[", 
                   RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]],
          Annotation[#, 
           
           Column[{"Substitution Lemma 1", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
               $CellContext`poop[$CellContext`even, 
                $CellContext`poop[$CellContext`even, 
                 $CellContext`poop[$CellContext`even, 
                  $CellContext`poop[$CellContext`even, \
$CellContext`odd]]]]]}], "Tooltip"]& ], 
         InsetBox["\<\"Substitution Lemma 1\"\>", 
          Offset[{0, 2}, {-3., 5.145877262390748}], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          TooltipBox[
           {RGBColor[
             NCache[
              Rational[15, 17], 0.8823529411764706], 
             NCache[
              Rational[52, 85], 0.611764705882353], 
             NCache[
              Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
            DiskBox[{-2., 4.}, 0.14587726239074741]},
           TagBox[
            GridBox[{{"\"Substitution Lemma 2\""}, {
               RowBox[{"odd", "\[Equal]", 
                 RowBox[{"poop", "[", 
                   RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}], 
                   "]"}]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]],
          Annotation[#, 
           
           Column[{"Substitution Lemma 2", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
               $CellContext`poop[$CellContext`even, 
                $CellContext`poop[$CellContext`even, 
                 $CellContext`poop[$CellContext`even, $CellContext`odd]]]]}], 
           "Tooltip"]& ], 
         InsetBox["\<\"Substitution Lemma 2\"\>", 
          Offset[{0, 2}, {-2., 4.145877262390748}], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          TooltipBox[
           {RGBColor[
             NCache[
              Rational[15, 17], 0.8823529411764706], 
             NCache[
              Rational[52, 85], 0.611764705882353], 
             NCache[
              Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
            DiskBox[{-1., 3.}, 0.14587726239074741]},
           TagBox[
            GridBox[{{"\"Substitution Lemma 3\""}, {
               RowBox[{"odd", "\[Equal]", 
                 RowBox[{"poop", "[", 
                   RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}], "]"}]}]}},
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]],
          Annotation[#, 
           
           Column[{"Substitution Lemma 3", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
               $CellContext`poop[$CellContext`even, 
                $CellContext`poop[$CellContext`even, $CellContext`odd]]]}], 
           "Tooltip"]& ], 
         InsetBox["\<\"Substitution Lemma 3\"\>", 
          Offset[{0, 2}, {-1., 3.1458772623907474}], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          TooltipBox[
           {RGBColor[
             NCache[
              Rational[15, 17], 0.8823529411764706], 
             NCache[
              Rational[52, 85], 0.611764705882353], 
             NCache[
              Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
            DiskBox[{0., 2.}, 0.14587726239074741]},
           TagBox[
            GridBox[{{"\"Substitution Lemma 4\""}, {
               RowBox[{"odd", "\[Equal]", 
                 RowBox[{"poop", "[", 
                   RowBox[{"even", ",", 
                    RowBox[{"poop", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}], "]"}]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]],
          Annotation[#, 
           
           Column[{"Substitution Lemma 4", $CellContext`odd == \
$CellContext`poop[$CellContext`even, 
               $CellContext`poop[$CellContext`even, $CellContext`odd]]}], 
           "Tooltip"]& ], 
         InsetBox["\<\"Substitution Lemma 4\"\>", 
          Offset[{0, 2}, {0., 2.1458772623907474}], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          TooltipBox[
           {RGBColor[
             NCache[
              Rational[15, 17], 0.8823529411764706], 
             NCache[
              Rational[52, 85], 0.611764705882353], 
             NCache[
              Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
            DiskBox[{1., 1.}, 0.14587726239074741]},
           TagBox[
            GridBox[{{"\"Substitution Lemma 5\""}, {
               RowBox[{"odd", "\[Equal]", 
                 RowBox[{"poop", "[", 
                   RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]],
          Annotation[#, 
           
           Column[{"Substitution Lemma 5", $CellContext`odd == \
$CellContext`poop[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
         InsetBox["\<\"Substitution Lemma 5\"\>", 
          Offset[{0, 2}, {1., 1.1458772623907474}], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          TooltipBox[
           {RGBColor[
             NCache[
              Rational[13, 15], 0.8666666666666667], 
             NCache[
              Rational[1, 15], 0.06666666666666667], 0], EdgeForm[None], 
            RectangleBox[{1.871284759897737, -0.12871524010226315}, \
{2.128715240102263, 0.12871524010226315}]},
           TagBox[
            
            GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]],
          Annotation[#, 
           Column[{"Conclusion 1", True}], "Tooltip"]& ], 
         InsetBox["\<\"Conclusion 1\"\>", 
          Offset[{0, -2}, {2., -0.14587726239074741}], ImageScaled[{0.5, 1}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8008910248743267`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"7316973e-0f37-4a8c-a6c8-091895a79ff6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ForAll", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"add", "[", 
       RowBox[{
        RowBox[{"mult", "[", 
         RowBox[{"even", ",", "x"}], "]"}], ",", "odd"}], "]"}], "\[Equal]", 
      "even"}]}], "]"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ForAll", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"mult", "[", 
         RowBox[{"even", ",", "x"}], "]"}], "\[Equal]", "even"}]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"add", "[", 
       RowBox[{"even", ",", "odd"}], "]"}], "\[Equal]", "even"}]}], 
    "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800891387900573*^9, 3.80089138863453*^9}, {
  3.800891457259364*^9, 3.800891500107122*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"47c6a688-982e-4e8e-9f67-b4c2378ccfca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProofObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 0.5}, {1., 0.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {1., 0.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 1.}, {1., 0.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 0.5}, {1., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 0.5}, 0.033036990164056895`], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", $CellContext`even == \
$CellContext`add[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.033036990164056895`], 
                 TagBox[
                  GridBox[{{"\"Axiom 2\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"mult", "[", 
                    RowBox[{"even", ",", "x1"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 2", $CellContext`even == \
$CellContext`mult[$CellContext`even, $CellContext`x1]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 1.}, 0.033036990164056895`], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"even", ",", "x"}], "]"}], ",", "odd"}], 
                    "]"}]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Hypothesis 1", $CellContext`even == $CellContext`add[
                    $CellContext`mult[$CellContext`even, $CellContext`x], \
$CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.5}, 0.033036990164056895`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 1", $CellContext`even == \
$CellContext`add[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.}, 0.033036990164056895`], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"even", ",", "x"}], "]"}], ",", "odd"}], "]"}], 
                    "\[Equal]", "even"}]}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 0.5}, {1., 0.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {1., 0.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 1.}, {1., 0.5}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 0.5}, {1., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 0.5}, 0.033036990164056895`], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", $CellContext`even == \
$CellContext`add[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.033036990164056895`], 
                 TagBox[
                  GridBox[{{"\"Axiom 2\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"mult", "[", 
                    RowBox[{"even", ",", "x1"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 2", $CellContext`even == \
$CellContext`mult[$CellContext`even, $CellContext`x1]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 1.}, 0.033036990164056895`], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"even", ",", "x"}], "]"}], ",", "odd"}], 
                    "]"}]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Hypothesis 1", $CellContext`even == $CellContext`add[
                    $CellContext`mult[$CellContext`even, $CellContext`x], \
$CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.5}, 0.033036990164056895`], 
                 TagBox[
                  GridBox[{{"\"Substitution Lemma 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{"even", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Substitution Lemma 1", $CellContext`even == \
$CellContext`add[$CellContext`even, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.}, 0.033036990164056895`], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"even", ",", "x"}], "]"}], ",", "odd"}], "]"}], 
                    "\[Equal]", "even"}]}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"even", ",", "x"}], "]"}], "\[Equal]", "even"}]}], 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    RowBox[{
                    RowBox[{"add", "[", 
                    RowBox[{"even", ",", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}]}], 
                    "]"}], 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}]}]}], 
                   Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProofObject["EquationalLogic", 
   ForAll[$CellContext`x, $CellContext`add[
      $CellContext`mult[$CellContext`even, $CellContext`x], $CellContext`odd] == \
$CellContext`even], 
   And[
    ForAll[$CellContext`x, $CellContext`mult[$CellContext`even, \
$CellContext`x] == $CellContext`even], $CellContext`add[$CellContext`even, \
$CellContext`odd] == $CellContext`even], {{"Axiom", 1} -> 
    Association[
     "Statement" -> $CellContext`even == $CellContext`add[$CellContext`even, \
$CellContext`odd], "Proof" -> Association[]], {"Axiom", 2} -> 
    Association[
     "Statement" -> $CellContext`even == $CellContext`mult[$CellContext`even, \
$CellContext`x1], "Proof" -> Association[]], {"Hypothesis", 1} -> 
    Association["Statement" -> $CellContext`even == $CellContext`add[
         $CellContext`mult[$CellContext`even, $CellContext`x], \
$CellContext`odd], "Proof" -> Association[]], {"SubstitutionLemma", 1} -> 
    Association[
     "Statement" -> $CellContext`even == $CellContext`add[$CellContext`even, \
$CellContext`odd], "Proof" -> 
      Association[
       "Input" -> {"Hypothesis", 1}, "Position" -> {2, 1}, 
        "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`mult[$CellContext`even, 
           Pattern[$CellContext`x1, 
            Blank[]]] -> $CellContext`even), 
        "OutputExpression" -> $CellContext`even == \
$CellContext`add[$CellContext`even, $CellContext`odd]]], {"Conclusion", 1} -> 
    Association[
     "Statement" -> True, "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 1}, "Position" -> 2, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`add[$CellContext`even, $CellContext`odd] -> \
$CellContext`even), "OutputExpression" -> True]]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.80089146723449*^9, 3.800891500833869*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"e299d032-b4db-48b1-b239-1142f2552867"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{"lol", ",", 
   RowBox[{"{", "\[IndentingNewLine]", "lol", "\[IndentingNewLine]", "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.800892068717209*^9, 3.800892085546472*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"dbb57e69-4cd6-4925-8855-81fc318bcb1b"],

Cell[BoxData[
 TemplateBox[{
  "FindEquationalProof", "invs", 
   "\"Invalid specification of propositions \\!\\(\\*RowBox[{\\\"lol\\\"}]\\) \
and axioms \\!\\(\\*RowBox[{\\\"{\\\", \\\"lol\\\", \\\"}\\\"}]\\).\"", 2, 15,
    9, 17822207334271402157, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.800892085823629*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"400976e0-f0f3-47d3-a611-eff49498c64c"],

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", 
  RowBox[{"lol", ",", 
   RowBox[{"{", "lol", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.800892085836478*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"fd24f1b8-1425-4bf8-ab7b-c785e5668cd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"exist", "[", "lol", "]"}], "\[Equal]", "true"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"not", "[", 
      RowBox[{"exist", "[", "lol", "]"}], "]"}], "\[Equal]", "false"}], 
    "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800892091846038*^9, 3.800892120410056*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"4f27b978-15d4-4815-9cea-24aae4ebd2fc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"The proposition could not be reduced to True.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"PropositionFalse\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"The proposition could not be reduced to True.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"PropositionFalse\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure["PropositionFalse", 
   Association[
   "MessageTemplate" -> 
    TemplateObject[{"The proposition could not be reduced to True."}, 
      CombinerFunction -> StringJoin, InsertionFunction -> TextString], 
    "MessageParameters" -> Association[]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8008921210259323`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"344b4de6-73ff-438a-8897-75cbfed7f0b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"not", "[", 
    RowBox[{"exist", "[", "lol", "]"}], "]"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"exist", "[", "lol", "]"}], "\[IndentingNewLine]", "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.800892129609435*^9, 3.8008921393440037`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"6bc6b5a5-4986-40e4-8cbe-6b5bbaae06f0"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.800892148864415*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"dc6e8d21-31b9-415f-a9d2-ddeb2522300c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"not", "[", 
     RowBox[{"exist", "[", "lol", "]"}], "]"}], "\[Equal]", "false"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"exist", "[", "lol", "]"}], "\[Equal]", "true"}], 
    "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.80089215237177*^9, 3.8008921562041483`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"9e0f2a27-efd5-42a6-926e-ad52b37ad799"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"The proposition could not be reduced to True.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"PropositionFalse\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"The proposition could not be reduced to True.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"PropositionFalse\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure["PropositionFalse", 
   Association[
   "MessageTemplate" -> 
    TemplateObject[{"The proposition could not be reduced to True."}, 
      CombinerFunction -> StringJoin, InsertionFunction -> TextString], 
    "MessageParameters" -> Association[]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.800892156828021*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"814f03f0-1fad-4025-b129-b97728956538"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ForAll", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{
      RowBox[{"not", "[", 
       RowBox[{"or", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "]"}], "\[Equal]", 
      RowBox[{"and", "[", 
       RowBox[{
        RowBox[{"not", "[", "a", "]"}], ",", 
        RowBox[{"not", "[", "b", "]"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.800892284704771*^9, 3.800892320578033*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"6b1c57af-3576-4452-b9a5-05b685287fe8"],

Cell[BoxData[
 TemplateBox[{
  "FindEquationalProof", "invs", 
   "\"Invalid specification of propositions \
\\!\\(\\*RowBox[{SubscriptBox[\\\"\[ForAll]\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\"}], \\\"}\\\"}]], \
RowBox[{RowBox[{\\\"not\\\", \\\"[\\\", RowBox[{\\\"or\\\", \\\"[\\\", \
RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", RowBox[{\\\"and\\\", \\\"[\\\", RowBox[{RowBox[{\\\"not\\\", \\\
\"[\\\", \\\"a\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"not\\\", \\\"[\\\", \
\\\"b\\\", \\\"]\\\"}]}], \\\"]\\\"}]}]}]\\) and axioms \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\).\"", 2, 19, 10, 
   17822207334271402157, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.800892321546492*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"8bca4b0f-616e-4505-b05d-6c6421c11148"],

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}]], 
    RowBox[{
     RowBox[{"not", "[", 
      RowBox[{"or", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "]"}], "\[Equal]", 
     RowBox[{"and", "[", 
      RowBox[{
       RowBox[{"not", "[", "a", "]"}], ",", 
       RowBox[{"not", "[", "b", "]"}]}], "]"}]}]}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.800892321559394*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"666d30ee-cc89-4e6e-8cb9-92c75bba5536"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AxiomaticTheory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.800892912481124*^9, 3.80089291488725*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"9c56cc67-cfb2-4d74-8de9-32bbb4f00cfd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AbelianGroupAxioms\"\>", 
   ",", "\<\"AbelianHigmanNeumannAxioms\"\>", 
   ",", "\<\"AbelianMcCuneAxioms\"\>", ",", "\<\"BooleanAxioms\"\>", 
   ",", "\<\"GroupAxioms\"\>", ",", "\<\"HigmanNeumannAxioms\"\>", 
   ",", "\<\"HillmanAxioms\"\>", ",", "\<\"HuntingtonAxioms\"\>", 
   ",", "\<\"McCuneAxioms\"\>", ",", "\<\"MeredithAxioms\"\>", 
   ",", "\<\"MonoidAxioms\"\>", ",", "\<\"RingAxioms\"\>", 
   ",", "\<\"RobbinsAxioms\"\>", ",", "\<\"SemigroupAxioms\"\>", 
   ",", "\<\"ShefferAxioms\"\>", ",", "\<\"WolframAlternateAxioms\"\>", 
   ",", "\<\"WolframAxioms\"\>", ",", "\<\"WolframCommutativeAxioms\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.800892915224536*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"4fabc360-e4db-412b-9139-48dbc3a77469"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AxiomaticTheory", "[", "\"\<BooleanAxioms\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.800892925718244*^9, 3.800892926667602*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9bf522e6-048d-420a-a729-33527cf38674"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[Equal]", 
     RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
     RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{"\[FormalB]", "\[CirclePlus]", 
        OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
     "\[FormalA]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CirclePlus]", 
      RowBox[{"\[FormalB]", "\[CircleTimes]", 
       OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", "\[FormalA]"}]}], 
   ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[CirclePlus]", 
      RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalC]"}]}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CirclePlus]", 
      RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
      "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8008929288624477`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"e5df60a3-c43b-4918-8131-e882a02874e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AxiomaticTheory", "[", "\"\<BooleanAxioms\>\"", "]"}], "[", "lol", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8008929368975163`*^9, 3.8008929394425488`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"a5f5ee77-66c4-47a7-9b76-9c01e4f93224"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[Equal]", 
      RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], ",", 
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
      RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ",", 
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CircleTimes]", 
       RowBox[{"(", 
        RowBox[{"\[FormalB]", "\[CirclePlus]", 
         OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
      "\[FormalA]"}]}], ",", 
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CirclePlus]", 
       RowBox[{"\[FormalB]", "\[CircleTimes]", 
        OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", "\[FormalA]"}]}], 
    ",", 
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CircleTimes]", 
       RowBox[{"(", 
        RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
       "\[CirclePlus]", 
       RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalC]"}]}]}]}], ",", 
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CirclePlus]", 
       RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
       "\[CircleTimes]", 
       RowBox[{"(", 
        RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}]}]}]}], 
   "}"}], "[", "lol", "]"}]], "Output",
 CellChangeTimes->{3.80089293968508*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"a84a266d-6ecc-42d0-a34d-a168b887a0ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AxiomaticTheory", "[", "\"\<BooleanAxioms\>\"", "]"}], "[", 
  RowBox[{"[", "lol", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.80089294464821*^9, 3.800892945398053*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"6c740af0-9f74-4354-9646-98bb96128002"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"lol\\\"}]\\) cannot be used as a \
part specification.\"", 2, 23, 11, 17822207334271402157, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8008929456564903`*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"5f0dd1d5-fef8-4ede-bb0c-a03ccb822ed1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[Equal]", 
      RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], ",", 
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
      RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ",", 
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CircleTimes]", 
       RowBox[{"(", 
        RowBox[{"\[FormalB]", "\[CirclePlus]", 
         OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
      "\[FormalA]"}]}], ",", 
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CirclePlus]", 
       RowBox[{"\[FormalB]", "\[CircleTimes]", 
        OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", "\[FormalA]"}]}], 
    ",", 
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CircleTimes]", 
       RowBox[{"(", 
        RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
       "\[CirclePlus]", 
       RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalC]"}]}]}]}], ",", 
    RowBox[{
     SubscriptBox["\[ForAll]", 
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CirclePlus]", 
       RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
       "\[CircleTimes]", 
       RowBox[{"(", 
        RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}]}]}]}], 
   "}"}], "\[LeftDoubleBracket]", "lol", "\[RightDoubleBracket]"}]], "Output",\

 CellChangeTimes->{3.8008929456678257`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"c6f050ff-a603-41ea-9a37-2af08f11b6ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "lol", "]"}], "]"}], "&"}], "\[IndentingNewLine]", ",", 
   RowBox[{"AxiomaticTheory", "[", "\"\<BooleanAxioms\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8008929567179337`*^9, 3.800893012132621*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"7e3e4664-c1fb-43fc-8e5a-d88202384377"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"lol\\\"}]\\) cannot be used as a \
part specification.\"", 2, 26, 12, 17822207334271402157, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8008930123905153`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"5649d2c8-87bb-4262-8f3d-36f75438d7a4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"lol\\\"}]\\) cannot be used as a \
part specification.\"", 2, 26, 13, 17822207334271402157, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.800893012404232*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"6a1f965d-d1a8-4522-aea6-0068db3c893d"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{\\\"lol\\\"}]\\) cannot be used as a \
part specification.\"", 2, 26, 14, 17822207334271402157, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.80089301241214*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"80c2b719-62be-47c3-953e-1f68bd92712b"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"pkspec1\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 26, 15, 17822207334271402157, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8008930124204283`*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"ac3520ba-0272-45f9-b230-7b6d5ac65733"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[Equal]", 
       RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], ")"}], 
    "\[LeftDoubleBracket]", "lol", "\[RightDoubleBracket]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
       RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ")"}], 
    "\[LeftDoubleBracket]", "lol", "\[RightDoubleBracket]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", 
        RowBox[{"(", 
         RowBox[{"\[FormalB]", "\[CirclePlus]", 
          OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
       "\[FormalA]"}]}], ")"}], "\[LeftDoubleBracket]", "lol", 
    "\[RightDoubleBracket]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CirclePlus]", 
        RowBox[{"\[FormalB]", "\[CircleTimes]", 
         OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", "\[FormalA]"}]}], 
     ")"}], "\[LeftDoubleBracket]", "lol", "\[RightDoubleBracket]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
      
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", 
        RowBox[{"(", 
         RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
       "\[Equal]", 
       RowBox[{
        RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
        "\[CirclePlus]", 
        RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalC]"}]}]}]}], ")"}], 
    "\[LeftDoubleBracket]", "lol", "\[RightDoubleBracket]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
      
      RowBox[{
       RowBox[{"\[FormalA]", "\[CirclePlus]", 
        RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], "\[Equal]", 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
        "\[CircleTimes]", 
        RowBox[{"(", 
         RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}]}]}], 
     ")"}], "\[LeftDoubleBracket]", "lol", "\[RightDoubleBracket]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.800893005129767*^9, 3.8008930124304543`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"a3525355-512b-4961-a88e-7d40477e3227"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"AxiomaticTheory", "[", 
  RowBox[{"\"\<BooleanAxioms\>\"", ",", "\"\<Axioms\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.800893031008253*^9, 3.800893036490388*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"18c6a42d-d54b-497a-8dfe-4f631e1da8a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[Equal]", 
     RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
     RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{"\[FormalB]", "\[CirclePlus]", 
        OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
     "\[FormalA]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CirclePlus]", 
      RowBox[{"\[FormalB]", "\[CircleTimes]", 
       OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", "\[FormalA]"}]}], 
   ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[CirclePlus]", 
      RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalC]"}]}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CirclePlus]", 
      RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
      "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}]}]}]}], 
  "}"}]], "Input",
 CellChangeTimes->{3.8008930414910603`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"dc8c7d94-9de6-477a-9fbd-eac044f131b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AxiomaticTheory", "[", 
  RowBox[{"\"\<BooleanAxioms\>\"", ",", "\"\<Properties\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.800893043236211*^9, 3.8008930438273087`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"16ec00ff-d282-427f-9fcd-3e789e38f0ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Axioms\"\>", ",", "\<\"EquivalentTheories\"\>", 
   ",", "\<\"NotableTheorems\"\>", ",", "\<\"OperatorArities\"\>", 
   ",", "\<\"Operators\"\>", ",", "\<\"Properties\"\>", 
   ",", "\<\"Subtheories\"\>", ",", "\<\"Supertheories\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.80089304405709*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"df4b26ec-4949-4635-a55a-ad829e1368e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"AxiomaticTheory", "[", 
        RowBox[{"\"\<BooleanAxioms\>\"", ",", "#"}], "]"}]}], "}"}], "&"}], 
    ",", 
    RowBox[{"AxiomaticTheory", "[", 
     RowBox[{"\"\<BooleanAxioms\>\"", ",", "\"\<Properties\>\""}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.800893053008112*^9, 3.800893091288258*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"8d0721b3-8c55-4d83-8fad-695ec1e448ed"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Axioms\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[ForAll]", 
         RowBox[{"{", 
          RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
        RowBox[{
         RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[Equal]", 
         RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], ",", 
       RowBox[{
        SubscriptBox["\[ForAll]", 
         RowBox[{"{", 
          RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
        RowBox[{
         RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
         RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ",", 
       RowBox[{
        SubscriptBox["\[ForAll]", 
         RowBox[{"{", 
          RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
        RowBox[{
         RowBox[{"\[FormalA]", "\[CircleTimes]", 
          RowBox[{"(", 
           RowBox[{"\[FormalB]", "\[CirclePlus]", 
            OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
         "\[FormalA]"}]}], ",", 
       RowBox[{
        SubscriptBox["\[ForAll]", 
         RowBox[{"{", 
          RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
        RowBox[{
         RowBox[{"\[FormalA]", "\[CirclePlus]", 
          RowBox[{"\[FormalB]", "\[CircleTimes]", 
           OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", "\[FormalA]"}]}],
        ",", 
       RowBox[{
        SubscriptBox["\[ForAll]", 
         RowBox[{"{", 
          RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
          "}"}]], 
        RowBox[{
         RowBox[{"\[FormalA]", "\[CircleTimes]", 
          RowBox[{"(", 
           RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
         "\[Equal]", 
         RowBox[{
          RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
          "\[CirclePlus]", 
          RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalC]"}]}]}]}], ",", 
       RowBox[{
        SubscriptBox["\[ForAll]", 
         RowBox[{"{", 
          RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
          "}"}]], 
        RowBox[{
         RowBox[{"\[FormalA]", "\[CirclePlus]", 
          RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], 
         "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
          "\[CircleTimes]", 
          RowBox[{"(", 
           RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], 
           ")"}]}]}]}]}], "}"}]},
    {"\<\"EquivalentTheories\"\>", 
     RowBox[{"{", 
      RowBox[{"\<\"HuntingtonAxioms\"\>", ",", "\<\"RobbinsAxioms\"\>", 
       ",", "\<\"ShefferAxioms\"\>", ",", "\<\"HillmanAxioms\"\>", 
       ",", "\<\"MeredithAxioms\"\>", ",", "\<\"WolframAxioms\"\>", 
       ",", "\<\"WolframAlternateAxioms\"\>", 
       ",", "\<\"WolframCommutativeAxioms\"\>"}], "}"}]},
    {"\<\"NotableTheorems\"\>", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"ImpliesHuntingtonAxioms\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[ForAll]", 
            RowBox[{"{", 
             RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
           RowBox[{
            RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
            RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ",", 
          RowBox[{
           SubscriptBox["\[ForAll]", 
            RowBox[{"{", 
             RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
             "}"}]], 
           RowBox[{
            RowBox[{"\[FormalA]", "\[CirclePlus]", 
             RowBox[{"(", 
              RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
            "\[Equal]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
             "\[CirclePlus]", "\[FormalC]"}]}]}], ",", 
          RowBox[{
           SubscriptBox["\[ForAll]", 
            RowBox[{"{", 
             RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
           RowBox[{
            RowBox[{
             OverscriptBox[
              RowBox[{
               OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
               "\[FormalB]"}], "_"], "\[CirclePlus]", 
             OverscriptBox[
              RowBox[{
               OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
               OverscriptBox["\[FormalB]", "_"]}], "_"]}], "\[Equal]", 
            "\[FormalA]"}]}]}], "}"}]}], ",", 
       RowBox[{"\<\"ImpliesRobbinsAxioms\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[ForAll]", 
            RowBox[{"{", 
             RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
           RowBox[{
            RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
            RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ",", 
          RowBox[{
           SubscriptBox["\[ForAll]", 
            RowBox[{"{", 
             RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
             "}"}]], 
           RowBox[{
            RowBox[{"\[FormalA]", "\[CirclePlus]", 
             RowBox[{"(", 
              RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
            "\[Equal]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
             "\[CirclePlus]", "\[FormalC]"}]}]}], ",", 
          RowBox[{
           SubscriptBox["\[ForAll]", 
            RowBox[{"{", 
             RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
           RowBox[{
            OverscriptBox[
             RowBox[{
              OverscriptBox[
               RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "_"], 
              "\[CirclePlus]", 
              OverscriptBox[
               RowBox[{"\[FormalA]", "\[CirclePlus]", 
                OverscriptBox["\[FormalB]", "_"]}], "_"]}], "_"], "\[Equal]", 
            "\[FormalA]"}]}]}], "}"}]}], ",", 
       RowBox[{"\<\"DoubleNegation\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[ForAll]", "\[FormalA]"], 
          RowBox[{
           OverscriptBox[
            OverscriptBox["\[FormalA]", "_"], "_"], "\[Equal]", 
           "\[FormalA]"}]}], "}"}]}], ",", 
       RowBox[{"\<\"DeMorgan\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[ForAll]", 
            RowBox[{"{", 
             RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
           RowBox[{
            OverscriptBox[
             RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "_"], 
            "\[Equal]", 
            RowBox[{
             OverscriptBox["\[FormalA]", "_"], "\[CircleTimes]", 
             OverscriptBox["\[FormalB]", "_"]}]}]}], ",", 
          RowBox[{
           SubscriptBox["\[ForAll]", 
            RowBox[{"{", 
             RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
           RowBox[{
            OverscriptBox[
             RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "_"], 
            "\[Equal]", 
            RowBox[{
             OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
             OverscriptBox["\[FormalB]", "_"]}]}]}]}], "}"}]}]}], 
      "\[RightAssociation]"}]},
    {"\<\"OperatorArities\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CircleTimes", "\[Rule]", "2"}], ",", 
       RowBox[{"CirclePlus", "\[Rule]", "2"}], ",", 
       RowBox[{"OverBar", "\[Rule]", "1"}]}], "}"}]},
    {"\<\"Operators\"\>", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"And\"\>", "\[Rule]", "CircleTimes"}], ",", 
       RowBox[{"\<\"Or\"\>", "\[Rule]", "CirclePlus"}], ",", 
       RowBox[{"\<\"Not\"\>", "\[Rule]", "OverBar"}]}], 
      "\[RightAssociation]"}]},
    {"\<\"Properties\"\>", 
     RowBox[{"{", 
      RowBox[{"\<\"Axioms\"\>", ",", "\<\"EquivalentTheories\"\>", 
       ",", "\<\"NotableTheorems\"\>", ",", "\<\"OperatorArities\"\>", 
       ",", "\<\"Operators\"\>", ",", "\<\"Properties\"\>", 
       ",", "\<\"Subtheories\"\>", ",", "\<\"Supertheories\"\>"}], "}"}]},
    {"\<\"Subtheories\"\>", 
     RowBox[{"{", "}"}]},
    {"\<\"Supertheories\"\>", 
     RowBox[{"{", "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8008930918818483`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"0d8cd87b-56e4-4c1b-9fd4-4a4fb702c8f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AxiomaticTheory", "[", "\"\<BooleanAxioms\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.800893153816626*^9, 3.800893156020982*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"043baa18-3a07-4756-a5e2-717393b1afd8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[Equal]", 
     RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
     RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{"\[FormalB]", "\[CirclePlus]", 
        OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
     "\[FormalA]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CirclePlus]", 
      RowBox[{"\[FormalB]", "\[CircleTimes]", 
       OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", "\[FormalA]"}]}], 
   ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[CirclePlus]", 
      RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalC]"}]}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
    RowBox[{
     RowBox[{"\[FormalA]", "\[CirclePlus]", 
      RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
      "\[CircleTimes]", 
      RowBox[{"(", 
       RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.800893156533183*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"8f2d300c-e8ec-4f65-b58e-f684acf97a8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     OverscriptBox[
      RowBox[{"(", 
       RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], ")"}], "_"], 
     "\[Equal]", 
     RowBox[{"(", 
      RowBox[{
       OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
       OverscriptBox["\[FormalB]", "_"]}], ")"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[Equal]", 
       RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
       RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", 
        RowBox[{"(", 
         RowBox[{"\[FormalB]", "\[CirclePlus]", 
          OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
       "\[FormalA]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CirclePlus]", 
        RowBox[{"\[FormalB]", "\[CircleTimes]", 
         OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", "\[FormalA]"}]}], 
     ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
      
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", 
        RowBox[{"(", 
         RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
       "\[Equal]", 
       RowBox[{
        RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
        "\[CirclePlus]", 
        RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalC]"}]}]}]}], ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
      
      RowBox[{
       RowBox[{"\[FormalA]", "\[CirclePlus]", 
        RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], "\[Equal]", 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
        "\[CircleTimes]", 
        RowBox[{"(", 
         RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}]}]}]}],
     "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8008931769031076`*^9, 3.800893285987082*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"ebf4f7dd-b846-4734-925c-0b7a22a04e54"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProofObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             
             GraphicsComplexBox[{{0., 4.}, {1., 5.}, {-1., 5.}, {-2., 1.}, {
              1., 4.}, {0., 3.}, {-1., 2.}, {0., 2.}, {-1., 1.}, {-1., 0.}}, {{
                GrayLevel[0.55], 
                LineBox[{1, 6}], 
                LineBox[{2, 5}], 
                LineBox[{3, 5}], 
                LineBox[{4, 10}], 
                LineBox[{5, 6}], 
                LineBox[{6, 7}], 
                LineBox[{6, 8}], 
                LineBox[{7, 9}], 
                LineBox[{8, 9}], 
                LineBox[{9, 10}], 
                LineBox[{3, 7}]}, {
                PointBox[1], 
                PointBox[2], 
                PointBox[3], 
                PointBox[4], 
                PointBox[5], 
                PointBox[6], 
                PointBox[7], 
                PointBox[8], 
                PointBox[9], 
                PointBox[10]}}], FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], PlotRange -> All, PlotRangeClipping -> True, 
             PlotRangePadding -> Scaled[0.1], Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["72", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    OverscriptBox[
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "_"], "\[Equal]", 
                    RowBox[{
                    OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
                    OverscriptBox["\[FormalB]", "_"]}]}]}], Short[#, 1]& ], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             
             GraphicsComplexBox[{{0., 4.}, {1., 5.}, {-1., 5.}, {-2., 1.}, {
              1., 4.}, {0., 3.}, {-1., 2.}, {0., 2.}, {-1., 1.}, {-1., 0.}}, {{
                GrayLevel[0.55], 
                LineBox[{1, 6}], 
                LineBox[{2, 5}], 
                LineBox[{3, 5}], 
                LineBox[{4, 10}], 
                LineBox[{5, 6}], 
                LineBox[{6, 7}], 
                LineBox[{6, 8}], 
                LineBox[{7, 9}], 
                LineBox[{8, 9}], 
                LineBox[{9, 10}], 
                LineBox[{3, 7}]}, {
                PointBox[1], 
                PointBox[2], 
                PointBox[3], 
                PointBox[4], 
                PointBox[5], 
                PointBox[6], 
                PointBox[7], 
                PointBox[8], 
                PointBox[9], 
                PointBox[10]}}], FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], PlotRange -> All, PlotRangeClipping -> True, 
             PlotRangePadding -> Scaled[0.1], Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["72", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    OverscriptBox[
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "_"], "\[Equal]", 
                    RowBox[{
                    OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
                    OverscriptBox["\[FormalB]", "_"]}]}]}], Short[#, 1]& ], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                   Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProofObject["EquationalLogic", 
   ForAll[{\[FormalA], \[FormalB]}, OverBar[
      CircleTimes[\[FormalA], \[FormalB]]] == CirclePlus[
      OverBar[\[FormalA]], 
      OverBar[\[FormalB]]]], 
   And[
    ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], \[FormalB]] == 
     CircleTimes[\[FormalB], \[FormalA]]], 
    ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], \[FormalB]] == 
     CirclePlus[\[FormalB], \[FormalA]]], 
    ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], 
       CirclePlus[\[FormalB], 
        OverBar[\[FormalB]]]] == \[FormalA]], 
    ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], 
       CircleTimes[\[FormalB], 
        OverBar[\[FormalB]]]] == \[FormalA]], 
    ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CircleTimes[\[FormalA], 
       CirclePlus[\[FormalB], \[FormalC]]] == CirclePlus[
       CircleTimes[\[FormalA], \[FormalB]], 
       CircleTimes[\[FormalA], \[FormalC]]]], 
    ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CirclePlus[\[FormalA], 
       CircleTimes[\[FormalB], \[FormalC]]] == CircleTimes[
       CirclePlus[\[FormalA], \[FormalB]], 
       CirclePlus[\[FormalA], \[FormalC]]]]], {{"Axiom", 1} -> 
    Association[
     "Statement" -> $CellContext`x1 == CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, 
          OverBar[$CellContext`x2]]], "Proof" -> Association[]], {"Axiom", 2} -> 
    Association["Statement" -> $CellContext`x1 == CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          OverBar[$CellContext`x2]]], "Proof" -> Association[]], {"Axiom", 3} -> 
    Association[
     "Statement" -> 
      CirclePlus[$CellContext`x1, $CellContext`x2] == 
       CirclePlus[$CellContext`x2, $CellContext`x1], "Proof" -> 
      Association[]], {"Axiom", 4} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, $CellContext`x3]] == CircleTimes[
         CirclePlus[$CellContext`x1, $CellContext`x2], 
         CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
      Association[]], {"Axiom", 5} -> Association["Statement" -> CirclePlus[
         CircleTimes[$CellContext`x1, $CellContext`x2], 
         CircleTimes[$CellContext`x1, $CellContext`x3]] == 
       CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, $CellContext`x3]], "Proof" -> 
      Association[]], {"Axiom", 6} -> 
    Association[
     "Statement" -> 
      CircleTimes[$CellContext`x1, $CellContext`x2] == 
       CircleTimes[$CellContext`x2, $CellContext`x1], "Proof" -> 
      Association[]], {"Hypothesis", 1} -> 
    Association["Statement" -> CirclePlus[
         OverBar[\[FormalA]], 
         OverBar[\[FormalB]]] == OverBar[
         CircleTimes[\[FormalA], \[FormalB]]], "Proof" -> Association[]], {
     "CriticalPairLemma", 1} -> Association["Statement" -> CirclePlus[
         CircleTimes[$CellContext`x1, 
          OverBar[$CellContext`x1]], $CellContext`x2] == $CellContext`x2, 
      "Proof" -> Association[
       "Construct" -> {"Axiom", 3}, "Orientation" -> {-1, 1}, "Rule" -> 
        TwoWayRule[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "Side" -> 1, "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CircleTimes[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 2} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, 
          OverBar[$CellContext`x1]]] == 
       CirclePlus[$CellContext`x1, $CellContext`x2], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
        "Subpattern" -> CircleTimes[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x3, 
            Blank[]]]], "MatchingConstruct" -> {"Axiom", 2}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 3} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, $CellContext`x3]] == CircleTimes[
         CirclePlus[$CellContext`x2, $CellContext`x1], 
         CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
        "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 3}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 4} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          OverBar[$CellContext`x1]]] == 
       CircleTimes[$CellContext`x1, $CellContext`x2], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 5}, "Orientation" -> 1, 
        "Rule" -> (CirclePlus[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CircleTimes[$CellContext`x1, 
           CirclePlus[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
        "Subpattern" -> CirclePlus[
          CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x3, 
            Blank[]]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CircleTimes[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 5} -> Association["Statement" -> CircleTimes[
         CirclePlus[$CellContext`x1, 
          OverBar[$CellContext`x1]], $CellContext`x2] == $CellContext`x2, 
      "Proof" -> Association[
       "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, "Rule" -> 
        TwoWayRule[
          CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CircleTimes[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "Side" -> 1, "Subpattern" -> CircleTimes[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 2}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 6} -> 
    Association[
     "Statement" -> 
      CircleTimes[$CellContext`x1, $CellContext`x2] == 
       CircleTimes[$CellContext`x1, 
         CirclePlus[
          OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 1}, "Orientation" -> 1, 
        "Rule" -> (CirclePlus[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> $CellContext`x2), "Side" -> 1, "Subpattern" -> 
        CirclePlus[
          CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 5}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CircleTimes[$CellContext`x1, 
           CirclePlus[$CellContext`x2, $CellContext`x3]]), "MatchingSide" -> 
        1]], {"CriticalPairLemma", 7} -> 
    Association[
     "Statement" -> 
      CirclePlus[$CellContext`x1, $CellContext`x2] == 
       CirclePlus[$CellContext`x1, 
         CircleTimes[
          OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 5}, "Orientation" -> 1, 
        "Rule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> $CellContext`x2), "Side" -> 1, "Subpattern" -> 
        CircleTimes[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 4}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), "MatchingSide" -> 
        1]], {"CriticalPairLemma", 8} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         OverBar[
          OverBar[$CellContext`x1]]] == $CellContext`x1, "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> CircleTimes[
          Pattern[$CellContext`x1, 
           Blank[]], 
          CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           Pattern[$CellContext`x2, 
            Blank[]]]], "MatchingConstruct" -> {"Axiom", 2}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 9} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         OverBar[
          OverBar[
           OverBar[$CellContext`x1]]]] == CirclePlus[$CellContext`x1, 
         OverBar[$CellContext`x1]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 7}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> CircleTimes[
          OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 8}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           OverBar[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 10} -> Association["Statement" -> CircleTimes[
         OverBar[
          OverBar[$CellContext`x1]], $CellContext`x1] == CircleTimes[
         OverBar[
          OverBar[$CellContext`x1]], 
         CirclePlus[$CellContext`x1, 
          OverBar[$CellContext`x1]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 4}, "Orientation" -> 1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x2, 
           Blank[]], 
          OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]]], "MatchingConstruct" -> {"CriticalPairLemma", 9}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           OverBar[
            OverBar[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]]] -> CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]]), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 1} -> Association["Statement" -> CircleTimes[
         OverBar[
          OverBar[$CellContext`x1]], $CellContext`x1] == OverBar[
         OverBar[$CellContext`x1]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 10}, "Position" -> 2, 
        "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> $CellContext`x1), "OutputExpression" -> 
        CircleTimes[
           OverBar[
            OverBar[$CellContext`x1]], $CellContext`x1] == OverBar[
           OverBar[$CellContext`x1]]]], {"SubstitutionLemma", 2} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         OverBar[
          OverBar[$CellContext`x1]]] == OverBar[
         OverBar[$CellContext`x1]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 1}, "Position" -> 1, 
        "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
        "OutputExpression" -> CircleTimes[$CellContext`x1, 
           OverBar[
            OverBar[$CellContext`x1]]] == OverBar[
           OverBar[$CellContext`x1]]]], {"SubstitutionLemma", 3} -> 
    Association["Statement" -> $CellContext`x1 == OverBar[
         OverBar[$CellContext`x1]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 2}, "Position" -> 1, 
        "Construct" -> {"CriticalPairLemma", 8}, "Orientation" -> 1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           OverBar[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]]] -> $CellContext`x1), 
        "OutputExpression" -> $CellContext`x1 == OverBar[
           OverBar[$CellContext`x1]]]], {"CriticalPairLemma", 11} -> 
    Association["Statement" -> CirclePlus[
         OverBar[$CellContext`x1], $CellContext`x2] == CirclePlus[
         OverBar[$CellContext`x1], 
         CircleTimes[$CellContext`x1, $CellContext`x2]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 7}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> OverBar[
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 3}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (OverBar[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 12} -> Association["Statement" -> CircleTimes[
         OverBar[$CellContext`x1], $CellContext`x2] == CircleTimes[
         OverBar[$CellContext`x1], 
         CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> OverBar[
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 3}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (OverBar[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 13} -> Association["Statement" -> CircleTimes[
         OverBar[$CellContext`x1], $CellContext`x2] == CircleTimes[
         OverBar[$CellContext`x1], 
         CirclePlus[$CellContext`x2, $CellContext`x1]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 4}, "Orientation" -> 1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> OverBar[
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 3}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (OverBar[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 14} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         CircleTimes[$CellContext`x1, $CellContext`x2]] == 
       CircleTimes[$CellContext`x1, 
         CirclePlus[
          OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> CirclePlus[
          OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 11}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]), "MatchingSide" -> 
        1]], {"SubstitutionLemma", 4} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         CircleTimes[$CellContext`x1, $CellContext`x2]] == 
       CircleTimes[$CellContext`x1, $CellContext`x2], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 14}, "Position" -> 2, 
        "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
        "OutputExpression" -> CircleTimes[$CellContext`x1, 
           CircleTimes[$CellContext`x1, $CellContext`x2]] == 
         CircleTimes[$CellContext`x1, $CellContext`x2]]], {
     "CriticalPairLemma", 15} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          CircleTimes[$CellContext`x1, $CellContext`x3]]] == CirclePlus[
         CircleTimes[$CellContext`x1, $CellContext`x2], 
         CircleTimes[$CellContext`x1, $CellContext`x3]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 5}, "Orientation" -> 1, 
        "Rule" -> (CirclePlus[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CircleTimes[$CellContext`x1, 
           CirclePlus[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
        "Subpattern" -> CircleTimes[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x3, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 4}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
        "MatchingSide" -> 1]], {"SubstitutionLemma", 5} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          CircleTimes[$CellContext`x1, $CellContext`x3]]] == 
       CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, $CellContext`x3]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 15}, "Position" -> 2, 
        "Construct" -> {"Axiom", 5}, "Orientation" -> 1, "Rule" -> (CirclePlus[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CircleTimes[$CellContext`x1, 
           CirclePlus[$CellContext`x2, $CellContext`x3]]), "OutputExpression" -> 
        CircleTimes[$CellContext`x1, 
           CirclePlus[$CellContext`x2, 
            CircleTimes[$CellContext`x1, $CellContext`x3]]] == 
         CircleTimes[$CellContext`x1, 
           CirclePlus[$CellContext`x2, $CellContext`x3]]]], {
     "CriticalPairLemma", 16} -> Association["Statement" -> CirclePlus[
         OverBar[
          OverBar[$CellContext`x1]], 
         CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
         OverBar[
          OverBar[$CellContext`x1]], 
         CircleTimes[
          OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 11}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]), "Side" -> 1, 
        "Subpattern" -> CircleTimes[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 12}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CircleTimes[
           OverBar[$CellContext`x1], $CellContext`x2]), "MatchingSide" -> 
        1]], {"SubstitutionLemma", 6} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
         OverBar[
          OverBar[$CellContext`x1]], 
         CircleTimes[
          OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 16}, "Position" -> {1, 1}, 
        "Construct" -> {"SubstitutionLemma", 3}, "Orientation" -> -1, 
        "Rule" -> (OverBar[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "OutputExpression" -> 
        CirclePlus[$CellContext`x1, 
           CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
           OverBar[
            OverBar[$CellContext`x1]], 
           CircleTimes[
            OverBar[$CellContext`x1], $CellContext`x2]]]], {
     "SubstitutionLemma", 7} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
         OverBar[
          OverBar[$CellContext`x1]], $CellContext`x2], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 6}, "Position" -> 2, 
        "Construct" -> {"CriticalPairLemma", 11}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]), "OutputExpression" -> 
        CirclePlus[$CellContext`x1, 
           CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
           OverBar[
            OverBar[$CellContext`x1]], $CellContext`x2]]], {
     "SubstitutionLemma", 8} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CirclePlus[$CellContext`x1, $CellContext`x2]] == 
       CirclePlus[$CellContext`x1, $CellContext`x2], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 7}, "Position" -> {2, 1}, 
        "Construct" -> {"SubstitutionLemma", 3}, "Orientation" -> -1, 
        "Rule" -> (OverBar[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "OutputExpression" -> 
        CirclePlus[$CellContext`x1, 
           CirclePlus[$CellContext`x1, $CellContext`x2]] == 
         CirclePlus[$CellContext`x1, $CellContext`x2]]], {
     "CriticalPairLemma", 17} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[
          CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3]] == 
       CircleTimes[
         CirclePlus[$CellContext`x1, $CellContext`x2], 
         CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
        "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 8}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
        "MatchingSide" -> 1]], {"SubstitutionLemma", 9} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[
          CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3]] == 
       CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, $CellContext`x3]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 17}, "Position" -> 2, 
        "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), 
        "OutputExpression" -> CirclePlus[$CellContext`x1, 
           CircleTimes[
            CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3]] == 
         CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]]], {
     "CriticalPairLemma", 18} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, 
          CirclePlus[$CellContext`x1, $CellContext`x3]]] == CircleTimes[
         CirclePlus[$CellContext`x1, $CellContext`x2], 
         CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
        "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x3, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 8}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
        "MatchingSide" -> 1]], {"SubstitutionLemma", 10} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, 
          CirclePlus[$CellContext`x1, $CellContext`x3]]] == 
       CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, $CellContext`x3]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 18}, "Position" -> 2, 
        "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), 
        "OutputExpression" -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, 
            CirclePlus[$CellContext`x1, $CellContext`x3]]] == 
         CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]]], {
     "CriticalPairLemma", 19} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          OverBar[$CellContext`x2]]] == CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, $CellContext`x1]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 5}, "Orientation" -> 1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]]] -> CircleTimes[$CellContext`x1, 
           CirclePlus[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
        "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x2, 
           Blank[]], 
          CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x3, 
            Blank[]]]], "MatchingConstruct" -> {"CriticalPairLemma", 2}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CircleTimes[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
        "MatchingSide" -> 1]], {"SubstitutionLemma", 11} -> 
    Association["Statement" -> $CellContext`x1 == CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, $CellContext`x1]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 19}, "Position" -> 1, 
        "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> $CellContext`x1), 
        "OutputExpression" -> $CellContext`x1 == 
         CircleTimes[$CellContext`x1, 
           CirclePlus[$CellContext`x2, $CellContext`x1]]]], {
     "CriticalPairLemma", 20} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         OverBar[$CellContext`x1]] == CirclePlus[$CellContext`x2, 
         CirclePlus[$CellContext`x1, 
          OverBar[$CellContext`x1]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 11}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "Side" -> 1, "Subpattern" -> 
        CircleTimes[
          Pattern[$CellContext`x1, 
           Blank[]], 
          CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "MatchingConstruct" -> {"CriticalPairLemma", 5}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> $CellContext`x2), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 21} -> 
    Association["Statement" -> $CellContext`x1 == CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 11}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "Side" -> 1, "Subpattern" -> 
        CirclePlus[
          Pattern[$CellContext`x2, 
           Blank[]], 
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 3}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 22} -> 
    Association["Statement" -> CirclePlus[
         OverBar[$CellContext`x1], 
         CirclePlus[$CellContext`x2, $CellContext`x1]] == CirclePlus[
         OverBar[$CellContext`x1], $CellContext`x1], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 11}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]), "Side" -> 1, 
        "Subpattern" -> CircleTimes[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 11}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 23} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CirclePlus[
          OverBar[$CellContext`x1], $CellContext`x2]] == 
       CirclePlus[$CellContext`x1, 
         OverBar[$CellContext`x1]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 7}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> CircleTimes[
          OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 21}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 12} -> Association["Statement" -> CirclePlus[
         OverBar[$CellContext`x1], 
         CirclePlus[$CellContext`x2, $CellContext`x1]] == 
       CirclePlus[$CellContext`x1, 
         OverBar[$CellContext`x1]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 22}, "Position" -> 2, 
        "Construct" -> {"Axiom", 3}, "Orientation" -> {-1, 1}, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
        "OutputExpression" -> CirclePlus[
           OverBar[$CellContext`x1], 
           CirclePlus[$CellContext`x2, $CellContext`x1]] == 
         CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]]]], {"CriticalPairLemma", 24} -> 
    Association["Statement" -> CirclePlus[
         CirclePlus[$CellContext`x1, $CellContext`x2], 
         OverBar[
          CirclePlus[$CellContext`x1, $CellContext`x2]]] == CirclePlus[
         OverBar[
          CirclePlus[$CellContext`x1, $CellContext`x2]], 
         CirclePlus[$CellContext`x2, 
          OverBar[$CellContext`x2]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 12}, "Orientation" -> 1, 
        "Rule" -> (CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]]), "Side" -> 1, "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x2, 
           Blank[]], 
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 12}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]]), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 13} -> Association["Statement" -> CirclePlus[
         CirclePlus[$CellContext`x1, $CellContext`x2], 
         OverBar[
          CirclePlus[$CellContext`x1, $CellContext`x2]]] == 
       CirclePlus[$CellContext`x2, 
         OverBar[$CellContext`x2]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 24}, "Position" -> 2, 
        "Construct" -> {"CriticalPairLemma", 20}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x2]]), "OutputExpression" -> CirclePlus[
           CirclePlus[$CellContext`x1, $CellContext`x2], 
           OverBar[
            CirclePlus[$CellContext`x1, $CellContext`x2]]] == 
         CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x2]]]], {"CriticalPairLemma", 25} -> 
    Association["Statement" -> CircleTimes[
         OverBar[
          CirclePlus[$CellContext`x1, $CellContext`x2]], 
         OverBar[$CellContext`x2]] == CircleTimes[
         OverBar[
          CirclePlus[$CellContext`x1, $CellContext`x2]], 
         CirclePlus[$CellContext`x2, 
          OverBar[$CellContext`x2]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 13}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]] -> CircleTimes[
           OverBar[$CellContext`x1], $CellContext`x2]), "Side" -> 1, 
        "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x2, 
           Blank[]], 
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 12}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]]), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 14} -> Association["Statement" -> CircleTimes[
         OverBar[
          CirclePlus[$CellContext`x1, $CellContext`x2]], 
         OverBar[$CellContext`x2]] == OverBar[
         CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 25}, "Position" -> 2, 
        "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> $CellContext`x1), "OutputExpression" -> 
        CircleTimes[
           OverBar[
            CirclePlus[$CellContext`x1, $CellContext`x2]], 
           OverBar[$CellContext`x2]] == OverBar[
           CirclePlus[$CellContext`x1, $CellContext`x2]]]], {
     "CriticalPairLemma", 26} -> Association["Statement" -> CircleTimes[
         OverBar[
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]], $CellContext`x1] == 
       CircleTimes[
         OverBar[
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]], 
         CirclePlus[$CellContext`x1, 
          OverBar[$CellContext`x1]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 13}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]] -> CircleTimes[
           OverBar[$CellContext`x1], $CellContext`x2]), "Side" -> 1, 
        "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x2, 
           Blank[]], 
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 23}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]]), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 15} -> Association["Statement" -> CircleTimes[
         OverBar[
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]], $CellContext`x1] == 
       OverBar[
         CirclePlus[
          OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 26}, "Position" -> 2, 
        "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> $CellContext`x1), "OutputExpression" -> 
        CircleTimes[
           OverBar[
            CirclePlus[
             OverBar[$CellContext`x1], $CellContext`x2]], $CellContext`x1] == 
         OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]]]], {
     "SubstitutionLemma", 16} -> Association["Statement" -> CircleTimes[
         OverBar[$CellContext`x1], 
         OverBar[
          CirclePlus[$CellContext`x2, $CellContext`x1]]] == OverBar[
         CirclePlus[$CellContext`x2, $CellContext`x1]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 14}, "Position" -> 1, 
        "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
        "OutputExpression" -> CircleTimes[
           OverBar[$CellContext`x1], 
           OverBar[
            CirclePlus[$CellContext`x2, $CellContext`x1]]] == OverBar[
           CirclePlus[$CellContext`x2, $CellContext`x1]]]], {
     "CriticalPairLemma", 27} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, 
          CirclePlus[$CellContext`x2, $CellContext`x3]]] == 
       CirclePlus[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          CircleTimes[$CellContext`x1, $CellContext`x3]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 9}, "Orientation" -> 1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
        "Subpattern" -> CircleTimes[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          Pattern[$CellContext`x3, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 3}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x2, 
           CircleTimes[$CellContext`x1, $CellContext`x3]]), "MatchingSide" -> 
        1]], {"SubstitutionLemma", 17} -> 
    Association[
     "Statement" -> 
      CirclePlus[$CellContext`x1, $CellContext`x2] == 
       CirclePlus[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          CircleTimes[$CellContext`x1, $CellContext`x3]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 27}, "Position" -> {1, 2}, 
        "Construct" -> {"CriticalPairLemma", 21}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> $CellContext`x1), "OutputExpression" -> 
        CirclePlus[$CellContext`x1, $CellContext`x2] == 
         CirclePlus[$CellContext`x1, 
           CirclePlus[$CellContext`x2, 
            CircleTimes[$CellContext`x1, $CellContext`x3]]]]], {
     "CriticalPairLemma", 28} -> 
    Association[
     "Statement" -> 
      CirclePlus[$CellContext`x1, $CellContext`x2] == 
       CirclePlus[$CellContext`x1, 
         CirclePlus[
          CircleTimes[$CellContext`x1, $CellContext`x3], $CellContext`x2]], 
      "Proof" -> Association[
       "Construct" -> {"SubstitutionLemma", 17}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x2, 
           Blank[]], 
          CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x3, 
            Blank[]]]], "MatchingConstruct" -> {"Axiom", 3}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 29} -> 
    Association[
     "Statement" -> 
      CirclePlus[$CellContext`x1, $CellContext`x2] == 
       CirclePlus[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          CircleTimes[$CellContext`x3, $CellContext`x1]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 17}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> CircleTimes[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x3, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 6}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CircleTimes[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 30} -> 
    Association[
     "Statement" -> 
      CirclePlus[$CellContext`x1, $CellContext`x2] == 
       CirclePlus[$CellContext`x1, 
         CirclePlus[
          CircleTimes[$CellContext`x3, $CellContext`x1], $CellContext`x2]], 
      "Proof" -> Association[
       "Construct" -> {"CriticalPairLemma", 28}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x3]), 
        "Side" -> 1, "Subpattern" -> CircleTimes[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 6}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CircleTimes[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 31} -> 
    Association["Statement" -> CirclePlus[
         CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
       CirclePlus[
         CirclePlus[$CellContext`x1, $CellContext`x2], 
         CirclePlus[$CellContext`x3, $CellContext`x1]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 29}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x3, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> CircleTimes[
          Pattern[$CellContext`x3, 
           Blank[]], 
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 21}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 32} -> Association["Statement" -> CirclePlus[
         CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
       CirclePlus[
         CirclePlus[$CellContext`x1, $CellContext`x2], 
         CirclePlus[$CellContext`x2, $CellContext`x3]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 30}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x3]), 
        "Side" -> 1, "Subpattern" -> CircleTimes[
          Pattern[$CellContext`x2, 
           Blank[]], 
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 11}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 18} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         OverBar[
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]]] == OverBar[
         CirclePlus[
          OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 15}, "Position" -> 1, 
        "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
        "OutputExpression" -> CircleTimes[$CellContext`x1, 
           OverBar[
            CirclePlus[
             OverBar[$CellContext`x1], $CellContext`x2]]] == OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]]]], {
     "CriticalPairLemma", 33} -> Association["Statement" -> CirclePlus[
         CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
       CirclePlus[
         CirclePlus[$CellContext`x3, $CellContext`x1], 
         CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 31}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x3, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]] -> CirclePlus[
           CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3]), 
        "Side" -> 1, "Subpattern" -> CirclePlus[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CirclePlus[
           Pattern[$CellContext`x3, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "MatchingConstruct" -> {"Axiom", 3}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "MatchingSide" -> 1]], {"SubstitutionLemma", 19} -> 
    Association["Statement" -> CirclePlus[
         CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
       CirclePlus[
         CirclePlus[$CellContext`x3, $CellContext`x1], $CellContext`x2], 
      "Proof" -> Association[
       "Input" -> {"CriticalPairLemma", 33}, "Position" -> 2, 
        "Construct" -> {"CriticalPairLemma", 32}, "Orientation" -> -1, 
        "Rule" -> (CirclePlus[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]] -> CirclePlus[
           CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3]), 
        "OutputExpression" -> CirclePlus[
           CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
         CirclePlus[
           CirclePlus[$CellContext`x3, $CellContext`x1], $CellContext`x2]]], {
     "CriticalPairLemma", 34} -> Association["Statement" -> CirclePlus[
         CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
       CirclePlus[$CellContext`x1, 
         CirclePlus[$CellContext`x2, $CellContext`x3]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 19}, "Orientation" -> {-1, 1}, 
        "Rule" -> TwoWayRule[
          CirclePlus[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           Pattern[$CellContext`x3, 
            Blank[]]], 
          CirclePlus[
           CirclePlus[
            Pattern[$CellContext`x3, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]], 
           Pattern[$CellContext`x2, 
            Blank[]]]], "Side" -> 1, "Subpattern" -> CirclePlus[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          Pattern[$CellContext`x3, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 3}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], 
          CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]]], "MatchingSide" -> 1]], {"SubstitutionLemma", 20} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          OverBar[
           CirclePlus[$CellContext`x1, $CellContext`x2]]]] == 
       CirclePlus[$CellContext`x2, 
         OverBar[$CellContext`x2]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 13}, "Position" -> 1, 
        "Construct" -> {"CriticalPairLemma", 34}, "Orientation" -> 1, 
        "Rule" -> (CirclePlus[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           Pattern[$CellContext`x3, 
            Blank[]]] -> CirclePlus[$CellContext`x1, 
           CirclePlus[$CellContext`x2, $CellContext`x3]]), "OutputExpression" -> 
        CirclePlus[$CellContext`x1, 
           CirclePlus[$CellContext`x2, 
            OverBar[
             CirclePlus[$CellContext`x1, $CellContext`x2]]]] == 
         CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x2]]]], {"CriticalPairLemma", 35} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]]]] == 
       CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          OverBar[$CellContext`x2]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
        "Side" -> 1, "Subpattern" -> CirclePlus[
          OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 20}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             CirclePlus[
              Pattern[$CellContext`x1, 
               Blank[]], 
              Pattern[$CellContext`x2, 
               Blank[]]]]]] -> CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x2]]), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 21} -> 
    Association["Statement" -> CircleTimes[$CellContext`x1, 
         CirclePlus[$CellContext`x2, 
          OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]]]] == $CellContext`x1, 
      "Proof" -> Association[
       "Input" -> {"CriticalPairLemma", 35}, "Position" -> 2, 
        "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> $CellContext`x1), "OutputExpression" -> 
        CircleTimes[$CellContext`x1, 
           CirclePlus[$CellContext`x2, 
            OverBar[
             CirclePlus[
              
              OverBar[$CellContext`x1], $CellContext`x2]]]] == \
$CellContext`x1]], {"CriticalPairLemma", 36} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         CircleTimes[$CellContext`x2, 
          OverBar[
           CirclePlus[
            OverBar[$CellContext`x2], $CellContext`x1]]]] == 
       CirclePlus[$CellContext`x1, $CellContext`x2], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 10}, "Orientation" -> 1, 
        "Rule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CircleTimes[
            Pattern[$CellContext`x2, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]]] -> CirclePlus[$CellContext`x1, 
           CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
        "Subpattern" -> CircleTimes[
          Pattern[$CellContext`x2, 
           Blank[]], 
          CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x3, 
            Blank[]]]], "MatchingConstruct" -> {"SubstitutionLemma", 21}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            OverBar[
             CirclePlus[
              OverBar[
               Pattern[$CellContext`x1, 
                Blank[]]], 
              Pattern[$CellContext`x2, 
               Blank[]]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 22} -> 
    Association["Statement" -> CirclePlus[$CellContext`x1, 
         OverBar[
          CirclePlus[
           OverBar[$CellContext`x2], $CellContext`x1]]] == 
       CirclePlus[$CellContext`x1, $CellContext`x2], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 36}, "Position" -> {1, 2}, 
        "Construct" -> {"SubstitutionLemma", 18}, "Orientation" -> 1, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           OverBar[
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]]] -> OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]]), "OutputExpression" -> 
        CirclePlus[$CellContext`x1, 
           OverBar[
            CirclePlus[
             OverBar[$CellContext`x2], $CellContext`x1]]] == 
         CirclePlus[$CellContext`x1, $CellContext`x2]]], {
     "CriticalPairLemma", 37} -> Association["Statement" -> CircleTimes[
         OverBar[$CellContext`x1], 
         OverBar[
          CirclePlus[
           OverBar[$CellContext`x2], $CellContext`x1]]] == CircleTimes[
         OverBar[$CellContext`x1], 
         CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 12}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CircleTimes[
           OverBar[$CellContext`x1], $CellContext`x2]), "Side" -> 1, 
        "Subpattern" -> CirclePlus[
          Pattern[$CellContext`x1, 
           Blank[]], 
          Pattern[$CellContext`x2, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 22}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           OverBar[
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]], 
             Pattern[$CellContext`x1, 
              Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
        "MatchingSide" -> 1]], {"SubstitutionLemma", 23} -> 
    Association["Statement" -> OverBar[
         CirclePlus[
          OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
         OverBar[$CellContext`x2], 
         CirclePlus[$CellContext`x2, $CellContext`x1]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 37}, "Position" -> 1, 
        "Construct" -> {"SubstitutionLemma", 16}, "Orientation" -> 1, 
        "Rule" -> (CircleTimes[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           OverBar[
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]]] -> OverBar[
           CirclePlus[$CellContext`x2, $CellContext`x1]]), "OutputExpression" -> 
        OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
           OverBar[$CellContext`x2], 
           CirclePlus[$CellContext`x2, $CellContext`x1]]]], {
     "SubstitutionLemma", 24} -> Association["Statement" -> OverBar[
         CirclePlus[
          OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
         OverBar[$CellContext`x2], $CellContext`x1], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 23}, "Position" -> 2, 
        "Construct" -> {"CriticalPairLemma", 12}, "Orientation" -> -1, 
        "Rule" -> (CircleTimes[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CircleTimes[
           OverBar[$CellContext`x1], $CellContext`x2]), "OutputExpression" -> 
        OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
           OverBar[$CellContext`x2], $CellContext`x1]]], {
     "CriticalPairLemma", 38} -> Association["Statement" -> CirclePlus[
         OverBar[$CellContext`x1], $CellContext`x2] == OverBar[
         CircleTimes[
          OverBar[$CellContext`x2], $CellContext`x1]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 3}, "Orientation" -> -1, 
        "Rule" -> (OverBar[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "Side" -> 1, "Subpattern" -> 
        OverBar[
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 24}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> (OverBar[
           CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CircleTimes[
           OverBar[$CellContext`x2], $CellContext`x1]), "MatchingSide" -> 
        1]], {"CriticalPairLemma", 39} -> 
    Association["Statement" -> CirclePlus[
         OverBar[$CellContext`x1], 
         OverBar[$CellContext`x2]] == OverBar[
         CircleTimes[$CellContext`x2, $CellContext`x1]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 38}, "Orientation" -> -1, 
        "Rule" -> (OverBar[
           CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]] -> CirclePlus[
           OverBar[$CellContext`x2], $CellContext`x1]), "Side" -> 1, 
        "Subpattern" -> OverBar[
          Pattern[$CellContext`x1, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 3}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> (OverBar[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 25} -> Association["Statement" -> CirclePlus[
         OverBar[\[FormalA]], 
         OverBar[\[FormalB]]] == OverBar[
         CircleTimes[\[FormalB], \[FormalA]]], "Proof" -> 
      Association[
       "Input" -> {"Hypothesis", 1}, "Position" -> {2, 1}, 
        "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
        "Rule" -> (CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
        "OutputExpression" -> CirclePlus[
           OverBar[\[FormalA]], 
           OverBar[\[FormalB]]] == OverBar[
           CircleTimes[\[FormalB], \[FormalA]]]]], {"Conclusion", 1} -> 
    Association[
     "Statement" -> True, "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 25}, "Position" -> 1, 
        "Construct" -> {"CriticalPairLemma", 39}, "Orientation" -> 1, 
        "Rule" -> (CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           OverBar[
            Pattern[$CellContext`x2, 
             Blank[]]]] -> OverBar[
           CircleTimes[$CellContext`x2, $CellContext`x1]]), 
        "OutputExpression" -> True]]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.800893291318337*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"1d09eaa7-e356-46c0-b76f-28d29e481646"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   RowBox[{
    TagBox["ProofObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[
              
              GraphicsComplexBox[{{0., 4.}, {1., 5.}, {-1., 5.}, {-2., 1.}, {
               1., 4.}, {0., 3.}, {-1., 2.}, {0., 2.}, {-1., 1.}, {-1., 
               0.}}, {{
                 GrayLevel[0.55], 
                 LineBox[{1, 6}], 
                 LineBox[{2, 5}], 
                 LineBox[{3, 5}], 
                 LineBox[{4, 10}], 
                 LineBox[{5, 6}], 
                 LineBox[{6, 7}], 
                 LineBox[{6, 8}], 
                 LineBox[{7, 9}], 
                 LineBox[{8, 9}], 
                 LineBox[{9, 10}], 
                 LineBox[{3, 7}]}, {
                 PointBox[1], 
                 PointBox[2], 
                 PointBox[3], 
                 PointBox[4], 
                 PointBox[5], 
                 PointBox[6], 
                 PointBox[7], 
                 PointBox[8], 
                 PointBox[9], 
                 PointBox[10]}}], FrameTicks -> None, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], PlotRange -> All, PlotRangeClipping -> True, 
              PlotRangePadding -> Scaled[0.1], Background -> GrayLevel[0.93], 
              Axes -> False, AspectRatio -> 1, ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], Frame -> True, 
              FrameTicks -> None, FrameStyle -> Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
                RowBox[{
                  TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["72", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    OverscriptBox[
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "_"], "\[Equal]", 
                    RowBox[{
                    OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
                    OverscriptBox["\[FormalB]", "_"]}]}]}], Short[#, 1]& ], 
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[
              
              GraphicsComplexBox[{{0., 4.}, {1., 5.}, {-1., 5.}, {-2., 1.}, {
               1., 4.}, {0., 3.}, {-1., 2.}, {0., 2.}, {-1., 1.}, {-1., 
               0.}}, {{
                 GrayLevel[0.55], 
                 LineBox[{1, 6}], 
                 LineBox[{2, 5}], 
                 LineBox[{3, 5}], 
                 LineBox[{4, 10}], 
                 LineBox[{5, 6}], 
                 LineBox[{6, 7}], 
                 LineBox[{6, 8}], 
                 LineBox[{7, 9}], 
                 LineBox[{8, 9}], 
                 LineBox[{9, 10}], 
                 LineBox[{3, 7}]}, {
                 PointBox[1], 
                 PointBox[2], 
                 PointBox[3], 
                 PointBox[4], 
                 PointBox[5], 
                 PointBox[6], 
                 PointBox[7], 
                 PointBox[8], 
                 PointBox[9], 
                 PointBox[10]}}], FrameTicks -> None, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], PlotRange -> All, PlotRangeClipping -> True, 
              PlotRangePadding -> Scaled[0.1], Background -> GrayLevel[0.93], 
              Axes -> False, AspectRatio -> 1, ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], Frame -> True, 
              FrameTicks -> None, FrameStyle -> Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
                RowBox[{
                  TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["72", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
                    RowBox[{
                    OverscriptBox[
                    RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                    "_"], "\[Equal]", 
                    RowBox[{
                    OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
                    OverscriptBox["\[FormalB]", "_"]}]}]}], Short[#, 1]& ], 
                   "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    Short[#, 1]& ], "SummaryItem"]}], "\[SpanFromLeft]"}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ProofObject["EquationalLogic", 
    ForAll[{\[FormalA], \[FormalB]}, OverBar[
       CircleTimes[\[FormalA], \[FormalB]]] == CirclePlus[
       OverBar[\[FormalA]], 
       OverBar[\[FormalB]]]], 
    And[
     ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], \[FormalB]] == 
      CircleTimes[\[FormalB], \[FormalA]]], 
     ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], \[FormalB]] == 
      CirclePlus[\[FormalB], \[FormalA]]], 
     ForAll[{\[FormalA], \[FormalB]}, CircleTimes[\[FormalA], 
        CirclePlus[\[FormalB], 
         OverBar[\[FormalB]]]] == \[FormalA]], 
     ForAll[{\[FormalA], \[FormalB]}, CirclePlus[\[FormalA], 
        CircleTimes[\[FormalB], 
         OverBar[\[FormalB]]]] == \[FormalA]], 
     ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CircleTimes[\[FormalA], 
        CirclePlus[\[FormalB], \[FormalC]]] == CirclePlus[
        CircleTimes[\[FormalA], \[FormalB]], 
        CircleTimes[\[FormalA], \[FormalC]]]], 
     ForAll[{\[FormalA], \[FormalB], \[FormalC]}, CirclePlus[\[FormalA], 
        CircleTimes[\[FormalB], \[FormalC]]] == CircleTimes[
        CirclePlus[\[FormalA], \[FormalB]], 
        CirclePlus[\[FormalA], \[FormalC]]]]], {{"Axiom", 1} -> 
     Association["Statement" -> $CellContext`x1 == CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           OverBar[$CellContext`x2]]], "Proof" -> Association[]], {
      "Axiom", 2} -> 
     Association[
      "Statement" -> $CellContext`x1 == CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x2]]], "Proof" -> Association[]], {
      "Axiom", 3} -> 
     Association[
      "Statement" -> 
       CirclePlus[$CellContext`x1, $CellContext`x2] == 
        CirclePlus[$CellContext`x2, $CellContext`x1], "Proof" -> 
       Association[]], {"Axiom", 4} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, $CellContext`x3]] == CircleTimes[
          CirclePlus[$CellContext`x1, $CellContext`x2], 
          CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
       Association[]], {"Axiom", 5} -> Association["Statement" -> CirclePlus[
          CircleTimes[$CellContext`x1, $CellContext`x2], 
          CircleTimes[$CellContext`x1, $CellContext`x3]] == 
        CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, $CellContext`x3]], "Proof" -> 
       Association[]], {"Axiom", 6} -> 
     Association[
      "Statement" -> 
       CircleTimes[$CellContext`x1, $CellContext`x2] == 
        CircleTimes[$CellContext`x2, $CellContext`x1], "Proof" -> 
       Association[]], {"Hypothesis", 1} -> 
     Association["Statement" -> CirclePlus[
          OverBar[\[FormalA]], 
          OverBar[\[FormalB]]] == OverBar[
          CircleTimes[\[FormalA], \[FormalB]]], "Proof" -> Association[]], {
      "CriticalPairLemma", 1} -> Association["Statement" -> CirclePlus[
          CircleTimes[$CellContext`x1, 
           OverBar[$CellContext`x1]], $CellContext`x2] == $CellContext`x2, 
       "Proof" -> Association[
        "Construct" -> {"Axiom", 3}, "Orientation" -> {-1, 1}, "Rule" -> 
         TwoWayRule[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "Side" -> 1, "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 2} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           OverBar[$CellContext`x1]]] == 
        CirclePlus[$CellContext`x1, $CellContext`x2], "Proof" -> 
       Association[
        "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]], "MatchingConstruct" -> {"Axiom", 2}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 3} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, $CellContext`x3]] == CircleTimes[
          CirclePlus[$CellContext`x2, $CellContext`x1], 
          CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
       Association[
        "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 3}, 
         "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 4} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x1]]] == 
        CircleTimes[$CellContext`x1, $CellContext`x2], "Proof" -> 
       Association[
        "Construct" -> {"Axiom", 5}, "Orientation" -> 1, "Rule" -> (CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CirclePlus[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]], "MatchingConstruct" -> {"Axiom", 1}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 5} -> Association["Statement" -> CircleTimes[
          CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]], $CellContext`x2] == $CellContext`x2, 
       "Proof" -> Association[
        "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, "Rule" -> 
         TwoWayRule[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "Side" -> 1, "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 2}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 6} -> 
     Association[
      "Statement" -> 
       CircleTimes[$CellContext`x1, $CellContext`x2] == 
        CircleTimes[$CellContext`x1, 
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 1}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> $CellContext`x2), "Side" -> 1, "Subpattern" -> 
         CirclePlus[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 5}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]), "MatchingSide" -> 
         1]], {"CriticalPairLemma", 7} -> 
     Association[
      "Statement" -> 
       CirclePlus[$CellContext`x1, $CellContext`x2] == 
        CirclePlus[$CellContext`x1, 
          CircleTimes[
           OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 5}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> $CellContext`x2), "Side" -> 1, "Subpattern" -> 
         CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 4}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "MatchingSide" -> 
         1]], {"CriticalPairLemma", 8} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          OverBar[
           OverBar[$CellContext`x1]]] == $CellContext`x1, "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]], "MatchingConstruct" -> {"Axiom", 2}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 9} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          OverBar[
           OverBar[
            OverBar[$CellContext`x1]]]] == CirclePlus[$CellContext`x1, 
          OverBar[$CellContext`x1]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 7}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CircleTimes[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 8}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 10} -> Association["Statement" -> CircleTimes[
          OverBar[
           OverBar[$CellContext`x1]], $CellContext`x1] == CircleTimes[
          OverBar[
           OverBar[$CellContext`x1]], 
          CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 4}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingConstruct" -> {"CriticalPairLemma", 9}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             OverBar[
              OverBar[
               Pattern[$CellContext`x1, 
                Blank[]]]]]] -> CirclePlus[$CellContext`x1, 
            OverBar[$CellContext`x1]]), "MatchingSide" -> 1]], {
      "SubstitutionLemma", 1} -> Association["Statement" -> CircleTimes[
          OverBar[
           OverBar[$CellContext`x1]], $CellContext`x1] == OverBar[
          OverBar[$CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 10}, "Position" -> 2, 
         "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "OutputExpression" -> 
         CircleTimes[
            OverBar[
             OverBar[$CellContext`x1]], $CellContext`x1] == OverBar[
            OverBar[$CellContext`x1]]]], {"SubstitutionLemma", 2} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          OverBar[
           OverBar[$CellContext`x1]]] == OverBar[
          OverBar[$CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 1}, "Position" -> 1, 
         "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CircleTimes[$CellContext`x1, 
            OverBar[
             OverBar[$CellContext`x1]]] == OverBar[
            OverBar[$CellContext`x1]]]], {"SubstitutionLemma", 3} -> 
     Association["Statement" -> $CellContext`x1 == OverBar[
          OverBar[$CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 2}, "Position" -> 1, 
         "Construct" -> {"CriticalPairLemma", 8}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> $CellContext`x1), 
         "OutputExpression" -> $CellContext`x1 == OverBar[
            OverBar[$CellContext`x1]]]], {"CriticalPairLemma", 11} -> 
     Association["Statement" -> CirclePlus[
          OverBar[$CellContext`x1], $CellContext`x2] == CirclePlus[
          OverBar[$CellContext`x1], 
          CircleTimes[$CellContext`x1, $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 7}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 3}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (OverBar[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 12} -> Association["Statement" -> CircleTimes[
          OverBar[$CellContext`x1], $CellContext`x2] == CircleTimes[
          OverBar[$CellContext`x1], 
          CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 3}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (OverBar[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 13} -> Association["Statement" -> CircleTimes[
          OverBar[$CellContext`x1], $CellContext`x2] == CircleTimes[
          OverBar[$CellContext`x1], 
          CirclePlus[$CellContext`x2, $CellContext`x1]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 4}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 3}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (OverBar[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 14} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CircleTimes[$CellContext`x1, $CellContext`x2]] == 
        CircleTimes[$CellContext`x1, 
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 11}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]), "MatchingSide" -> 
         1]], {"SubstitutionLemma", 4} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CircleTimes[$CellContext`x1, $CellContext`x2]] == 
        CircleTimes[$CellContext`x1, $CellContext`x2], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 14}, "Position" -> 2, 
         "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "OutputExpression" -> CircleTimes[$CellContext`x1, 
            CircleTimes[$CellContext`x1, $CellContext`x2]] == 
          CircleTimes[$CellContext`x1, $CellContext`x2]]], {
      "CriticalPairLemma", 15} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           CircleTimes[$CellContext`x1, $CellContext`x3]]] == CirclePlus[
          CircleTimes[$CellContext`x1, $CellContext`x2], 
          CircleTimes[$CellContext`x1, $CellContext`x3]], "Proof" -> 
       Association[
        "Construct" -> {"Axiom", 5}, "Orientation" -> 1, "Rule" -> (CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x3, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 4}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "MatchingSide" -> 1]], {"SubstitutionLemma", 5} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           CircleTimes[$CellContext`x1, $CellContext`x3]]] == 
        CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, $CellContext`x3]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 15}, "Position" -> 2, 
         "Construct" -> {"Axiom", 5}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]), 
         "OutputExpression" -> CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, 
             CircleTimes[$CellContext`x1, $CellContext`x3]]] == 
          CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]]], {
      "CriticalPairLemma", 16} -> Association["Statement" -> CirclePlus[
          OverBar[
           OverBar[$CellContext`x1]], 
          CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
          OverBar[
           OverBar[$CellContext`x1]], 
          CircleTimes[
           OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 11}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]), "Side" -> 1, 
         "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 12}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[
            OverBar[$CellContext`x1], $CellContext`x2]), "MatchingSide" -> 
         1]], {"SubstitutionLemma", 6} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
          OverBar[
           OverBar[$CellContext`x1]], 
          CircleTimes[
           OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 16}, "Position" -> {1, 1}, 
         "Construct" -> {"SubstitutionLemma", 3}, "Orientation" -> -1, 
         "Rule" -> (OverBar[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "OutputExpression" -> 
         CirclePlus[$CellContext`x1, 
            CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
            OverBar[
             OverBar[$CellContext`x1]], 
            CircleTimes[
             OverBar[$CellContext`x1], $CellContext`x2]]]], {
      "SubstitutionLemma", 7} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
          OverBar[
           OverBar[$CellContext`x1]], $CellContext`x2], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 6}, "Position" -> 2, 
         "Construct" -> {"CriticalPairLemma", 11}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]), "OutputExpression" -> 
         CirclePlus[$CellContext`x1, 
            CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
            OverBar[
             OverBar[$CellContext`x1]], $CellContext`x2]]], {
      "SubstitutionLemma", 8} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CirclePlus[$CellContext`x1, $CellContext`x2]] == 
        CirclePlus[$CellContext`x1, $CellContext`x2], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 7}, "Position" -> {2, 1}, 
         "Construct" -> {"SubstitutionLemma", 3}, "Orientation" -> -1, 
         "Rule" -> (OverBar[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "OutputExpression" -> 
         CirclePlus[$CellContext`x1, 
            CirclePlus[$CellContext`x1, $CellContext`x2]] == 
          CirclePlus[$CellContext`x1, $CellContext`x2]]], {
      "CriticalPairLemma", 17} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[
           CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3]] == 
        CircleTimes[
          CirclePlus[$CellContext`x1, $CellContext`x2], 
          CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
       Association[
        "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 8}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "MatchingSide" -> 1]], {"SubstitutionLemma", 9} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[
           CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3]] == 
        CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, $CellContext`x3]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 17}, "Position" -> 2, 
         "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), 
         "OutputExpression" -> CirclePlus[$CellContext`x1, 
            CircleTimes[
             CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3]] == 
          CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]]], {
      "CriticalPairLemma", 18} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           CirclePlus[$CellContext`x1, $CellContext`x3]]] == CircleTimes[
          CirclePlus[$CellContext`x1, $CellContext`x2], 
          CirclePlus[$CellContext`x1, $CellContext`x3]], "Proof" -> 
       Association[
        "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x3, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 8}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "MatchingSide" -> 1]], {"SubstitutionLemma", 10} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           CirclePlus[$CellContext`x1, $CellContext`x3]]] == 
        CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, $CellContext`x3]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 18}, "Position" -> 2, 
         "Construct" -> {"Axiom", 4}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), 
         "OutputExpression" -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, 
             CirclePlus[$CellContext`x1, $CellContext`x3]]] == 
          CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]]], {
      "CriticalPairLemma", 19} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x2]]] == CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, $CellContext`x1]], "Proof" -> 
       Association[
        "Construct" -> {"SubstitutionLemma", 5}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             CircleTimes[
              Pattern[$CellContext`x1, 
               Blank[]], 
              Pattern[$CellContext`x3, 
               Blank[]]]]] -> CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]], "MatchingConstruct" -> {"CriticalPairLemma", 2}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "MatchingSide" -> 1]], {"SubstitutionLemma", 11} -> 
     Association[
      "Statement" -> $CellContext`x1 == CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, $CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 19}, "Position" -> 1, 
         "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), 
         "OutputExpression" -> $CellContext`x1 == CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x1]]]], {
      "CriticalPairLemma", 20} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          OverBar[$CellContext`x1]] == CirclePlus[$CellContext`x2, 
          CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]]], "Proof" -> 
       Association[
        "Construct" -> {"SubstitutionLemma", 11}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "Side" -> 1, "Subpattern" -> 
         CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingConstruct" -> {"CriticalPairLemma", 5}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> $CellContext`x2), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 21} -> 
     Association[
      "Statement" -> $CellContext`x1 == CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"SubstitutionLemma", 11}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "Side" -> 1, "Subpattern" -> 
         CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 3}, 
         "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 22} -> 
     Association["Statement" -> CirclePlus[
          OverBar[$CellContext`x1], 
          CirclePlus[$CellContext`x2, $CellContext`x1]] == CirclePlus[
          OverBar[$CellContext`x1], $CellContext`x1], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 11}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CircleTimes[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]), "Side" -> 1, 
         "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 11}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 23} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]] == 
        CirclePlus[$CellContext`x1, 
          OverBar[$CellContext`x1]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 7}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CircleTimes[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 21}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "SubstitutionLemma", 12} -> Association["Statement" -> CirclePlus[
          OverBar[$CellContext`x1], 
          CirclePlus[$CellContext`x2, $CellContext`x1]] == 
        CirclePlus[$CellContext`x1, 
          OverBar[$CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 22}, "Position" -> 2, 
         "Construct" -> {"Axiom", 3}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CirclePlus[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CirclePlus[
            OverBar[$CellContext`x1], 
            CirclePlus[$CellContext`x2, $CellContext`x1]] == 
          CirclePlus[$CellContext`x1, 
            OverBar[$CellContext`x1]]]], {"CriticalPairLemma", 24} -> 
     Association["Statement" -> CirclePlus[
          CirclePlus[$CellContext`x1, $CellContext`x2], 
          OverBar[
           CirclePlus[$CellContext`x1, $CellContext`x2]]] == CirclePlus[
          OverBar[
           CirclePlus[$CellContext`x1, $CellContext`x2]], 
          CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x2]]], "Proof" -> 
       Association[
        "Construct" -> {"SubstitutionLemma", 12}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            OverBar[$CellContext`x1]]), "Side" -> 1, "Subpattern" -> 
         CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 12}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            OverBar[$CellContext`x1]]), "MatchingSide" -> 1]], {
      "SubstitutionLemma", 13} -> Association["Statement" -> CirclePlus[
          CirclePlus[$CellContext`x1, $CellContext`x2], 
          OverBar[
           CirclePlus[$CellContext`x1, $CellContext`x2]]] == 
        CirclePlus[$CellContext`x2, 
          OverBar[$CellContext`x2]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 24}, "Position" -> 2, 
         "Construct" -> {"CriticalPairLemma", 20}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> CirclePlus[$CellContext`x2, 
            OverBar[$CellContext`x2]]), "OutputExpression" -> CirclePlus[
            CirclePlus[$CellContext`x1, $CellContext`x2], 
            OverBar[
             CirclePlus[$CellContext`x1, $CellContext`x2]]] == 
          CirclePlus[$CellContext`x2, 
            OverBar[$CellContext`x2]]]], {"CriticalPairLemma", 25} -> 
     Association["Statement" -> CircleTimes[
          OverBar[
           CirclePlus[$CellContext`x1, $CellContext`x2]], 
          OverBar[$CellContext`x2]] == CircleTimes[
          OverBar[
           CirclePlus[$CellContext`x1, $CellContext`x2]], 
          CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x2]]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 13}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> CircleTimes[
            OverBar[$CellContext`x1], $CellContext`x2]), "Side" -> 1, 
         "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 12}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            OverBar[$CellContext`x1]]), "MatchingSide" -> 1]], {
      "SubstitutionLemma", 14} -> Association["Statement" -> CircleTimes[
          OverBar[
           CirclePlus[$CellContext`x1, $CellContext`x2]], 
          OverBar[$CellContext`x2]] == OverBar[
          CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 25}, "Position" -> 2, 
         "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "OutputExpression" -> 
         CircleTimes[
            OverBar[
             CirclePlus[$CellContext`x1, $CellContext`x2]], 
            OverBar[$CellContext`x2]] == OverBar[
            CirclePlus[$CellContext`x1, $CellContext`x2]]]], {
      "CriticalPairLemma", 26} -> Association["Statement" -> CircleTimes[
          OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]], $CellContext`x1] == 
        CircleTimes[
          OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]], 
          CirclePlus[$CellContext`x1, 
           OverBar[$CellContext`x1]]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 13}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> CircleTimes[
            OverBar[$CellContext`x1], $CellContext`x2]), "Side" -> 1, 
         "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 23}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            OverBar[$CellContext`x1]]), "MatchingSide" -> 1]], {
      "SubstitutionLemma", 15} -> Association["Statement" -> CircleTimes[
          OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]], $CellContext`x1] == 
        OverBar[
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 26}, "Position" -> 2, 
         "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "OutputExpression" -> 
         CircleTimes[
            OverBar[
             CirclePlus[
              OverBar[$CellContext`x1], $CellContext`x2]], $CellContext`x1] == 
          OverBar[
            CirclePlus[
             OverBar[$CellContext`x1], $CellContext`x2]]]], {
      "SubstitutionLemma", 16} -> Association["Statement" -> CircleTimes[
          OverBar[$CellContext`x1], 
          OverBar[
           CirclePlus[$CellContext`x2, $CellContext`x1]]] == OverBar[
          CirclePlus[$CellContext`x2, $CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 14}, "Position" -> 1, 
         "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CircleTimes[
            OverBar[$CellContext`x1], 
            OverBar[
             CirclePlus[$CellContext`x2, $CellContext`x1]]] == OverBar[
            CirclePlus[$CellContext`x2, $CellContext`x1]]]], {
      "CriticalPairLemma", 27} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           CirclePlus[$CellContext`x2, $CellContext`x3]]] == 
        CirclePlus[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           CircleTimes[$CellContext`x1, $CellContext`x3]]], "Proof" -> 
       Association[
        "Construct" -> {"SubstitutionLemma", 9}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             CirclePlus[
              Pattern[$CellContext`x1, 
               Blank[]], 
              Pattern[$CellContext`x2, 
               Blank[]]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CircleTimes[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           Pattern[$CellContext`x3, 
            Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 3}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x2, 
            CircleTimes[$CellContext`x1, $CellContext`x3]]), "MatchingSide" -> 
         1]], {"SubstitutionLemma", 17} -> 
     Association[
      "Statement" -> 
       CirclePlus[$CellContext`x1, $CellContext`x2] == 
        CirclePlus[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           CircleTimes[$CellContext`x1, $CellContext`x3]]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 27}, "Position" -> {1, 2}, 
         "Construct" -> {"CriticalPairLemma", 21}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> $CellContext`x1), "OutputExpression" -> 
         CirclePlus[$CellContext`x1, $CellContext`x2] == 
          CirclePlus[$CellContext`x1, 
            CirclePlus[$CellContext`x2, 
             CircleTimes[$CellContext`x1, $CellContext`x3]]]]], {
      "CriticalPairLemma", 28} -> 
     Association[
      "Statement" -> 
       CirclePlus[$CellContext`x1, $CellContext`x2] == 
        CirclePlus[$CellContext`x1, 
          CirclePlus[
           CircleTimes[$CellContext`x1, $CellContext`x3], $CellContext`x2]], 
       "Proof" -> Association[
        "Construct" -> {"SubstitutionLemma", 17}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             CircleTimes[
              Pattern[$CellContext`x1, 
               Blank[]], 
              Pattern[$CellContext`x3, 
               Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x2, 
            Blank[]], 
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]], "MatchingConstruct" -> {"Axiom", 3}, 
         "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 29} -> 
     Association[
      "Statement" -> 
       CirclePlus[$CellContext`x1, $CellContext`x2] == 
        CirclePlus[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           CircleTimes[$CellContext`x3, $CellContext`x1]]], "Proof" -> 
       Association[
        "Construct" -> {"SubstitutionLemma", 17}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             CircleTimes[
              Pattern[$CellContext`x1, 
               Blank[]], 
              Pattern[$CellContext`x3, 
               Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x3, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 6}, 
         "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 30} -> 
     Association[
      "Statement" -> 
       CirclePlus[$CellContext`x1, $CellContext`x2] == 
        CirclePlus[$CellContext`x1, 
          CirclePlus[
           CircleTimes[$CellContext`x3, $CellContext`x1], $CellContext`x2]], 
       "Proof" -> Association[
        "Construct" -> {"CriticalPairLemma", 28}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             CircleTimes[
              Pattern[$CellContext`x1, 
               Blank[]], 
              Pattern[$CellContext`x2, 
               Blank[]]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x3]), 
         "Side" -> 1, "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 6}, 
         "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
           CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CircleTimes[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 31} -> 
     Association["Statement" -> CirclePlus[
          CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
        CirclePlus[
          CirclePlus[$CellContext`x1, $CellContext`x2], 
          CirclePlus[$CellContext`x3, $CellContext`x1]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 29}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             CircleTimes[
              Pattern[$CellContext`x3, 
               Blank[]], 
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x3, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 21}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "CriticalPairLemma", 32} -> Association["Statement" -> CirclePlus[
          CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
        CirclePlus[
          CirclePlus[$CellContext`x1, $CellContext`x2], 
          CirclePlus[$CellContext`x2, $CellContext`x3]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 30}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             CircleTimes[
              Pattern[$CellContext`x2, 
               Blank[]], 
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[$CellContext`x1, $CellContext`x3]), 
         "Side" -> 1, "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x2, 
            Blank[]], 
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 11}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "SubstitutionLemma", 18} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          OverBar[
           CirclePlus[
            OverBar[$CellContext`x1], $CellContext`x2]]] == OverBar[
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 15}, "Position" -> 1, 
         "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CircleTimes[$CellContext`x1, 
            OverBar[
             CirclePlus[
              OverBar[$CellContext`x1], $CellContext`x2]]] == OverBar[
            CirclePlus[
             OverBar[$CellContext`x1], $CellContext`x2]]]], {
      "CriticalPairLemma", 33} -> Association["Statement" -> CirclePlus[
          CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
        CirclePlus[
          CirclePlus[$CellContext`x3, $CellContext`x1], 
          CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 31}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x3, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]]] -> CirclePlus[
            CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3]), 
         "Side" -> 1, "Subpattern" -> CirclePlus[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x3, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingConstruct" -> {"Axiom", 3}, 
         "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingSide" -> 1]], {"SubstitutionLemma", 19} -> 
     Association["Statement" -> CirclePlus[
          CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
        CirclePlus[
          CirclePlus[$CellContext`x3, $CellContext`x1], $CellContext`x2], 
       "Proof" -> Association[
        "Input" -> {"CriticalPairLemma", 33}, "Position" -> 2, 
         "Construct" -> {"CriticalPairLemma", 32}, "Orientation" -> -1, 
         "Rule" -> (CirclePlus[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             Pattern[$CellContext`x3, 
              Blank[]]]] -> CirclePlus[
            CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3]), 
         "OutputExpression" -> CirclePlus[
            CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
          CirclePlus[
            
            CirclePlus[$CellContext`x3, $CellContext`x1], $CellContext`x2]]], \
{"CriticalPairLemma", 34} -> Association["Statement" -> CirclePlus[
          CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
        CirclePlus[$CellContext`x1, 
          CirclePlus[$CellContext`x2, $CellContext`x3]], "Proof" -> 
       Association[
        "Construct" -> {"SubstitutionLemma", 19}, "Orientation" -> {-1, 1}, 
         "Rule" -> TwoWayRule[
           CirclePlus[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            Pattern[$CellContext`x3, 
             Blank[]]], 
           CirclePlus[
            CirclePlus[
             Pattern[$CellContext`x3, 
              Blank[]], 
             Pattern[$CellContext`x1, 
              Blank[]]], 
            Pattern[$CellContext`x2, 
             Blank[]]]], "Side" -> 1, "Subpattern" -> CirclePlus[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           Pattern[$CellContext`x3, 
            Blank[]]], "MatchingConstruct" -> {"Axiom", 3}, 
         "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]], 
           CirclePlus[
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`x1, 
             Blank[]]]], "MatchingSide" -> 1]], {"SubstitutionLemma", 20} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           OverBar[
            CirclePlus[$CellContext`x1, $CellContext`x2]]]] == 
        CirclePlus[$CellContext`x2, 
          OverBar[$CellContext`x2]], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 13}, "Position" -> 1, 
         "Construct" -> {"CriticalPairLemma", 34}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]], 
            Pattern[$CellContext`x3, 
             Blank[]]] -> CirclePlus[$CellContext`x1, 
            CirclePlus[$CellContext`x2, $CellContext`x3]]), 
         "OutputExpression" -> CirclePlus[$CellContext`x1, 
            CirclePlus[$CellContext`x2, 
             OverBar[
              CirclePlus[$CellContext`x1, $CellContext`x2]]]] == 
          CirclePlus[$CellContext`x2, 
            OverBar[$CellContext`x2]]]], {"CriticalPairLemma", 35} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           OverBar[
            CirclePlus[
             OverBar[$CellContext`x1], $CellContext`x2]]]] == 
        CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           OverBar[$CellContext`x2]]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[$CellContext`x1, $CellContext`x2]), 
         "Side" -> 1, "Subpattern" -> CirclePlus[
           OverBar[
            Pattern[$CellContext`x1, 
             Blank[]]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 20}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              CirclePlus[
               Pattern[$CellContext`x1, 
                Blank[]], 
               Pattern[$CellContext`x2, 
                Blank[]]]]]] -> CirclePlus[$CellContext`x2, 
            OverBar[$CellContext`x2]]), "MatchingSide" -> 1]], {
      "SubstitutionLemma", 21} -> 
     Association["Statement" -> CircleTimes[$CellContext`x1, 
          CirclePlus[$CellContext`x2, 
           OverBar[
            CirclePlus[
             OverBar[$CellContext`x1], $CellContext`x2]]]] == $CellContext`x1,
        "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 35}, "Position" -> 2, 
         "Construct" -> {"Axiom", 2}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> $CellContext`x1), "OutputExpression" -> 
         CircleTimes[$CellContext`x1, 
            CirclePlus[$CellContext`x2, 
             OverBar[
              CirclePlus[
               
               OverBar[$CellContext`x1], $CellContext`x2]]]] == \
$CellContext`x1]], {"CriticalPairLemma", 36} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          CircleTimes[$CellContext`x2, 
           OverBar[
            CirclePlus[
             OverBar[$CellContext`x2], $CellContext`x1]]]] == 
        CirclePlus[$CellContext`x1, $CellContext`x2], "Proof" -> 
       Association[
        "Construct" -> {"SubstitutionLemma", 10}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CircleTimes[
             Pattern[$CellContext`x2, 
              Blank[]], 
             CirclePlus[
              Pattern[$CellContext`x1, 
               Blank[]], 
              Pattern[$CellContext`x3, 
               Blank[]]]]] -> CirclePlus[$CellContext`x1, 
            CircleTimes[$CellContext`x2, $CellContext`x3]]), "Side" -> 1, 
         "Subpattern" -> CircleTimes[
           Pattern[$CellContext`x2, 
            Blank[]], 
           CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x3, 
             Blank[]]]], "MatchingConstruct" -> {"SubstitutionLemma", 21}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            CirclePlus[
             Pattern[$CellContext`x2, 
              Blank[]], 
             OverBar[
              CirclePlus[
               OverBar[
                Pattern[$CellContext`x1, 
                 Blank[]]], 
               Pattern[$CellContext`x2, 
                Blank[]]]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "SubstitutionLemma", 22} -> 
     Association["Statement" -> CirclePlus[$CellContext`x1, 
          OverBar[
           CirclePlus[
            OverBar[$CellContext`x2], $CellContext`x1]]] == 
        CirclePlus[$CellContext`x1, $CellContext`x2], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 36}, "Position" -> {1, 2}, 
         "Construct" -> {"SubstitutionLemma", 18}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             CirclePlus[
              OverBar[
               Pattern[$CellContext`x1, 
                Blank[]]], 
              Pattern[$CellContext`x2, 
               Blank[]]]]] -> OverBar[
            CirclePlus[
             OverBar[$CellContext`x1], $CellContext`x2]]), "OutputExpression" -> 
         CirclePlus[$CellContext`x1, 
            OverBar[
             CirclePlus[
              OverBar[$CellContext`x2], $CellContext`x1]]] == 
          CirclePlus[$CellContext`x1, $CellContext`x2]]], {
      "CriticalPairLemma", 37} -> Association["Statement" -> CircleTimes[
          OverBar[$CellContext`x1], 
          OverBar[
           CirclePlus[
            OverBar[$CellContext`x2], $CellContext`x1]]] == CircleTimes[
          OverBar[$CellContext`x1], 
          CirclePlus[$CellContext`x1, $CellContext`x2]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 12}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[
            OverBar[$CellContext`x1], $CellContext`x2]), "Side" -> 1, 
         "Subpattern" -> CirclePlus[
           Pattern[$CellContext`x1, 
            Blank[]], 
           Pattern[$CellContext`x2, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 22}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (CirclePlus[
            Pattern[$CellContext`x1, 
             Blank[]], 
            OverBar[
             CirclePlus[
              OverBar[
               Pattern[$CellContext`x2, 
                Blank[]]], 
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> CirclePlus[$CellContext`x1, $CellContext`x2]), 
         "MatchingSide" -> 1]], {"SubstitutionLemma", 23} -> 
     Association["Statement" -> OverBar[
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
          OverBar[$CellContext`x2], 
          CirclePlus[$CellContext`x2, $CellContext`x1]], "Proof" -> 
       Association[
        "Input" -> {"CriticalPairLemma", 37}, "Position" -> 1, 
         "Construct" -> {"SubstitutionLemma", 16}, "Orientation" -> 1, 
         "Rule" -> (CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            OverBar[
             CirclePlus[
              Pattern[$CellContext`x2, 
               Blank[]], 
              Pattern[$CellContext`x1, 
               Blank[]]]]] -> OverBar[
            CirclePlus[$CellContext`x2, $CellContext`x1]]), 
         "OutputExpression" -> OverBar[
            CirclePlus[
             OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
            OverBar[$CellContext`x2], 
            CirclePlus[$CellContext`x2, $CellContext`x1]]]], {
      "SubstitutionLemma", 24} -> Association["Statement" -> OverBar[
          CirclePlus[
           OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
          OverBar[$CellContext`x2], $CellContext`x1], "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 23}, "Position" -> 2, 
         "Construct" -> {"CriticalPairLemma", 12}, "Orientation" -> -1, 
         "Rule" -> (CircleTimes[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            CirclePlus[
             Pattern[$CellContext`x1, 
              Blank[]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[
            OverBar[$CellContext`x1], $CellContext`x2]), "OutputExpression" -> 
         OverBar[
            CirclePlus[
             OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
            OverBar[$CellContext`x2], $CellContext`x1]]], {
      "CriticalPairLemma", 38} -> Association["Statement" -> CirclePlus[
          OverBar[$CellContext`x1], $CellContext`x2] == OverBar[
          CircleTimes[
           OverBar[$CellContext`x2], $CellContext`x1]], "Proof" -> 
       Association[
        "Construct" -> {"SubstitutionLemma", 3}, "Orientation" -> -1, 
         "Rule" -> (OverBar[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "Side" -> 1, "Subpattern" -> 
         OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 24}, 
         "MatchingOrientation" -> 1, "MatchingRule" -> (OverBar[
            CirclePlus[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CircleTimes[
            OverBar[$CellContext`x2], $CellContext`x1]), "MatchingSide" -> 
         1]], {"CriticalPairLemma", 39} -> 
     Association["Statement" -> CirclePlus[
          OverBar[$CellContext`x1], 
          OverBar[$CellContext`x2]] == OverBar[
          CircleTimes[$CellContext`x2, $CellContext`x1]], "Proof" -> 
       Association[
        "Construct" -> {"CriticalPairLemma", 38}, "Orientation" -> -1, 
         "Rule" -> (OverBar[
            CircleTimes[
             OverBar[
              Pattern[$CellContext`x1, 
               Blank[]]], 
             Pattern[$CellContext`x2, 
              Blank[]]]] -> CirclePlus[
            OverBar[$CellContext`x2], $CellContext`x1]), "Side" -> 1, 
         "Subpattern" -> OverBar[
           Pattern[$CellContext`x1, 
            Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 3}, 
         "MatchingOrientation" -> -1, "MatchingRule" -> (OverBar[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]]] -> $CellContext`x1), "MatchingSide" -> 1]], {
      "SubstitutionLemma", 25} -> Association["Statement" -> CirclePlus[
          OverBar[\[FormalA]], 
          OverBar[\[FormalB]]] == OverBar[
          CircleTimes[\[FormalB], \[FormalA]]], "Proof" -> 
       Association[
        "Input" -> {"Hypothesis", 1}, "Position" -> {2, 1}, 
         "Construct" -> {"Axiom", 6}, "Orientation" -> {-1, 1}, 
         "Rule" -> (CircleTimes[
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`x2, 
             Blank[]]] -> CircleTimes[$CellContext`x2, $CellContext`x1]), 
         "OutputExpression" -> CirclePlus[
            OverBar[\[FormalA]], 
            OverBar[\[FormalB]]] == OverBar[
            CircleTimes[\[FormalB], \[FormalA]]]]], {"Conclusion", 1} -> 
     Association[
      "Statement" -> True, "Proof" -> 
       Association[
        "Input" -> {"SubstitutionLemma", 25}, "Position" -> 1, 
         "Construct" -> {"CriticalPairLemma", 39}, "Orientation" -> 1, 
         "Rule" -> (CirclePlus[
            OverBar[
             Pattern[$CellContext`x1, 
              Blank[]]], 
            OverBar[
             Pattern[$CellContext`x2, 
              Blank[]]]] -> OverBar[
            CircleTimes[$CellContext`x2, $CellContext`x1]]), 
         "OutputExpression" -> True]]}],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", "\"\<ProofGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.800893298268783*^9, 3.800893301904952*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"d099c3e9-30a8-4f30-9a53-b123b0f9cf71"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Axiom 1", "Axiom 2", "Axiom 3", "Axiom 4", "Axiom 5", "Axiom 6", 
       "Hypothesis 1", "Critical Pair Lemma 1", "Critical Pair Lemma 2", 
       "Critical Pair Lemma 3", "Critical Pair Lemma 4", 
       "Critical Pair Lemma 5", "Critical Pair Lemma 6", 
       "Critical Pair Lemma 7", "Critical Pair Lemma 8", 
       "Critical Pair Lemma 9", "Critical Pair Lemma 10", 
       "Substitution Lemma 1", "Substitution Lemma 2", "Substitution Lemma 3",
        "Critical Pair Lemma 11", "Critical Pair Lemma 12", 
       "Critical Pair Lemma 13", "Critical Pair Lemma 14", 
       "Substitution Lemma 4", "Critical Pair Lemma 15", 
       "Substitution Lemma 5", "Critical Pair Lemma 16", 
       "Substitution Lemma 6", "Substitution Lemma 7", "Substitution Lemma 8",
        "Critical Pair Lemma 17", "Substitution Lemma 9", 
       "Critical Pair Lemma 18", "Substitution Lemma 10", 
       "Critical Pair Lemma 19", "Substitution Lemma 11", 
       "Critical Pair Lemma 20", "Critical Pair Lemma 21", 
       "Critical Pair Lemma 22", "Critical Pair Lemma 23", 
       "Substitution Lemma 12", "Critical Pair Lemma 24", 
       "Substitution Lemma 13", "Critical Pair Lemma 25", 
       "Substitution Lemma 14", "Critical Pair Lemma 26", 
       "Substitution Lemma 15", "Substitution Lemma 16", 
       "Critical Pair Lemma 27", "Substitution Lemma 17", 
       "Critical Pair Lemma 28", "Critical Pair Lemma 29", 
       "Critical Pair Lemma 30", "Critical Pair Lemma 31", 
       "Critical Pair Lemma 32", "Substitution Lemma 18", 
       "Critical Pair Lemma 33", "Substitution Lemma 19", 
       "Critical Pair Lemma 34", "Substitution Lemma 20", 
       "Critical Pair Lemma 35", "Substitution Lemma 21", 
       "Critical Pair Lemma 36", "Substitution Lemma 22", 
       "Critical Pair Lemma 37", "Substitution Lemma 23", 
       "Substitution Lemma 24", "Critical Pair Lemma 38", 
       "Critical Pair Lemma 39", "Substitution Lemma 25", "Conclusion 1"}, {{{
       3, 8}, {1, 8}, {4, 9}, {2, 9}, {4, 10}, {3, 10}, {5, 11}, {1, 11}, {6, 
       12}, {2, 12}, {8, 13}, {5, 13}, {12, 14}, {4, 14}, {13, 15}, {2, 15}, {
       14, 16}, {15, 16}, {11, 17}, {16, 17}, {17, 18}, {2, 18}, {18, 19}, {6,
        19}, {19, 20}, {15, 20}, {14, 21}, {20, 21}, {13, 22}, {20, 22}, {11, 
       23}, {20, 23}, {13, 24}, {21, 24}, {24, 25}, {13, 25}, {5, 26}, {25, 
       26}, {26, 27}, {5, 27}, {21, 28}, {22, 28}, {28, 29}, {20, 29}, {29, 
       30}, {21, 30}, {30, 31}, {20, 31}, {4, 32}, {31, 32}, {32, 33}, {4, 
       33}, {4, 34}, {31, 34}, {34, 35}, {4, 35}, {27, 36}, {9, 36}, {36, 
       37}, {2, 37}, {37, 38}, {12, 38}, {37, 39}, {3, 39}, {21, 40}, {37, 
       40}, {14, 41}, {39, 41}, {40, 42}, {3, 42}, {42, 43}, {42, 43}, {43, 
       44}, {38, 44}, {23, 45}, {42, 45}, {45, 46}, {2, 46}, {23, 47}, {41, 
       47}, {47, 48}, {2, 48}, {46, 49}, {6, 49}, {33, 50}, {10, 50}, {50, 
       51}, {39, 51}, {51, 52}, {3, 52}, {51, 53}, {6, 53}, {52, 54}, {6, 
       54}, {53, 55}, {39, 55}, {54, 56}, {37, 56}, {48, 57}, {6, 57}, {55, 
       58}, {3, 58}, {58, 59}, {56, 59}, {59, 60}, {3, 60}, {44, 61}, {60, 
       61}, {13, 62}, {61, 62}, {62, 63}, {2, 63}, {35, 64}, {63, 64}, {64, 
       65}, {57, 65}, {22, 66}, {65, 66}, {66, 67}, {49, 67}, {67, 68}, {22, 
       68}, {20, 69}, {68, 69}, {69, 70}, {20, 70}, {7, 71}, {6, 71}, {71, 
       72}, {70, 72}}, Null}, {
      AnnotationRules -> {
        "Substitution Lemma 4" -> {
          Tooltip -> Column[{
             "Substitution Lemma 4", CircleTimes[$CellContext`x1, 
                CircleTimes[$CellContext`x1, $CellContext`x2]] == 
              CircleTimes[$CellContext`x1, $CellContext`x2]}]}, 
         "Substitution Lemma 24" -> {
          Tooltip -> Column[{"Substitution Lemma 24", OverBar[
                CirclePlus[
                 OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
                OverBar[$CellContext`x2], $CellContext`x1]}]}, 
         "Axiom 3" -> {
          Tooltip -> Column[{
             "Axiom 3", CirclePlus[$CellContext`x1, $CellContext`x2] == 
              CirclePlus[$CellContext`x2, $CellContext`x1]}]}, 
         "Critical Pair Lemma 11" -> {
          Tooltip -> Column[{"Critical Pair Lemma 11", CirclePlus[
                OverBar[$CellContext`x1], $CellContext`x2] == CirclePlus[
                OverBar[$CellContext`x1], 
                CircleTimes[$CellContext`x1, $CellContext`x2]]}]}, 
         "Substitution Lemma 18" -> {
          Tooltip -> Column[{
             "Substitution Lemma 18", CircleTimes[$CellContext`x1, 
                OverBar[
                 CirclePlus[
                  OverBar[$CellContext`x1], $CellContext`x2]]] == OverBar[
                CirclePlus[
                 OverBar[$CellContext`x1], $CellContext`x2]]}]}, 
         "Critical Pair Lemma 29" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 29", 
              CirclePlus[$CellContext`x1, $CellContext`x2] == 
              CirclePlus[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 CircleTimes[$CellContext`x3, $CellContext`x1]]]}]}, 
         "Critical Pair Lemma 37" -> {
          Tooltip -> Column[{"Critical Pair Lemma 37", CircleTimes[
                OverBar[$CellContext`x1], 
                OverBar[
                 CirclePlus[
                  OverBar[$CellContext`x2], $CellContext`x1]]] == 
              CircleTimes[
                OverBar[$CellContext`x1], 
                CirclePlus[$CellContext`x1, $CellContext`x2]]}]}, 
         "Substitution Lemma 17" -> {
          Tooltip -> Column[{
             "Substitution Lemma 17", 
              CirclePlus[$CellContext`x1, $CellContext`x2] == 
              CirclePlus[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 CircleTimes[$CellContext`x1, $CellContext`x3]]]}]}, 
         "Critical Pair Lemma 21" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 21", $CellContext`x1 == 
              CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x1, $CellContext`x2]]}]}, 
         "Substitution Lemma 6" -> {
          Tooltip -> Column[{
             "Substitution Lemma 6", CirclePlus[$CellContext`x1, 
                CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
                OverBar[
                 OverBar[$CellContext`x1]], 
                CircleTimes[
                 OverBar[$CellContext`x1], $CellContext`x2]]}]}, 
         "Critical Pair Lemma 30" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 30", 
              CirclePlus[$CellContext`x1, $CellContext`x2] == 
              CirclePlus[$CellContext`x1, 
                CirclePlus[
                 
                 CircleTimes[$CellContext`x3, $CellContext`x1], \
$CellContext`x2]]}]}, 
         "Axiom 1" -> {
          Tooltip -> Column[{
             "Axiom 1", $CellContext`x1 == CirclePlus[$CellContext`x1, 
                CircleTimes[$CellContext`x2, 
                 OverBar[$CellContext`x2]]]}]}, 
         "Substitution Lemma 3" -> {
          Tooltip -> Column[{
             "Substitution Lemma 3", $CellContext`x1 == OverBar[
                OverBar[$CellContext`x1]]}]}, 
         "Substitution Lemma 9" -> {
          Tooltip -> Column[{
             "Substitution Lemma 9", CirclePlus[$CellContext`x1, 
                CircleTimes[
                 
                 CirclePlus[$CellContext`x1, $CellContext`x2], \
$CellContext`x3]] == CirclePlus[$CellContext`x1, 
                CircleTimes[$CellContext`x2, $CellContext`x3]]}]}, 
         "Critical Pair Lemma 15" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 15", CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 CircleTimes[$CellContext`x1, $CellContext`x3]]] == CirclePlus[
                CircleTimes[$CellContext`x1, $CellContext`x2], 
                CircleTimes[$CellContext`x1, $CellContext`x3]]}]}, 
         "Critical Pair Lemma 7" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 7", 
              CirclePlus[$CellContext`x1, $CellContext`x2] == 
              CirclePlus[$CellContext`x1, 
                CircleTimes[
                 OverBar[$CellContext`x1], $CellContext`x2]]}]}, 
         "Substitution Lemma 19" -> {
          Tooltip -> Column[{"Substitution Lemma 19", CirclePlus[
                
                CirclePlus[$CellContext`x1, $CellContext`x2], \
$CellContext`x3] == CirclePlus[
                
                CirclePlus[$CellContext`x3, $CellContext`x1], \
$CellContext`x2]}]}, 
         "Critical Pair Lemma 14" -> {
          Tooltip -> 
           Column[{"Critical Pair Lemma 14", CircleTimes[$CellContext`x1, 
                CircleTimes[$CellContext`x1, $CellContext`x2]] == 
              CircleTimes[$CellContext`x1, 
                CirclePlus[
                 OverBar[$CellContext`x1], $CellContext`x2]]}]}, 
         "Critical Pair Lemma 22" -> {
          Tooltip -> Column[{"Critical Pair Lemma 22", CirclePlus[
                OverBar[$CellContext`x1], 
                CirclePlus[$CellContext`x2, $CellContext`x1]] == CirclePlus[
                OverBar[$CellContext`x1], $CellContext`x1]}]}, 
         "Critical Pair Lemma 6" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 6", 
              CircleTimes[$CellContext`x1, $CellContext`x2] == 
              CircleTimes[$CellContext`x1, 
                CirclePlus[
                 OverBar[$CellContext`x1], $CellContext`x2]]}]}, 
         "Critical Pair Lemma 3" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 3", CirclePlus[$CellContext`x1, 
                CircleTimes[$CellContext`x2, $CellContext`x3]] == 
              CircleTimes[
                CirclePlus[$CellContext`x2, $CellContext`x1], 
                CirclePlus[$CellContext`x1, $CellContext`x3]]}]}, 
         "Critical Pair Lemma 1" -> {
          Tooltip -> Column[{"Critical Pair Lemma 1", CirclePlus[
                CircleTimes[$CellContext`x1, 
                 
                 OverBar[$CellContext`x1]], $CellContext`x2] == \
$CellContext`x2}]}, 
         "Critical Pair Lemma 16" -> {
          Tooltip -> Column[{"Critical Pair Lemma 16", CirclePlus[
                OverBar[
                 OverBar[$CellContext`x1]], 
                CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
                OverBar[
                 OverBar[$CellContext`x1]], 
                CircleTimes[
                 OverBar[$CellContext`x1], $CellContext`x2]]}]}, 
         "Critical Pair Lemma 27" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 27", CirclePlus[$CellContext`x1, 
                CircleTimes[$CellContext`x2, 
                 CirclePlus[$CellContext`x2, $CellContext`x3]]] == 
              CirclePlus[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 CircleTimes[$CellContext`x1, $CellContext`x3]]]}]}, 
         "Critical Pair Lemma 26" -> {
          Tooltip -> Column[{"Critical Pair Lemma 26", CircleTimes[
                OverBar[
                 CirclePlus[
                  
                  OverBar[$CellContext`x1], $CellContext`x2]], \
$CellContext`x1] == CircleTimes[
                OverBar[
                 CirclePlus[
                  OverBar[$CellContext`x1], $CellContext`x2]], 
                CirclePlus[$CellContext`x1, 
                 OverBar[$CellContext`x1]]]}]}, 
         "Substitution Lemma 21" -> {
          Tooltip -> Column[{
             "Substitution Lemma 21", CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 OverBar[
                  CirclePlus[
                   
                   OverBar[$CellContext`x1], $CellContext`x2]]]] == \
$CellContext`x1}]}, 
         "Substitution Lemma 7" -> {
          Tooltip -> Column[{
             "Substitution Lemma 7", CirclePlus[$CellContext`x1, 
                CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
                OverBar[
                 OverBar[$CellContext`x1]], $CellContext`x2]}]}, 
         "Substitution Lemma 11" -> {
          Tooltip -> Column[{
             "Substitution Lemma 11", $CellContext`x1 == 
              CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, $CellContext`x1]]}]}, 
         "Critical Pair Lemma 5" -> {
          Tooltip -> Column[{"Critical Pair Lemma 5", CircleTimes[
                CirclePlus[$CellContext`x1, 
                 
                 OverBar[$CellContext`x1]], $CellContext`x2] == \
$CellContext`x2}]}, 
         "Critical Pair Lemma 23" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 23", CirclePlus[$CellContext`x1, 
                CirclePlus[
                 OverBar[$CellContext`x1], $CellContext`x2]] == 
              CirclePlus[$CellContext`x1, 
                OverBar[$CellContext`x1]]}]}, 
         "Substitution Lemma 2" -> {
          Tooltip -> Column[{
             "Substitution Lemma 2", CircleTimes[$CellContext`x1, 
                OverBar[
                 OverBar[$CellContext`x1]]] == OverBar[
                OverBar[$CellContext`x1]]}]}, 
         "Substitution Lemma 13" -> {
          Tooltip -> Column[{"Substitution Lemma 13", CirclePlus[
                CirclePlus[$CellContext`x1, $CellContext`x2], 
                OverBar[
                 CirclePlus[$CellContext`x1, $CellContext`x2]]] == 
              CirclePlus[$CellContext`x2, 
                OverBar[$CellContext`x2]]}]}, 
         "Critical Pair Lemma 10" -> {
          Tooltip -> Column[{"Critical Pair Lemma 10", CircleTimes[
                OverBar[
                 OverBar[$CellContext`x1]], $CellContext`x1] == CircleTimes[
                OverBar[
                 OverBar[$CellContext`x1]], 
                CirclePlus[$CellContext`x1, 
                 OverBar[$CellContext`x1]]]}]}, 
         "Axiom 2" -> {
          Tooltip -> Column[{
             "Axiom 2", $CellContext`x1 == CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 OverBar[$CellContext`x2]]]}]}, 
         "Substitution Lemma 1" -> {
          Tooltip -> Column[{"Substitution Lemma 1", CircleTimes[
                OverBar[
                 OverBar[$CellContext`x1]], $CellContext`x1] == OverBar[
                OverBar[$CellContext`x1]]}]}, 
         "Critical Pair Lemma 28" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 28", 
              CirclePlus[$CellContext`x1, $CellContext`x2] == 
              CirclePlus[$CellContext`x1, 
                CirclePlus[
                 
                 CircleTimes[$CellContext`x1, $CellContext`x3], \
$CellContext`x2]]}]}, 
         "Critical Pair Lemma 31" -> {
          Tooltip -> Column[{"Critical Pair Lemma 31", CirclePlus[
                
                CirclePlus[$CellContext`x1, $CellContext`x2], \
$CellContext`x3] == CirclePlus[
                CirclePlus[$CellContext`x1, $CellContext`x2], 
                CirclePlus[$CellContext`x3, $CellContext`x1]]}]}, 
         "Critical Pair Lemma 17" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 17", CirclePlus[$CellContext`x1, 
                CircleTimes[
                 
                 CirclePlus[$CellContext`x1, $CellContext`x2], \
$CellContext`x3]] == CircleTimes[
                CirclePlus[$CellContext`x1, $CellContext`x2], 
                CirclePlus[$CellContext`x1, $CellContext`x3]]}]}, 
         "Critical Pair Lemma 33" -> {
          Tooltip -> Column[{"Critical Pair Lemma 33", CirclePlus[
                
                CirclePlus[$CellContext`x1, $CellContext`x2], \
$CellContext`x3] == CirclePlus[
                CirclePlus[$CellContext`x3, $CellContext`x1], 
                CirclePlus[$CellContext`x1, $CellContext`x2]]}]}, 
         "Substitution Lemma 20" -> {
          Tooltip -> Column[{
             "Substitution Lemma 20", CirclePlus[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 OverBar[
                  CirclePlus[$CellContext`x1, $CellContext`x2]]]] == 
              CirclePlus[$CellContext`x2, 
                OverBar[$CellContext`x2]]}]}, 
         "Critical Pair Lemma 18" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 18", CirclePlus[$CellContext`x1, 
                CircleTimes[$CellContext`x2, 
                 CirclePlus[$CellContext`x1, $CellContext`x3]]] == CircleTimes[
                CirclePlus[$CellContext`x1, $CellContext`x2], 
                CirclePlus[$CellContext`x1, $CellContext`x3]]}]}, 
         "Critical Pair Lemma 32" -> {
          Tooltip -> Column[{"Critical Pair Lemma 32", CirclePlus[
                
                CirclePlus[$CellContext`x1, $CellContext`x2], \
$CellContext`x3] == CirclePlus[
                CirclePlus[$CellContext`x1, $CellContext`x2], 
                CirclePlus[$CellContext`x2, $CellContext`x3]]}]}, 
         "Substitution Lemma 22" -> {
          Tooltip -> Column[{
             "Substitution Lemma 22", CirclePlus[$CellContext`x1, 
                OverBar[
                 CirclePlus[
                  OverBar[$CellContext`x2], $CellContext`x1]]] == 
              CirclePlus[$CellContext`x1, $CellContext`x2]}]}, 
         "Axiom 4" -> {
          Tooltip -> Column[{"Axiom 4", CirclePlus[$CellContext`x1, 
                CircleTimes[$CellContext`x2, $CellContext`x3]] == 
              CircleTimes[
                CirclePlus[$CellContext`x1, $CellContext`x2], 
                CirclePlus[$CellContext`x1, $CellContext`x3]]}]}, 
         "Critical Pair Lemma 19" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 19", CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 OverBar[$CellContext`x2]]] == CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, $CellContext`x1]]}]}, 
         "Substitution Lemma 5" -> {
          Tooltip -> Column[{
             "Substitution Lemma 5", CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 CircleTimes[$CellContext`x1, $CellContext`x3]]] == 
              CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, $CellContext`x3]]}]}, 
         "Critical Pair Lemma 24" -> {
          Tooltip -> Column[{"Critical Pair Lemma 24", CirclePlus[
                CirclePlus[$CellContext`x1, $CellContext`x2], 
                OverBar[
                 CirclePlus[$CellContext`x1, $CellContext`x2]]] == 
              CirclePlus[
                OverBar[
                 CirclePlus[$CellContext`x1, $CellContext`x2]], 
                CirclePlus[$CellContext`x2, 
                 OverBar[$CellContext`x2]]]}]}, 
         "Critical Pair Lemma 36" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 36", CirclePlus[$CellContext`x1, 
                CircleTimes[$CellContext`x2, 
                 OverBar[
                  CirclePlus[
                   OverBar[$CellContext`x2], $CellContext`x1]]]] == 
              CirclePlus[$CellContext`x1, $CellContext`x2]}]}, 
         "Substitution Lemma 14" -> {
          Tooltip -> Column[{"Substitution Lemma 14", CircleTimes[
                OverBar[
                 CirclePlus[$CellContext`x1, $CellContext`x2]], 
                OverBar[$CellContext`x2]] == OverBar[
                CirclePlus[$CellContext`x1, $CellContext`x2]]}]}, 
         "Critical Pair Lemma 38" -> {
          Tooltip -> Column[{"Critical Pair Lemma 38", CirclePlus[
                OverBar[$CellContext`x1], $CellContext`x2] == OverBar[
                CircleTimes[
                 OverBar[$CellContext`x2], $CellContext`x1]]}]}, 
         "Conclusion 1" -> {Tooltip -> Column[{"Conclusion 1", True}]}, 
         "Substitution Lemma 25" -> {
          Tooltip -> Column[{"Substitution Lemma 25", CirclePlus[
                OverBar[\[FormalA]], 
                OverBar[\[FormalB]]] == OverBar[
                CircleTimes[\[FormalB], \[FormalA]]]}]}, 
         "Critical Pair Lemma 8" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 8", CircleTimes[$CellContext`x1, 
                OverBar[
                 OverBar[$CellContext`x1]]] == $CellContext`x1}]}, 
         "Critical Pair Lemma 20" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 20", CirclePlus[$CellContext`x1, 
                OverBar[$CellContext`x1]] == CirclePlus[$CellContext`x2, 
                CirclePlus[$CellContext`x1, 
                 OverBar[$CellContext`x1]]]}]}, 
         "Axiom 5" -> {Tooltip -> Column[{"Axiom 5", CirclePlus[
                CircleTimes[$CellContext`x1, $CellContext`x2], 
                CircleTimes[$CellContext`x1, $CellContext`x3]] == 
              CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, $CellContext`x3]]}]}, 
         "Critical Pair Lemma 13" -> {
          Tooltip -> Column[{"Critical Pair Lemma 13", CircleTimes[
                OverBar[$CellContext`x1], $CellContext`x2] == CircleTimes[
                OverBar[$CellContext`x1], 
                CirclePlus[$CellContext`x2, $CellContext`x1]]}]}, 
         "Critical Pair Lemma 35" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 35", CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 OverBar[
                  CirclePlus[
                   OverBar[$CellContext`x1], $CellContext`x2]]]] == 
              CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 OverBar[$CellContext`x2]]]}]}, 
         "Critical Pair Lemma 2" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 2", CirclePlus[$CellContext`x1, 
                CircleTimes[$CellContext`x2, 
                 OverBar[$CellContext`x1]]] == 
              CirclePlus[$CellContext`x1, $CellContext`x2]}]}, 
         "Axiom 6" -> {
          Tooltip -> Column[{
             "Axiom 6", CircleTimes[$CellContext`x1, $CellContext`x2] == 
              CircleTimes[$CellContext`x2, $CellContext`x1]}]}, 
         "Substitution Lemma 8" -> {
          Tooltip -> Column[{
             "Substitution Lemma 8", CirclePlus[$CellContext`x1, 
                CirclePlus[$CellContext`x1, $CellContext`x2]] == 
              CirclePlus[$CellContext`x1, $CellContext`x2]}]}, 
         "Critical Pair Lemma 39" -> {
          Tooltip -> Column[{"Critical Pair Lemma 39", CirclePlus[
                OverBar[$CellContext`x1], 
                OverBar[$CellContext`x2]] == OverBar[
                CircleTimes[$CellContext`x2, $CellContext`x1]]}]}, 
         "Critical Pair Lemma 4" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 4", CircleTimes[$CellContext`x1, 
                CirclePlus[$CellContext`x2, 
                 OverBar[$CellContext`x1]]] == 
              CircleTimes[$CellContext`x1, $CellContext`x2]}]}, 
         "Substitution Lemma 16" -> {
          Tooltip -> Column[{"Substitution Lemma 16", CircleTimes[
                OverBar[$CellContext`x1], 
                OverBar[
                 CirclePlus[$CellContext`x2, $CellContext`x1]]] == OverBar[
                CirclePlus[$CellContext`x2, $CellContext`x1]]}]}, 
         "Critical Pair Lemma 34" -> {
          Tooltip -> Column[{"Critical Pair Lemma 34", CirclePlus[
                
                CirclePlus[$CellContext`x1, $CellContext`x2], \
$CellContext`x3] == CirclePlus[$CellContext`x1, 
                CirclePlus[$CellContext`x2, $CellContext`x3]]}]}, 
         "Critical Pair Lemma 9" -> {
          Tooltip -> Column[{
             "Critical Pair Lemma 9", CirclePlus[$CellContext`x1, 
                OverBar[
                 OverBar[
                  OverBar[$CellContext`x1]]]] == CirclePlus[$CellContext`x1, 
                OverBar[$CellContext`x1]]}]}, 
         "Critical Pair Lemma 25" -> {
          Tooltip -> Column[{"Critical Pair Lemma 25", CircleTimes[
                OverBar[
                 CirclePlus[$CellContext`x1, $CellContext`x2]], 
                OverBar[$CellContext`x2]] == CircleTimes[
                OverBar[
                 CirclePlus[$CellContext`x1, $CellContext`x2]], 
                CirclePlus[$CellContext`x2, 
                 OverBar[$CellContext`x2]]]}]}, 
         "Substitution Lemma 12" -> {
          Tooltip -> Column[{"Substitution Lemma 12", CirclePlus[
                OverBar[$CellContext`x1], 
                CirclePlus[$CellContext`x2, $CellContext`x1]] == 
              CirclePlus[$CellContext`x1, 
                OverBar[$CellContext`x1]]}]}, 
         "Hypothesis 1" -> {Tooltip -> Column[{"Hypothesis 1", CirclePlus[
                OverBar[\[FormalA]], 
                OverBar[\[FormalB]]] == OverBar[
                CircleTimes[\[FormalA], \[FormalB]]]}]}, 
         "Substitution Lemma 10" -> {
          Tooltip -> Column[{
             "Substitution Lemma 10", CirclePlus[$CellContext`x1, 
                CircleTimes[$CellContext`x2, 
                 CirclePlus[$CellContext`x1, $CellContext`x3]]] == 
              CirclePlus[$CellContext`x1, 
                CircleTimes[$CellContext`x2, $CellContext`x3]]}]}, 
         "Substitution Lemma 15" -> {
          Tooltip -> Column[{"Substitution Lemma 15", CircleTimes[
                OverBar[
                 CirclePlus[
                  
                  OverBar[$CellContext`x1], $CellContext`x2]], \
$CellContext`x1] == OverBar[
                CirclePlus[
                 OverBar[$CellContext`x1], $CellContext`x2]]}]}, 
         "Substitution Lemma 23" -> {
          Tooltip -> Column[{"Substitution Lemma 23", OverBar[
                CirclePlus[
                 OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
                OverBar[$CellContext`x2], 
                CirclePlus[$CellContext`x2, $CellContext`x1]]}]}, 
         "Critical Pair Lemma 12" -> {
          Tooltip -> Column[{"Critical Pair Lemma 12", CircleTimes[
                OverBar[$CellContext`x1], $CellContext`x2] == CircleTimes[
                OverBar[$CellContext`x1], 
                CirclePlus[$CellContext`x1, $CellContext`x2]]}]}}, 
       EdgeStyle -> {
        DirectedEdge["Substitution Lemma 2", "Substitution Lemma 3"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 11", "Critical Pair Lemma 14"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 15", "Substitution Lemma 18"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 1", "Substitution Lemma 2"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 4", "Critical Pair Lemma 7"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 5", "Critical Pair Lemma 4"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 4", "Critical Pair Lemma 10"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 32", "Substitution Lemma 19"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 37", "Substitution Lemma 23"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 28", "Critical Pair Lemma 30"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 11", "Critical Pair Lemma 22"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 20"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 3", "Substitution Lemma 8"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 5", "Critical Pair Lemma 19"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 6", "Substitution Lemma 4"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 22"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 4", "Substitution Lemma 10"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 3", "Critical Pair Lemma 28"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 13", "Critical Pair Lemma 26"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 39"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 3", "Critical Pair Lemma 27"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 2", "Substitution Lemma 14"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 21", "Critical Pair Lemma 31"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 9"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 17", "Critical Pair Lemma 28"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 21", "Critical Pair Lemma 23"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 23"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 6", "Critical Pair Lemma 14"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 29", "Critical Pair Lemma 31"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 16", "Substitution Lemma 23"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 7", "Critical Pair Lemma 11"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Hypothesis 1", "Substitution Lemma 25"] -> RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 9", "Critical Pair Lemma 27"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 24", "Substitution Lemma 13"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 2", "Critical Pair Lemma 19"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 13", "Substitution Lemma 20"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 3", "Substitution Lemma 6"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 19", "Substitution Lemma 11"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 6", "Substitution Lemma 16"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 15", "Substitution Lemma 5"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 10", "Substitution Lemma 1"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 21"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 3", "Critical Pair Lemma 1"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 6", "Critical Pair Lemma 29"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 20", "Critical Pair Lemma 35"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 22", "Substitution Lemma 12"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 9", "Critical Pair Lemma 10"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 8", "Critical Pair Lemma 9"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 2", "Substitution Lemma 11"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 25", "Conclusion 1"] -> RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 26", "Substitution Lemma 15"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 12", "Critical Pair Lemma 16"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 22", "Critical Pair Lemma 37"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 4", "Critical Pair Lemma 13"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 8", "Critical Pair Lemma 18"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 12"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 3", "Critical Pair Lemma 34"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 13", "Critical Pair Lemma 25"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 2", "Critical Pair Lemma 5"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 6", "Critical Pair Lemma 35"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 17", "Critical Pair Lemma 29"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 33", "Substitution Lemma 19"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 36", "Substitution Lemma 22"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 3", "Substitution Lemma 12"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 4"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 16", "Substitution Lemma 6"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 5", "Critical Pair Lemma 7"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 12", "Critical Pair Lemma 37"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 30", "Critical Pair Lemma 32"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 32"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 2", "Substitution Lemma 1"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 27", "Substitution Lemma 17"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 4", "Critical Pair Lemma 15"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 5", "Critical Pair Lemma 20"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 38", "Critical Pair Lemma 39"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 12", "Critical Pair Lemma 24"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 4", "Critical Pair Lemma 18"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 12", "Substitution Lemma 24"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 18", "Substitution Lemma 10"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 38"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 6", "Critical Pair Lemma 5"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 4", "Critical Pair Lemma 17"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 4", "Critical Pair Lemma 3"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 14", "Substitution Lemma 16"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 6", "Critical Pair Lemma 12"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 2", "Critical Pair Lemma 2"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 8", "Substitution Lemma 3"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 11"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 6", "Critical Pair Lemma 8"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 6", "Substitution Lemma 25"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 2", "Substitution Lemma 21"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 1", "Critical Pair Lemma 6"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 3", "Critical Pair Lemma 13"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 25", "Substitution Lemma 14"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 3", "Critical Pair Lemma 3"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 5", "Substitution Lemma 5"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 17", "Substitution Lemma 9"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 6", "Substitution Lemma 2"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 5", "Critical Pair Lemma 6"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 4", "Substitution Lemma 9"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 2", "Substitution Lemma 15"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 4", "Critical Pair Lemma 2"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 6", "Substitution Lemma 7"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 21", "Substitution Lemma 17"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 7", "Substitution Lemma 8"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 39", "Conclusion 1"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 11", "Substitution Lemma 7"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 1"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 19", "Critical Pair Lemma 34"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 18", "Substitution Lemma 22"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 14", "Substitution Lemma 4"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 2", "Critical Pair Lemma 8"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 6", "Substitution Lemma 18"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 31", "Critical Pair Lemma 33"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 5", "Critical Pair Lemma 15"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 23", "Substitution Lemma 24"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 11", "Critical Pair Lemma 16"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 23", "Critical Pair Lemma 26"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 20", "Substitution Lemma 13"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 35", "Substitution Lemma 21"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 3", "Critical Pair Lemma 33"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 21", "Critical Pair Lemma 36"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 10", "Critical Pair Lemma 36"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 24", "Critical Pair Lemma 38"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 6", "Critical Pair Lemma 30"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 12", "Critical Pair Lemma 25"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 8", "Critical Pair Lemma 17"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 3", "Critical Pair Lemma 21"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 34", "Substitution Lemma 20"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]]}, GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {None}, 
       VertexShapeFunction -> {
        "Axiom 6" -> "FiveDown", "Critical Pair Lemma 8" -> "Triangle", 
         "Critical Pair Lemma 18" -> "Triangle", "Critical Pair Lemma 3" -> 
         "Triangle", "Critical Pair Lemma 17" -> "Triangle", 
         "Substitution Lemma 3" -> "Circle", "Critical Pair Lemma 38" -> 
         "Triangle", "Critical Pair Lemma 20" -> "Triangle", 
         "Critical Pair Lemma 19" -> "Triangle", "Critical Pair Lemma 14" -> 
         "Triangle", "Critical Pair Lemma 5" -> "Triangle", 
         "Substitution Lemma 23" -> "Circle", "Critical Pair Lemma 7" -> 
         "Triangle", "Critical Pair Lemma 34" -> "Triangle", 
         "Critical Pair Lemma 16" -> "Triangle", "Substitution Lemma 1" -> 
         "Circle", "Substitution Lemma 10" -> "Circle", 
         "Critical Pair Lemma 22" -> "Triangle", "Substitution Lemma 9" -> 
         "Circle", "Axiom 4" -> "FiveDown", "Substitution Lemma 12" -> 
         "Circle", "Critical Pair Lemma 36" -> "Triangle", 
         "Critical Pair Lemma 21" -> "Triangle", "Substitution Lemma 6" -> 
         "Circle", "Critical Pair Lemma 25" -> "Triangle", 
         "Critical Pair Lemma 35" -> "Triangle", "Critical Pair Lemma 4" -> 
         "Triangle", "Axiom 5" -> "FiveDown", "Critical Pair Lemma 24" -> 
         "Triangle", "Substitution Lemma 19" -> "Circle", 
         "Critical Pair Lemma 31" -> "Triangle", "Critical Pair Lemma 1" -> 
         "Triangle", "Critical Pair Lemma 6" -> "Triangle", "Axiom 2" -> 
         "FiveDown", "Critical Pair Lemma 23" -> "Triangle", 
         "Substitution Lemma 11" -> "Circle", "Substitution Lemma 21" -> 
         "Circle", "Substitution Lemma 22" -> "Circle", "Conclusion 1" -> 
         "Square", "Substitution Lemma 13" -> "Circle", "Axiom 1" -> 
         "FiveDown", "Substitution Lemma 20" -> "Circle", 
         "Critical Pair Lemma 39" -> "Triangle", "Critical Pair Lemma 32" -> 
         "Triangle", "Critical Pair Lemma 27" -> "Triangle", 
         "Critical Pair Lemma 30" -> "Triangle", "Critical Pair Lemma 37" -> 
         "Triangle", "Critical Pair Lemma 29" -> "Triangle", 
         "Substitution Lemma 7" -> "Circle", "Substitution Lemma 16" -> 
         "Circle", "Hypothesis 1" -> "Diamond", "Substitution Lemma 25" -> 
         "Circle", "Critical Pair Lemma 9" -> "Triangle", 
         "Critical Pair Lemma 33" -> "Triangle", "Critical Pair Lemma 26" -> 
         "Triangle", "Critical Pair Lemma 28" -> "Triangle", 
         "Critical Pair Lemma 13" -> "Triangle", "Substitution Lemma 18" -> 
         "Circle", "Substitution Lemma 4" -> "Circle", 
         "Substitution Lemma 17" -> "Circle", "Substitution Lemma 24" -> 
         "Circle", "Substitution Lemma 14" -> "Circle", "Axiom 3" -> 
         "FiveDown", "Critical Pair Lemma 11" -> "Triangle", 
         "Critical Pair Lemma 10" -> "Triangle", "Substitution Lemma 5" -> 
         "Circle", "Critical Pair Lemma 2" -> "Triangle", 
         "Critical Pair Lemma 12" -> "Triangle", "Substitution Lemma 15" -> 
         "Circle", "Substitution Lemma 8" -> "Circle", "Substitution Lemma 2" -> 
         "Circle", "Critical Pair Lemma 15" -> "Triangle"}, 
       VertexSize -> {{"Scaled", 0.01378511301977579}}, 
       VertexStyle -> {"Critical Pair Lemma 8" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 20" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 15" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Axiom 1" -> Directive[
           RGBColor[
            Rational[71, 255], 
            Rational[182, 255], 
            Rational[109, 255]], 
           EdgeForm[]], "Substitution Lemma 22" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 7" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 39" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 11" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 23" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 3" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 9" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 36" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 38" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 20" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Axiom 5" -> Directive[
           RGBColor[
            Rational[71, 255], 
            Rational[182, 255], 
            Rational[109, 255]], 
           EdgeForm[]], "Substitution Lemma 19" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 7" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 18" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 10" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 30" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 10" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 1" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 35" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 33" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 32" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Hypothesis 1" -> Directive[
           RGBColor[
            Rational[146, 255], 
            Rational[10, 17], 0], 
           EdgeForm[]], "Axiom 6" -> Directive[
           RGBColor[
            Rational[71, 255], 
            Rational[182, 255], 
            Rational[109, 255]], 
           EdgeForm[]], "Critical Pair Lemma 16" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 31" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 17" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 14" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 13" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 26" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 13" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 37" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 18" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 14" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 12" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 3" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 9" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 2" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 16" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 24" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 25" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 11" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 24" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 12" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 6" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 1" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 23" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 15" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 5" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 21" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Axiom 2" -> Directive[
           RGBColor[
            Rational[71, 255], 
            Rational[182, 255], 
            Rational[109, 255]], 
           EdgeForm[]], "Substitution Lemma 4" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 21" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 25" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 8" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 27" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 6" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 28" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 2" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Conclusion 1" -> Directive[
           RGBColor[
            Rational[13, 15], 
            Rational[1, 15], 0], 
           EdgeForm[]], "Critical Pair Lemma 34" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 22" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 5" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Axiom 4" -> Directive[
           RGBColor[
            Rational[71, 255], 
            Rational[182, 255], 
            Rational[109, 255]], 
           EdgeForm[]], "Critical Pair Lemma 19" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Axiom 3" -> Directive[
           RGBColor[
            Rational[71, 255], 
            Rational[182, 255], 
            Rational[109, 255]], 
           EdgeForm[]], "Critical Pair Lemma 4" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 17" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 29" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.007780874153661402], 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{0., 33.}, {-11.92635020760244, 32.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVkn0s1HEAxk8UXRKKpegc324oL1dKh9/v+2CsUSelEreypmuWVZa25CWT
UNF62ZJjdGWUyJXX1p1IKnKVvK00S7FoiSgvJy7VX322Z88/nz1/Pfz9R7Yf
mMfhcJzm8qf/IwlQipWrsqa7qfxTviglFijo7JFmRA5Tj+FzudHRwMACLx85
X0Nf2tTbPT8IiMYuxT200UVIondPmgSY1MsosjXmoltniUoRCIRInl1O+WqM
3aWCRm8vQKiv1lSyZmhJOjvOCAF93a5FhbMWEMW7Bd3gAe8C+xuD1/KQl+/S
ccQQ2LHTXTQ9yENcgkotXAjEV6V+zN1ujXKDV3WzekBEQJmrQZk1kpObJaVa
ivBB8yuUy4dYzHE8NkYRfVE14x3BR1MMHRX3U1zDzRhTFR/jP9NK0EHRPvVs
onSZDd60vg3b3EBBlGvSzA7ZYK/BBo60jMJO4SnR+BFk/XjjfNqF4uSKGGV7
FMFXV6mRyWqKrIo9Jh4XCBrtZVv9l1PEJQ6FOt4hsGw7POTEpRCccM6+00Aw
6tI3VKthIZPzWiq7CPx8NGLNIIt2jWos4POcz71n3NvFovM01/jwKMHRMwbr
jz1hIfecz7ecIvCt5FQpylgwgruCXdME0r+wuM+OurZOEiRwf7mqt7EQpNXu
8/5OkB/75UQKwyJHa1p0u4/gRblwXcZaFotvDXP12whmalrD+6xYJCYFnw9V
ErifbdbLNGHxLd3LruD63B6xXJWqz2JvfVXvp1MEzeeelrzSMlDbV1RbhBLw
lU2KSA0D98eiYl9ngqSa1Q7BEwz6ePFaxW5rFNV23E5XM1DlN0gLb1kgWxbk
FVTEwL+g43yI/1IEbckeKU1h8EEmeT9itwiv20qq8w4wCN+Ys9LQSAfmwoyr
tv4M1m98WTw/fYQKItwyPdcxqLNeuEke+oBOR93NGbRiEKaNsPp5vP+RLOB7
vcNiBhxts8dA5I9H/w7N4DcVSDsk
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAgPvRrzMm9L8AAAAAAABAQEiHFxTa
F/m/6Rm7eP3zP0AMm/hnuo7+vxcpA0+35j9AZpu6VWpFAsCDLdiCLdg/QEKt
Rm8UhgXAMCc6FGDIP0Acg6CAWwkJwCAWKQNPtz9A8hzIiT/PDMBQ+qRP+qQ/
QGO9XkXgaxDAwdOt+WGRP0BMTsBBb5ESwHOiQwGGfD9AM8EIukzYFMBmZmZm
ZmY/QP0i3KPTLxfAx8W2n6hPP0CQgN70XocZwMNm1SPyOD9A7dkPre7eG8Ba
ScLyQiI/QA8vcMyCNh7Ai219DJsLP0D9v3+pDUcgwFbTBnH69D5AWOZeINxy
IcC9el4gYd4+QJaK1cqsniLAvWOEGs/HPkC4rOOof8ojwFmOeF9EsT5AvkyJ
ulT2JMCP+jrvwJo+QFGXBhVjICbA3pCEWGOEPkDRFaVSNzknwItzD69Qbz5A
Pshkc9FAKMCRotvyiFs+QJSuRXcxNynA7B3pIwxJPkDVyEdeVxwqwKTlN0La
Nz5AAxdrKEPwKsC1+cdN8yc+QByZr9X0sivAH1qZRlcZPkAgTxVmbGQswOMG
rCwGDD5AEDmc2akELcAAAAAAAAA+QN40yD0=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-1.2593266361215854`, 32.}, {1.563784511510903, 31.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAgPvRrzMm9L8AAAAAAABAQAdBH7xl
hPS/6Rm7eP3zP0Bam48aguz0vxcpA0+35j9AeAojy4he9b+DLdiCLdg/QGCO
2c152vW/MCc6FGDIP0ATJ7MiVWD2vyAWKQNPtz9AktSvyRrw9r9Q+qRP+qQ/
QNqWz8LKife/wdOt+WGRP0DubRIOZS34v3OiQwGGfD9AzVl4q+na+L9mZmZm
ZmY/QJjvyz5jlPm/sBolkfpPP0B2xNdr3Fv6v2m6juk5Oj9AZdibMlUx+7+P
RaNvJCU/QGMrGJPNFPy/IrxiI7oQP0ByvUyNRQb9vyMezQT7/D5Ako45Ib0F
/r+Sa+IT5+k+QMKe3k40E/+/baSiUH7XPkAB9x2LVRcAwLfIDbvAxT5AKr6o
uxCsAMBu2CNTrrQ+QHDizbn5qAHAPcsZtN+YPkBjdeRQTpQCwDq0LeX/fj5A
AXfsgA5uA8Bmk1/mDmc+QErn5Uk6NgTAumivtwxRPkA+xtCr0ewEwDs0HVn5
PD5A3ROtptSRBcDq9ajK1Co+QCjQejpDJQbAxK1SDJ8aPkAf+zlnHacGwMxb
Gh5YDD5AwJTqLGMXB8AAAAAAAAA+QI9s0/A=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAgPvRrzMm9L8AAAAAAABAQPA/SwcZ
2PK/y6gQ2mnzP0AhOVqZ0knxv5xkWdRo5D9AIs79y8D27r9wM9ru/NI/QICT
ctqE2eq/RxWTKSa/P0BawhJe8TvmvyIKhITkqD9At1reVgYe4b8CEq3/N5A/
QCK5qomH/9a/5iwOmyB1P0CsH9+fpoTFv81ap1aeVz9A4DOm+3/coz+4m3gy
sTc/QLfSva7Qvb0/Ul2zT70qP0ARNj1V+w3IP7M8mS+iHD9AjDlCfCxC0D/U
OSrSXw0/QDlQmqAAIdQ/ulRmN/b8PkAQ36YXeqPXP2CNTV9l6z5ADuZn4ZjJ
2j/K499Jrdg+QDZl3f1ck90/9lcd983EPkBDroM2YwDgP+fpBWfHrz5AnTBZ
vO4u4z+Yk5PrwmU+QJ9BXqcUHuQ/tWb+ziNPPkDysDfmpwvlP+OvDqmAOD5A
kH7leKj35T8db8R52SE+QHuqZ18W4uY/ZKQfQS4LPkCzNL6Z8crnP7lPIP9+
9D1AOh3pJzqy6D8dccazy909QAxk6Anwl+k/jggSXxTHPUAtCbw/E3zqPw0W
AwFZsD1AZv5s/aNa7T9mZmZmZmY9QFEpRuk9Qe4//CsOkrNPPUDwRK1FfTHv
P5n/Mu0dOT1AnyhRCbEV8D884dR3pSI9QB6nEih2l/A/4tDzMUoMPUD1HRv/
DR7xP5DOjxsM9jxAJY1qjnip8T9E2qg06988QK30ANa1OfI//PM+fefJPECN
VN7Vxc7yP7obUvUAtDxAGkwaziT69D9nZmZmZmY8QN3Eh2fkgPU/xCMG7UlQ
PEBsjx1byM31P7beEll3OzxAxqvbqNDg9T89l4yq7ic8QOkZwlD9ufU/VU1z
4a8VPEDa2dBSTln1PwMBx/26BDxAlOsHr8O+9D9Esof/D/U7QBlPZ2Vd6vM/
GmG15q7mO0BqBO91G9zyP4MNULOX2TtAhguf4P2T8T+At1dlys07QLfUToIN
4+o/CRBcrLasO0CqEWI7gUHjP+hwQHswjjtAyJvv2K2G2D8Z2gTSN3I7QIol
QFY6osc/mUupsMxYO0DAE2JVG5R4P27FLRfvQTtALgfgwHCLw7+XR5IFny07
QPOQMD79ptK/EtLWe9wbO0C/H+wrfkHav+Bk+3mnDDtAAFjRlJ1K4L8AAAAA
AAA7QCl6plE=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
d6srbk5nQfZQjH3CfCYS9w0W/B/kfdMJ
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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

          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
hl1Mf1prF/r3/6ot/AOaHzfX
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1wlQE2cbB/Agyk0IVfFTsQ0gh4AhJOQiIfmDRz9QjoLg7acUsQqt1apV
WjEttVJEKgpWIUq1FNGKIlLLIeRFSgEDVYr16Cd1EG88KFc51DbsOsP7zGYy
/9nN7m+f591M4hS7PnL1GA6Hc8f4GnnXDrecEbv16jlMAQtPx+90lvfrv3/3
9gFhjwbRNa3fZ5EBvXlEVn1KhwZb/Cbbp+mH9fy6N/cNXtGgwlxWP0byj777
YnJ/ZqUGew87xO3Ya0K2B5f2zv9Og5gHLy31Nabk4iJ9umeqBt6r3omGwIyQ
rrxqz3UaTLS2n2t6zYJ8bB+TFhqsAe+e6pZ5uTV5UNH+fJ+rBro1vtVmK2zI
i/GxKYmOGvg0CDcf6rEh6RyvqFP2GtSaKU3INluSpVX9L3KcBstdImKTumzJ
+KwDx1f8rcbgtA8PNizkEiulwrvlgRq5/TnfnTzDJUmbpz89cU2NoKIrKfwB
Lomdtejxw1o1ngTaKzx97UhN/lWXjDNqxBeL0njH7Ug8U2oc3/rZ8K5GO5I0
dfsfheFq2HCbVr/11I58U/WM2yNXI1j+VVynBY+Uza80neOshmPEyTeuT+WR
Ww13yo5Yq6ENC66K9OGRcaLVAk5fALaI4+NWzOIRUWpQ3No/A/DiFcdiaCGP
xBmSlvxRH4AJZycXur7PI7nDtvZRZwOw0sttk/Q877UnADs7Qq9GN/JIcKHs
SUl4ANa+Xe00/RqPXO66ET1VEQCrhR8vO3qLR/o1Id/lOQfgvTe2fdFszJXZ
u69qbAKQsq32UKHxeOdu3aPhPhWWpcfoRJd4xCs6+U7rbRW6Q0TpCT/xSGu1
j76+UYW5P8asjTrCI44+Z3dcP6eCY6DuoxpXHpkf5tB1c7UKr3zG5Nw1Mfpf
Nr+ShKsw9MHw9ZgLdkSTdyI7Q66C15lprV6b7cht8YnSDicVMvgJrv8VGPdX
Ni2VWKvgUdvx6w8PuCReMmF3Sq8S/Qd2XY45yiWhx3YE/dqmxEBujHvwUi4Z
MLH7fGK9EoLfIq59PpFL3ltwMXhxsRIFg0sS+8W2r/ujxPJV698ffmpDdqkl
YUXhSuw4KLWtKbAhtcGX28YqlDDPK573tnF9TUn1m/i+sxJ9m9o8MibYkLTB
uN571kqETKnKz260JhOPrPxkfZ8/zL4O1y/fbk0qNruftLztD4/WrK33faxJ
krZcW9rgj3P306/4tFuRBdUO/6wvMeaCc+N3N1u+9vijxGHpnqnbLInjhLvy
n8P9cS/8U3d/J0sy+du01JUKf8yLnHTnfp0FWWa1JFrp4o/2ad5VTmssSHtk
ZN4CW3/8UFJR9nisBSna9lH8qb8VOM6rvRqYZ05IctXJoDsK/C6bY+8uNScO
scLESc0KyDwCP8hpNCMlLk0nPcsU2JM+z7vcfNxrjwKKsl2OT1LHEtt6RVNl
uAJPr2k3BlqMJW0J7b+rFQqceCgVlO80JS0Llqc8d1Yg8emJ8CgTU/Lks6Kr
zTYKyO/dvGb3yRgi7GlpvNkvh82VX2qfdZuQnMJLsePb5XhQ9KFD13smxPPY
N3lJBjkMydd/Hd/GIXduy7V25+VwKHz1OHbOC/2EtDV3g8PkMNGpPq9aM6w3
qcbzb1RydL4p+9orf0hfnlSTGeopx2/CZ/ZFQ4N6OXlkWDdJjtKWVVZBCYP6
7Rnlh5+bynHAZN/Wx30D+vR7QvNbz2XYRJKXFeQM6OPqwi2E/5chgutxfvPi
Ab2pwOFoZ50MMzr37FwkGtCve+uLFm6xDNrHZy+FuQ7o2f7IkJBUwuSh/HDj
JsOuWjZndMiNmwyX69jszJQMb3/G5vMrrY2bDJ197PlC8nqD83qlqHZh859t
IyUFsSpm8kbH+g2O9VJ0nTzNZLOlxeOWFktx7mUh5ZGiZPZxJg8yHikair5n
8h7GI0W3PJ/JLoxHCtH9Y5RHil0/HqU8EnQXfEt5JNhYkUd5JLDoOkJ5JAjt
0VEeCXbGs3mA8UhQ9yyX8khglZ5L9UeCKHUu5ZHg2Dg2z2M8fhhoz6E8fohs
zaE8fii9mUN5/BAfkkt5/DC8Mpealx8eLsql5uUHgSiX6o8fLj1hz/cT4/FD
dSqbgxmPGDZmtEeM4rhDlEeMU/kHKY8Y2tPZlEcM86YsyiPGYU4W5REjaP5+
yiNG7+l9VH/EOO+xj5qXCF+WZ1IeEeJWZVIeEd7hZ1IeEc6d3Ut5RJhUsJda
PyKA7KU8InhxMimPCDdWZ1IeEUL+yqQ8vtAe20d5fLF1237K4wu/LVmUxxfN
EQcpjy/MNx6i+uOLv9flUB5f5Cjp9eOLvzro9eOLl+/qKI8QFyp1lEcIYaeO
8gixqFtHeYSYv5hez0IkrNVRHiGWjT1MeYTgex6h+iNE6R95lEeIKQ7s85al
frRf/cgHUbfY5/FC5Uj5YNlM9nlmTpfhA4XlKSZbMyfwwZSeCiY3N42UACRM
z+ReZkEKkGpZy+RpI7ezQYD1Lr8wec7skRJgi66ByQk1Dok1DgLkbbrE5GzG
MxP3fzBQnpkIC2pi8l3GMxPXZWy2YTwzwYlppDzeCIxuoDzeyA6ppzzeGJbQ
Hm9smFTH5ETG442hZ7VUf7yQdeEi5fECtDWUxwuvFITyeEH8uJLyeGJTSQXl
8UTaj+VMZsa9wRMbe8qYPJfxeMI7sYzyeKLiLTbvZzwz4Mgtozwz8I6sjPLM
wOLcMsozA83t7PUZTpMHdDdYXw/j8UDK7CrK44FkV3aeDGe2B/Z+UkPNywNl
c3+m+uOO/i/rKY87glUGyuOO0vjL1PpxR1PXn1R/3LAko4Pqjxt6Sh5QHjdk
r+ik5uUGZeYzqj9ueBLyF+VxRcHuHsrjivioPsrjCp9j/ZTHFZyWAcozHb98
Okh5pmNj6BC1fqbDZNYw5THuX/6C8hg/r3tJeVzAMfmH8rjAMY1jGPUYs3yM
YXRexuPDLQyj83LGeK6VYXRezijQWhtG++OM8wU2hlGPM2ZpbQ2jHmdE2HIN
ox4n3AhlM+txwu1ALuVxQtwjW8rjhPjZbBYz5WT8fcReb3Ll1pc9Zk5I/pn1
JC/Kt1G18ZE0kc2rmAbzUbOB9de0Fg2uyuQj8qYlk4+c3X1ds54PwXw2s99n
fCy4xN7/1ZHDRXzURbHZq+kr7rj/8KF9aM5k9v8gH/8CTJ/Xjg==
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-18.50910835339107, 33.}, {-11.92635020760244, 32.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwlkn8slHEcx6+n6OKMkK1GYZxqt8Xz3PNjq/s+nxl2a7aM26VupKZZLFei
Ia6WreLaiM7CdVZGNWmX2dGv7ZNhaMu5dZFMrLT8WKQS5kfUa3vv/c/rz1fQ
KX38aUoikYSub+NTZvqmNVdplGxwBSDcQofY7tP4ySjXO/MAGrkF565uGpmy
+ixbFoC9LZAqmqNxWVboVpcOYA55/PB7EIMC1cTVnATwzq/uSdIyOKln/1iO
AtDPplLtpQx6af1in8QCLI3V5se8ZbCx5QjbAwBnf9nccLsSnxvHmmcYgBuz
4TtUx5VIPr7pCJIDUM1yofKaElduph24HABwTupMrmtWYvkh01qxL0D/z4PF
qSNKXJrQsJHuAMHZutYP21hkTQ32B5sA0oqZCYpl0VjgW5czI4KF6dg9eoLF
hN41/fyQCF1ZHonnS1hs9/GUOjpF+BzjabK1sDiUGJkhtYqQq5b+9tdwOK1Y
zbEdE6F0/If1US6HVak5LZZoEeRNt82udzmM6n2FXIQIqtrZVub1up80UG3w
F8HxwmVzxDiHt/a0R17cKsI36l3hqpRH2tPQFjBHwJCt22tW8GhXuC9nDxOo
8DJTbnE8ZuSe8SjoIrBvwCRTX+Bxy9ydadpKQNWtjtFW8lj1DwLOkuDFhDYe
jUkvV/OKCCx2lmWmDPKoUsS7WjIJNORVNFya5/Gpi87qoiMwXL//Xr23gKMT
75etagI1h7XJIwoB+wY7p2p5Al/S/EZCowU0OMIKHWEEbCvpgQU6ASc39J0E
fGSa0DG9gH5fo65TMgIL5f3r/Qj/+5EQ+AuCKA+c
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1g1QVOUex3FERTO0DFxNg2Ax3gXP2ff3n7ZyASscTB3oRoik8paJXrnm
C2qRL6CC1zFeVJSBzCRiSkTD6EEZuGYpECwhBeyymEwopkbAAF04xzvzf+bZ
OfOd2XPms/9nzsx6xm2KfNfRwcEhf/wzcY3tv9335j6eOUysPUDhb2L/mfX2
1bHtwMxOsTOP7z331hagtEXsa5LkGkky8O+bYue6uM1YHA9sZWI/L9wAnL4o
tu+uJp9dkcDQObG7ei0j5aHAvnyxtY1nHV41AtossWXCApzTxZ64vckHuLtV
7PrNL41voD5F7BdmT6xxX4LYb5VPHd9A7kaxwwufhBU+MSEzUezOXyeWCR9t
Ejt14nH1450mtpPwABOqT4u9Xlgm9J4Xe6g4Yrg4woSor8Q+3K0+0q02YdZl
saXCMsGpSuxLsc+ObxPMVdRjRN3T73cIHiOyvhZb+Hn1Rpy4IPZUwWPE9Qzq
MeK7D8QeFDxGWDaLfUTwGDE5SWwvwWNE6HrqMaJ4ndjLBY8B89ZRjwEl8XQ+
BoRvpPMZ713UY0DuQTofA/46Qz0GxF2nHgPaH1KPAWv9GoQOEzx6DCQ3EI8e
uVUNxKNH6JxG4tFDmtAk9AbBo8faJrGHBY8exzU/EY8eVad/Ih49WiY1E48e
trhmcl469NQ0E48O7e4txKND7fYW4tEhJNdC5qND2aCFzEcHbWIr8ehwt6+V
eHS4uOdn4tGh5JU24tHicnsb8Whxv+gO8Whh3tFOPFqszOggHi0+39BJPFqc
8e8iHi24W2IvFDxaxERaiUcL70or8WiQNWIlHg2OSG3Eo0Ggn414NIiusBKP
BpNyrOS8NOjdKvZRwaPBc2ut5P3SIHUV9WjgGkk9agysph415sZbiUeNbdut
xKPGqI161LBNsZH5qCHxsRGPGgVhNnJeaqQk24hHjeyjNvJ+qeD4tY14VKi1
0PmoYBmm81EhcXM38ahQ8kk3mY8K5ppucl4qhD7oJvNRodzdTjwq7Iq0k/ko
UXbQTjxKmGvtxKOE0bGHeJT48E4P8ShxcCBKb9/Ls19+c9FdiVAirbbC/9ge
ns3rD8uRa5R4wzxUGbObZwt2Tk/4WaqE87aF9rAdPLMeibhW7KzExSjVlyvT
eJbs8/KpvAEFlvVzL+5M5Vn1srShS10KVCtdpdeTedbcu6Z15HsFPBZ33PBd
z7NylxplUoUC30puzP9H2P89CpwbyXPcAZ6dXNeZ0hKhwOrl+bFjSp65daT9
s0SjwHXH7+WNgTy72xLMW7wUeCT1S3/sybOB8Gn9G2Yp0HWh0vSuhGcRhrFj
0UNyZJ/61zbvGTx7UOrqXmaXY9JgnJdqlGOWvPDsuAY5ZFXpIZ/0c2zalDO9
aVflKHv8aUpnGffUI0fNGDckO8Wx20/OjHqtkMNwMyeh9BDH7NLdBZ1aOTyj
6qpD0zhW/HDUlOctx3uf3R6cvo5js2I8fl/hIofXlS/m3n+dY9KknpNOk+RY
khm74E8Vx7rnvr7qm34Z6t3vTfb05Ngb8WtckztluLTF3Pj+MxyLXzHlzoIG
Gd55b6HOumgxO7Df5Ye2VTKE+FjmHHp2MdPltR/MWSrDD06N+t6mYHZ0hkdp
V5AM6VMrzy85Gsz2t3fx9fNlOBsek+r2WjDzcHZ3X+Ykg9xSd2LnM8Es+mRr
SvQfPLSfPZS8Ux/E1FkzpdN+4VHO2h/VZgSxS+3faZfX8ch7+YB/mTmItR56
UOldzkN/r6chbsuip/PhYb8zTVHEL2Jzbt3scFrBo8qzsWPyH4FsZL+fR5KW
R/XVJbf2lwWyF4+n+//nFR59F6ImByUFsqRHP47uns0jpH/e7gHvQPakyDU/
aIzDrY/TjVZrAKsoWfn32d857Es9bH5QEMBKhw8tamvjEP/V0my3VQGs7ew3
C5v/y2FzSKHnppkBzFBgsx+7zCEnsSI+LtOfxRbXuT0u4PBXUl/24Rf82fYZ
kmvRezkUhZs/fVjkxw782NB4YyOHbKdvizP1fizz/sBriORQW7g6K6bTl32U
eEBWbeCgl8x+OyHTl20xZ2S8GsBhMKFPUgpftmbH/aUN8zkM59+74v23D+Oe
q0mKd+aA81ND2up8xP9jDhz+B21Vo34=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
kiO+NqV1cmn7X7US4n93mEab
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1ntQk1caBnCqg9TL4tJFi4LUFqqYQEi+L1dye7DKpdYyYsVqBQURx1Tk
ortV1Eq1W1EQXYLWG2IrYlWUS62uHbHHpR0WBQERAhExCeggwqIWd7lo3Zi0
M++ZL/PN80/mN++Tc3LeTkiJXjXKxcXlqv3z6r2iv773o+0cc3m1MoHSbIPu
Yi7HVBXc4vpNQEOBX7VXAccOz2p541g68NO7I19tOccx/6Qebq0B2Or3ZKv1
J461rE65pIoHxn7tWhJ+m2NlolXHxywGVmUqPUp7OFbx442+W/OAffd2nXtz
NM/ax58oPKYHdl8YyvxiGs+C33n0wxoOWPhyZ3avimdnXpwQS/2BQ6cz7vtG
8izdL40b8gayvuP27ozhWZWxe83yvwDTnpdmzUjg2dEPx5mSxgFLi542jnzK
s5GFLZsmvgbovhk2uG3g2S/hh4oq/qNHzdPqhZEZPDuxxcyyzHo8P7g059rn
PNsXlhrxzS96tBgrPFO/4FnuyaXq56V6bGx+NR+eJTmWHtH1zjxUFDVcFKWH
qsaZ93QqczuVegirnPkdx9JjRqUzX1wx3v7oIbrkzO8XDkQWDuiAcmfuuPtq
6RB31pnTfKrtjw5ZJ53Z9ZMy+6PDlTzq0aFtjzMPOjw6XN3tzLkOjw6GXc7s
5/DocGcX9ejgmePM8xweLSbtox4t2vc7c7rDo8WnBc48xuHRglVSjxbht+h8
tEgeoR4tOFUD8WhhzG4gHi3ynjpzpMOjgXhdI/FosPa3RuLRYO6JW8SjgXpS
syOvdng06K9z5mGHR4PtqS3Eo8HA8xbi0QDrTcSjgaHJRPpSI31aK/GoEbOg
lXjU8EppJR41Bte1kvmoEbS+lcxHjQtftRKPGjmnW4lHjYo7rcSjhmBaG/GE
4HFyG/GEYOzNNuIJQarWTDwhyOy5QzwhWJLcTjwhED5sJ54QDMTedWR/hycE
5TfuEk8IVnEdxKOCe14H8ahwvqeDeFSYo7lHPCocn2EhHhWuGyykLxV0p515
r8OjwqDVQvaXCkOeVuJRIXS2lXiUuLXGSjxKnMm2Eo8S109ZiUeJgB4r8SgR
+sJK5qPE5ok24rF//3Qb6UuJCImNeJTogI3sLwXyomzEo0BirI14FIgx2IhH
gex9NuJRYM8hG5mPAh8X2EhfCnQfsZH5KKDfTz0KxO2ykfnIMWcj9cjRH089
ciSEUY8cL5rpfOSQ/UDnI0fxISs5D+WI2mEl85FDlE77kmNuEu1LhvzltC8Z
psbRvmRojad9ydD0JfXIULzXSs5Dmf18px4ZTMetZD4ySE9RjwyTS6ykLyky
SqlHisRy6pGioZx6pCgroR4pUk5bSV9SzD9hJX1JEXGYzkeKuFxnvuTwSJG3
zUrOQx62ZOrhEbWEeni0hVIPj8Fuur94JNfT/cUj4UcL8fAw/b7fnB4e1wss
ZD48NAcspC8OYqOFeDh8m28hHg75hy3EY8/XqIfD/DoL+f1weNNEPRwGOqiH
Q0cX9XC40009EnT3UI8Ebo+oRwL5Q+qRwGymHgnCY6r7i+3//8+6Llw2RUkw
0pgxeHQbzzZ11mWfV0kwPH9kjGILz57El7f3+Emgux7h/dfPeLZixfKSHHcJ
asNWyhan2e8nHaZh45AY31a9v+juGp753J36b5f7YjC8zHCL55nhkwDPpgYx
Zl7NLG6232fOL3G5N65SjMB//fanpOl/eMTg9A/UBR48ay6P7eyIEuNqkzEo
fJS9v8lp3A2VGHXb3DpXPuXY7f3HFwr9xYh/L3TZr1aOJYp6w166i7HRN/TQ
swaORV875ZU7EAxPD7fDBvt9LWJJabhrbTBk3sa4aPt97ox//9TEomCYNfcf
lBzm2Ea/1Xlntgajob02e7SeY3W1r5YIYzPTpk+ZybGVn784Ul0ogu+GmvU1
7hwzH+y5XLlehPGXb//d878SFuSTP6M0QoT6D40xw+0SFvv6sPWIrwjrZK4P
MqokLCXWp3fHsyB0rRVID5yWsGXeI3NW1wWBfzYq9IO9EjZr9oHeucVBWHYz
d0LBBgm73dhneyszCO6zex/V9Yt/9wQirOK1c4V1YrbZZ2dBy/FAWGYVb6o+
I2YhHh5s6LNAmL5rWzB3p5i5nTVI5dGBEAUflU1ZKWbWh8bh7OBAdF3p839P
J2a1dTlvjEwMxNCCm29VeYnZzzGLtuz4VQhz++YPuPvB7MaXfYp3zUJs99+U
uvvrYGZbvGiupUqI7oz8s7kRwWxMQ07RhTIhEnMa2LaxIvZ4WbLC1yDEnwO9
P7Z0BrKkotHxAbOE6F2yIa3MJGSG4qi3m/oEGJjUPuFxl4ANJizY6PtPAQJX
RAsKxwuYp/n1pHFZAhiVpprKebPYlfF/6zkQK0BAoeHRvJMB7Mn/Drr+rBSg
zzhhb6RXAPv+WNqlf0wRwDK58sLFopnO+7yLAP8HmRLWxA==
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-21.50910835350541, 31.}, {-14.509108352966479`, 30.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-21.50910835350541, 31.}, {-24.50910835377269, 30.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-21.50910835350541, 31.}, {-7.27585624087402, 30.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1X9MlHUcB/BLSSMTZ4rLhgqEGYbK7nm+zz333N3jezUIgYIZwgT1BJII
NaUfiEswiJhT02kBIzCq3ZjBdFhgY5Y+ywwxp/yIpIu4O+7u0UxxJSOEqOB5
7o/Pd8/t9t7zPHevvb+fey4iZ9f6bTMMBkPR1Gv6/YmdXXfSypli0NZaRGzX
8+3F54on78sYydfzouiZKV+rMqry9Fyxqr98Vb+M/3L1HLtCWrj1sgw+W8/h
2g0y2BY9p447UsYdMgxZelZ6Tz3IPiajJkPPb37+/EOV+2SMvaznPG3JOJmq
57Hp21NkxL6k5yNeceqQcThZz09FTi8Z3yTp+ezWOVOHjAuBnNQwsq5hxIba
wPWDv00vGxICn/dGWEdhWIcNVwLfNyur5eGsFhuqN1GPDZOBfh5oHhtOH6ce
G5q6qMeG4eXdxGND6XE9r9M8VqQv6iEeK/ae6SEeK27m9hKPFc1zf9byq5rH
iiKPnrV6U6yI+vIG8VhxZn8/8VixLPEX4rFix3ynlhM1jwV1fU7isaCp+lfi
mTqfNkA8FthaBkk/FjyX5yL9WNAb6iYeC4bPu4nHgo+yPcRjwcVJD/FIKP1w
iHgkfBfpJR4Jx5q9xCNhOMlPPBJ2tPuJR0LzTJV4pvJKPUdpHgkFq1XikfB7
iEo8ZkRf9ROPGc/k+YnHjFsDPuIx49OKIeIx45FuD9kvM9436vmo5jEj9Au9
H40TaUYb7yYeMwr6XMQjIvaQi3hEBKe7iEfEKHMRjwhftIt4RJyKofslYjxw
ve4R8WOci+yXiLBNLuIR8Vexi/y+TEiupx4TVvxAPSZUjlKPCWKLm3hM2PeH
m/RjwoxoD9kvEzrzPaQfE7qa6PyY8OQ9Oj8CHIzOj4DdpUPEI6Ckc4h4BMR1
eIlHQMICH+lHQFGmnj/QPAKu1/tIPwJSnT7iEfDP437iYeiJp/PD0P02nR+G
iQY/8TA4F6jEw/Aup5LnIUNjsko8DAl2lfTDkL+dzjNDUKFK9ovH0t0q8fBo
y1eJh8eVTJV4eCycTz08aq9uDl5axhTzhqOnj6TyOLD60pa9JUw56DDZD1p5
DAphd/P2MCUzzV68cSWPOn9Oq/o6UxpfmTU+sZjHRam2dSyXKbv6YnyFc3is
Fy7crU9nSntjj3DuXw6J/T/Ze+OZsr//7z9v3OfQHO58tJ5nyvcF9aGXb3N4
a9714dFlTKncrHx2yMuhaklJTt8JXknceTLk5rccLjk7i3Ke5pUXb5VXbqzj
MPuFtmc/aeeUw9dSgr3vcEjPWVt2IINTZofPq3nPzuFsTP6eCAOnnB9Q1lji
OUQ1rgl57Suj0hq0rTc4loPjWlWcvdCoqDUTZffCOBgbP14SJBmVDdUVljuP
ceiKkasz5hoD/6cc/gc4Kpjd
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1XtQVGUcxnFEk8lLakGY4maG6Dhocfacd/fs5fBgeCEvEKmTyoghYooi
pAk5kMqYbKKIU3nJIkEwnVAuKTMK2gty1zIu4i0IRFgUNAUvIUQtZ/nj987Z
2fn+s/uZ553ZfStkY+BqRwcHh222V//72A1/dCyKl7iDerzRPi5cyUuS+LVV
q0+ndCmIn+leNvYHiRcHZE42tShoaO7ZFXtK4ldKa1ffqFXQ1/c4rulXibeV
NERsKlLQ+PXQzDm1EtcsrMTI0wosafKYrPsSjwg+eDvjoIIn0xJPuQ5mvLp7
lrd5mwL36T3bd0xgPHBCXXhNqALXk18ldsiMt1XM+fiTuQqcg2JbNH6M33jz
TminToEULO5LWMJ46stVNRc9FGzJzbF4hDCOBOfTvzkrqFv8pKonnPGzhzK7
NI4Klvj1rnPazLijcjg996EZ3XsqPvTbyrhH9C1uuWVG/sSgPYVfMD7RN3Ju
aokZKUPOOEfuYLwzfZmxN8uM3639+zAeph4zNjXbuzvd/0W6vxmKpkrtpGa9
7THjnUP2fntS/zHD54NqtfNWDrc9ZsT41ajt9+MT22NC7fZatRvq+48Ji55f
U/tTt7IotzITujOvqz10efZLy7NNSPJvUHuN6jFh5exGtV+oHhOmON4hHhMa
4puJx4Sd5XeJxwRNTYva76seI06ktRKPEe46K/EYkZxsJR4jqrOtZB8jMnKs
ZB8jonOtxGPEe79YiceIYWesxGPElYG2ewxIPGslHgNm5VGPAT151GOAeI56
DGg6Rz0GJJ2nHgP0+fZ2Vz0GNOZTjwE7C6hHxpQL1COj/AL1yAi7SD0yVnDq
kfF8oO33JSOp0N77VI+MSUX2VjmTZOQWUY8M70vUo8flS9SjR2Ax9ehxvZh6
9IgppR49npXSffSIKqMePe6X0fvSY0U59ehxdaDnqR4dTBXUo8PxCurRYVQl
9eiw8DL16NBWSffRobuc3pcOsSV0Hx0iOfXocOMc3YfhTA71MDieoB6GS99T
D0NkFPUwJIfSfRjeWGrvvaqHYZg/3YcheDb1MLh5U48EyNQjoVKkHgkFXtQj
4cF06pFw1NPe/6geCT9Nox4J/02h+0g47k49ElIn0vsS8WA89YjY/Tr1iNg6
mnpElHa3Eo8In1VsmWz7vZzXLmfMDxDReMo9rTWO8ZreJjneKCLjZk5xUAzj
/363wt1pqojE1vrCI5GMl5dkhd52EXGg9sThY2GMS3HXXvQNsX3+sVfnb17G
+OzCq61RT7UYu2j8zZHzbfvvT5kqWrXY11KESCPjC/724bNuaRFyr7t9VLg0
4NHiyGcPhsX4SFy7KrvEM0CLLJftOze6SnzLn/n5jkYtjlbkfPSsQ+Se1Za5
bR5arN0fnzCiSOSLfV3X17+mxSsbOkfnHhB5p7DG484gLZKCBj1tXSfywSkx
0c8eCWgLztL+rIjc8uW84HFNAjTRvVf6xog8/t5f9QuqBcxIa+NNd7X8YYXU
lVwsYG8dfPs+13Knjva69RkCrN+E1bi4avmSb+u6jlgE6OqXRkwtEPj1kqd+
mggBsVnjXNhagVvi/G52LRZwfvjJMkUj8IiCqlQ3CHj0eMiumbe9eEJ80rFD
nrbvD5kR4HPUi1dd3dawZrwA36DJHsYNXjwgPSNw9wgBKxvvOb0702vg/13A
/zwh7O4=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1WtQVGUcx3G0RBEBddB0Bkkx0bwkcJ6z93P4JQorCd5FZQDdQLwMGlqg
qBmKRZZipiCKmrbr4AwujpqOmfhMg/dhDCGkRXF3DyuOgpaYGTrVerYX/2fO
zpnvmzOf+T0vdoRl1aysnn5+fnne3+v3kJxfOuZsFrmfemJhqxP3d30i8nmZ
WfaDXTLsZzcM/CZb5JdmVY0yeWSwcbZZE1JEnnyjMau50dtjqlOvThZ5R13r
yjU/yzhh3zfBEiVy68LrCLLLOFaTfbV7qMjzcstabGUywuYPHr+rh8jTB8bH
Sptk9Ft/dP6YdsYtUtOKhkwZeaOHJF+4zviGpwmLl5pl+G8c9WzbecYfxLoz
n2plfF2YkxhhZ/y9iPqGmkgZvcXfZ2w5wvjU8lB7XaiM/LLjve17GTfZqrrC
e8poqbStPLKTcf/4cuvJxxI0y5q3LtrGeOV6By92SChqnpL0YCvjw+M/Mh++
JOHa885a/RbGV9sWGl9VSygdXO/dh/El6pGwNM7Xf1und1unS1j7ma93KDrv
I6G2ztcjI14fCdPG3VL7zKJA7yOhf7mvpx565n1MGPBWg9qtd18fE5Jtvl4d
diU37IoJ1+Ia1fZPPdEr9YQJzu1NamerHhOaJt9Wu1v1eL/36jbxmFByqpl4
vN9f8RvxmDBzpEPtRNVjRFmLg3iMGL67hXiM6Jx2h3iMqDraSvYxYtnse2Qf
I+T2e8RjxHiLk3iMiKl1Eo8RyUEu4jGgSHIRjwH1c1zEY4Butot4DAh0OYnH
gJQaJ/EYEGV1Eo8BO3b5+h3VY8DHX1KPAe5iJ/Ho4djpJB495h92Eo8eGT86
iUePvtEu4tEjYZ6L3JceaQW+LlE9epgP+FrlROjR56KLePT47h7dR4egf+k+
OswY5iYeHZYb3MSjw/1v3cSjw1i7m+yjQ9xlN/HoMOGOm9yXDo+euIlHh4Ie
itofqB4tWvsrxKPFoHCFeLQIf1chHi3y4hTi0SIlSSH7aLE6VSH3pUVtjkL2
0SKpSCEeLUIOKWQfDQJqqEcDg4t6NLD2aSMeDWL2txGPBvWX28g+GrDHvt6u
ejRIG+Ah+2gQH+UhHg3+TPQQj4gliz3EI6JijYd4ROwp9BCPiLwKD/GI+OJ7
X79QPSKKjnmIR8Ryu4fsI0I8ST0iHp32kPtiKD5DPQz9z1IPw6dnqIfBXU09
DPZNaQHhhYxPmlti3zGDoaCrNn3dRsarrdqMbSYGc2BY55J8xqvmZKxdMJYh
9Irl9P2VjOuz/LtfDmVwRpaffvEh43ObxrflBjIcH3uxs2Ie429U3tKc/0dA
wa3GjIZ4xt93/PXH7S4BCeGOvhWM8ZCcikFXHwoIDb75+PnbjOcs4oe/UgRU
B260/HpA4LtXVQa3XxBw49y1PEukwIMfbv58wX4BmUN+GHfwXAxvujk9QFkv
YN3o2MLilBjeMTykbEuGgH7t2fkj/GL4zLt8ojFeQHjKxOBlp6J5715ZDQFR
Auz5e6Zk5EbzvntfFj4JE/CTed+wNw3RPL20yNjRT4D5ulSaEhT9//+pgP8A
rWKKcg==
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV1QtQVFUcBnBaQk3QYUwwhBSBxLFw7O7ee/bN52PCR4YpYxqTg6SgCCOg
a+SET0xTWjIy8DFIteRmqDgi8vBxMJcFdFETeZhgQrLga1DxXdZ6Yaa/Z86d
O9/cmTu/+50z94yKXTZrkcLNzW2N63pxfyPp/K2o9SJ3k0c4qraaq0/uErnw
LPDbafeN0IXv2pBeLnJ2YGfxzXYjPtv08E1zq8i9/ZLi2y8YkbYwP+duf4mX
6HL3vXvcCDTkdu+VJC74BqxuKDCi7srVMYcSJL7a+vjaha1GBKeZMMgi8d33
whqClxkRbp3HjrVJPLOn4uOzkUYEJmUOOjGa8Q8O/LjsTJgRuxui3R5pGH/9
kX32zSDX+7Ps7renMb5EUZZQ4GvE4Jxzw/LnMf7heVPxkwFGeNxZrveOY9we
83x85xMDQr4rTjEkM37h8Kw/k7sMSPpq29HQNMYTalJPZTca0OoYOPhcOuPZ
P8xvnHnagFULAk3KdYxH6n1HWg8asCH6d1c/jMfJwwDPtb35iSXyqSXSgIdN
vdncrnZNAybHXZRzcNCLYUB3aL2cS2I8XdMAtxGX5Dx1T49r6pE8pUHOrS0v
hh6T9jbKOTXAnhJg12OltlnO/aKLPKKL9PAyXpVzvOzRw8/jmpyfyh49Kr5v
Ix49bt9rJx49ivyuE48eCs8OOU+TPTp0VnUQjw7zZziJR4e4PCfx6PC0wkn6
0aHpmJP0o0PRcSfx6JBxwkk8OkSedBKPDj7cSTxa1PflXo8W5krq0WLiKerR
Ivk09WgxzEY9WpTbqEeLuVW9OUT2aHGninq0WGunHg28qqlHg+xq6tFgaA31
aJBfSz0a+J5xkvXSYHNfzpI9GjzuyzInSIMFZ6lHg6qz1KPGGAf1qJHhoB41
rjioR43OOupR47VztB81HHXUo4ZQR9dLDeagHtf7+7zTZQ9DcC31MAx8qR+G
bBv1MNx6af8whJfRfhimH6XrxeBVQvthWHuEehgKj9B+JJhLqEdCSCn1SEgp
px4JHjbqkbDVTvuRENv3PV/Lnv+f9/Yjwd1GPRLqXtrPIm6UU4+Ijw5Tjwjf
fdQj4qcM6hHxW1pvfix7RJQmUo+I9Bjaj4ghUdQjYlUEXS8VirXUowIPox4V
8gKpR4WQBx3Eo8KSTw8lTnL9LxOnBOToZqrQr8b71uDVjM9JWfqKUafC87c8
lh51/W9HX5tdkBSqwvurzF36FMabci6trx2qwgNbYfyeeMaTtnfviHJX4dGA
mOut0Yx3NltueN5XYtYka+yzGYxHLLq3ortdiX6mjVd7DIxvYc1qRYMS4y4e
emdzltTnUeLO/eqpEUtd58vGsSunzlRif8mRFNN7Eh8eZ0k36ZSI90+zDBkl
8Zb+9V/cCFUiIMi7bcQzkf+VULbc6qPE+dr0sTvrXedfVlTswVeVWOdTmZ6x
X+S2FQVT/u0RME5x+Y+WjSLP8y8cndshoOmb6sk/fyLyExsW//15s4A1lZml
LSqRB+2/XGNxCLh7d8eWnAoVn/zlige5hQKCEztmFE5X8cS3WYWfWcDQ8amK
gOtKvmN3kH9oqgCbwWDt2KTk1c2ST+VcAeL2iHAvlZL/07b8F+cEAQulbfbM
LoGrS5sbd4YJmD1q+ITFVoGb5i3Ov+wvQDGn7de8ZIGXVY103+slILm+q//4
iULf+S7gPyes5Co=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAA8Kxsf9N8LMAAAAAAAABAQPl5NMS2
UCvAURum/OLyP0CkgxppKdUpwLYur15N4j9A78kebisKKMArOhsmP84/QNhM
QdO87yXArz3qUri2P0BgDIKY3YUjwEY5HOW4mz9AiwjhvY3MIMDtLLHcQH0/
QKaCvIaahxvApRipOVBbP0B6bfNRONcUwG78A/zmNT9AFqPNuukPC8BI2MEj
BQ0/QMpOTDX+CgrA8/4P9QUJP0Bi/fi7+A0JwHIoNM7RAj9A3q7TTtkYCMC/
VC6vaPo+QD1j3O2fKwfA3IP+l8rvPkCAGhOZTEYGwMi1pIj34j5Ap9R3UN9o
BcCF6iCB79M+QLKRChRYkwTAESJzgbLCPkChUcvjtsUDwG1cm4lArz5AN4uI
ZUV1AMD7NUoIME0+QGYhFKJRzf+/paQDO7k7PkCdZ0Cn7b3+v02zwg+jKT5A
EumV2l68/b/zYYeG7RY+QMWlFDylyPy/lbBRn5gDPkC1nbzLwOL7vzWfIVqk
7z1A5dCNibEK+7/SLfe2ENs9QFE/iHV3QPq/bFzStd3FPUD+6KuPEoT5vwUr
s1YLsD1A5s3414LV+L+amZmZmZk9QJV+0NuFMvi/jF28/nmDPUCTi5Qo2Zj3
vz8sUgaebj1A3/REvnwI97+xBVuwBVs9QHe64Zxwgfa/4unW/LBIPUBc3GrE
tAP2v9DYxeufNz1AklrgNEmP9b9+0id90ic9QBM1Qu4tJPW/6tb8sEgZPUDj
a5DwYsL0vxbmRIcCDD1AAP/KO+hp9L8AAAAAAAA9QOpgJx8=
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-14.243801099792535`, 32.}, {-11.926350207431028`, 31.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1X1QFGUcB3DgeFE0xIbBKN/BDLpdNNm7vX25/Sa+1KXeJSS+AiFgmmhI
aiSMoeiUOSpMkC/HoZxjakKAiSPhzKMGCDO+dYHgCwoqii+JelGSYHDrH89v
np2d7+zszme+vz92TMLK2Ukebm5uKX1X/73zyPL1jgwtcXMN4GMt7hiyWUs6
gn77queZggKPct3UHVoyLFRjPt6uoPhmenLaHi3ZyDRtYJoU8Dqv9N0/acmE
8UJA/FkFiiZ6ReWvWjI6sP8FBWemJ09znNYSS/d+c/d+Bac1kvudS1pyylH8
/NMcBZK+wfa4VUvSiiLdN2comNQ2cdSzp1qS7BoFNV/WfjfFiyF7HLHLbpsV
DI8b1M4HMSTQtnpWq0HBe/t6Jl1kGdJQffj1RSEKPEVbmu80hjSaeitihijY
rX20/24sQ0YwX4iXuo14vPp+7ZJ0hhxc7ra3rt0IzbD8a1vyGLJm4C+34TCi
aUhnm+UoQ77VZAzUEyNySwqTZmSyJH/BxPrLM4zILvOde2wXS+amDd6QJhoR
PHLpgZpylmxPHVeSEmpEirPS8s1ZlvBzMmbVBBqRGOEW03aFJVFjhi7O1Bjh
08KfeNjBkrY/bj3IfSwj5kni2sK/WXJ7mfOe91UZ0Suyc7p7+r7fMXl+c7WM
F9E/+vR6hBPMuqD4lsroLC1oPuQZ/qofGXkVan7eX69ZRsRJNW+7xfcdGfW/
qzl4bP/ImHNOzRXxg/qOjKuNav6w0Nl3JMS0qrnlev9IqH+o5lXDa1OH10qI
eK5m7wWlXgtK+56Ps7nyEpdHwiNWza51myUUvsqqR0JLiI3ySDg41EZ5JLx0
qt83uTwibp2nPSKiC2mPiNnJtEfE0Y1Wqh8RqSYr1Y+I1xgr5RGR/a6V8oho
nGqlPCI8M6yUR4DfeSvlEeAUaY+AimraI2Dmy0LKI8D70F7KI2Ckso/yCPjh
lJpDXB4BiycUUR4BOd8XUR4DRjiKKI8BXj52ymOAabyd8hgQKdgpjwGfyXZq
XwZI76t5u8tjwPGpanZxxhpwzWSnPAaUWOyUh0dYjJ3y8LDE0h4eo5NpD4+0
DbSHx7ktdqofHlIu7eFRtdNO7YuH2UZ7eHQVqfkjl0ePkgO0R491h2iPHvN/
pj16JBbTHj3WHqH70ePkQTu1Lz0iiuh+9GjeSXv0KN1K96NDZSbt0eHp57RH
h0UxtEeHsAG0R4fIP20egzThJMvyQXinWQftstxMtpclR3LeSvAXdGityzQF
dLGkI/Rmb02IDgnP4pdW3WfJpKB8rwB/HcrbxStvX2PJ1jh5zT//cbhg9yuI
qmdJ14sGS+o9DpVhzWWTj7Fk5ZO4vKwGDqnr9rzhtLLkX+lq5DtnOHTlfXJp
SRZLdtyYvjCpjENimLBiVDRL1it3pen5HAaYttn/CmWJ7P4gVJPJ4brz49QG
D5bUhUQF70ricCNs02VHC0OCD48KHWjhEPBwfGPHSYbMyLGIURKHr3khZdhe
hky5cmfe2jAO/v5V1oWbGDJg043s1W9yaFpVnHgihSEFOXLVzMEcLsb7VTPz
mFf/Lw7/A0WxIhI=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1QtQTXkcB/BqV7JWL6QHPWSjtnvPGc59P87XSotrFaE2Eq1lWSuJzJWV
K5atzatYLdtG8irtJcPOrLa/RzTG4J5rlZ0el0iS9FjtirLXvXbm/5v/mTPf
mXNmPvP9n/mfoKTkWV86OTg4pFmvt/eO0hUZ5g3hxME2QOnpzLxTxeFkRM8s
vaGbh3GB4sydP8PJzfykmdce8ugtz6mdMkREAp+Kt5vMPLad3jTwg+ki4tp6
flQh4REf68l77xGR/H19HhNKeKwt/iQjtVFELnW8WZyVy0M44FHtx4nJtn//
8Dqq55GmzPDx2CUmLaeUY79L4JFoyE6N6RaTZvfUfWE8D9ffL7ARgQxZaYwM
LGZ5zPe5XqDTMSTGZVrJ2CAeuoPlFcvWMCTP+1vZGXcetZP0OQUHGMLeb7wS
8UYLJ3c/11bCkJCk1TGNbVrccMjnpz9kyPoDXJPhnhZ+2S93PXBiybickDXh
VVoEHM+LP+nJkgmyKc6Nv2qRMr7K7TcdS7JqjH0Fc7XYJwTMFMeypKh6V5xo
khbBLw8m6BaxpP5SUk8so4X3UbXEbbn1/ashNf5+WqTe66/Rp7CkWKjrNThr
Icltmpy9jiWSli2LDJ0aLDS3bpy0gSUPnAMGj6rToDN/WObhDJaUikv+mX1V
g9bmhbOOG1iyNzF0bKhRA69nt9pmb2bJEttosPm927b88khU75EoDQp97HlH
k9y6NEhm7Dl49NvR4FmEPZ9bONi6NPCPt+epv/xtXWo4JNtzQ/3bUWNPpj2v
HnktZeQ1Ne7+aM/O84wD5hnVmFtrz0ttHjX2t9lzr82jxlVHE+VRwzLCRHnU
eCg2UR417kTa8zSbRwVjoonyqJCmN1EeFULzTJRHha52E9WPCtEuAtWPClNG
CpRHhdowgfKo0D9BoDwqVMgEyqPEMKlAeZRwYgTKo0TWaIHyKBH3gPYokXDL
RHmU2F9J96PEwHJ7HmPzKFFygu5Hia1FdD8K5BXS/ShQU0j3o0D0EbofBQ5X
0B4FsqtM1H4pcP6GPe+0eRT4yGzPNs5oBcy1tEeBy/W0R46e+7RHjuWPaI8c
gS20Rw7jM9ojR/hzuh85kjtojxz6Tvr7kePTLtojR8O7rLN5ZFB20x4ZErpp
jwyR3bRHBqcu2iNDWifdjwylHfR+yVD0nO5HhvnttEeGu210P1IMfUp7pPB4
QnukMDXTHilWNtAeKdpvBk/Nt54H5TWP2yxRUpQW+yxYYj0v1pblx5kVUhxP
Kv/4QjpLylrTT2jGSGEZ0Hn6pzSWxP6wozHATYo5O4UOx1XW53NNvfpeCVze
xLZ0LmWJi8PkV7pmCXpmG/YvX8ASV6HFsleQIHj3DMcVMSz5flBFSWylBO79
vucGDv/fI8Ft2dkXue+z5EVd5CZLlARb1l1skD5miOHy8KMmhQQ3h06MVF9h
iLOvuUYxRgJ9xOMgeSFDtlg2Dvdxk2D7oLMpYekM6fPySUzu5fA66Zhk6Bzr
eV9x6Ky6mcOd6IvfdIkY8pfZ28sgcHAzO/pWD2AIH78xU13JoezJV8q8OjEp
iBZeryzlMO6z+oL+Q2JSNT9rw7w9HOIqDu7WfS0mx5qKTjqt58Arj3mmy8Vk
4iP/bYu/4HD38uugnEFikrvolYdhBoeQ+J8rDQ0iUhCn0MWpOIT1bX8ad15E
kq7Xjm8N5WAprSz2zBORhnP3qqW+HGYsm9hetkZEPP3VQ7Qfclg13rVK9Lno
3f+Uw39fwomm
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{6.490891656593021, 32.}, {1.563784511510903, 31.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNk3tMk1cYxusQ1H4fVQSZVbmoZNkIoo4wyXc7TxiCgAgyJd4IikodU1HG
ssJkOpiCYQMMXhJsxUZwRIkjpCrWS2uqKCTGy4hGbqtUkUkwBLGlzOno4Q+/
J+/Jye/k/eOXJznzM3NSt3+iUCgwfty3ovW7pAaH2o3uVxgjP8sL36TGzu7n
i4LfEGzTZrlu62cjeNm5hdF2AuZIWHfu1U+h9k55tv0BQf1+bVDkRX+kZTzO
KjMRkJgEC1s2Cx2LRGOTgeB+j8HsEvxQq/21tfMgQVry/oB3bTNxkTSc9dIQ
PDnW+9Q30gfKYmNixHKCmm0n/vnFoUJdtL55SzBBjvVCXNY3KlQetMSkziYI
6w3z/cnqjaLkZXypiuCBxWelJdYbP56epPPwIEjPSB+O7GaxVxukufVWQvv1
6V5dh1jsflKpa+uTENH1eUnT1yy+v75W8H8sodBU/8MVXxYFobtj/7BKaFxX
8XDIwaA0sMNU+KeEvMye6nWDDLJoxvfj/qY8Wps8VpssYV+BjXK5PWp8JOz6
9xnlhQvckbCqzU750mZmfCSEvHxBObFmJL5mRMTA6n7KPd3uiDirHKCcO+/O
3nl3RKzxeU3Za2Oj58ZGEazgkvmI2Lf+HWUX9RGhM72X+YjYkaE4+dFHRG/c
pJMffUQo8yY4nvoIsNkn9id8BGSe+CDzEXC0/D+ZjwDW9IayhvoICLkwRHmM
+gjwfDgo8xFwbsGArB8Bfmf6Zf0IiEnto5xAfXjwS57L+uHhEHplPjzytTaZ
D48Dhzpl/fDoin/VXmpnELW0KrA6hcepSnWxuoXBYb+4oGaBx80N39YpjzFY
P6NohyWUR3z9U35TCoO6kJixpjk8IvKzY1WjSuxZ/Xt7Bcuj+N7c28G/KdF8
PN2ZpuDxVd3g5SpWicIRY+ZUB4ckhS1Qkz8NN7Or/GsHObT0DLuqH01FsWt0
ZuhLDtZqc7nJczJW7KqZbrVwWNNi8FwsfiCJk+E8rOfgzElq2Mo5SdmNjtaf
Czlovizy8fUYIl66nBLDZg4b5h7ILgi3kxu694uHYzksVUVdm3H5PjFaSqx7
lnDo/yLw7V3zeXPfFCY6IIBDdDgxVOj/Mq/NLT3vZDko5nQe1SfYzBP/ncP/
8+G8jA==
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1gtUzGkfB/D0xqYLJZFMY+Y/g62mzKVmprl+110ohUoT79JbraRSKLnm
mkvhddnkzosQWhKRXZEmJAqF7SqXpqayGd207JjxnvP8zjNnzvf85/88n/n9
n3nOMBfE+IeZmpiYXNW/vr2b3F80PatjGEwMBWSMCc0PDHHE/F7Gf70/KrHq
yN5Mn0pHdF7OyGluUOKMvcmg3RHDkc9aHNFQpsTgfae66NY0/OaTfo53S4mH
tE0hXWoaXghoaypOKaHOOiJ3SncC/2lXfdl2JSwntB9MXU3HTY57BStGif1v
1yZMSRyB5cgPLvFVQqBm/fLjeAYWDDgZ89BNCdtNd6ZnRDLQO7Z4ZjOlRGH9
gVmbdzCQIsuLPDVEiWnVZ1dpzzJg9nlZTre5EqcT2u+V3GEgZs0XbmO3AhXZ
8dzRlQw8KPKvi9Uo8DLFLf/zOwaGPIu7s6dSgeyvIxZ6tzPgf3pe5YxCBVT2
U0V23Qyslg8ZkXlJgdPlF0cFfGYg3FAKFK68HzWxl4EyGd0x31cBv5hhyqFf
GfgwNt4aXgpMvnDkcPG/mLidGIZ2SoEszzkpwRZMKGp0l8utFEgyn/K1ZBAT
sfHMsPoOOXJHRpsynJiYIW4OoNfLEZJavHumMxOvOf4pWx/KEasMuhAhYmK0
X0A3lSvHfywdgo4mMhG15Mpgn1A58qKezbXaxsSUR6fa+dPlcJi0dnP/g/rr
r4JhJpJjXYZD+f7zTJSll/9dwJDjQ/gx5NxkYrm5tWuUhRyRWUPK5z9kYp6z
RbGpTgZt5MrNR18xse3z/WebqmVIPFE6d7GGia410/w+FclgPdMm6GEnE5lX
dsv9smVQuadxzEZSSOm3g3s+TH//pNleu/kUgmO6Btj6yrBYyRn5RUkhmW7h
EyeWoWaw3Qfv6RR67ApaSpkySIv7ZyQEUyj0dWodZSnD1jk2rI0RFF6X0X2T
dFIUFY/aHruUwqyMezb3q6X4y356uSyZgsNZW4GdWgrrnzZ0NaZS4H4xzQ3K
lqJ4ec2rvbkUop022QSESzHPJy/Q+i6FcwNpg9J9pYh0UtWtf0xBEbYk66VY
iqaGu0s//UlhNH1TrSMlRf3xj4PDGimESgLPqyyl8Alsul2mo9CR937gIZ0E
XLPMRGkfFmoPCa2rqiVIyeTITliz4NQw7uRwtQSB4xMt+zmy8NuOgeXB2RIE
rMhZJx/L+r5/JFjSN9Txgg8LxTe03md8JVBvXz9SrmJBLbnwRCuWYLaV3YmW
CP3n353pFFIS0LYM3vX7UhYO36r6Y5OlBPTezW2XklmIuz3V+aXOC0GLIm8X
pLHwtlUn4NV4oeTZ76a6gyzoJr+oTVV7IUm8MXfiWRaOlX7itGV7wW61w9n7
z//v8cJYYcjGmw0sOO/2+prj6wWXNb3JQe0sTN1bd5zl5YXSWd3Hj/VhozhG
5XOZ0l+/4f9mjy0bp1jnzOZbeWHcRfMpfIqNukslhWM6xLDnDX+yUsBG4uC7
afQ6MU6M3bYidgIbsX6pC9weiKF5PXuCTRAbheGuCMkRY/zR0Jprp9lgHm53
x1wxCvwcJiZdZ6O8LSwgcrIYneVFpSOL2ajW5WUGC8R4Q8Uk3njOhiKrdaQt
XYwtP9mOE9ezobM3K001F6PO/YL70SY2+vB7jj1pF+FD01hp219shJmUHXlZ
JULesvJffuxkg5Gcos4sEkH0WHXNu4cNfg5juCJbhHjHWv3vnf29PyJYC425
53+++iHCzYXGnNYg1g8R1lw1ZspQIswYVmfIuT9b6ocI4n3G7H1UN+WoTgi+
c70h11R/KyGUz405jqZeQlML8fOB14bcT5XdV5UthNO6t4RHiPmqd4bcbfAI
kUt7b8ipBo8QwwqNmWXwCLHNr5HwCGF5r5HweCKDriE8npDM0xAeT7zfoCE8
nqjaoSE8+vu3G3OXweOJGds0hMcT3Skaoj+e+HWLhvB4wmWzMU81eDxwZSPp
8QB3A+nxwMlk0uOB8FWkxwN3kzTE8/KAwwoN8bw8EJqgIfqjn2+ZMV8zeDzw
Kt6Ypxg8AvSPIz0CuMeSHgEmR5MeAToiSI8AskjSI0D3UtIjACeF9Ajw5CTZ
HwG0ag3xvPhYpSM9fKx3biI8fHwObyI8fBTNbCY8fJw90EzsHz76VjYTHj4q
LbWEhw+aWEt4+Hil0hIeHgYkaAkPD9e3agkPD5V7tISHh9CdWsLDQ/73bOwP
D6P2awkPD8dOaIn9w4PzVdLDQ+Ej0sNFtJb0cOFi20J4uPgkbSE8XOyqbyE8
XMQMaCU8XHi7tRIeLuiKVqI/XDShlfBwcdHTmPcqNHsUmjGIphlz/s1vNQaj
PhnXM0yXNgYv/jBmS8MEYyB/bvQ/KvlW7nBIN2adYUPqj8hlxuz07esscYf5
YmOeMP5buYO21pgXFQyJKhjijvTzxrzP4HHDqnYt4XGDeqZx/TcGjxtWPjZm
K4PHDRbP2wgPB7UPr/9Z0aU/ry00LYuOc1C4cFBPkP58LVOn9/FN4iD3Ym9y
1Rs2Xvat+mF5IAeXMxLi5z9lQ1J42aRezMEttw2l7/PZ6DB10u6kc1ARMWJP
zHH9enccH6w356Bn8rSCrnVsrOyTlZHX4Qr3sv5zNqjYGF/wZK6HxhXRJkHB
A3lsRPTZavex1hW7rBwP/e1Bwb+o0TdupytihvcuKAllwJ55527+BFcMDe6d
25nkhMu29jHlpq4oWg+ToRsdQaXX+10pcoE2uzCr8/VQROWMjvr3bhekvUkJ
PfCrPdLC39+qWOCC006p7N7jdthykTFpmNQFopCythGmgxC04+kPox1dgGOz
75ldt/n+/9kF/wBcneey
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1gswVXkcB/BbSkUq5XWXpGvTYz3uy30/vm0PeuxopW0su6LyDpXaEruS
yrYoSi8Ku3ZTUUo0teJatT1kUghp02NWqSyJhJrd6xw78/vPuXPnO2fOPZ/7
/d3znzs9INJz7UgOh/OL/jX0zrkZ9kXBOy44zAJi77C5nfv7lo9vtci/z2bL
2QYeF9u02PGIzTucmhKcmrQwes5m/kyF2aobWnzexWY7i6ELtJg1wOZlA3ke
A3lalI8KZ3JlXWG/f5oWIyexeePP80bsitWix5rNgczSIpfH5v6hyz20sLZl
c8ozWeozmRa+E9jMY5YWgW/Z+5WuMtYfWihq2Lw4u2dRdo8GjZlsfvTX0NJA
7cfm9TbX9YcGEZZsHu1TpD80GPgQQjwaeBWy+T3j0SA/ks2pjEeD9/PYbM94
NNDOCSEeDeJ5bF7CeNS47BhCPGp0ubN5A+NRw/Y7NhsyHjUe+IQSjxpBuaGk
HzVut4YSjxoGw9+H9ahh7Eb7UeNlJJsXMR4VMtNoPyrYFYQRjwoxFWHEo8LA
8O8hiPGoEP2Ezcy4PVQobQwjHhXKKqlHheRs6tHfbz2dlxJxEupRIqczlHiU
2JMVSjxKGHrTeSmRwgkh/SjxsTKYeJTwOhZMPErsSw8mHiVKc4OJR4E/bgUT
jwKlJnReCqSF0nkpUDgujHgU6Bjul/UosMA+nHgUKL7C5k8ZjwJS/3XEo0Ct
SQTxyBFfFUE8cixMiCQeOXiLo4hHjvDBDcQjR3PzRjIvOebcimbyXsYjh+/t
TeT5kiPy8WbikSPAcAvxyKDQbCUeGd7sjiEeGZKfbSMeGWIy44lHhm1TEkg/
MuSn7iAeGTgmO8m8ZEhI3UU8MvCnJJHnS4qxmT8SjxTGDj8RjxSKC8nEI4VT
bRrxSCHS7Cf9SBEccIDMS4oaVQbpRwq/mgzikcLO7CDpRwJT04PEIwH/agbx
SPC9UwbxSPAnJ514JPBel0b6kaDzShrZDyVI7E4n/UhgZUw9EpwZc5h4XDH/
RSbxuOJBQQ7xuCJqxW/Eoz9/vIx4XNHoWEX2Q1fkN98gHv3n/1pD+nHF+b13
iccVnYfrybzE+KC7TzxiNI1pIh4xEtc1EY8YukcNxCPGodENZF5i+HrWk3mJ
Me5aHelHjJxv2HyR8YjBs6kj+6FIv3/UEY8IT43qiEcEe2Ud8YhQF1dPPCKE
PqwnHhH6ZjQQjwhbvm4gHhHatjaQfkRYnNhA5iVEzvB51iNEu3cD8QgxY/jz
WY8QKVOpR4jq62FtS3u5eJE4e/o5DyHkkaIi5zdcuK/OmW0mF6J+ymenv3zJ
ReKI6h/28oTIKvFsLHnMRabfSXv78UKke50S+9RzsS9OaX6nV4DSLkHV3Gtc
+Pts99rfKsDYPe0JIcVcTOiPeRJ5U4Aku7sb7x3n4shXs8rWFAvgIPaYuHrR
/x4B3ETfJohduNh1NMSgyEOAwO5J/3DMuKi4lHN+olyAxPVBnjf6rDDpqnH0
Tp4Ax4v8z+55YIWYS6fcTMcLUHL231HuZVYYPBLnVNzLR3XE3OWcY1Y4uDZx
RlgrH60dDkeLY63gblPhIr/JxxvHomZ/HyuYlTstnVrMBydmk5vXU8thDx/z
p+WOrr9sidPhs3xrl/HR87Hl8rZkS3iNzDJPU/NhauEQtGSlJfxmVqbnO/Jx
OOgHo3nWlrjdcqjOwpaPlO7neQFNFjg2za6pxZSPjlI/yalUC9R2e+f0jeHj
0oW2cq7GAoErFjiGcvSeV7Gac23mKE+92hf4zgUZvrySqCRzbErztz3R5YIz
2RmCwfljUb3/YXtelguSgpIG/Ve+1gbeytne6OGC6KLTPib9XRULXc/8rTFy
Qb4k3Yu3wVAXWD/KoqXaGcXxJxVxa0111SfyJhcccIbCZnzS7ioLXfTZlJZz
a5zR3hE1mb/cWuf3qiLqtdIZut7G5s1m03SpPsp7Pp844/ERu85Cg+k69v+h
M/4DxbGCcg==
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
qzz8D76Wvlg=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
iZw8YRGypfNoo0Fh/v/sif8DWyHyYQ==
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV2HtcTPkfx/EKk8pSSqL7zJxTarrONM2lZt4/kh9Kscu2tCISCuXSTy67
+JFcN5flwVq3WottVUJk3S+FcklLpDblUtNlNJ0opX7TOfPH9/d9nMejx+vx
mMeZ53y+58wl19glU+JMjIyMXI2NjPr+Gt1LCM/+OAJG7AKW5eXSHrtG4lHV
Gy+XNjWM9y45tjvCHtmy04LRdWqcTjp55a2fA/ZaRr6Oe6xGwrgZqwUyR6TH
PZu3rVCNf9ulv5wY64T0wOBzZ4+poarzrpyZ64y9aRvvVW5Sw638d5X3Lhdk
T8k+wYtX44p4xSx+tCse/XJuonisGjEZvWUWcj56Z/96cbaLGp8vpF4um83H
1MPXQ6bYqZEmPpheuomPlbGByvTBavTjzVZ0Z/ERf8b4UL9+aiz2fvh45jU+
nDY4x99uV+FB9uuJ7eV8HK3KOHT/nQq263/549pbPlquTw2yfabClD+6tFda
+eCJFof+fkuFHzxNRnzo4KPR6WXh2hwVeP1z6GldfMxjlwpeodRP77r50FyZ
N1UTocJq8/Ti/cYCfD3u588dchVaI5+XLTAT4KiJbupuoQo7R1ifibYRoES7
Jv7CEBUmz1VOT+ILUD1Y6hPXFQylX+TzLLEAj2Mc/zz8Phhh6yZTn8cJcKLW
/3VseTA2TlaHJMUIELM/5UHejWD80ON22pgnhMcTx+IT04LBrPj27O8CIW78
Z/468Zhg9Gqduhm1ENo3ddnRPsE4lPjD5obpQuTbZYTz7YNR1Ljim03LhRhk
vSh2Iy8YmxcNmFO8XYiup6saN7QGoaJVlH82U4gNMy7VO74KQuHKppCQS0Ic
PuU+ferdIPiahNitLRVi8tVi9ajcIGQ1OVl5DqJQc8Dju2exQWCUWw+ucqSQ
VkBHlYcFYfVPTmah3hRu7rAquywNgvJ9ZfQOFYXdDo13t7sEwWfMzZ8jJ1Fo
n5MvHWcehOjMJ/k/fU+hZc5C18Y2Ja6bmhdMSKSwysFy88oqJaYnJRxZv4rC
wR1Z8dq7Soiq2hMl6RQiC9xuReQqUfwqp+PbfArb+p+IrJyrhGNYcXfjNQoz
Vc8fJU5S4mnymVT/EgpG58/tYAKV0ITHLvGsoLBovmrrUlclYmrqqp7VUTge
tfzOO3MlpKPEdyRafW+app7MKJDoHkmN/UwhWfvmU16VAibVih7TATQG7nPW
DixSoHN8W8TaITQSU3nUtFwFNBsqy7f40pifLN+SFqeAeUeoLkpBw62g246Z
pIDsasxn7RgaqXHnXaNlCqT8TTVPCqfx/Zo5mVddFbgafOD+imk0HnfxDttb
KGDz6dLuuTE0ntUdsVrGyLHSOH2s/Xz980m8e25XyVEf3a/uQBKNvc15c6yK
5JhvJkqoWUkjYojn6KhcOYY8590x3UNjtKfHxqI4OS6falhSflD/+AdZSW4R
cqw5OWf84uM0HIeVJf1XJkf40+WT/z5F46Xp2Y2VrnL4eDimm+XRuJ8Zku1j
IQf1Z3Sz+UUarfVb3v/IyOAVLV7/4iqNsOfrpSVVMoQGHhuz4g6NV4tFB2yK
ZFiqOiGpfkDjWM6WId/lysCjnPdb19Corh8uXBsnQ61koKLkrd5jkpndNEmG
oF1bd1RoaMgLri+dJpPBUnFil0xL4wEvOaXQVYZZPjNCm3Q0xrXmF9hZyOCd
fOqPtnYaeSlbpMlMIFb0ZtyY1KHfn/2tultVgVC8tEr/0qn3TWlqsiwKxCpj
UW/vZ1r/ulOFUbmBOJ3zj/5+pw33eyDiy7n+nBWhPwJxZnAN2zvrZPojEKtn
cs1nVyAe3eL6wiwL/aE/n+o12xOOMOOPMFJ89Yjr6qq+JUXH8lq2lzoUJTsU
SbHQt45t3ozcATNypSjVviU8Uky79o7tTtYjxZqU92zvYD1SKIfVsy1gPVLs
+aWe8EiRZtZAeAJgE9NAeAIQdKiB8ASg53oD4QnAhdIGwhOACkN3sJ4AaA3N
eQLQYWhuPgFgDM15AlBr6ImsR4LbpaRHggOlpEeC2FLSI8HyEtIjAd/Q3H5J
cPdBA7FfEswyNDcfCZruc13AeiRYbOjxrEeMt/dIjxiR90iPGHnFpEeMVXdJ
jxgm90mPGD1/kx4xFmlIjxjhphpiPmIcFWmI/fLHvOkawuOPwxkawuOPCY80
hMcfmmuNhMcfXbwm4vrxx+axTYTHH+mrmwiPP3pONhEefzSXNhEeP3ytaSI8
fvDtaSI8fthk1kx4/GBkaM7jh5MDm4n5+GG/eTPh8cP9wc3E9eMH1bBmwuOH
TsdmwuOLDvdmwuMLhbSZ8PjixljS4wvhBtLji9o9pMcXoZmkxxcTcpuJ+fhC
V0h6fKG6xfVeVcMeVYMPRPe4/uty3/LB1RKu2dPt9IGulGsL9gQ+SCviurSk
b3lD/JBrhr0gvfHuHdeOfS8n2RvHrVrYHhvSt7wRO4nrhBu2iTdsveHxK9c/
sx4vdHxpITxeeJikZfsN6/HCqXauB7EeL3zDtBIeES5s0xEeEayHthEeERI3
txEeEf5q5DqR9YhgqmaI+XgibD1DeDyx5SxDeDxxs4whPJ7o/sAQHg9YfmII
jwdaurhmtzvZA/t6uQ5lPR4wNWknPB74Vz+u97CeURhnaM4zCraGx3OeUTjT
S3pGIUPHNcspcUdXI9dtrMcduTWkxx1nHnPNckLcobvMEPvljnXHyfm4IWoj
OR83pMwm5+OGf+QMcf24ISOrjZgPjcyVbcR8aARMaSM8+rn4kftF4+kwcr9o
1PTqCA+F+Vod4aGw5I2O8FBgqnWEh4LHWx3hESLrPXn9CJHRoCOuHyFaNDrC
I9RfPzrCI8SXRtIjQE4j6RGgXEN6BFhgOD+3XwLMqtUR+8VHrsHL7Rcf/Aod
MR8+Ch6SHj4SbpIePpBPelwhO0Z6XBG5nfS4Ytty0uOKwpHkfFyQZUzOxwU7
W1oJjwtWvG4lPC6IetlKeFygeMG1+9oyt7VlzrCv5nrlf/qWMzrquS7uO52D
M8o7uR7OnsAJTydwz3/wQN9yRP08ruvZG8QRqzdzLWffEB2wLZvrrel9ywE2
z7iu2OClPxwwsn8b4bHHr9I2wmOPQ4vaCI89bE9xbcd6RqL/DwzhGYFAw/3S
wHpGIKGFa3a8dXY4Opy7X7ewHjuUSbl+wXrsYBLWTniGQ/JtO+EZjrlRXLPj
dhiOfRHtxHxsITJtJzzDYNFKeoYhrJoh5mODlocM4bGB9iZDeGzwdSFDeKxh
e54hPNZQ5jOExxrXzzGEZyhWFZPzsUL0E641rMcKz//PYwmN4f2T2y9L7DG8
Hm6/LFHO5zqS/QAcgj9Hc/2hpW8NhlN8O/F5OBh0Btfe7Am+wsFRH9kWs8sC
OVFcP3Hre4HmsE37SHwem+FRHtfWVn3LDBWVXPd9Og+YMRAB/T8RHlO88eBa
y3p4eBPxifDwIF32ifAMwIlqriWspx+2RV5J2a7//h9a5UE5rTPBsblfzfNh
aCh1a/9qLzNGw8h6RtWon+9SUeclT2PMXhYuuFyt/70VLa1cuNUIZouDWzMf
6u/PuYF3LKt71bXmF2d2Fuq/T7y76ETl96ibxl9JuJxJozao9ebQvV/UtGe4
nSadRtqCmrwX67rVu8/Ez920UP9+k5DWmJrapa6eOiEix0//fWzX0dH3znaq
f+xYcLKym8JF+XEL0aAO9dJ9d5eY63+v+szZFnp800f1eZ9ZvymPUJg+OLrN
07ldHXZbOn5JCgUobYbeq2hTS7+ZMOO3yRReNeQfTz2rUy/952BllS8Fv5HK
34KzW9W9ce737WwoBJecGjHs7gd1Dft+LDT8/+eD+n/HyCiV
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{10.490891664630823`, 2.}, {10.49089166369589, 1.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-11.92635020760244, 32.}, {-11.926350207431028`, 31.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlX1MVWUcx+mCTANE5svQEQ2C5N5zXem59577ck5+mXi9aCykWQRqqIjM
EnzZsrQsgVJEhBBBUCHiHlyKvFgDtiyfGqBi+IKGbymBU0haS0ASp9S5z9Mf
z2/P2dln55xnn/1+z3cnbHVmwlqdl5fXBu3y3KfYDt/4xmcO8aL1Go6PpVn6
B40kIXVtXcWwgrDOkYjwi0ZyKqE2Ur6nIPPbhWpSnZFYz19de/2qgrLad5oL
c43kbOedjC0/K6hoeTW5NcVI3k/qQECdgu3XOgofiUYSuan0llqqwDQpKjHC
20iGgpzzlU8VnI1zNcZfEEiX3P3elVTtuSoc3nZAIO0PF61Kdylwvu4cmL5V
IInz+1KHJAVtsd3FMcsFcjrs8pUfX1ZQf+RWle9CgYwdnFbXOU2Bj+utwOVz
BaJTa4dDdQraXc7bMWEC6V1Y5j75l4yRyuN+P00TSPH2m2T3TRmFcV+UX/IT
SLBzo6uqTcbBpd25W3wFslFNcjytl9Heckjrj0DWpXlKRk0H4yfuN7QlY3SE
8b67Vm3J+E46TPmlcE/J6Cli3JTipy0Z23yPUF5cORJbOeJAVhHjO7c95cAT
SwXlzSFnNoWccaBnmLFvcsOE5AYHalurKFOdNAeSy7+mPEZ9HFiWWM35OFAy
Xs35OBCa7+Z8HHjorXI+djy/RuV87NhwTOV87Jh5U+V87FgQUMP52IEZNZyP
HZNn1nA+dqjTGUdQHzsm+tdwPnbYn/I+Nljv8z426Dp4HxvKjvI+NrhDVM7H
huAhNzcvGwbOMS6gPjYEuhlTnXAb9n7G98eG1HfdnI8VRXBzPlbMinBzPlaM
TXJzPlbEn67mfKzYOZqu/10nkO6Vaqt3vPb8XEtw9jMD8Tlf0LzSbsUP0v6j
RSMG8uBY5PytkVa0RT/+dfKAgeSNpyXHBVmxvr+/+p9rBjLQ9qZ/7zMJJ6JW
B8W1Gsi4159L5w1KyJuwLjTwhIFcrH/FGH1DwsQdox1KkYEkd4UeCjgrofHt
cC1ferKq1KnlS4Jum6zlS09q5vRq+ZIQ9cIvWr70ZF78JS1fEiKiL2v50hOf
f6dq+ZIwfG+Jli89mWX35EtCqZ+s5UtPPnjOky8Lgk5WafnSkxnLPPmyIOXG
x1q+9OSZyZMvC7J2dmr50hN9lSdfFpQ0H9D6o/+/P9r3m0sos/NjwekLjPPp
vCz4qpMxO88WNGQwZvOyYLiR7cfmZUZ6aTFlNi8zpry4nzKblxmDri8ps3mZ
sacpl/MxY27uLsqPqY8ZPe2fcz5m7M/MoczOjxmLs7M5HzMm6hgvoT4mnB/M
4nxMKEY252PCGq8czseEJwt2cz4mTC1ifuw8m9Dy/R7KLF8m3CV5XH9MKKna
S7mZ+pjQtSKfciz1EVHyKJ/zEdGXvo/zEdHcvI/zETG1j3F5madE7B5jvHfF
qfGPskWogQWUYUzwrcgQkRHBuHGCZwMRv0mMe//oftrgEjEay/ji9bbBSklE
UxLjHV2zP+maLSJsPeMHntdnijB9yHjG/ZhdOn8Rf+cwZv8vEf8BJecj9g==

          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV1XtQVGUYx3E0bFIqjSRRUNFUMi95zp7bnt1tfg6lWRYbqGGIQN4oQ0Gg
VkgdNS2n8JYwZDUmkWhk65CJF9R3zHQDRWO57JKaCOySoTKkhExIyzn7x9M7
787Od2bPmc8+717GvLUyZkn/gICAdb5H33PXzt/a5mxQWIC2nsf4XXr/OfyE
redvC7Ly9H5q4kPRZR4LmvP13jjFtWGKy4JVBXpPi1SHJjksiNitd4R2gQW3
vtDb2l0U3V1kQcNXejPnwfvJOyxo3aN3RmFUv80fWBBSqPdSbfnux/S+33d5
tAWVIdVab21SfNuC4G/0fnps37Kgc5lT6yNJQb5twfuLa7Seteeub5uRX1Cr
9bWrfcuMOYH1Wq8KP58eft6Mg8UurR+OPzQg/pAZTbeuab1M85hx3nFda+3t
RJtxc/kN4jHjpfom4jGjeVAL8Zhx/GGP1i9rHhMuV3iIx4Sxb3iJxwR7iZd4
TNhc4SXzMWF5pZfMx4SZF7zEY0L4RS/xmODxt+4x4UCVl3hULLrkJR4VQy9T
j4qTl6lHxYlq6lER46QeFc1O6lGRWqP3OM2j4nYN9ahIqaUeIxpqqceIF+uo
x4j9ddRjxIV66jFitMtLzsuIVH9v0zxGHPa3xhlrRIeLeoyY6KYeBXFu6lGw
3k09Cgrd1KOgzU09CgQ3nY+CpjrqUdBVTc9LQdr/zkvBa+f0fkXzyNh5knpk
qD9Sj4xZxdQjI3M19ciIe5fOR8bxZHpeMgrm0/nI6IilHhkOK52PhDAr9Uj4
63XqkaDMox4JQ1ZSj4TiLDofCYl+b67mkaBm0/lI4GzUI2F2BvWI+Gg59Yi4
kUQ9IhbGUo+IayOoR8T1QXp3aR4R2x94iEdE2z0PmY+IjnYP8YjYd8dDzktA
YAf9vgsY0uUhHgGOftQjIJWjHgHBiybGvbleYebjWy+EWQXscN/5/J21CstT
xPpTqgDPLrV002rf72nj/M3RE3yvzxu4t2SVwmoO/+u+GCwgtGHB0itv+3yl
I6uNAQI6Fwn9QxMVNvr38hWf3Tbge3575sIYhQVNbbA3XDXAOCPtpD1KYdkl
WXmDqwzIeqRxTco52e8xIDS2Z+fs72R2KenViCetBgTKYZOLc2XWUv3chC9V
A6TD6ixbmsyKyx+z9ZtgwA8V8TdPx8gseJQ3JCrYgNTstYPXCjKb9M+J3qRe
Hhk/Fx4tDZHZ7ZmfivG3eLBvHS0JnRJLGBJXxl3hMWdMe/66OonZrKM3NVfy
iO+qsju6Rb+Hx4CsnMSgX0WWvSWyLcrKw/1hTmNTvsi2ZRXMTTTxcEZeEmMW
i6zo2WOFRyN5dCS8t2AeJ7Jj+7c4o0N4GCPT57b3CKzqzsDWcYE89m08HRFR
IbDmXuN1+S4Hc0byqZY8gXW7hpd/3MKh8968qdOTBfZEzoGcYS4OrqCv0/jJ
AnvG0zqquZLDL+mms415Blaw5qdMqYTDiNCZvcOCDMzRWmQdlMvB+eDMmNpP
eFYWWVaamM6hfbx90vBQni1R23ZLcRwyc4NGNts5Vh3xwsBt0zkkiK57YizH
ehtO9aRM4VAyMuTI4/05djNlge1sGIfEGWcSVpRPY/kV4av3PsrBZv/D9/mZ
5v9/5/AfTC3qmg==
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-1.2758562408125158`, 29.}, {-1.5091083436646215`, 28.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
W/7vJP4HLoqJ5g==
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{1.563784511510903, 31.}, {-7.27585624087402, 30.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1nlUVHUfx/FhZoBZgMItF0BEEwFTZ9/nfpQQ0CB4BtCAEGRJAZOUlFQK
FRURhGIRU0QMTZN0wgCRwmEMhpJNRX1kc+cguDCBDztEM88f93t+99zzPveP
+zq/3/3jLti49T+RVAqFkjJ1/XunPPu8e5XpMEExDIGLexv3clXDxOBhqqe+
X4kK30MHei8ME54v7DMPdinxvt/x/i3MEWLYNuju9ftKvEqh11d8MUJMOv4y
O1+nxOy+OqumJyNEuPnCQLsyJQoOd1X+HDxKOPymPu76gxIH/T+94/9wlJCu
DrxvkaFEveoDf130GHH57Pzpu75SYltywErq5BjxdSvF68hGJc4HFa3xSR0n
BOddLI5/pMQM38JDDtYTBDPgecxRoRLqCK+hhKwJ4u3TD2Jj7JVIzD1/UmU9
SQz7mlquYCmxp6skviR1kphzOsa7vV+BYr/YpJzJSULVGLoirkOBQ3E9GyZE
FJxrf1bSW6vALbcdcwa2UDD95uBdb7UCk/lX3fxnmqC8x2FuTqQC4RsSL4nc
TfBJpeeJSW8FbNNyx3cnmOBycII+QqzA0kV0nsMFE1Q0XrKpWaDAt4613s4P
TBBv/crGnq3A2tx2n2wGFY8X8f7+ckCOoDh3SaiICjpz78naDjmqS80YRyOp
+O/v9+ZN08mxJ2ru77ZZVIS68uPWq+UIzlP6fuhMQ0K63i0+XI7bjVUnBSoa
0oIezff1koPR7tXsv5OGgMujgfNEclA0vb1FuTS0pLgO3raXo3xX3huHX2gw
7y4f2MmSY5mFX1tTLQ199etVrAEZouLtLl+8T8MR0eLpqR0yfHplMLrsKQ1t
jvb8wVoZZv750Kqvh4ZH+avLfNUy8EZvf7/+FQ1RhpHh6szzx8f0NLikvbX6
82MZ8kqdc7snaVAlNT/aLpHhVmtgps17dHSuGmyLWihD+AFxSp6Ijr/ubKac
sZTBt/RGYnAYHXN5S7zfH5IiL3osblM2HfWh3Jq+J1KIzz4J+62ZjkfBKZH0
Rin4kTt81s8yxTpH5+WhFVKM5snzhIfN8JPOs2FdiBS7y92X/NVhhrC7Hm7u
nlIIH39pumaZOU4VFzTR+FI4zdItL9tljhAv79h0OylUAbIfrW6Yo6Dcb94z
hhQVhbdjVOYMRPSWtJv3SxAwlJaY7M7Ape5N6qF2CZwDo9sL9zOQcHlHblmt
BBJddMrFSgbqiPajK9USzNho47QqnInG/JvvPI+QgDZN1tGSxYTZCZ/98d4S
zJvntH3pDSb6Cmy3j4gk8E/s6vHQM5FazH24Y4EEJeLtHzrbsdCiydC9YEnA
92r6ptmThcZ2/lLVgBit10ZOyuJZSKA4WF7pEKNo79sTMfks3HFZF83UiZFd
eH1PaA0LnSEtrgFqMXYsiZQkurFxT0pZIY0Q4+WvVd3lm9iY855v0isvMTYv
OfhdwyE2Xk/cmpElEqNnX6Ww6gwbAX/ve+W8QIytf4TcPVzBxhp9OKuUJcbI
y62fr6hn485ofAxnQIQjY69NSlrZ6LUue/d0hwj2/W0ZVs/ZyOY5jlB0IlQ2
C2ev7mWjKbTO0U8twrn+ianvh/3/70eEGrWxR4o+nloiPN1p7KNPxVNLhHEP
YzsYRoR3Fxm7LJQ9tabexzT2moIBz4IBIZYPjRu6s+PfEUKsN/Y2G90XNjoh
iAFjmwWpTYPUQmicyB4hul4anw8bPEIETzN2usEjhN33o4ZeaPAIsSx5mOQR
Iq35fySPAOJv+kkeAVZkviF5BEig9ZI8AvBSHpA8AoQFtRh6yOARYLuuieQR
ILb+Jml/BPCMriN5BGAV1hh6rcHDhzruBsnDh/xBNcnDR3GrhuThA3INycOH
xxIN6bz4uGenIZ0XH13zNaT94SPBxdjlBg8fGSuN7Wnw8OC0UUPy8OCeriF5
eOjWkj088AuqSR4eqh5Wkzw8ZM/Skjw8/OqqJXl4sPlMS9ofHpqTtKTz4qIh
U0vycDHjmJbk4eJslpbk4YISoiV5uHg8WJzm/5QNZ9O++9d8uEh9Ebvxoxo2
fCOu0WUKLoa5VBtFFhut+2tedrlw4dwSW+HoxYY23DqzyoYLh4ZiqUU/C5b0
U6+r3+Gi01Zb0JPMwrWIGIaezkVYbXG3lspC3YGvOtaOcXChNnZmTiwTos/q
ttx+y0GpHXVxmJYBBnN9RbKeg+DOcK73H5NE1eaWKH0dB9TU1mWLmW+InBz6
toYfOBhysYqYX3KeSEvrbp29jwMbialbnL77epF3UuGdcA5qn+1e6SEcut7e
drNm3IODM1eeqzMkJho+/6b7MQ4HjO+uVp86Zqr5ed3XjqdtOfg2XajyFTA1
7qufR8y25ADnNkT+OM1CY/zf4OAfVHrAjA==
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-11.926350207431028`, 31.}, {-2.886419630917402, 30.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1GtQVGUYwPFVwlFcGeKynbOuWLC2amCIFOfeYxMShKE4JaYQKLcakQko
L4NpM5kGLCGaMowOfGBWQoRVczdR4olywJlFitkcXAM1sqycQuacZZfbtJzt
w/vM886Z/6f3N++H89zOkoz8+RqNJsV35r4QufhEqsuEGnVegZdOxm29scGE
KzNKhPFxCX7SZbZmm5/HkCBnVuWvEoRZPqnWta9Au2lNXt8tCTzrL8w8bjEi
df5geptdgk//cs08OBiNwsme5S+flcDeGGRWYqLQMDrtzD8kQU2ucN5kexY7
T8eU8NkSUDn3rWPxkai7tPkfGytBli5t1cAFPa6N350x9LQE7Yv6v1u5TY9n
vs7642etBG+W/DawN1iPn52zB3QFSsAl12253k/jWNCBc+ZpEcqO305zn6Jx
cKR5MPmJCJ6NF6+teJ/GddHMkb9HRXBURDWlJtMYOrSue59ThMfLVk/mraFx
98zpw//2iLBtbd/N8uU0Jp3Iu5neIYLZOB18QE9jgToiNA1Pqe1tTp9sThfB
UOXvmlHGtyJoYv0dHTU3IqR8P6m2LWexb0XwbvR3SqPsWwFC+r1qjwzPjQA1
4O9SQ+8Hhl4Byls8ai/Ybg3cbhUg56hb7ULVI8CNPxW1J1WPAJ5dCuERQFZk
wiNAV6NMeATYlOvvVNXDg5WTCQ8Pd1+QCQ8Pgwky4eFB2ykT78ND6UOZeB8e
tgaTHh6uJyiEh4eGTIXw8ODdrxAeDpz1CuHhIPaKQng4WDCgEB5fU27Cw8G8
RDfh4cBR6CY8HBS1+tuoenz3zboJDwdL8icIDwvU8AThYWGswEN4WGiY7yU8
LBSnThEeFizt4XvDdDR66uPjUzax8OWedzvuLaTxyOUfist5FhIr79pHxinU
2gz0IxMLVfM+rw1xUljbxCU0R7BQ5yxkP2yjMLgssrvlKRbSAvZd0lZQeCy2
76oiM9Bpvjp1+1UKZwcSjVW/M/BLWUyEU0PhnneKZ4vuMGC98uNsgO0ZdDmK
Xv+in4ElC59kNjh0qOzYP3G0jYHcbysfxCkR6LjX8422hoHWobP1vS9G4I63
kqqXlTLw6O3VH2dXhKOlS1PamcnAUjauTnGFYSulvDe6noHXDnU4q98Iw6KC
qPL6WAZ2rWpJMt4KxfuWY7V3ljLwUaL+4bWdoRjuMnVbtAwc/irw8pZFof//
fxj4D6iCAbA=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1H1ME2ccwPEKG8HxaubGYqAZKKP0DshcxvXueucPAyokqEUH2Ea0REqH
GJQ5WApxY2RYFS0KEQGlwAHdiAI6p9MZfMb7cC9RRpAug8E04nAbQ4aAgCtP
98fz5Llcvv998tzvucDUrIQ0F5lMluB4lt8g9yiNs4cgGV4bIEmTZotdoUBZ
PSfim5+KcEiRnimGKxA9ElNneihCieQ7ptArUOTm8KV9AyJcbte7r6xUIPOL
aP2BDhF+/kw7MnxfgZTux++Utoiw8GTe0BQQivz0i+r7FSKEzG607jeGou2v
WL/iPhUh0bbeHHQjFA24Zr37jVGEo/PfBf7ko0SN8Qdu7YoX4ctjRe43Y5RI
65YXbudFmP1oD7KZlChgjTLuVqgIO3t3xp5rVqIJs8lH5idCR65BOjGqRCgh
80iDqwhxR8t+LHiVQlLui7MX/xZgfGa4zxRNoZJn7+x67RcBqrpjzuUcppD5
3squkS4BDDO9kR9KFCp2L7B7tAqQN+fpN/QBjWa+36w3bhGgeO9Un3CGRhuD
xvZNMQJ0ZqbKfS7RyORxt7/tLQHk8t2r4jtpVGVe3fzDagEqD49JzwZp1Fhx
8ancRQD24NSA9ziNzosV9Vf+UsOi70nbmWka5efakdmuhgeJV94oXKTRpuiD
W2q71PBnVGroby5h6Hm9ll9oUcOmkvNDX7wUhtINy0sNuUXOnq/f5thqKJec
fep3lWOrofqRs9cGLS81WBIu4L6218Ox1WB84Ow463SsdZqHsAvVuId/XV48
2POtuLP9ew759/CQXViD203X+rKulYeAwnrcmGPgwa+hAfcc9jj6WCPh4eHN
CBvh4SG83EZ4eIj+1kZ4OEi9ZCM8HBTpbISHg8t3GgkPBwGPJcLDgdFbIjwc
jCbVER4OzF21uNdhDwfJSbWEh4NEr1rCw0LBoxrCw8LgwxrCw4LOvZbwsND9
eh3hYaExo474XizcvupsC/aw4P2vszEniIVSSiI8LGxNlgiPCqLyJMKjgowy
ifCooE+SCI8KJpvI81EBNWvE83UvpaHTdbsK8oe/xvM302e5nsKpYGx3KZ7P
vqbgDbnBKtDmzOL51SwZdPGrVDAeMo7n+2TXDs/RRQaOZ6fi+c+TPdGsn2AA
EtPx/fBviaCjhhjw6J/B9yf7rrzKq5eBP8Z98f0ypd+oLr/OQPrpf1a48jSa
7VeW0VUMvJfio4two9FE203U/gkDV7dlBKUMUGir4v11WiMDR9Jcki2fU2it
b+TtKQ0D16yDz9s/ptD+nMDTxQIDe5Yee81pKRSsoypDKAZyCthTb3MU0rTt
sHesYWBB0Z2fGUChSWulRu/JwOS0xXE+1P//Qwb+AzjnXT8=
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1H9M1HUcx/ED5UdBjQYRBoKhG9+zQ1ng9+77vft+eVVkIAZIhAwGQ4kf
EUYc0oDBUMnZ1KCku+NHcAiYGJokyOyXfpSA0IQlE4Up3KIhoDEcmQEJfe++
/fF57/Pdd899v/vusc9n+760Ozc23V6hUCRJl/UOX5eqbaMBRGGbUGwNH4so
nQogn+u+3vvbvAi3zMKByn8CSGfHJdFpUkRt8ci6A08zJCsdKceHRfx+wO7V
OF+GtO5QDZl7RDwom9vkGMKQksLyevsOEV15X82YIhliGXnjp/4GEUhYv/ep
dIbcKMh/5dEnIg4HZ15L3MeQ+O2uTz7OE2FYpZ87Us+Q7GS3tUUJIra8MyQE
dTDkTpTX381hIs7sir8Y3suQxoPLvR8FiVhklvJuDjOkw6678qG3CN+2ywnD
fzDEvTs9xsNJhPfUKX3kHEO6+yedxx8KmB3vuBSywJArz2/9bscdATXHxkOP
rTDE7WT5rpxeAS8qAufTVinJN6Vmu83tAvZs+XLk1GolybCNgGBe7oWW6MWW
aAErOrkrJjTSEjAgyL3e3zoCmv5/3pXqIi0BxZzcEea/pKVDfIjcY3eto4M6
UG69T1+eT58OPhvkdkxqd0hq12H0SZ2tM20eHYoX5V60eXQ45Ex7dFgOoD06
jCfQHh021sm9zebRwjJLe7RQxNVTHi2OXK2nPNLzajO1P1p4ujdS+6OFU1oj
5dFi8FAj5dEid38j5dFiKrqR8vDg5s2Uh8fu982Uh0fGhQbKw8Nyvo7y8FgZ
qKU8PK7b1VIeHtujamy9webhUdhZTXl46XyqKQ+HiesmysPBb7+J8nBwiTJR
Hg7ZXibKwyHLyUSdF4eSP422rrR5OLReldvG8edwr8FIeTiI2UbKo0Gbykh5
NNg0aaA8GvQZDZRHg+/3fEF5NDjR//iXB45KIvZMW3bGaPDI6G86/4ySNL97
nDmr1eD0TY+w1WskX9inQg6jQffBgcHbjJI4pJ/xq/TUIPRkNB8sSN/vtRt8
wVEDP7663D1eST7LPBzp+FiNNLG1rShfSVoi3jQkTqvh2ll2Lt2gJK/laE57
3FWj0NnLu+QtFTEFNeVeC1TDMN+lmM1XkYtVfW/f91dDX1DhNGpQkeSuC9kn
PNV4tqJhMzpURF9d0LngrEaWcK9w3a8qssQtB00tsNhXnjVRbJG6Ntby4TSL
nan+udFz0vs/6K9U3WIxO+Th07CkIil1Kbdifmbx+ljoTIZ9ILnMe/q1nmUR
X9Ys7U8gqa2xDou4HLmPJv+4XFTO4r1EuUNVsY4NH7AwRMj9rYN1g1kMcXJb
pof/bQ9nsfFluQdv99w3q1mY1spdeiNAWiy8npN7xvr6GhbnHOT2nAw7ZO/K
InWpydby/5nFf0vbmq0=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-7.27585624087402, 30.}, {-3.275856241341387, 29.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNk3lIVEEcx1fN9Q+XzViTNt6KV+WBaLbFO/WbYmEHL1MIUkEl7bBYLTIT
IclapKBSogQXpDSE0JIsIw8Yo7xIoUzyDrSMRIrSPUFofa8/5sdvGD4ww3zm
O0x4oeV4ka9Go4F3KPPYqr5yu4lolEqGJXhN4Z/Gnor1VQk+hSqHxPjJr5ck
uLpUromfvB4/KUE22BVO3MUH5w9J0F1ROUzZICF2QeVjnhbZ0yKhLduhMBlv
dxfUSagfU/nS4zQfa5WEadmpcLFSErpHVHZvbJclnNvtUvjOIuttCUs1KkdG
bJSEhLcqd+UHeltC+orKGU1r3hYR4+tWeH5uo0TM+ql8kRksYwZFnPyjrtfm
dPjndIiYylX5tOIjwpCosnIdWURuIO0j4uUvJ+UjwjjtpHxE3B5V+ZDiI0A3
7KR8BNg+OCkfAcKkk/IRwIe7qHwExJldVD4CmiTaR8B9ic5HQICZzkeAJ8xF
+fA4v8lF+fDIn6d9eIw/o314dC87KB8e/t0OyodHbbOD8uGR3KpylOLDY+d7
B+XDI3XdQflwqJfpfDiE9NI+HMZS6fficKDEQ/lw+La/sGev0UTS9Y1Hnssc
Os82kDNbTaS3tviLjuPwasEWathsIkMTQ9prEd71bZYJs9ZESuz90/46DgeH
gr6Pehjy5Edm1iM7iylz9dH5FYaUt1WUZn5lYfvbpy+eZchc2r6kkGEWdT4j
0UXDDJlpv9Xw+wWLroKWxplOhliWLzfP2Vi4buzISLExpKDjQZ3eyuJu5MCJ
ACtDnmb1DzwsZVElWQf3lDEk47M99Woui75PRQ3v8hgiJpm1nRksshdPjbw5
zJCbF6qC0lkWKZaaPIPAkCjrWEFCNIvq8v7Mj3EM2VYV6ykzsghxh7aumrzn
yfemdDoWGmdjXuUW5v9/Z/EPqsS1UA==
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
zjJQu7GH8sz3BhP+Aan97yE=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-2.886419630917402, 30.}, {-3.275856241341387, 29.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAwJTqLGMXB8AAAAAAAAA+QBdEuTv2
2wbAZBxqeNXzPUBu6x+51ZgGwAQzv00X5j1AxYoepQFOBsDaQ/9/xdY9QBki
tf95+wXA504qD+DFPUBtsePIPqEFwC5UQPtmsz1AwDiqAFA/BcCsU0FEWp89
QBG4CKet1QTAYk0t6rmJPUBiL/+7V2QEwFBBBO2Fcj1Asp6NP07rA8B2L8ZM
vlk9QNNIyTOqkQPA1kMQ5qRFPUAUgxvKkEcDwDBduH47MT1AdE2EAgINA8B/
e74Wghw9QPSnA9394QLAxJ4irngHPUCTkplZhMYCwAHH5EQf8jxAUg1GeJW6
AsA29ATbddw8QDEYCTkxvgLAYCaDcHzGPEAvs+KbV9ECwIJdXwUzsDxAdKFI
4pJTA8BnZmZmZmY8QLQCkTOCdwPAnu1KPLhPPEAcQHN7Y44DwCAGJpYwOTxA
qVnvuTaYA8Dtr/dzzyI8QFxPBe/7lAPAAOu/1ZQMPEA0IbUas4QDwF63fruA
9jtANM/+PFxnA8AFFTQlk+A7QFpZ4lX3PAPA9APgEszKO0Cmv19lhAUDwC6E
goQrtTtAk90pOl3zAcAk1lL3CGU7QKuP1ID4pAHAX8TB4ZBOO0CqZixmOFcB
wJpDbCsQODtAjGIx6hwKAcDNU1LUhiE7QFKD4wymvQDA+vRz3PQKO0D+yELO
03EAwCQn0UNa9DpAjjNPLqYmAMBJ6mkKt906QAWGEVo6uP+/aD4+MAvHOkC4
7t6UcST/v4QjTrVWsDpAzIVlgMVJ/b9mZmZmZmY6QFoVAzCCr/y/6yaLGgVQ
OkBGFTIRbgT8v1XrJg9kOjpAjYXyI4lI+7+kszlEgyU6QDFmRGjTe/q/03/D
uWIROkAwtyfeTJ75v+ZPxG8C/jlAjHichfWv+L/eIzxmYus5QEKqol7NsPe/
ufsqnYLZOUBXTDpp1KD2v3jXkBRjyDlAxl5jpQqA9b8at23MA7g5QEK6O+xs
bvO//tmcDYKbOUCJCGWiP4Lxv4YLtjEEgTlANJO+jwV377+xS7k4img5QOb6
VLlsNOy/fZqmIhRSOUAqSI3BtDzpv+z3fe+hPTlABHtnqN2P5r/9Yz+fMys5
QHCT423nLeS/sd7qMckaOUBvkQES0hbivwhogKdiDDlAAHXBlJ1K4L8AAAAA
AAA5QDT7ja8=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-3.275856241341387, 29.}, {-1.5091083436646215`, 28.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-1.5091083436646215`, 28.}, {-0.5091083437534962, 27.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-0.5091083437534962, 27.}, {-0.5091083438244937, 26.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-0.5091083438244937, 26.}, {-0.5091083436379051, 25.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5091083436379051, 25.}, {-7.017068350452746, 24.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5091083436379051, 25.}, {-4.509108350010479, 24.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1HtQVFUcwPGVciFAHWGjVLARRZkxnbt7n6FyfikYoIGCNSg+ghZiNKBg
GoIgLMQlk41GAjSFaCCaBKRFQhZhgQSRly3s3eURy/KQHEbFBFQQx5bbH/f8
5ty58525f3zmnDN3XURccKSNRCIJsz6Lb8lnTTmXAiw6iTBvQbalonkiZUi3
5WhkRcE0ByleZI7PeL/Ow6vMY/sdDpqfrCg40MHrxs4ZIvsMHIS/7mtxUeh1
0SfMsQnNHFRzJdUu8jZdTeMtWFbBQdPyUaZtvlbXfS53sCSPg5N5VTsa3JN0
ZeM+aEcaB8eWt2eVmq6hkCrDiV4lB8fHpSsOFrWj5he+4dF+HOxV+7y8y02P
+qstykcsB2fTg+JjEg0oeeZ2b8NGDh7vL9ZvPmZCP9c5V3TJOFDN7XT/0tCP
Ah3KptfacOCTvFmpNA2i9LH8Ys0DFjwNR/LMHw0hb5+BxswBFhjbgbp7GWZ0
cssnfkUtLMQ4/6RXy4dRQOGhbQtXWCD10r4bx4dRlDAsmE41mhZ7vjjIulgw
P0sXWj3GWRcLvsx+od2FYcGB8hT6jw8crIsFatZO6IDCGf/CGQauJ00bF9s8
tDgMlDT9I3S8681PXW8y8LDzjtDSsMqlYZUMRHnam0QPA9EfyoSeEzwM1Fet
EjpL8DAQsWq10OsFDwMHcl7FPAzkb3DEPDRsbX+OeWhwypjEPDS8814P5qGB
YmONooeGpbv2Cf1U8NCw/jRtFD00fCtZaxT3hwYvzStG0UMD+eNTfrH3CB4K
Pq+b5EUPBVJnCy96KDAX9fGihwLJqW5e9FCwztzBi+dFwbznLV48LwrOKFt5
cX8o6Mz+U+gawUNBW3mj0P6Ch7R66jEPCeZaLeYhYf7XGsxDAhVXjnlIOBr8
G+Yh4fSeUsxDQtmhYsxDQmdaES/uDwl3tQW8eF4KWOJ4EfMowCXhPOZRwKaH
uZhHAV0bv8M8Cthbd5YX748CtNvPYB4FOF1WYR4FhEgzMI8Cvgr8GvPI4UJ6
GuaRQ0FJCuaRg/pqEuaxfq+PwzxymD5/ZOvhcuv9cQ/sIPbJgVDlun7vZUGq
QUWP0zY5JLw2lewwYkErs2VfOG6SQ0Mqp3BrH0H5MN3iJpODTBu/s3V2FK25
363ZbWP9vvPSZalyHF34ofRt1b8EmK/WxphlE8jFKzV+eISA4ITWzHft7iL1
QJBvUC8Bf9neWAjxnkQ2iW9ojS0ENFC1u7UPppDLUJh37C8EqKJQ6v38R2jc
3842/BsCIqLtHQdfmkWx9RtkV2IJuFdYf9uDe4I07O+Roe8T4LnsYFsXPYc0
18qfHQYCZJV/z/YszKOPYbXx+psEaDL9QumsBTTa/XgmcQ0BS/IuTs1MPEcy
5a5QtSMBksG+upX2L9D//2cC/gNy4MgF
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAHXBlJ1K4L8AAAAAAAA5QEWMlwz5
d+O/r/ggkkrzOEDLLkVusE/nvy+kmrTr4zhAlFzKucPR6795Am1n49E4QM6K
k3cZf/C/kBOYqjG9OED0rC0Hf2rzv3TXG37WpThAuZSzixKr9r8mTvjh0Ys4
QB9CJQXUQPq/pHct1iNvOEAmtYJzwyv+v/FTu1rMTzhA5/Zla/A1AcAJ46Fv
yy04QJG84QG4zwHAd1bHU+siOEC/hT8daFcCwHKHuGqlFjhAcFJ/vQDNAsD7
dXW0+Qg4QKIioeKBMAPACyL+MOj5N0BY9qSM64EDwKqLUuBw6TdAkc2Kuz3B
A8DUsnLCk9c3QEyoUm947gPAipde11DEN0CLhvynmwkEwMw5Fh+orzdANGiB
ZacSBMBmZmZmZmY3QGBMbit3HATAqDGTHppQN0DkMTt95jkEwEgWRx+4PDdA
vRjoWvVqBMBEFIJowCo3QOkAdcSjrwTAnStE+rIaN0Bt6uG58QcFwFNcjdSP
DDdARNUuO99zBcBmpl33VgA3QHLBW0hs8wXA1gm1Ygj2NkD0rmjhmIYGwKOG
kxak7TZAzZ1VBmUtB8DMHPkSKuc2QOINkXFF+gvAKYmfD8PANkANnsM+tDAQ
wKMZQPeJnTZANxQcFWcxEsA5ztrJfn02QHHp0Ts7/xPA6KZvh6FgNkC6HeWy
MJoVwLaj/i/yRjZAFLFVekcCF8CfxIfDcDA2QH6jI5J/NxjApAkLQh0dNkD4
9E762DkZwMRyiKv3DDZAgKXXslMJGsAAAAAAAAA2QCw1EjA=
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN03tIU1EcwPFrLZmZ2FOXTCUlLEVRdh9nNu1HQaZSG4oZWLqZLkUlnVlW
Mh+JQpRaaILkoxpUWiiYZpO6V0pmDbPUcBiTqalh9hhOwaHUdvzn/jiXywfu
ge89cA6kX0rI3EIQBON4nG+iaKC+Oc7CEnikEDj3EXtxf3/xxjKClsSv2N6H
t8pfzSPI4yzYlaGmilATgtqQX9jhQZF7lUMIXBvs2P5ezg0IRteFDU4r7Dq5
XYdgOV2EzY29WFPdRZBtOIRd+Oi4S1UJAklwJLYaDwJZaRz2mnO7HEG+Phm7
dhbVzCIEw99U2IEBzkGQOJuF3at0dywEgi+52PGttthWGwNTujzsKbNzGJhO
zcHWiA0FYgMDnv8ysV1TuraldDHQtHqC18NA7O5obPw7cga0Gga7BvcwIPWW
YOOcAAauExG8HgaOhW06DvfQUNMm4fXQkJ6MeD009Ccc5fXQoP6TxuuhwVqe
zTsfGk4XFWDfwT00aD9c5Z2Pw9oSXg8NivpSXg8FK9vLeT0U5MyU8Xoo6PYp
5fVQQEo1vB4KihvfDT/TWFg/178TegUF0f7clU+LFvZgll5wJIqC6s8X69y7
p9ni24NL8yEUKDr0PirjDOtVuKvurZiCls6+fSOS76yLuOX3gCcFuWZVedLS
HEtX5witAgrekL3nbbYFtu/lNXP8Ogl1PT3tHacW2SrdUN7oCgnzacqsG6tL
bNuZs68rrSTEpokXTL4Et+PJuNo6REKnzHC5N0rIVb0XaIYfkxDcJbrJNHty
bp0/JkUVJJjPCd3C/PZw99VlD8cuOL5/PrHznocXF/7TOLhxkoRbMXaT4YGI
G5cZYxojSCgMzVeNGH24ihRtUJsvCRmp0vanTWJOFjOXIfIgQTmZ1J3o5sdt
3i8S/gMU5qsC
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
T3375X19woLQfBVUy2WW379U+D+DMlxY
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV13tQVGUYx3EQxYIMEbnJInCAZVkue78oo+dnXia7qCE1IpTgpJmo5S3N
pCxLFIXKxVQyZcTuSjg2mqgZ3nO0RnJIhIUVUVxunt1FAjGMfd/94+mdZZjv
zHL2c97n7J4lZv5b6QuGeHl5NQ/+uH97ra4u+eo522kvtsYh+tIZw/XFK8Qt
Owx+N51m+JSlTV7kfUe0hHaWJDabkbL078ii+H/EiE3ysq6rZsS9uLxlnZcP
Ym7dSko8asahH+cFrtnij+8UUea6UjNC3qwvtH4xChXZjecG3jNjds6JteU9
odDmR9XszjRj64mZ6SNaImEqbJ73g86MnAlXthapBFRtTFim9jMjw2/yxvS5
Ak5t65rzu68ZwYf2vBqwQYBX0Q8LI7zN2B9fN+ZcmYCPPs7aKe8zoX9lb9Xb
JwWIK73b27pMiNr1cELwXwLSMvfkLmo2IXB7U/nhFgHvGJP79/5lwh+533ZM
dQjo8jt8rPiMCXOGp4fV9Ar4ula50/STCUeesMpf6RewkC0TdEMbWD88MHPw
YcI4ZT3r4tvmwYcJl9fdZC2wZYLtQR3rozn+gw8TPviS93P7uqfv6zbiQB7v
Rqt7GTF7Ie8VsovLZReN2LKVt29W5bCsSiMKf71JPEZMj+Wv38c8Rmwq4F3E
PEaI7bxjmceIVTMaiMcI+eEG4jEgI8hKPAYMrLISjwHyWivxGPBNQBPxGLBs
Ne9e5jFg+N0m4jHg7Vwb2R8DDrTaiMeA79feYv088+ixfnQz8egx9kQz8ehR
vOQ28eixseEO8egBy10yLz2U+lYyLz0mnW4l+zP49/p7rI8xjx7dFt7TmUeH
z633iEeH7EA78eiQrrITjw7jNXbi0aEi1U48OliS7cSjQ7vSTjw6/JxoJ/uj
w32FncxLi72e5h4tflVQjxazEqlHi8gU6tGi3ePh148WVg31aCEZqEeLuDTq
0WL9JOrR4MGz1KPB5y9RjwazsqhHA+kD6tEgu5jujwan91OPBiGn7OT60SDH
Sj0alPm0EY8atao24lHDe34b8agRU9pGPGqULm4nHjXqK9uJR40N3h3Eo0Zh
dgfZHzV6qjuIR40Lmk7WJRPtlol2FR7+yPvkCfdSYbu6izU7XLEKRad5+7MD
qHDklMT66hX3SkXBSw7W3eyCTEXjn7wj3aezPBVVZifrqVPcKxXh23jnVYcs
qQ5JxcDvvHcwTwoWOp3Ek4KMYS7WLcyTgvNDeD/FPCl4Z4+TeJLhyncSTzIG
3nASTzJK5lJPMo6+zHsJ8yTj9Uwn2Z8k7F1APUl4fZ2TeJLwy04n8SRhscxF
PEqsneIiHiWyFvFm416uRMBm3tOYR4kd5S7iUUKq4m1hnkRE/uEinsG20v1J
hNRK9ycRN3t5M84VBcof8nYxjwLNPdSjQEknb8aZosDxRheZlwIZl11kfxIw
v5J6EnDnM+pJQH2ei1w/CRhfT+clxzcVdF5ylG90Eo8cqf+blxzPaum85HD6
03nFI7nVQTzx6D7rIJ54vLDfQTzxOJXmIJ44HBTo9RyHyBB6PcfhKU9zTxzW
e57PPXFY6jke98SiMYd6YnFtO/XEYvI1B5lXLNpqnGReAnZF0HkJGD+bzktA
zbsu4hHw2qf0+hHQZKHzisErBXReMah+k84rBjFp9PqJgV8mnVc0LgfTeUVj
RYODeKLx+CDdn2gsLaD7E40zebwV+TUJ+TVReJTJe+0a94pCeDrvS+7DyaIg
y+Adyg4wFp2f8C7d7V6RmGDhfY+9QSLx/m7e49gHogwVu3gXbnYvGS5/xvvG
RymDDxlqP6SeCFzLo54IVM2gnghYlLzDmGcM5F9IxBMO22LeduYJR8k03mx7
b4dhYiLvLcwTBtso3nXME4b3fCTiCcWI/vvEE4qdfbzZdstCMebxfbI/IchX
UU8wekA9wVjzskT2ZzQGllDPaBQWUM9ojP2aeoJw/LxEPEGYa5eIJwhDRtJ5
jYKtlM4rELOqebcxTyDQSOc1EhUOOq+R2N1P5zUSQx/xnsVugAHocPKWutzr
aaTbHOR++DRM53insgOMwDSRt44tf0SE876W4D5BP8zpl8j9+Ek8usM7KNC9
nsTQOt7uu/OwrCew+rpEPMPxwg3e95nHF4UtEvH4QtUnEc8w+Oby19czjw9m
buB9nXmG4NCXvNn2XvTG2CO8RzGPNw5c4H2YebwwsZZ3GXuDPhY7b/Hm3zf+
FSvt9PPskbi5k3c2O6F+cWUnnVefuKad9583zrfvM/WKpZ6/d50VFtjsPeIN
z+ftcPZ95YGou+vpvcuuBmztFg+28H6w7dWTA++6xGdu865h5+cUuz0+9vQS
h3jOM785uTNWKX6TxMom3vz/QUn8D9IhaaE=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-7.017068350452746, 24.}, {-13.509108351538515`, 23.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-7.017068350452746, 24.}, {-6.509108348063421, 23.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAPebXXoRHMAAAAAAAAA4QHxCIMt/
XBzA0cbDBG7zN0AbW2QGwbUcwLTcJX955DdA2EBoDz4dHcClQSZvItM3QLXz
K+b2kh3ApvXE1Gi/N0Cwc6+K6xYewLf4AbBMqTdAzMDy/BupHsDXSt0AzpA3
QAfb9TyISR/ACOxWx+x1N0BjwrhKMPgfwEfcbgOpWDdAb7sdE4paIMCXGyW1
Ajk3QEF5F5I+fiDAzt56/McrN0AKutW2v50gwNX74VtuHTdAzX1YgQ25IMCq
clrT9Q03QIbEn/En0CDATUPkYl79NkA4jqsHD+MgwMBtfwqo6zZA4tp7w8Lx
IMAA8ivK0tg2QISqECVD/CDAD9Dpod7ENkAe/WkskAIhwO4HuZHLrzZAkAaI
2akEIcBmZmZmZmY2QCuGTSngAiHAMlClxANQNkDn1p0Yg/0gwG+Qj7deOjZA
vfh4p5L0IMAhJyU/dyU2QK/r3tUO6CDAQBRmW00RNkC+r8+j99cgwNBXUgzh
/TVA60RLEU3EIMDT8elRMus1QDSrUR4PrSDARuIsLEHZNUCa4uLKPZIgwCsp
G5sNyDVAHOv+FtlzIMCBxrSel7c1QEjJ6AEDOyDAsisnlCybNUAlDg9bLwYg
wBTyt8DCgDVAYHPjRLyqH8CmGWckWmg1QM+XIbAeUR/AZ6I0v/JRNUCeidj3
hf8ewFiMIJGMPTVAy0gIHPK1HsB61yqaJys1QFTVsBxjdB7AzINT2sMaNUA8
L9L52DoewE6RmlFhDDVAgFZss1MJHsAAAAAAAAA1QN4DDSc=
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlH1MTWEcx2/RHS4zG6e3m/dR67Y675dhX2YmRaNGW4rM22RSeX9b8/7a
EibMDSuTad1zEBEeTVdiMlm6f/Sm8lZoJDSh+xx/PN89Z2ef/c7OPs/3OTtj
lqUuWOFtMpki+y7P3fTjXOK2YVZiorFj+5hNQy9UBBLroRHX135TMfx2dXBs
SiBpaVtr39CqovLOlcIT3oFkHmfO5mpUnAjxykk+EkCWBDSXxj5QsaO/u7nM
J4D4f+29GVqoIjMq4kxBmj/Zcn7xXke2Cscf8+3Aaj+Sae0df22jirqgxGmj
RvqRsNTG03HxKmyFgs2Z5Et2n+pXf9quIuVkebLF15fcSGvPzghVsVl+Evfq
NUfm2g6WhgWpiDk6y8dykSPRFe6FriEqOnMnZxSnc6R4StPqqb0KkhIKHA+j
ObIt59yXnHYFuTX7D0wP58gVl6XdVafA4dUYFh7AkWnuiAT3IwXr24qOHx7C
kUlVg1BVrEAq+K7HDuTIShoFIRHdlH/lx/Tkxygwvzfmx1rsWS12Ba5nXZTH
jfVEQUrDV8olSy19S0G3tZPynLyuyLwuGasOdlBuqPdExr3R7ymnWx+nWR/L
6Gl7Q9mc4PRJcMpYGfWc8ZFxOLyS8k/qI6O6qpzxkSEH3adMdcbKuDvhDuMj
I/ldCeUo6iMheMkNxkfC0Cyd8ZHgt0FjfCQ0mTTGRwJ6nZR7qI+Ezv/zLOoj
4bNFY/qRMHmkwbeoj4RXqsGR1EfE/XiN8RHxI1NjfETscrI+IjrW6IyPiAF5
OuMjYrlLZ3xE/G3SGR8RtZ91ph8Rn77ozHkJmNGqMz4Cap+y/Qi4ellnfASY
u9l+BOwr15jvR8ClXLYfAUlb2H4ElCRrjI+Aa3Ea48MD89l+eKQtYvvpm69i
++FR9L+/s2c84THMYfCxxLI/W/fwqCw1GLYFZsc6Hi9rDNZ8PC/gYeswuOlD
7W/nbB5ub2O/L+oq2vNUHnW+Bu98ObFv8QgJNfij53F/Hk+nGMy9nXnAezAP
Em2w8f/h8Q9KWAEY
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-4.509108350010479, 24.}, {-6.509108348063421, 23.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1nlQk3cex3EEiyJUEg3hEAVCCGcgd2jr8akcK3hAZatUK7LVMrS4rWhd
aZWR0tqhoqDS7U6hSIvHiq1yhCfh0jyIiOVaDkXUwlpAXHbBuoCzxoosPE//
+P4mmcx7nnkyr+f7+2UmXu98uPFdaysrK2bmPfuZUfKSIc5uEWvFrVBM2fI9
4lqbNjWhR2LcXK6d/W1iTMN6nM+x4fpzeW+mvFePm1XWXCt8XxUl3tDjQecc
rj3Fszfo8fMdK65jn52JeXZGD2PHdMVs13dftPzphB5/Mb7gem9x2JwvDurh
lj3FdRK39JC+95xr7vYYPZxSfuM6ZzB05qXH6PFnXEu4NeO7a+HamGg/89Jj
3Rq+o4smo4omdei585Tr/r7ZpUNkLt973JtS3Zt0KEzm23Zr2Utby3SwzXpK
PDoML+fbwnl0CFjxP66PcR4d2rOecO3NeXTo8pggHh1esX5MPFrMUYwSjxYB
JQ+JRwvmzwPEowU2tROPFrJ3b3D9lPNocVrWQDxaVOZfIfPRIr6+hni0yMs3
cb2W82jwjowhHg2u7zQQjwbmNyuIRwP1eDnxaCD+tZzslwbC0XKyXxpIR8rJ
fDRYP8y3ifNocHSQ7yjOo8bQ/XLiUWNjfznxqHH7XjnxqCG/ST1qWFqpRw1B
HfWokfo99ajhml5O5qPGyzHlZL9UiHamHhU6bpURjwrfHSkjHhWup5QSjwo1
klJyflRw++0S8agwPHmJeFRwF5QSjwrmdaXEo0TrhVLiUSIygHqUCGihnpnr
yQbiUeKafyWZjxKhNyqJR4lvwxhyfpSYKGCIR4kVnQzxKPDJID0/CpR0McSj
QOsphngUuP92JfEooLEYiEcBpyID8Sjw2QYDmY8CB+YZiEcB62b+fH61ciRv
5UgIRF/zXVc7u0JQkcI393U5IeiL5tue+4IQjNnx3dY6u4JRP83v9yR3IIMR
bstfXzr7OKnB2L+U74jw2RWMTRF8p9SLd9WLgzGUzvdfOY8cnk3UI4e9F+8f
4jxynM3m24HzyCEKYYgnCJIKhniCINQYiScI/ZVG4gnCEQ3/+97FeYLgZDCR
+QQiQ1FFPIFo/rGKeAIx7ltNPIGINNQQTwDOutUSTwBubeOb2+7UAPQc5DuS
8wTg3P5a4gnAHzbwncd5/FFlVUs8/rDk1BCPPxZYqMcfe/fyz8NxWv3gUsU/
/wTn8UPqMiPx+CHjHD8/jhPuh/BYhuyXH+qWMGQ+vvj3fIZ4fNHuzBCPL5LW
MOT8+KL1YyOZjwydE0YyHxlOFpiIR4aXU6vIfsmw+qNqMh8Z1GdriMcH/TZ1
xOOD8OOXiccHO6PNxOODxNJG4pFiPKeJeKQIVfxEzo8Uqrxm4pGiz9RCPFIs
P9VKPN6IiWwjHm84lbURjzdy7rWR/fJGZHwb2S8JmLF7Wx7NW8T+vZNx21Ek
gUU4P+6Kzcz/jwctlYF7JBA0vlHQ8FzI5tk5FsgiJHhqW61+MS5ki5cfaotz
kaDy9gr3D4aFrMsh93WG/3ghXH//j4tvC9knHcPiCLMXzvl81zd2TciGqvrl
dnle6CtON06VCtnBYusT00lekMWteuuf8cLf5+OJOr+S3vyVQjZs85aODUWe
eJAQddlJKmQ3P9+WfTfVE6efeMyLtROy8+tuT30Y7onx0SBj1CMBu/nrJl9H
Z0/cDN/dbN0tYA+Lty7a3e2B6KmRsAMmAfs37eLwW2ke2CjOlxgKBOzQl6ah
9cs8MJabkXThkIBNWbxm8k7DMshLVwmsJAI2/5vZtRTXDnpPfzZXwJ5sGal4
tHIp9ot+URQ3O7KDu45vtwy5Q1a6vqo9y5HNSj9WVJ3tjpM/Hf3qWJgjmzF1
f0+I2h1Xdpxq7H+2kG0fPXJny70lKEnPXHv10kJ299rs7tc+X4KNzq/IQrcv
ZJNdBxK75EtwRXH1TTgsZI2bcj9d1usGzerOx+arDr97XNFTYdfwRYID+77t
xSzmdVesPz0elfCrPftafKFR9NgFeYuPHo7cZ88Kct/3Np1xwXmbnn2rHi9g
hy6I/vHtdhfk7O1wi0pcwFb9UFDd6OmCyB0HPtrRaMcePzE9oPyXM9q7ejJz
POzY5Lex9hfGGb5XByKaP5jPrnZIGO/+0hmxyqLLYsM8dun38b12O52RcS0z
LLBwLpsgzumJ6RHjYpypatP1OWxhwa7Ch3FiXLr88auqbS/MdxWTQZ0/O8HS
IhsY+sFiXtQjPeyQ6oTlXfuSG9OemNdkvzj7jcAJaR1Jbd0N/zV/Evtpblqt
CG8dm/DydBszX/C5+HpJqgjMe9uSJs8/NPcsyKwLVItgpbNPlmoGzfz/ZxH+
D+hyC2Y=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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

          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{1.9399583184983271`, 16.}, {1.9399583186638552`, 15.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{1.9399583184983271`, 16.}, {-0.06004168151176259, 15.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-13.509108351538515`, 23.}, {-14.509108353753334`, 22.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-14.509108353753334`, 22.}, {-14.674177320485256`, 21.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-14.674177320485256`, 21.}, {-14.674177320464167`, 20.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-14.674177320464167`, 20.}, {-12.509108351487583`, 19.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-6.509108348063421, 23.}, {-6.509108347332017, 22.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-6.509108347332017, 22.}, {-7.509108355986996, 21.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-7.509108355986996, 21.}, {-7.5091083546782045`, 20.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-7.5091083546782045`, 20.}, {-18.05211771982141, 19.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-7.5091083546782045`, 20.}, {-17.052117719731797`, 19.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-18.05211771982141, 19.}, {-17.25854539356112, 18.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-17.25854539356112, 18.}, {-16.50910835705824, 17.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-17.052117719731797`, 19.}, {-18.258545393550264`, 18.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-12.509108351487583`, 19.}, {-10.641640528217351`, 18.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-10.641640528217351`, 18.}, {-3.5091083450140843`, 17.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-10.641640528217351`, 18.}, {-11.888376415434891`, 17.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-10.641640528217351`, 18.}, {-5.509108345158154, 17.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwtk39Q03UYxxFMUSfFbqAiIhvfT9h3v77fXcePyPEcYi3DaIx55E0Eccgc
HgsSMTrFgJCMbXVr0wWyiiA1L9CVY+l8FgiuyDjpbigVot4wyzjB+GHn0fR6
3T333PuP991zr7uHv6MsRxsaEhKSHJzH2zFdtbpeQTDkCTLgpSqmKl8jWB1X
ynkwxYIhccNApJqgJq2/5cMAC06vrl2tIejYEukc9rMwuvj8oYydBBWGTdm+
fhbuz6XmD5cSzD1cXlb0LQt/2W6lragk2Hu8kdfxOQuDY66Y+YMEj541yS0m
Fuz+7oem9wkO9tXdo99mIWt/YMT3MUH9cAlfX8TC6rkoX5SD4BafOfDKZhb8
Yfl24QmC2p6YoahkFg4e82Qv6yJo7Vs0fiWehWfcyX84zxG8ezVXsHcpC0at
r3jdBYKFdxbWhz9gYPaTistaL8F/F614uvE3BrK2JUXs6SXokhzB6T4GjCci
U+R9wfu2Fx5TdjLwrPepl64Fc/ETGFiiJt2Tlwim70x83p3NQJm/lpveQ7Dt
hm1vSioDWxX8HI+HoGXkHD0mYKC349E+g4vgcnWDyslh4Ow/K+vUnQQpO+dG
0T0pJMgqKve0E8xo0IU4vVKI3sbJdtkJVr1Jwt+wSuGDytvLk5oI9uTBTI5e
Cvrrie86sgj++v1GWf5FCXSNyROV6wmmdVwMP22RAG8uOnBFSvCw8fpMu04C
5vhOzyqKoKfKOv+qXAJU3tIuNibY106tbeZKYKiVXIjmEhxX38+zBcTQMrPg
1uVlBEcU5pPr3WKo2d4qUCwO+pEP8kxNYjjgf1RtWUjwUHKX7UiBGO7Wrpk4
HUbwp4HHiEA/1j2/ewHB2+8Neb92iOCLa0b2s4cUjrozlPn7RGAvba5TTVDo
LompHn5dBJn2m7MHRil8y7w1PU4sglM7Co3UjxRyZWHHpRwR+C6t3Jh5hkLz
Zp6N87cQHD3ha363UDhxs4n+5qoQGA0bPVlOITNZlvecWwj7TR8xNVkUKqvd
8bo2IfxZIK57pzcB5TMNm3YVCGFtrtYa93ICNoa2qVx8IXB1L+wq/kWASS0R
L2ru0OBt/WpaVSpA6O8PUzlpkM1+lzkeIcAva34+2VxPQ1F5iTL+PB8NPsKm
amjIiTgTO1/BR+unP1jXpdAQOnC0vTaJj7FLPCO7V9FgOBUb9MP//79o+A9x
AIg1
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQ7bAsPnW5EM8BBjAwdODdAOG/ltxd8fezgcOTXRC+
uCaz//ZnBg5Hj0H4zbo3mnRvGDisugzhG6pbiSScMHCY8RDClxcDaTBwmPAB
wg/4tcT/1xIDh36GBDD/4OW1PxMnAtULQvjFi5wZ22oMHJYrQ/hpYGDgsNsA
wgdr9zdwuGIE4fc9tgAiA4ePmhC+shIIGDgIiEH42xK4gcjAweg7xP4pdi8n
273Ud4g4C+Hv2Q0C+g4NMyB8sHF9+g6rIyB8brAB+g5qkXFg/tkzIKDnsJgZ
wv/iOR+I9BwOLI4F82WPF8ocL9RzKLeE8F1dQEDP4dSRGDA/+6BYzkExPYcd
rhD+VLB7dB1c9kQjuUfXIUsDwn8Cdo+ug15XFJjPA3aPrkPvw0gw38QYBIB8
CwhfChRdbLoOFjMjwPzaiCU8Nnd1HLqYIfwksId0HFrKw5HCX8dB7WsYmD9v
Y/d1+3wdh4KaMKTw1nFI5oXwr4CUG+k4/F0eCuZrn+nkY5XQcXDwCUVKPzoO
ADoD8dA=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-11.888376415434891`, 17.}, {-6.8883764133107945`, 16.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-11.888376415434891`, 17.}, {-12.888376415481105`, 16.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJw10mtIk2EUwPFXw0oHOXDLS1I4zeex3nd7DCPXRU7NzC42cYFaCTMyA1lJ
UQ3MIV6ilAirOYK8IJPYRiBMrbTkSKYzNETRFCf2YYRrjNKllBmVvvSHw+H3
4Xw7cReu5hQFcxy389+sbbCFZEwPEOTWS4aJZtG+6B7j7wADg1l0ZNIG7YvP
DEJrRVcJU5XCFIO2ctHJZL9M72KQXip6x9a1AwaeQtHZK1btipXB3RzRfePP
fxbWM1AeEX29VRN05zaDSSb60noMOFXanOAiSNJKLk9oGfBZXvvuYYLpmc8y
2tQMztVttI2NEeypjgmajGdQ6zVPK9wE6wL9luItDLqLLQdj5wleScqSdyyq
wB8iGetdJlg2anKeHVKBov/bk7DNFA+5t4e9bVFBXmvm4z/bKHaeEqL9RhXU
Bo4aF6spjgyvpYT3Jo96tpGiIcJ5saBZCZrScuFEO0XOj27ZNSUsDUp16tcU
q/KXUwLpSnDXNNntfRSX8nSGH5FKWLUlpjQhxQLfx5oEnwBnUmxfI15RdEqr
Tbd6BfAkJM5KHBR/uXJzF+oFcJQ1rtY0UNwr00kfFglgTw0/XVlGUb94w5av
FkDe/m7fyfMUNdElwaMSAWIsccYvaRQb5g0V3z/x4PQrwvXxFPP0pvjBlzx4
nEOrjlCK9yqe+o494sHhlR/+sEBw13HX1M1SHiQPNrkHZgimdgf5dNk8cNam
EfMgwa7xTMXcHh7u0xn5gU6CVnOjKSqKh/bYNx1d1v//w8Nfz1sKSw==
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-5.509108345158154, 17.}, {-5.509108345020621, 16.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-6.8883764133107945`, 16.}, {-0.06004168151176259, 15.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[{{-5.509108345020621, 
          16.}, {-5.344667597886024, 15.499999999983604`}, {-5.50910834511734,
           15.}}], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[{{-5.509108345020621, 
          16.}, {-5.673549092251799, 15.50000000001593}, {-5.50910834511734, 
          15.}}], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-5.509108345020621, 16.}, {1.9399583186638552`, 15.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-5.50910834511734, 15.}, {-3.509108344712814, 14.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNkl9IU1Ecxy+DDcIh2EMYKlice3d3rzbUB4VSv8ktGEWCtZxt0raaTTev
iFFBUdJLRLSUevVPtBAGhSEMxR5WPQg5QVEJgkAoECGDnAQOou79nZfz43e4
fOCcw+d+f+dYbKgr7pAk6YS17C/OB+Izh915iaoO3b7LxBtNt36XtnX0aN3E
9V2uSXNFR0drkNgVmnWGZnVUJHqIoxduqvkxHZ+zV4hRZx/QkXCGiaf3/VP7
fh2/bvcSP5wJFT8d19HruEq8bTxyuA80zGUixCsFuzTsnYwR0/EpDVWvrxFX
Lw1braFx6zrxWcMuDb7dOHHqwxGrNVQW+oift+1Y7cXPezeI3y/a5UX2H+cf
LenvLWkvLl5KELtzkbJcxIuvE5xJp6AinONcJB8Vm1sJwUdFR00/MekYKl4m
OSfJR8WfZc4vyMeD020Dgo8HDz4OCD4ezAWTxGXk40Hfs0EhHwU+Zgr5KPCP
moKPgrevOJ8hHwWxtCnkoyAOU/CRkVsYFHxkBEopwUeG4UgJPjJG17hvE5WM
zFP+f0cX7/wtumScC/N87gcz7lPfGEZaed5RuoChuoHPJ7/+5iA6zmA08/lN
vnvypX2IYa+Tz7eU6bSaofYun/+Gvb2RYXWevw+98LjcWckgHYoJ75nhPy+U
MGU=
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{1.9399583186638552`, 15.}, {4.179705699493923, 14.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{4.179705699493923, 14.}, {4.1797056993019055`, 13.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-0.06004168151176259, 15.}, {0.8085460355518137, 14.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{0.8085460355518137, 14.}, {0.8085460355525242, 13.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwtlHs01AkUxwczZkZjZjyaaKIxGDNZhYS2mt+XnVRD8khCFFuqqbVJSW16
2NRmWg22h5RhkZJsdsu2samEaFRILLY8yjOspITYXt9z77nn/nHP+ZzvPedr
EvK91wZ1EokU8KE/TqT5lJKvs0H6pFm4SOW2iC+y8Xhu5OBopwhHPYvbek6z
YeWlmRpWJUJLtHMV7QgbtIArlIArIlw+lqk8HcFGiPsO4S2FCIPRL/zOBLGB
rz4eiJDrSRnXXsqG8vWyDyXCUyr58NAcNg5mBwyV8EU4ktb6Vspho0NyRJ3x
TojlDgszhG9YUH2SEKkessrpN1kYCwhb76oUwrJXQu+KZUHMymtShQsxrKla
q1jOgqJDbuspEWIoY7JKbyoLg63UzQ0cIWbfeea9vZmJUDX+/pBuC/wavHXw
UgYTPZLGHQOFFnCPyTp/S8bEvlxr6f54C9ibySOu2DBh6mg+qRNsATD8TG9G
aqPqE48A2+//sE2ySBuZtZ7+rkoBCCu7a9ka2mjuW/CHKlyAHJuYwc4KBnZy
5fUeEgEuN2wwpygY2LKGKK/nCODOf+Yx6cNAyZXVMcHd5ohj9kc84TKwx6Ce
1l9ojvXnEuPjWqcgMemGf3S8OeofqNK42VNA42tEsYLNIUgaSL/ZqfWFxwx1
rRoL2nO1MM/lVIur0gxuh77tbwjXgul1T9WDcDPI9zCLlPZaSOKPH/eRmCH+
LjnTYYyOw7EnLVs4Zlgd4nI+rZiOsRaeMqzbFJ3etXcaf6TjtV1KD6nIFOLk
S+9eLKFj20EK81S8KQJsH0rvTPmwl62l2wSb4qpy82KpC+3Lv/hYNF6wPIFO
wz11zVtuSj4axwcTTqqo2JrDkNaE83E4fbqu/3EqbpS0yAIlfKDH+kGTJxV5
7jH8fg4fjHq7Mq4+FVLXwW2Huk3QtVEwavhEE4q/rFbxikzw+CxF9uSUJvYm
O9TcjjfBo501Uz39NKHby3yxKdgEQ6n78oVyyhd/eFBNKoYrXClYJS9c6a7k
wbH/VRCdQUGmqu1sQzgP82SZfR33yShQOGdtkfBwJyIrPUROhry+8TvqNB5a
tN7s2SslQ+rs2+dbOxOKOSd329HJIDdt3v971ExUt8aeiyvXgMvuvgRj45nI
NCnt2BerAZZRm9nZEmOEDteJjXLUcSb5o4zQXW3kURqqjh1LOfPTxUYoNovI
auOrQ7bOOaqkfQY6+urEO5+qIarVyJd0dAYCrVxmRCerIeX+hTrf2TMgaC9Z
NOqthkbj9qGKWi6cWCsyXmqrwbpJlb9qNxe5+Z1uK8tJSCWFsiaMuZBV/vy1
zQESzI/nMW7dnQ4Sc6OGyHSS+MxjiKq1TnEaCROEzolllhfEhrincFkR+P49
UZ/IcnrWboCBtEgv+03vif7E3kbxUQMQiuqk+OpxwvvEvyNlsw1QGOSrFzp/
nNA88+LMrsfTsJ5Bqy5SjhFa6Rq3PfZMg31yuyqRPEYE5Ths8eJNgx2lR7Nr
4yhBKjiYvLeMgwPrst9wvUe+8EyFR9a6sP7f3hJcO62uSvFUzCUvsXOlvyXU
WLp2suf6EEX7L7Vd+4aQzsqP3hWnD2t2Sk5G/jAxEtt595W1PqR/0wKUpGGC
xr9Gb67XQ+ShDD9zt9fE3glDt7n79XB1w5bz834ZIny4nGMjAj1Qg9c5PWp4
RSRGXaywfKgLWWTMrGHDV4Qt5zG5apcu2kr/tF/tPkjkxfxzOZurC3EptbYx
/j9C7u/8dOKuDka7nk+8Kxgg7p1jnqyJ0IFj9sCu6E39RIibuI4v1MHC0jk6
sO0j1oRWpwy0skH9JqvSSf8lUdBb3u2YzsYJnkdmDLOX2NZsUjyxgY3uQOtU
dZMe4ifHZ1wn6w+5PLb4+m3XbuJzPrPxP7SXd7s=
          "]], 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-16.50910835705824, 17.}, {-12.888376415481105`, 16.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-12.888376415481105`, 16.}, {-11.507186386440765`, 15.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-12.888376415481105`, 16.}, {-8.507186386804221, 15.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-11.507186386440765`, 15.}, {-8.50718638638375, 14.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-8.507186386804221, 15.}, {-11.821706436238259`, 14.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-8.50718638638375, 14.}, {-8.507186386346547, 13.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-11.821706436238259`, 14.}, {-11.821706436235615`, 13.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-8.507186386346547, 13.}, {-8.507186386384035, 12.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwtlHs0FHgUx0eRjuWwCHlkXsaMUmzardbxuzmDjEebaldsdgjZHmp2atko
xpbn0q7aNuMx2C3qyFRkyfIzWNNgmMl45NVgGLNnVqt1SiUt1ud877n/3HvO
93zvOZcUcTooag2BQPBdquVO8E5+nv9MgwgrOIEmq4KUWKpBiu3fzr5RM8DC
+KHL32Ea5By0rihWyoDvu/Nsn5tr0PrQe3qh9xjgIg2Z5LVOo4jAs/SmHxlg
v34+8+apaQRblhcYsC+ZYxRiMo0Ec75LYkDTDvFJQYUa8cpC/20hM4BLf11+
zlONpphpawxf0yE6WL95WD6FOlegg5ff+xbVkSnk/3tsCEtAh6bUmUeFmkmU
nCisesyhQ49B7y39c5Mo2vbKgA+TDon9D9LIhEm0cN1IIrZYmtemHZnJVCFv
rdPlvRpHKGQdpJ/YoEJ7bNWG7fWOYDprOX1DMIFmaJ5s/xxHICqfFMQxJlCA
oXtSN9sROrOO8avKxpB0xQ8NHgUH7O92GUNt/yizWQIa/EB2T4mrU6KIiHie
hEMD0Gx3rtijRCWkq2W+TBrcPfz1b4O5zxBvqyuhw4IGxYOJ4+dKRtG6jKCs
AI0DBB8qNXcSjqAtrq/2yusdQCF5uvtV/TCao9nv+jzHASx3Ug6NiIcQ+3h7
6DDbAaSp5ZVGtwdW/VDB7JL+y/sP+pF082YVS0CFfN4b04VHfSgpsGSwnUOF
sCSenlbUi1Ru2+75M6kQfqFAyhMr0PyoIlJmQYXSBL8TDR09qNE/d/6QhgLk
8zmjRV1P0McXj50YqaeAMj7KkSaTo6+4BxuicygwEifzOiCTod1bDs/MsinA
L+yv05p0rN6LDC8+8804bSBBlYGss34CMjz0IzaNvm9DuoN2NlIOGZ5lfxm2
e7YVyWJ9RPuZZDhjuXg0ZbQZGRuJo59akOH4tK68RtyEmqsLPojUkICvM84S
Hm5Af0U9Fs7Wk2Cr6FKzxKYOpRJZB1JySPCz8Yv1Db3V6IaK9HJDOAmOta0t
Dpzjr+ZDBJPg6/oFiylouFEeHiAgAjxwogxxkvEf/E/lCg4RTCV2xEg3Pj7J
NrA5yiTC1Ifqnsxdt7DW2APNWxDhjtsBc955IY4LuptA77GHmFu3YzJjq3FN
cLlzbLw9bL3L1fvVpQ5f++jUNZGdPdysTGNnrm3E5sq3QnLLJuC/M6maMBNj
ft4ydvBuKs0rpkiCa3u+49Z52MEpdYqQ4teJ47Nl4VSVLUwv6sxusO7G/W2F
kYMZtlBzfc1lgZ4c9ySNJQxts4WkXd4X9l15gs/U5pc59tlAl9pvzNpJgSvO
dKobE22gtMTsvk5fL04v57qXUGxgIbpQu/ZqP9Zl/3Szq90ahj7RXCWFP8Wb
fnGg+HxjDR4k/ts7XkPY/rgog2VpDWY1eZU1RiO4US3IKRNthC9eqiuYdaN4
3ljkGsbZCLoczwQnqhJ3jFO5sbSNcM299k/uiBLvZHcEDSitYPhI746L6WPY
M71all9sBUOKvA5fh3E8FaLU1kZZQW6JXlpf1TimDQSWbXOxAkKrVQzVbQL/
/3+s4D+5Azbm
          "]], 0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-11.821706436235615`, 13.}, {-8.507186386384035, 12.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-8.507186386384035, 12.}, {-7.50718638651, 11.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-7.50718638651, 11.}, {-3.5091083450835185`, 10.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-3.5091083450835185`, 10.}, {-3.5091083468572606`, 9.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-3.5091083468572606`, 9.}, {-1.5091083460706898`, 8.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-1.5091083460706898`, 8.}, {-1.5091083466067232`, 7.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-1.5091083466067232`, 7.}, {-0.6001150162829845, 6.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.6001150162829845, 6.}, {-0.6001150161843611, 5.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{-0.6001150161843611, 5.}, {0.7904976462449156, 4.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{0.7904976462449156, 4.}, {0.7904976462669708, 3.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{0.7904976462669708, 3.}, {7.490891662735066, 2.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{7.490891662735066, 2.}, {9.490891663575752, 1.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], Dashing[{Small, Small}], 
         ArrowBox[{{9.490891663575752, 1.}, {10.000179127452924`, 0.}}, 
          0.3417206901942212]}, 
        {RGBColor[
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137], 
          NCache[
           Rational[167, 255], 0.6549019607843137]], 
         ArrowBox[{{10.49089166369589, 1.}, {10.000179127452924`, 0.}}, 
          0.3417206901942212]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[71, 255], 0.2784313725490196], 
            NCache[
             Rational[182, 255], 0.7137254901960784], 
            NCache[
             Rational[109, 255], 0.42745098039215684`]], EdgeForm[None], 
           PolygonBox[{{-0.32161931231423635`, 32.89279367646882}, {0., 
            32.67838068768577}, {0.32161931231423635`, 32.89279367646882}, {
            0.32161931231423635`, 33.32161931231423}, {-0.32161931231423635`, 
            33.32161931231423}, {-0.32161931231423635`, 32.89279367646882}}]},
          
          TagBox[
           GridBox[{{"\"Axiom 1\""}, {
              RowBox[{"x1", "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"x2", "\[CircleTimes]", 
                    OverscriptBox["x2", "_"]}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Axiom 1", $CellContext`x1 == CirclePlus[$CellContext`x1, 
              CircleTimes[$CellContext`x2, 
               OverBar[$CellContext`x2]]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[71, 255], 0.2784313725490196], 
            NCache[
             Rational[182, 255], 0.7137254901960784], 
            NCache[
             Rational[109, 255], 0.42745098039215684`]], EdgeForm[None], 
           PolygonBox[{{-1.5809459484358217`, 
            31.892793676468816`}, {-1.2593266361215854`, 
            31.678380687685763`}, {-0.937707323807349, 
            31.892793676468816`}, {-0.937707323807349, 
            32.32161931231423}, {-1.5809459484358217`, 
            32.32161931231423}, {-1.5809459484358217`, 31.892793676468816`}}]},
          TagBox[
           GridBox[{{"\"Axiom 2\""}, {
              RowBox[{"x1", "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    OverscriptBox["x2", "_"]}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Axiom 2", $CellContext`x1 == CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               OverBar[$CellContext`x2]]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[71, 255], 0.2784313725490196], 
            NCache[
             Rational[182, 255], 0.7137254901960784], 
            NCache[
             Rational[109, 255], 0.42745098039215684`]], EdgeForm[None], 
           PolygonBox[{{-18.830727665705307`, 
            32.89279367646882}, {-18.50910835339107, 
            32.67838068768577}, {-18.187489041076834`, 
            32.89279367646882}, {-18.187489041076834`, 
            33.32161931231423}, {-18.830727665705307`, 
            33.32161931231423}, {-18.830727665705307`, 32.89279367646882}}]},
          TagBox[
           GridBox[{{"\"Axiom 3\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", "x2"}], "\[Equal]", 
                RowBox[{"x2", "\[CirclePlus]", "x1"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          
          Column[{"Axiom 3", CirclePlus[$CellContext`x1, $CellContext`x2] == 
            CirclePlus[$CellContext`x2, $CellContext`x1]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[71, 255], 0.2784313725490196], 
            NCache[
             Rational[182, 255], 0.7137254901960784], 
            NCache[
             Rational[109, 255], 0.42745098039215684`]], EdgeForm[None], 
           PolygonBox[{{-21.830727665819648`, 
            30.892793676468816`}, {-21.50910835350541, 
            30.678380687685763`}, {-21.187489041191174`, 
            30.892793676468816`}, {-21.187489041191174`, 
            31.321619312314237`}, {-21.830727665819648`, 
            31.321619312314237`}, {-21.830727665819648`, 
            30.892793676468816`}}]},
          TagBox[
           GridBox[{{"\"Axiom 4\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"x2", "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Axiom 4", CirclePlus[$CellContext`x1, 
              CircleTimes[$CellContext`x2, $CellContext`x3]] == CircleTimes[
              CirclePlus[$CellContext`x1, $CellContext`x2], 
              CirclePlus[$CellContext`x1, $CellContext`x3]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[71, 255], 0.2784313725490196], 
            NCache[
             Rational[182, 255], 0.7137254901960784], 
            NCache[
             Rational[109, 255], 0.42745098039215684`]], EdgeForm[None], 
           PolygonBox[{{-14.565420412106771`, 
            31.892793676468816`}, {-14.243801099792535`, 
            31.678380687685763`}, {-13.922181787478298`, 
            31.892793676468816`}, {-13.922181787478298`, 
            32.32161931231423}, {-14.565420412106771`, 
            32.32161931231423}, {-14.565420412106771`, 31.892793676468816`}}]},
          TagBox[
           GridBox[{{"\"Axiom 5\""}, {
              RowBox[{
                RowBox[{
                  RowBox[{"x1", "\[CircleTimes]", "x2"}], "\[CirclePlus]", 
                  RowBox[{"x1", "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Axiom 5", CirclePlus[
              CircleTimes[$CellContext`x1, $CellContext`x2], 
              CircleTimes[$CellContext`x1, $CellContext`x3]] == 
            CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, $CellContext`x3]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[71, 255], 0.2784313725490196], 
            NCache[
             Rational[182, 255], 0.7137254901960784], 
            NCache[
             Rational[109, 255], 0.42745098039215684`]], EdgeForm[None], 
           PolygonBox[{{6.1692723442787845`, 31.892793676468816`}, {
            6.490891656593021, 31.678380687685763`}, {6.812510968907258, 
            31.892793676468816`}, {6.812510968907258, 32.32161931231423}, {
            6.1692723442787845`, 32.32161931231423}, {6.1692723442787845`, 
            31.892793676468816`}}]},
          TagBox[
           GridBox[{{"\"Axiom 6\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", "x2"}], "\[Equal]", 
                RowBox[{"x2", "\[CircleTimes]", "x1"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          
          Column[{"Axiom 6", CircleTimes[$CellContext`x1, $CellContext`x2] == 
            CircleTimes[$CellContext`x2, $CellContext`x1]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[146, 255], 0.5725490196078431], 
            NCache[
             Rational[10, 17], 0.5882352941176471], 0], EdgeForm[None], 
           PolygonBox[{{10.490891664630823`, 1.6180758706044287`}, {
            10.872815794026394`, 2.}, {10.490891664630823`, 
            2.3819241293955713`}, {10.108967535235251`, 2.}, {
            10.490891664630823`, 1.6180758706044287`}}]},
          TagBox[
           GridBox[{{"\"Hypothesis 1\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
                  OverscriptBox["\[FormalB]", "_"]}], "\[Equal]", 
                OverscriptBox[
                 RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
                 "_"]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Hypothesis 1", CirclePlus[
              OverBar[\[FormalA]], 
              OverBar[\[FormalB]]] == OverBar[
              CircleTimes[\[FormalA], \[FormalB]]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-11.92635020760244, 
            32.38371816301909}, {-12.30827433699801, 
            31.722208074806623`}, {-11.544426078206868`, 
            31.722208074806623`}, {-11.92635020760244, 32.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 1\""}, {
              RowBox[{
                RowBox[{
                  RowBox[{"x1", "\[CircleTimes]", 
                    OverscriptBox["x1", "_"]}], "\[CirclePlus]", "x2"}], 
                "\[Equal]", "x2"}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 1", CirclePlus[
              CircleTimes[$CellContext`x1, 
               
               OverBar[$CellContext`x1]], $CellContext`x2] == \
$CellContext`x2}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-14.509108352966479`, 
            30.38371816301909}, {-14.89103248236205, 
            29.722208074806623`}, {-14.127184223570907`, 
            29.722208074806623`}, {-14.509108352966479`, 30.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 2\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"x2", "\[CircleTimes]", 
                    OverscriptBox["x1", "_"]}]}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", "x2"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 2", CirclePlus[$CellContext`x1, 
              CircleTimes[$CellContext`x2, 
               OverBar[$CellContext`x1]]] == 
            CirclePlus[$CellContext`x1, $CellContext`x2]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-24.50910835377269, 
            30.38371816301909}, {-24.89103248316826, 
            29.722208074806623`}, {-24.127184224377118`, 
            29.722208074806623`}, {-24.50910835377269, 30.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 3\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"x2", "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}], ")"}], 
                  "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 3", CirclePlus[$CellContext`x1, 
              CircleTimes[$CellContext`x2, $CellContext`x3]] == CircleTimes[
              CirclePlus[$CellContext`x2, $CellContext`x1], 
              CirclePlus[$CellContext`x1, $CellContext`x3]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-1.2758562408125158`, 
            29.38371816301909}, {-1.657780370208087, 
            28.722208074806623`}, {-0.8939321114169445, 
            28.722208074806623`}, {-1.2758562408125158`, 29.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 4\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    OverscriptBox["x1", "_"]}], ")"}]}], "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", "x2"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 4", CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               OverBar[$CellContext`x1]]] == 
            CircleTimes[$CellContext`x1, $CellContext`x2]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{1.563784511510903, 31.38371816301909}, {
            1.1818603821153317`, 30.722208074806623`}, {1.9457086409064743`, 
            30.722208074806623`}, {1.563784511510903, 31.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 5\""}, {
              RowBox[{
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", 
                    OverscriptBox["x1", "_"]}], ")"}], "\[CircleTimes]", 
                  "x2"}], "\[Equal]", "x2"}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 5", CircleTimes[
              CirclePlus[$CellContext`x1, 
               
               OverBar[$CellContext`x1]], $CellContext`x2] == \
$CellContext`x2}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-11.926350207431028`, 
            31.38371816301909}, {-12.3082743368266, 
            30.722208074806623`}, {-11.544426078035457`, 
            30.722208074806623`}, {-11.926350207431028`, 31.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 6\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", "x2"}], "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{
                    OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], 
                    ")"}]}]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          
          Column[{"Critical Pair Lemma 6", 
            CircleTimes[$CellContext`x1, $CellContext`x2] == 
            CircleTimes[$CellContext`x1, 
              CirclePlus[
               OverBar[$CellContext`x1], $CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-7.27585624087402, 
            30.38371816301909}, {-7.657780370269592, 
            29.722208074806623`}, {-6.893932111478449, 
            29.722208074806623`}, {-7.27585624087402, 30.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 7\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", "x2"}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{
                    OverscriptBox["x1", "_"], "\[CircleTimes]", "x2"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          
          Column[{"Critical Pair Lemma 7", 
            CirclePlus[$CellContext`x1, $CellContext`x2] == 
            CirclePlus[$CellContext`x1, 
              CircleTimes[
               OverBar[$CellContext`x1], $CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-2.886419630917402, 
            30.38371816301909}, {-3.2683437603129732`, 
            29.722208074806623`}, {-2.5044955015218306`, 
            29.722208074806623`}, {-2.886419630917402, 30.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 8\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  OverscriptBox[
                   OverscriptBox["x1", "_"], "_"]}], "\[Equal]", "x1"}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 8", CircleTimes[$CellContext`x1, 
              OverBar[
               OverBar[$CellContext`x1]]] == $CellContext`x1}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-3.275856241341387, 
            29.38371816301909}, {-3.6577803707369583`, 
            28.722208074806623`}, {-2.8939321119458157`, 
            28.722208074806623`}, {-3.275856241341387, 29.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 9\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  OverscriptBox[
                   OverscriptBox[
                    OverscriptBox["x1", "_"], "_"], "_"]}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  OverscriptBox["x1", "_"]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 9", CirclePlus[$CellContext`x1, 
              OverBar[
               OverBar[
                OverBar[$CellContext`x1]]]] == CirclePlus[$CellContext`x1, 
              OverBar[$CellContext`x1]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-1.5091083436646215`, 
            28.38371816301909}, {-1.8910324730601928`, 
            27.722208074806623`}, {-1.1271842142690502`, 
            27.722208074806623`}, {-1.5091083436646215`, 28.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 10\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox[
                   OverscriptBox["x1", "_"], "_"], "\[CircleTimes]", "x1"}], 
                "\[Equal]", 
                RowBox[{
                  OverscriptBox[
                   OverscriptBox["x1", "_"], "_"], "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", 
                    OverscriptBox["x1", "_"]}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 10", CircleTimes[
              OverBar[
               OverBar[$CellContext`x1]], $CellContext`x1] == CircleTimes[
              OverBar[
               OverBar[$CellContext`x1]], 
              CirclePlus[$CellContext`x1, 
               OverBar[$CellContext`x1]]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-0.5091083437534962, 27.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 1\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox[
                   OverscriptBox["x1", "_"], "_"], "\[CircleTimes]", "x1"}], 
                "\[Equal]", 
                OverscriptBox[
                 OverscriptBox["x1", "_"], "_"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 1", CircleTimes[
              OverBar[
               OverBar[$CellContext`x1]], $CellContext`x1] == OverBar[
              OverBar[$CellContext`x1]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-0.5091083438244937, 26.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 2\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  OverscriptBox[
                   OverscriptBox["x1", "_"], "_"]}], "\[Equal]", 
                OverscriptBox[
                 OverscriptBox["x1", "_"], "_"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 2", CircleTimes[$CellContext`x1, 
              OverBar[
               OverBar[$CellContext`x1]]] == OverBar[
              OverBar[$CellContext`x1]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-0.5091083436379051, 25.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 3\""}, {
              RowBox[{"x1", "\[Equal]", 
                OverscriptBox[
                 OverscriptBox["x1", "_"], "_"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 3", $CellContext`x1 == OverBar[
              OverBar[$CellContext`x1]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-7.017068350452746, 
            24.38371816301909}, {-7.398992479848317, 
            23.722208074806623`}, {-6.635144221057175, 
            23.722208074806623`}, {-7.017068350452746, 24.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 11\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], 
                "\[Equal]", 
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CirclePlus]", 
                  RowBox[{"x1", "\[CircleTimes]", "x2"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 11", CirclePlus[
              OverBar[$CellContext`x1], $CellContext`x2] == CirclePlus[
              OverBar[$CellContext`x1], 
              CircleTimes[$CellContext`x1, $CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-4.509108350010479, 
            24.38371816301909}, {-4.89103247940605, 
            23.722208074806623`}, {-4.127184220614907, 
            23.722208074806623`}, {-4.509108350010479, 24.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 12\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CircleTimes]", "x2"}], 
                "\[Equal]", 
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 12", CircleTimes[
              OverBar[$CellContext`x1], $CellContext`x2] == CircleTimes[
              OverBar[$CellContext`x1], 
              CirclePlus[$CellContext`x1, $CellContext`x2]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{1.9399583184983271`, 16.38371816301909}, {
            1.5580341891027558`, 15.722208074806623`}, {2.3218824478938984`, 
            15.722208074806623`}, {1.9399583184983271`, 16.38371816301909}}]},
          
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 13\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CircleTimes]", "x2"}], 
                "\[Equal]", 
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 13", CircleTimes[
              OverBar[$CellContext`x1], $CellContext`x2] == CircleTimes[
              OverBar[$CellContext`x1], 
              CirclePlus[$CellContext`x2, $CellContext`x1]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-13.509108351538515`, 
            23.38371816301909}, {-13.891032480934086`, 
            22.722208074806623`}, {-13.127184222142944`, 
            22.722208074806623`}, {-13.509108351538515`, 23.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 14\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CircleTimes]", "x2"}], ")"}]}], 
                "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{
                    OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], 
                    ")"}]}]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 14", CircleTimes[$CellContext`x1, 
              CircleTimes[$CellContext`x1, $CellContext`x2]] == 
            CircleTimes[$CellContext`x1, 
              CirclePlus[
               OverBar[$CellContext`x1], $CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-14.509108353753334, 22.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 4\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CircleTimes]", "x2"}], ")"}]}], 
                "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", "x2"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 4", CircleTimes[$CellContext`x1, 
              CircleTimes[$CellContext`x1, $CellContext`x2]] == 
            CircleTimes[$CellContext`x1, $CellContext`x2]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-14.674177320485256`, 
            21.38371816301909}, {-15.056101449880828`, 
            20.722208074806623`}, {-14.292253191089685`, 
            20.722208074806623`}, {-14.674177320485256`, 21.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 15\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    RowBox[{"x1", "\[CircleTimes]", "x3"}]}], ")"}]}], 
                "\[Equal]", 
                RowBox[{
                  RowBox[{"x1", "\[CircleTimes]", "x2"}], "\[CirclePlus]", 
                  RowBox[{"x1", "\[CircleTimes]", "x3"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 15", CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               CircleTimes[$CellContext`x1, $CellContext`x3]]] == CirclePlus[
              CircleTimes[$CellContext`x1, $CellContext`x2], 
              CircleTimes[$CellContext`x1, $CellContext`x3]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-14.674177320464167, 20.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 5\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    RowBox[{"x1", "\[CircleTimes]", "x3"}]}], ")"}]}], 
                "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 5", CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               CircleTimes[$CellContext`x1, $CellContext`x3]]] == 
            CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, $CellContext`x3]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-6.509108348063421, 
            23.38371816301909}, {-6.891032477458992, 
            22.722208074806623`}, {-6.12718421866785, 
            22.722208074806623`}, {-6.509108348063421, 23.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 16\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox[
                   OverscriptBox["x1", "_"], "_"], "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}]}], 
                "\[Equal]", 
                RowBox[{
                  OverscriptBox[
                   OverscriptBox["x1", "_"], "_"], "\[CirclePlus]", 
                  RowBox[{
                    OverscriptBox["x1", "_"], "\[CircleTimes]", "x2"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 16", CirclePlus[
              OverBar[
               OverBar[$CellContext`x1]], 
              CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
              OverBar[
               OverBar[$CellContext`x1]], 
              CircleTimes[
               OverBar[$CellContext`x1], $CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-6.509108347332017, 22.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 6\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}]}], 
                "\[Equal]", 
                RowBox[{
                  OverscriptBox[
                   OverscriptBox["x1", "_"], "_"], "\[CirclePlus]", 
                  RowBox[{
                    OverscriptBox["x1", "_"], "\[CircleTimes]", "x2"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 6", CirclePlus[$CellContext`x1, 
              CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
              OverBar[
               OverBar[$CellContext`x1]], 
              CircleTimes[
               OverBar[$CellContext`x1], $CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-7.509108355986996, 21.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 7\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}]}], 
                "\[Equal]", 
                RowBox[{
                  OverscriptBox[
                   OverscriptBox["x1", "_"], "_"], "\[CirclePlus]", 
                  "x2"}]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 7", CirclePlus[$CellContext`x1, 
              CirclePlus[$CellContext`x1, $CellContext`x2]] == CirclePlus[
              OverBar[
               OverBar[$CellContext`x1]], $CellContext`x2]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-7.5091083546782045, 20.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 8\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}]}], 
                "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", "x2"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 8", CirclePlus[$CellContext`x1, 
              CirclePlus[$CellContext`x1, $CellContext`x2]] == 
            CirclePlus[$CellContext`x1, $CellContext`x2]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-18.05211771982141, 
            19.38371816301909}, {-18.43404184921698, 
            18.722208074806623`}, {-17.67019359042584, 
            18.722208074806623`}, {-18.05211771982141, 19.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 17\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                    "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 17", CirclePlus[$CellContext`x1, 
              CircleTimes[
               
               CirclePlus[$CellContext`x1, $CellContext`x2], \
$CellContext`x3]] == CircleTimes[
              CirclePlus[$CellContext`x1, $CellContext`x2], 
              CirclePlus[$CellContext`x1, $CellContext`x3]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-17.25854539356112, 18.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 9\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                    "\[CircleTimes]", "x3"}]}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"x2", "\[CircleTimes]", "x3"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 9", CirclePlus[$CellContext`x1, 
              CircleTimes[
               
               CirclePlus[$CellContext`x1, $CellContext`x2], \
$CellContext`x3]] == CirclePlus[$CellContext`x1, 
              CircleTimes[$CellContext`x2, $CellContext`x3]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-17.052117719731797`, 
            19.38371816301909}, {-17.434041849127368`, 
            18.722208074806623`}, {-16.670193590336225`, 
            18.722208074806623`}, {-17.052117719731797`, 19.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 18\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"x2", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}], 
                "\[Equal]", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 18", CirclePlus[$CellContext`x1, 
              CircleTimes[$CellContext`x2, 
               CirclePlus[$CellContext`x1, $CellContext`x3]]] == CircleTimes[
              CirclePlus[$CellContext`x1, $CellContext`x2], 
              CirclePlus[$CellContext`x1, $CellContext`x3]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-18.258545393550264, 18.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 10\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"x2", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x3"}], ")"}]}]}], 
                "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"x2", "\[CircleTimes]", "x3"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 10", CirclePlus[$CellContext`x1, 
              CircleTimes[$CellContext`x2, 
               CirclePlus[$CellContext`x1, $CellContext`x3]]] == 
            CirclePlus[$CellContext`x1, 
              CircleTimes[$CellContext`x2, $CellContext`x3]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-12.509108351487583`, 
            19.38371816301909}, {-12.891032480883155`, 
            18.722208074806623`}, {-12.127184222092012`, 
            18.722208074806623`}, {-12.509108351487583`, 19.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 19\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    OverscriptBox["x2", "_"]}], ")"}]}], "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 19", CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               OverBar[$CellContext`x2]]] == CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, $CellContext`x1]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-10.641640528217351, 18.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 11\""}, {
              RowBox[{"x1", "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          
          Column[{"Substitution Lemma 11", $CellContext`x1 == 
            CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, $CellContext`x1]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-3.5091083450140843`, 
            17.38371816301909}, {-3.8910324744096556`, 
            16.722208074806623`}, {-3.127184215618513, 
            16.722208074806623`}, {-3.5091083450140843`, 17.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 20\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  OverscriptBox["x1", "_"]}], "\[Equal]", 
                RowBox[{"x2", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", 
                    OverscriptBox["x1", "_"]}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 20", CirclePlus[$CellContext`x1, 
              OverBar[$CellContext`x1]] == CirclePlus[$CellContext`x2, 
              CirclePlus[$CellContext`x1, 
               OverBar[$CellContext`x1]]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-11.888376415434891`, 
            17.38371816301909}, {-12.270300544830462`, 
            16.722208074806623`}, {-11.50645228603932, 
            16.722208074806623`}, {-11.888376415434891`, 17.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 21\""}, {
              RowBox[{"x1", "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          
          Column[{"Critical Pair Lemma 21", $CellContext`x1 == 
            CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x1, $CellContext`x2]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-5.509108345158154, 
            17.38371816301909}, {-5.891032474553725, 
            16.722208074806623`}, {-5.127184215762583, 
            16.722208074806623`}, {-5.509108345158154, 17.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 22\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}], ")"}]}], 
                "\[Equal]", 
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CirclePlus]", "x1"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 22", CirclePlus[
              OverBar[$CellContext`x1], 
              CirclePlus[$CellContext`x2, $CellContext`x1]] == CirclePlus[
              OverBar[$CellContext`x1], $CellContext`x1]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-6.8883764133107945`, 
            16.38371816301909}, {-7.270300542706366, 
            15.722208074806623`}, {-6.506452283915223, 
            15.722208074806623`}, {-6.8883764133107945`, 16.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 23\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{
                    OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], 
                    ")"}]}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  OverscriptBox["x1", "_"]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 23", CirclePlus[$CellContext`x1, 
              CirclePlus[
               OverBar[$CellContext`x1], $CellContext`x2]] == 
            CirclePlus[$CellContext`x1, 
              OverBar[$CellContext`x1]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-5.509108345020621, 16.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 12\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}], ")"}]}], 
                "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  OverscriptBox["x1", "_"]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 12", CirclePlus[
              OverBar[$CellContext`x1], 
              CirclePlus[$CellContext`x2, $CellContext`x1]] == 
            CirclePlus[$CellContext`x1, 
              OverBar[$CellContext`x1]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-5.50910834511734, 
            15.383718163019092`}, {-5.891032474512912, 
            14.722208074806623`}, {-5.127184215721769, 
            14.722208074806623`}, {-5.50910834511734, 15.383718163019092`}}]},
          
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 24\""}, {
              RowBox[{
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CirclePlus]", 
                  OverscriptBox[
                   RowBox[{"x1", "\[CirclePlus]", "x2"}], "_"]}], "\[Equal]", 
                
                RowBox[{
                  OverscriptBox[
                   RowBox[{"x1", "\[CirclePlus]", "x2"}], "_"], 
                  "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    OverscriptBox["x2", "_"]}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 24", CirclePlus[
              CirclePlus[$CellContext`x1, $CellContext`x2], 
              OverBar[
               CirclePlus[$CellContext`x1, $CellContext`x2]]] == CirclePlus[
              OverBar[
               CirclePlus[$CellContext`x1, $CellContext`x2]], 
              CirclePlus[$CellContext`x2, 
               OverBar[$CellContext`x2]]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-3.509108344712814, 14.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 13\""}, {
              RowBox[{
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CirclePlus]", 
                  OverscriptBox[
                   RowBox[{"x1", "\[CirclePlus]", "x2"}], "_"]}], "\[Equal]", 
                
                RowBox[{"x2", "\[CirclePlus]", 
                  OverscriptBox["x2", "_"]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 13", CirclePlus[
              CirclePlus[$CellContext`x1, $CellContext`x2], 
              OverBar[
               CirclePlus[$CellContext`x1, $CellContext`x2]]] == 
            CirclePlus[$CellContext`x2, 
              OverBar[$CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{1.9399583186638552`, 15.383718163019092`}, {
            1.5580341892682839`, 14.722208074806623`}, {2.3218824480594265`, 
            14.722208074806623`}, {1.9399583186638552`, 
            15.383718163019092`}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 25\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox[
                   RowBox[{"x1", "\[CirclePlus]", "x2"}], "_"], 
                  "\[CircleTimes]", 
                  OverscriptBox["x2", "_"]}], "\[Equal]", 
                RowBox[{
                  OverscriptBox[
                   RowBox[{"x1", "\[CirclePlus]", "x2"}], "_"], 
                  "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    OverscriptBox["x2", "_"]}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 25", CircleTimes[
              OverBar[
               CirclePlus[$CellContext`x1, $CellContext`x2]], 
              OverBar[$CellContext`x2]] == CircleTimes[
              OverBar[
               CirclePlus[$CellContext`x1, $CellContext`x2]], 
              CirclePlus[$CellContext`x2, 
               OverBar[$CellContext`x2]]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{4.179705699493923, 14.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 14\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox[
                   RowBox[{"x1", "\[CirclePlus]", "x2"}], "_"], 
                  "\[CircleTimes]", 
                  OverscriptBox["x2", "_"]}], "\[Equal]", 
                OverscriptBox[
                 RowBox[{"x1", "\[CirclePlus]", "x2"}], "_"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 14", CircleTimes[
              OverBar[
               CirclePlus[$CellContext`x1, $CellContext`x2]], 
              OverBar[$CellContext`x2]] == OverBar[
              CirclePlus[$CellContext`x1, $CellContext`x2]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-0.06004168151176259, 
            15.383718163019092`}, {-0.4419658109073339, 
            14.722208074806623`}, {0.3218824478838087, 
            14.722208074806623`}, {-0.06004168151176259, 
            15.383718163019092`}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 26\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox[
                   RowBox[{
                    OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], "_"], 
                  "\[CircleTimes]", "x1"}], "\[Equal]", 
                RowBox[{
                  OverscriptBox[
                   RowBox[{
                    OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], "_"], 
                  "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", 
                    OverscriptBox["x1", "_"]}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 26", CircleTimes[
              OverBar[
               CirclePlus[
                OverBar[$CellContext`x1], $CellContext`x2]], $CellContext`x1] == 
            CircleTimes[
              OverBar[
               CirclePlus[
                OverBar[$CellContext`x1], $CellContext`x2]], 
              CirclePlus[$CellContext`x1, 
               OverBar[$CellContext`x1]]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{0.8085460355518137, 14.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 15\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox[
                   RowBox[{
                    OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], "_"], 
                  "\[CircleTimes]", "x1"}], "\[Equal]", 
                OverscriptBox[
                 RowBox[{
                   OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], 
                 "_"]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 15", CircleTimes[
              OverBar[
               CirclePlus[
                OverBar[$CellContext`x1], $CellContext`x2]], $CellContext`x1] == 
            OverBar[
              CirclePlus[
               OverBar[$CellContext`x1], $CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{4.1797056993019055, 13.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 16\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CircleTimes]", 
                  OverscriptBox[
                   RowBox[{"x2", "\[CirclePlus]", "x1"}], "_"]}], "\[Equal]", 
                
                OverscriptBox[
                 RowBox[{"x2", "\[CirclePlus]", "x1"}], "_"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 16", CircleTimes[
              OverBar[$CellContext`x1], 
              OverBar[
               CirclePlus[$CellContext`x2, $CellContext`x1]]] == OverBar[
              CirclePlus[$CellContext`x2, $CellContext`x1]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-16.50910835705824, 
            17.38371816301909}, {-16.89103248645381, 
            16.722208074806623`}, {-16.127184227662667`, 
            16.722208074806623`}, {-16.50910835705824, 17.38371816301909}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 27\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"x2", "\[CircleTimes]", 
                    RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x3"}], ")"}]}]}], 
                "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    RowBox[{"x1", "\[CircleTimes]", "x3"}]}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 27", CirclePlus[$CellContext`x1, 
              CircleTimes[$CellContext`x2, 
               CirclePlus[$CellContext`x2, $CellContext`x3]]] == 
            CirclePlus[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               CircleTimes[$CellContext`x1, $CellContext`x3]]]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-12.888376415481105, 16.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 17\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", "x2"}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    RowBox[{"x1", "\[CircleTimes]", "x3"}]}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          
          Column[{"Substitution Lemma 17", 
            CirclePlus[$CellContext`x1, $CellContext`x2] == 
            CirclePlus[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               CircleTimes[$CellContext`x1, $CellContext`x3]]]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-11.507186386440765`, 
            15.383718163019092`}, {-11.889110515836336`, 
            14.722208074806623`}, {-11.125262257045193`, 
            14.722208074806623`}, {-11.507186386440765`, 
            15.383718163019092`}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 28\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", "x2"}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x1", "\[CircleTimes]", "x3"}], "\[CirclePlus]", 
                    "x2"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          
          Column[{"Critical Pair Lemma 28", 
            CirclePlus[$CellContext`x1, $CellContext`x2] == 
            CirclePlus[$CellContext`x1, 
              CirclePlus[
               
               CircleTimes[$CellContext`x1, $CellContext`x3], \
$CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-8.507186386804221, 
            15.383718163019092`}, {-8.889110516199793, 
            14.722208074806623`}, {-8.12526225740865, 
            14.722208074806623`}, {-8.507186386804221, 15.383718163019092`}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 29\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", "x2"}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    RowBox[{"x3", "\[CircleTimes]", "x1"}]}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          
          Column[{"Critical Pair Lemma 29", 
            CirclePlus[$CellContext`x1, $CellContext`x2] == 
            CirclePlus[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               CircleTimes[$CellContext`x3, $CellContext`x1]]]}], 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-8.50718638638375, 
            14.383718163019092`}, {-8.889110515779322, 
            13.722208074806623`}, {-8.12526225698818, 
            13.722208074806623`}, {-8.50718638638375, 14.383718163019092`}}]},
          
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 30\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", "x2"}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"x3", "\[CircleTimes]", "x1"}], "\[CirclePlus]", 
                    "x2"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          
          Column[{"Critical Pair Lemma 30", 
            CirclePlus[$CellContext`x1, $CellContext`x2] == 
            CirclePlus[$CellContext`x1, 
              CirclePlus[
               
               CircleTimes[$CellContext`x3, $CellContext`x1], \
$CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-11.821706436238259`, 
            14.383718163019092`}, {-12.20363056563383, 
            13.722208074806623`}, {-11.439782306842687`, 
            13.722208074806623`}, {-11.821706436238259`, 
            14.383718163019092`}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 31\""}, {
              RowBox[{
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CirclePlus]", "x3"}], "\[Equal]", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x3", "\[CirclePlus]", "x1"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 31", CirclePlus[
              CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
            CirclePlus[
              CirclePlus[$CellContext`x1, $CellContext`x2], 
              CirclePlus[$CellContext`x3, $CellContext`x1]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-8.507186386346547, 
            13.383718163019092`}, {-8.889110515742118, 
            12.722208074806623`}, {-8.125262256950975, 
            12.722208074806623`}, {-8.507186386346547, 13.383718163019092`}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 32\""}, {
              RowBox[{
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CirclePlus]", "x3"}], "\[Equal]", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 32", CirclePlus[
              CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
            CirclePlus[
              CirclePlus[$CellContext`x1, $CellContext`x2], 
              CirclePlus[$CellContext`x2, $CellContext`x3]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{0.8085460355525242, 13.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 18\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  OverscriptBox[
                   RowBox[{
                    OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], "_"]}],
                 "\[Equal]", 
                OverscriptBox[
                 RowBox[{
                   OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], 
                 "_"]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 18", CircleTimes[$CellContext`x1, 
              OverBar[
               CirclePlus[
                OverBar[$CellContext`x1], $CellContext`x2]]] == OverBar[
              CirclePlus[
               OverBar[$CellContext`x1], $CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-11.821706436235615`, 
            13.383718163019092`}, {-12.203630565631187`, 
            12.722208074806623`}, {-11.439782306840044`, 
            12.722208074806623`}, {-11.821706436235615`, 
            13.383718163019092`}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 33\""}, {
              RowBox[{
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CirclePlus]", "x3"}], "\[Equal]", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x3", "\[CirclePlus]", "x1"}], ")"}], 
                  "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 33", CirclePlus[
              CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
            CirclePlus[
              CirclePlus[$CellContext`x3, $CellContext`x1], 
              CirclePlus[$CellContext`x1, $CellContext`x2]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-8.507186386384035, 12.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 19\""}, {
              RowBox[{
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CirclePlus]", "x3"}], "\[Equal]", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x3", "\[CirclePlus]", "x1"}], ")"}], 
                  "\[CirclePlus]", "x2"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 19", CirclePlus[
              CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
            CirclePlus[
              
              CirclePlus[$CellContext`x3, $CellContext`x1], \
$CellContext`x2]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-7.50718638651, 
            11.383718163019092`}, {-7.889110515905571, 
            10.722208074806623`}, {-7.125262257114429, 
            10.722208074806623`}, {-7.50718638651, 11.383718163019092`}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 34\""}, {
              RowBox[{
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}], 
                  "\[CirclePlus]", "x3"}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x3"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 34", CirclePlus[
              CirclePlus[$CellContext`x1, $CellContext`x2], $CellContext`x3] == 
            CirclePlus[$CellContext`x1, 
              CirclePlus[$CellContext`x2, $CellContext`x3]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-3.5091083450835185, 10.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 20\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    OverscriptBox[
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], "_"]}], ")"}]}], 
                "\[Equal]", 
                RowBox[{"x2", "\[CirclePlus]", 
                  OverscriptBox["x2", "_"]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 20", CirclePlus[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               OverBar[
                CirclePlus[$CellContext`x1, $CellContext`x2]]]] == 
            CirclePlus[$CellContext`x2, 
              OverBar[$CellContext`x2]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-3.5091083468572606`, 
            9.383718163019092}, {-3.891032476252832, 
            8.722208074806623}, {-3.1271842174616893`, 
            8.722208074806623}, {-3.5091083468572606`, 9.383718163019092}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 35\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    OverscriptBox[
                    RowBox[{
                    OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], "_"]}],
                     ")"}]}], "\[Equal]", 
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    OverscriptBox["x2", "_"]}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 35", CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               OverBar[
                CirclePlus[
                 OverBar[$CellContext`x1], $CellContext`x2]]]] == 
            CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               OverBar[$CellContext`x2]]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-1.5091083460706898, 8.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 21\""}, {
              RowBox[{
                RowBox[{"x1", "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", 
                    OverscriptBox[
                    RowBox[{
                    OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], "_"]}],
                     ")"}]}], "\[Equal]", "x1"}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 21", CircleTimes[$CellContext`x1, 
              CirclePlus[$CellContext`x2, 
               OverBar[
                CirclePlus[
                 
                 OverBar[$CellContext`x1], $CellContext`x2]]]] == \
$CellContext`x1}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-1.5091083466067232`, 
            7.383718163019091}, {-1.8910324760022945`, 
            6.722208074806623}, {-1.127184217211152, 
            6.722208074806623}, {-1.5091083466067232`, 7.383718163019091}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 36\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  RowBox[{"x2", "\[CircleTimes]", 
                    OverscriptBox[
                    RowBox[{
                    OverscriptBox["x2", "_"], "\[CirclePlus]", "x1"}], 
                    "_"]}]}], "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", "x2"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 36", CirclePlus[$CellContext`x1, 
              CircleTimes[$CellContext`x2, 
               OverBar[
                CirclePlus[
                 OverBar[$CellContext`x2], $CellContext`x1]]]] == 
            CirclePlus[$CellContext`x1, $CellContext`x2]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{-0.6001150162829845, 6.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 22\""}, {
              RowBox[{
                RowBox[{"x1", "\[CirclePlus]", 
                  OverscriptBox[
                   RowBox[{
                    OverscriptBox["x2", "_"], "\[CirclePlus]", "x1"}], "_"]}],
                 "\[Equal]", 
                RowBox[{"x1", "\[CirclePlus]", "x2"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 22", CirclePlus[$CellContext`x1, 
              OverBar[
               CirclePlus[
                OverBar[$CellContext`x2], $CellContext`x1]]] == 
            CirclePlus[$CellContext`x1, $CellContext`x2]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{-0.6001150161843611, 
            5.383718163019091}, {-0.9820391455799324, 
            4.722208074806623}, {-0.21819088678878984`, 
            4.722208074806623}, {-0.6001150161843611, 5.383718163019091}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 37\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CircleTimes]", 
                  OverscriptBox[
                   RowBox[{
                    OverscriptBox["x2", "_"], "\[CirclePlus]", "x1"}], "_"]}],
                 "\[Equal]", 
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x1", "\[CirclePlus]", "x2"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 37", CircleTimes[
              OverBar[$CellContext`x1], 
              OverBar[
               CirclePlus[
                OverBar[$CellContext`x2], $CellContext`x1]]] == CircleTimes[
              OverBar[$CellContext`x1], 
              CirclePlus[$CellContext`x1, $CellContext`x2]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{0.7904976462449156, 4.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 23\""}, {
              RowBox[{
                OverscriptBox[
                 RowBox[{
                   OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], "_"], 
                "\[Equal]", 
                RowBox[{
                  OverscriptBox["x2", "_"], "\[CircleTimes]", 
                  RowBox[{"(", 
                    RowBox[{"x2", "\[CirclePlus]", "x1"}], ")"}]}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 23", OverBar[
              CirclePlus[
               OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
              OverBar[$CellContext`x2], 
              CirclePlus[$CellContext`x2, $CellContext`x1]]}], "Tooltip"]& ], 
        
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{0.7904976462669708, 3.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 24\""}, {
              RowBox[{
                OverscriptBox[
                 RowBox[{
                   OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], "_"], 
                "\[Equal]", 
                RowBox[{
                  OverscriptBox["x2", "_"], "\[CircleTimes]", "x1"}]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 24", OverBar[
              CirclePlus[
               OverBar[$CellContext`x1], $CellContext`x2]] == CircleTimes[
              OverBar[$CellContext`x2], $CellContext`x1]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{7.490891662735066, 2.383718163019091}, {
            7.108967533339495, 1.7222080748066235`}, {7.872815792130638, 
            1.7222080748066235`}, {7.490891662735066, 2.383718163019091}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 38\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CirclePlus]", "x2"}], 
                "\[Equal]", 
                OverscriptBox[
                 RowBox[{
                   OverscriptBox["x2", "_"], "\[CircleTimes]", "x1"}], 
                 "_"]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 38", CirclePlus[
              OverBar[$CellContext`x1], $CellContext`x2] == OverBar[
              CircleTimes[
               OverBar[$CellContext`x2], $CellContext`x1]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[47, 51], 0.9215686274509803], 
            NCache[
             Rational[98, 255], 0.3843137254901961], 
            NCache[
             Rational[53, 255], 0.20784313725490197`]], EdgeForm[None], 
           PolygonBox[{{9.490891663575752, 1.383718163019091}, {
            9.10896753418018, 0.7222080748066235}, {9.872815792971323, 
            0.7222080748066235}, {9.490891663575752, 1.383718163019091}}]},
          TagBox[
           GridBox[{{"\"Critical Pair Lemma 39\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["x1", "_"], "\[CirclePlus]", 
                  OverscriptBox["x2", "_"]}], "\[Equal]", 
                OverscriptBox[
                 RowBox[{"x2", "\[CircleTimes]", "x1"}], "_"]}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Critical Pair Lemma 39", CirclePlus[
              OverBar[$CellContext`x1], 
              OverBar[$CellContext`x2]] == OverBar[
              CircleTimes[$CellContext`x2, $CellContext`x1]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[15, 17], 0.8823529411764706], 
            NCache[
             Rational[52, 85], 0.611764705882353], 
            NCache[
             Rational[12, 85], 0.1411764705882353]], EdgeForm[None], 
           DiskBox[{10.49089166369589, 1.}, 0.3417206901942212]},
          TagBox[
           GridBox[{{"\"Substitution Lemma 25\""}, {
              RowBox[{
                RowBox[{
                  OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
                  OverscriptBox["\[FormalB]", "_"]}], "\[Equal]", 
                OverscriptBox[
                 RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalA]"}], 
                 "_"]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Substitution Lemma 25", CirclePlus[
              OverBar[\[FormalA]], 
              OverBar[\[FormalB]]] == OverBar[
              CircleTimes[\[FormalB], \[FormalA]]]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            NCache[
             Rational[13, 15], 0.8666666666666667], 
            NCache[
             Rational[1, 15], 0.06666666666666667], 0], EdgeForm[None], 
           RectangleBox[{9.698660851297982, -0.30151827615494164}, \
{10.301697403607866, 0.30151827615494164}]},
          TagBox[
           
           GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
          Column[{"Conclusion 1", True}], "Tooltip"]& ]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8008933028235073`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"99a0660b-9226-43a7-ae26-c1918e838abb"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.800893372439539*^9, 
  3.8008934136257257`*^9},ExpressionUUID->"b0eca36d-30c9-4077-b6d3-\
3ea207bbba66"],

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[ForAll]", 
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
    RowBox[{
     OverscriptBox[
      RowBox[{"(", 
       RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], ")"}], "_"], 
     "\[Equal]", 
     RowBox[{"(", 
      RowBox[{
       OverscriptBox["\[FormalA]", "_"], "\[CirclePlus]", 
       OverscriptBox["\[FormalB]", "_"]}], ")"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], "\[Equal]", 
       RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalA]"}]}]}], ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], "\[Equal]", 
       RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalA]"}]}]}], ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", 
        RowBox[{"(", 
         RowBox[{"\[FormalB]", "\[CirclePlus]", 
          OverscriptBox["\[FormalB]", "_"]}], ")"}]}], "\[Equal]", 
       "\[FormalA]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}]], 
      RowBox[{
       RowBox[{"\[FormalA]", "\[CirclePlus]", 
        RowBox[{"\[FormalB]", "\[CircleTimes]", 
         OverscriptBox["\[FormalB]", "_"]}]}], "\[Equal]", "\[FormalA]"}]}], 
     ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
      
      RowBox[{
       RowBox[{"\[FormalA]", "\[CircleTimes]", 
        RowBox[{"(", 
         RowBox[{"\[FormalB]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}], 
       "\[Equal]", 
       RowBox[{
        RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalB]"}], 
        "\[CirclePlus]", 
        RowBox[{"\[FormalA]", "\[CircleTimes]", "\[FormalC]"}]}]}]}], ",", 
     RowBox[{
      SubscriptBox["\[ForAll]", 
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]], 
      
      RowBox[{
       RowBox[{"\[FormalA]", "\[CirclePlus]", 
        RowBox[{"\[FormalB]", "\[CircleTimes]", "\[FormalC]"}]}], "\[Equal]", 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalB]"}], ")"}], 
        "\[CircleTimes]", 
        RowBox[{"(", 
         RowBox[{"\[FormalA]", "\[CirclePlus]", "\[FormalC]"}], ")"}]}]}]}]}],
     "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->\
"dea9b9aa-31e6-449b-b5ac-3dcfc6f0fe52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ForAll", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"add", "[", 
       RowBox[{
        RowBox[{"mult", "[", 
         RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}], "\[Equal]", 
      "even"}]}], "]"}], ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ForAll", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"mult", "[", 
         RowBox[{"odd", ",", "x"}], "]"}], "\[Equal]", "x"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ForAll", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"add", "[", 
         RowBox[{"x", ",", "odd"}], "]"}], "\[Equal]", "even"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], "]"}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"fc6830c0-868e-40f5-afb7-b6faf7e3f7bf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProofObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {1., 0.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 1.}, {1., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{"x1", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", $CellContext`even == \
$CellContext`add[$CellContext`x1, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}]}]}},
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Hypothesis 1", $CellContext`even == $CellContext`add[
                    $CellContext`mult[$CellContext`odd, $CellContext`x], \
$CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.}, 0.04223904260875941], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}], 
                    "\[Equal]", "even"}]}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Directive[
                Opacity[0.7], 
                Hue[0.6, 0.7, 0.5]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{0., 1.}, {1., 0.}}]}, {
                Arrowheads[{{0.1, 0.8, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 
                    0}}}, {{{-0.18091062394603785`, -8.881784197001252*^-16}, \
{-0.9077234401349075, 
                    0.22712984822934246`}, {-0.8168768971332212, \
-8.881784197001252*^-16}}, {{-1., -0.31249915682967977`}, \
{-0.8749949409780782, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                
                ArrowBox[{{1., 1.}, {1., 0.}}]}}, {
               Directive[
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.7]]]], 
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798]], 
               TagBox[
                TooltipBox[
                 DiskBox[{0., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Axiom 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{"x1", ",", "odd"}], "]"}]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 
                 Column[{
                  "Axiom 1", $CellContext`even == \
$CellContext`add[$CellContext`x1, $CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 1.}, 0.04223904260875941], 
                 TagBox[
                  GridBox[{{"\"Hypothesis 1\""}, {
                    RowBox[{"even", "\[Equal]", 
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}]}]}},
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Hypothesis 1", $CellContext`even == $CellContext`add[
                    $CellContext`mult[$CellContext`odd, $CellContext`x], \
$CellContext`odd]}], "Tooltip"]& ], 
               TagBox[
                TooltipBox[
                 DiskBox[{1., 0.}, 0.04223904260875941], 
                 TagBox[
                  
                  GridBox[{{"\"Conclusion 1\""}, {"True"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]], Annotation[#, 
                 Column[{"Conclusion 1", True}], "Tooltip"]& ]}}, {
             BaseStyle -> RGBColor[0.368417, 0.506779, 0.709798], FormatType -> 
              TraditionalForm, Frame -> True, FrameStyle -> Directive[
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
              ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
              Scaled[0.15]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"add", "[", 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"odd", ",", "x"}], "]"}], ",", "odd"}], "]"}], 
                    "\[Equal]", "even"}]}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"mult", "[", 
                    RowBox[{"odd", ",", "x"}], "]"}], "\[Equal]", "x"}]}], 
                    "&&", 
                    RowBox[{
                    SubscriptBox["\[ForAll]", "x"], 
                    RowBox[{
                    RowBox[{"add", "[", 
                    RowBox[{"x", ",", "odd"}], "]"}], "\[Equal]", 
                    "even"}]}]}], Short[#, 1]& ], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProofObject["EquationalLogic", 
   ForAll[$CellContext`x, $CellContext`add[
      $CellContext`mult[$CellContext`odd, $CellContext`x], $CellContext`odd] == \
$CellContext`even], 
   And[
    ForAll[$CellContext`x, $CellContext`mult[$CellContext`odd, \
$CellContext`x] == $CellContext`x], 
    ForAll[$CellContext`x, $CellContext`add[$CellContext`x, $CellContext`odd] == \
$CellContext`even]], {{"Axiom", 1} -> 
    Association[
     "Statement" -> $CellContext`even == $CellContext`add[$CellContext`x1, \
$CellContext`odd], "Proof" -> Association[]], {"Hypothesis", 1} -> 
    Association["Statement" -> $CellContext`even == $CellContext`add[
         $CellContext`mult[$CellContext`odd, $CellContext`x], \
$CellContext`odd], "Proof" -> Association[]], {"Conclusion", 1} -> 
    Association[
     "Statement" -> True, "Proof" -> 
      Association[
       "Input" -> {"Hypothesis", 1}, "Position" -> 2, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`add[
           Pattern[$CellContext`x1, 
            Blank[]], $CellContext`odd] -> $CellContext`even), 
        "OutputExpression" -> True]]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.800894022289899*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"d9e26b89-ad10-441d-b6f9-c0b9e3c2d0ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"a", "\[Rule]", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.8008940820495453`*^9, 3.800894088989492*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"32ce0eed-16e4-4e56-ae3f-698f742c27f9"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`a, $CellContext`b}, {{{1, 2}}, Null}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1., 0.}, {0., 1.2246467991473532`*^-16}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{1, 2}, 0.01273]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.01273], DiskBox[2, 0.01273]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8008940892644176`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"0c8a0fb5-1391-4be6-bcad-bc67f6114f49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"SetProperty", "[", 
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"DirectedEdge", "[", 
         RowBox[{"a", ",", " ", "b"}], "]"}], "}"}]}], "]"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[35]:=",ExpressionUUID->"b2487858-740e-4c28-95e2-3115cb312305"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
    ArrowBox[{{1., 0.}, {0., 1.2246467991473532`*^-16}}, 0.01273]}, 
   {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
    0.7]}], {DiskBox[{1., 0.}, 0.01273], 
     InsetBox["a", Offset[{2, 2}, {1.01273, 0.01273}], ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{0., 1.2246467991473532*^-16}, 0.01273], 
     InsetBox["b", Offset[{2, 2}, {0.01273, 0.012730000000000123}], 
      ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}}},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.800894100171485*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"73488c5d-d423-45e2-b74f-ad1d63cb3b28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"DirectedEdge", "[", 
     RowBox[{"a", ",", " ", "b"}], "]"}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800894188860084*^9, 3.800894201829008*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"aeb01641-a1aa-4220-a250-9634a909ddbd"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`a, $CellContext`b}, {{{1, 2}}, Null}, {
      PlotRange -> All, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{1., 0.}, {0., 1.2246467991473532`*^-16}}, 0.01273]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.01273], 
         InsetBox["a", Offset[{2, 2}, {1.01273, 0.01273}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.2246467991473532*^-16}, 0.01273], 
         InsetBox["b", Offset[{2, 2}, {0.01273, 0.012730000000000123}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.800894202179648*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"45765b29-da21-4897-9466-40231cadba3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"DirectedEdge", "[", 
    RowBox[{"a", ",", " ", "b"}], "]"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800894250827602*^9, 3.8008942594453487`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"10924a33-64c6-4380-8e1f-bc79e6196bd9"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`a, $CellContext`b}, {{{1, 2}}, Null}, {
      PlotRange -> All, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{1., 0.}, {0., 1.2246467991473532`*^-16}}, 0.01273]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.01273], 
         InsetBox["a", Offset[{2, 2}, {1.01273, 0.01273}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.2246467991473532*^-16}, 0.01273], 
         InsetBox["b", Offset[{2, 2}, {0.01273, 0.012730000000000123}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.8008942597026854`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"ae17b365-00c9-4fb2-ad23-e2eae074e06e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "b"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8008942654913263`*^9, 3.8008942661963797`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"fb783c5a-05f7-4993-b9aa-d50d6f5c71d7"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`a, $CellContext`b}, {{{1, 2}}, Null}, {
      PlotRange -> All, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{1., 0.}, {0., 1.2246467991473532`*^-16}}, 0.01273]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.01273], 
         InsetBox["a", Offset[{2, 2}, {1.01273, 0.01273}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.2246467991473532*^-16}, 0.01273], 
         InsetBox["b", Offset[{2, 2}, {0.01273, 0.012730000000000123}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.8008942669920053`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"4b91d355-44e2-46bf-9bea-dd9afd6eabc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"odd", "\[Rule]", "even"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800894270641836*^9, 3.800894274069996*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"b5d13f67-63aa-4f45-900a-15db1a97252e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`odd, $CellContext`even}, {{{1, 2}}, Null}, {
      PlotRange -> All, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{1., 0.}, {0., 1.2246467991473532`*^-16}}, 0.01273]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.01273], 
         InsetBox["odd", Offset[{2, 2}, {1.01273, 0.01273}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.2246467991473532*^-16}, 0.01273], 
         InsetBox["even", Offset[{2, 2}, {0.01273, 0.012730000000000123}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.8008942742904882`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"38feefde-eebd-4714-adfd-73d9d28efd3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"odd", "\[Rule]", "even"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even", "\[Rule]", "odd"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even", "\[Rule]", "even"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800894280151163*^9, 3.800894296993482*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"bd8d1a31-a0c1-43b4-bf8f-32cfda02a190"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`odd, $CellContext`even}, {{{1, 2}, {2, 1}, {2, 2}}, 
       Null}, {PlotRange -> All, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[BezierCurveBox[{{1., 0.}, {0., -0.32888149436623243`}, {-1., 
         0.}}], 0.02261146496815286], 
        ArrowBox[BezierCurveBox[{{-1., 0.}, {0., 0.32888149436623243`}, {1., 
         0.}}], 0.02261146496815286], 
        ArrowBox[BezierCurveBox[{{-1., 
         0.}, {-1.176958510935521, -0.38156706477060465`}, \
{-1.5747154660107028`, -0.49435954969179285`}, {-1.8290567149596173`, \
-0.37644539214204636`}, {-1.8290567149596173`, 
         0.37644539214204614`}, {-1.5747154660107028`, 
         0.49435954969179274`}, {-1.1769585109355212`, 
         0.38156706477060465`}, {-1., 0.}},
         SplineDegree->7], 0.02261146496815286]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.02261146496815286], 
         InsetBox["odd", 
          Offset[{2, 2}, {1.0226114649681528, 0.02261146496815286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.02261146496815286], 
         InsetBox["even", 
          Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.8008943019287*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"62f58850-525f-4a3b-9c55-231127e551ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"odd1", "\[Rule]", "even1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "odd2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "even2"}]}], "\[IndentingNewLine]", "}"}], 
   ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800894384699999*^9, 3.800894400134808*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"03bf80ba-5c77-4e8a-855a-cb1519861d7f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`odd1, $CellContext`even1, $CellContext`odd2, \
$CellContext`even2}, {{{1, 2}, {2, 3}, {2, 4}}, Null}, {
      PlotRange -> All, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{{0., 0.}, {0.7745966692414834, 0.7745966692414834}}, {{
         0.7745966692414834, 0.7745966692414834}, {0.7745966692414834, 
         0.}}, {{0.7745966692414834, 0.7745966692414834}, {
         1.5491933384829668`, 0.}}}, 0.018845521490452433`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.018845521490452433], 
         InsetBox["odd1", 
          Offset[{2, 2}, {0.018845521490452433, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7745966692414834, 0.7745966692414834}, 
          0.018845521490452433], 
         InsetBox["even1", 
          Offset[{2, 2}, {0.7934421907319358, 0.7934421907319358}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7745966692414834, 0.}, 0.018845521490452433], 
         InsetBox["odd2", 
          Offset[{2, 2}, {0.7934421907319358, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5491933384829668, 0.}, 0.018845521490452433], 
         InsetBox["even2", 
          Offset[{2, 2}, {1.5680388599734192, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.800894400544381*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"283c0476-c981-44ea-af60-4d41ad921925"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"SetProperty", "[", 
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "odd1", ",", " ", "even1", ",", " ", "odd2", ",", " ", "even2"}], 
        "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"DirectedEdge", "[", 
          RowBox[{"odd1", ",", " ", "even1"}], "]"}], ",", " ", 
         RowBox[{"DirectedEdge", "[", 
          RowBox[{"even1", ",", " ", "odd2"}], "]"}], ",", " ", 
         RowBox[{"DirectedEdge", "[", 
          RowBox[{"even1", ",", " ", "even2"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
         RowBox[{"VertexLabels", " ", "->", " ", 
          RowBox[{"{", "\"\<Name\>\"", "}"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"EdgeLabels", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{"\"\<Name\>\"", ",", 
        FractionBox["1.`", "GoldenRatio"]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[42]:=",ExpressionUUID->"3356939c-e337-46a2-8fb5-f599e26a3694"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
    Medium], {
     ArrowBox[{{0., 0.}, {0.7745966692414834, 0.7745966692414834}}, 
      0.018845521490452433`], InsetBox[
      RowBox[{"odd1", "\[DirectedEdge]", "even1"}], 
      Offset[{0, 2}, {0.47872706916369695, 0.47872706916369695}], 
      ImageScaled[{0.5, 0}],
      BaseStyle->"Graphics"]}, {
     ArrowBox[{{0.7745966692414834, 0.7745966692414834}, {0.7745966692414834, 
      0.}}, 0.018845521490452433`], InsetBox[
      RowBox[{"even1", "\[DirectedEdge]", "odd2"}], 
      Offset[{0, 2}, {0.7745966692414834, 0.29586960007778645}], ImageScaled[{0.5, 0}],
      BaseStyle->"Graphics"]}, {
     ArrowBox[{{0.7745966692414834, 0.7745966692414834}, {1.5491933384829668`,
       0.}}, 0.018845521490452433`], InsetBox[
      RowBox[{"even1", "\[DirectedEdge]", "even2"}], 
      Offset[{0, 2}, {1.2533237384051803, 0.29586960007778645}], ImageScaled[{0.5, 0}],
      BaseStyle->"Graphics"]}}, 
   {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
    0.7]}], {DiskBox[{0., 0.}, 0.018845521490452433], 
     InsetBox["odd1", 
      Offset[{2, 2}, {0.018845521490452433, 0.018845521490452433}], 
      ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{0.7745966692414834, 0.7745966692414834}, 0.018845521490452433], 
     InsetBox["even1", 
      Offset[{2, 2}, {0.7934421907319358, 0.7934421907319358}], ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{0.7745966692414834, 0.}, 0.018845521490452433], 
     InsetBox["odd2", 
      Offset[{2, 2}, {0.7934421907319358, 0.018845521490452433}], 
      ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{1.5491933384829668, 0.}, 0.018845521490452433], 
     InsetBox["even2", 
      Offset[{2, 2}, {1.5680388599734192, 0.018845521490452433}], 
      ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}}},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.8008945500378532`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"251a9d16-a749-4be8-9073-162e230baae6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"odd1", "\[Rule]", "even1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "odd2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "even2"}]}], "\[IndentingNewLine]", "}"}], 
   ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",ExpressionUUID->\
"4dd76600-4574-46a3-a6d6-9eff25ad2054"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"odd", "\[Rule]", "even"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even", "\[Rule]", "odd"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even", "\[Rule]", "even"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"up", ",", "down", ",", "down"}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.80089445626862*^9, 3.800894467058403*^9}, {
  3.800894515299638*^9, 3.800894536933071*^9}, {3.80089456697042*^9, 
  3.800894601108527*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"3718787f-0495-4d6e-8c5d-061c2c068382"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"odd", "\[Rule]", "even"}], ",", 
     RowBox[{"even", "\[Rule]", "odd"}], ",", 
     RowBox[{"even", "\[Rule]", "even"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"up", ",", "down", ",", "down"}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\<\"Name\"\>"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{3.800894567773827*^9, 3.8008946014570436`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"9d104364-2ee0-42a9-aabf-44bac290ab9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"odd1", ",", " ", "even1", ",", " ", "odd2", ",", " ", "even2"}], 
    "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectedEdge", "[", 
      RowBox[{"odd1", ",", " ", "even1"}], "]"}], ",", " ", 
     RowBox[{"DirectedEdge", "[", 
      RowBox[{"even1", ",", " ", "odd2"}], "]"}], ",", " ", 
     RowBox[{"DirectedEdge", "[", 
      RowBox[{"even1", ",", " ", "even2"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
   RowBox[{"VertexLabels", " ", "->", " ", 
    RowBox[{"{", "\"\<Name\>\"", "}"}]}], ",", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"\"\<Name\>\"", ",", 
      FractionBox["1.`", "GoldenRatio"]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800894624520032*^9, 3.8008946337691717`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"ccc489d8-a409-441e-9a9d-a16884c2754a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`odd1, $CellContext`even1, $CellContext`odd2, \
$CellContext`even2}, {{{1, 2}, {2, 3}, {2, 4}}, Null}, {EdgeLabels -> {
         Placed["Name", 0.6180339887498948]}, PlotRange -> All, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{0., 0.}, {0.7745966692414834, 0.7745966692414834}}, 
          0.018845521490452433`], InsetBox[
          RowBox[{"odd1", "\[DirectedEdge]", "even1"}], 
          Offset[{0, 2}, {0.47872706916369695, 0.47872706916369695}], 
          ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7745966692414834, 0.7745966692414834}, {
          0.7745966692414834, 0.}}, 0.018845521490452433`], InsetBox[
          RowBox[{"even1", "\[DirectedEdge]", "odd2"}], 
          Offset[{0, 2}, {0.7745966692414834, 0.29586960007778645}], 
          ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7745966692414834, 0.7745966692414834}, {
          1.5491933384829668`, 0.}}, 0.018845521490452433`], InsetBox[
          RowBox[{"even1", "\[DirectedEdge]", "even2"}], 
          Offset[{0, 2}, {1.2533237384051803, 0.29586960007778645}], 
          ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.018845521490452433], 
         InsetBox["odd1", 
          Offset[{2, 2}, {0.018845521490452433, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7745966692414834, 0.7745966692414834}, 
          0.018845521490452433], 
         InsetBox["even1", 
          Offset[{2, 2}, {0.7934421907319358, 0.7934421907319358}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7745966692414834, 0.}, 0.018845521490452433], 
         InsetBox["odd2", 
          Offset[{2, 2}, {0.7934421907319358, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5491933384829668, 0.}, 0.018845521490452433], 
         InsetBox["even2", 
          Offset[{2, 2}, {1.5680388599734192, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.800894635774198*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"f599f804-7805-4c9d-9f46-ee0a3dc119e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"odd", "\[Rule]", "even"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even", "\[Rule]", "odd"}]}], "\[IndentingNewLine]", "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"up", ",", "down"}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.80089464894247*^9, 3.800894652037614*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"f0215e60-32c7-43a4-9f03-4f1070a20908"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"odd", "\[Rule]", "even"}], ",", 
     RowBox[{"even", "\[Rule]", "odd"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"up", ",", "down"}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\<\"Name\"\>"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{3.800894652288899*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"d69fe6ae-613e-4f79-99ee-1bd2547c1937"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"odd", "\[Rule]", "even"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even", "\[Rule]", "odd"}]}], "\[IndentingNewLine]", "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"up", ",", "down"}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8008946612004433`*^9, 3.800894661365541*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"1818d86c-f610-415b-ac2c-7e7b03c0d40c"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"odd", "\[Rule]", "even"}], ",", 
     RowBox[{"even", "\[Rule]", "odd"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"up", ",", "down"}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\<\"Name\"\>"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8008946616271267`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"d3c76bd1-8fc7-4104-8d05-9dfb2f0bf9a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"odd1", "\[Rule]", "even1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "odd2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "even2"}]}], "\[IndentingNewLine]", "}"}], 
   ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"\"\<Name\>\"", ",", 
      FractionBox["1.`", "GoldenRatio"]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8008946957404203`*^9, 3.800894699236251*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"ce676654-5ab9-4141-b2ae-585bfd80cd6f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`odd1, $CellContext`even1, $CellContext`odd2, \
$CellContext`even2}, {{{1, 2}, {2, 3}, {2, 4}}, Null}, {EdgeLabels -> {
         Placed["Name", 0.6180339887498948]}, PlotRange -> All, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{0., 0.}, {0.7745966692414834, 0.7745966692414834}}, 
          0.018845521490452433`], InsetBox[
          RowBox[{"odd1", "\[DirectedEdge]", "even1"}], 
          Offset[{0, 2}, {0.47872706916369695, 0.47872706916369695}], 
          ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7745966692414834, 0.7745966692414834}, {
          0.7745966692414834, 0.}}, 0.018845521490452433`], InsetBox[
          RowBox[{"even1", "\[DirectedEdge]", "odd2"}], 
          Offset[{0, 2}, {0.7745966692414834, 0.29586960007778645}], 
          ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7745966692414834, 0.7745966692414834}, {
          1.5491933384829668`, 0.}}, 0.018845521490452433`], InsetBox[
          RowBox[{"even1", "\[DirectedEdge]", "even2"}], 
          Offset[{0, 2}, {1.2533237384051803, 0.29586960007778645}], 
          ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.018845521490452433], 
         InsetBox["odd1", 
          Offset[{2, 2}, {0.018845521490452433, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7745966692414834, 0.7745966692414834}, 
          0.018845521490452433], 
         InsetBox["even1", 
          Offset[{2, 2}, {0.7934421907319358, 0.7934421907319358}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7745966692414834, 0.}, 0.018845521490452433], 
         InsetBox["odd2", 
          Offset[{2, 2}, {0.7934421907319358, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5491933384829668, 0.}, 0.018845521490452433], 
         InsetBox["even2", 
          Offset[{2, 2}, {1.5680388599734192, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.8008947045425253`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"330a1abe-0601-4d04-8b6f-ece9115e2afa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"odd1", "\[Rule]", "even1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "odd2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "even2"}]}], "\[IndentingNewLine]", "}"}], 
   ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800894714966111*^9, 3.8008947171233797`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"24eb4639-3eb7-4dad-93dc-3b95a35c72b2"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`odd1, $CellContext`even1, $CellContext`odd2, \
$CellContext`even2}, {{{1, 2}, {2, 3}, {2, 4}}, Null}, {
      EdgeLabels -> {$CellContext`c}, PlotRange -> All, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{0., 0.}, {0.7745966692414834, 0.7745966692414834}}, 
          0.018845521490452433`], 
         InsetBox["c", {0.3872983346207417, 0.3872983346207417}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7745966692414834, 0.7745966692414834}, {
          0.7745966692414834, 0.}}, 0.018845521490452433`], 
         InsetBox["c", {0.7745966692414834, 0.3872983346207417}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7745966692414834, 0.7745966692414834}, {
          1.5491933384829668`, 0.}}, 0.018845521490452433`], 
         InsetBox["c", {1.161895003862225, 0.3872983346207417}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.018845521490452433], 
         InsetBox["odd1", 
          Offset[{2, 2}, {0.018845521490452433, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7745966692414834, 0.7745966692414834}, 
          0.018845521490452433], 
         InsetBox["even1", 
          Offset[{2, 2}, {0.7934421907319358, 0.7934421907319358}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7745966692414834, 0.}, 0.018845521490452433], 
         InsetBox["odd2", 
          Offset[{2, 2}, {0.7934421907319358, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5491933384829668, 0.}, 0.018845521490452433], 
         InsetBox["even2", 
          Offset[{2, 2}, {1.5680388599734192, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.800894717445509*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"692d954a-971f-46ce-9e86-9fb4295040d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"arch", "[", "1", "]"}], ":=", "2"}]], "Input",
 CellChangeTimes->{{3.80089475831923*^9, 3.8008947630903797`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"0491c92e-3b9c-4026-aee3-917738759c7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"arch", "[", "4", "]"}], ":=", "4"}]], "Input",
 CellChangeTimes->{{3.8008947645066032`*^9, 3.800894767494361*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"fe0b665b-c15f-40c4-990b-033857d305b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arch", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.800894768570882*^9, 3.800894770544435*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"b01da97d-3fc5-418a-9177-51af7c2b5d29"],

Cell[BoxData[
 RowBox[{"arch", "[", "2", "]"}]], "Output",
 CellChangeTimes->{3.800894770877866*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"82069fe7-fff5-40f0-ac88-87e259e918a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arch", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.800894771527807*^9, 3.800894772798155*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"4ab6df1f-bfe9-4161-9c19-6ecb170c2d75"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.800894773069293*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"c5a810d8-9128-4152-8394-86b7016dde24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arch", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.80089477370362*^9, 3.800894775181163*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"71be89df-ac65-4a05-a823-cb8fa4beacae"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.800894775423339*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"ef3f6b8e-37de-4348-b274-798b372428a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"odd1", "\[Rule]", "even1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "odd2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "even2"}]}], "\[IndentingNewLine]", "}"}], 
   ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"odd1", "\[Rule]", 
       RowBox[{"even1", "\[Rule]", "a"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"even1", "\[Rule]", 
       RowBox[{"odd2", "\[Rule]", "b"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"even1", "\[Rule]", 
       RowBox[{"even2", "\[Rule]", "c"}]}]}], "\[IndentingNewLine]", 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8008948466129723`*^9, 3.800894860831324*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"3447927e-54b9-44ca-ac0e-853cd304e5cb"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"odd1", "\[Rule]", "even1"}], ",", 
     RowBox[{"even1", "\[Rule]", "odd2"}], ",", 
     RowBox[{"even1", "\[Rule]", "even2"}]}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\<\"Name\"\>"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"odd1", "\[Rule]", 
       RowBox[{"even1", "\[Rule]", "a"}]}], ",", 
      RowBox[{"even1", "\[Rule]", 
       RowBox[{"odd2", "\[Rule]", "b"}]}], ",", 
      RowBox[{"even1", "\[Rule]", 
       RowBox[{"even2", "\[Rule]", "c"}]}]}], "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.800894861160532*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"8bbc9af5-3f0c-468d-84aa-3b991bee30b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompleteGraph", "[", 
  RowBox[{"5", ",", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "2"}], "\[Rule]", "\"\<hello\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"b204794a-d19b-4d23-82dd-3b699fccf43b"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5}, {Null, 
       SparseArray[
       Automatic, {5, 5}, 0, {
        1, {{0, 4, 8, 12, 16, 20}, {{2}, {3}, {4}, {5}, {1}, {3}, {4}, {5}, {
          1}, {2}, {4}, {5}, {1}, {2}, {3}, {5}, {1}, {2}, {3}, {4}}}, 
         Pattern}]}, {
      EdgeLabels -> {UndirectedEdge[1, 2] -> "hello"}, 
       GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[
        0.7], {LineBox[{{-0.9510565162951538, 
          0.30901699437494834`}, {-0.5877852522924727, -0.8090169943749468}}],
          InsetBox["\<\"hello\"\>", {-0.7694208842938133, -0.24999999999999922},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        LineBox[{{-0.9510565162951538, 0.30901699437494834`}, {
         0.5877852522924737, -0.8090169943749481}}], 
        LineBox[{{-0.9510565162951538, 0.30901699437494834`}, {
         0.9510565162951533, 0.30901699437494634`}}], 
        LineBox[{{-0.9510565162951538, 
         0.30901699437494834`}, {-7.044813998280222*^-16, 1.}}], 
        LineBox[{{-0.5877852522924727, -0.8090169943749468}, {
         0.5877852522924737, -0.8090169943749481}}], 
        LineBox[{{-0.5877852522924727, -0.8090169943749468}, {
         0.9510565162951533, 0.30901699437494634`}}], 
        LineBox[{{-0.5877852522924727, -0.8090169943749468}, \
{-7.044813998280222*^-16, 1.}}], 
        LineBox[{{0.5877852522924737, -0.8090169943749481}, {
         0.9510565162951533, 0.30901699437494634`}}], 
        LineBox[{{
         0.5877852522924737, -0.8090169943749481}, {-7.044813998280222*^-16, 
         1.}}], LineBox[{{0.9510565162951533, 
         0.30901699437494634`}, {-7.044813998280222*^-16, 1.}}]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        DiskBox[{-0.9510565162951538, 0.30901699437494834}, 
         0.021812234931106983], 
        DiskBox[{-0.5877852522924727, -0.8090169943749468}, 
         0.021812234931106983], 
        DiskBox[{0.5877852522924737, -0.8090169943749481}, 
         0.021812234931106983], 
        DiskBox[{0.9510565162951533, 0.30901699437494634}, 
         0.021812234931106983], 
        DiskBox[{-7.044813998280222*^-16, 1.}, 0.021812234931106983]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.800894870324319*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"7e920491-3e80-403a-b488-a856f23b4c84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"odd1", "\[Rule]", "even1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "odd2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even1", "\[Rule]", "even2"}]}], "\[IndentingNewLine]", "}"}], 
   ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"odd1", "\[Rule]", "even1"}], ")"}], "\[Rule]", "a"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"even1", "\[Rule]", "odd2"}], ")"}], "\[Rule]", "b"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"even1", "\[Rule]", "even2"}], ")"}], "\[Rule]", "c"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800894881278257*^9, 3.800894887749157*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"cee95195-5204-43a3-bee4-fee3fa62a229"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`odd1, $CellContext`even1, $CellContext`odd2, \
$CellContext`even2}, {{{1, 2}, {2, 3}, {2, 4}}, Null}, {
      EdgeLabels -> {
        DirectedEdge[$CellContext`even1, $CellContext`even2] -> \
$CellContext`c, 
         DirectedEdge[$CellContext`even1, $CellContext`odd2] -> \
$CellContext`b, 
         DirectedEdge[$CellContext`odd1, $CellContext`even1] -> \
$CellContext`a}, PlotRange -> All, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{0., 0.}, {0.7745966692414834, 0.7745966692414834}}, 
          0.018845521490452433`], 
         InsetBox["a", {0.3872983346207417, 0.3872983346207417}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7745966692414834, 0.7745966692414834}, {
          0.7745966692414834, 0.}}, 0.018845521490452433`], 
         InsetBox["b", {0.7745966692414834, 0.3872983346207417}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7745966692414834, 0.7745966692414834}, {
          1.5491933384829668`, 0.}}, 0.018845521490452433`], 
         InsetBox["c", {1.161895003862225, 0.3872983346207417}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.018845521490452433], 
         InsetBox["odd1", 
          Offset[{2, 2}, {0.018845521490452433, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7745966692414834, 0.7745966692414834}, 
          0.018845521490452433], 
         InsetBox["even1", 
          Offset[{2, 2}, {0.7934421907319358, 0.7934421907319358}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7745966692414834, 0.}, 0.018845521490452433], 
         InsetBox["odd2", 
          Offset[{2, 2}, {0.7934421907319358, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5491933384829668, 0.}, 0.018845521490452433], 
         InsetBox["even2", 
          Offset[{2, 2}, {1.5680388599734192, 0.018845521490452433}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.80089488798167*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"f0ba23b6-559d-4777-b66a-cace52d2177c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"init", "\[Rule]", "even"}], ",", "\[IndentingNewLine]", 
     RowBox[{"init", "\[Rule]", "odd"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even", "\[Rule]", "odd"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even", "\[Rule]", "even"}], ",", "\[IndentingNewLine]", 
     RowBox[{"odd", "\[Rule]", "even"}]}], "\[IndentingNewLine]", "}"}], ",", 
   
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800895860904441*^9, 3.800895930923028*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"dece66d3-e385-4bb8-8a2a-a0716ef7252c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`init, $CellContext`even, $CellContext`odd}, {{{1, 
       2}, {1, 3}, {2, 3}, {2, 2}, {3, 2}}, Null}, {
      PlotRange -> All, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0.4969222205531905, 0.}, {0.9999936672103749, 
         0.8642449493409465}}, 0.012729919383588072`], 
        ArrowBox[{{0.4969222205531905, 0.}, {0., 0.8677950326618153}}, 
         0.012729919383588072`], 
        ArrowBox[BezierCurveBox[{{0.9999936672103749, 0.8642449493409465}, {
         0.9819709232658247, 1.0737732662297435`}, {1.1265321208848136`, 
         1.2215408037144961`}, {1.266187244317279, 1.2335720698969428`}, {
         1.4532513716789468`, 0.9068946364562523}, {1.3721904280294188`, 
         0.7925380525551139}, {1.1715801242049422`, 0.7426512708309416}, {
         0.9999936672103749, 0.8642449493409465}},
         SplineDegree->7], 0.012729919383588072`], 
        ArrowBox[BezierCurveBox[{{0.9999936672103749, 0.8642449493409465}, {
         0.4994130552513483, 0.7015802851869208}, {0., 0.8677950326618153}}], 
         0.012729919383588072`], 
        ArrowBox[BezierCurveBox[{{0., 0.8677950326618153}, {
         0.5005806119590293, 1.0304596968158395`}, {0.9999936672103749, 
         0.8642449493409465}}], 0.012729919383588072`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0.4969222205531905, 0.}, 0.012729919383588072], 
         InsetBox["init", 
          Offset[{2, 2}, {0.5096521399367786, 0.012729919383588072}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999936672103749, 0.8642449493409465}, 
          0.012729919383588072], 
         InsetBox["even", 
          Offset[{2, 2}, {1.012723586593963, 0.8769748687245346}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.8677950326618153}, 0.012729919383588072], 
         InsetBox["odd", 
          Offset[{2, 2}, {0.012729919383588072, 0.8805249520454034}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.800895931245841*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"ccb21646-71bc-449f-b0c0-fd4028d206ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"even", "\[Rule]", "odd"}], ",", "\[IndentingNewLine]", 
     RowBox[{"even", "\[Rule]", "even"}], ",", "\[IndentingNewLine]", 
     RowBox[{"odd", "\[Rule]", "even"}]}], "\[IndentingNewLine]", "}"}], ",", 
   
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"EdgeLabels", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"even", "\[Rule]", "odd"}], ")"}], "\[Rule]", "down"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"even", "\[Rule]", "even"}], ")"}], "\[Rule]", "down"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"odd", "\[Rule]", "even"}], ")"}], "\[Rule]", "up"}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800895966237709*^9, 3.80089603483919*^9}, {
  3.800896092234329*^9, 3.8008961048476543`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"f75868a3-0b09-4088-acd4-678c334eb4e1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`even, $CellContext`odd}, {{{1, 2}, {1, 1}, {2, 1}}, 
       Null}, {EdgeLabels -> {
        DirectedEdge[$CellContext`odd, $CellContext`even] -> $CellContext`up, 
         DirectedEdge[$CellContext`even, $CellContext`odd] -> \
$CellContext`down, 
         DirectedEdge[$CellContext`even, $CellContext`even] -> \
$CellContext`down}, PlotRange -> All, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[BezierCurveBox[{{1., 0.}, {1.1769585109355207`, 
          0.3815670647706048}, {1.5747154660107021`, 0.49435954969179347`}, {
          1.8290567149596169`, 0.3764453921420472}, {
          1.8290567149596177`, -0.3764453921420453}, {
          1.5747154660107032`, -0.4943595496917922}, {
          1.1769585109355212`, -0.38156706477060415`}, {1., 0.}},
          SplineDegree->7], 0.02261146496815286], 
         InsetBox["down", {2., 5.728662814612146*^-16}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[BezierCurveBox[{{1., 0.}, {0., -0.32888149436623243`}, {-1.,
           0.}}], 0.02261146496815286], 
         InsetBox["down", {1.942890293094024*^-16, -0.14000000000000012}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[BezierCurveBox[{{-1., 0.}, {0., 0.32888149436623243`}, {1., 
          0.}}], 0.02261146496815286], 
         InsetBox["up", {-1.942890293094024*^-16, 0.14000000000000012}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{1., 0.}, 0.02261146496815286], 
         InsetBox["even", 
          Offset[{2, 2}, {1.0226114649681528, 0.02261146496815286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.02261146496815286], 
         InsetBox["odd", 
          Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRange->All]], "Output",
 CellChangeTimes->{3.800896105272176*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"26b0d115-5548-4503-aece-afdbdf5c534f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.800896204898732*^9},ExpressionUUID->"3c960ae8-68fe-4321-8906-\
97270e89ff71"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.800896251696097*^9, 
  3.800896253795669*^9}},ExpressionUUID->"709164c3-33a1-424a-a53f-\
c9908456939a"]
},
WindowSize->{Full, Full},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>2. Inherited,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"87589553-b391-4c1f-80a4-04ec2a9edbba"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 229, 4, 59, "Input",ExpressionUUID->"2ad7d572-b2e8-4440-bd21-8b4e94ff9ee1"],
Cell[CellGroupData[{
Cell[812, 28, 577, 14, 183, "Input",ExpressionUUID->"bf252074-2eea-4784-b202-61c38dc6faa6"],
Cell[1392, 44, 20809, 441, 118, "Output",ExpressionUUID->"a09f2f67-c3ee-4d5c-bd9c-d405bfcf6ea3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22238, 490, 1802, 48, 429, "Input",ExpressionUUID->"aa6277eb-e112-49e3-8a2a-917c90c04648"],
Cell[24043, 540, 1976, 32, 111, "Message",ExpressionUUID->"9c085e50-f0ae-4c62-b7cc-bce611cef50a"],
Cell[26022, 574, 1500, 43, 150, "Output",ExpressionUUID->"440e6863-1303-455c-bb19-54630ca43d3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27559, 622, 964, 26, 224, "Input",ExpressionUUID->"d7b7d037-113a-44de-bc34-d2bcccbe5572"],
Cell[28526, 650, 15893, 343, 118, "Output",ExpressionUUID->"029680df-4941-4cd2-8d40-526342a811c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44456, 998, 890, 23, 224, "Input",ExpressionUUID->"80c14812-5920-4de8-ad56-4b999982072d"],
Cell[45349, 1023, 52776, 1077, 140, "Output",ExpressionUUID->"bdb8649e-c187-4f86-8efe-649c71c967bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98162, 2105, 248, 5, 59, "Input",ExpressionUUID->"d7341ab6-ff3c-4f6b-846b-a41b5094111f"],
Cell[98413, 2112, 26061, 602, 823, "Output",ExpressionUUID->"7316973e-0f37-4a8c-a6c8-091895a79ff6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124511, 2719, 950, 25, 224, "Input",ExpressionUUID->"47c6a688-982e-4e8e-9f67-b4c2378ccfca"],
Cell[125464, 2746, 22586, 475, 140, "Output",ExpressionUUID->"e299d032-b4db-48b1-b239-1142f2552867"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148087, 3226, 340, 6, 183, "Input",ExpressionUUID->"dbb57e69-4cd6-4925-8855-81fc318bcb1b"],
Cell[148430, 3234, 448, 10, 45, "Message",ExpressionUUID->"400976e0-f0f3-47d3-a611-eff49498c64c"],
Cell[148881, 3246, 245, 5, 89, "Output",ExpressionUUID->"fd24f1b8-1425-4bf8-ab7b-c785e5668cd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149163, 3256, 515, 11, 183, "Input",ExpressionUUID->"4f27b978-15d4-4815-9cea-24aae4ebd2fc"],
Cell[149681, 3269, 4633, 94, 144, "Output",ExpressionUUID->"344b4de6-73ff-438a-8897-75cbfed7f0b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154351, 3368, 441, 9, 183, "Input",ExpressionUUID->"6bc6b5a5-4986-40e4-8cbe-6b5bbaae06f0"],
Cell[154795, 3379, 156, 2, 89, "Output",ExpressionUUID->"dc6e8d21-31b9-415f-a9d2-ddeb2522300c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154988, 3386, 515, 11, 183, "Input",ExpressionUUID->"9e0f2a27-efd5-42a6-926e-ad52b37ad799"],
Cell[155506, 3399, 4631, 94, 144, "Output",ExpressionUUID->"814f03f0-1fad-4025-b129-b97728956538"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160174, 3498, 707, 18, 183, "Input",ExpressionUUID->"6b1c57af-3576-4452-b9a5-05b685287fe8"],
Cell[160884, 3518, 883, 17, 50, "Message",ExpressionUUID->"8bca4b0f-616e-4505-b05d-6c6421c11148"],
Cell[161770, 3537, 596, 17, 93, "Output",ExpressionUUID->"666d30ee-cc89-4e6e-8cb9-92c75bba5536"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162403, 3559, 207, 3, 59, "Input",ExpressionUUID->"9c56cc67-cfb2-4d74-8de9-32bbb4f00cfd"],
Cell[162613, 3564, 802, 14, 254, "Output",ExpressionUUID->"4fabc360-e4db-412b-9139-48dbc3a77469"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163452, 3583, 233, 3, 59, "Input",ExpressionUUID->"9bf522e6-048d-420a-a729-33527cf38674"],
Cell[163688, 3588, 2364, 63, 148, "Output",ExpressionUUID->"e5df60a3-c43b-4918-8131-e882a02874e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166089, 3656, 270, 5, 59, "Input",ExpressionUUID->"a5f5ee77-66c4-47a7-9b76-9c01e4f93224"],
Cell[166362, 3663, 2459, 65, 148, "Output",ExpressionUUID->"a84a266d-6ecc-42d0-a34d-a168b887a0ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168858, 3733, 285, 5, 59, "Input",ExpressionUUID->"6c740af0-9f74-4354-9646-98bb96128002"],
Cell[169146, 3740, 384, 9, 45, "Message",ExpressionUUID->"5f0dd1d5-fef8-4ede-bb0c-a03ccb822ed1"],
Cell[169533, 3751, 2503, 66, 148, "Output",ExpressionUUID->"c6f050ff-a603-41ea-9a37-2af08f11b6ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172073, 3822, 415, 9, 142, "Input",ExpressionUUID->"7e3e4664-c1fb-43fc-8e5a-d88202384377"],
Cell[172491, 3833, 384, 9, 45, "Message",ExpressionUUID->"5649d2c8-87bb-4262-8f3d-36f75438d7a4"],
Cell[172878, 3844, 382, 9, 45, "Message",ExpressionUUID->"6a1f965d-d1a8-4522-aea6-0068db3c893d"],
Cell[173263, 3855, 381, 9, 45, "Message",ExpressionUUID->"80c2b719-62be-47c3-953e-1f68bd92712b"],
Cell[173647, 3866, 454, 10, 45, "Message",ExpressionUUID->"ac3520ba-0272-45f9-b230-7b6d5ac65733"],
Cell[174104, 3878, 3131, 84, 198, "Output",ExpressionUUID->"a3525355-512b-4961-a88e-7d40477e3227"]
}, Open  ]],
Cell[177250, 3965, 269, 4, 59, "Input",ExpressionUUID->"18c6a42d-d54b-497a-8dfe-4f631e1da8a6"],
Cell[177522, 3971, 2363, 63, 140, InheritFromParent,ExpressionUUID->"dc8c7d94-9de6-477a-9fbd-eac044f131b2"],
Cell[CellGroupData[{
Cell[179910, 4038, 278, 5, 59, "Input",ExpressionUUID->"16ec00ff-d282-427f-9fcd-3e789e38f0ab"],
Cell[180191, 4045, 421, 8, 131, "Output",ExpressionUUID->"df4b26ec-4949-4635-a55a-ad829e1368e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180649, 4058, 582, 14, 183, "Input",ExpressionUUID->"8d0721b3-8c55-4d83-8fad-695ec1e448ed"],
Cell[181234, 4074, 8676, 217, 884, "Output",ExpressionUUID->"0d8cd87b-56e4-4c1b-9fd4-4a4fb702c8f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189947, 4296, 233, 3, 59, "Input",ExpressionUUID->"043baa18-3a07-4756-a5e2-717393b1afd8"],
Cell[190183, 4301, 2362, 63, 148, "Output",ExpressionUUID->"8f2d300c-e8ec-4f65-b58e-f684acf97a8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192582, 4369, 3092, 83, 283, "Input",ExpressionUUID->"ebf4f7dd-b846-4734-925c-0b7a22a04e54"],
Cell[195677, 4454, 85910, 2086, 148, "Output",ExpressionUUID->"1d09eaa7-e356-46c0-b76f-28d29e481646"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281624, 6545, 88161, 2097, 118, "Input",ExpressionUUID->"d099c3e9-30a8-4f30-9a53-b123b0f9cf71"],
Cell[369788, 8644, 319469, 6915, 712, "Output",ExpressionUUID->"99a0660b-9226-43a7-ae26-c1918e838abb"]
}, Open  ]],
Cell[689272, 15562, 152, 3, 59, "Input",ExpressionUUID->"b0eca36d-30c9-4077-b6d3-3ea207bbba66"],
Cell[689427, 15567, 3002, 82, 283, "Input",ExpressionUUID->"dea9b9aa-31e6-449b-b5ac-3dcfc6f0fe52"],
Cell[CellGroupData[{
Cell[692454, 15653, 897, 25, 224, "Input",ExpressionUUID->"fc6830c0-868e-40f5-afb7-b6faf7e3f7bf"],
Cell[693354, 15680, 15894, 343, 140, "Output",ExpressionUUID->"d9e26b89-ad10-441d-b6f9-c0b9e3c2d0ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[709285, 16028, 234, 4, 59, "Input",ExpressionUUID->"32ce0eed-16e4-4e56-ae3f-698f742c27f9"],
Cell[709522, 16034, 882, 19, 102, "Output",ExpressionUUID->"0c8a0fb5-1391-4be6-bcad-bc67f6114f49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[710441, 16058, 575, 15, 101, "Input",ExpressionUUID->"b2487858-740e-4c28-95e2-3115cb312305"],
Cell[711019, 16075, 750, 16, 116, "Output",ExpressionUUID->"73488c5d-d423-45e2-b74f-ad1d63cb3b28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[711806, 16096, 493, 11, 59, "Input",ExpressionUUID->"aeb01641-a1aa-4220-a250-9634a909ddbd"],
Cell[712302, 16109, 1209, 25, 116, "Output",ExpressionUUID->"45765b29-da21-4897-9466-40231cadba3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713548, 16139, 400, 8, 59, "Input",ExpressionUUID->"10924a33-64c6-4380-8e1f-bc79e6196bd9"],
Cell[713951, 16149, 1211, 25, 116, "Output",ExpressionUUID->"ae17b365-00c9-4fb2-ad23-e2eae074e06e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715199, 16179, 362, 7, 59, "Input",ExpressionUUID->"fb783c5a-05f7-4993-b9aa-d50d6f5c71d7"],
Cell[715564, 16188, 1211, 25, 116, "Output",ExpressionUUID->"4b91d355-44e2-46bf-9bea-dd9afd6eabc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[716812, 16218, 363, 7, 59, "Input",ExpressionUUID->"b5d13f67-63aa-4f45-900a-15db1a97252e"],
Cell[717178, 16227, 1221, 25, 115, "Output",ExpressionUUID->"38feefde-eebd-4714-adfd-73d9d28efd3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[718436, 16257, 591, 11, 224, "Input",ExpressionUUID->"bd8d1a31-a0c1-43b4-bf8f-32cfda02a190"],
Cell[719030, 16270, 1885, 38, 315, "Output",ExpressionUUID->"62f58850-525f-4a3b-9c55-231127e551ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[720952, 16313, 601, 12, 224, "Input",ExpressionUUID->"03bf80ba-5c77-4e8a-855a-cb1519861d7f"],
Cell[721556, 16327, 2060, 43, 429, "Output",ExpressionUUID->"283c0476-c981-44ea-af60-4d41ad921925"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723653, 16375, 1198, 30, 228, "Input",ExpressionUUID->"3356939c-e337-46a2-8fb5-f599e26a3694"],
Cell[724854, 16407, 2100, 44, 429, "Output",ExpressionUUID->"251a9d16-a749-4be8-9073-162e230baae6"]
}, Open  ]],
Cell[726969, 16454, 513, 11, 224, "Input",ExpressionUUID->"4dd76600-4574-46a3-a6d6-9eff25ad2054"],
Cell[CellGroupData[{
Cell[727507, 16469, 763, 15, 224, "Input",ExpressionUUID->"3718787f-0495-4d6e-8c5d-061c2c068382"],
Cell[728273, 16486, 576, 13, 131, "Output",ExpressionUUID->"9d104364-2ee0-42a9-aabf-44bac290ab9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[728886, 16504, 1014, 23, 230, "Input",ExpressionUUID->"ccc489d8-a409-441e-9a9d-a16884c2754a"],
Cell[729903, 16529, 2840, 59, 429, "Output",ExpressionUUID->"f599f804-7805-4c9d-9f46-ee0a3dc119e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[732780, 16593, 586, 13, 183, "Input",ExpressionUUID->"f0215e60-32c7-43a4-9f03-4f1070a20908"],
Cell[733369, 16608, 491, 12, 89, "Output",ExpressionUUID->"d69fe6ae-613e-4f79-99ee-1bd2547c1937"]
}, Open  ]],
Cell[CellGroupData[{
Cell[733897, 16625, 539, 12, 183, "Input",ExpressionUUID->"1818d86c-f610-415b-ac2c-7e7b03c0d40c"],
Cell[734439, 16639, 443, 11, 89, "Output",ExpressionUUID->"d3c76bd1-8fc7-4104-8d05-9dfb2f0bf9a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[734919, 16655, 761, 16, 312, "Input",ExpressionUUID->"ce676654-5ab9-4141-b2ae-585bfd80cd6f"],
Cell[735683, 16673, 2842, 59, 429, "Output",ExpressionUUID->"330a1abe-0601-4d04-8b6f-ece9115e2afa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[738562, 16737, 713, 15, 224, "Input",ExpressionUUID->"24eb4639-3eb7-4dad-93dc-3b95a35c72b2"],
Cell[739278, 16754, 2577, 53, 429, "Output",ExpressionUUID->"692d954a-971f-46ce-9e86-9fb4295040d6"]
}, Open  ]],
Cell[741870, 16810, 227, 4, 59, "Input",ExpressionUUID->"0491c92e-3b9c-4026-aee3-917738759c7a"],
Cell[742100, 16816, 228, 4, 59, "Input",ExpressionUUID->"fe0b665b-c15f-40c4-990b-033857d305b5"],
Cell[CellGroupData[{
Cell[742353, 16824, 202, 3, 59, "Input",ExpressionUUID->"b01da97d-3fc5-418a-9177-51af7c2b5d29"],
Cell[742558, 16829, 179, 3, 89, "Output",ExpressionUUID->"82069fe7-fff5-40f0-ac88-87e259e918a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[742774, 16837, 202, 3, 59, "Input",ExpressionUUID->"4ab6df1f-bfe9-4161-9c19-6ecb170c2d75"],
Cell[742979, 16842, 149, 2, 89, "Output",ExpressionUUID->"c5a810d8-9128-4152-8394-86b7016dde24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743165, 16849, 201, 3, 59, "Input",ExpressionUUID->"71be89df-ac65-4a05-a823-cb8fa4beacae"],
Cell[743369, 16854, 149, 2, 89, "Output",ExpressionUUID->"ef3f6b8e-37de-4348-b274-798b372428a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743555, 16861, 1084, 23, 470, "Input",ExpressionUUID->"3447927e-54b9-44ca-ac0e-853cd304e5cb"],
Cell[744642, 16886, 815, 20, 131, "Output",ExpressionUUID->"8bbc9af5-3f0c-468d-84aa-3b991bee30b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[745494, 16911, 325, 8, 59, "Input",ExpressionUUID->"b204794a-d19b-4d23-82dd-3b699fccf43b"],
Cell[745822, 16921, 2736, 54, 742, "Output",ExpressionUUID->"7e920491-3e80-403a-b488-a856f23b4c84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[748595, 16980, 1183, 28, 470, "Input",ExpressionUUID->"cee95195-5204-43a3-bee4-fee3fa62a229"],
Cell[749781, 17010, 2801, 58, 429, "Output",ExpressionUUID->"f0ba23b6-559d-4777-b66a-cace52d2177c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752619, 17073, 763, 15, 347, "Input",ExpressionUUID->"dece66d3-e385-4bb8-8a2a-a0716ef7252c"],
Cell[753385, 17090, 2655, 51, 671, "Output",ExpressionUUID->"ccb21646-71bc-449f-b0c0-fd4028d206ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[756077, 17146, 1228, 29, 470, "Input",ExpressionUUID->"f75868a3-0b09-4088-acd4-678c334eb4e1"],
Cell[757308, 17177, 2573, 51, 307, "Output",ExpressionUUID->"26b0d115-5548-4503-aece-afdbdf5c534f"]
}, Open  ]],
Cell[759896, 17231, 128, 3, 59, "Input",ExpressionUUID->"3c960ae8-68fe-4321-8906-97270e89ff71"],
Cell[760027, 17236, 152, 3, 59, "Input",ExpressionUUID->"709164c3-33a1-424a-a53f-c9908456939a"]
}
]
*)

(* End of internal cache information *)

