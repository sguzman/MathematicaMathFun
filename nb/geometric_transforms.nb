(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2619281,      53136]
NotebookOptionsPosition[   2573385,      52351]
NotebookOutlinePosition[   2573768,      52368]
CellTagsIndexPosition[   2573725,      52365]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.766107911968164*^9, 3.7661079255017347`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d4464c36-7923-46fd-a6f8-19b521a8e17b"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"]}]], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{3.7661079261209793`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"9c668930-2121-4dc7-8b89-214faa808f6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["x", "2"], "2"]}]], 
        SqrtBox[
         RowBox[{"2", " ", "\[Pi]"}]]], ")"}], 
      RowBox[{"Log", "[", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["x", "2"], "2"]}]], 
        SqrtBox[
         RowBox[{"2", " ", "\[Pi]"}]]], "]"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.766107929086976*^9, 3.76610795281352*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e0afa75f-dcff-413f-8406-f2fb24448408"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"Log", "[", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Pi]"}]], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7661079690397663`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"fdb0da06-2d10-48ca-8a13-6124a1298749"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"2", " ", "\[Pi]"}]], "]"}]}], ")"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[3]:=",ExpressionUUID->"c2c33896-ee8e-42ea-bf18-c3d9af4d1aa0"],

Cell[BoxData["1.4189385332046727`"], "Output",
 CellChangeTimes->{3.766108012871284*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"8a2e67c8-b63c-4a1b-a712-f8cbb0817f15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Phi]", "\[Equal]", 
  FractionBox["1", 
   RowBox[{"1", "+", "\[Phi]"}]]}]], "Input",
 CellChangeTimes->{{3.766108017813965*^9, 3.766108031624153*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"358200ca-07d3-4243-8e06-53f4f032c4be"],

Cell[BoxData[
 RowBox[{"\[Phi]", "\[Equal]", 
  FractionBox["1", 
   RowBox[{"1", "+", "\[Phi]"}]]}]], "Output",
 CellChangeTimes->{3.7661080325057287`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"726bef0e-3733-48dd-ad5d-ab71961e42d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"\[Phi]", "\[Equal]", 
   FractionBox["1", 
    RowBox[{"1", "+", "\[Phi]"}]]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[5]:=",ExpressionUUID->"2357ca36-1278-4282-aab3-b6ee6fce8d56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "\[Equal]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SqrtBox["5"]}], ")"}]}]}], "||", 
  RowBox[{"\[Phi]", "\[Equal]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox["5"]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.766108036492392*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"fe22cdd6-82b2-44be-b16f-535161be469b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox["5"]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766108040942768*^9, 3.76610804640514*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"5ba20efd-bc4f-4046-9e04-a077108c366e"],

Cell[BoxData["0.6180339887498949`"], "Output",
 CellChangeTimes->{3.766108046722455*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"60d81993-9814-47f7-b3ff-8355182b0cf4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{"x", ",", " ", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", 
      SuperscriptBox["\[Sigma]", "2"]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661081436016397`*^9, 3.7661081621205873`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"34785c2c-ad74-4fd3-a3f6-730f1d57e14b"],

Cell[BoxData["\[Mu]"], "Output",
 CellChangeTimes->{3.766108162574976*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"14966181-a0e7-4f95-8396-e7e653b01def"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   RowBox[{"2", "x"}], ",", " ", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", 
      SuperscriptBox["\[Sigma]", "2"]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.7661081698251534`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"561c882f-6c15-444f-a2f2-1d9d68dfaf7b"],

Cell[BoxData[
 RowBox[{"2", " ", "\[Mu]"}]], "Output",
 CellChangeTimes->{3.7661081702804813`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"04380ad4-7350-4217-8b23-15f47abe7ca6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", " ", 
   RowBox[{"x", "\[Distributed]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", 
      SuperscriptBox["\[Sigma]", "2"]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766108174516202*^9, 3.7661081759848547`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"57fc0d9e-e402-463c-b779-5aec60ac8edd"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Mu]", "2"], "+", 
  SuperscriptBox["\[Sigma]", "4"]}]], "Output",
 CellChangeTimes->{3.766108183584353*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"a22274b6-1b63-4588-b378-083ba3a64537"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["t", "2"], ",", 
   RowBox[{"t", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["t", "2"], "-", "1"}], ")"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.766108270055451*^9, 3.766108277020845*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"a43ff503-75eb-4c6e-8272-79bb0790ebad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["t", "2"], ",", 
   RowBox[{"t", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["t", "2"]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766108277359399*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"3019e906-5b6e-4d10-a9b1-4e88b0c54843"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["t", "2"], ",", 
     RowBox[{"t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["t", "2"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "2.449489742783178`"}], ",", "2.449489742783178`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[11]:=",ExpressionUUID->"a11cfd90-dfe4-4f64-b779-081f75e348d2"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
wP4HBFUs2Q==
      "]]},
    Annotation[#, "Charting`Private`Tag$7976#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 5.999999999999999}, {-7.998658539569668, 7.34066980100541}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.76610827972826*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"24f8eb53-099c-483f-805e-0a4d6fb9d109"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Normalize", "@", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["t", "2"], ",", 
      RowBox[{"t", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "-", "1"}], ")"}]}]}], "}"}]}], ",", " ", 
   RowBox[{"t", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76610828597915*^9, 3.766108299420986*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"6e1791b7-2efc-4ad0-ae62-9bf395d5ee8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"Abs", "[", "t", "]"}], 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["t", "2"], "+", 
      SuperscriptBox["t", "4"]}]]], ",", 
   FractionBox[
    RowBox[{"t", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["t", "2"]}], ")"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox["t", "2"], "-", 
      SuperscriptBox["t", "4"], "+", 
      SuperscriptBox["t", "6"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.766108294469892*^9, 3.766108299955213*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"d582c169-d0e8-4dde-aceb-a22ce7eccc25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"Abs", "[", "t", "]"}], 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["t", "2"], "+", 
        SuperscriptBox["t", "4"]}]]], ",", 
     FractionBox[
      RowBox[{"t", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["t", "2"]}], ")"}]}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["t", "2"], "-", 
        SuperscriptBox["t", "4"], "+", 
        SuperscriptBox["t", "6"]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "10.920000000000007`"}], ",", "10.920000000000007`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[14]:=",ExpressionUUID->"d1857c19-6161-42d0-b3ab-62072e87230b"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxdmXc4lf//x0WprESiIZERRVkZyUsUmUmUFbKSUonwaQklRENKVko2kT3z
tiV773EOjrNvlJnyu7///v66r8d13e9znft93uf5fD2uW9TxtpkLKwsLS/Ym
Fpb/XX+XIaW3YSXgrqcvYDCGIVZbApvJyxJojK/nAZzfOP9m5Ygsgac1q6xK
OM+InHj7LKYE9H8HjQjjvHu7PNeL9BIwri81mh/F0LJyIKGjsQTY5D4fjcb5
dLiF2tnNpaC3WNM8PoKhjX9HSSxBpTD3TSHTdhhDvFFElJFeBlnHw51RP4ZG
jmZfnu8th3p2dh5CN4bcfpoWOwlWwvP67rrn7RgCmUwH75jvsG7U3sHTjKEL
LQEnnKQRJF+lqQrUYSgho75/PLga0kPa2zwqMETi9Ik1eVsDxdyun93yMbSF
ZERMzqkF2YrII7rpGPpwTvNeInc9xB+tLBiIxZCa2mHl5ucN8KjosZ3eCwwp
LN3HopSbYD2Jj6jkhyH2dc+gzbbN4KkW5J9wBUP1Lo0Tu+pbQJeXMDSngSFt
dWrRvqV28GjofFfJhSE+lvzrhj5dsCdZv0W2mYl8neL12gZ6oJnd4uz5m0wk
edRmOGaqB1rSnu9zdGci3YrwNm+sB2x4tMw83Zhoe3seXNraCyFKeyufOjPR
4DsDg58qvRCXX+jz2JaJumQ4376K6wWlxNwfhYZMxPOZOOJ4uw+OyFzMnZBk
ouETerwz5wdAOkOZS6WNgS5Y65oq2eN85ZmPyk8GCkhXOfjh1gCIL+q+lm9i
oOtBjQIfIwbg6qfkUL4aBpqvN15Jax0ALe650GeFDOQa/2vXsMkg/BF8GX4g
loHcZA683uwyBB2GPH8D7RkoS1t5WNN3CPabE6te2zCQo8hay9vQIVAX9778
7jIDJX0jRrzMGYIhRcGYwPMM9OJ96Kb21SEoSZjdS9VkoOMsZQ8z3w2DD8+Z
6137GGhZwETs6/QIGPtWGm1to6MeasPjyPURMK9rETzZREd75OI0Pu8ahZfB
r1Ptaujo+iDHI42zoyB697WQdxEdaUZnVdxLH4VjFtvPd8XTUde3PY3mvmNA
GhZbFXKjo8okxbi96hOQPH6OmcekIZan76x2WE7AxL79l41JNGSZ9kP0lM8E
iG9+xtc+RkP3uDyO6BZMQJZCQemjVhraIaMYuENoEqRUn9aGpNNQt36JcmXs
JHzSd7Abs6ahtiJGTH0ZAXqsDRQdkqno0lTa0Q+tBFDfVcnSGU1FxQ8eEd5M
EODtqmEv3wsqIlEMFFa3EKE3LViNx5OKZmc7BJLMiSBVJ5pUp05Fgc/evStY
JcI1hgy/RT0Fse7NdBLcMQXKe4Z7gwspaKhif2ia+BQorf4lPUimoMPnJG6Z
mE7BtbaPGllBFGTUa/mpJmMKCqxMCX80Kei+P8Z86zINUQa0T8rpZFTN/SqW
9mgaqosX7f69JaO/D33S7r2fBnHCCbKXPxnFzHWfFPsxDa0CMcF2FmRkInj1
CEl2Bhj190c21mcR27oczyU2EvgM+m+qUptFJ7QC+ir6ZyHZEA5hljPIaBXb
lPRrFmz2sl98pDqDEq5XjBfykuHBDm92f8EZJLfimWtnSIZvjvwTXT3TSFnz
ADWvlgwtcbdGnc9Oo6+J8d4JpRR48C8uPHL7FGqNNhf4PUCB6jW5hvlxIprW
KZNxW6aAmLmLR2QBEf0Mf7A76QQVTj13YIRaExGtuqv2cDEVCqJoVfSPBCQn
Iiv0sIQGhPXAnqfrE2iU29QwdYAGC4wDfzeFT6CJ8h02Dcs00PEwln2xZwJd
ynRp61ahgxqhNvOL3DjKFCCeLC6mwwGx6asiWqOI/aZlGX8/HboMvMfl0Aia
CzjYrb1Ih+MTzt28GiPIJE89gkWRAeF2Bf/kjw2juJikbKssBlzv5RaHtQE0
pvSakfyDAe9XpbeoXBtAS6ZdPW9mGBAhM13a09WPVo7bvFc6wIRrNN5f1MQ+
lDtVi42oMcF+ZUzFjq0PJYQzKFstmGDcSB+55tyLEhDxYXsoEyrOhAori/Sg
Gom1JcsvTHD/yx6+6NeNnK38BvQqmeDiNMCl29mFYrxTw4/TmZACKpXRvp2I
S2JlQIgNg1nFU9XKrzrQGzWth9p7MGgbWRd3lmlHwoGjUso6GCxOnK67YNaC
HLPyT4VZYsAp+ccoHTUj0S3fnnffxOCJnvPRe1I/ULGT1dimJxj0sfCX/wht
RD8zPNi4IjHgVSWSikj1aI90SsF0EgZNt86bmmnWITXmSrJ/Pgav1iUuFr+u
QYMit6I6qzHIZLunulaBEEnIwaSlDYN7wXMeoUaVKPm8dqnTEAaH+TYr2vaU
okWfruGIKQx8Ay7YlpsWod/vMuin6Bhk7V4umK/PQ4r7la+4/cJAOX2UJdsh
G33Unp3YtIqBaoTv9kDJFDRsne+7sY5zyGGSfmkcyuXJCLy0gYExX8aS//Yw
9HpbacM6zldNRsKqqmwhmt/Zj/wPA7nD15UWS17Dpce+prz4+smodbGA74lg
6hcScWMZA51Qw4rzHmnQdfb05oU5/HmJkJnCngvXQ8yk48kYZEsl846YF4BW
0PI+p3EMnGs8uopkSmDuxO9crW4Myoxlt5lvroD99xZ9jtVjUKcVkC1GqAKz
lJPNMoUYuGnQI8461MAf4n9tcvh+Xu9KRqumdUB16PVXfYmBpwU1zl67Adai
qSVn/fD9PKuSLqXUBBLfRmQtHDBQPBx5f5NkMxg1Kz921cXgoeq55TjBFuAe
OpL6hgsD8Z1Pg1tX2iHazFErFz8vN6/KvZvw6gT+V8Nq/T+ZUCLpvuO9exfM
LH6suRDABKqUvsUeix7otVSGPCsmGJImS96f64VXz5Pnjh1nQvbrvd/y1fuA
WzFnS+YAAy4Ucpsf2zsA3jdXScXpDChUcuvW3ToIFvf3zmzxYwAvz9Ua94VB
cC8l/orayQAHTzVhs9phKNGb8KyTp0OWtP8V7bPj0OfyWfrwEg3Om622WIpM
wMF51zMKZTTIHnGzebc0AYe6RtHtkzSwDxxsE2ifhF/K/orVa1RIttK4c0yZ
ANr3owXmSqkQFmlcWhRLgPazs77SClRQlVDmpTkQYSbzYaopgwLk+T8JETVE
aG//ExKZRoEFf0pj0MEpaFXTmv20hwJRU6+LrYem4Pt/65q+i7PAd1Xu6Y0T
M5AgxL60nDsL7pYRFdSgGWjnVuLe6T4LP9a0/cgdMzBaKqOgPEYC94P3k52c
SLD4yXTVrHoG+DmTpl/4zcLxZ7EyqX4zoBYwL3asHOfX0Ykjx2cg/697o+Pa
LATJ8WhzfZ6GXamS28N8yPDEUjfCIGAK+NrUDY3s8NzcOHrRT20K6h/ovJyO
osDSTcnq7/NE6Puxd/rYTwq4vFRRSXYkgqWnJOHXcSow+BXD7HUJ8KvRibcW
o8KOxav5rRuTYLTZgT1oPw2sHSwNvcomIfTpUNfBczQQl4uP8pOdhLcdXgbb
4mlQEn5Q74L8OIDZZ499eI7mh917YZo+Bg0hMTmXbehgZSq8MCMyBmYLsn2x
j+nQZ0lZHuUdhYVdnOv6tXS4EZ1iLLs2BBzWn+Z7NRlQMmfctNNnCBxsrm/t
tmGA9mZj/2j8XGg0r95c92VAwoeekmDGABRZDLVTv+JMvvl0ltoHBB/OG8m8
TLjyYIO75UYfvL/NvydIignCue7HDBi9wHGxjeXbKSb++8XU7FrogafdZw6z
ueH3u+W7prB2gz7nnNxcIRNke4/JyYd0wfm3OjlJjUwIM7sxp8fTBQNSxLNV
A/g531hp5dzfCT0twy4aK0zofhEmc/JBK/g1P6R8UsDgzpacjO1vW0CMRGpP
AwyoBL8bxVk/YUxYrFneCIMCUpdQ5MQPOFfhYTrghEG+rYNX4VoTiKVx9y/d
wiDXW2ohbncTXJvkc/z8HwZKjh2nPpk2QLv8WvrHCAw2La00596qhxNOFrW/
32PwyKjqz/WIOnjg75c4mojn9osCvrrWGhCPNHt/7RsGpaIVSuaMahjLvvGA
uxQD4UEdP2+eaiCO+VQYIAx+qr5ND0+uBM90q4OvWzHY4XTjXQ+lHJLC+4Ji
8VyCJR8tluP4PO80hbQGMWCvzrLe7FsCiobQHDSGQaRB47OuqiKYrZoKcibi
OcLxzcJqayFc/SZbN0XCAJl3XYgwzYdXpv/0WWkYVNSbLtnFfoOwh8M/q5l4
TmsEufs3f4W8mq1kkYX/ff9n2Gn7TOBhpioeXMRgIU1Ek7yYCtaHWo/V4jl7
7yEnp0XEF1B1jjJhX8Pgj5LahrvEJzCMUl2g/8Fg6Iu9156HMVA+Lezh8xcD
WaeKJLWcSNiZPrXpC57jMi9v2yzXPIehkFtTd/Gc5yhSzYs09YaPIvNKJJxv
+hAXnUNsIGlmfvvfDQzlHjS58YQjALwCTVxLcB7UF6Y/T34JN7w0NAVwhiXy
g1aR9zDFpeez+x/uK+P/Mncx46Ggz2CqfB1D4rJ8OVnjn+G25i0D1j8Y0r05
nj2rmwKhxYJX6SsYMlrkzxnJTYfHYoRWvyUM3TXfxpayJxvIxSGH0n5hyJXL
eM7haS54nZqg+sxh6Ez+oMVuvzzQbS74MEvH0JTn7q+RcgWwQKiMXCFjKKBq
gL1wphDQUX+5jGkMKSq4E0ISikE2QT5vZQJDXMFhfcE7ykHsNrucZx+GXv0V
zGptroABhSX7Dx0YGqtN99l4+h3kvx4mW+M+xuijWCr4V8PXOqm8r7h/JXN4
pVvZ1cDa0Z7PJwsxFPnt6yd+zVpwipE455CNoU163Wo2G3WgI6Vj7haHocST
Ia+WJuuh/pzH6LlIDGW2wCLUNcDSryi78hAMXZdhz1gObQK7mK8t+t4YytH7
civvYAsIbht6Qj6LobyF7zzS+1vBOfXOrs2qGNr3ZPBeplAbxJ/oF30hjaFC
+7+IvKsDtkHa4U4ODH22Vxa15uiEQD/CnpA1Jkqs7LzaE9YJNVPjXokUJpJa
Nx6OiOgCA2c53okGJpLnLgvo29EN41okO5YC3Ld41IK+R3bDacHPcl6JTMQ2
v4z9F9sD79mY+zR9mOiwuUYDNa8PlGKdl5f3MlGLSuODh2r9cPyCO0OJlYma
90NmdU0/nK3J6vlMZqAmYd0gl94BOHvewGoln4FSZzUblFmH4eB/XL84TzHQ
+eSLTp6vhkHS2+iXhjADqd/3UXEUHoHheI1U73U62mcu+8HuJO4/IvmuhBI6
Upc7+S/EfxzG4m4XcYrRUVVw50MVvglQq83/r32VhlZOrRwKTpmAmVrh/W6d
NHRaVoxnxXUS7BnvvrHfp6HS9MCGlEgC6C9d59CsoqJ6naUx6XECaIQoKmwJ
pyL7JEUbojQRONmWdt6xpKLp6UTbUbwHl8mpOYIMCvLT/+5p9msKFp5IsLJu
oSD3KiuhYZiG26KdrupNZOR8wWnEKXwawtkzKkjPyYirK5hhKzEDcTKrgcGb
yaiUlmZItiBBtFXJvAOVhNR7pbqDP5NghB44X5RIQqYegdtH6CRQY0v3vnKR
hJZ0jeJ8AmdBVKArNbZoBgX/YlUXTyfD8Z4zK+ku00g3TSrmIo0MbZwqnFf4
p1Gl332gyVLw4evG/mg0hbxK7+6SzKMArSdiOJl/CoWzsmvlz1NA4rt90aMK
IgJb9zI/eSr0jhkskK4SUeNJ/efPcqgQKaSp/SCTgJ55pZ0qpFEhZ7ew7Dcj
Aqpb9BVgStHAeUpDLpQxicq2bZwwT6CBbYIF6fSRSbR2OWlP+n06uJoPnDY/
NoZ2+nh+YeTQQdRrKCzHfhSZhrE/mibQweGK4fBwxAjaGcXNXqXDgF/5gTu3
TA+h6CfFcRF3GaAnevauItcQUhHrtSMnMmBp+6bCKIVBlO0RIHxgiQEeT6Jy
be73IybxehEF94czRrcCV+P60JEfwTWiukwY3/FYV72yFzn1Z72tesWEwjc2
v/evdiOh7D9hQvlM8A1Tebwu0I1uNZ1xbO5mQqAgP++afBcKcmXdJboDg0Hu
i54fO9pRjVyBbq0MBtayua3tbG0onFeKO/cMBoZH+NVPqbQgnkJlLZItBi3V
Ck0y7s0oZuah8zUvDN5sM3cYjG9CO89bZiiEYFB/ZPlLcEcDKr24d/ZcHAYz
6Xol91jr0ePKF/FZ2RgUs8fum1GuRT2OZTTbSgzol5Sf8btXo7/uQu/tf+Lz
fZHetUea39H9SY6V4n4MuFYDo3WzylDGlw62awQMNly9rq3uLUb94ZST3lQM
3g+eJm5/mY94vTm+Ts1jMDWnKdG9PQed9ng1W473SFrck9fbWdLQ2nrcygbe
Gy1INVR4IxG1XCQ6luE9UQBzD+z4ItHUd0lBJt4LL9vNtzxn3EHRN8JvpuC8
NU7NuGxbEBSGlAnN4j1jPXOb3fNINPDqTkpV4L10NF3+uJZtEqizl/+WXsIg
5vUVp4MCGTBvEnBQA/cD2Ya2jkqUCx/9lsLWcD/QDoLFatkC8Lp83+DWJAau
8TYPF7yK4YyhfvIn/HkDzd9zKOSXgYfu5Oa4FvzzAhV365ArId8nasUV7/GU
M8qVSxzV8MrERZwH96vpmMa8xwk1wIZ2QOwXDKwKmzI/H6mDziA3DoEoDFKv
x7EZFNVDIadE619PDMQWzsePlzdBpuNo9uwVDM4sZJL1LjXDF5K3FjqH789Y
pq4I/SesHHpo5bYP72UWF+5J9nbwYjFYuoD7pIzmJf+CFx1AmnzoZkVlAmcp
wdP5WSfYOs2yzxXh5y1XR77nTxfkKRg3vItlQvDd/M1F+d2w9tv/XvBjJqx6
SekUuPbAlZS2/V5nmKDyVOYrR2Mv8P5Uuvy2mQH8X2w7/RwH4KSXqFp2BgNq
FOu5XrAOgmz21rQroQwYOrF1fiBxEMhfk92y9BjAAv/JaHQPwRmJyZqf1XT4
/Wec9G/3KLzx9L4a+JEO5QkBCgWfR6HX46AP90M6cOYEVE5Kj0Hf3sBdxSfo
EJA9wteqMA6d3Pb7aZk04ExYmFrkn4QdpjfNhp/TQEhN5WTp+Ulgu3XqdaMz
DdaV9+tfCZuEVO2Uu6kHaHBtTPyw0/okEDLPeVIjqfDpgvY0qYcA6uV1I8JP
KCB6duv4P/MpkOgpC3LE53Y3yfRUWXyO33C686ZTgwLfRlwNwrKngMfi0KTc
GhkK7/OIj7NMg8vMJg8hXzLMmM87On2aBhGWx0Le92dBM/rGP52qGThQ8IBq
bzsLBql3B9+Mz0CFqw/hieYshMtz/Tb5NwPT+3h0nNhm4dalqjExDRJ0c36I
ynlFAr5lr6iAPBJY+NgkXMufgXeNK8/cn83CzS9R1pdEpmE+jdcqg0CGyyKf
Eru2TkPY9gXp+N9kaLcK0no0h/vHv1bWM1spMChvste5dgrKU/XSSo9QYHsz
e6yL2xSk5XbP2npS4I7t/TOESiJ4NJj45c1RIL5rWY31GQHi03WsjzVR4TS/
GC+bNwGMIuqv63ZTIWCWYn/IiQDn+Kwa1MaokFg1qlNzmgAR5gqlJQtUmJ7I
O+jOQoDAmjrjg7iv1Le1SioETULEgVWrPddxP1G85xqlNgEPdovdGWDSYNjj
EN+NAxNwYWuRiTvukauHZq/eYZuAXmLVx9m/NDiQVq6wpX0cCgx3DiZx0aFj
jrvS0GUc/uV+0hKXpoPckK3IfNwY5OdMbkTa0eGDg3jDquQo/BcWfZpYSYcz
lzNz2XeMgrKJcGEl7jeGVSz+GssjUJdUwfn8Bx10dVrVRX+MQEZwxSV6Dx3K
ZK/dqr8xAtzs6x82KHSQOpCWIVI+DLvu+IT48jPgRoBuf/udIRC5SqUt2jIg
K/Vft8SJATihn9Cr0c2AVqagKbvUAJhcu75Lto8BxX37htcEB+CBe4mm4CAD
KH+++ois9cOJ9pT3Q2MMsDb1jTJD/XDY8JWoEAX/3+g8LwDjfrA+TbcO+4f3
UMpHX22fPmh3uVCZKsGE09lMA7OlHojYrsxz4RoTWJMLVLDXXcBcj4h3amDC
u7P+bzT3dsA6K0v6fQ4MnN+ub/Lc1wp19KHbPKoYSLDenb94rxlSn712t8B7
4t7lBJOAa03QnrJbZeYeBp33ZLxl8xpASzojOiAUA4OS4o63e+rBv4ZDwS4W
g3Rbfe9DnbXwcJncuC0NA4uYkAvbPtTAuSaHXE0857Ssk1mJYdXgc1PA2qgC
Xx+7R45+CUGlPXGTYy0Gxh6qk/tSvgMzfvLK1A88Z/t6nZNU8dwMNOfka8eA
N51/cv5XOXhpRGn74b4TelPnomFBGegIHhJKwHP3X6pX9uLnUjB4Lin+dwiD
G4KTv5wTSkHTVF6bcxgDha6dzL4PpdDfbWm5B+doiZWlylel4PNGwEMZ5wuy
V7QSH5UCbwxF1QNn8huNyQKrUhA4ttV+BGdbDQZjN38pMGPtuPJHMNg511lX
zlMKxo1sagjnAJarxxw4SuHZhq9dK855l3bU524qBcso4lsSzqs7Q1quzpXA
bg6zjL2jGMwd5I3ibS8ByVqhoACcpY8I2rU1l8BLmb3wEufRSyrfXjSUAMNR
43cszh8zvChc30vAlH9ZvxDn7MauD6LZJVAn2fGFhPNJubfh1LQSKCA6SP/C
WcNyfFPRlxKIjlVP38D5990+D5O4EmjRGnojhPugbfS0o3B0CXxoSFsXx/n5
tE4/I7IEzL26HORxprtINqGXJfCUw6bqFM7/730V/B/6bEUa
      "]]},
    Annotation[#, "Charting`Private`Tag$10192#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999984609314811}, {-0.9999985880123641, 
   0.9999877008458389}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766108305501512*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"24d5dc54-527b-485c-9a8f-c749d14ad6ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Normalized", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["t", "2"], ",", 
        RowBox[{"t", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "-", "1"}], ")"}]}]}], "}"}], ",", "t"}],
      "]"}], "]"}], ",", " ", 
   RowBox[{"t", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766108317563671*^9, 3.766108328612117*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"107e120e-aba0-4955-b204-ae4094c93240"],

Cell[BoxData[
 RowBox[{"Normalized", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2", " ", "t"}], ",", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["t", "2"]}]}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.7661083295974503`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"168c89e4-7f27-49e9-a53f-278ea7ad1bda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normalized", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["t", "2"], ",", 
      RowBox[{"t", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["t", "2"], "-", "1"}], ")"}]}]}], "}"}], ",", "t"}], 
   "]"}], "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"e37fad49-a17f-49ed-bfc9-220dd082d7c3"],

Cell[BoxData[
 RowBox[{"Normalized", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2", " ", "t"}], ",", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["t", "2"]}]}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.7661083468165607`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"1fac680d-049b-4b7d-9720-ec2ee62204c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["t", "2"], ",", 
     RowBox[{"t", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["t", "2"], "-", "1"}], ")"}]}]}], "}"}], ",", "t"}], 
  "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"233241aa-55b9-44da-bf18-d002178d1801"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", "t"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["t", "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766108358886607*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"afb1921a-dbc5-4119-bf1e-df5a2a1d1dde"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Normalized", "[", "\[IndentingNewLine]", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["t", "2"], ",", 
        RowBox[{"t", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "-", "1"}], ")"}]}]}], "}"}], ",", "t"}],
      "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"t", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766108369944756*^9, 3.766108378499017*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"f58ddd81-4023-4abd-af7b-92760f7a1e2a"],

Cell[BoxData[
 RowBox[{"Normalized", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2", " ", "t"}], ",", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["t", "2"]}]}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.76610837948059*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"ee4bb30c-6a59-4b03-8f35-f5231746b12a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", "t"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["t", "2"]}]}]}], "}"}]], "Input",ExpressionUUID->\
"66094693-d768-4684-b493-6ea92af93ac6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Normalize", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", " ", "t"}], ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["t", "2"]}]}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"t", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766108394017577*^9, 3.7661084030879097`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"10fe2d12-41c6-45df-9e0a-bfee0362a1c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "t"}], 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["t", "4"]}]}]]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["t", "2"]}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["t", "4"]}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.7661083966704283`*^9, 3.766108403634831*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"9da5c21b-0b28-4af7-8dec-57f4d5e6b807"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Normalize", "[", "\[IndentingNewLine]", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["t", "2"], ",", 
        RowBox[{"t", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["t", "2"], "-", "1"}], ")"}]}]}], "}"}], ",", "t"}],
      "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"t", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7661084083700523`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"6dbc4d8e-5fbb-42cd-9974-01d4609ee523"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "t"}], 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["t", "4"]}]}]]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["t", "2"]}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["t", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["t", "4"]}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.766108408735165*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"15b4fcea-f28b-4734-8cec-b13ddf0b926b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "t"}], 
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["t", "2"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["t", "4"]}]}]]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["t", "2"]}]}], 
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["t", "2"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["t", "4"]}]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "22.44666666666667`"}], ",", "22.44666666666667`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[22]:=",ExpressionUUID->"37eb847b-ec6b-4801-a2d1-b4ec11eaad13"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
+eL/AKGA+do=
      "]]},
    Annotation[#, "Charting`Private`Tag$13530#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9592580289908799},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.35507085718819553`, 0.3455900434481767}, {
   0.9592580289908799, 0.9995586623143357}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7661084114185057`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"4f00af39-f122-4aa2-a6a3-a3ffb54e171c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Normalize", "[", "\[IndentingNewLine]", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["t", "2"], ",", 
          RowBox[{"t", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["t", "2"], "-", "1"}], ")"}]}]}], "}"}], ",", 
        "t"}], "]"}], "]"}], ",", " ", "t"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"t", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661084244682093`*^9, 3.7661084296676493`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"f427a911-581f-4e54-9b29-d7451e01b451"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"ArcSinh", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["t", "2"]}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]], "]"}]}], ",", 
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["t", "2"]}]}], 
      SqrtBox[
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "t", "]"}], "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["t", "2"]}]}], "]"}], "2"]}]]], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.766108431446093*^9, 3.766108446855804*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"c9461384-1ffc-4c5d-ae86-14de75ebc321"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", " ", 
   RowBox[{"t", " ", "t"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7661084520526857`*^9, 3.766108455841861*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"686ac8cb-0ed1-4a32-a280-50a94de66ea9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", 
   SuperscriptBox["t", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.766108456135277*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"61144488-ea36-4a5e-a56c-e70da2e2cb5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     SuperscriptBox["t", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[26]:=",ExpressionUUID->"1a6cc015-b0ef-421d-87ea-04c07901c566"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw1WGc4Fn7/NcsKySbrjh/KCCmpPl8/siLJulVUlHIno1ISiiSUysgeWdmz
QsL3LqOUzNvI3lvd9ubf/3qe57w513lzXpwX5zrXEbdxOnuVjoaGhouWhub/
+T/YR/4PWyL7sG903RsEst756hSpFSJqlg5mLFklkHmfyj45TSWiZGMJVud5
Aln9DGUlsZ+ItJO1ePtHCeTy9NQsi89E9Fw74AD5J4EccQtgy4eI+IK4LB/F
EMhx9kYiR3YSkbygZCHNYQKZdqT/k/UeC+TvuQoCVhLkgrE3T8L3mKFw6j33
pGBxcv2r2K63+iaotcvARea7GFly2EXNMN4YeYslPX01JEoWUOoyOfrVCFWk
bz3JMxIh+/9KDVAoMkCmlR/Vt6KEyZUsvsuXX+khw3pxku60ILkDHbGseauN
sld6Zm+fFyCHPt/ym+TTQlc+rCg2pPORdx2VPL/PSwP5Bl+rZd3DS16jDPHc
u3MC7bB+3Kn5hJuMF9xiHhofRf1lm0lZrVxkGYwTxvarIgn1uqqFf3eTz7HL
ml5KUEL3IubUu4Q5yCuT2bV0SB45Rb3tq6xkJSu3Gsow8Ukj1U46VacUJnKc
rXPN/KoEygHh9fsajGRhm2HJ6WPC6IT2umKrCiPZNonEYy0kjBoNOu0UpRnJ
rSXBNMOrQmjOMrJ5lJ2RLHP9S+3+YiGkeoc706SbgZzWmPNPlpLQ3zzYLOXu
MZBparN328sJosbdm0X92fRkaYtT8QMH+dH8UM8tHX46stoES3T1XW7E23dP
KoyFjlwfKmBGseBGRzt3d/Zv0JJTd4b6rR3hRj6NJzXcB2jJHKdqDILW9yCu
8hyOnExaMgXJ29V570GK4Z7ZXMdpyXvH6X/mh3AhR929oz2XacifJWtIXDWc
KESzOErWlIasuCI3z5HJiYpOGBve06Yh94XSzO17wYm2VJ6859xPQ16RGj37
2pwTCWp2Mj4d38ZKblc1RZs4kMXifTi7axuDVvIoRZwdNVt+LBw338SupQY/
XUZZkJioWxPtsU1sbPagWfkDC3IcVqUKim/i5FjmPQRfFsTi9F7OcGoDv1U8
qR0gwYI0fPPSCx5uYFnHI653LjOj/NzUePf0dXwIOBarx3aiIPqQQLa1Vayn
5uVhxsuIOr+dyZDsW8UNNkkzFZMMSPoFx7cTVav4xxGpaDPMgKr4gxhdXqzi
fZMGqSz2DGhDzv9Rq8QqNrPh9Q2toEckotfd+FMr+H16lK3YLTqkm0OyUYxb
wtOClaaGS9vw/H1FOJ/vEubxGbV9nLcNjZ+4fmyRlrBlkZE8k/02WH4vVf55
ZAkf9ptf2OzeAtIYCyOJsoiPVz7Si/62CUHiWWnJrIvYo7CAIzx3HZpfT03z
us/jsqs3OaM/LANvHIhvXZrH55z1/dPcluFcSqjZiM485ta9+Yn+2DIMFapX
vOOZx73WvibplUuw0PDs5ZmCOVwms6Kf1LYIfCwHlALHZ3GmypK5JesCXPBy
uLdpTsV6ogZDLXlUqHFUTfuqTsVHr0alO7pRQfEiTXuwGBXv4n6xdlWDCjse
Sd80oPzBicQuf0r6HzCjd5uKW/uNv7xg7Q/ZnIE5Zr5xpDODlYyUDatqJ6Fm
MlOnlXMGSy6XOjyzm4SoHyfS7DuncYdzcCorwySgIDu7kJvT2OeXrO1hjQl4
yVk0PBQ6hYcecrAfqxqDA3xmA379E5gi9kZibXoYaFbGkVDmBO4Y5m4/+3oY
Wjo83uTdnsAx7h0pV04Mg3t0ysWOHRP4qpDB83chQ1C7d6FHRm4c71AaCdzS
HAS7faGddfdH8axdeVBISB+8OdjUwrVnCB9n771tW94Gl8JfWmv2D+JpZ9WF
Xq02EF83nLidM4gdbOpk4362QlLV9y2KziCmzOaXDgxSINWiSibCYwCbfrlw
9ZlwC5isO26r1vVhelOvus+RDUCpmuKOtOvDCvP9YRyN9WD+4rrsKk0fXsur
qB1krgeiuI3Zp0O92MZnyk3gSR1c0DHLgoRu/CyQZeZrVC3Yhapb6N76hTWl
rQ/IHKuCsQslDhlsv7B64q2ynzGVcF3qkA9LWgduPEz3cXnzC5A+yufUdbXj
hvKQ5a7az+DUJ05vfLINnzk3x/1juwKo6fH8hX2tmFXq5wZprBxu3RKS3+Pe
iunl4st5KGVwh5HHsjWXgiOnJb4/KysFt/1MeZb8LdhVqZh9rbYIVhd8q0oL
m/FGu2YF9dcHcK+g7RQybMZlJTXac7/fg6fxOkOvdxOe2p83yCP9Duj/dH+o
amvAfwp4nlfk5MEOn7Z+P9YG/Do/xN1SJBeYeBpZ9VA9zpHcEGSJygY29crL
PzPq8KHbYS7Z2RnA+zRjV5tHLc6K6XRdNEgB/ZDVhdcfvmGr85HnrnEng2ec
XrfZ7684frUsMHAkEYbfTWS2XqzBMcmu0bV6CcCP1UJeR1Zjdz5pfFgqDk59
D7hv1lSF7+imuzPxxkBhv4xu67+VuHpgd1GTQgSMTt1XeP3gCxbWXz/03fI1
CCzX8pq9/4xfOhUaSEaEwqNdpBGKJBk3zwacoDd4BdcP3omSKa/AWnGmymxP
g6BBh/t6hnw5FmlS5GuPDYT4O6aMGbtLcWDap2tlx54A47OFFunHJVhAn0Rp
q/EBh8SwpPSFIjxi996x6N4jaClWcZG2+4A715VvFsV7wNF6CqS3v8NXRFSJ
gTFukDh8h11arxDbHXKKHx+5A0zr3D1ppfl4APVBk6cL9EqQLIyIuTjLm+2+
f40D5BhlLpxWz8JPSd+kHx+4Bg88JoNPi6Tjs8fmXoTI2YBehqzCadpULPZ7
j8XN0PPA10aqMxxOxF6HRDd7aU3hB6N5S/SLOPw4jk1sweAUXL/YtivaNAI3
3g4R9aTTAIaP5rpRgsG4sithtkBXCZBkLuPBz09wu5W09fGwvUDNt1q0jr6F
SVlq7P8kLp7wSHrs80rVErq+KLXF91SekPdJUE079BB4MeGPoTM79O4ykmpl
fw4xyXxD61HSYCKXRryhEQY6t5M6IlLUoKhFSsThQTRIyYd9vDF5EnYdb3Ep
OvcGjtjqKDoVnwHgDKUU3UsGDe831KY8C3AZOnu4OOwtyLu07rXuvQhJRVzR
xQUZ4Ckw3xWQeAUoAc0bxfXZYGFrf3H1tz3ssAq5WDKVB4RwwyjPdicQ5pe5
fMG3AKgdDVrP5G7DB9qAkG6ud6DTpcA/WHYXTk+NV15IfA/8zTXalVHu8Kgi
XcqqohhC6uvOccV7g0A6E7HH4CPklUy6N9P4QmHw9QCrrlJg3pvyzSLQD4av
SE9brZTDbdOJ6YLdz8HztP/eXj8MPv+4VvpxvARW4Tv/5AWS4drReltOwWBI
YaQQFQS+wC5sfaDZLQyc1x67OPX/1XFdc9onw+H4H+XAvLRKkDsidUZEMhLa
OkI/KahWQ3XqvoYFkVjYmW0iomjyDRQUbJ3eeCZBuoXpeeL+WlhW2lu98CMZ
dOnNIh/Rf4dK9yzLAslUCDxnztX07gc4t2mB7XoasDFb7rjF3QDsFaSNDIVc
yH5vqRk93QD0gzW66FceSCnKocs2jbCdsm4v+jUfvnbJeQYcbQLG2ySTo0GF
wKSssPxrshmU0jQSBqyKoMM/j+e3eQto1ZLJhpeKIb1XQYWusgWIuzJpHa+X
gF6gootsDAWC1ksHvgeUQuDAwSn3U23A79wmuMSJge2VSp9Q9i/o6b5/JCCy
CrpH3m8q8HfCpmeg1iWdashWPySs5dsJoopnLu1erQbDsUOWDhe64PrXtRra
q1/hxYnDLWVsPcD2pe6M0MXv4L8UO5Sr2g918wez+B0bwVm8Z67EoR+u1w3m
mnY3AtFgL11lUj/4yjmWbp5qAumkOLF29gFAAdwT4QrNUGsYb7U9OgCf3yak
jOykAEtqQrtRxBCM3M8LW9hoB0aDD5/Ka4egPTPFjOt+B9DMf0/YvzEEkjck
1m4udcASWrq28/IwtEUVz/Qu/IKhboOVCtkRCMzTfZhG0w1l3Gv88hWjINRL
93ZCph+KP3FsxlBHwXX2c9KYSz8U2kgOMBPGwNPgZLBvaT9k5J/JGHk6BpG/
IjVjDAcg3CBNLc54HJaMbm+qPxgEJ1/Tc2wjE2CSs1itvzAMpP2kE+58k/BC
fbX3sPYI2DU/lBjXmwS33Z8nKiNH4IJY1mRl7iSYhsVRSmAUdMtoHzxwmwKV
pYBtntdjILGQGzPJOgPRsoqZcVaTMFng63hFgApLspYys0pU+DdW4GqJChW+
3d3tLUKiQrRf7nm2M1RgJq0rZSRSQf98h+57Pyr0aF9Jbds9C5kMBwgMC393
ya+AquClWbhh0dKeXD8Lb67sm/ZvmofpDXGNocfz4MAe0e/+cxm0xooOH06Y
Bw1dXy8TzhWIbTol/6x0Hp7KJN8NMFkBg7euQsqz82A76Oq6q2vlbz/WLvpY
L8AlOacc19+r4JjknCmhtggXpAt2fJXagD86eI/N7yVQtVTLK3KkQci29qwq
8zIo6U6Xo9c0KMSrJZhl3zI8S7hRu/yJBql+GON4Z7kM5k8b2qaZaZGXBCcb
Q/UyaKsf+DGXRovYNy8xvI1ZgQgVNUHHaTokV0i3OKG7BksOicYSEYzohrB2
m0vyJuQsZEp632ZFNYul2/fKNkEtX+Pxn0RWJNGgIOPVugkuRGGGJ42sqMNb
wCNw5xZ0OcY5ScqzIe2xafHkG1uQ965+Rn2KDUkUht6kKG+DdtyMH3ZgRzPJ
zj5CNjSI1409/NXfPZ+iViHgNUeLSN/FxNPEuREuKM/noKFDc0qlhgTEjTpl
ynUSd9Ghl6PtnkXW3IhTsMy1SpoOMSu8GReP5UYeax+bWC7SoXWtK+Ns/DzI
9NOHgIgfdKjNt/SVMjcvYjies5qfQo+umyb4Vu7lR7Yo9teQOSNaVdJfnXEV
RmeZmkf9vJmQVzl/inmVBPL8k0OnHMuKghYU/V41/4NWCuryHq6xo2P7S8yJ
m3KoKVq81ZdjNyI3nDzLfFAJGelvCUZXcqGzVzu3XGhVkV2n3876c9xoupHu
xo4RNSTgbvNgxyQPUhX3os2nP4Fcn/Yd5ojhQ9OUavVWew1EcmWKUVUQQO71
tOsszZpoR1OztvyIIFKRyQumRGsjOEa9LxsqjB4K9hAUfPUQl/9Hk5P7RNDD
Wy8E9l8xQM819t1VbBdFxrK2K2G5RqjhZpxoXJEYauRpemDtaozS/m3WSfEU
R0FVfEXtIibIpN4iLNRMAhGpIpVmdGbolL6yCpcoAZ35GRmys9McSXjaTL2W
ICBz5rwmx0FztJIXnCQgRUAOujtj2yfN0VseKqe4HAFRGjybc9bNEd1A9oyC
OgH50D+ucdhrgUruSaUZWhCQ0dbMd5XLFkgqVUAw4CUBVWlon5yZsECb7bpN
bKEExN8fO/1kzgJRWNz8X4UT0EPvQ6Ji6xbI27ltKSLur9/PA1KWbETUrR7a
8jaLgK4FKn/qkSei0Ga2oKqvBJQRkUh78A4RkRiPaen+IKB91/itBj2ICB25
sf6jnoDy1Zo0Xz8hot9xtfYtrQREP870bjuciPTt/bQHhwjoqf0r/rGPRCQe
+2Hz6hgBhRvz1ad8IaKV+uH3E5MEVHKsn/3KDyJKVdEkzM4SkKLwEaWxbiLy
uHar884iAQVwfuXOGiGis9GJwSsrBDS3M9LH+TcRyfxs1PXYICBnuqwHh5eJ
6L9/CPrfH/J/IH9Ycg==
      "]]},
    Annotation[#, "Charting`Private`Tag$16216#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-10., 10.}, {0., 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.76610845793638*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"ef211e0e-504b-4f7a-b198-264ce85f889f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", "t", "]"}], ",", " ", 
   RowBox[{"Cos", "[", "t", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7661084646596727`*^9, 3.766108484419211*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"77d0b66c-6421-4c53-9d86-4af29f6024db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Sin", "[", "t", "]"}], ",", 
   RowBox[{"Cos", "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.766108484695105*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"46d91edf-f55e-4aa4-82ab-cdb421ae74bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], ",", 
     RowBox[{"Cos", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "26.389378290154262`"}], ",", "26.389378290154262`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[28]:=",ExpressionUUID->"45601495-dab6-44d5-b623-873a5ac7f147"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
PvTYtXHQKvjj5SdDw617P4hMz43Bmk3msSfdaKh6fF/j/YAx0As4PHaykob/
MqyR6/MoyG7N+/TLgI7hPJQsceVReHlNeSg8hI59Q9tvG78egVsnXT7e7qaj
/9V8NaPyIdj3KeWdrxEDW3fS/8gI9sO57UUCe5SZ+Fntzfzs9j7A3MHBKjsm
eja92s+/vxd6rzyZuB/HxGYbBz8f9W5IevTUdpKDhTei5TbznOoCTyv3kNSD
LNSJnEwTNeiEo5OvzO2NWWjo9a/a6HI7zP79mjCbxMLf6HQ/7EobiPCuGf3c
yMK4zp7bOWwueT62UjIjWJioVz7vUtYMe23XX+dcRyBnkvIPz7JGiKn7pxZ+
iMCVsYFR8VgPawSqi3aeJvC/Fq2J5aJauKHe9/e9DYHrLIdHC/OqwWnyg8aS
B4H2v+zyf2VUwuP34cwzIQQGvmvq/OJWDq7cEtUSqex2Mw2xOe1S2HGm1823
hMDW057//dpeDLt7uYLuNROY09r7uPnLN3g4w5syNkhg7AGD+FaVr+A+7ZfZ
O0Vgu1HY6uTXX+DtW8tco1kCbwmR7lslJYCpV+9vo0UCby5v+cLtGgaVP8N/
9S4R6PP2iXXJMydIflN3enSZwJbAAsF9d/2R33J11y12fLhu2CxxbQz6/nSO
cPnLHo/hRIvMTBJ6ZhZ0884TeCVJ81/vnUz0UqP92kEQKChYmdc+koOp4uGh
+WQC9bgerzp4rgBV3Yt9enoInO4s831VWoKcix8q3GsJTPRcsdi6qQyb+7qe
puQRKFV9d+vKMxXYoiy8xyKewOZb9UeLnlSh1eM9WrHPCTTcI/WkMqsGX1Nr
o247EPi1vgnmxuowz8F9d/VFAvvic5kS6xpxc5UdX5YigdypRt2Uw63oFDF3
TeMXC7WffCpxOtGGfcdebGG0sPDeC9/BDON2XB298EE2mYWptr3vq1w60eup
zLfwcywsrG+nOft24es3ihwVu1g4fqRw1CO4Gxft+d6GzDDROEvVR/ZTL+77
eVxQne1pmWW507mf+1BkRfWeXQZMNG3k91bJ7Eevho/0YmEmPjlcpryYPYix
hxrKD0Uw8ERYpDlv1hAqrRq5L2jCwNRztz7Wpw2jB+2/5SJhBh57nKoSoD+K
eZ9ZzUH+dKRbSCkV1I6idMgS3/djdPTe5iIXqTGGRfKOm1tnaRjhQ0o+Kz2O
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
0S9jAIcPBrz4bMqCl/GtyWI5/TiDNrsvRbHg8csP7+7l9uGVpkUjrC4W9C3P
SvqZ2YPLebdnGp5mQ+1TpTP70rpR1TLo6y4/NrjfHePyT+zCpev25OTns0Hc
5LhhZ0QHiqdKGnOLk3l0NO3zbGA7uj2yUftymgPqVHffR15tONqnXL3iDge8
/Uu9Dlu24PgHjc159RwYiNpmEKjdjH4z7Z95pjjwSZC1XO5aI7anHlSfWksA
X7ih9W+NesxJ1FfyUiBg61ltnqjNtditPrzqvSEBlYvVHilMkZzxSr1x3oX0
Fm/BsN9lFbhdu/RkRgABO0SjeYTDy7AuwC8sOoaAo0Pv2tNsSrBZ+HvUuiwC
7P/V7qZZFSHYx1dtrSSgIRc5G+fysO/Kmm+FHQRsUOvz0Q/Oxu4Pocq0UfL8
+xe9HJL4gn7Dngbv2KS3tW9dccQpCcdYcpJj0wRYZD+5VvLsHY7Wa63MIT2N
iOR/KdAcjG377r1fTXrYvT8h+VsibEDpSGn0PBk/VKF1GPWHArdnjvLr//Y3
eu0XeyHjPVhf2sjcQJbPiXPUc5hOgrlzA303yfqdjtm/Mt/4BYKdHa+lk+fv
9q+MHjjyv4rONKymLgrApRAVQlFJQpSSkqSkJYWUBs1pQkrSQOiLBlIkGkiT
lKIkikbNWU00z/Pc7d7qzicipPiun/vss8/eP85693rP85y1P4Dr8lzFejIB
fCYf33yzKoGFbwI1H/sIcJ5edDx9vQIubD82F91AwIKxkBalrhISSP7l+iUE
PMtV8VzoqgZmpqQ8JZ2AIEp+eedoLdg/b73lEEVAx0UT0KF+hjI3YxH0JaDZ
KnO7wkw9jM9d9+J1JOB+1q0C97lGmLjKfVBJlwDuTj7T8flmwP0P1I/LEVD0
/u01ekA7JGifKdvPYMMhabMdKwI6IExlKmh9PRu6KpVaFnw7ofbpYyHKSzaE
FzWoSV7rhtiDrhHnTDjeZrrMXN6jB/iGySMiO9kQs6VsbZNzLxQ2YV7dLxYY
eo1K+5r2g4+ysqzcUxa42NyKvnR8ANRL3DQpTixIKNozmKk2CDN2o5iuyILS
b99MhjYOQ3GR51mLSib0ZPAkHqgcg5/Xn3Y01TNg/MS2jmsm46ASzBI8eI8B
qoM/9AprxsHZ/snHLi0GtErJfO95SYIn7uGkJ/l0EKxbB6/WTMB1x5Ku2ot0
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
0vaoEp+74H93QGLt
      "]]},
    Annotation[#, "Charting`Private`Tag$16809#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.9999999923269124, 0.9999995501054636}, {-0.9999926949293532,
    0.9999999988041484}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766108486186534*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"9a684797-9e07-412c-9ee0-e99a3bcaa0b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "t", "]"}], ",", 
   RowBox[{"Sin", "[", "t", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.766108492081416*^9, 3.7661084966496363`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"5f00c648-05db-417d-8d3b-4029a5df1456"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "t", "]"}], ",", 
   RowBox[{"Sin", "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.766108496930402*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"5cc4d3d0-f6a2-496d-a8d6-9fb26dd5451b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Normalize", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], ",", 
        RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", " ", "t"}], "]"}], 
    "]"}], ",", " ", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.766108499771482*^9, 3.766108510605276*^9}, {
  3.766108647503393*^9, 3.76610864782583*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"7c7fe2de-a92a-49ae-944b-3c5119bc06bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"\[Integral]", 
     RowBox[{
      FractionBox[
       RowBox[{"Sin", "[", "t", "]"}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"Cos", "[", "t", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"Sin", "[", "t", "]"}], "]"}], "2"]}]]], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], ",", 
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox[
      RowBox[{"Cos", "[", "t", "]"}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"Cos", "[", "t", "]"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"Sin", "[", "t", "]"}], "]"}], "2"]}]]], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766108513324595*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"bb412e4f-6e27-4c69-8c76-046c2ef72f7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Normalize", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], ",", 
          RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", " ", "t"}], "]"}], 
      "]"}], ",", " ", 
     RowBox[{"t", "\[Element]", "Reals"}]}], "]"}], ",", "t"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7661085214566803`*^9, 3.76610854313647*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"f403b947-aec1-4b64-9450-71fbc73ce512"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "t", "]"}], ",", 
   RowBox[{"Sin", "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.766108530312709*^9, 3.766108543839299*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"3eaeb485-b5e0-41b9-8974-4a67e15cb434"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"x", "[", "t", "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"y", "[", "t", "]"}], "2"]}], "\[Equal]", "1"}]], "Input",
 CellChangeTimes->{{3.766108560469016*^9, 3.76610856783772*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"d88d83e2-19fd-46f4-b3c5-a5bce5585a65"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"x", "[", "t", "]"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"y", "[", "t", "]"}], "2"]}], "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{3.766108571505019*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"e667c86f-5fd1-4a89-8334-93bd2bd82724"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"x", "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"y", "[", "t", "]"}], "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[34]:=",ExpressionUUID->"80b94240-2f1f-4b81-bb56-63c2231c45b3"],

Cell[BoxData[
 TemplateBox[{
  "FindInstance","nsmet",
   "\"The methods available to FindInstance are insufficient to find the \
requested instances or prove they do not exist.\"",2,34,3,
   17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766108574783629*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"4dd26aa8-3572-4853-af00-cfd290b898d6"],

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"x", "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"y", "[", "t", "]"}], "2"]}], "\[Equal]", "1"}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.76610857478763*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"5b42dc26-d130-4e1c-a055-629b238a4c03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotationMatrix", "[", 
  FractionBox["\[Pi]", "4"], "]"}]], "Input",
 CellChangeTimes->{{3.7661086502330723`*^9, 3.7661086663340187`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"2f0e60ce-c3b5-4c91-8b3b-20c25ed334dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7661086666425323`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"66797fe5-730a-4da8-9f62-e8357caebc6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"t", ",", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}], "2"]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], ",", 
      FractionBox["1", 
       SqrtBox["2"]]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.766108672791276*^9, 3.766108689112135*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"76073de5-d723-4803-b795-dbc5bfd24904"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["t", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["t", 
      SqrtBox["2"]]}], "+", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766108689664755*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"47124adc-3448-48dc-bedc-1fa30628ef17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["t", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["t", 
        SqrtBox["2"]]}], "+", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "24.`"}], ",", "24.`"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[37]:=",ExpressionUUID->"0bd0f343-dfa8-4fd0-a8b4-5a66002e84bf"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
L0nwg+uI762b83jgTfkNk0R9i0XfLoj/N4efydC4MY1IsLau603Dtjm8eqL4
/J1qEjH/T5CFy/7hLzL/Tuk1keDII5b//YFZfMNt1XyLcRLsTleqvao+g1eN
MuQeKRD9VxA+ziqexrH8aC/lzWS4U1KoL6E/jf/o3xpvoUmGU0lOj60uTuE8
HrkFFwh+cXCapv2emMR9v6fr/ztLhhMNJUX5PpP4ZpZ9d5MNGfbmc0psp03i
/C67TEadyPBM9QC3c8oEvkUrcFnpFhlaK6aLI7Qm8K5ROWR9hwxHv4nu/lY3
jns5Lys98yNDznsB2q4r4zh9dexU3gMyDL9MCFjhHcdr/SP2vAohg7at0aMA
gzH8yMrK7dOPybDl4Y2/BqGjuGVer39eGBk2fmf9DP09grus2/3mI4FvckcX
BSqN4OrP9lANCfvj/KIGV12H8ccylEpbwp/pat7J2zVDuFV8WO9MIBl8Z7wL
f28ewtcn/nCc8CGD7fRmi4yIQbykJ8zK0IMMa85vG9hGGsR79e+2r14jw/pk
ZqnHzQHczeMGL+kSGUTLuRdSR9j446l19MNnyNDB56Ta7czGR9fsu/Jdn9Dv
sJ7Ltn/9uPMm19sP95ChglFq/TagH5dJONTmvZ6It2Bm8Ix8P+6z+PrsK3Ey
eI/GXtD/3IfXjW1uW1whwbNbGXbeln0447iph08/CXqOruOZoRL4+fobGjUk
ADHvsDeoF28ZJG+VyyZBS5N9fqhnLx6wJ09nJ8GvmUbnkJh9vbhYYY+zvxsJ
KobuBWfx9OLXdoeGipqSwCvZ53XZHxYeRVlO6VAngX5H3pmsDyxcvbi9eVaE
4OuyTM7ZYBZecdWhvPjPKrZv3udWzFUWXjBNW3PowSq2s/C+yoGzLJwVNR4U
pbGKnXFYs3HjURY+p71aUdG1goXdEOxlHGDhHGD/ZiJoBcvN8Woa3M/CnyaE
jmzbuoJVKz0uP6XNwrc49exMqF3GNk7y1TGPsHDlB/dHLa8vY9s/2KVTTFi4
7ubs/WFCy5iTxOayBjsWXuO5ZerE2yUMjHRN1b1Z+EPLu/YV2kvYmL9HUWcM
C/9TedBFomkR68pJe/Aon4Vz5QQa2lxZxFS9OD8NNRP4pJZLy8oC5j3kn+iy
vhd/paBxp5OxgLm7C5+cPdmL15z72VOWOo8dC18sbfTpxQONdzne1pzHJkE4
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
/SsbN+eYNqKdnMBEDOu196QR2GTO6XnRBPb19SebyDA2fgdPllzZMIlpNB13
1rzKxu0aTufQYiYxqczWR+76bHwqmSMum3cKyxG7QU9SYuNzSoaNg4NTmLjc
ZzP+7/14Q4ztnFvhDLZV67BvDDdR/ydFs0c2zmIkeUFlxu8+PMTreu3BmFns
qIyc8KnkPtz0F8+QjMs/7AC9Q2b+ALEuzqGU1vUPU7CxMFgS6yPmMotjv4/N
YbNichGNxBx+x+mUu+G6eUxoE9N7T1Av/mSi+YhJ+Dy25d9DD+MLvfj9N3ad
1kvzWMi5vmHrnb1497Lr2RO2CxjNH2IyhXrxxOofLkvVC1hbAS+n3yDxzmm+
8t+hHYtY000wkqli4SUxfDyUmEVMueou89M7FjFXKedtWlzEZMuLLrx4zMIV
I3Ljgs8tYbMeNDWKOwvPfbQ/gb9wCZM84/51tw0LHzNxygmiL2N9sU/A+hQL
332H0TnmsozFKKQ8wPVY+E1UaaJYs4xdcqrcE0C8g7KDdXy5lFewLe90/QaI
d5JPYb+oz+0V7I+sO6cMsb5nfIT33vcV7HVgd94hYn/XpHLFkMwqlnh6oDma
8N9g1EbPsFvFSJcnandfYuGtdzl1CzJXMfVuWaljd1i48SVvsfm5VewJO465
QMyZz81+26YxSCCi8tngXCELDzDweXcZI0HqBt/mMBbxTts+JZF2gQRpNmrf
M8R68ZXNX3Zd8yLBKf1rPbWHe/HwDXY3P8SQ4OjW45E8xDsprrKWw5p4h14K
kJ09/6UXd6bfnHtYTQIbSUG8h7cPn+7pABUWCSLwX3tfniLm5ozppO0LJGBZ
Th+Ped2HF7F8ytOFyPDPWsPhB6kf3xbrrRyvSIarNgUP9ln248r8JczV7WTo
d1uD9ZT341wVB4caDpAhyzQiI5eY8yMle2KUjMjwiR0S+yaJjS9uyRMdPk8G
+7P5p1NlB3Cubd3iGg5kCNrgzf4QO4DTGcvqPDfJ4K4TxBstP4hf0F5ssPYk
w+uHvOuOvR7EM16+XXvSl8CdZYF5GkN43IN8uY5AMuwR59LN+D6EFxsaeQiH
kGG2jnZN+tIwPpp3rGAklAw+5CjhKu4R3CX/H+1+GBnS6uz0Yt+N4N/NrW+2
EThCXN3x/KlRnMLldJObwG2H7/H3c4zhjP1mpnzE/gY1fTp33hiu8JWTa+oh
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
wdZT1eMKED92y6HPfU0Y9rxb52HM4v8ARPUWPw==
      "]]},
    Annotation[#, "Charting`Private`Tag$24773#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-16.33788377459019, 17.677669529663685`}, {-16.33783494668773, 
   17.677669529663685`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7661086917550287`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"f0b8fff4-c382-4990-ba4d-491c8b9d9667"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7661087081970043`*^9, 
  3.7661087089364567`*^9}},ExpressionUUID->"7374a211-403f-4cd6-8b45-\
ee41bb2e78c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Pi]", "+", 
  FractionBox["\[Pi]", "4"]}]], "Input",
 CellChangeTimes->{{3.7661087010769053`*^9, 3.766108715052602*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"04ed0043-5922-42e1-b48b-f3854dacd543"],

Cell[BoxData[
 FractionBox[
  RowBox[{"5", " ", "\[Pi]"}], "4"]], "Output",
 CellChangeTimes->{3.76610871548352*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"4466550c-925c-4e70-b6db-5c4747d67c73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotationMatrix", "[", 
  FractionBox[
   RowBox[{"5", " ", "\[Pi]"}], "4"], "]"}]], "Input",
 CellChangeTimes->{3.766108723985599*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"5f4845c7-a734-46ec-8f6b-64f0176ad62f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.766108724904749*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"807c9cb5-9db2-4714-af37-8269bd5c5f97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"t", ",", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}], "2"]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], ",", 
      FractionBox["1", 
       SqrtBox["2"]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{3.766108736707917*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"80adf7ca-3c43-4239-abe7-9d6308183fc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["t", 
      SqrtBox["2"]]}], "-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}], ",", 
   RowBox[{
    FractionBox["t", 
     SqrtBox["2"]], "-", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7661087372070208`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"96b435bd-90b5-4fd3-a734-5838e0670141"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["t", 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]]}], ",", 
     RowBox[{
      FractionBox["t", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "24.`"}], ",", "24.`"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[41]:=",ExpressionUUID->"9f634252-071a-4c1c-806f-2e789fc32ef1"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwUl3k4lP0XxsuWsoQZy1hmGMaMYRh7peXYKclWWpHK0qLIkiUSiqJE25ut
pCRLKpSEY6nIkhQqKUqLQhuhwu/7++O9uj7XM8859znnvp961bz3uuwQmDNn
joAY+Y/8+Teo8GWgJR/u+FAwslgf08dMd/UDH8wXuDfeva6PEu+iog4t58OQ
+Tu7xnx9/O3cMei8lA+qEx6h2Xn62KSZ4OW2hA/7bCNSbS/p45SS1Kmji/iw
Nax2vDZLH+8kmk1/MeHDA73tDNEL+vipyl862pgP5Woil1TP6iO97QMDjPhw
0XgjZ0GaPlpUWGzlG/IhM7At6kGKPn6JbRpbbcAHaot8jGuSPsa7fOs/p0+e
M+o45fFE3+wnigRh4/Pnj3+N0ce4P/rbi/h8GKijP52I0Mc/hstPBRNOLn63
uDdEH/XP0q22Ew7Z16l8bp8+nnxoLhVBePGOmI86u/Sx5v6S4DLCOqfXKWTv
0MfMB+mvpEn9faVttsOe+igQXXQhlbCOSoIKbaM+9qzKndIl+sKCPd003fRR
p9tC+ythq4Un78o66uOJiXmuDWQeIcoFzSFbfXx4UTmhnMw7fGLtsVxzol9l
56Naso9Hpi/6LM30cYNGsUw/2VfW2h2cJ0b6qKKR5kol+5yKcDpoo6uPp7LD
DUvJvh+tnN88V00ftdb1T4SRe5Wz32/6LKyPVMNbT/+Yk/p7B+SlZ/n48tbb
/hhyX3vZ+GzTST7K2HmFHLXhg8vjy8ZHv/Ax6pair7AdHxYkVL4se8/H6K5D
/lH2fOAeVd8z9JqPHk80Ljg4kP31MPz2PeGjN13F9dJqPlwvnrB61MTHyU9X
jT468sFo/vIpXj0fFzX7yNOc+CC32rHoahUf70X09pk686EMCyINy/mYY3Mk
BFz48IP2JLy7hI+HwiRe8F35YCCpUHzqGh8d1daLz3Pjw5GkLEnfXD4WXMtl
1xFexVZPWp/Jx72Bxx23rOVDftyCSd+zfDRWk694SVhwylHzXCofQz8V5hmt
48M792Ntn47xMctccP9uwn1MwTObEvhYXyGdEkP4VWej1FgMH2nig0H/f345
tx5vRfBRITywUp/ww43CUv+F8JHh5y3WTuq/TR10vbaPj5/XtWgB4UWPVrUM
7OLjnn29w0eIvq5OsWwbXz5eOhRtdYnM0/Bp0eseb7K/oR+LTpB5NfPOHDzr
wcffNg5fHcg+SneJbY3byEdWxMSZ12tI/y18h5x1fDzzXDllKdmnK6f3yxcX
PlboCK7YTfbvNt7Y7rOGj4Nv+zuWreTD8ttOku2r+Kg48/Fqly3Jo0jZ/L12
fAx4fj3Q0JrMf3GD1EprPk6cV5znbsGHvatdHTwtiN6o896wgg/SvcvrS1bw
8VjudN43M3J/TUvnRcv4uH02nrqD+M1uCev23yV81GRnK18ifs2MC4maXET2
y7u2Oo/kY/voc2VdUz4+wtOb9+rwQavV+W2GMR/PVu9nCnL4EASvv5Bc48r4
Txle6nx4/uWphbIhH8t3Hf6cSOdDTPDFRzoGfKy+K7HyII0PJ89Hmwbq89E8
7Z76Ciof1Phmep/5fIwMXTb1RJIPs/fVtFMJtzQ+36M/n3xP3v466kv4yr8l
ljsEyf1pE3G7CU9UL7j56o8eNLDlIIvw+Pq3zudG9WDTKtm6CcIVKdpnhN7p
gXTui+/hpF+V5KJXml16kNdZlaNG9Lx1PFEq0KQHhep/EoYJp9vM78q8pwef
FTStXxD9a6Wadf8U6YHqlRv+78h8/i5irYwcPeCNh+0WNSH5mhK+9+KwHojE
rz6fRfZV4SXbFhqsB6vM9bzmkX1uEfe/9HOHHpx4HWB72IyP1t5FKhfs9KCZ
oqpzcTkfU9cPmj5drAeVSXv2LQPip6r07/+4emBnH7Oj35yPGWUHk+0l9GBS
d8s9bXLfzefDlUNndEGvpMmy3YaPGDKcWfJNF06XTj7fSfyQtyfyxMZOXeiQ
E4o5QvzyKnLu3pcNutByiNs/68BHh+eh8pHlulBgvaHP15GPfkf6JK3zdeHW
loW3q4jfmIp29Uv/04Xh+Ibrk058NHi8Kdb3uC78VbmsrEz8GVL8IeLxQV0I
zLINVHfl4y6BhMqd+3RBYvtWdXE3PsrV71ZdvU0X1oyvq3tGeHvqcr/QdboA
MT2jYWvJfaXmKn+11wWHUk+f34RHUw3P3limC1oDN/44kDyk/5gz80hfF0Yv
GZwPJ2yVmm61SFMXihpcbCIId4wdZwop6cJBAeSsJlzblyGrJ6ULKjGXDn0n
9Q4ssvW4L6wLPRblxd6Eb4W2Tpf85cFT6ma9XKKn9T/jsvk/ebBxLPVKMdF/
wyB9pv0zD2bPtzyNI/MdDPeWndvPg1KftnPqznycjmd8vdTDAxGX9TPHyX4E
UoS0bz/hgdKKJ3r3V5P9iEyYmjTx4ML+2ojbZN8qdpe1dep4cL/BxSXQnnzv
5vrOzK3iQSbNBNRs+dgrOMBcVs6DuauWJ2Rb8VHtD7b33eBB0OF0kSFy7xfJ
dTPvr/OgYNeLB3NIXl+ZXg9dc5UH9+y0Bj4Q/3yRCaxj5PLggYRY+nniN4WI
KH23bB7UJa80oJE8WgcKDXy9wIOqhhZ9P+L3+cnptz6c48EXP3vVIzziL+l8
ZzjDg5svhK7t1+KjjmCA4Z80HsSk+ZzQZ5Hv+/mr56RP8UA74uRtVOVjyb3/
kuJP8uC9Uq80U5nM+8FwwOkED4wWu1avk+fj3f4lVsEpPBAcpb73lCH++i+H
PZzMA4fG/KblEuTvh81fO8oJ+8vatozN4+O+4kfu7YQ9GXTPOAHy/GVOvgF5
X/nAqPKLKT3Mcd8U+5Zwr0f1D69RPRyczz/4lPS7L70/L++dHr5fdVxcOJUH
A0a5DVe79TDqkVRUKNEbQM8X2PVYDzlfi8fV0nkw6HnadLxaDytf4mFBMm9Y
t9gG+5t6qJrtLClP9mEUJhy1K08Pm3ZpWzZk8ODFfsjjHtPDGv/aFa5knyK9
Jus6ovQwZMzqo+AlHoSUm3ms3auH0/sb/pWRe5jO6cxb6KaHcmLFvKICHli1
BzEdbfRww6b/Tt4s4gH7vdTe6EV6uCJxz8yzWzw4fsh5yyNlPcxjWmT8rCH3
jLgaEfNBF59z/9zsJn4p6jkg87RHF7Mbk4wuN/JA9PL+5Use6+KKdf1a75vJ
vXr1r+64oYulvyWzVrfywOdiygA/VxftH32PPdHOgx9GJoWsM7o4aCB94lIH
D6J0L662S9RF1fe3Uw93kt+/PzqVGamLJcm6IbznPPiXfa6BvVcXrf4ZWGd3
8SD5tErusLcu7lMS1X7azYMjrzp3fluni2olpfvrif8niso6DFfp4u/0mdSA
F2RenR9bq1foInPbKaVOwsvrPyecNNLF68trnw8Rfr3KOrJYi8zT5XPtFmFJ
Rc46RYYujiYUlGgRfte+d+YFVRfrrifzHEh944XyusMLdNFFJ/aCPOn/+GfR
3nVzdTEhpCMjieitkvysrDjJw4sCo/MvknkefnTbsvgbD0+3FH1fT+adPKzK
qvjIw4jX7qm32nhg0jNrmPaGh5XRxR6Fj0leLxhRn3TzUKhpQNntEQ/Svsga
pT3hoQL13oGsBh7AIteKsiYerqfeOH+klgf1T/cHm9bzsNBcpUeS5NdwuRJV
6T4Ps3Wy640reCA0ckPEq4KHdbnW9L+lPLgsRU8SuclDfmL9gEch0dNYcVmy
iIfnXLct3nqFB2vTtbkH8nloz51JEMjhwY51V6ssLvPQreD+ZsvzPKAHTtfv
yeHh+bCWIxrEzxeWCoVNZvAwvHVkTn4SDw7GTrwaOM9DL9b4n5ZY8v2qF67l
nOXh8/0qPafDeXBV4he2pJP6yo5agoE8GJ/pcWg+xcMiHahQ8OOBW+LfLEYq
D5fCsaAeDx4kSj6qbT3BQ83TabHma3ng7fb8RHsKDw+/8TXasIrs9zL1HpPw
xyOxomrmPNA8I9X4MJmH7cO+VzNMeDCneYXQXcJ+Idb9Ldo84LwKu/aL8FHN
raVlqjxoqQ+sCCXvn7kYZ7pBlgex77ZLLCf9fNfaVt2fz4P9jyp8bU7yMHbQ
Le/dtA4oddZsTib64lOTo9p/6MCr2kxv8TQebm9RGYn7oAP36Wod9WS+6v6U
+yIvdYB9+eGbwjNEX3tJ68ZWHahxrCpqOMfDAy95t47c0oGyMN+4vZk8vNt8
Bn2u6ICJmqzr32zyvq7rQc55HRhfuyf4yiUeQvtxU++DOvB7yDPUktxHqNal
XMtWB5Z6fdunfZuHZW/UK08t1gGnV4ar9Mi9/fIUame0dcCjxE1dt5KHsz+q
rk9J6cCq069/LajlYYjMxz2pgjrwn0STZH8dDwVctw0t+60NrT5egdmNPGxW
YjmO9mpDytPmpgfNPNy3Uez2VLs2XNOZMtds5eECg/F6nXpt6BzVkPJs5+GX
xrJjx8u14dZ4hObuDuLHhKRZWoE2lLdXnbTv5OHCN9P/ejO1QVZqy75fz3h4
/FanRVeqNmzoyhL16eJh1MBU0PwEbdCB5Ios4v+h5xcXRoVrQ+zHPxNne3i4
39ghnB+gDVWMHbsdX/DQu0F4RGubNqRq13Uj4TXOWYd3rdeGHaYrGF8Juzyd
5k6u1gZN5zG3x4QFN50r6bTUhsVb993YRFhL+G3h9GJt6HJanppJ6lt7fzgT
ydeGyJTV8cdI/9feQrcd2dpwVdPKWp3oe3lMK6ZaRRvc+b7tS4j+j2JN+85Q
tWGyX8pgiMz7jFzhhZg2VBaPW+mQfdS+SuQlCZJ6If0MgRYePn3fHHvtLxfk
sz+p+j/i4d8DcWKLxriQsSR02LPh//unvV00wgWLNE7Ahxoell+QbC78yIVl
UZEvJ8n9Mtjxq0/1c0FYzfH6f2XEb4WD+UOvuPCl3fjKoxIy/2zN47IuLhQX
Xe45fI2HAYXtnj87uLDU4PW5FuKf3bkGTZdauTC8G+NzL5B+CzuV65u4IGTg
nyBK/Lr016iuywMuHIg53TRzjIcJSz8mOtVzoc/3Q8ORwzxM7lTeW1XLhXjB
CYPccB7eWEAbSK3mwsJpCznXfTx0bHt0ob2KC/Tdr29m+PCwKntYNugeFzxb
Z49HbybPc6uOH6jkQsSfA7tmnHkYmp75+81dLswx619LtyXfq7Oy1FzCR/xv
pAyYkX7XX/vUELY5yk9dxSffn52Si/nkfZ0pG4qXBg+5dxOzfxEW6qMKqivw
8FOnb5gQ6T/+62DMeTEevjDPC/K4z4VbFUkvG2d08OfIE6lpotdm6dXUoh86
eKrw+9VeMs/a0rY1boM6qLMjdOt4HRf8OKlfsFsHVUVW2Vo3coFZKbhxokkH
RY3+LH34kAuf72dW/rungw7do/P2N3PBxeG7ZXeRDi4sLShc8oQLX7serFRK
1cH9mxTDPvVyYcWPkOdH1+pgRpI28N5y4cFYkVeTjQ5W5BdZBr3jwnrR4Fvz
F+ngl+7FzPefuXBoaVj0FUUdzBpemSM4zIXI9SXrxMR18A6I54p/I/s2MS5I
nNbGDW2B8+qJf5rFvUbf9mvjjxficdsmuPDWQKKpsVMbF5zjV/dMcSH4qv77
7kZttJjeFEf7R/wS6BikdEcbU0ulGtRnuLDy+8DRcwXauKtvQcqPWS6ojOtR
nDK1cbjcWyF6rjasdFTtsz+pjef+O/OgUUAbVmcaJyQd1sbsqWC1OuLvsT3Z
0ZRQbTRWmfoUIKQNYlHeEsP+2hj0d1zkMeGoJ8WW8h7aqLi/9GI74cNJZrPn
XbSxe6mLZDjh4B8DH4NttXHPfLN3D0i94+vM/UqWauMNV96Xm6TfxLJz5XYG
2tgUv1Z/CdGTvPxOgw1HG6+qcQU2E72bn3HtCunaGPFLkLlimgvcCqckGTky
v8IM9cEfLoDNuoluCW18dvmn5TDZj8rerVp/hLVRcLmiw22yv/SkxYcPznDR
Wq9jVuEHFyYc4vS8J7gYRFnsq0zyGKCiqFXwnYsqnS14n9zHn3KU7/qFi+pp
92On3nNhvujZDq9BLjrtsV/X+YYLhwdEt5A/Mb3ys5rtSy58sPf/mf+Si+bt
62fdn3Ghd2gyZOA5FwuWngLhNvI9IP9rHd3BRY34MwFriL+WZ1U1Rbdy8fpG
LXtT4k+PSPaagSYuVt/2eVh9hws/uocMrjzg4io0lhm8QfrHKNo113MxwyA/
pTCfC1vqrvEckIu/1PTbZXO4UHiE7qhTw8UrU+2ZGme5kLPtUL/vfS5GfRMa
f5nMhZ3MlUP/7nFRKuWR4KI4ks/FR82GKrn49qOtpnk4F5xPi0RwCe/QvvJ5
IoALe4UKFEgucdYiXshzO/HnpeYtlwjfsD3hGb6BC4HOtdueEn5d0D1/pSPx
2+VQxVXk/cRBraXPLbgwqKJuL0b6BZVar1My5UKmyLxUySouit76+5qpzYVr
lU47nYm+TwUrDozSSb9QcX5HNRf/LWH+iJUh34sLWgpHa7m4dHul3oAwF3xY
aUuC6rjY1DWxSGpKCw75uaalNHDxo0uwDmVYC0Quds8+J/tK3jz96MpTLbg+
66DZ85iLYfZJXQcytMD5Q20mr5uLKxzdD9SlaIHemR8b9ci9GHP/XJl7SAvG
zzqeWPyai7H2BgaR27Wg945so9s7LrrFSn5+ztOCTJdFaRqjXNx/+njiJlUt
UB+75/KZ+CX9jVHUjIwWFHhI48lfXGz8vYBfL6wFyn+X7JH7zcWX/PGZ65Mc
KAxxmg2b5KJuzAa96q8cmOz9qlf6h4tbC2q//3vDgV0+CU/u/eOijGbshoBO
DnhlNzxKJ37Ventku+xDDnz7r1rFdI42fmDIfRuv5MBLCd2xi3O1cd5gcQWl
hAObZs6ktAloo0HF+LqgXA509692rBQk+TOvtZU9x4EX8+NrvIS0se2WUu/s
cQ4cXc1ORsI1PxLMjGM5sLThfnIX4R/I3Hk3lAPF1xi1mYT/lcovS97NAZs9
3NUUwp+kV+sMbuXA1/VsE1VSf6P2LvlL7hwQTTZTbyJ6Cjvs3z9YzQFbw5N6
okTv3cm1+mutOPDYvbyyb5qLy2+83uJsxoHnI147bP5yceDd4ej7BhyoExlR
BrKfE5Jfvc5zOXCVfUemeYyL77OTkj4yOTDwfmX9W7Jvre5rBteUOKA9teXH
4WEu7urMXPWGyoFw+8zSm5+4KLaEcyBJkgP+upabd5H71fySlrouSvTXHc+8
Qe5brztMB0EOdHa+3xFN/ODTL7591QwbavaMT/Y84eL9qjsuLVNs+PMm6t19
kkd2YrhM7TgbGJ4jf3jEfzkZZTGsn2wwPT+4Q4f4fZOKh870KBvEtu05VVnK
Rc2zX72shtnQYSJj3JPPRY7RPpWpITZ4fKh1OprNxRnRIUXaZzYobAnXbj3N
xcidd1ovfWSDtl2f87VjXPzvkJ136gc25ERHn6YfIvsY+dw0MMiGJR5SIgYh
XCz2aihOI1xo6jf1wZ+LaU2ih3IIr1NeO7vMg4uONbBfiLzP3b9mcJkLFyUL
MLaa8J/nc0uGrLmYO8du70PS73dz0XnrxVzkT9e2KBI9kzRf6jod4sevyr/L
iV73A0vrGQwuHrLxZKR/ZcNjf53AfGkubr5ya3XxCBui3cWUfgqS5/uvec5+
Y8OXLtsBod9aGLWq47cx2Zfkufg/515q4ea8lFMLJ8l+j02ZqrdoIa2AZiH2
lw2nOnM8k+9roUzWAkGXuRy4F0ZZszBHC5errz9wSogD9OWTN41StfBDY9vz
3nkcmDdUxlsTq4WLHU/mhZP7Ppt0l4zcpoVPVRfuNCJ+OLj+UoErRwv93SL0
NOkcCAn0u/+QpoUmk7dVx1Q5sEhx6+UtYlp46Utu/nl1DmwJzhtTmeYgdUbS
XlKTAxHFO7UlvnGwrFDv2hoOB3Y6ROXxBzhoIcw+5k78uHvFnQspzzj4/bLP
S1UdDjiOFKhrPeTgEq9/167yOHD2oI2OaCUHQ0oaTQd1ST4iS0P0ijiolnLo
13M9DjwZ0ky7nMNBKaG2yGA+B/bVir/zS+dgte2fvBrCrk3Sp+KOcrDyGkbc
IPzp9sH0iUgOHk55amFJuEQp53LTPg4GtVrEhJJ6jlpeK/7s4GDFs87v1qRf
ZoDA1ZObOLjmzH+/K4g+nu5UfqUzB1le4q71RH/CoKWrvR0Hf3f9LdlB5nv3
TXoWVhA9N2zHslnke3Quri7XhIMur3TW7CZ5GxzZFLBPl4OJtJ16rWSfr/Ve
nynU5ODcbUvsqxU5cMq3OW4tg4PPd2mcXS7HgeG3mcv3KnDw54vstWukOfDv
19sjU9IcXF+aKPFNjAONWbe7x8Q4OFsTckxFhAOrpOK3bhXhYGtD+9tXs2wo
Sv5MWTGXgxtWPfBlk/ytPnIjPeUfG7WslBoESd6KJeXBYZKNuQE1L/Z9YYP3
Dn2DiDE2lnwy7dr7jg3xe0KWyf1g4zrOdy2BV2xYUBLxnT7KRtHvtslaT9lw
xLf/TNpXNgpePzL26REbKnU9jfcOsVF2KjtzRQ0buryEztz6xMaFeo9nDMrY
ML/o7JKNH9nYf+Lvs8YCNvi0Mfds+8DGdGcdmclsNgwcv2HSMsjGkejYL0/S
2XD7rbzPCcJW9Q6P1iSyIVFlwakCwqsjh+wjo4j+D1w5GnlfcGuY3bp9bGDF
bmS8JLyTGdwyuI0Nw6CU94H080owFtN2Z4OGp/zuJZ/ZmH3Oeg9vJRuo7Y3S
z4jeS+dzY78vZcMKR5ZwIZnnvdvg7AE9NvAol05Uj7AxocqusUWNzMf781T4
OxvHjhS0jlDYcOD9uqfRP9k496uASdmEJjyKPRA2OsHGew4ecW+rNeGhBsVe
T4iDj7nVp+CGJgw+CrTwn8fBCftQ0cyLmvBJK/TZtQUcjLPRObU+ThPu6Jlt
ZJL7pu83/xtnrwlb5ikv3KbCwT+nwua5mWmC6s7LC3RVOUhrDzi4kqcJ+jf8
MzuZHPw4t/b0boYmpP3rTl7FIvefLvOvldaEV7HZtelsDvbRVf/YCmnCxMB3
k6taHGyZMGCKTbDA9FiGXLQ2BzPnhP8n8YUFpwUo+XI8Dkoavf/m2scCJyef
9buIX9X2jxx718GCXWm0B2F6HOwNe5Nb3ciCt5Ify0z5HCxdqAFDd1mwaHIL
I5/wKqu2Rf7FLGizCtKt//9zEQ1d81wWnBV8CQmEFft8jwWfY8HGEpfhYVJP
ZfZ6tEgKCxIk2mbHST9Lk2dz/hxmQYq7d0IW0XN26f7asXAWeK01fTVXh3w/
WEsa7AJZ8GrfhyFxLgfbLs3pn/BjQchkev99Mu9wyvy7gltZcEBqjrIU2cdN
a3rVng0s6NnspSNM9jUR/JBl6sKCO/q8rgt0Diq0ZczZuooF9/paJToUyfdq
ppIxbMUCq1J1gTw5DvZYr2K+XM4C2z3zKHIyHNzzSD+Is5gFXd/OdLMkOMj5
1mb5ypAF0Bqg8IzcV31k4MyoLgv8O5+8VBHg4KB3mv4OLgtavU47i5D8rV4R
f32ZJguSEuWHk8fZaFop7xnGZEGDzNTKWyRfZXZ4QJrBgp1HH1iFkfz8Dggf
XqDMAscdsYOv37Jxu8T6SG8aC0Ra5P0He9h455/pbTl5Mt/bIquTT9iYlZDw
jSXLAvlNz5XePmSj7WrmxhMUFqSfK2rsqmaj/uIdw6tlyH1uvLEOKWPjVI3R
Pm9pFmjpxnfVXmfjQRGz2GYpFrR8+dlz5yIbL5gYnjhE+HnN3jeeZ9mobLrm
VTzh0PqmK/eOs5HNKo9+Rvjkix5qyyE27r5O2e1P6u1zH11yOoSNmpscdluS
fq+ucx1pO9lYb2Co4UH0bO+5W7DFg40nzbxlK6gsqOqcadnuwka1baoXbeVY
sOZGuZuBDRulgzYKL1RgQVzed4HHi9mYSS32E1VkAV2EcluPx0aJ3xyDWDoL
xnVipUIo5Hv1iOc1qcqCTs8f45tF2Pg6O1L1lDrRk6xgrz6liU9+XpGU02LB
I3gRu/mNJnJkdgZNaRP/s5L0X3Ro4p+lC18Ok/t9nln/xrJBE1e5/Cv4YcSC
gR9rjabzNdE2OM57DFgQ3p/bHBqoiZMrPhq+tGTBqEK52I9tmlg8tfVDgQ0L
tmwr2ROzjvC3Lotp4q/8EA3TL2aaaLe9dEWYIwv4wrWrn+hqYrYts6HFiQVz
NOv7XqppYqtdwZNfbixQ5rEm94pq4g+bZIfadSxQMrxzQvAfC7O6BZeuXc+C
M/llt1q/sbAt5fzrm8TfSWOnWU/es3DJYaHkpxuJH4WykyRfsDAnj9dcuokF
cz8OeZ5oZWGBhKSJw2ZSLzZaxKWOheKGSf9dJPzG80DF5goW0oV5A9cJfz9l
f/hmIQuVa78PehAWCubND7vIQi3nty/KSL150R9zLpxhITv2WngB6Uf70pjE
OM7CRXes6xcTPQpOT1pEY1n4tPLziLc7C04NPeNuCGPh3zV14cy1LAj7lqtF
CWDh4fzzmqEkj3OM9s9bvIOF18LM/2xaw4Ivs4E1rZtZ2DfWC51kfw30GIEO
NxYyHg6n9Nj+v54sWK1mYYi9TfVOsv/VAtszuDYsNExr+HWM5DVn7YlvcStY
GFPwPMeU5HXbK412p8Vkvju94ftIXp/7PYg+ZchC+Z6N8cY8FnwdHJmx1mVh
bfRPsaMkn2tfTs8N0GKhWRA/fwfJ41Cs7w9RFgsH/PVMOkneXDWlRmTVWChz
Zd67toUsMDj6tiVdhYVBD6WUN85jweDcaOVYRRYu2D+eeWBGAzb/AM3X8ixs
WvXfNu1xDSgps/qSK8vC8vGnt4O/asDTq7c1nlFYuFhgjOo+oAFbTBY77pRh
4fs8I6eubg2o07uYtUOahSMrBgJ+tmhAMz9jfr0UC/d+3XP3JmqAu1rFyijC
b4w3l8qVa8Bk0N6+VMKJIX8prAIN8HgSJvSPcJSS0Iv+TA2IeCDXUknqSaQu
1HRM1YC/w7fmPST9bpiObgiM0wD/gUgPZSpht74Zx1ANCPcysrpL9LacyG79
6qcBe+oV554h8yhOB+U5bNIA/veR28U0Fs5e/JsSuloDNn0WXzutxMJXznPL
AlZoQOqzkspoOgsfcjS3LtHXgLLz+ud0yP7sp/REvKka4DwnbN6kJgu/fmqg
NAtrQG3xsfgFXBbufHy/lTahDk6+i9cZ8lho3ZDHPPlSHc5cvSh7k9wv99/b
hbuy1SGiT9C1Clh4bMO7QjypDrnKBeZvLVno9/HUP16sOnRrX4r8SvxxtJBp
6rNdHbqyPddddWCh+V1ZnaXr1EFblzpsv4aFyQ5Ngyvs1OG78fyaWmcWXvAJ
zgtdog4/7wglCRD/vakpTPmgow74N5grsY7sI0Qy5xRDHd73V15+5c7Cy/UK
pTEy6qDEd1fx2cDCnyXzA8qE1eH1W4kv1zeS/b8aXG80xQRvp1dJeZtY+F3/
FAqOMGHOma4iR+J3i31y9ZoDTKj5OWF8hfAb3b9Wl7qYYNBxb1ke4V+GDyZD
HzOB53ueakdYPmDzmCcyYaGD141MUu/3JS3J7AomLDL9qZ1J+hUV2N0xLGZC
oqMBzYroubR1Rk89jwkZ5b0maUTv10VhRwIymLBhui40fi0LKbcvnZFPZ4Jp
7u9pBVcW9kazhFSPMyFk/CnL0YmFD8rDLJPimJDe9yaKSfLX/0j8pFsUEw59
ufbotD3Re+Ta18MhTDi2cvfcPGsWht5q1ZTdy4TJZfmb15izcKO7TbeYPxOU
7yZbnl3KwhR45e67jQk/RtzXHzBl4bMCqadsDybcvnwoZFyfhe5OqnqrNzDB
WLmjWEKHhcYjk5o9bkzwzF7nUEfySKXuMX7gROY7a/5cisHCMI/IHLnVTNDe
lTZnmvhz9F5F0GN7JtznVTQcIf6fvtKW8NaGCeVbZ2xuiLJw9Vx+uJsVE3ax
/g6FzWHhFZ1nd9gWTKDR7pi/m9BAy1+UA+7AhLjALvnvoxqY8aT8/sByJhiW
pflf/qCB1ImZtY3LmICF13xmejVw7cnv7/4tZcJRA7l9gp0aOO5xoTOR8Ehs
i1z5Iw3UWJq0Ywfhhw1minLVGvh895obJwnTbz330bqlgdkqmueFSL2Nqluo
P69q4H6R/DdI+Pg6s+37MzSw0SaLVkf6Wxjn1Zae1MCPIcOVc4k+LqusvDhO
A7/3JIvHmDNB813Q1J4wDbyWkbHU2JIJwcsaPMd3amDHn4NrVa2Z4Da9os/W
QwNvislZL7VlQqTYvHh/Zw2sFxV9E0/2tY8XHOthpYGbWR6vjzkyYdDx9Y1n
WhrI7JUOXuFM6t89WrJZWQPpNfn0heQeBmNOFx5LaqD818gNI+Re1sJmyb6/
1DH1TMFPpg8TvnQnOXDuq2Pg3VquLrm/9LPO6xtL1LFtW5ui3m4mVNloOJ+7
qI7LJJtCZwOZsOnVJzWLBHWsltXIexDMJH//fjlWGaaOVnUHpfeGMcFrx/fb
q3eqo8ux020biP+8X53TeLNGHS/ldG1Jiyb3GyznvrdQx18D/8ozDzHhCY74
yZmo4+nD0beCDzPBZEWLQJSWOnod+rBKLp7M69UwK6+ijs7TMv8dTCD3Exi3
G5VSR91ru59ePcKE0tA/VwWE1fGNwJTjiaNMEDVrq10/xUTZ9X6p/EQmvBSq
po6NMFHo6oheEuETC5hmC9+T53zj+f8RVnveyN7/gonJF+bCFsJO1e8qmO1M
jBK6pPqM1BPJ52WqNjJxaaen2iTp90Vnw9a995ioPD74vpnoKd1Ss136JhNT
x0NNbIje/lK5F6LXmHhWWkt2F5nn0GfHWvccJk63fbtuQuatjgn6NnuWict8
Ml3yD5L+ZqUSgieZSDldc64qguTN68AJ76NMHDLebRpE9lkrU17GOMTECb9R
1cf7meBuqHLKLJyJjvdcQ+tJfq8a5869E8TEI6qfkjfuYoKM+lRp2m4makUf
HzlF7kuhrZB74sPEj5F/3fy2MuFfQGXw7q2k//mR232bmGB/9Wbvzs1M3LlB
We/nWibUL9qj+did7CvLgHF1DRNa7cz/JbkycaFUptQfOyb4atV3FKxh4oPP
ixtGiZ/d8yQHOQ5MzFrwTythCRPUu00sReyZmNfisbPGgOTPr6YJbJg4fLGt
N4NL8vRpsUqPJRMDRb6KMJhMWNYlcveRORMNhGvy7GlMYHLp/VLARL2mB1kq
UkxovjenuHQ5Ew1rf4lmiZDvgXz1vCvLmHixN5n7+J8a5DlKFn1dykSZ2J9B
+T/VoPtfmtZhwuc7XA+aflaDsTnKH0iusXeuneTBPjVwV5dRPE14IslFJrJT
Dd6O/uidT+pV9zpnGj1Sg9rvr+XJdwMXnX/5vqhKDT4fXXG2lvT/Kh1u+emG
Grzceuzf5Aom0hd+M/l0WQ0c78607yb6ZetXbSg9pwZ/1ycHyZP5zk7M3WZz
XA3oYag7bsXEm/Gf2cXRapC/rFFPwJb0E+ad+RyoBuZSOxOXkH0N1xw7OeKu
Bptn+mkqjkws3CpneIWpBvrXZ1KMNjDR5p70HZasGiy5MvKETe6lf9i3J3Oe
GozzD4doeDKRKrL56qFhVdjs5m3A2cFElZDXxr/fqMLEolY/TT8mclzu0oOf
qkLajVfWyruY+FSjNOtChSoYxt9x6dvHxBz26PdVBaowv2vbg5z9TFQNUabI
Z6qCbi/D3y6U8JNuqzknVaHz+ZrpzgNMZJdkVIgdVoW99iHOZpFMtF+bcmRZ
iCr8Gt9je/AgEw9VL635z08VvAaudZ2OIfc6GuOksVkVPu50mh8dy8Q7Ki7y
A2tUYT/HT9Q4jolulk85HRaq4DMqbPQ8nomXVzz2FDRRhfw+rSV6R5ho/i/P
MEZLFf4T333ZnORDsvv3iK2KKnjQTTXnJTJxw9+2/K3SqnB5MKogknClv5Jt
h7AqPNvqYJtB+NrGiEndcQY8TLJd4014os8tJuQtA0oNJ+zaSL3taQk5EY8Z
sODB3/EXpN+74/FbrCoY0GtIczucwMTcnArzF7kMSJFVyXlI9J5N++ZmlsqA
S0ezXC6TefybrFSCohlg++KkthyZt3u/QcahPQxQGy3XUoliYpesrO3OLQwo
SxxIrSD7C3w/KWngyICQFPEv/cFM1AxGt1crGFBYai2UQe7h/v7y8HYDBuQN
7ht/T+7V5j5f+RmLAVOyvYpVJM+thXfOsxQZcKznIk2V5Jl2Z1vi5oUMCKz+
9EZmExOz484fChNmQJ3Fl5x0Nya6Rv45EvKPDqEG3S9zV5Pv244P0mvH6PDz
2kFnc5JP2pPt86kjdCh/+0pmH/H7PIsjTTc+0qFN2ncf34SJXiFCDNYAHUrf
WwnE85i41X+l677XdICu5Vd2azDxp1abRsoLOiR5XQgfVmTir6p77aFddFCI
wwFhaSZ+ivu3gPOMDjeO3T9UJcJEXHFcNuMpHVwU0hZJ/VNDgwiZ0uYOOuT7
7OLM+6GGz7UHWMWE/aYuXr/8QQ3XSrCclpPfLxrLcBl6qYZR3/ZcCOmkQ1nA
6S+9bWp4dEXovFXP6WBuwAuMqVPDLbd5JhXddHi/bVTuRZkacr4J+Ja8pMOJ
mxfNvuSrYWubXyy3jw6txcd23bughq860mlqZL4e+bTNq1PUcIXC7tDED6T+
W4uv+TFqmL7XamnsNzpoH08VaNqmhiH0os/TZH8rc8KHzq0l/dZcHan7Qwef
IJqGla0avmsQ2zkmwgDrk6petlw1lP60odpBggHL/M/uL1BSw2XaU7pIYcCd
W+8npsXVsK/YyrRFlQGJTRMjp7+pYm6fjpoDmwHGmaoV7/pV8YkO7809HgN0
vapPL+5UxXuPBBuNlhB/Dokp08pVcdavKEMLGNAc7zZSdFUVKzTYt95aM+Cg
jBHD67wqhr2eMHRYxQBurp/SomOqeGeTdNR2JwaotB8wWhKlio+nkxXpaxlw
+bN77q4A8n4z9AZsIHpHFWOeeqnizl69Vgfi33EnbNjnqopLFzy1LPFigNIV
cWtHG1VcvTrKccs2BigGHRe1X6KKFkeWR6XuYAC7MfperK4qihrnV4IvA1b1
Zg/+Zaqit7Gpma8fA67YFw7fk1fFpweVY6cJj1NSZOrFVdFgZePG//OqzJQA
qoAq1lSZf/EiLJdn89b/GwOVpY7mM0m9hzrXbzv0MnDe9b3blpF+Q3t3JnU/
YqAB/LeyyJsBrRVDhuLlDMy4tODzTk8G7DdQ4/zMZWDChavskE0MOCenG5F8
ioGJl/zXP1rHgNxhSu+bQww8Ix2o6+FM9G0oPzu8j4HXnj1uNCH7uxgslHZ3
KwNdw8VzHK0YIFi0y97alYFpn0uvX17KgE7avienrRlY8sIMjIwY0ChyouXa
IgZSDzE1ZrkMCFjqFH5Yh4F2vw4cFVRjgN3V3HymGgNvdG0TNZdjwLeLXneT
5BhYr+J4684CBgwbMy7eEWeg8JN3074zdLiz1fBjoSADPYofd7j8oMNur7G8
HX/pqCCpezD8PR3w9eJj73/R8ZPYX+wjeZitkn2hPkJHzfjvjbEP6NCh2rxD
4xMdb28LUPIrp4MzfeziuwE6Hv8iVpueR4ejwbMnNvXRMb9oTEo0nQ6RJ2vb
j7+k4z4TiZ6mQ6T+uzUX9nbTcd7G/sWv9tDBNJPVLPCcjm126+phIx1ijq3v
hE46FtwzcZ9rQ4eb46pPNJ7SMSY2bImaPh2+iiUdLOigY5LgBpGrSnT45uNk
SXKPMoYu188I0yGYOkc/mvzeq6zN9/eoCpjs4wnXk3rJ/yrb23tUQEH4i94J
0u+1w2glC1Wg+5RHdy/RcyLBZ5XANRUwMDnZfZno/Tzg/nnXSRUYrLBpefOa
juONqsY7Q1VgqFRTKqGfjgs7ZaWFt6hA36FXD04M0nHdRd00K0sVyDu5s/vX
Zzr+8Ts9R19LBaTyiqcKyf7mHz54xWBMGVSs5Q78mqDjhoTXyza8VIaXdK/A
wGk6Nv27dXBNjTIciDdoYJD7DI0VTLcfVYYwmxSfIUkGngzq+0hTVIb5y6Yb
+GwGjvuqP7g/owQ3NbzCDHgMnG/WFXbgvRIU6rqvUzJkIMux6b5HsRIUd5Ub
RS9n4Kaicw4ZaUqQ4HbS5KMlA78XiedSDyiBgH5DkLQ9A29v/bSq31IJNpgs
GT7hwsDIGYllahwlCLuqFsl2ZyDv9jC3U5zUn3GScNrEQO7+smXTPxTh9Kpz
ETMeDFzueN+xqEcRth/MGuJ4E32NrHefqxXhJMWi+8F2Bj6k31W9n6cIeQ+r
5Vt9GOhT+fupbrIifFmU8tHAj4FHmaHr7IMV4cZrpXc/CB/K259L2aIImb46
cnP9GZjXcGvRGRtF2Lj27+x68lxw+jKri68IbzkK6T9JvfxPPX9eKimC2qqf
yx6Rfoeu1T0umKcIuufkRjtI3gpCWjRWjtHga7cidQHR+7G0VhoHaJB2zSh/
zwby+y+JUlIdNHgdGc6ZIHnM+7CSsryWBpkpD67krmbg64PdUatv0MBOwO7+
bhvyXCaCbn6RBj4Rty64kP16vtMzUUqjwak7CwRdjBnIj9Xe0xdPg6ssFQd/
bQbObnzUnXiABlXrT3qfU2Xgix+d31T20KCx/VRzL5WBm1dZZGd600DzMD/D
RJSBLnXL9YU20ECOZpF47Q8dI7j/bXV1osHz++M9BsN0HJXOckm0o4HNu1mf
HuLPO8FW6RfNaeCZ7HP1fCsdfyxvYfxnRoP5T0b+C6+i47+4S9sCTGgweJbV
fbCA5J1fZaZsQIOSCVp0wVk6JpabTWXp0kAjJh/mxtGx/m/k9lFtGnRYh6w9
FkBHjSw/nMelgdvNs+ErN9DxiI1J+3sODV5Qe77aWtIx4Ln/00jCnek3/ZJ0
6HglXf90E+GYgQmWnCwdt3WL767XosGVQm77+D8VlOyrWb6V1O+/eSSSP6iC
gf1JRzN5NNhW1Xyr/bEKcvpKNu/ik/u03NryslQFPdN1QxoNabCCaf5gw1kV
nBFs0s02pcHhmvLjGyJVsCKZf3qUzFtqsenqO08VFMiJ3VYINFi5TMF91lIF
B772UB9b08B5+gnrHlsF16ssaJ7rTIPcD5WBxqPKuM5SM1PInQaJrYV08afK
+LpOcc6yLTT4vPHBkuLbypizt3CX6k4a/Hjo9CTqgDKGiYUr7yL3LfSoop+f
q4yClHVDz4/RQHj78NN5g0popHNaXP4UDe6639fNeaiEN6U27vydSZ6nyDwN
SlbCuLoPogdzaSA7dPrWg71KeKk56HlJPg36RmR997gqITXp/NShIho4mc3U
BZsq4e6G4nefS2nwRmJi/UclJTzWsL33cRkN3sVtX7FyrhJKsrIFDe/SIPr8
mt/sT4oYc+cxV6GKBtpRtiWJbYoYINAXGFhNA4/8DTYhZYo4s6LdyYT4+/vb
ZJvfGYrobzCS4YE0uLwt7RUlXhHHjvxKfEd4UUJpa9duRczOfHP7HuHSD0OH
LNcpYsn1RPV+8j6u3v59GyjixZ2zqx1qaDAqKHNlmbYiBqWdUZ4i/Ze4XCzv
liP9zxV96yf6vBqK64wEFfHbFqPcGaJ/7v6Vo5u/03BuwZvk1WS+hdmN71zf
0PDnKqGk5us0WBrY8ECljYYVTkt+BeTR4MK7m0tq7tMQw84UL8miwS39SM9F
xTRsu3ZBjXuGBg2hFx6fyKZhLaPX3CyZ3CskOqkhlYYL1pod332YBk0VFowX
cTTix/fC1WEkr4U1cW1hNGwJ77XW2U0D2+ivzLzdNFx4fOWue540UH9/8fUm
bxq+afZh+rnQIFixQGhsPQ2FrUUvm1jRYK+szrZdTjTcvPbTDbYx2VdkoDHa
0dBUP/7MMhYNImWndL+b07D+4V1OJJUGMr8/R0ya0VCibrzxvQANhgI7qrtM
aBjeob0y8rsC5LyokY83oKFWnLeiTZ8CSGcWac7qEr28GTn7ZgUY9zWeb6FD
wzWnK7KSyhRAK+zSVlsuDS8shwSJHAWYY7l0w3wtGj6Pvk7rTVSAjwd+X47l
0FAzIlhhKlABKn45xRcQNs/YVBSwUQGq7U48CSe/vyTx0c/SQgEOOnB+fiH1
rOcVWcdoKcBE05GxMdIv54n3f1wpBagNHYs5qUfDpf8VUR1/y4OV+pP3N4ne
DL/S+z975UHw8TdFVzLP8h0HP6jVycMhS9un/kvI/DLLdD5ckQe6eJH/8HIa
HpJcFGhzTB4OH+kSfGpJQ98FN5+uCZCHyjmxhyXsyf53a+6IN5YH5+Nuxdvd
aPjfW/PHjQryMJSyhb1zIw3vhg1d6vkrB192vdLN8qJh3f17+y/WyYEaxUXJ
aw8N//St3zbmIAc7H1tfUz9Kw1YzP/a0nhzce7exwSuFhg2L8nP5FDkY2ATs
/ek03CcRPtfylSyE7r9zZJj4x27hfh3TGlmo+TSwZHkeqf+El3ooVxZ2ZK2q
WFJA/BfxaL3WUVmI9+tu7SH+2+UiFGa2Wxb+itSkiN2i4VWdgUsJrrLQfi14
w8lyGk6PBUSYmclCwuaIsPy7NITuKP/t6rLgMjEb7VBFwyjHtP/micuCxt+D
1mHVxP+7JX9pj1Ph/voz71Rracju26nw4g0VzmxvvW2BNJxpzPOWaaZC6yTL
q5uwnW9bX/9tKqR2pvZ2Eb7g02htn0MFhzW8nWaEa/eoCDofp4Jxo+/luaRe
xVcDznQYeV7/IVid9Ms54BvgsoMKgTetWJn3aNjtec5wrSsV7GyurfO9Q/x3
sypsvgUVWvbJz4+9TfzExFdB+lRQiLqa+aGEhvEfky+cVqNCk+GeZ6fIfiLP
WZ8KlKHC2xnbZ4cv0/AbtcZQXIgK4dPe7IpMGvLNNFN9flPAxvVEndYZGrar
jzgcHqLA3Y8b//Ym0/DB8df5Xn0UePJn5mwLyeuzV7tDBDoJswVwIpyG3zku
qn6PKIBrS8W89tJQ/ZBFwalqCmRFuIYLbSf5jBi/Gl1GgeZ/hkEf3GlIXbzF
RreIAk2Vns2Cq0j+chRW5eRR4O0T0yqvZTQMOEyX6siiQLLfg+FpkrcLRy4l
1pyjQEB/184+Bg25SjrmfmkUGH705tpcKRq+FR3zepxCAet112P2zCqgx/Pt
hQNJFHgu0qatMaqATmr9sdePUOC78YdVWq8VcI367Q+q8RSYvXHlzaFmBeRK
QAQcpoCBRRHoVSigsuvGo0KxFHA8wOIuzlXA9wee//U9RIEz7cuLLqco4JwF
y/ftIJxY6acbfEABlaBDa4Jw5Kz/rlJvBTxbf1RFntSTnLIO8HBQwIKn/r9q
4igg5jNxIt5YAf/I/5r/OYHMnzF3rxZdARfZloQfT6TA+c8vx11FFDD+xHeF
3OMU2KyivVpsVB5lP1TGaJykwEuL8dfruuRxqdQdMbF0su/047bL78ujR4/N
7GAGBe41Ms3nJMnjwYvOGk0XKVAQVijzNUAey9mrf45eoUDMbkuzNDd5/KLz
yPlDKQV8PL83mTLkMf6K/OWYJgqI9Iw4d92Sw8f/fa043k6BDo9io3Pn5DBZ
+mT76ecUUN6WRdkcJYc24TmSEf0UiP51G2Vs5FCm723gOeKf4Zg6U16vLD4T
vDb55y8FFgr/PNNaI4t+c8YT5s2lgldZ1kh9riyKxneeuiVMhbzXdx8qHpXF
eaIenT/mUyFJSHPXm12yOBHqalElQYUYc61+eWdZ3MUOYAtLU+Hb0nn9HSay
OKpwQeEhhUry+uyZjIosCh/+ITguSwXGkpC2j4Ky+OfNYaMkeSpIJb2OXfuV
ilnPe90jFKjgvCLK0vcZFe94ro1Dwkpef/+p36fi+x8qi90Id4Vr66RfoWKC
zcxuXfK+/FPLvqqTVGz72JVoR+qXv95+NS+CiimxrfsySZ5ejvhcdvWhYvku
46MaC6lw7sbvwHYXKpY9YZb2LqBC1MRcXUWgooH1VbdqMu8gLyzATJeK0rX3
dzyYpcCQ5wYLExUq3v713uP7JAW0e7i6khJU3HjB3c7sBwV2vr6h9XCagi+l
xu9e/kzyJi2W7fWNgvnGjT3stxT4dN5o+9sBChpFaWx5SO6zfKa1wbKLgtOR
WenRzRTYdN0h6EQzBXeEuKx3Inns2ZyaVltDwTlxCkpLyf1V/9aXdZdRUNxf
741FLgX+YF53ZyEF9/GzjH2IvyKu6G2/dZmCf8d1bK4R/3YdP79ofyYFI09J
N4rtp4BZZlGOzFkKav7S+ZG+lQLBH5PcU1Ip2LNm+oLVGuI/41tpb49TcHiP
vgJzKanXEPpHKJGC3lkfrPU5FPi8ourmZDwFDVWOx4dRKDC9S3J9+WEKRnyM
LPszLQMXHOUkjGMpuFxsmUHdJxm437U6OPAQBdctCOp82iEDiYelK7cRPlgU
12dYKQPWyZNpJLcoqje94NtFGbhYHrbSgdR7cSM3SixRBsr6H1cbkH4L/lpW
ngqQAT9zps+NIxQcE16Tf8xNBrzfLdxSmURBoWTW0dnFMrBI1MDbNoWCNX6L
R6bo5HmP3MCaUxTMCfhVFScoAzsOrp1oOkMh/x7zU8n/JA0Of19EXLtAwTu3
B6ICWqRBPnX9nMEcCs6uXHxosEQayvOmBvZdoeA7p7/CoiHSkPmbo+l6k4IC
Ggs3+8xKgeSziW1zWigYNi507NWAFMQU/1E8+ZSCEMWKc2+UggudnSKyLyi4
ya3i+n9JUmDvYljwYpCCt+yPZYTsloJu0fVZs1/I/E7P2o6ukQKfknlO379T
MLPqs36knBRkXnhfLvCPgl4rOVcvTC6EV+8Yp6rmUFE/QvP2p8aF0BAlOk9V
mIp9t32dRk8thPpTT8rY86koaZT9usZzIUQKKu96LE7F8/nRNv66CyExMt1g
jhQVP7K/CE5PS4LxHmunOhkqPlu8aX5SuyRInR2zF5Gl4vLUC3VKFyXhRubS
L4/kqNiojcINQZKAh05ZzcpTUdQ2QTbZRhJ+5slVXlGg4kXnryfjlCThgPOq
yTLCchJLd5f/kICTV46JsAlnFfv80mmWANV5W1b8JvXyi6orxy5JwJ7F/61X
If3kHyr8JxclAUc8XHecI3qavDwKM9wlQMDy/AvPhVS02hlmnWwkAXL7fh0N
EqOiZVDpz28yEvA5q6a4RYSKvWeO7Wv7KQ7fly3+6juXiqHJM9e5z8UhZMxn
pdVfCjoNGVaK3xGHVxO3V3iMUbBkW8mrsAxx8n31KLw9TPxQ8TN4b6w4vBy7
/MqC3KffJ0/6t584JLffSlzQS0GtCJUtEi7icP/3lrfzyX2ffTrEqlgqDlU/
0sPgIQWTbOw2fueIg8HYuQ0l9ygY/NtBvEpOHCQdp/+5llDwXr1DAFVEHGpp
O+wMLlGwo3Soa+q3GBxxm0ldmU54r0a175AYvLja9F828XvTGafGDX1iUGp9
IY0fQsHKM7FljzvF4FjYkJzgDgq+l917uKxZDGz9N+rQ3Ch4XeyJs1S9GJiq
ypiHWpB569TDu6vEwCTsiRadT/xY8DdhpkIMpIxbGLIqFCy7fNE85rYYXPf3
qvGcT8FAFaMKx5tikO0RPUdwXAbXGhgbeZeKwZwjH5YJ9cugdcOe9SWEN3/j
c/wfEzaxlGHfEoOST8WPTMtkcMzT93ptGakXL3ggNEsGE/s/NO+8KwYGvwsH
tY/IIEXsWKxitRhgmrmwZ4AMFiz9zxmJ3qbCSzT5dTJos7FPfzWZp8Xx05VN
y2Swa/bPfzc7yD54EGCkIYNXUPJY3wsxMJ/NCipYIIMnbiWn44AYMO7afKn/
Lo0DLwxs/MbFIEO0Yb7wfWlkDr73cmGKg83K+aNVa6SxYuEJb0ddcXD8mDFk
ZySNP3XVPwctEYc40cWX6xSk8UDZ6aEv5L47CtZkZAxIYYhax6rkw+JgdK+j
9/d+KdRIyGOU/I+i646n8n3D59icYx7rGOegaGgpKaneRykSFRVKZURG0SJC
CiGRZITyVUZaskcJ750VJWWUke3g2Fu23/v78/o8930/97iux/N8fLxCqYjb
Mbv1lYkIbKvwrj/+jIo2qkaMRGqKQBP7Z8bZVwSfPPMdfsqJgO0ddPFjOhV1
iRl4WpJEIKpiD+/JT1TU/2LX+pRKYbB1Ud0tUUJFDrmd1RefCIPl+6uMwSoq
KtHWKBQyFwbrw/1eRb+oSMzRbMdnZWF46aVU7PmHilT+5X31mhCC/aZKZLG/
VNTaceLspWIh+PUmSdm5nYrijBwoD0OE4IX/cKN3JxUxdxdsmTcXAtNH4nE7
ugi+Tqmisk1C4PgBmryI9YWn9OaFFUEYuXC06yjh//3N+pT3dYLQUWK8Gt5C
Rap8n8+zXgsC3SbF89BvKjq4kZyf6S0It2tCU0xrqGiXX5YV01QQ1kc7dBSX
E/q6c31ll5ogxHZFPr/+mdhvtkOKW1AQMjteXbEj+vHvs73c40EqWGj3cccm
UNFz+RKztioq5JAktEnhVPRMcfPUzDsqzF23U4q5R0Vvbrr0tz2igt3S17/n
nKgoOPUDZ+wNKsRfOPHzqBmxLoj3bjhDhfSu5bCL2lQ0YPh+/ok2FeYvxPcn
EXqciEh2r1Wlgpb3TLWgEBVx7u6375eiQjVNxilpgoLKbM/F13JT4TsfVdm+
noKk1LkKQ2YoIPrJ754loQ9lXRUN8X4K9O9Y0gh/QkEJj3VPW7dQgNNwYR2X
MwU1a/ZoXvtJAZXBcJNiPQris2R17qyggK/bDlaVIgWtRLWtf1dMASd2uoDa
vACyYy80lnykgPOaZxKrNQLo47V3iS45FEjf2n8WJQmgqnX/tmdnUuDVSN92
jlsCaN3mJ9uuZ1BgMCpizFhXAKnreR95SWBWyv56bSkBFLpwRUstiwK6JxN4
Onr50R3R5DZaLgWmBkxCtbL50Zr9D1R3faJAr0gl5nCXH/m3ZBwPIvK5JhCa
66HPjwyS76f/K6OAR+Tpg37i/CiyzeSfczUFWnWODDxt40MB40sqfxso8CuS
ovvtFR9iXWyIX9dOgU2SR0K3O/Gh1lfbNmNsCpRw/1OZn+dFg3vzMPcVCjxh
ROk2CfIiO7W7rjHbqBDXszV1fR0PStvq3fd1HxV0tF6Y2z7lQWbP31ApR6kQ
vvVPJgeTB2VsfmXlZEvM0/9Cn/UObtTB8vOjRlPh754w5bwFLnSnXLpJNJEK
GX8e1r0t4UI3cFbxrVQqyDns+2oczIVqSubOq+RRYY/iz8vlp7iQx8vNhlSc
CkFnf72VYHKhf0uTieJfqeDF+NxhMsiJqmtqSJtqqGA1+a3heR4nygzzf4E1
UGE0fMeHWT9ONOrfc3ZfMxWucRa3uxtzIvX3zCJaGxWEJeuVdyhxIosttfxZ
HVSYNFzw2DnFgfRCrunxdVEBZdfzPS7nQCWF54/xEvh5T7jSsVgOpKZkW/mS
sL9pRta658yB1hwsOvi1lQobHgi2qh3iQDvfumk4N1FBYctwvLM8B+KLteB9
WEeFHe9+rdX+R0ZfsrQlRL4T+fBri2TXkZH+QHTR7BcqyLD5V6vTyejKyyjr
nflUODX3+/7TUDJaUg67VkboqS/8iorkVTJSVySucnFU+Gn47LSRERlJLZl9
LQihgv7GCieDnWRknTt1QNqT8L+7M1NAlozWzupHZNlRYcKUpBvKQUZG2Yef
BBpTYW1ovmbTEAmxxUy2P9Ui9OlZdIv9h4ScPksGtStRof21UU1RKQnB2iPl
VnxU+HHt+PTpLBJ6PiG6Q2mYAp+3vPD5kEhCblUPNNfUUODhlNksHklCN55F
mTmkUcAkKLow8AEJOT+TV1kIocCF4XnVlTsktO2Hj36rAwWCqLWPZF1J6OeB
615ShyhwbNc/xUYnEmr4IOqVw6BAC/PY2nX2JCRm7iNYNCsA8rTOOpINCcUu
505q/RCAUu+XLmZWJPR5XSFrb6IA7Az9aqloSUK0NPOQalcBOI6V8RwjcGm4
ssecrgDoTeKzPwn7p67j8j+lBSBQLm0wmojH7KossmDzQ45z988oYr/CteZX
CvL44ZrDutqPRD7f8NaVMT9+GKUctxq7SUKS2Z4cYif44f2CxuF1niS05uzZ
zO2y/GCirpls6EdCKI/Rb9PLB/EqHALHQ0io7IycRGEaH3DnlnlJPSWhdVYK
GgZufMAIKrsf/pKEmpT6v2zA+CAf0zQ2yCeh2uhVWcUfvPD2PCfz2gAJcdce
j7dg8UCxd83w9VkSKjh01CbvLQ9U+tnscuMkI48/nh/4r/KAdhbf8e3yZBRV
b1O0Os8NsHtPyIIBGe1NNvwZS+OGY9njdrMmZHTqu1YeTwcXxD37/Pq8JRml
+kto8r3nAt6QiACmAxn17uyWS3fjgpfmlbGq18lokte4mnKIC6pa55qvu5PR
1fUVx7bQuIB0ueF9tzcZtWs9xlS6OSHOMYHtfJ+M+toulXNkcQI//X4fbxAZ
MWvXP6zz5YTD63zuvQghowc2v7KSTnHCgeJdjPWPyWj71eJGv3Wc8D3n2OfI
MDIylDFYvrvIASfZYaNNBL78IC0k+RcHYH9yxtmE/bq9Ww2XUzgg6sv3xE+P
yMhtsvB8lDcHmHadikQPycjcpWmLmykHDB2a4HPxJ/wzO71S1ThAwSx3Wf8u
GbWiL/r7BTmAIiCxpciNjKK38bSpD5LBkt9eutSZjNh1prnRlWRI8OTkMLEh
8uGwCnV6Q4ZSnv6Fq2ZkVCutZFYYRIbtaxc7KUfJiOe/LPWgK2R4OddurbyX
jPY73nRtOkEG//U6HJ9UyWj1b1bMBw0yOFo0SpTRyQgOl+lSGGRQu5vzTYeH
jF5UBp+e4iHDxHtb5T0TJOS3727RpQkS7H17hSO5hYTau+SSbNtIELbPRNKv
hNDPWKPR2DcShD4xHWl6Q/Bnr+c+jgISFILr4OtHJHQsncwZ944EVLHdh6eu
kVDyao/DpzjCPrSXihuTUOXav7YmYSTQGz4mJ7KDhHLsJenO/iRw5VBRHBYl
IdXpnj8LniQYc61cl92+ih0//01l9iYJvtr4OeJPV7GgQNFKMycSSAzeERc0
WMUC+z7mytiTQJInMP3Dygq2ZaFp4w4bEgytpmjlpK1g7Hin1zFWJNhkVrx2
57kVzCkyYAZZkqBs/vyuw7wrmK7t3y2EbsH3S3vkSvoyJpSEl2wm7G+0Fafc
MlnGCjVcvM5eJOoZOipaubCEPTWqC3p2iQTTcgmvBP9bwg6fNfDtdCTshckn
L+5bwlI5tJ0Z10hQfjRCqu/vIrYhIK7m0C0SZP96NJ7tvoid6S1N1r1DAvbh
+qoh2iLW873cQ5yov+2ryTX64QUs+9iPTT+fkqD0ucVao7Z5zC7ASSLuJQl+
cB3xvXVzHgu8Kb9hkuhvsejbBfH/5rAzGRo3poEEa+u63jRsm8OqJ4rP36km
Eff/CbJw2T/sRebfKb0mEhx5xPK/PzCLbbitmm8xToLd6Uq1V9VnsKpRhtwj
BWL+CsLHWcXTGJYf7aW8mQx3Sgr1JfSnsR/9W+MtNMlwKsnpsdXFKYzHI7fg
AsEvDk7TtN8Tk5jv93T9f2fJcKKhpCjfZxLbzLLvbrIhw958TonttEmM32WX
yagTGZ6pHuB2TpnAtmgFLivdIkNrxXRxhNYE1jUqB9Z3yHD0m+jub3XjmJfz
stIzPzLkvBeg7boyjtFXx07lPSDD8MuEgBXecazWP2LPqxAyaNsaPQowGMOO
rKzcPv2YDFse3vhrEDqKWeb1+ueFkWHjd9bP0N8jmMu63W8+Evgmd3RRoNII
pv5sD9WQsD/OL2pw1XUYeyxDqbQl4pmu5p28XTOEWcWH9c4EksF3xrvw9+Yh
bH3iD8cJHzLYTm+2yIgYxEp6wqwMPciw5vy2gW2kQaxX/2776jUyrE9mlnrc
HMDcPG7wki6RQbSceyF1hI09nlpHP3yGDB18TqrdzmxsdM2+K9/1Cf0O67ls
+9ePOW9yvf1wDxkqGKXWbwP6MZmEQ23e64l8C2YGz8j3Yz6Lr8++EieD92js
Bf3PfVjd2Oa2xRUSPLuVYedt2Ycxjpt6+PSToOfoOp4ZKoGfr7+hUUMCJOYd
9gZ6sZZB8la5bBK0NNnnh3r2YgF78nR2EvyaaXQOidnXi4kV9jj7u5GgYuhe
cBZPL3Ztd2ioqCkJvJJ9Xpf9YWFRlOWUDnUS6Hfkncn6wMLUi9ubZ0UIvi7L
5JwNZmEVVx3Ki/+s4vvmfW7FXGVhBdO0NYcerOI7C++rHDjLwlhR40FRGqv4
GYc1GzceZWFz2qsVFV0reNgNwV7GARbGgezfTASt4Lk5Xk2D+1nY04TQkW1b
V/Bqpcflp7RZ2Bannp0Jtcv4xkm+OuYRFqb84P6o5fVlfPsHu3SKCQvT3Zy9
P0xoGXeS2FzWYMfCajy3TJ14u4QjI11TdW8W9tDyrn2F9hI+5u9R1BnDwv5U
HnSRaFrEu3LSHjzKZ2FcOYGGNlcWcVUvzk9DzQQ+qeXSsrKAew/5J7qs78Ve
KWjc6WQs4O7uwidnT/ZiNed+9pSlzuPHwhdLG316sUDjXY63NefxSSQccrqn
F/O5N8DJfWIOb3rpkrZXsg9Tr4/M1Gj5h6tp0uLo+n1YWlDS7ZGL//Dc5XOU
A9l92MfUAjzp1iwuvvXpOkWffiyeIbn5SPw0Hvn8lI59Wj9WwGGkdVltGvcx
yOfmbenHEss03azKp3DeXofCHE42VhjusfvE2Sm85bLxzw2qbCzD4eVR8/FJ
vNLkVQ/zBBt7KiTa/ipwEv9gr8tlfIONkRTOOhorTOIBJnaVXk/Y2PWDrGTf
ggl8NVrz9oUPbExsn4SDqckEfkHni0Z+ORvDfIZSxqfGcWebJ7JHWthYZLC8
kVPEOA65NyyaBtmY3nLF0SH1cfygR4u76j82VuV4Nl8ocwxPjGHuo6yysbU+
RzYVLI3iejznVg9wDGC79bSTBA1H8ZdqAx9ekgawOCP2Zq3EEfzk0KXR6Xk2
llQdr3JjaRjfwNi3mzbKxgJrliQ6zIdxrbtBI7WtbGxHIiv2PQzhAgcu3xCo
YGMM8V3HVjYO4eYVLw7EviXsyzTyF54N4mkqNtwXAgm9xaRs/iIyiLsGhL3Q
smBjXU5p1c4hA7jucvdBaTUiX9UwK3mhAfwk6bpP21I/5nZe43xPFBu/rL7r
hHtJPyZ7Iflr/Ro27vkSZJuJ+ZSrHN+5kt+Pdx3p+D61px+jZ9kUOxv34x1m
17/jI33Y70aeuc1TffjywhbB3c/6sOuOd8bQsz58xthbyBz1YTt0rde91e3D
mzuPNm3s7MX4Ryuf2iz24lYDfcupt3uxfTLW75xye/HQu92xg9RerPrjM93P
rr344NiS3ngsC9t4J6cW7e3F4+1E1tQosLBte35vG+XrxcW/i2RFJ/RgLhT+
v+l/WbjoV9n+i3I9mJrO9g7nHBYerpUgaPikG3Pk6poQiWDhn7e9L7xG6sYW
D1K83N0I+wjDijGHLsxC8r/3961YePDSYeXRH53Yi65Gf1EjFq5e38oO39SJ
ZWG3Fv8dYuHDPEv7RKgd2EadoBVBxMLvqVy/PZPThskMcDxTwVj4p1sMgZ2n
WrEC104BsYMsPGyPR+uOwRbsQWVfy39HWXgkfUTgnFszBo+6liLNWHjXbadE
uaVGzCT89CDuwMLNOk/bDLj/weojokpY3iz8j1Ks/57RBuzYuvWXv0az8NRM
98sh5+qx+MgrmRuI+joSu20tymox+HXZ6Xs9C396O95ul8ovTEGm5JXjLAs3
L+xy38X9AwuVe5RTKtuLq5bc47l8tgILLXt08JFTLz6c7LFVeL4Ei7nnd+Nq
bC8eFjAe4aGEY4WG0spjFb24zRvujam2mdisWLHNC+U+PKOFGpQdlozH2Fvy
Phrow+MUJW4YCmXieUXzaZr0frzVlsr/uiYf/7MWaDv0+nG0mCjQ+qwElzwl
GTuR2I+Hui2/4hsux+F6w8TGmn4cJI+tpWhU4WukT5TG/uvH9dKiOs9k/MS3
L277w6/Dxg+fuMnSv1qLn8nbxBF4iY23ozCOMlI9rvVBqVQtgI2/OLykLRvS
gGdtgcjviWw8V/Vd3x+RP3jDi5UYqUI2XoQlldwLbcSd33R/bKll48nCca4p
XM34XOjhsr89bFxJ98675hstuOHb+LCeCTYunoAbZzT9xVtPvZYsWmTjYv88
Osp2tuHXvYdDd5IH8NdF/O55Qe24saXsIzmOAbwlcM2WDQ0dOGeZsIzOChuf
03krdfFhJ55cGlp9b4aNv8Mb5v9T7sKHCxM63/az8R0Ov9RffO7CKb33DWMb
2LhLns/jgwbdeHeGfIsqka/SU8dsx8ZuXEV4dKt2PBv/py+8/9+5HjzigMfw
Zw82XhxU/qumtQcfX5XK9DFi45VnWIwWE4JnxxhqnkpsfEbCcIHrOws/GeS8
P3KkHy/9efjCfs1ePP/L8YbPWf24zL4Ud/eEXjz5w1MF1vV+vP7gvsw3nIRO
t0sEc6j247+UQtO/WvThD8IMPwu39+Ev1+EXanP78FHapTje4D7c8Vf1WBl3
P35My9xiQK0PT1Wdb04+3o+rSFz1zK/rxf9oujffiujH+xJ+p7oR/ArnPTt8
sLYf3zMaP7Gdg9DvhhxDaX423hraeX8mjIU/VBe8yqnFxi9IKzbV0Fl4eoHg
uJQdG6fL8wfXxvXg7/U8Iy8/YuPvN1ywosn04JfKfHdLpbHxpTWGuz486cYN
PM1KNarYuPsZgekCzm58THSn9EA7G892rvEwv9aFP7DP5z4xxsa7D+5+ltHY
icvb5uwIW2DjgrjcQrtmJ259xVu4ljSA/wqKE5bb0oFfVE7P20vMdWWu+svP
9jb83oR35yoxV9tQrdvbA1rxS0fyyo/8Y+MWWrdfJ679i98YP8RrMMTGkwLs
Qv0KmvHLbyMi9vxl4yUztQL79Jpw1W9BD49+ZePO6o/OadX8wcXy3BXy09m4
Pf+e4VGD3/jUQPPd/Eg2buL8Xai6rB7naud69+AWG39zcrxCX6MOH4joM7E/
zcbjC33v9yX8whW3/qiPUiN407mvTEukBp8IeBPW3t2P26v3H/4V8hWffbaT
GbitHy/7q4K9t8nBe+9XZskv9+EKqiF8MnLv8DRurEisipirNB/Hw6qnuHp/
lst9yz6cb3t8r6NoIiaycu9W/qY+/JfbH61r1hnYtL61cu58L35KRSfud24+
VmZbffB2dC/+tGhCdTOzFHOOuc47ad+Lly9LB03lVWAnvt1OjyXOaVHtnFMr
h75hXvZelhVivfjuetul6W8/MEulNynVQyx8v+en1wcSf2GJn/ag1a8sfK3x
jY1ZZnWYjqH8QNprFn50W3DoOr4GrPVoxbqNwSw8YLfUV+6M35ido49s0Q0W
3kK6G5VzvBELkNlnkHmBhfOn9A687GvCbnEteRoeJ/TQeAjtc2nBxFZ5PX7r
sPDSfsoCee4vdqOHYy6IOKevrZ3OdrrehgVcHrd8Q+BM+r9o7s52rEPgZJYj
cc7vHA/8/U6xE+u1dDHlJX4O9MadDnYnfi5M+I3zZFqz8MdelRqaN7sw6mxs
4lMPFr5eUGi2SKwbo8d8o/fEsPB6p+rmv++7scRL6seKilj4SoIR6cr+HuyL
xsFF3QEWHtWglnb0Ww92mp/5MoE4l/O5DtmcO87CJLvOXWGd6sXfbZ2d9PvB
wo6fdtyqEtWLrytufJiq04tFWxbru7f24lG5N76V5fRiExuaUvo39uFjo7pV
uHwfxgti773u9eGPzZeYUXf7sN1Txru12vpwcdX3I6ilD1tIDU9R0u7HeVzO
tpRu7sfCjI+Wb07tx9fWhkmu8ejHSseK240ZbPy1BtXMHu/HxsQZxX7RxLkl
HlefsNyPke4HfPwgNYD/ea2k3q3OxmwWGj5+ih/AVdRLQ5EtG+OPO3AsZNMg
vitK51RTKBuLKS4r4v4yiF9wzcSqMtlYtfhaSY5zQ3i7ovaBXTVs7KJP8eEz
y0P4an7UFX0WGxte37u7I3kY30S78HvLNBsbzKoYumg8gncHX74jvsLGzgo2
hGdzj+Lr1Q3Vtv7/XuUSkve0eBTn+OVnn0fcqwTnn5vWeY3hXYYXlXqJe5XY
OlkBcYVx/N5iPswT7xINqe/rVO+P4yPyup0729iYxLayzSGD4zhr9ODW9q9s
zJxj2oh2cgIXMazX3pNGYJM5p+dFE/jX159sIsPY2B08WXJlwySu0XTcWfMq
G7NrOJ1Di5nEpTJbH7nrs7GpZI64bN4pPEfsBj1JiY3NKRk2Dg5O4eJyn834
v/djDTG2c26FM/hWrcO+MdxE/58UzR7ZOIuT5AWVGb/7sBCv67UHY2bxozJy
wqeS+zDTXzxDMi7/8AP0Dpn5A8S6OIdSWtc/XMHGwmBJrI+4l1kc+31sDp8V
k4toJO7hd5xOuRuum8eFNjG99wT1Yk8mmo+YhM/jW/499DC+0Ivdf2PXab00
j4ec6xu23tmLdS+7nj1hu4DT/FFMplAvllj9w2WpegFvK+Dl9Bsk3jnNV/47
tGMRb7qJjGSqWFhJDB8PJWYRV666y/z0jkXcq5TzNi0u4rLlRRdePGZhihG5
ccHnlvBZD5oaxZ2F5T7an8BfuIRLnnH/utuGhY2ZOOUE0ZfxvtgnyPoUC9t9
h9E55rKMxyikPMD1WNhNqDRRrFnGLzlV7gkg3kHZwTq+XMor+JZ3un4DxDvJ
p7Bf1Of2Cv5H1p1ThljfMz7Ce+/7Cv46sDvvEOHfNalcMSSziieeHmiOJuI3
GLXRM+xWcdLlidrdl1hY611O3YLMVVy9W1bq2B0WZnzJW2x+bhV/wo5jLhD3
zOdmv23TGCQQUflscK6QhQUY+Ly7jJEgdYNvcxiLeKdtn5JIu0CCNBu17xli
vdjK5i+7rnmR4JT+tZ7aw71Y+Aa7mx9iSHB06/FIHuKdFFdZy2FNvEMvBcjO
nv/SiznTb849rCaBjaQg3sPbh033dCAVFgki8F97X54i7s0Z00nbF0jAspw+
HvO6Dyti+ZSnC5Hhn7WGww9SP7Yt1ls5XpEMV20KHuyz7MeU+UuYq9vJ0O+2
Busp78e4Kg4ONRwgQ5ZpREYucc+PlOyJUTIiwyd2SOybJDa2uCVPdPg8GezP
5p9OlR3AuLZ1i2s4kCFogzf7Q+wARmcsq/PcJIO7ThBvtPwgdkF7scHakwyv
H/KuO/Z6EMt4+XbtSV8Cd5YF5mkMYXEP8uU6AsmwR5xLN+P7EFZsaOQhHEKG
2TraNelLw9ho3rGCkVAy+JCjhKu4RzCX/H+0+2FkSKuz04t9N4J9N7e+2Ubg
CHF1x/OnRjEKl9NNbgK3Hb7H388xhjH2m5nyEf4Navp07rwxTOErJ9fUQzI8
uMbPWaIxjh1wrpurCyADO3jdwNPIcayvbLdeng8ZDuhJythOj2MP8xYevyfy
/6/G8KywyQRWdFxu4osLGZq4K+zcPk1g48oPefmdyCBV+krAmzGJ3Z+/0xVm
Q4bH/rdVOP0nMW2j5FkHczJ8xNjfe4cnsdfjvMxXRD/DHFv1uUymsF/bX2QH
7CVDwKe1XxxVpzHh8IXH5tvIcPxVJMP35TS2YcD30vc1ZLiU8C7wouQM9shr
d0MTPxm2/Axp+sY5i93/Lrl+728S2LY4BvF1/sPSjqlLuFeS4Iy3SbmRyRz2
34auKwKFJCi5sWbT6Pc5rHThiHloMgkElF942ufMY/s/v1f7EEuC88c4eodU
FjBUG9vg9ZgESdUGuYIxC9gWSZNusQASCI0spCfyLmIB6i/c798hweuzj2Pv
uS5idy5zrutzJQEpesTYu2sR++X4uOvoVRIkHFiaunl0CXvd1zVV6UACbOZO
757sJSzwQOr0VVsSlPcLL3yQXsZuXn7zydiaBLvQ/oC3nsuY7QeKga8lCZ5f
inejtC5jaat32oQIfPJKp2O25grmMhJXxGtFAkGtKvCNXMHye0VOeF4kwc9p
3qxzwyvY8AUtTjc7EmSkNlupaK9iDxv9dHmdSPDZ9upYRfgqxmtyJHCXC1E/
jRKwrmsVG35xhylG1FMWycqlS5LQpslRs5eBJHgXHcA7rElCNyJ0rAcjSPDg
qE4QxzkSeqGcpf8vgQR3hQZVTbxIiKZsu1ydSYKtNvpcXc9IaDA4fd+1UhJ4
GdOOx+eTUJ34ZBLrDwkKGKybD+tIiCWn93zTMAmqLyfwJg2R0KeUWYsjnGSg
7+Kp6eMgIwvfFyt75MgQm3Gt4LQ0GVUyNE+RdpHhlMPg2LgqGWkIfBeKPkkG
gfrLULCPjExej6YtXieDSLD5+zxDMpqSpz3cEE6GaAd98wFzMsoR9vshk0OG
heqRRDN7MkqR3ehb2UiGTZJnb1NuktFxXOrJxmVCj1/vzvB7kdG+t4WVu9Zy
QNv2Ub3zfkQ+0h3dvQYc0CXd8Uk4iIwKrhwI3uDGAe/oj+M2PSKj/c+WL80m
coC+dv9ReExGC4WectgvDsi56aX4/98D1L9QPDezwgGrvQNXfAmsGRc+wL+V
E4r2hzjWhJJRRW3oqyuWnHDqQpJmdTCRr5FNDDWCEx7u6KoNCSSjrx7DS40V
nPDc4sqcoi8Z2dkJGRQucoJi5Xn1eE8ySpwv1ktR4wKBYCgRdyEjK/wW1dee
C67KyD2MvUxG77tVDQubCJzwyELBjKhH8+WacVFu6HixSdyQ6Fea39vHcJQb
ct5p7GjTJqPNByvk2oAb7kShQp8NZNSHcXr1LXDDDdnBDSR5MjrF9FnaspMH
soqNb2EiZLRzWix67TseUB175HpmloQOX6LKvGLxQOWqB245QEJvs/vfU5i8
QNsZsODTSvBj9Q1jewQvbBp9oni5lIQMlCsGyqt5wf2o+RoLgi/V+R+z+7n5
IEXruEr5exIK1jzF57ufD6L2PovPeklCKW2LX+/e4gMV2eb3e5+S0CX9OvXq
D3wgrjZAcQ8hoRMmqavGLD5oej0jeNuPhPLeFZ8iyfCDwp8q/5OeJNRutdIP
x/ghOeEaLuNCQnf7NpF9ffkh/cX6m11OJBT+ODBQLZcf9G7nfPpkT0JNqTTB
4j5+yGgXIufakFDF7N1mSSkBuCYVRGZZkdD408hp1cMCMD1/NtvEkoS6dVS3
jd4UgIyadzpyBDbe/1bt+EsBGDaliRwk7FW2zXhofxeACvaHiKaLJKTn3nPj
47QAGK9JsR+wIyEzb5rTGzkKjL84p+VD5KO5RzOT5yAFPl+SL3tH5Ct4rsan
yo4CUV+d4eodEuJiqyixH1LAoHhpuCmQhOw8ev+eTaVAdNpa0mgECa2v/s4p
W00B3461r3ITSCj6FmtZaZACX/In3XZmktDfc5zazjxUUD1VQL5RQkLZwc/O
zCtQYfU1f57zbxLq+9Y19EWTCu5Db8Y3D5KQxIPjuRUnqPAvQ3E6g0RGL7da
P+K9RAWZkBn2P0Kvy66fbP1vU8Gh8n4beQcZvfO5e+RAMBUcsVcV1cfIqPGk
0jnt51QYGmPfO32FjL5pXWgMeEuFlIcRddEE/+cePeOTzqPC2s/7nENTyeiG
zjPDRaCCWeDa2e0/ySg61ldk9zcqdOUokbynyEhVek/pn1oqLH40krGjc6Ao
rjUtnY1U2Hf8+C8W4kB5DuoVlq1U+HZlbeawAwd64O46atVB7NdZdfpmJAcy
M+h4M95JhfuPD9tfAQ40cv/tdpkuKvzXbP3+2wgHcvHneTNM2JeYD3Pck+NE
Y/dOLd5qo8JM932vOwac6HN95VBlMxUaxf6ZZd/hRC53ni9ONlChekhAUjSD
Eym0f7Tl+UlgwQZ3/x5O5K9MoklUUkHiyM2YFSkuVKYq8ViNqO9+uc6AgyGB
P1QvOedTYXvFTb0cPy40U3KJ9TyJCuZ5KQtPJ7nQV/KnjTkxVNi1sMeHR5Ub
YbwS3fsfUcHJrfwppw03knJZvkh2pcKY8Lu0E43cSGRVahBzoELlYnRFkCAP
2qMw/sHwPBWuGVW+nDrIg8TlxMSZh6iw52D+LdFMHqR7spvNQ8y72XcMS+jn
QW+2NBjwbKaCPoPHg87gRa0KhzoiJKiQR09Z4/mQF8nLSLccEqCCbvTfCgS8
SMf44IDJKsHf3x9Pv57hRe1Bxey/BN8Wgo+Fi1rwobDj43w3uiggs09ZZCqc
D3nmpT5830SBVYPrm9Qq+FDmF82CmF8UeP5x+NnnOT40OKnre6SKAuorfdd8
N/KjIiPDiz9KKLBDcnDzLXN+pLJW5vKOIgrEFSiXBQbzo4XB95sefqTAM8e4
l28K+BEX7eDHjhwKWH8SzP7G5kc7XuMR2lkU4I6Lde2UEECdG45kF2ZQYGOY
9HSrtgDSDj904zyBo+PX1mdfEUAKKClkayYFHtr9NDnzVABNPLwtvT+bAsER
ZIeSYgF03przXkQeBca233vB6hVAhof+eWp+pkBtRaR2HoWCxhMwIc0vFCB1
nTLcso2CSr0k7zyrJOr1CvDSOUlBjTyBx2xrKVDkwDgy4UJBPJGmOi//UsDy
pMnE5igKOrDhgplRPwWm1c08p7MpaGeC9qc70xSo33HnI1ZLQTYb337dwEmF
W4oMPcoIBW1N+Us7Q6PCHbnp2JO8VLRrxy9zIWViPjx84xIKVLRvPCPo6G4q
0GCr5YldVBRW8StL1JAK4ZbSv8mGVBRcLS5ldZEKdrWtQhutqIgSXqug6UmF
T77rk6puUtFzBznbmEgqzCv2LXXdp6IDvmHJXulUULrnYe4aSUX9lwKru79T
4bhYSG1AIhV5a5bNVQxQ4WGe6UGZdCqSKglzXcsvCKXJETbqBVTUonq0ZGaD
INRlduW2lFLRHPVipLqBIATo1vnQqqlohV7W0nxVEIwzbzf31lFR+NvUL22R
ghAWExt2pomKZidH8nZ9FoSlcktNt1Yq0vkY4dzeLQj33EqZeh1UpPV7vP8r
RQjMa511/nRS0YtpwZsDO4Wgav1Z001dVPTL3S1vl5UQOMrOZ54m1jOu2eWm
PBKCs89EjS60E+uY3p8Nn4WAekCzxvgvFaVdCxnIHhAC0oNlM9RIxJtv3LaL
LgxtrgXp6kR+vSJul14dEQaH32uk9xP51/swysc8hMHw733Ty+VUlGM4Icz7
QRj2BxS8+15ERdV7vz772yEMc4IjRc65VHQ/16SnaI0IWP2Qqiki+nfBJNb0
OBKBn4m/Ut5EU5GRoOWO9edFQNDAJ4MrhIrg85Usv2gR8JBnqTsQ89k9+HIw
SVAU5ORdqiwwKuIRFFBVVxWF5NEOfsPtVCSzp/Jlhp4oJLxP6LBSpiLp/SWn
kZ8ojNZumDtPpSKD1KnuvS9F4R2V+8UNEhFfkXV8rlAUendbB/DPUNBhsWNL
d2dEQTlAIEOik4J2N3T+1hAVAxv6muLcPxRk3yhc67NJDNZv5AzaXEPwMbOp
2URXDIofpe9+UkFBrK+P1qVaicFtN78L0zgFXeKTPOjuKQZxgplshwIKmrw3
R82KFIO3OzZKcuVR0F+ubaUnPojBwoF5x4Yswl6hlMegXAz41oi+GsqgIM1v
cl3PW8UgoO955hkC69grVe2eEoOILzWJmzMp6Cab840sPw3ONh1JcSX0Y9BS
0raPQYNqisDS/nwK2v7K6VDsdhqsfzQ5ElVIQRfWUTXXH6bB9Iupr/6lFCSw
Vyuq14wG8Kj+l3Q1BbW2uBRWO9IAs4s/aEbUK/CR41mzJw14y+CIQTcF7fWL
TeYLoUGVTu3M4hgFLcs87zR5TgPHTVTMaZWC/A+udH15SwPvSb/lZBEq2vu2
5YduPg127+fvT1lDRQrbY8z7S2kQebA6xHU3FZm1wu8XP2lwhOfTGbHjBB+T
XGSut9DAK/Txkzt2hF7W3n1uzqKBUdLHE3k+VJQ/KnTBcoQG/1QaQwr+oyLJ
LKGFezM0OJ8vIRn4mYrkChRi8SUauBRvjZUi+HzMeN8Mg1Mcdr9ST7y0REVx
y9MmiXziALacL52Ygsj/mWmEoaA4iB30Yq/VEUQ63334lUXF4dOcbZGfoyDa
v73uxWZxcRjQ5jS+Fy6I9h6thCuS4iCy7nStcKEgkuoKNWVLiYO3GI+tSr8g
sj+tXp0iLQ6raH5vPk0IXVwbsZpG4O0Ft6NztIUQrj1ymI/A8U85vwlfF0JK
8vvsCoh4S7MJ+p8ShFDGUSzsB7EfV+bfTy/rhZAKx25TfTFx2Ge+fiSHRxhd
y3PL1BQWh2r+/vmePcJo1T5xNJkiDnWffyLZa8LIel9RVhSvOOzc2HRbN0UY
Xd3CMy5B1I9Z3IdTbcKopzq2c+sKDYriDE9EC4igqkhRLvMpGswP0UZvHxRB
8w13rPqJ/l7NbDxz5YIIKjbRisHYNDDYqT8cflsEMeIltri30kB9/ifbNEME
jUxGXxAqI+ZRINhWyBBFwX2355eKaLBabU4x3COKeqSsp8gfaXA0Iaml4rQo
oi9c3uaSSszr2/xW4xBRpGlo1zSVQoMury1GRq9FUc2Zjvi0BBpMuvadlCgR
RfynXAXmo4l4ARkelbOiaFjgpeCzCIKvv3NRiogYGn6Q1xXzmAY253/uVNko
hppLXhYuB9NAfoPEWnRQDA3+vvP81wMaZMjaCw2bi6FdVWr76QEEn7ew1JVc
xJDJRYk1HX40CIndRv8bLIbKPb75bvClwZfA977CSWLoGG2Xweo9GrROO/t+
/CSGRPzfKtgRuPjBJrefP8XQdN26E//H3qhd5FivGDq7f/g3tw8NCluOnNqy
IIYeU0VP6xHxVMVOxzsK0ZClmZOE+n0arHxf/3pZkYZq0pJJNUQ+Gp6K/t3q
NJRCv/xC5iENOCSD08V1aShKflWSEUqDfKl15DAzGtpN+6vSGk6Dj+s8C044
0FDfmhcqZjE0SJPr9zt5m4a8aTu5ouKJ/bf7XI16QENrO7cciHpFg4LL+Qu0
aBo6o2A1e/YDDTao5Qr/SKah832fKvtzCT1fC+HBM2noZM2pyb04DdxCFVPY
RTR0saB6r3kVDShvmtceqaKh9v++kw82EPP/JrChs56GeqKaNk530KC+cXPV
hzYa2nnZRs15mAbKfHXBWX00ZH1LnJkxT4M4DmO7sVEiv8KjoR8Jfq4t0f9i
O0tDKnMT7/wJ/iuFNDhJLdMQr4L7DgkVceh18E7j4RRHg810DxsNcUjJpapp
8ImjU+vML13TFYdOp0XBt1QCu325tfOMONxfU15hLSKOBNZ/LUm/LA4u7mMH
7Wji6LsV33KLtziY6rTXFUiII1nJN65Z4eLwPsp5jbWUONr6Y0hO7bU4aLHO
HrKWFkcmNdQAo0Jx+Mh2ePX/v4uaF903KFhHnAfvHAT8CNx2rF3Vki0Ot2/O
PUkn/IvMBpq1Vwl9XpX/YCApjqSH/HakSkpAQHeWnJW4OArpKlGN2SIBeRNJ
I1Oi4kiw4qnTymEJaBYjuVKFxRE5oNOi0UICgs36jmZRxFEGX+oG2dsScO+v
/tERXnEUYxCa9yVcAvb+FxNYTvSj5IbAz/2pEuBB02g+u0pDiSUlTQIVEsBl
Ga2ZsEBDr8rDppwXJKA+amnSapyGriXyXvSwlYR3G4dVXzYT9vFVjn73JKH7
28HQt8T8YIo2/vS5JGwSo91884OG3n86IFxQKwmi/lLr332hoYe3/vs8v1cK
/miuWZvzjoYGgnfRLE2loAMSNSxf0ZDbhtuiwdel4DPukaj7kobG382fuREs
BakttLIbz2moIS4wR/CVFGzzf1E/8JSGxNRCRU8XS8HZR1mdOeE0NL1gE4oa
paDTYubH31AiflLg7coxKTh9ctjgUjCRj2m2SS+vNCxqtTSbE3w+k9Pf/Zgp
DbmeeH6pPw0dkTki/UVDGjZnuQ0n+9FQhW632g1DaZBRnNvL40tDFvsPpsdd
lIahiowNo/doSMh30XTPbWlIZooNWROY78/I/kOh0iBur+nsSOD4dM/y/ERp
6NtYbiTgQ0P7PwTEh+RJQ1pVfbcuEW/K9XBtcZU0XPxvs8z6+zS06c7E5yOt
0hC+PS42PYCGPu3fJblhVBquCl572x1EQ0kvHk6ZrUrDiJ6GRvkjGrqyR6v8
tzAdQvRf1Jwl6ld2O3cujkmHfe+iE1IIfU453h56u4UOzcaRXu//o6GmKHG+
pb10OFcm9u0yoVfvzMn3Yfp0YBw6Fjbwnuhn51aNS6Z0mMzaeE0lh4bmUhhX
PC/S4daD08lrCP1y7R+//dOZDg2P/iN1V9DQ4WblKavbdFgI9ZmwqiX6lfGt
brsfHVgnZz2TWmlI+vUtzwMhdJibv7gvhU1DQY/o+U8i6TCR3nLZYYaGWhUf
5ynG0YHvo/efIQ5x9HR1UWQ6kQ55t1T7VAl+D/ydKhF4S4cqDcP4dQri6Oc9
h832aXQw3DLxX+tWcQTSDuLC2XSo2E5R1EPiSPv2f/9x5NPhg/M42c5IHPVr
JBw7XEAHJ0OezzsviiMNBzlKeyEdHuQn22e4iqNjChliNcV0aInb+L3ugTjS
fZuxIgN0OJJx8EhMnDgya0rHqwgcL39hcjFDHCW+bXrWQeBi9jGfuXJxdCJR
fp01gT1C1lg8+CtOvCe19E1xOsibMlNeTYija15PdpYX0WHLUPdafT4JdOVn
rXXWZzo8Uy+0usqUQLvdTGPZH+lgOT+YIqkpgQoiDyrE5NLhhl72c52TEihX
jl/7WyYd+Dcnzo45SaBRe1rkgw90sDY0YAoHSaAGvc8LrW/oINRiph6TLEHc
b4Ria5Po4OVYIOoDEsh2/8KO8hg6qG3c5aw3L4GmUsghzeF02LmF9URUUhJp
HJAv/0jM5/6qV4PwDkkUG2aoxnWPqP9hrsVdJ0m09dreJ/yX6LB8LmZ0rFsS
8ewqdEmzoMNHjh8B60lS6GP9LYr7GTo8rau4vFdeCiVJYK9fGdLhp4Pd1yoT
KeS65/J9ph4dHmeO2W6+KYUsQg3zBw7QYde3L2nosRQ6eNa8NkaTDrcb5UIM
KqRQBse7pSc7iX4/923d1iWFni2rzXNup4O+YLp53KIU6ny+btccwefIv06x
/hLS6HZDfoPbJjo8Eg5369kijUpP6McEb6TD79XsrR90pdFU8cKg1gZiv5V8
sxYLaeTWa1Aftp4Oh3Rkhq3dpBH6wRh/QmChqiV9LFQafVRrvXmYsF9fO3XA
Plka0fbOMnOJeBY7QsUaP0mjbJtExCL2M3J76uRfI42c1/e8ad5K2CsI+Dh1
S6PNom1pz3bQYTGpbDZoRhopWXms37SbDjHwd+43Lx05e1vYh++jQ6fwe3VD
Oh3JC2zX+v93AUrHQ9qGNtCRwxn13iFCj/xCWHqaJh0N1Wko9BrTQZY8MRau
R0cunp103JwOa8sXrz81oSP9r8dveNoS8XpRVP5FOuoJEdeSvUboPWSb3sxV
OtpR7Dcb70n4V7ryHfekI8pp22ieB0R//tPrKfOnI7WUpXtGUXTQ/mTravqY
jqYlLgd6E/wRyns/yBtDRwrjV8aDs+jgondhufEFHR0bvuriVkKHpo/CM1Up
dHQgnQPtryfOB2u1V52pdNRkFTfTyiL4K2dwmZlFR/H7P6cf/0eH/aldmx7m
0dFVMOMMF5ABcvTcKeUCOrrUl8nxgiEDcW0na2cK6ai02gpd3yEDtRfNhMk4
HW1Mqa7jOCIDK7MJcwZAR6ajTaaGFjJwUVZ/jNAh4vSenjtySwaOzHVXAYHr
/llfnXgkA9Sh9T9nCX/5pjq+vSkycNLNKTOomI4adDRSFXEZ2OJWHORD7EcN
a22PbZKBBzHVdX2f6CikUyyzeVwG0tL+2iwR+Y68k5gJ4peFMX2Gf0I2HVk6
kBYTlWSBMeXe05ZOR76n7zXL7ZWFRKf9Dp/e01Fm0cYbY6dlgX6lWX3vazpq
dh13FbsmC1EyZ6KcE4n+h399t+6VLLz/Tt3A9f/+es/f5ANZ2HNYocw9nPCP
E+uW/CsLhqEGBXgIHdnqCL6JEZWD3uzWQvY9OuLbeMRx2105qLPPC06xJ/Kj
fSu8+0wOIno9/ku1piNjrCg/O1cOfin84Kk5R/DtU6nbqyE5WLppJBxoREcL
GsLnjHjkQfL80cfbDIh5OwuoFSvIQ3FwFIOuS8T/xT708ZQ8TP7TrqvaR0eq
LWs+qTvLg+spg9JEgo8HZadDTgTKw+rtLydbd9KRrtadP5wv5eE/uOPsvZ2O
QpO2sw5/lIelYsHysK10dAMJHxD7RcR/cOu7zGY6Sgh8X3ShXx52vGHmrFGl
oxj/rY7KK/LQLdJ1OYvg/+1KRrKFOAOS1Hc9/bGejqJpS+K8Gxmw4cSLoP9/
d6eotSRPAmPA6xF5gxICp7xXb/Q/yQAb/4nHrwl/rZA5GWM7BrhSbmZsI+Lv
bHt4z9WDAUxFlXRrYn/JjkXroRAGdPsvbDuwjdCHr6dXejwD7I6AZ/0OOnoh
lMkuSmdAwppfN2V20xHpfJsKDRjA0hqIlSH6IedaIZv6kwFXHh7ibzxAR5fv
X6YFtDMA7+p1NT5C5LfvXkn8MANojyVVH5+go+HaNN3peQY8sNos8NiMjrbX
vtjkz8OEvkqfoJNWdHTO5uulE2JMuBD3IrvNkdCD0z/T0/JMWJjPUdniSkcX
sLyaiHVMSAnVEj9EzF+g+AwPVY0J8bfakBLBj6t/+lKKNZnwtyyKizjnEcU6
tyxVmwm9L6hHNxH6xF43dTTqMeH0ly2RJjl0JPLNoEf7OBM2cpNmtEvp6M7L
gTUjp5hwMeqN9HAdHWl4y1q0nmGCAaNQ27iHjvreWX8S+/93r8wKjl6fJvhz
+llhhBUTftEqUw/xyKCEeV6TizZM+Pnnhdt3aRlkuk+9wf8SE4rmP55fUZVB
4gGhrFU7In+p5MxmTAa5320N+2PPBNb95w5mp2RQO7fbXmEHJijZHlZydZBB
q9OnE9KJ9VetqYob78ogB+8ojiTCn/+hoYZptAxqyH2QNmnLhCtBe0jrM2QQ
n1vtltcXmcC1WjsTUSWDRo7zX6+yZMLIOY8N4T0yiMFN/mJ9ngkP262P01dk
0MLF0hIvoj6PvHulTLosKttncUXxNBPu0cofP1eXRZohXqtnTzCheTHwhu8J
WcTTDRzqR5nQ0rqmt+qKLPptz6uVf4jod0iRkl2QLAq/f/wym+j/x/ad7bdK
ZVGmQVXyDgWiHxN7vT5oyiH6OZfrz+hM2EG/oWxnKocOyZwg8dKY8PvJLaqs
qxwa/TIvpUDw4Zvpo84DGXIotrf9T88qA0YcH0S/+CGHgHtr7l+CP099pLdW
Dsqh4orvK5GjDNi+ZW/t8bXyaGatUOSVAQZU8bRkxiB5lPHEIjSZxYCWX/ab
fc7Jo+alK666nQy4G6dVuOImj4qTSSEWrQywV30gyxshjzy/21bNNjHATYvz
VNgHeVQqvFwn+YcBy5sNIOyrPCoK5p6trGdAPXsNbbVTHtE+xytK1jHg6Ljj
+bp5eXSGi7eLp5YBtW3dNA4xBtJ5LmOS9IsBeXfSxQM2MNAhXUn1KQL78UWm
miAGanZOKFgm7IukBp5fMWGgwFilzCoi/t81erJfLjNQi6OV9Xlif5OggQ7D
ewzk1+ceU9zMAE+dLKZgJAOdeCYXO9nGAI+vo5HzKQzEJbFDaaWbAZF+H32E
PjGQYcvXS71sBtBnOLN1vzHQ2+8m1NQxBjzac9ovoYWBrpTdWH/6H9FPd3qb
9CADnR+u3P//ft8MTNr7fo6Bovh8MTN+JlASv2Wa8DBR3W+OgFxiXnGUjV10
GhOp7aE2LTIIPraTuKcZTOTUrmWrqsqE59cyR1gbmKjs3kjFwd1MEOPuJI/s
YCJtiTskncNMsHq9bb/gPiZqezBwdyPBtwjHZHXdQ0x0u7iRMUPop/zyU8p/
BkzEz5xZk+DKBPKBM16iJ5nofNNHHdVAJtzBXWtfmzGR1Fvf149jmfBEOYR1
8TwTGbVK9FWlMkF5Q7OsvhUTPf/rLPIbmPDe0tLOwoaJBO5PpL//zQSBsaJ9
by8xUara6DfdISaouyfEbLZnomvx+1xqSQrwI2l6fJLAZrtOCJhTFeDbm/Q9
JAcm2tduP7lXWgF+PrnQeY5YF1Q3339zrQIsy50tFrFjIrFz0XxrtilA/bLx
gyO2TPQn9fpBib0KsOGR8PVlayaysDDVPqynANNmufU7LJmoavGmWtYpBeA0
GjGaPsck7ot/FE9bKcCWY89+Hj7DRGcSU8iqzgqQaOvovOM0E0UJ38UvPFCA
weHn6UtHmWhVaM9sdpQCzDKiXw4eZqI5tZS6jUkK//8/zIejtJlo/c+3BpeL
FeCgGkX4kAYTbX/jOJUzowAZB45p0Yh5rWyS+i+KUxHmHS4dHpRiotPm+a43
RBVBdX/0VKUoEz2RHckW3KwIzkwh9VJuJkq7eeBNyR5FoL1seDuxykDDfWaj
lnqK4DUo7WW4wEAW5hy8uhcVwfjiG96sMQY691iqxv+aImhuGmusJvils8rz
+/kdRdC947Nes4+BsCXjb/cfKoJaztm41S4G8lL86bo3WhH+e1aftL6dgQ4y
VguKkxRhrJblVkjw9eik7XPeDEUoOPtAorSRgTRPlO2mFSpC8c+9mjq/CX30
6DS2fVUEgZbUs7r1DHRRO6rjYj1Rz/E7b+prGUjadLAzoV0REk7pcI3/YqAb
O8bCIwcUoar6/UoigZMk/mvcPa0I+ppf6icJvOnjYmHwiiLQlV3tegl/+dZK
74d8SiAlZHDgHhE/U4XnwXYxJah5eyC0kti//PoVFx9ZJQjQ6aeVNhH6KS4V
dV2rBCV/3+5yaWWgJ/xMK8pmJUi7ZfOvo5OBqgwXow/sVAJ5pjybn+jHH0lt
Rfo+JWAVcajPDDGQk8j6+Ec6SvB08VVM8iQD9dKW+uKPKkGg8lVbGaLf3Tql
FANjJbCfNvIw42Ci6Y6yU5FmSrB+DD9sSWEi3avjB9wuKMFFckvldgkmilZV
Dpu+qATxn7pCfjGZSMPqzFaqgxJo3x1M1VQl/EsSDIqdlCBp+Nsvp11MtJAi
bUi5oQRup49tuaLDRMe0XtVMuSpB5vmUoB3GTMRXl/ja/TbRDys5jRKCz0Ju
9n3PvJRgXJdDSvIaE9WKZf4yv6sE+trdLzfdY6KEq6zuQh+iPx+HWzieMJHC
A+2fuJ8SOHxMsoxKJPj8dNDrkr8SBH8vudiZw0Si1+t5sgOU4JCedVrHVya6
UBpe8DqQWG849Sr0LxPpd0hK6T5QgpgfRfrsMSYartn/PeL/+PHVlzc5FNCm
yUN+Twi88ZcEmyKogAo+zNkeIrCzuwj3qJQCWuYSdc8i4i3ffzUpuUYBFXr4
s/4S+4ncbPf326KAnLfVL5QR+WxX3H912x4FlGegvvn6fSUotH+4V+awAlr/
slSI5asEcrffnN1nrICcgkKNFIn63k49lHp6QQHlrnlatomof2fRtmSFywqI
UQ9GAneI/l/Plmx2U0CpO5v+HnVXgpw/s8GlTxSQXsCY4AWi/5YSUWb8X4n4
qQGTzo5KYHzy/c3QBgV0ct1xsoudEixqhdkwuxXQ5Nriu///LvsKt1ev8TIR
X0OEbU/MO9ms0WtYQBFJvhKzu2yuBN6Gvst3pRXR9w8GgZGnleAqNanVd4ci
Co4d4Skj+ONzP/3cAFJEjS90T1NOKAFvN4fQ7mOKyPLatvhJfSVQanYp87JX
RK0BniLP9ZTglkqjkaOrIspstt175bASuO56pvy/is48Hqr/C+MpRWmxtKJk
zDXjjjtzFZGKg4q0ESlbi1JJ2VoopVBSX0tJkQrZ2xSprDlJUYSILJEQSkWR
7P0+vz/fr3HPec5znnPxDyI/ZYjYsl6wn+R15/wdS4pClEExdXdZpCHJO90f
JryuDOHbw0aGgYOSjUd270xWBuWp29wi9Dm4MXxLj+0jZVg59cdLFz0yz98j
UfL5yrD50IxjZ///d9b7xnVce6MMeue2tTYt52DSyu0naqqV4VTaQV0fwto+
o9y3zcpwuXV6yB7Cfx5Mfne8i9TfdvdVFOFl1+QjP/5RhnP5afHzSb3k68+z
u/8pw6dF8tm/CCsHTUpIm8wBhyCxQ/OIHrerpd+U5DggPdNuSgTRG+6hZKGj
yIFt6Rh8gMwzV2df+QCXA4XU+obrZN4z/PO+2xkO2NXHx6oac/DZh085+7U4
MPRzgs104t9vVWY8uWsYbPM2t1zPwaJwhylOKzkQ6aQdPUj8HjpkmWe9lgNL
rnWq/LPkoDDFTPubOQceTFsf5mhN7j3iWvG8rRzYNFS2myH7zZj+8k+HPQfS
Aw1brMg9q7aNeVru4sDiqHzFln0cPLZEtGL7Pg7IToj8VebCwQMa4vskD3JA
beX+yfPJ/fIsP200c+fAyiyz2hJvDjYZJp3WPsKB2xwmup7kef0Kz+xnXhxo
3iG91+QCB9sdDH61e3Ogl34mNTOMg4kjsC7NhwMlnusWLY/iYIzcDkrJlwNZ
K5s25Mdx0P+Ot+Qifw5stjyWcP0uB7PGgtO7znCgpiYtN+oxBxeaVHD2BXBg
atFQ9Wg+BytUxoedPkf0lxWPPH/DwUudqb3agRxYL/H1X2s1B+29Jx8jdwwz
VAI9dnwmeRV8CblIOPHA9tTFPzhYdT+wQYdwyvpJNdaDHHwSabf8///XQbN2
z4eyiSooW3/0RTjpl11k4RIiq4KHn4g/NjvLgTmWerxwJRUc/RN+5hXRq71g
ikODugq++GtUOUTm0d8/arldVwXjPUv2/j7FgaOvS2YomKjgpjZPrfSTZB+r
snwmW6mgnebEjfrEH6XrhkFOHipof9R9Uw3x8+riBNeK0yrk+8OFv988OGAR
4xthGaqCg5P5W1tcOfBkcI919D0VdDDWSQ514kD8BsXEyA4VlOG4nPS3I/6w
acZr+1Xw4lTLXeusOZAsfJb9Q5yLDXXPvSgrDhw3+RrQpczFmi1BeQvMOHDS
JgKXsVzMkrGearqeA43WP8Mc9bho0HSi4LopB+oupj9hbbgop5/6oGgVB+Sn
n7pbtJeLmcF2RveMyH65JgEqR7j40nD6rxID0q9tqZu+HxcHN0SECoAD7X0L
cmaHcjF2CvO2XI8DGYXWbQnXyfOTDqrnkXyXShREfEnmYmDoKbGB5Ry48XB3
+vtH5OvTt7ieIZyazF3lks/Fw+dkHcmdgswV3YjUN6S+o+f1W4RXU2H8sGou
3rkVFbaU1Nu3ZkLGrGYuuqxJCNUg/WIl92gs+cbFBVa5UUH6HFh36dSHnl4u
br02/+R6otfXrGi+0SgXpZLM8o+SeWR7xj+jJ1G4ozI0ecpqDrhpZT5OnE7h
t62bdaTWcMCm5pBx+mwK2/1nio6v40DVobbhDQso3Jy+YII18dNb4nXccYrC
y98y2lIsOTAqSLfQVKfw76XVufvJPq6/vOLivYhCg8JGtZhtHKDva97YqENh
ZErWmdW7OdCpuKns4QoKC8TnNOzYT/Kfk6sfY0hhrgbv9w83Dkgaqh1WMKbQ
zVNr9Q9PDvi8bdJWXUth89OhKdtI3rIUtWJwA4XBmkrq+iTPF8S+TPxuTmGc
wrf1oaEcuOQtmH7HkkLfgwvK1kVy4NkkjBmxonB5qvjLI7c48PBVdPuXrRQu
yo6dJHmXvE8sks332VA4b1CWK/aYA309i88ftaWwMGGN051nHODrnG0W2VF4
OiknJKWY5P/Hws6rhK11WycMVnJg7uZ521IJuymkTrnWyIG0R4Hqxwi/nDg+
62wnB94c6Ns7ROrduGI9lNPLgS13I9drEf4X43VJ5x/Zl+9NA4b0H5LVlh+Y
ogLxJ5e8/b++y9t3Sv2drQIBBfdvOGwh8+26n6mhogJPHtqeTN5MocOzAssE
kQosMQmyzbSgsMJ1c6/pchXQ32cB14gfTyPN/1NeowIDyuYbN2yk8CdvzqCK
lQoYjnP4tcqUwjMNQWbX3VTgv4WXl10ifgvElfwlfFTgqHD3vIKVFLL6MpyQ
/1TgZTrvYbsehc/XvT9Tm6QCI48yVuaS/Zq4WrY2N6rAhE/p9zNEFC4Onvc3
pksF7ietj3hK8nBsuuEFy0EV+HO+2r5blcIZeeRXxZlcOFchZcdwKTyY/3bZ
RA4XviTumhuoTPxYtHRkp4gL1XJhbomKFHZbXbr5aA0XSjenpLrJU9hpr/cx
xooLyg6R35zmUugfJTN/2y4ujFe5oHuF5DWM07rmmysXglZ1R/bPpHDAxGAf
nOBCWOLGlktyJD8aCdftArkw1Vi16v//d8yq7iJvWTgXGqUqJp6VofCI/R33
2hguVJkG97RKU+i+9+EEjbtcWOMQ0XqBcFekU7DBEy50bV4rcZLw0p9e7ZOe
c8HAe79NHuEqmfnSPiVcCFH3eLiB1Dt8u3ZJQjUXPh6QeriY9JudPj7j6Ccu
PLS5/M6F6Fk0TW9GbycXTA3y7MfPojDQ9cO/2b+5IDll44EeMk92t6RL8xAX
hnGgRXce2acv5/D6CRS8qDA+3KpA4afsq9vtpChwuvAkuovcp5ppV5qUHAUm
PrV3LTkU6sYEKdvIU6CqkPBAifhvuvZM1GplCg4O1J1bT1PY+0RGv4JHwbDS
hYYmIbnvWu6+foYC7+tP5d8vprAoMTsxczEFB7zkfZilFL6SUcifvZQCZcdx
El0kD2IuA+nSehTID6w9NXUV8VvF7WmSIQUL48KOXSL32lLwfWndagoCdK3N
j22i8MChr00pphTMF3cVvLAm9/H7qu/sDRR4DOzpP7iTvI+MHRarmFOwfLbI
2cuJwgAP+2UVFqS/tMH2ax4U2qh9XLfOioJ5i+4VqJ6g8FGmWLftVgq2z9ii
uiCA7Cuo46KYDQUN/qtrTlykcLA4sF3floI0u+0N+teJP7fGdcyzo4Bzy2J0
VxJ530y7+SaMsN7S7MIvaRQmqBZJkjuGfVc3nnyeR+79eMFmV8LCDnud3tcU
PqtfGVtP6rWuWlt+tIbCaUzn9D7S74fOunbjVgond3mO5ltTIFWo072zh+RX
WnHIkOjzXeynjqMUnty0q8CX6I/JMM6wl1JFRz8h+FpSsCjn3CGteapYo34q
YPUmCuoXHtAw5KniIi9BWc1GCi7XpYb5aKniKbdjHtrrKfgrOWv+FyNVVPod
/+Mg8VPfZKK+/E5V/DyzusZjJQWJm7zM/G+oYnBZQsNJbTL/Z0VXt7uqeLbn
YgGjScHS82KG1tmqOGFo+Z/PLNmfpoTDpFpVpNO2NrvQ5PMos9/P2lVRZiRm
swXJx4fjJYW2f1TRs/RxoAWXgrsZxx0Esjy838frz1tAgbt78TiLhTzs6txv
v1iRgln+eSEmQh6uDZxUXT+Pgskka5OW89A+THQ7aw4FIpPCA4FreLiMUh5f
PYsCibWPLhdb8XBvVUGzxkwKUs9FbyvYxcNXxvsUqmUp+Nz1jevuxsOI8Hs2
L2Qo4A3mulSc4OFmHefZYoQ9ZJv/NgTyULqiNixMmoLFS4PSQ8N5aGGT1+hN
uPSA5JuOGB75+fNdCRIe389LbL7Dw5B/hv27yfPbx93qPPqYh1pJNpnOpN+l
Ed1jyfk8lLA1Z2rJPdXvqDrp+pqHhclrhPeJ3tee2jtLK3lYZ3DU7AeZx2Vy
ZVVOAw91dh5ojSL3llUkeLusjYe9FvHdT+dToHVmRbDpdx56m3C0/n9/py0u
32zv5aEmbU8bUxQoftavnD7Mw+j1BsM5ahREbI4xLRDjI++CR2CikOTR7Kv7
OEk+2kDWHnGyv7Crl/4VT+Pjkru3mmrJPa7S9vyrIMfHsznrvnOA+CXRcntw
Dh+7r3vot5D7++a14ZGDIh+/N1xd9v97a/0iMbJlIR//KLkM5G2mgI679LRe
hY8ZM48Y1tpTUMX9tOu7Kh9ljDKv79pD/K22LQ5R4+Nho9Ll21yJXoUXfS8E
fKxI/TPrlRfZ70GXmgCGj8Z1G6fs96NgW/8p+ouQ6C01CvIIomBadVLyZxEf
5fZzvny8SoGRc73BKZaPq8z6FibdouBM02n+c8IHrC2kS+5R0G/nVniH8I4t
TqYmmRTc21f6WJ+wbLGsSL6QvJ9O4Tt/Uu82w/26vIKCHf/NW+hN+vGjK9zu
fSSf38ivVSN6jkxmQ3Z/JXp8ZXaGE71Dsa0NO/opsPmisiafzLM7q+b1jQmq
YJf6xeQBj49vDsjHysmogv9uwQonio9Si+t9cYEqpB96rLiR+JWiaLshRVcV
EmLWbzs7n4+KB4tbak1UQe59hG6UPB9nPfb/SG9RhfgjqgePzOSjxdRxVvMP
q4Lb04LDQRJ85OQeS7qVqgrjHCZcNxfn40CwnpVRniqsmz7wWJnsW3bbRpn6
ElUwu28gPjjEw6an0q4VnapwZt4ubakBHpm/T4b6qwrPXv/YoveHhxDuWrR1
Ig/io8uvKPbwkJcZqWWizAPVVYbTK3/wUDJEcHlQyIP9d2pV8rp4qJ4YZXFk
OQ/YPd5PWr7ysMxx9OqTNTxouenma9zJwzN3psVlWvHgjKXj3J52Hpq6Lfh8
dBcPZgSGtjV/4SGVNfjtuysPhju+KS8gfKs63n/2CR7UfLr08S7Ju7rN+Jju
czxYG6P5M5iwwhzHXYcv82DukwfDRYSfnOgW3Irmgf+rFx725PlHnc0XPG7z
4ERu9zlz0o/jmr32yyMeXP7sopncwUP3V3CkP48HbTPsNHcSvYEzrdfGF/HA
Tjgs7kfm8fLIN/tawQPNyXSr1E8eis+8avKqjgexpwdfj/vFw7G5pdo6LTww
+enq7tBH7p9nu2fFNx7cDTyyfhHx8/lk2x3vf/FAzL0ryH2Eh1U3v/UPD/Bg
1+iPuf/fR13wD3j0jweGTwzDDSbx0cE8+vrgRD64Ovy2qZLi403lvjtlUnx4
unOGX40MH7OiP1ovkuGD/PGUD6Zz+Zg7fk09dzYfGpU6W0RKfNxeNz0xSZ4P
PdwdbWfIfWWY3TiWuYAPGrG+NSYkvw3mp+1tOXzwew4ux5fw8fe9V9cvUnwY
p96mMFefjx+f8Qut+XwItvwntdCEj09l5e5k0nwoMY7gXzTnY+P107seqPPh
Xa2oNsuG3Jf4Eh++kA9hp99P1d3Nx77Nn+TWivgw6tjkM92Fj4NOKgfmsXwI
t8rN1PTiY6XH5ZErhO99XzP3jh8f6RqLvS8IO4vpVzgHE33Z944lEF4e9+Tr
0Ug+Hpfzp5cTvpVRuqo4nrx/hrIjg0n97j3mMXYP+JhscGbyDdI/4fSlIDaH
+Kcc1r6f4UPotUW+UMTHDjH93FEBH1ZrcioCq/gYu+Om9lYyj2zq1fsTm/m4
svko14f/fz0LNR5956P8dV3nQ6p8KBBunnRxkhq2rY2jPyrzId5uq9RTOTU8
NOdH9xYlPoil31YeW6hG3odf4x8p8uFwwLG5DcvU8HfdYwPFOXz4uUzD38JD
DXWmLBknIvvbYiTVO3ZKDfVHbtuoSvJBKjIiJilYDYdjnb2Uyb69988LqE1R
Q+fnZ1W1SB7SD/pmWT9Rw4SnznlWIzyIoQ8ov3yhhry+MqWQQR48VVrZa9Kk
ht2/wlo29vHggXzA461dari3J/pbC8nb17G7Ow0G1PDmxCLJm908cP/o/35M
nMazyit2+P3gwcHB/eODZWgcHI0fudrFg0/r/AY75tP4N76+vOkrD2x/vm+V
omnsGq5+YN/Jg8cbXCf/0aJR7Mp5yzkdPOidtacyxoDGxUXNm2e08yD6v5Ji
yfU0Dpi+VlvzhQcrvMKi1LfS+HqLGae4jQfPvOwVJHfRmGlW5RxKeEXR0tWR
B2m8PbxSKo5w47mV+vWeNB7TDPw4njwvlbF0c4kvjTliny9mEM590zXe6T8a
j7eduJ9F+rV6xfc8DKfxhUjuwkyiz+P4nj+xN2lM4EVvLCL608WoudpJNL6/
xvytIvMVjHt70T2VRs3wKpPlP3kgnW/4esMTGq3K79aLEb+cF+tte5tHo7Pl
2AxV4ufQ7akLvxfSuO7Dybl3/vIgYN0SuTslNLLCuO6QYR50L5Jwn1RJo7aB
kl012Zdk2nDyuFoaQ3K9uk+K86E6aYZdZCONGpg+8fxkPvQm9+x520Kjf6bS
y/7pfKhpkq2N6aBR2nvtgqKZfPCITemb8Z3GtvQJpYPkfrszTmgv6KHxQ8RJ
ixCSv+9OD8xKemk0/RgpfobktTnMipr7l8bCe/pDdeQeBr+uToch0u/pflyq
w4cLjhzJ4REaOTfv5EkY8EH599Z5a/7RKOMR+s/AlA93/XPmM2IClDI02dBu
Qd4nS6Uv3R4vQM7P6cLf9nwo6j2u8XyCAIfD85sd9vHh0d6c0aPiArzkF7VX
6xAffhUaLC4jXBcgOrvHhw8SWgrr3hA29nLP/32evE98n464EK4M7tlZc4UP
J9af10BSr56je3paHLl3D7+pBaSf+3a7gcupfEif4tLiRfQ85Acdcczhg9lP
NZ2vRO/VpC6Pk8Xkfrc9z58zRiM30lXvQzUfdPL2b55M5nsS9Xn4YCsfLhvu
HykYpPHz0dHk5b/40JHU0LCG+DPjcLKC3j/Sv6bq1PtfNAZItM8vVFADq4OV
1z2/0Pis33KDoZUaeKSPGmuS/fDlVv2Z5qgGZ+bceP+ticbIGQU5nw6pQUDX
4As7st+4sSgPn0tqkOezNeUPycPJX7frJ5WqwcA7uoLzmsbif78nOtSrAfvc
xMvzFY2yHj0Pr3Sqgal4gOTgCxp9LpYdutGvBr4B3SX3ntNY4np6grs4Dc2y
e39E5NP4eyVXa7osDXU3LQ7nkzyeUrAQc1WiYcXafQb8XBpvllufC1GngTE4
I/Uhm9zfMmvpfUtpqDS5b1eRRfpdWSv7dxUNB9V5oXMJD8v+WKS9iYbPD26/
eZRJo9Svs6bcbTTY/ngilkR4zqzwPdlONBS9kev+TVjj2qbSP4dpWMDbLRdN
nt8WPX+48hQNkcbf0++Qfvs+PUzdcIHo6/OqUiB67l7W/+wYTkNajKtuH9Fr
bbr77axoGobeSDgvQRrDTnd02ybTMLEpNaGtgMZp5baTlzykIWlvxOdxxJ/f
SSFKcZk0LH52uDqI+Pc1rdQnGmlYU7rr+/m3pN7EwWy1YhpW5YmZDr6j8dOR
ow8Ny2kYW5BW3FBD470jLWc6q2nY0zNtUOMjjW8m3kqW/0hDS/9F5ZHPNFbs
WFpZ+5mGxCsOerqdNF5W8ZdU6aChz8he7PtPsq+a+MjBLuJPrH6ldD+NOxs+
ytv30GAgPr08eZTGc3Vq7hv6aDi0Ib70wUQBfuh58KrsLw1UlNsW3nQB3p00
FvJpiIb+UzPme8wW4L5/BdLWozTU65cMyysJcPoC52OH/9FQpaCutJAvwPiF
LjcXiwngr0Dj1CkNAU7rLj0TOV4A1hUen5csE+BStW6nxAkCuLFmZ73RKgGe
CdmdaScugI2vosviNwpwe88FqeeE36oc7rOwEaCr+zymmvD2sO2bzR0F6PT5
ktwNwrP1cssj3QQIM681zyUcMsNvLu+EAK2UtT9tIPUfXFDMGzgnwBdnxvkZ
kP6bCrdQU8IFmKqmtrNvnAA8bR2ubIkV4Bx3Px1non/CllZR4z0BzrN0/HKb
zPcijzNwNUuAHSXnd2cM06CSYfT+9CsBymWUlocM0jD/c0jo1SoBJjt+sV1B
/OLIpWzV/CnAZz2Xlfm/aUjQy/6Yw1XHw/oyOWntNOQ8WjA3cJE6dqVIF91u
pWGgfvw3W1BH3R0Xl0c1k/0pzfeQsFPH27UrjDzradBdyV/8LUwd1wkLYhLL
aPD3lvNwjVXHS9W6KW0lNKy7f/93zX11tPITdzV4TcPF5bK6ijnqGP1ugiu+
okFB5nizbrE63mr4N2NPIfl637TLwmp1HFujnrCkgIZSod+83s/qONU735Hk
GGadnLHpzE91NJe6etjpGZnXjKvbNKSO72Z/qarKpeHfa7cfI5MY9Pce2Xss
h4aIV09SPsoyeMxevs8+mwalT60lxxYweErFfO7ZLBpOFM/5WKHGYOpc343k
7oDqunK2SZPBy+/3/EghHLzg1s0YfQazTuUr3iPs6QNcGVMG7cf8G8cIc+2/
r2ItGdQbWzYhgdSrc+DYD9kzOOeD0+Jo0m/C4KfeA3sZ9FaSbusmeqKY8S/P
ujHo8drc5noeDRqmF/IMjzG49z/mdlw+Dd5Or0Zv+TJ413TzQwky/wlH+/pb
5xnUYTgKpcSftsAVjXCJwW2didt/FZH+PgdfnYxk8N67ujwv4necRH7QlhgG
c1W/6+0i98mdv2vb20QGi7vvZqRV0fBaYfutprsMppXLZe2upWF6UUvvhTQG
h8b33T/RSO71m4965RMG0/NycgdbaNA7vdwmI4fBtkkONQ2dNGwwDi/UQAYd
Frg84nTT0NWwusu0kEGLfUrv3/4hedygUv6ziEHnGAXJzBEa3v6R7lxcwqB5
3CQJMZJ/Tc/eNQplDNa/GclNlhKAzY8R3aQKBhPGSlrvyAngUunYoppK4u/r
uAmTFQUQTcXW33vPIMjXH0KuAKzSjk1Rr2HwqE6dbTkjgCyluW82f2BwwmG5
jMXaAri76MsG9VoGxaSUjLtAAHK6A0NphM/fb0vvNRXAsvAy26+EzUfbnUw3
C2Bzy3d+NWGe9a2M79sJ33cy9CI8R2c0/cN+AaQaOTyoJvVT1zbaSx4VQF+8
zY0e0n/rlbxAb18BFFicty6tZvBE6N5WJlgA86ZJWx8geueczhpWuCYAvyUc
5j2ZJ3rcaX3DRAGs4soHSLxjsCR3x9iNNAFMo33YKeUM9u6oduY/EwA/uF+2
uZTsK1nrVvMbAQS7aqkHvyH+upbHPP8gAGya7XTyJYPjLGPCfvwSwKLzxT+L
Cxj0sXjFZf8J4FZX0/6RfAb/RQXihanqoFlumqKezaCpVFn6UZ461I9VpzOp
DO72T5RItVcHd+NZw4tJHvLa9D5oOatD1TaroFUpDK71rLFP91KHnu4C5Rtx
DE7XVRjwvKwOqh1e9V9Jvl59X7ElM1YdXm67BpY3ybxK/ZIf76uT7y/iX0JJ
Hp/2LgvPLVKHp5Vtdk5XGfyToqnp/l4dmut+9riGk3yunZA50KwObwPTziaH
MZi/et6yjT/UoXX/wS9yJN/Xpi/pdRtUB0p96rPMUAaN/7ouspnIADukGnMt
hEH1KsZJQoaByYL5A1nBDBqtk+YfUWTgBLt89nzCBT2vlWN5DLhUD3JeBRH+
06Z+dhEDUZkGnEzCAblHVimvYEDnZ03PH8K1bFaIuzEDj5PeGPqR59dyoi0P
mTNQd18ybjvpN+elzjSuLQN3zg8duEj0LLmsZOO7m4EdfQbVs4let8qHk88f
ZICz47+mPjJPtDTMXXqUAWfVY/bqV4i+Pjot1IeB+L/J/c8iGBwufS/6L4CB
fzJv56dGMRhqF7iQDmGgNvPnzGHiZ9J2fQPnKwzc3PK0K+kWg+/2b/Rbf4OB
+fdbfdLJPRvkD0+qiGPg9PpSzwV3GCwr7qJ+pzBwPHvKui6y38KJAU6PUhnQ
u6hiE5LBoLih3Ih/BgNmloUv40keBkLnarRkkf6M1GbBczJvsadh2TMGzqT8
PcstZrB0u0a6yQvi34fckBCSz3ZDWdNNRQx8rYVt+8g9HLTQVPj+hoHVjq9v
PPzE4Ow685NzyhiIG3t/z7GTQTT/Pq2mgrD2wntnfxE9tPEDtSoGJA/UHJ4+
TPInqX1uZjUDEfSP6FFxIdbZvhqNrGHg4+HbvmYzhBil8jAn6wMD75rWa4nL
C/FuSVrKsVoGrvn0hM+ihNix4vHXBsIe/p7gywpReu37plbCXotyoo2WE05d
onyFsFpPyaetJkJ0HF96upfUm91h8y/XUojH57eKTSA8/pVRkfNOIYaZxdYX
ET0lQ1qVO1yEWM5Yuq1+z0BjjndIhLcQn/tkWPpXkv0saASp80IsZQYN/cl8
m5xuSjy9KsStf5oU15L5IfNi45UEIbpkXur4VMLADCmTm3HpQkz0PF28+jX5
PM1cvBaF6NWqOP7sKwbehgQaJDcKsVdt0aSbSPYR3nx7+VwRVjl7LKx5xEBf
3K+4PlURtrlKFF96yICD1Y7HKVoiPF6mZ2V+n9QffeL9c5MI69ZqvvudxEC1
9rgfh3eKcI7KpXHN8QzkTTs32OwqQq3tD8M7YhkoLisftQgSIVvw6J3tdQYu
L1qgYxYlQmc3KZ2qSAZu7A66ppgiwt1mRp7HrzJw/7qlZMZjEVoLlG9bhTPg
mkAFybwQ4XXN/pcHwkie3q42ZytEiPO9bz2/SOqnJ9yVahThBtMXHdahDGSO
Fc6L+SpCB+k18rok33tXxBi3/xFhVuvM4D3BDLw4eS/w5zgWY7TFdrcGkX1m
/SrIn8Ti6krFixmEbUJz+3ZPZfGYDvO2kbBB5YjtRxkWHxZuinEgzyuZXrLg
zmHxb3u52WpSf1KpueUyRRYFf/q6/yP9i3dO6ldSZvFBg8b6JZfIfX4x7amg
WBTr2DBofJmBXJ9tCutpFitevjV6Qe6t8GyT22Uhi69eH1p6h/gxz/TA1PhF
LC60GIsbI35t3LFC3XsJizk648ULYhjYMPOqhoIuiwUt/df+EL/hMXPLbwWL
n9MP2kaRe9zhfUIlDViM1zn69yHZl2fN7zNJRiyeCBdVLyX7jeh6c1drNYum
gwcVSzIZWJW/d/ZlExb/NXM+5pN7lP7d3/3MlEXPKb15c14ysNO/yydrHal/
dECzkuSravoHrv8GFid3z/D5SfL5br7mNkUzFhV2rIx1rmdg4I5ywVlzFhvf
bzlo0sLA4MiM8biJxc58Jz//bww8mLT9a4kFi+eWZZso9DLA8/tpd8eSxcSq
8/3TRhiQF4+1sdvMYtm2WRetJwph+fqSgRbCEbb3O4enC4FSTXTUt2LxvU5n
/O+5QpCTv9buQVi8+eeSZSpCWHDg6gcfwiNvWr5WMkJgb5vd2U24/ZNd3RMd
IayCw18owq9BfKDVSAiPL5arFJL6/cLl0ls2CqGzzU3OgHD0rM6XU22FkFad
dTia6Jv3YmWk2F4hJETum9dE9BuWVrdqHBLCIEa0ihFOmrKn7dopIciMe1wo
Reb1U5B/qhUkhDBP19xR4k9wzmU7sWtCCF4c/aFuI4vJldycgUQhZO9VEsUR
P20GpW/NeSSE+0EvBOOI3yFvE99lvxXC2vz7u0RkX0EJ/z2WFxeB3AzXmXdX
sigZ/rezUkYEA7fzvnHJfjf+MHkXoiSC96GnjBTJ/tP149b80xXB7KmlO6P1
WFxR8/fWHRMRHJUtr+eRvFzY2rzS2EoE4DLulzXJk0y+jaGhuwhuBD6ZLLGU
Rcd5jYkRPiKwtc1xL9QmeR9fsL/0PxFcU3q3KZzkMWDy2RUfI0VQwlws9dJi
cfGJP00FiSIw+7qs95Am4fAg1RPpIljYebPs3GKSR+qpuHi+CGL/dmx9QvL9
4IrMWasSEUy9cfOkGOG2hvAK1w8iiIg/O9dZg8Um20eida0ioBwS+vpYkoeD
u6d2/hRBKKVfEkt40tH5ffpDIvA4+NXQjXBKdsO6lPEsSB248XM34SsTYp2l
JFngmdWtO01YbG/9B+NpLIhX1rx6QfiOuiXfTpaFkaPZD1jST6e8Y7LxHBZs
BxuNignvDF8GEoosdOoqp/xH9NlEuSZdX8iCPGfNV28yz8OhZ6IJFAs22c7D
18i8/bflOpersTDa6ZTVTvyoKwjqM2ZYCB3n2eZA/Cv/3X9ZRYOFjsOpKjOI
v/9eLlEq12Rh17enE74T/ydHJkw21SH6zx7brEv2kx8w8+rvZSy8Dp2w8pU+
i/YTc8/a67NgeKZI4aIhyV+UWtAFQxZmir0ci1hF/EmyP3dsFQt1xz3aGsk9
Oz75fIo2YcFv9otrO0me5BMKUm6akvq31zznkDx2Rx3cXrWOBf9Cr6qFJN9V
km6C0g0sBCf9W2C7lUXqofyzQDMWLhYbva6wY/H0HMnfkzexsPFZf9npnSwq
3Q14Y2bBwsKRIvH9e4if/e0e2yxZ6JqyaO5/ziwuc09dobmZBZ2bDhdb3Fhc
t+9BfBVhpn15uctRFh+nTDLSs2LB0/eIrPAEi0VX/zUeIWyrVnR4gR+L+l6f
rE8Q3rNXv3tFIIthLyLzLAgH2MbZXAgh78+te9kxUu91Ypub2BUWv0ZYDZwk
HOyaXRZ7nUXfLele1URPvJ/uH8c4cu9vd7EShP9uCF+74TaZ98KyzFlE/830
Dwu3PGTx/EO15xPIfLFr394/+ZTFllhH2fdk/s8zmmbnPyP7cgw4d34jC72J
bRkBb8n9trQkPiD+dSmX+lV1sagS9NxMbzULDZucW717WQxtsygLWslC1JoZ
NqrDLAo9P2vVkX0tmCKdfniKBu5+bRTlRfY5nNcikJXVwNbouLF3K1hwlJvy
K2GeBn6ovDdnyXIWNh3LKL/J18CEU45/6KUsTC1enTsq0kCTbPGO59os4IzA
6NXaGtgz3NfiuoSF4xe2+B/R08DwKVs+amuxML3N8fy5VRpop3s8Q5Hk7dZj
YeuxdRrI+92io7yYhdWubbVrLDSw+fk2ZZNFLDzdtv5Nn7UGltjypoeTvI79
d5H12qGBLU9nBUgQlmB/xbzbo4HaN9v7Eljy/BXP12MHNNDy+aXbLoTH9AJO
jHpo4FBsxvs9hF0MbFJKvDSwkyd7LpSw14sj9nt9NFBXxH/4jTCd1ltW5q+B
7W8aFI+T+tpPXliMO0/qb1xxVJ/o+Zr8du9QsAZ+bt8Ny4ne5KvD93LCNPCU
7746dzJPVIXad8MIDfxW4ez1mcz7jx2ZFXqd+Dn4Rj2I+NOpFmkUE6OBVhd2
NHoQ/0okjZ56xGtguWaH8VVyXwcnt32UTNbA//I8x/0l/o80OpnuvKOBNh4q
7leA+LFHDr3va+Cwx906dyMW/gddE1M/
      "]]},
    Annotation[#, "Charting`Private`Tag$26999#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-17.677669529663685`, 
   16.33788377459019}, {-17.677669529663685`, 16.33783494668773}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766108739796762*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"1a38f0d4-0c33-4baa-b057-b0989547841b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["t", 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]]}], ",", 
     RowBox[{
      FractionBox["t", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]]}]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.766108766537818*^9, 3.766108770936366*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"076c06ae-d56f-4fad-875d-98efd891cfcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox["2"]]}], "+", 
    FractionBox[
     RowBox[{"\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}], ",", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766108771671857*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"7b677673-511e-466a-9ac1-489716db464b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normalize", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], "+", 
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], ",", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], "+", 
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.766108775324966*^9, 3.766108777288025*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"16d13f7d-42bc-4ffc-98ea-c43e3f701f81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], "+", 
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}], "+", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]]}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]]}], "]"}], "2"]}]]], ",", 
   FractionBox[
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], "+", 
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}], "+", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]]}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
          RowBox[{"2", " ", 
           SqrtBox["2"]}]]}], "]"}], "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.7661087776380377`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"dac51a0f-2436-4b82-980a-e029b4b4f991"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Normalize", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox["2"]]}], "+", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}], ",", 
      RowBox[{
       FractionBox["1", 
        SqrtBox["2"]], "+", 
       FractionBox[
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Pi]", " ", "t"}], "]"}]}], 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]]}]}], "}"}], "]"}], ",", " ", 
   RowBox[{"t", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766108781320663*^9, 3.76610878734905*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"59888342-9b9d-4a63-901e-6d9d9d31f8f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}]}], 
    SqrtBox[
     RowBox[{"8", "+", 
      SuperscriptBox["\[Pi]", "2"], "-", 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}]}]]], ",", 
   FractionBox[
    RowBox[{"2", "+", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "t"}], "]"}]}]}], 
    SqrtBox[
     RowBox[{"8", "+", 
      SuperscriptBox["\[Pi]", "2"], "-", 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}]}]]]}], "}"}]], "Output",\

 CellChangeTimes->{3.766108788372155*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"ee1bf40e-6f6c-4395-ba2d-acf029cbe4c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}]}]}], 
      SqrtBox[
       RowBox[{"8", "+", 
        SuperscriptBox["\[Pi]", "2"], "-", 
        RowBox[{
         SuperscriptBox["\[Pi]", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}]}]]], ",", 
     FractionBox[
      RowBox[{"2", "+", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}]}]}], 
      SqrtBox[
       RowBox[{"8", "+", 
        SuperscriptBox["\[Pi]", "2"], "-", 
        RowBox[{
         SuperscriptBox["\[Pi]", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", "6"}], " ", "\[Pi]"}], ",", 
     RowBox[{"6", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[45]:=",ExpressionUUID->"b9ce5867-2c08-4e00-906b-e5054b2509f5"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
8l35QPBZmfhlyeh89N6fu1Of3r/anJMqtk/yUFP8kGzpN4JdWWuHXY/kIs/0
n4krtH/697LfKyvMxtMsqWlVBdTLO2q3VZpl4dY+3fGF1QTbo7M2F61PR5PK
RYWfWghmXrLde+xeMnLmOXKe6ydos1K4xsoyHtVNDg68HSPo8dih7qpWFHot
DSll+Uuw2G2yj3N7MN7lZ7FYTfttz5LPn7TOumMCb9bj/5937U5UXKG1XhpD
v1XfX/b/3+8GXDBc+NAdtm0q2S3ym1AfCM+rxIRCn93iqOfU75t0c67pOsaB
xcu4sRDquTXizkfOxKTCIkeLnyJpBB1hZ9uriGyI59ldGOZG59N94Jcn5sOt
2Ke6+7UIfjwMj7avKwEtXxn+5h0EZ419VzEjyoDlcPiR0EomWkptXwbiVfAv
svfmnbtMDI/UFK4u/QHvGoSfsP4ZwVWXZB7xmNTCYmX1D/eNRvDq7Ap+p/0N
4MiTpFlXOIxn1Jo+7JtrgveubNolrMMYU79LgaW5FZSbV/NqHBpCxuLrP6ba
2iGjnonqpweRpzmX2XupE7YVPuFQPTSAPK3buR5ndMGtI/orGWz9KKd96abo
th7IwtMBCyp6cVu/t2Lz/V5I4g622P60B4dE5z7fju+DE+fnwsZ2dqMpn8OD
1239oJr5RyM+pRO3PjQpTZwYgOSOxj01Mh14OWTn9gPMQZjkjL1vFdmG6rqH
RHaXD8HH22ZTu8uaUcNzu8Ent2HwEbm4auOfBtTwzVOWhRHQA+MPcUfrcOaa
2Sr76hHYM3cgg8fpJ9bM7IpfoMCEvOjdjrpTVTgs/s8qPYkJToN7aoKXVOBA
40udnysIjA+qibncLMX3POKbTOh6vGm5+xrTiQI0TkioDHIgwMWT/aLjew6u
c497oR9DYFONmP+r8nS8vA5KHCsIcMYKmmnZJeBD+Uer6boRlHyN7G5qR6Dz
3ijJ/98XnnormKAl9Rnt94qN///7NvMNeRvXPFbDVc+5P8/QPNzK9vFw5peP
wLz3+tle6qvta1OnNoYEg79Qo+U3mqc9ZWUZdT7RMGDDka02SvOy7DB3gU4C
uFo2vvlLz3d4/lqEkGcKqC51kt/SSODEqrJgA9MMEB2b2SNRRsB8h7P2rj8I
ES0d+9po3o/V9+he88iB8K431f8/3wo/d27BffY8iLmtvTCLeiGowT3onWY+
aFX+DnPwILD/id3WJOqLOxZdzP99oR9w3SA0uBByhDYvyaV5e91G03inWTHU
H/jykpv6Svo0z0bFIyWQYVGwO5n6ZTtbr7V/bQmojrOX36S+ORGYnrCvphQO
CoZGTJ8nYJkRdqDmEANsRsZPskoSOBn1p8zCnAFR+UGaMjS/n3ccfWAexIA8
0TdRSH0lkre/noP6KzlXceN96q9LVYt262UwgDVKabM6rbvqxYUfhzKgfmKq
xIHuv9TOPFRWhAH+Wy49fkH9Jb31dsod6RLwWh70IFSdQNQjA7NbLsUwpnHX
jXmLgNH2ffzvkorgm5Rz2mHT/9+3HdKNzS+EssqHwzdtCHjcVxPUTSyAmcFX
QpedCVQYVKhscMyHvKnDnr8/Ui8qv1jKeiIPUr4rdOwMov3icjgdCnOg3k2Y
K5D2zzEP8cXvD2bDz6Nbwk9nEWBe071xtCsD1m4quhXJIJDjvdD5wdpU0Eq+
2/apnnrvpfvBQ4MJ8E9x0R2fbtoPPMruUloxUG2pkHGc+mvb4apfF7tD4Npw
VXn5bwIrbS5v+HjNEzjvBmtG0357Ysr28LmSItwYJj/maL/1lyt+2bzVE/m1
LwSl0e3MuhUNmd/C8U29y9tY6q8J0f1suQcTMJUnvMOG+qtWce1bp00ZGPXW
7dBT6i9hRuoRM7lc3Fd6+mNTBIEfux81RdUX4tKVhuJm1gT2xSv8/BvLwAeC
r+f/f1+8/dOm0c9Glbgu5N2N4hEmSAuyyH/i+YE3vD5pSDkzYWUZt/mGfzWo
/unZWDQ7E9akcPKmjNZji9zNZq1HI6CxUPbvs9kmvF/wrmVB0TD8NoySqd7U
htYtVu6xv4eg2+Rg0ultHShy6UPVleVDYCjiL+4U2Yn1vOmR2f8GwCkrx/3Q
sW5cecLg6EhFPyxbohbtGt2Dq/Y89mJz6oP9Y6tnZud7MTd7y/IQ6IWyhiP8
yqL9aOUtc1ehpxuaWfkmTLUG8OHi0tRDNl2Qos7dssZ4EOc1FshWrOiENzUx
nS1qQ9ix+O+Wko/t8FiZfUZPaBjPWSadFoRW4PZb6LiKOYzCe1qDPqs0gYR6
30Km6wguFDgzyGVfDzZ7Nkl+2kDXw8ZVMW/zawDTXnYte8lE4furNQq5f1Cf
Hluo3s/E5k2vZIU+VEJ07V/p2qM0v9m+xhpe+Q6tr5ZwB90nqBPzeo1mbhG0
2y3kaKH5qh+WLnjnQR68itkb/TCfIHfOhgPfy7NAItm14FgrwXN8x5fLiCTD
O6kHdjGEYF3940Jb3hjolDgbIT9N8zs+lFtkQxB8T1ybJEXz8L38CuVTJ1+B
itrWDRG03mb7Z3GjsR2G6/Xs06Uec/2VZb1T1xc1pxfqnpwiuCXoUIzxwnAc
+SEm/x9F9x1P9RfGAbxU2ooQRSRUNESDwoOQ2bBCvyJSqRRllZFRRkmSPRo2
IUIyH3vcW1ZW9t7uV0oZye/053ndc+8953ue6/M+dxyNkxTOvVFfGbIuHVmH
LzmU9VPobr2fRUE6CwOf7djs3krhjO/I6+Xbc5CbXjhp85nC07/iBerf5aNc
v8OTaaSQkX1ml84PxE5hcXO5DAo/xNR1jj0oRgllY5nwOPL8n0d9Y9pL8HC0
QcnhMApjNl2gxfKW4eRf090lbhRGvHP8PK5egUXTWQk/7YgXJ4cCVp2oRNcT
EocHLcj1Ox72kZ21Co8WHqOr/kfhvojeJUnbapyYCLrQpkN8KKixkW01DfkM
hleZnibzqfM2uelGQ1rNdL0D8RuTx6acseN0DJQr0d4qT3z4bHfPT3s6nrBv
2FFCPOayy+G8ajQdBUWn/ZyJ1/YeWLOCh/jtlXfgmCZpLwquqPcifrM4aX1B
jPTnGs/6/pL47ZD3zZVCxG9uHf3de4nflO/xzp4gftsUIXBDbA0db9HbMvSI
39qv5AosT6RhZP8nWWviN5/FutjtR2iYe/6bYzDxRUb7EYOGDdXYOMte7nmD
woPP1w/P61Xh5BKLzBlrCq+bsKi6e1ei740sUa4nFF4OfavxILocq7mPnB0N
pHDgVPmgrVcZVm98oX8wikLOQ9zu42dL8XrfBv/SVAp/7CyUll8oxhdM7Ffs
iJ99tySe+vS4CC/pp39lI74urA0s/NxRgJnbPcu1Gin8uyp3z82ruTj+YnBm
qJvC0W6GfWX0R2R7N/TqDvFU3PLOqFV+H3Dm66tB4Z8UmqmYvez2eIdPRDwf
WC5QqNDeqsfM8Rb372d76Ejq0fUx/wolygPdc4QYWqSdUX2g3ePME+DbauXz
hXhPerlwy5nRaAhYKMt7QeqxzDSsK3FvOszcZkpY943CbMGwyx3UJ+iO4np8
hXhtQ9OKl4FxRQC0+GFvsr9ZGNROnxcoh4X7+94K6pHrHclmvY9RDVcVto5G
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
RPZFaoZXw8g+Cbb9uBzrX1+Op24vLuMh/hAslbiTqFGMVpVt/zVnUuBASTlE
ieSiyo9vx7maKDgVNWu7WvsDfq3ZHvZnjAIDQYvpeO44vKLLZn6R5KHwbFrk
caUXKLF788emv/8+T9Ta7mThTHJVVaCC5GHpxm8sqT6v4K/sx0eGfyj4uXa9
/bXmRLBP4V98PkO8kacQo1iRDs5FA3PHJyi4e+lVm9GJj8Bp5TOwoZeCB5mz
lvznciHxsL9GaCMFtvdUrrzfWAg5e5QfGlZS8CNceLtRXhEofxl7kpVDQcph
6YkSlRLYpMiTufiOgheR7EU3fpdBxOE1pYYvKMhSjJqr4KmAq+NHIpseEf8F
F4of2VUJnAZxhhvvU6AmwTp18lsVMF8sObr7CgUlmfmmlk+r4fVvnuwjF8h8
h1OK6btocIRl/YcL2hR0x52/d2UdHbrTzB7ynqKgqVlkljKgw+9HD/1pChSc
KAnPVfWnw77qsCsfgALFiAfuJRl0SElTSm8lvgpiiRH/dz7r5bf33/47n1Wg
Iv1A2gc6XFf6OzBM2rf2Lnnt8qMDL+WWW0fu77hGI3c9Mx0u9LCEGZDn0x4e
FMmNpEF+qo7iFFnf1d8HTHbz0qB9xQ2dzH/vj/25zre/rgpe7U6VDSPzURh8
86tjeRXIf9U1f32bgulae37brZVwVl/kcjCZ/4q7VyzDNlVA1A+Ls+aPKdBP
8+/IHykDeLDT+xe5fte6lrJ3vC0F3RP9atyvyXosvev9fLQE8nRUVaKJdwNP
L26IjC+CV3ecei7kkuv7zClFr68AEkzuL/tL1ktn8ADbisO5UKK51niOrKdX
3cfUZwc/wootZ5v2k/UeGxfk4K9Nhz/234/vJvXwqiX46w+uJGAdeDlmQOql
SJApfNL9Nfy4dNxnB6mnk7spu7z9bpCp9ONyyr/zUGwzJlxNfTGo2nYHN2lv
XVmx42RODFppPTRXnaPgWcvuhlqrdOwLtNWaIY8fp1xudYstB98vY+J5RfYf
rYaPryy9LcIDz2eYnpLx43vdwjOryvFGwo3RCj+yPvUduSKZ1ZibH8O304C8
npZe0URSazANtzWLs1LQm7+J9mS2Hr9r1DPd/Ej2R67avkfyG/GP/1U/AWXS
9mmxdXrVghs8T1/ILZiE/ev6X54Ka8MrtLdvS7dNQqFAbEVPQid+zZ3+fejC
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
LwL/A880bPw=
      "]]},
    Annotation[#, "Charting`Private`Tag$29423#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.9999999595709667, 0.21675241465458}, {-0.21675247647999193`,
    0.9999999970132935}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.76610879240353*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"37f59a05-1fb7-4316-9b52-0377a4a5707f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}]}]}], 
      SqrtBox[
       RowBox[{"8", "+", 
        SuperscriptBox["\[Pi]", "2"], "-", 
        RowBox[{
         SuperscriptBox["\[Pi]", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}]}]]], ",", 
     FractionBox[
      RowBox[{"2", "+", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", " ", "t"}], "]"}]}]}], 
      SqrtBox[
       RowBox[{"8", "+", 
        SuperscriptBox["\[Pi]", "2"], "-", 
        RowBox[{
         SuperscriptBox["\[Pi]", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}]}]]]}], "}"}], ",", 
   "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.7661088025437307`*^9, 3.766108806168582*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"68351fea-b2d9-4630-b237-c00efecde478"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"EllipticF", "[", 
       RowBox[{
        RowBox[{"\[Pi]", " ", "t"}], ",", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[Pi]", "2"], "4"]}]}], "]"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["2"], " ", "\[Pi]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Pi]", " ", "t"}], "]"}]}], "+", 
         SqrtBox[
          RowBox[{"8", "+", 
           SuperscriptBox["\[Pi]", "2"], "-", 
           RowBox[{
            SuperscriptBox["\[Pi]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}]}]]}], "]"}]}]}], 
     RowBox[{
      SqrtBox["2"], " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"EllipticF", "[", 
      RowBox[{
       RowBox[{"\[Pi]", " ", "t"}], ",", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["\[Pi]", "2"], "4"]}]}], "]"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["2"], " ", "\[Pi]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Pi]", " ", "t"}], "]"}]}], "+", 
        SqrtBox[
         RowBox[{"8", "+", 
          SuperscriptBox["\[Pi]", "2"], "-", 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}]}]]}], "]"}]}]}], 
    RowBox[{
     SqrtBox["2"], " ", "\[Pi]"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.766108806880537*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"51325155-38e3-40a7-bd0e-29e6b9d9bc5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"EllipticF", "[", 
         RowBox[{
          RowBox[{"\[Pi]", " ", "t"}], ",", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["\[Pi]", "2"], "4"]}]}], "]"}], "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox["2"], " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Pi]", " ", "t"}], "]"}]}], "+", 
           SqrtBox[
            RowBox[{"8", "+", 
             SuperscriptBox["\[Pi]", "2"], "-", 
             RowBox[{
              SuperscriptBox["\[Pi]", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}]}]]}], "]"}]}]}], 
       RowBox[{
        SqrtBox["2"], " ", "\[Pi]"}]]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"EllipticF", "[", 
        RowBox[{
         RowBox[{"\[Pi]", " ", "t"}], ",", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["\[Pi]", "2"], "4"]}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox["2"], " ", "\[Pi]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Pi]", " ", "t"}], "]"}]}], "+", 
          SqrtBox[
           RowBox[{"8", "+", 
            SuperscriptBox["\[Pi]", "2"], "-", 
            RowBox[{
             SuperscriptBox["\[Pi]", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}]}]}]]}], "]"}]}]}], 
      
      RowBox[{
       SqrtBox["2"], " ", "\[Pi]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "8.586027226125697`"}], ",", "8.586027226125697`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[47]:=",ExpressionUUID->"9918b076-a901-4bbb-89a6-fd92204b8159"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAsqMO7MWJEUDRuGjHDiERwBTbgpl1
NhBATLBAQC9eEcBJeas9ah4OQJpeR8xbsRDAuc+UEIBIDkC79J+h368OwFJN
jL+AsQ5AG+DURJEMDMAYO51KXAkNQNYaJD3HAQrAv476XbFbCkDx2E8EN0wK
wJnKSh4RdQdAefYoLbSWCsBbHDo2RuwFQCDBSaCbdgjA+RO1kepbBkArHJRh
vtAFwJI2qKxwZQZACLcJxz/yAsAVXAwLERcEQLRc961D4wHAYmguaQB4AUAD
u6v0rl8CwNaSkLX9S/0/Rm8IkYc2AsAsbbXasLr7PyA1Unzmjv+/Kn1dbufW
/D+yiPybbc/5vwp3y+FQqfs/kKaalxZ09L8VlbnUgoH2PxeIfGGpxfO/lgsO
jvHL8D9z8L+U/tz0v9n9hGDUCeg/pQ7FKfgQ87/c4YJ+QsfnP7ANsjbEnOq/
/C8YmAqj6T8aQyILKnrev7HAECVbAeQ/MV6bsApczL8k6bBeSO3QP4IrkRzE
BtC/ieRw3/N7sr+2r9VgYrzSv4u9DLFDrdK/VTDI0Xl3tL/qZxmZdKvPvxfV
FEIBy9E/E3/QZQD8y799zORcWZrjP5njaPQAkd+/LHkN/G+i6T+Lli8Qfx3r
v89AWuHErOc/EzJDFDrX8r9tCg3Qr87nP1wm74Q/2fS/HMQUBYbw8D9/cnjb
CdDzvzK7LBl5RvY/mSfOKS9L9L+eakGmFnP7P5VrkSMYlfm/Lwxla7zf/D9M
g/W53t/+v9eFAwKC0vs/HzjWPKwkAsARvAeJQhn9P0vnN9dabQLAYUp+CmIw
AUAwLenjzukBwKmyFZvv0ANALiEL2OzcAsB1eUGrTlsGQDRzJbdehgXAFqyN
5WVrBkCcQyegaWoIwFKiVTNf7AVAizH5m0uUCsC9SNTql2kHQMuw11VVXArA
9geIaecSCkD/fHPB3/4JwCFF20tP9AxA9G9AspDJC8Cnp89BhK0OQKiFdyvR
bA7AZJq2WEVXDkA2GMiQ2aQQwHliFHr6Fw5AJGqJaNpeEcBNGW7TYA0QQNG4
aMcOIRHAsqMO7MWJEUDyBoIF
   "], {}],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 1.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766108810009427*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"efd18b10-84f5-49b8-8db1-c4bcf502a1df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox["x", "3"]}], ",", " ", 
     SuperscriptBox["x", "3"], ",", " ", 
     RowBox[{"4", 
      SuperscriptBox["x", "3"]}], ",", " ", 
     FractionBox[
      SuperscriptBox["x", "3"], "2"]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766108860178974*^9, 3.766108880873702*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"508a5a8e-27b9-4564-9a69-45bbb2e0ebaa"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$30987#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwteXc0FY7/vgihJBGyV2aSNDTu60ZJiVBJlGy9RUki2SOhSMiI7JGyo2t1
X2b23rJXMq6ZUNzf53fO96/nn+ev55xnnPMImzzSMaeloaEh76Ch+f8oBwdm
qFQqkr4pk6lUwbJHG6J+G5tUrHMxWqMsCpblfDl6aOU3FdPk8dfYqGCZgqSG
ydQsFYnyqtTeSsGyk/t8+ht7qHg9Ib1166VgGXF8qT4qm4oLgwQLqX2CZTov
mz4fu0dFh9uWknQSAmWOLT42luRtHObrsogw4ivr7GSZKTfeQrltUYar1dxl
/GWPOE7y/cOo6aGpvbmcZQUPquj3Dm7iFzILeFDYy4xeH13s89rAc50XpWpO
sJWthzj7Iazjq72uI6Z9LGVJrEM8kaNraMzOcfObOWNZzJWjdh3+v1HSZIvQ
501X5mVt/Ezq8ipy1lx/sqBBU+ZM98nRbn4ZzwgfaWhx2URjjxax7o9LKFGW
FnzR+ze++zYZGWO1iGdDW6zOqC1h8bDk7gwRCq5pyj3tKppBl7M7Mt9zU/Cl
twMPZ9wMnovq0/BnpWCJXNIHC58ZLNMJeGOxOY93F8iH4doM1lTPsgu3z6Pt
xdDq6slf2Pk5iyfccx4JyWqRogd+IcVRUcJjZA6NJHMpf7x/oigbUflG7Cw+
k2p7kR8ygUHyo8+tQmdxptl+RP/5BK5reX3x8JvFS0MPnThMJrDxbZVYpt0s
pjYsXCo/OoH2+y8zMlyaRcWen5407eP4/YBOI2lhBlVNa5H1wDha8Zvp8p6f
weyBXRzHM0YxT9rPamx8GkU9f6pt8Q+hYJtRkUzfNLo4s+yS/jOIrx2Vdj1t
nkYaug/HnrUOonnVTApj0TRemDENf+Y9iNyGGqOyQdMo+Ii6xjg7gK5v2fUc
T02jwr97fjfKfqDaeszF3YE/8fHTOyxE7z4crs4VOnFiCuNt54OULLvQ5frG
hVOyU6grbnrV7EoXco8S/zstMoXphQGbHw93oda/llwC6xT+DDm86b7aiWUK
FOVLU5M4XmIPpt6dGB8nba4XPol9bLFpqykdaOKUlP58bQJzNBl4l7bacJth
tsllbgJ36jaoqUy04fswhWW3sQns2FBYyqxvw/bs8tPezRMYJSfp3RjRhipT
ww2vUidwbvmO2eFjbSh2nY8SozuBcVwvRp88bMVJ2XcK+HUcL+ctT3nPN6G0
Wwpl+vM4BqsXc18obcKHLQWf2BPGcSa779HpV024/rhbxOLVOC4caTlQJ9WE
zCSu/XuMxtHA0mjng/8aUf78+xV9pv/xXzhcSFuuR+ebcflrBmOowK72Sl62
FstSs22FtMewoHgtxnlHLe5cR9krqmMYNuTIs9Fdg0HvR5I/yI/hC0r8jwCv
GowfFn53gX4MNfxvn2cY+I7f/0t+GpI1iuku+Ew5shr3uaWfkNsxit0zivVU
xUr0/SpZy/ZnBAtZRIub2Ctxk5J2e2VuBF8SfPWqFitw7F6qS2HvCPr4pYJM
ZgXmnU+qUM4ZQd8nUmyDEhWoQ/9B89a9EQxpZ/UsEStHCR7hJhrnYcw7yZ73
xJGMbAGCi9UWw7hCv1th8CwZ1zf597/SGcZbI++339KSsXbg4G1O6WF8d8Cm
ZCDoG96P55iU6htCGY6op0ufSvGTxK4tnZND6JJZ4jS/WIyyJxZkU1YGMO1Q
kNxAHgkt5NzdiwYHkD/a94m8KwnjDu1tb6oZwHDV69tdl0jIznXEcS16ABUN
Ayj7h77inz8Pyy9dGEBN7VtON1i/YkUR5eZM2A9s0Pp0Ms81H/XOUdyOnOjH
w3Ti2vLhuRhy3K1NRagfOUiZpcetcrHhMKuYHnM/drjtJ/kQcpEgIFfnMdSH
DuYRxts/c1CUarO/3bcPfbTuN90m5CClbD7NvqcXZa/1bf9ezETvC/OtRc96
MPHacKDN+XSsUJu7pmjag5eOWpsp/vuINBqzzVkaPWig6iX7nPQRXW7+akwS
6UH3+4xkjyMf0cFisjawsRv38SUJ2oin4X2/wTJjoW40KnmdekcyBVNfD8AA
czduNg52/JhJxongH2Td310Y4JeZ0p6ZjMZRfaXq9V0oZeBrKn48GfU/dRUe
t+/C0q0rnjqXk/BqY1MOU20n3vjymtX8ZQIGtDYe8cnrROqdjXIJ7QSs7WzI
2o7pRCGJ/kZ93gS8OFiXsfK4Ey2eF3Cy5cYjgVL9cZC3E7P0dujfrIxDeTZy
fO6jDvz5+LPDk6wY5LyRFXybqx2No0sv8ApHYN6hV8UX6doxjT2T9lFnOGpt
WE4cXWjDXfWzFGu/cAyIFT7FXNOGN76GGpgtv8Pt6bDhYoc29MxT/y7bHIZT
rs5yfN2taJGk8dM1OQS9tfT0dlW0Yo36+zhekxAUEj3utZrZigFSip9vCYWg
fi2lq/FFK75SflOdFvsWm9lNXF2Pt+J3roRLoYnB+PDa28hvUi2YaHeZdTww
ED+uXpl7t6MFL7Y47T/JF4hjUTuJD/uaUc1TmSnn82vUnXD8KeDfjFxGfH3M
za8QnAxPeEw34X+mD1+dFgpAtiSZTuW0Rrx486HqiQ1fvKI2KcHr3ojOlhwe
ElG+6DMf67yi24gZRVqr4qd9cf0ku2gyQyOmRbLEXXB/gaON64/pLRrwXTSD
+zCnD+atVe+tFavHEv9Ve3jiiUGfEisIG3UYFvKrKpHPEx8Yuj8taKrDf3qU
gEM1Hij2/dSPRIc6FNLknX0p6IHh7z6nutbWous1o2Obxa74XPHtuWPWNcjK
ZnSag8cJdadtFtOJNVi0w1VbLOgZHou5kiTEWYMyc/oTp+if4RzdTiZW8nck
MysbG204oGGHQ+f03u8Yx8y9QtiwR2W7Ow9iv1T9TzeS9tz1xyhwSEmA068K
dyUI9rv9tMW/fZxtr+5UYV/lL5s+F1vMP99ywom+Cg0jeU9m336Eh/Yp0964
VYnKjMNhfCrWSFstUFAvU4mV2wHtlBcPcPjZX8vzNJXYZvThK0ejFUaO5DfJ
pVegnuh3pXMm/yFzjkQU099y3NE/kHi4wAKnTHde9Wgpx4S7jwPq9llgJdfo
9lpSOTrV7fno8tgcXdzfm01cLcco7iMazKfNkKK5Rx5jy9CtsbZggWKMKT8m
A3/5kFE7dKd1YIUB9rsciPtwjIzebj1qdD/1kVXgUo722DdMe1lNYmbTRwej
j+1F8A3LJP4c/PBID1UnrbgCNktwH0tznKPpTXzuGy1JSC/Bz9oRX4U/38As
iUal5VslKCvgs7W5dh25rA7f0S8oxj6XxhmmaB2cpizES9sW4afS43PE/VrI
FyyUNyRQhC/OPtbnXtNEraPalSFNhWj5o/mZWpMGFj7Jm9yULvxffr6X3B+i
jv7r9tINk1/R5PLn1AS7S0iOSjnjHvYVSeWf7t5wUcXl091Xj6l8xQ+T7PM/
Xl9EfdeTj6LjC5A3UvwYY4UKStNufnlgkI/P3d9k8T8nomGSdLUgcz6K6wms
vX4EGHLBoLuj8Ate/shWuL12Djd9S9fPHPiCmltDy65SZ1BOcp5psSoPRawq
maQ6ldCkjp83+UkeNn34/OJIwClsYHE/t7stF0OlIqf9uU4gTWa2Zpl7Lib8
SrZxpiiioubIPXu5XLQgfg+laz2GMcHnvQZe5SCL1y0qe95R7JXeFXQ7MAs3
mG4sRvXJINHmv5zymUy8fiPxhtghafyYXd8upZaJRSx3Z2t9JNFJMZBrkzYD
7YyVJHscxHHMgaJkYvQZ01seMLswieGVomt36r99wvwrshG5GSJ4kMCe8P5Z
Ou5jdJK8KCqEXh5PKmm7P+Jbedn20ll+nK3onLQ69hGJGdWRW1m8WHopQvoM
JRVHKbenwl9zoVjA+tUk9VSMvekwaZ7Cia8bbz9iSU9B6ZvHD8r37ce72nz5
P0yT8aLhEEdSEBvOrfxWelqVhMqmXxSEZVnRJbwFWcWT8O4Ou8U/91lwt1L6
xY8vElFQ2TT8VvsujPnh1XB+KgHbWpduNVkwoKzbHe0fqglYqOd3f0psJ5YI
neixT4tH3hdv/x5hocX8hvbqa22xuLB4dZ793T9yJ5tvm1fIB6SV3fvK8vwG
eeWm0mDB9Ri8zLy7zldhjcwePTc9zRGNN8a4WV+Zr5AVRuJWebujsICZpTyo
Z5GsLX6d5lpEJE5/efRWj2WebGvFsNtLLwKvaPzi+tc3TQ7OLuIq4AnHzKDD
42c5J8nZq9ai0/1hKCn+s+waaZTcrCR0hDcmFEucPbfa7QfJFLeO05p3Q7CL
pb7T9WgveU+Vr6qnwFvsvLGVyBTVQdZjt0++j29w2niUoQxayBEx/SXN5wNx
cnVZpMu+ltx96HyHYlXA/3q/v1W8uILMkZs2817VD3HDK4h5qYR8/Qwr7Y66
FxhWkOYUeDSfHFJtz2Op7o0s7xbif7NmkFuv/ZBvavLAv8pvaZb9EskC+d7B
FvEumB1I7iuaDidH12qhQoojltTto93T7k/mHuSnbKfbYVnpndwgcyeyzHiX
UvjdBxjptf5Sj86MfGi3bYScpTFuuVYHNIZfIHt0SnbyVmqgqJm6GYnMRJbd
O2hFf1gR8h/2zNoxl53rXvKKY1vXg6luQ+7nlnKExWsSy4/sLCD25MXdh7l0
Cc6hqvUPFG2hc2mpRS3OlrDt5hQdd+Qp/JJibEsN8SJ4WGVYd0g/B/UNuqI7
7m8JdLrD5xgPuUMbvaTtDe8PhEoh/5cf2LzgIYuGtRZjGsEnXMT2ZJAPyImc
3/tpLYegurtUr43lJazY7DytOE0iMHrdPP/A3x92ewSKaamUEWr/UKToGV9D
Dynip6hHNSHAxo89zicI5qQcjlSUNxBSl4Jd+TyDYZoNxz6/aSP4Zgw+/oVv
weepV9Gu3i6CpaW0xdftEIiYzqYJqu4nqIk46nufC4MlRifWX0dHCJKDlZpa
Lu8gtNap6Pi9cQJTJJsKf0k4cPtnH3u2OEWY0bl7cmYjAkxiHmU7z84Q6vd8
kiGdigLNm3vvseguED7Xrgn6OL4HMzq70xsHlwmvvVU4tL9GQ49nwj632lWC
NSF4l8DvGLBtITY7ff1D0NgY+DdzLBaS3j1nav+5SZDLl1oi2cXBsKvTHet7
2wS/kyV2FXrx0MytKM/FtgPWw0bnJNfjQTDzVI/bATq4v8xo+SYiAeJahxfu
XaCH3mtyo79PJAJDL1n1cDQjFDE7d1U8TQK7SafRW3W7If4wZ0e2SDJYw9/m
vPG94KuV3RrTkgx/QrUWw9/vA5snl5v9XVJgZsr5fNu9/XAjfLzBQSoVfmdf
3PdUmRPOFLnWmXanggfDKucjFS4QGeCq0fJOg7UdTfQZpjywKHy1QnrwIyhf
5PJIoBeAngtTyBWQDqt3A0qiLggB2dLj286Tn+DNe+mowQhheJWZXzgU/BnM
vxtYZtuLgV2r5teGcxmwp0mBVZoqDnor018KZzKg3ptEtxEjAYeU+LNDLmSB
ibzuJRsOGdh9h5ThvpQFCee+qlMpsrDipv3JOjYbGqS0WHBIDozGKnREXXKg
e8owrNX9KHSuvGmLas+B+80PBHojFeAS/V0tNqlc6Co1OGv67RjISf7R2OrK
hbxq6ZlFqROQqFTV+EQ2D3pnZbv+szsJnOpv1We88gDk9Ziv15yCfzYyl3uO
fAFNGVsm04gzUPfl3oVc/3w4eElNxmmWCGerZSslRvLhmLjppS9V5yGne+N8
7IkC6EvvJbCnKEP4Rii8Gi8Ap7y1gwXOF8AMak+bnyPB7v2r9A3eatCr9a7o
RygJnjr2Pb8fdRnUTUxO6cyQoDXqnicX6QoovPh3HCIKgUfscawQiwZQ6+WP
8iwVwWOtaw2Bu7XBbmAr+82lYrBJApbzRdowNV8vxxBbDLzGoo+eWOlAI5u5
7MqVEriVqNsa3H8d3utGSTQll4L5pMXJqyu6wHrfIlXlbym0nZjvCq++BZ5O
x8SLtb9B7Lb/SneMHtyPaRJJ2/4GZxwj++z09eH42A4BTz0E5wK6YNJ+Q5Ar
vrUkn47gR5vTorNtCIdCMqtGNhAq/DTaUubvAUtCxvF4jTKgdWaJ0p43gn9a
egNUShlcFaMypv4xgfWzdN9vcZXDanoarbOHKaxKZmVnQzk4eNKt/WAxgzma
nd73gsshxSOv/ba0OQzmZEvh0QoQO/3367yvJfTH6O/n0q+AHXXq9fVi96Hb
j37roVcF/DZkpphW34dmI4NWgY4KaN/MshtjtQIyG6Ojm30lFFonVRZWWkOc
rWHVOVIVEHx1ghjuPoaYO0xZ74arYPWmqQah8jFEquVHzDNWg+OQuexOGTsI
FmJ+8EGvGs7UyGmpUu3Ao7Vg39ZGNSzl6+qtF9uDsfyee6VnayB7RpGU7/kM
DPkK1TjMa6A+/LbESVon0N9lqmAdWAPLOdItjj5OoDNSSM83VAPfB8oaIOg5
KAebZTi710Jui0oigeQCooslG6cr6oCbwcavMccDXJpUfFbn64Ahv5TpDoMn
dH9qYM3iqYdlwYt0rHc9IcD8h6jw43rY7LvAMLrHCxb7NzUYhRrA2XZk6Jmr
N5CrlRI7XBthePX1Y75wX+BOKpcNTG+ERiV7tqJtX7DzuExS7WqEjMHUqvD7
L0H8zO3GItkm8JpR4OAn+sHrnGdrcT+aQC3v+1jAtj/oR5OuWCu1AKlmtDOi
OBDyn0GXuHkLCH8JMJE5FQSsujX3hoNb4Fns20QBUhCUs/XY60y3gAj/9ohM
0RvgUHG+FqPeClzSPE9ZfgaDc+F7J6/NVtA/4ztmIxAKl5P6mjT12mHjn+6n
Cv5IWHyRZVFt0w45h2WtG+wiIfK+N/WMdzu0z1RLRNdGwvThw0elstphLv2M
TKhDFPgVeoTR7eyA35EjJds/3kNtk4RBYXYH7DsUWhfU9AFsc/6tyFV3gEG7
Qe2TI7HAHdr2OqW/A6L8S87KhcTCfT1ncgh9J7wrVBSX0I+DXePNwjYGnbDz
zPAh4efxcGn96bQwYxeoHr5tvCqZCJT+K56RfF0Qe7xhsNYoEcK/CR7cq9AF
xbTLOnujEmHKq079350uYDzTu7bCnAS+e/izu/O6IEfnXpvkahJ8F6l6+sqw
G8TCeBRTB1LgogY73e+CHghlvfL9INMnCDJmWtqo64Ehn7DqC+qfoPcpzfD2
YA/YJiS4DQV+AqtYSvEuhl44bcATbsLxGYIW6u34dHthLI8ziXQoA3rfeo+p
rPXCta11p59GWWDVvVoecqIfzKTfCq2H58KXmdnsiCv9MCUR1WaKufBve+xD
jGE/SOf0wp7pXAiSaHNK9e2HWQkmtoOn8+DLs8yjxd39QCPunCQ0mgf/Dlok
jDr8gM7+7ULmM/nw5l6PhzxpALSNjHOjBUngO3cWphoHwEFTPOX4DRK4OSVu
RY8NgJvbBRFBfxI8DLV5zsg6CB9qLD6OrpBAs4bOfshsEH793rCTaSoE1iPy
lq/ZhyDZU8eR4U0xBG37aUzbDIPH1YA5V20y+L6isMR6D4PTB/fjrsFkcOO+
UX89ahii1I19O1rI8FBB8BJWDUPuWMkR32sIEl/0hRr2jAD78+9cL6TKgPHn
Ik+i2Qg4Hm3IMDpeDjWa/Hu02EfB/ZgXndqjSuCQGz1gxzcKxcs3F/+8rQSj
PSlCYYdG4YBVOnNbfiVsNsgq9p4ehbGY21LUzUqQvXzWwMh0FAQ7U4o0/Ksg
WMUg3TZ/FIbDRF3qMqtB/1TUxbe6YwClZqenDtRCKtfda1+MxqBsjOPALKEW
VtaEbndZjYF77DsZPstaeF3w0ZrHfQzUlkLM6QprARUKQxPSxiCwWqVs2qAO
xA73jOauj4GlYr6FWEY9zAtzurW/HwcRPw8p5kdNcMo54XF58jhUHlRyGor+
n687D5vnZI1D1vWEEyO1TXDgperVoIpx+PWfma61aDMQ5hwPXpkZhz20Cxnp
/c3w5mv/13KlCZC+vWw5JdkKR9XjF3J6J0BUc2LwU24bPLWXMX5zYAoWbUOv
nd3dBQeYF0p1hacgpGkmgFemCwrj8rgFZKf+twM+/OS+0gX/6pVaM85PQTvU
w0O/LvASVoN66ykIoxdneMHQDUHNZvz0lVNgdVSs4tGuHkiVjO17/ugncMve
zo0X7YOeATYdi9ppEC4ROJdaPAhXXpn32rdPg/YoD/3U0CCUKhUbeg9MQ4XR
k1MqdEMQH276IH5xGoq7KGy6V4fgvtZXn37uX1DrXt09NDwEm5UGJM3/foG/
/+JbFYYR4PucyneSeQZi3qXwqBBGwcjp7E/Gq7PAbH63bW5gHKTNarsourPA
OlE+UbE6DiuaN6q6jGfhSOEN2ozdE+ArZp2Q5DgLv7ZMn5POTkBGS7QBJM3C
hjYq5H+YgA3xvy0Om7PwMI/3P3XTSQhpLyqc/DgHO3fSsB/amoJKmZMBlfQU
CDfj8zxuMwOGR24kLe2lQEfxZVchvxlYV3hcKniQAnqmn4v5k2ZA9vRnirMc
BdY/Ve+71jcDYWqC1xVvUSCQ3XooUHUWLMwZ+VI+UmBSQV7fU2wOdsX1ZPqq
L8D+k5zCDyjzcIipdDpZbREOikjsbh9cBP7SBxfp/ZbgYq+SwIndv4Fmkzbd
bmwZCFc7Bb9pbsIf7W+G1eKrYOFscvfOMhV+KN7jFff5DWXJSjLW9nRE21ts
+0QG1oCtsDOa5iYjkSdsQm8n/zpU7z+mYm7CQswyiE9bebYBkWEixhRRNuKt
c+5qtd82QWuF9lxmBjsx19BG5PS/v/DUejVX15KTuM6sQld0cwv0mFWuT6dy
E3Xazpzgj9yGIwEMQhx/eInMZ1jKSz9sg39IhJMXAx+xPLlf/U7SNhx013Rf
4+Qjyj9zMo7O2gbNYb3QBUU+Iqsg6TVP9TZ45rP8FX/CR6yzVhjnXN6GKIfL
ecmLfETiLqlg1qtU4HQTZVla4CeuP14/mKVNBbUOBcoBGgFi9o+aFI1bVEga
JscqswkQBbItSl6bUOHMuqP1Z3kB4r+byVPMTlSwFX7fU/FYgEhKEjzHmEoF
D+7tLqbfAsSHexZqUj9TQd9xaE8gvSDxkCNZRzWXCv1rU6IHDggSw67cvf+i
lAo8CtEUpZOCRLul96F0HVRQDinlrXUSJEobWAkk9VKhmsJk8jxAkDhapZSu
PESFBKGuIIVoQaJWZC/Z8xcVeof2xueXChJ30X68LLxAhXu9Yb5uTYJEfODY
WbZKhXjPiluaQ4JEhy7Ve0abVDj+NolDbEGQ+H9/Hvzfn0f8f7nSa1Y=
       "]]},
     Annotation[#, "Charting`Private`Tag$30987#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
7o6luCGitERKvVdx5g8QfulWWnqKKv0fVeguSA==
       "]]},
     Annotation[#, "Charting`Private`Tag$30987#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$30987#4"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-12.341344751484375`, 12.250791589137062`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766108881843927*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"fccfe124-0669-4353-8112-09cd2d78d9d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", " ", 
   SuperscriptBox["t", "2"]}], "}"}]], "Input",
 CellChangeTimes->{{3.7661089747028713`*^9, 3.7661089771777573`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"101a9508-fcb6-4003-a054-26c44a78f545"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", ",", 
   SuperscriptBox["t", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.766108981359665*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"6aa9f807-25ac-4bfd-9492-8ea5890c9b75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     SuperscriptBox["t", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[50]:=",ExpressionUUID->"7255b028-24c8-41c2-b446-ff3f5400e81a"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw1WGc4Fn7/NcsKySbrjh/KCCmpPl8/siLJulVUlHIno1ISiiSUysgeWdmz
QsL3LqOUzNvI3lvd9ubf/3qe57w513lzXpwX5zrXEbdxOnuVjoaGhouWhub/
+T/YR/4PWyL7sG903RsEst756hSpFSJqlg5mLFklkHmfyj45TSWiZGMJVud5
Aln9DGUlsZ+ItJO1ePtHCeTy9NQsi89E9Fw74AD5J4EccQtgy4eI+IK4LB/F
EMhx9kYiR3YSkbygZCHNYQKZdqT/k/UeC+TvuQoCVhLkgrE3T8L3mKFw6j33
pGBxcv2r2K63+iaotcvARea7GFly2EXNMN4YeYslPX01JEoWUOoyOfrVCFWk
bz3JMxIh+/9KDVAoMkCmlR/Vt6KEyZUsvsuXX+khw3pxku60ILkDHbGseauN
sld6Zm+fFyCHPt/ym+TTQlc+rCg2pPORdx2VPL/PSwP5Bl+rZd3DS16jDPHc
u3MC7bB+3Kn5hJuMF9xiHhofRf1lm0lZrVxkGYwTxvarIgn1uqqFf3eTz7HL
ml5KUEL3IubUu4Q5yCuT2bV0SB45Rb3tq6xkJSu3Gsow8Ukj1U46VacUJnKc
rXPN/KoEygHh9fsajGRhm2HJ6WPC6IT2umKrCiPZNonEYy0kjBoNOu0UpRnJ
rSXBNMOrQmjOMrJ5lJ2RLHP9S+3+YiGkeoc706SbgZzWmPNPlpLQ3zzYLOXu
MZBparN328sJosbdm0X92fRkaYtT8QMH+dH8UM8tHX46stoES3T1XW7E23dP
KoyFjlwfKmBGseBGRzt3d/Zv0JJTd4b6rR3hRj6NJzXcB2jJHKdqDILW9yCu
8hyOnExaMgXJ29V570GK4Z7ZXMdpyXvH6X/mh3AhR929oz2XacifJWtIXDWc
KESzOErWlIasuCI3z5HJiYpOGBve06Yh94XSzO17wYm2VJ6859xPQ16RGj37
2pwTCWp2Mj4d38ZKblc1RZs4kMXifTi7axuDVvIoRZwdNVt+LBw338SupQY/
XUZZkJioWxPtsU1sbPagWfkDC3IcVqUKim/i5FjmPQRfFsTi9F7OcGoDv1U8
qR0gwYI0fPPSCx5uYFnHI653LjOj/NzUePf0dXwIOBarx3aiIPqQQLa1Vayn
5uVhxsuIOr+dyZDsW8UNNkkzFZMMSPoFx7cTVav4xxGpaDPMgKr4gxhdXqzi
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
wKSssPxrshmU0jQSBqyKoMM/j+e3eQto1ZLJhpeKIb1XQYWusgWIuzJpHa+X
gF6gootsDAWC1ksHvgeUQuDAwSn3U23A79wmuMSJge2VSp9Q9i/o6b5/JCCy
CrpH3m8q8HfCpmeg1iWdashWPySs5dsJoopnLu1erQbDsUOWDhe64PrXtRra
q1/hxYnDLWVsPcD2pe6M0MXv4L8UO5Sr2g918wez+B0bwVm8Z67EoR+u1w3m
mnY3AtFgL11lUj/4yjmWbp5qAumkOLF29gFAAdwT4QrNUGsYb7U9OgCf3yak
jOykAEtqQrtRxBCM3M8LW9hoB0aDD5/Ka4egPTPFjOt+B9DMf0/YvzEEkjck
1m4udcASWrq28/IwtEUVz/Qu/IKhboOVCtkRCMzTfZhG0w1l3Gv88hWjINRL
93ZCph+KP3FsxlBHwXX2c9KYSz8U2kgOMBPGwNPgZLBvaT9k5J/JGHk6BpG/
IjVjDAcg3CBNLc54HJaMbm+qPxgEJ1/Tc2wjE2CSs1itvzAMpP2kE+58k/BC
fbX3sPYI2DU/lBjXmwS33Z8nKiNH4IJY1mRl7iSYhsVRSmAUdMtoHzxwmwKV
pYBtntdjILGQGzPJOgPRsoqZcVaTMFng63hFgApLspYys0pU+DdW4GqJChW+
3d3tLUKiQrRf7nm2M1RgJq0rZSRSQf98h+57Pyr0aF9Jbds9C5kMBwgMC393
ya+AquClWbhh0dKeXD8Lb67sm/ZvmofpDXGNocfz4MAe0e/+cxm0xooOH06Y
Bw1dXy8TzhWIbTol/6x0Hp7KJN8NMFkBg7euQsqz82A76Oq6q2vlbz/WLvpY
L8AlOacc19+r4JjknCmhtggXpAt2fJXagD86eI/N7yVQtVTLK3KkQci29qwq
8zIo6U6Xo9c0KMSrJZhl3zI8S7hRu/yJBql+GON4Z7kM5k8b2qaZaZGXBCcb
Q/UyaKsf+DGXRovYNy8xvI1ZgQgVNUHHaTokV0i3OKG7BksOicYSEYzohrB2
m0vyJuQsZEp632ZFNYul2/fKNkEtX+Pxn0RWJNGgIOPVugkuRGGGJ42sqMNb
wCNw5xZ0OcY5ScqzIe2xafHkG1uQ965+Rn2KDUkUht6kKG+DdtyMH3ZgRzPJ
zj5CNjSI1409/NXfPZ+iViHgNUeLSN/FxNPEuREuKM/noKFDc0qlhgTEjTpl
ynUSd9Ghl6PtnkXW3IhTsMy1SpoOMSu8GReP5UYeax+bWC7SoXWtK+Ns/DzI
9NOHgIgfdKjNt/SVMjcvYjies5qfQo+umyb4Vu7lR7Yo9teQOSNaVdJfnXEV
RmeZmkf9vJmQVzl/inmVBPL8k0OnHMuKghYU/V41/4NWCuryHq6xo2P7S8yJ
m3KoKVq81ZdjNyI3nDzLfFAJGelvCUZXcqGzVzu3XGhVkV2n3876c9xoupHu
xo4RNSTgbvNgxyQPUhX3os2nP4Fcn/Yd5ojhQ9OUavVWew1EcmWKUVUQQO71
tOsszZpoR1OztvyIIFKRyQumRGsjOEa9LxsqjB4K9hAUfPUQl/9Hk5P7RNDD
Wy8E9l8xQM819t1VbBdFxrK2K2G5RqjhZpxoXJEYauRpemDtaozS/m3WSfEU
R0FVfEXtIibIpN4iLNRMAhGpIpVmdGbolL6yCpcoAZ35GRmys9McSXjaTL2W
ICBz5rwmx0FztJIXnCQgRUAOujtj2yfN0VseKqe4HAFRGjybc9bNEd1A9oyC
OgH50D+ucdhrgUruSaUZWhCQ0dbMd5XLFkgqVUAw4CUBVWlon5yZsECb7bpN
bKEExN8fO/1kzgJRWNz8X4UT0EPvQ6Ji6xbI27ltKSLur9/PA1KWbETUrR7a
8jaLgK4FKn/qkSei0Ga2oKqvBJQRkUh78A4RkRiPaen+IKB91/itBj2ICB25
sf6jnoDy1Zo0Xz8hot9xtfYtrQREP870bjuciPTt/bQHhwjoqf0r/rGPRCQe
+2Hz6hgBhRvz1ad8IaKV+uH3E5MEVHKsn/3KDyJKVdEkzM4SkKLwEaWxbiLy
uHar884iAQVwfuXOGiGis9GJwSsrBDS3M9LH+TcRyfxs1PXYICBnuqwHh5eJ
6L9/CPrfH/J/IH9Ycg==
      "]]},
    Annotation[#, "Charting`Private`Tag$31630#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-10., 10.}, {0., 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766108983208474*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"2337e5fa-0ac0-4553-a2ee-80d04f1b4351"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     SuperscriptBox["t", "2"]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.766108987211521*^9, 3.766108988396223*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"9ddf5b3d-9d11-43ff-8b37-5a8eccf46ad1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"2", " ", "t"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7661089886886377`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"22411ea4-9d76-4c3d-aaa9-bab1b6e2e852"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normalize", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"2", " ", "t"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.766108990972371*^9, 3.766108992325995*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"248ff5bc-e135-407c-9885-fa27da14a2ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "t", "]"}], "2"]}]}]]], ",", 
   FractionBox[
    RowBox[{"2", " ", "t"}], 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "t", "]"}], "2"]}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.76610899274373*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"2a82a36c-d172-476d-8955-551bf354d631"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Normalize", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"2", " ", "t"}]}], "}"}], "]"}], ",", " ", 
   RowBox[{"t", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766108996369548*^9, 3.766109001365871*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"bdec31c3-41b8-4024-b0e0-cca98a5186f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["t", "2"]}]}]]], ",", 
   FractionBox[
    RowBox[{"2", " ", "t"}], 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["t", "2"]}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.766109001650071*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"07311140-3133-489d-b973-1f9ef6907feb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["t", "2"]}]}]]], ",", 
     FractionBox[
      RowBox[{"2", " ", "t"}], 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["t", "2"]}]}]]]}], "}"}], ",", "t"}], "]"}]], "Input",\

 CellChangeTimes->{{3.766109004245246*^9, 3.7661090059693947`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"c0ecb9e5-b24f-4513-9ca9-aa1c39882cc9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"ArcSinh", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["t", "2"]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766109006392758*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"e5f7689e-f032-40e4-9e2f-77db1189f196"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"ArcSinh", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["t", "2"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "13.649999999999999`"}], ",", "13.649999999999999`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[55]:=",ExpressionUUID->"287a44ca-28a7-4a9f-8244-6645c6ca5602"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
3lIpTqCcDInN/YwEuBJUw84RI9D/AEEEeD8=
       "]], LineBox[CompressedData["
1:eJwVkGk41XkDhg8haySiEbJzjrJEaJnnZ0nqyJJrbJWQtE01GmpIG0mlJink
LZQskWxlqZRBRDQIpWwHx75zOBzyn94Pz3Vf97f7elS8T+05xE+j0UJ+7v9M
iFu2tbvxMsJ9i4cSaCzMe8T4pic9ALdF8RNXkAXW1muNSpJJMP/2TclQ9KfT
A0VSmKkwkD9oFiHJgs0qpTcPr2ZAPDx7iW81C+X5+tbFJVnw59HkohVZ0O99
Hb3/XC5I6PYpC00WTAdXrk2PfoGDLZnVIvosRPyI/BKflQ9ZjVOP+zezsINw
ctdUFkJWv3TXd2sWXmUd/Wuh9RW2h0we6nRi4VrPgS7ViTewmkn34XixoCbR
YnJQ5B8cXx82Z3GZBfWg9ZGhUqXwm8yOPxPFQsPecvuI1WXY90caMyuZBes8
m3IF5ffQ17jvvraWhV8N2xwjVCqQHZNazOxi4WBcPl+OaiWQpajnx/3ZG8+j
j66rwgYfaZPbml1I3pnnOalYDeZRddlL6AJt4rVeyJqP6KudinNx68KPM9LV
WuK1KLm6PyLjdhdWLZR5F3bUwffRlukTQt1wML/1rNGvHocKLfTatLsxr7CW
4zhdD6+8PIGNtt2wNF0R4DLdACErsYSw6G6kK68q3dPfCI3Q4vsbDHtg7Cmk
9sGrCXdrOu847u1ByHAtbVNrE+oiNB8YhfWg4NnjMP6aZrgrnP6o1dqDIEe+
3zwSvuLhXGCS+W02TjGcDmdKteCV4tnEnrdsHJeRnJq73AIH+cwClVE28ua6
sqO8vmExasWI1+5e8ErFL3BkWiFk7fwyTKYPZuqP7yjZdSCpKGHG/HU/ul0b
vmvldmBO5cTI6EQ/XMv5de1XdeKv7R6+lNYAfmXMPuRr7kRASucmm9gBhDhn
WSqmsdCn9PUNPWgQnHrRBWmJbkynNieZ2g/DeVsuU8G0GzMaNwtUIoaRryJo
VOndDT3bI/67PwzD6xwjRLiwG7rJw1a+ZARFK+wCD/z84XjOB+JnPArnPe3C
DvfY+HfvkY25OuPIlhL1uFrIRmabpvRXn3Ek/M13Jeg7Gx4l+Rrqj8ZxfZ/M
6UTlXlx+k2pxX2wCw2uX3Z1M7UWATkPN+dAJ1Pg1Oe3L6MNQfHXO3jOTaHqe
9n7m2gDSb7hVWflOg+umOWieMoBZUde25LBpqOvJ5HiWDsD/8yoVyZRpZMkw
deXnB+A8FnmOjz0NfzYzLdh3EDIfDh9z9eZAJoipfMVsCEL3VhhleM6gU8rC
LLh8GGt4n6a6vblY0LwbOdY2jHCN4KrpMC48nMNWbpkdhqtGYYBYOhcGQUEG
Ptoj2DLye4fdOBee+zYt8kWMINwkrUw1eA7LjQKiSnaOYr/o+/j+mHlYyoib
xWeP4alYYIN1/QKYigqDAhVjUFx49ZmfswAztQWm4/cxqItX9ZfJLcJT2s4w
TmAch2hPJO0PLGL9e4nrIy7jKH8sWhg9tog+XkTPl/lx8Jyyd9dLLMFAufGS
cswE8k6VrHPSohHGtkoR3cQJRFbpu680oxHjMHrehqcTuGHMbK7fRSN/ajBe
rn49gYBcg0tOJ2nkom3Biz/bJxCnFLz5cD6NfFpauHtadRIKvTrLKiz5yMHr
se601EmoqNDbLbz4if07te8ZMVPYlhN75GWCAFElL87axE+h/YBDY0C2AOGL
O/eG9WQKDYOCFSb/CJBQ42AXvtwpsO45mb7tEiBRFYeql9VMwaGmdsu/6oJk
Xop1X2ZpCg8273y+/JkgCYsuDfif5zT2j3Y8rS8UIkd4463p8hxstE5eCv8s
TBqKjasTlTiI4Mg9rWMLk9DIcJc76hwkJj3KlOMKE43j5/84rM+BMqO5/KmC
CAlsEzNn7eCgOPeKbJ2PCDFk+saLnOHAOrQyicEVIcmMkgbvOg5EdStyldeK
kfplgd02Z2dAvcy40OgrQeRfpMS6RM7CGtQtvRYpktcT1SsZyoXDSZ0ZtWlp
ErLN1u/xiTmc87Syfb1Vliwtd0gsMpyH+6fOzw8OyJG6XQm9PM48CiYS7Fg5
a0jC325VWg944Nl5i2q1KhBujKkjz2ABd36T1KniKZI6nXaVyeoFWARfYDqp
ryPbLrgq7LRbxEOGbn+6iQp56y14L7NpEbc2hsX94q1K1Az9KyMdfqBgA6NX
O1yN1DiPGZe+/QFh3CiPuq9O3IucDEfXL+HJdUOWdKkGMZXf8rv3nSUkeq07
NdSsSXr1lmKPjS0hVG+Iz6VXi3jfZEvU2FFg177TaxHTISdm7FbXJ1NomvRL
ylSiEy1B/zU2qRSclIpazqrRiUBo+teSNAqJJXskLbXpRCY3Iywrg4JC2pXz
3wzohKNdkXEth8LHpeb9QtvpxGyztp5+MYVr/UIbPI/TyVf2nlrbRgrxwkfF
ZIroxIvf16u4iULekT5mZzGdeOjEvmR8obA1J+9mRimdPG/LjRb5RmGXrYmk
eQ2daMu6by/roCChOCJ3soNO4rK/nNQaoqCS3mlSJcAg/fxvJ6KGKbiwTc7f
FWEQ3TYjw6URCl0n28o8VjDIRUcjTuM4hfE6EfsZOQb5ND96JniGwqzb5DFV
BoPcvtLG7Z2lIJeWljeqxyA+71aa2c9R8OJP5xUZMYj4ZPriugUKXKubEfa/
MohpitnF64sUdrafaPrFkkGMLx4tm/xBobE3TrFvB4MwS+wr3SgK+0ykDufa
MojA7ssVnjQa+ZhRnxPsyCD/AUHH9I0=
       "]]},
     Annotation[#, "Charting`Private`Tag$36672#1"]& ], {}}, {{}, {}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-2.0001845769962774`, 2.0001845769962774`}, {0., 
   13.659154439422668`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766109009676693*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"d1570634-ba5e-4ffa-99f3-6532bf9b9da9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       SuperscriptBox["t", "2"]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"ArcSinh", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["t", "2"]}]}]]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766109021255369*^9, 3.7661090256223803`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"f369ac09-0e2b-4012-9b1a-42a594ebd980"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw1WGc4Fn7/NcsKySbrjh/KCCmpPl8/siLJulVUlHIno1ISiiSUysgeWdmz
QsL3LqOUzNvI3lvd9ubf/3qe57w513lzXpwX5zrXEbdxOnuVjoaGhouWhub/
+T/YR/4PWyL7sG903RsEst756hSpFSJqlg5mLFklkHmfyj45TSWiZGMJVud5
Aln9DGUlsZ+ItJO1ePtHCeTy9NQsi89E9Fw74AD5J4EccQtgy4eI+IK4LB/F
EMhx9kYiR3YSkbygZCHNYQKZdqT/k/UeC+TvuQoCVhLkgrE3T8L3mKFw6j33
pGBxcv2r2K63+iaotcvARea7GFly2EXNMN4YeYslPX01JEoWUOoyOfrVCFWk
bz3JMxIh+/9KDVAoMkCmlR/Vt6KEyZUsvsuXX+khw3pxku60ILkDHbGseauN
sld6Zm+fFyCHPt/ym+TTQlc+rCg2pPORdx2VPL/PSwP5Bl+rZd3DS16jDPHc
u3MC7bB+3Kn5hJuMF9xiHhofRf1lm0lZrVxkGYwTxvarIgn1uqqFf3eTz7HL
ml5KUEL3IubUu4Q5yCuT2bV0SB45Rb3tq6xkJSu3Gsow8Ukj1U46VacUJnKc
rXPN/KoEygHh9fsajGRhm2HJ6WPC6IT2umKrCiPZNonEYy0kjBoNOu0UpRnJ
rSXBNMOrQmjOMrJ5lJ2RLHP9S+3+YiGkeoc706SbgZzWmPNPlpLQ3zzYLOXu
MZBparN328sJosbdm0X92fRkaYtT8QMH+dH8UM8tHX46stoES3T1XW7E23dP
KoyFjlwfKmBGseBGRzt3d/Zv0JJTd4b6rR3hRj6NJzXcB2jJHKdqDILW9yCu
8hyOnExaMgXJ29V570GK4Z7ZXMdpyXvH6X/mh3AhR929oz2XacifJWtIXDWc
KESzOErWlIasuCI3z5HJiYpOGBve06Yh94XSzO17wYm2VJ6859xPQ16RGj37
2pwTCWp2Mj4d38ZKblc1RZs4kMXifTi7axuDVvIoRZwdNVt+LBw338SupQY/
XUZZkJioWxPtsU1sbPagWfkDC3IcVqUKim/i5FjmPQRfFsTi9F7OcGoDv1U8
qR0gwYI0fPPSCx5uYFnHI653LjOj/NzUePf0dXwIOBarx3aiIPqQQLa1Vayn
5uVhxsuIOr+dyZDsW8UNNkkzFZMMSPoFx7cTVav4xxGpaDPMgKr4gxhdXqzi
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
wKSssPxrshmU0jQSBqyKoMM/j+e3eQto1ZLJhpeKIb1XQYWusgWIuzJpHa+X
gF6gootsDAWC1ksHvgeUQuDAwSn3U23A79wmuMSJge2VSp9Q9i/o6b5/JCCy
CrpH3m8q8HfCpmeg1iWdashWPySs5dsJoopnLu1erQbDsUOWDhe64PrXtRra
q1/hxYnDLWVsPcD2pe6M0MXv4L8UO5Sr2g918wez+B0bwVm8Z67EoR+u1w3m
mnY3AtFgL11lUj/4yjmWbp5qAumkOLF29gFAAdwT4QrNUGsYb7U9OgCf3yak
jOykAEtqQrtRxBCM3M8LW9hoB0aDD5/Ka4egPTPFjOt+B9DMf0/YvzEEkjck
1m4udcASWrq28/IwtEUVz/Qu/IKhboOVCtkRCMzTfZhG0w1l3Gv88hWjINRL
93ZCph+KP3FsxlBHwXX2c9KYSz8U2kgOMBPGwNPgZLBvaT9k5J/JGHk6BpG/
IjVjDAcg3CBNLc54HJaMbm+qPxgEJ1/Tc2wjE2CSs1itvzAMpP2kE+58k/BC
fbX3sPYI2DU/lBjXmwS33Z8nKiNH4IJY1mRl7iSYhsVRSmAUdMtoHzxwmwKV
pYBtntdjILGQGzPJOgPRsoqZcVaTMFng63hFgApLspYys0pU+DdW4GqJChW+
3d3tLUKiQrRf7nm2M1RgJq0rZSRSQf98h+57Pyr0aF9Jbds9C5kMBwgMC393
ya+AquClWbhh0dKeXD8Lb67sm/ZvmofpDXGNocfz4MAe0e/+cxm0xooOH06Y
Bw1dXy8TzhWIbTol/6x0Hp7KJN8NMFkBg7euQsqz82A76Oq6q2vlbz/WLvpY
L8AlOacc19+r4JjknCmhtggXpAt2fJXagD86eI/N7yVQtVTLK3KkQci29qwq
8zIo6U6Xo9c0KMSrJZhl3zI8S7hRu/yJBql+GON4Z7kM5k8b2qaZaZGXBCcb
Q/UyaKsf+DGXRovYNy8xvI1ZgQgVNUHHaTokV0i3OKG7BksOicYSEYzohrB2
m0vyJuQsZEp632ZFNYul2/fKNkEtX+Pxn0RWJNGgIOPVugkuRGGGJ42sqMNb
wCNw5xZ0OcY5ScqzIe2xafHkG1uQ965+Rn2KDUkUht6kKG+DdtyMH3ZgRzPJ
zj5CNjSI1409/NXfPZ+iViHgNUeLSN/FxNPEuREuKM/noKFDc0qlhgTEjTpl
ynUSd9Ghl6PtnkXW3IhTsMy1SpoOMSu8GReP5UYeax+bWC7SoXWtK+Ns/DzI
9NOHgIgfdKjNt/SVMjcvYjies5qfQo+umyb4Vu7lR7Yo9teQOSNaVdJfnXEV
RmeZmkf9vJmQVzl/inmVBPL8k0OnHMuKghYU/V41/4NWCuryHq6xo2P7S8yJ
m3KoKVq81ZdjNyI3nDzLfFAJGelvCUZXcqGzVzu3XGhVkV2n3876c9xoupHu
xo4RNSTgbvNgxyQPUhX3os2nP4Fcn/Yd5ojhQ9OUavVWew1EcmWKUVUQQO71
tOsszZpoR1OztvyIIFKRyQumRGsjOEa9LxsqjB4K9hAUfPUQl/9Hk5P7RNDD
Wy8E9l8xQM819t1VbBdFxrK2K2G5RqjhZpxoXJEYauRpemDtaozS/m3WSfEU
R0FVfEXtIibIpN4iLNRMAhGpIpVmdGbolL6yCpcoAZ35GRmys9McSXjaTL2W
ICBz5rwmx0FztJIXnCQgRUAOujtj2yfN0VseKqe4HAFRGjybc9bNEd1A9oyC
OgH50D+ucdhrgUruSaUZWhCQ0dbMd5XLFkgqVUAw4CUBVWlon5yZsECb7bpN
bKEExN8fO/1kzgJRWNz8X4UT0EPvQ6Ji6xbI27ltKSLur9/PA1KWbETUrR7a
8jaLgK4FKn/qkSei0Ga2oKqvBJQRkUh78A4RkRiPaen+IKB91/itBj2ICB25
sf6jnoDy1Zo0Xz8hot9xtfYtrQREP870bjuciPTt/bQHhwjoqf0r/rGPRCQe
+2Hz6hgBhRvz1ad8IaKV+uH3E5MEVHKsn/3KDyJKVdEkzM4SkKLwEaWxbiLy
uHar884iAQVwfuXOGiGis9GJwSsrBDS3M9LH+TcRyfxs1PXYICBnuqwHh5eJ
6L9/CPrfH/J/IH9Ycg==
       "]]},
     Annotation[#, "Charting`Private`Tag$37273#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwVy3k01HsfB/BpLFHZyhIpJCXdpK5Kos+XLmrceMhwW0hElGspEhUla27a
tEhRek5C9WSNq3zE1VjLFmXIb6xDjDG2GMP1/PE+7/M67/PWcvOz96DTaLRr
C/l/F+uXPFSLFOENxl1XD8l1JEz0yfZbhAif5NidMBdbR/o8LjfevyLCeXTx
0qCtI/Ffo4hiuAhT3U4HfJvWJseCj71fEipCu3H7mAPD2qTyvuMvPD8Rrqdd
KtverE08+Mt8E46I8HGobbBkmjaxmXnSbrBt4T/S2v3CVJusXK60LebLLG6e
D7KXP7GW6Dit2Ch7YRa903hKgw+0yNezluE2a2YxKfOoO6tBkwRPJEe/zRMi
J9+x/OGYBlmcqRMjfkCIpk7Dkjdc1xBsOMNya5nBD0Fijp1Z6uTwGoOG1sMz
OJDqpWE5r0YiNC/tDaOmcUtNhuCRnyphPzSTljo4jc3HZPZ5l6iQG0zVdTcq
fqKi2DP3rXrKJFmmuu9vg5/YJ/ZJTTdFkbRd4q2Ui5hC/8dVO1n85WTfi4pj
MfWTONYRgpGuCuTILYOnSqIJ3B1V7+3tIkd09yubyyhPIFO5Wme9zDKy6REM
xq0bx6URyrW0KSmyo+E23WZGgJKX7y8XPZEgS6+oBKZOCLCO7r3nZqIEOaPP
2sbjC9Cg5niWdqwE0exyi7/av2CnBIa1nwQ52BNnf71ZgKo//TMfm0oQ5htV
P7XXAmQEf/zDtk2c7P7fsK/YMQH6N43wBlaIk+xISzfydhRNV0/YqcfSyXDH
xk0O2aMoJ7IbKQ6lE6XepRnuWaOIwquSR/+kE8t+z6yg1AWH3H7+2J5OaAcH
1T1iRvFM8taa9avpBMxcV/k4jqKTXnqqXc4ikv6tqGuQz0fT6t8nFDpoxMGr
IdhrkI8OieYK5Z9p5J+Glm6qm48fMxd/DiyjkfHwcs2yFj5mtcruaEunkQB7
NsPiHR8LVOM6Xp6hka4UWymraD4eOvDX3BkpGpH3/MyYVuKjfUKL1hrvOdjk
xrrRJcvH4mjj53q2c7Dtr/jSisV8DJUNbTbaPgf7jXeHjglGsHrXJzi8aA4m
1HZJ6BeN4MjFtrrsJBE8TMxgG+8dQbb5Pvbb6lngFpTZrDjAw9KqPO5efSEE
bHNq3G7KQwfVV6Y3FIUw0rGK7N/Mw+Lpwv72mRlIdDzoYy7DQzH5PmY4awYM
4clkaO0wwpT2UY7rDFTa73f6YTWMQ+oWQZqJ05C2ZIYztHUI53Sbdv0zOwVf
N9zesEFrCLfKGr9T752CmtqLNf+RH0KXdPFfz9dNwXuBMDuA9wMHFplrGaVM
gfHD0it9GT8Ql52idcAUnP5w+4/w1T9QfsJsb/nVSdBZui8lcHIAs8MVf7WR
nYBX76/MOnUPoNesobPq1DisdnHcuL5+ACtWGvZzO8eh0/6LWUTGAH4LT2He
zR4H2cTDSYZHBrAzt9VChzkOcGLPi0N/c7HHJe7plsdjUFUccnyfZz9GcS6k
+G0VgAmrVIdh048lP5OOiKkKQF733PlNO/pxjaGVSipNAGutZ2/HS/SjQ1Ca
zMjnUVDJm+EVpvVhaqFB7rjvKDxXuFQf3tKLs6KTG96+5gPlzzZxeNeLDWmj
Gex7fGgfvTBGT+vF082Pri8J54NXcUHtsE8vWh/T1o+15QMz2riJR+vFdx7S
kvJdI2CvFCay0urB1kj3T9d9eACys1fuiPcgm7u5zW4PD3p7hXK5/d24MzDG
Zqs8D5orWhJ9XnWjsvQRv9/yhkHrmYrW+x3dyIvw1qkWDcGt+2Ka/qQLN1Xn
STfe+wEnF68ua/iFQrFIGd+IXi7c5FVWyS+jMHp5LyOzhAvrhq4VGLV04s4D
dJboPhf2RD6b07frRK+fQR161gt++95Qx/w7VhlfMMzP7YdwY+IXJ9eOzvyu
CseEPtBOSIg1ZrHxyPJi62en+iB+1/qL58PYyGIxwvSs+kDuuiY8+NGGJ67U
OQ7T+sBk3taCWfoNp27qT54I7gVDz6XfrA62ooLPPTf9gB5QmJw5e1msFR+t
PuOfb9cDrStSC01zW/CA4aBl/LYe+Ph9yMJCoQVL3jjIbpzoBpeMpRKRrGa0
aNP1dAzrhvfjRqTjbDN+3ZktuHi8G3wiz7n8rdGMsiuc9s/91g31m0+10M41
YRzL/5WKzII/N0l8VG/E+EPzSY1Pu+DshtjfLSoa0P/tySezMV2wYsvgdus/
G/Bm0cGIBN8uuNM8/2C4uB4tp+OT+SZdoBtCm7dM/4S5bqe+d3zngGuISUg7
vw7N9P1OnqvkgKlaCe/6rjrM9bh0LjKHA3LJJva2lTXI0W2kS8Vy4I58fmkq
uxL7FK2i2o04wNwQ+FVzbSUOnq/jvlzPgbElnlc7T7KwIqT4V6EiB1SeZSro
jFYg545CisoYBW21RTp5hhX47BILuV0U0KcC9W8F/4Np7p61pk0ULBlYEmAl
LEOzkXjPkHwKAjK9f9MzKUNrlaIPbukUZHpl7fG9+AH17k0+/ZJEQfL5/lDn
ScSw595bnC9T4B9t6OtztgTbGpnugYEU5P3peNl75B2+YT/SVfOmoEQigOnc
U4StVapzSg4UCD98iPBxLkTGKZqJL4MCT3lGysMvBXjSK9HjkBkF5gUyt8Z/
z0dhZ2LAVyMK2C7+0THlufjghfj+IQMK3GtYXNddOej8Kufj3Y0USH8vdE54
/QaVpSoLvqylwDaqPHK35WtsPnG05aU6BVKJ6TbG+lm4Sl+haZUKBamF+GC7
0gvMEOYytJdTkOQVYMQQ/he5BdzqchkKoorabe9ST1GCYteLpBf2fLU4r2uP
sZYpqmyQpOCaFPt0nP19jP1ZLkvEKdC4KNlfqXoLc4JCh/bRKXinLlZbURqF
LWFKyUM0Cr78ssVTTyMUb1f9Yc1c8L80Aoh5
       "]], LineBox[CompressedData["
1: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
Q/csg+R1adt3T1lA/geCzwuv
       "]]},
     Annotation[#, "Charting`Private`Tag$37273#2"]& ], {}}, {{}, {}, {}, {}}},
  
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-10., 10.}, {0., 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766109026308044*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"e539f1c1-4c47-4237-84d3-72146877dcf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ceiling", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.7661091078073597`*^9, 3.766109111302669*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"229d946d-f66e-495a-bdd9-22e6422d284c"],

Cell[BoxData[
 RowBox[{"Ceiling", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.766109111643114*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"2cb8a3f4-e14f-4277-aefe-0df79c1899a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Ceiling", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4.2`"}], ",", "4.2`"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[58]:=",ExpressionUUID->"32564272-c4f7-4338-bc9e-69bcd0b3a25d"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[{{-4.199999828571428, -4.}, {-4.117559537239286, -4.}, \
{-4.035119245907144, -4.}, {-4.023947405568082, -4.}, {-4.01277556522902, \
-4.}, {-4.007189645059489, -4.}, {-4.0026785714285715`, -4.}}], 
       LineBox[{{-3.9973214285714285`, -3.}, {-3.996017804720426, -3.}, \
{-3.9932248446356606`, -3.}, {-3.990431884550895, -3.}, {-3.96808820387277, \
-3.}, {-3.9457445231946457`, -3.}, {-3.9010571618383967`, -3.}, \
{-3.856369800482147, -3.}, {-3.772917789246435, -3.}, {-3.6894657780107223`, \
-3.}, {-3.525835749921441, -3.}, {-3.3483368590714466`, -3.}, \
{-3.1826833911750247`, -3.}, {-3.092922225846457, -3.}, \
{-3.0031610605178893`, -3.}, {-3.0026785714285715`, -3.}}], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQvaLZakXzL/YDDBBwYK/j1su9XxH8NxYaDK/eI/he
6nyRi54g+CtEv2yMuongp3zan3z6EIKvcL5b1GYNgj+zQ7lSth7BF3Lafedf
IILPsvXV4oPf2eD8b+pS2S1zEfyYy5F62l9Z4fxDdTM/XvRB8EVf3TDYcZ8Z
zs99cPPmgy4mhP7e1ILzjxnhfG+rj2z7bBD8J6LpDdKPGOD8uo93fla0I/he
96dvU49C8MXPBhVf00HwuzoalZoUEfy/zhsu6ooh+NsWuq9sFkDwC/7fa7jJ
heBH1BwNr2FF8AGeF3xh
        "]], 
       LineBox[{{-1.9973214285714285`, -1.}, {-1.9887019278014337`, -1.}, \
{-1.977638101457238, -1.}, {-1.895050202180459, -1.}, {-1.81246230290368, \
-1.}, {-1.6334176415894086`, -1.}, {-1.457646974657281, -1.}, \
{-1.2937217306787259`, -1.}, {-1.2048246773090914`, -1.}, \
{-1.115927623939457, -1.}, {-1.074440452993033, -1.}, {-1.032953282046609, \
-1.}, {-1.022581489310003, -1.}, {-1.0122096965733969`, -1.}, \
{-1.007023800205094, -1.}, {-1.0026785714285715`, -1.}}], 
       LineBox[CompressedData["
1:eJxF0Wkow3EYB/ClvDAskWGtEGLMWc6VEGuKSCtitiWbNUnOFBJGSq7SXG8s
czQx11aYHPlTE5OR+8jfimG2ciZC6fk99e3b5+338cwrzhBYEQiEoN/8tYxk
HCQZn5YJ/ycULlnYOmTfTpaXywLy7byefSxHHsO5zQMdyP6RFXfuAmT6hUzp
54AcQv9kxAhN4OhMx4/wNOSEBpo6NAqZfZQZQiMiV0nmvF0nH8ErZ0X2ry8P
4PS2q4vppntwiQmrpw3fgrWxxkPj9zW4uJKmKCw7BUuc6sSb1rvgmYiS1DC1
Dsxh3mAHfOQpgVZNVe+As+TSXgV/GzzqGczZUGnBTCof/+JhYHOAPkdGRO5n
MPcTVetgUzYdayUiS/veR9xUa2ADuUscTlwB23hJ8GORCuxRXkGuXp0DR2DC
ZCoFOb8gWcndmkF7jpOq8cAp8IMozOfEMAym2Dq3UnvkYNbEm5nLGgIPWTQa
XDEInn1uHzu5lIJJ0exyXkI3WFzrFncj7wLH27GUp/oW8Hv3HtPQ2wjOZSxo
zhdr0D9TdPfmpFIwmWdx5lkE4B/WZ9IR
        "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQLRb/UTT+Y6o9Axh8sG/IvRN+aGI5nM+5LnnKdeZG
OH/OHL/UI5XdcP70ozKzb3yfBOdrbWHPOZo7F86PC6yUu/lxMZz/0T7l/dH0
dXC+03T1hJt5W+D8X6L/dk2ecBTO1zT4knS35AKcH6F0Sf4j9204X31HeLe8
82OEey/mlJU8fQHnF7iXSEi1vYbzr++t3rVf7R2crzdx7jGZuwh+S8r+S5WT
38P5UTePiwoeRPAX8r1awPcKwQcAEm9pyg==
        "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQveFH1/ofXB/sGSDAoSnxzVl5PgR/R926ea2SCP7b
2QX5r1UQ/EMClZuaghD8Ga2NXyUbEPx3EYsZy80+wvkuOkd5r7xB8F+7u+/x
dvwM509KPpl1eOoXOP/q5QX7PQ2/w/mc0j8WzWP9Becb+5zZlLfyD5zvEPCN
cZ/4PzjfL0QhkLftP5yfn3z27bkNCP6EoqquCbcR/IhtSz86PEPwFX5diPj4
AcEPYC8NYP+K4AMAXrdcjQ==
        "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQHVFzNLyGlcGBAQw4HBaw7K+6yYvgZ3q8etgpgeB3
hU+v83ZG8FenuUjz5iH4b1vmhUw4jODrL/7RKyzJCOd/WLtw3/4DCP7GHV7v
szOY4Pw1O+9M177CDOcv0l97bYU6K5wfmbBVcvZ9BF9g4t6Y3ulsCPcJ2MTe
/Ijgs0zYFavqww7nHzz/M9a7EsGv47eMK1yG4Mesj4hj2YvgW/tXxE2/jOBr
yXfce3APwZd6Pz1O6xWCL3R9vtz59wg+5/7l94q/Ivgrmq1WNP9C8AF3IFgX

        "]], 
       LineBox[{{3.0026785714285715`, 4.}, {3.082619032466984, 4.}, {
        3.164876870345535, 4.}, {3.3432614088633517`, 4.}, {3.509800524427596,
         4.}, {3.673065645609696, 4.}, {3.761632637581103, 4.}, {
        3.85019962955251, 4.}, {3.8915217697998203`, 4.}, {3.932843910047131, 
        4.}, {3.953504980170786, 4.}, {3.9741660502944414`, 4.}, {
        3.9844965853562693`, 4.}, {3.9948271204180967`, 4.}, {
        3.9973214285714285`, 4.}}], 
       LineBox[{{4.0026785714285715`, 5.}, {4.010322923010838, 5.}, {
        4.015488190541752, 5.}, {4.1077440095565905`, 5.}, {4.199999828571428,
         5.}}]},
      Annotation[#, 
       "Charting`Private`Tag$38047#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.2, 4.2}, {-4., 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766109113323288*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"a44b8e1a-a3af-4a5b-b245-4cacbc796f50"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "\[Equal]", "x"}], "\[IndentingNewLine]", 
 RowBox[{"3", 
  RowBox[{"f", "[", 
   FractionBox["x", "3"], "]"}]}]}], "Input",
 CellChangeTimes->{{3.766109228006076*^9, 
  3.766109352974103*^9}},ExpressionUUID->"0f3ef17b-f204-47af-9ec0-\
29e2b3725fa6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.766109382147999*^9, 
  3.7661093825964603`*^9}},ExpressionUUID->"16ad5422-138f-4b6c-b7b4-\
434301029a88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", 
     RowBox[{"3", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["x", "3"], ")"}], "2"]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "12"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661093888885202`*^9, 3.766109520522627*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"ff4b278f-8a01-487b-a0ee-75ef2da5349f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$39953#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1mHc0FX78xpEVkpV7uwpZVxIlShnvT1JJkVJCQhlFNlEqRfbKzqjsVbJH
FJ9rJtlENl0jI7LXl379zvn9/nrO8+dzzvOc8zrPgTu2V83oaGhouGhpaP5X
TXJC5v7+JVBaDQ8M/f1LRjybJDGF/wgUCvMnqvMaGdWcSzVwXiNQiF7XCHN/
yEhssPTrzB8ChWXZm5U6QkZTbNTknhECZT5vktxTTUZ2lnK6BdUESll82pFt
HzJyE+2lmPsQKBoXt90PcZJRbJxwWBM7geL8U0SEmyyG4od8ba/s5KW8CNeI
rFYQQbyt2pcP7tlDCYwxXSR5CaF6LW3Vb6I8FAGrrATqpCBSOyjqJCzETRme
rDVpc+dHp7IN0lqkuSg/MKv94RA+tOFvzi1zkJMyy7WmEedPRMurKZGGZA6K
4oPqj+0Ve1CNUJhshTU7JUS4O1NcnRspMDwrOGTKRpkYTmei/8aBItCJE6ef
slBYCBl/YxV3IZPXumNT8cyUrN2sBn/P7EQt6fw7aWMZKd/f0PEPqjEgfrbc
o7iYniIl4i+ZPUyLWATHWybf0VFEvJ6XAMsWWF3zis7IoKH8cN8y0xNcBePq
oW/8YVvY24jElHRiAYSUtq/Uuq9jxbJs22q+aWjlVJKMcVjH6vca1gM3p8Bt
/DGjtck6nqOO51v0TUHvy/UynrPreOOMUL5B3BSE/1wSNmVexwfSk0bF900B
ve/0Mt3LNfx6/ete/QOTMN7+Iwa9XsWXWvJrBE5NQOa9gpFPxcs4Ten3PvlU
KnTeiRe4mLaMo6WF8l/4UIHmVsCt3shlnC77vGnMggo6V0x61pyWMf/Dkqjf
UlSgO8XdJndsGd8f5XJkLfsJ+qyOlJycJRxy9an2884RYMmWiU/OWMQbnoIF
mqRhkMvgH5CJXsTyRXOkru0hME5i4avyWcSF3n/6FL4OQXHUz6hh80V8+/Uv
j2DDIbjzLCx4v+gidgvLN9UKGIQyrYWnrxIX8LfMDy7nfveD5WKeQUDsPE7x
RH2b7T0Qc3xe4a7/PK4LvMlfnNwD9Y+O8J1xnccTLplNcU49IEqT07OhN4/F
VwfsJnl7YJgtS8dy7zz+EJP5NejWD7gulqZ1IfoPzrX5VrOx0AXu+bJ+7JJz
mKJ7csRMuRMG5QvO17HO4WFK7rsgnk5QxEcZ3aZnMQ3bzeHhqQ5Y+Sb14ve7
WXz6olrIzugOsBoTf9p4cBbXWXvRmS61gy5xv70/+TduUvE/olTUBlJuDHqM
wtP4o94TM9qcZiCVtb76RT+NxU2idNjuNwPDSlxXw/gULlKg9N8hN0O/tcy1
l++m8Fn9MxkLCU3gf8voMlFmCvNrMCm+edUIE4qlZyVOT+Lynd46/OENkLBp
JaNpNIEjBg1vtFbVQeAJefsjpydwbKPDlIZvHbg47sjlEp7AtX5RXATNOtCc
jjncPT6O/e13CQX21sJWb524sc04bl75qES7WgP6ZYICDk/HsOIPxnsE5Wrg
ftTJGhVHxUUrT30X6Smw9nedc86Viu/dXd4fEI9h0FuAqKZPxaminf3Dchgy
IixFNohU/MPmtF2iaQUo59IoGUb9xEdk+347N3wGiwlJG7HQERzmz6rqWFIK
mjZXnZ7ZjeAHanq2MrqlILvs4vrj8giOVQ+8lLz+Ebbpqr392f95vqR9scof
IYJfL342YBgH/Qnk7m8tBrf3LInWu4awkLmRQR5vIVwovf5BoHEQz9ylTQuo
KgCeLwmlbf6DePWDbyLBtgAyfx5vl2MexHWM57NVG/Khc6/Jjm26Aaw17cG/
6JsHEr6fzILXerEszVyByuVs6Da1ksihduHl3PRH3p2pUDGgdaI4rQsnKjYT
O41TIU1HTrXcogvHeiZ43ZhNASe17Vvf5r7j+xfU6v+ypQCHZEjoxGYnDk9L
mf+umwQXFgvWBHg6MI3hgcyj19/CEatoBnJ3O67cHnvtHfEGiGNPuKRi2/Fe
Ip3k+a7XMN51VlJRsB37F6J9rLfjwKOs20hXsg07R3Srvg2Phgc7VoMO+DVj
3z/3i+etwkH135SldzfjHFKGEU1HGHBN+FYqRTZh63KFFFeFMMhuIC3rJTbi
91YWf/O4Q2E8VNkgrLQBW45+3rxRFQSFL5icE6ABC1Zl7ZAuCgSPB60vs2u/
YrrQiyoDWQEgoHenuqGtHmvRRZngd36gK+gtsWOqDjMcMzweO+wFYlyXVTnt
6rBQbO2ixIYnLO0gGgqs1OL7C30TYURPCJ3IDFWgq8Xeznucfpl4QEN205oj
qRq/i3E5ec3CDaITorg8EqpwgaucwOTkEzAPM5IMEavCPMpXHCSdHsMO53mj
LJlK/Ot+knFF6kNwcZUI/hpZgbHJ+1u7nzqC5uyfrpy0clyj/m2T9ooDiN0p
EYgq+Yz5Lw+kqEjZw/cLqnl3espwilGOtMFOG8gqZ9lQmyrFesTn1Xmb98Hz
aJuK9OZHTGGVs06msYRjew07N/eV4OCki3Q3VcyBJUhk/8/DxXjl7Iffgs9M
4SfNtFm9chFmE1mc9Wi+A6G/XFYjjAuwq+AN8+PqRnDPQBk9ts/HuYqKM0m6
BoBa6f1ue+Rh1Dz55nygHgzaCssZqOVgsytvPU+aXIOgG7l14pYf8F+V1FJv
xqugCEq6ywHv8ZD2pCzx7WWYFmuYrPyQiR3Y9mqGP7oIsew3Hge3pOPSnJ4K
t/jzcGGFynZzPhVnKx3y6d2tCmsDdm/J3ClYp3hXeloDgvTaLekl2SRsfIxO
qS5eAXQ++FdSdBLwgxaWPgE4DiwS0mmk+dd4FsmJ6zsehXvral8LZGNwxO4d
F6YeSkBd/Z2ZSw8jMafaUPyIrDAIRz/ZPf4pFKfobGfKypGArkXSbHs7ABc5
1LaKX+OAcmvj90e8PXFSPfkeBNHCPFGcWktyxY03NeIbTGeUW7P4h65dNcdF
DD3MxVU1yvS3Lwr6ntGEB9anDn3lCVfOlEpyYStzgGBhu0mLkwPKMQ/fLHd8
fw7ITbzK6u2q8kCPRU6ipi+Mi+zcVn3LDEIKxy1sv7yEn/qM/pIse+CYpnso
f0I42Hz+kmHAJgjf3e7aeBm8giMrLZam5WLgkqNxcYYYB8W9fAGHo6WANHxM
XPv7W6Av+k5v0HwMDJmD6AbUEoHjKiy6j8lDjiCNPQc5GZ7UNIT4hioDzUnH
oTMMqSDK+Hn2hIUKXLkyruFCTQMckTzD13kWkiz0Pr+rzABm9n0qdn4XQDUW
YjjdskB/eGi9cFILIvPzmc4aZAPz0+V0JlltcBzjUlDcnwucLzvcw5KvQ82W
V6btZh5Ick9+1FrQhxk/bOw3lQ+KXoK8nm23YA/vOiG5pwB0joe0rFoag7mU
lXdXSRHUNinGnkg3geCyVKU/acXwzN4i4fRtMyg5N7S0M6oExi+7fp44fBeY
ja6aKDmVQtlntePMfy3h3Ut5lHKkHE4dukTUoNgDfU38ZybZCqhKHuFUoXUE
ozXGk/dPYEiQ3XSV0HAC/9wp4t54CpjHl8V9Z3AB5b2lnMOpVcAcY0mI3HgC
9wtmWkLJ1aDeKRgkGv5v3xqCwWcyq2Ex/HDpNb7nsODuw5KeVQOcbNm1Z1vc
IW3q+g6bgjq4Gfzlcf9DL+jw9KsUkPsCN3cVOC3YeQONQPmztuIv4B1tLOph
4wP62iL/yZbVg3EHbTa7qx/s/rywtElpALE+A4P+9iB4GPRy3K+5GexiynhT
a8MhlVydoqDVApplqO2pdQS0V67c+d3WAioj6Xe5iZHAu5ltm2HZCvdP7xV/
8CAK7KR5Z1ht2qBO3XeV60oMiEaPjrY7dUCU+6vWkoB4UDTbrn5f1AFTtK9E
cqQT4KoMMdlzpQO46tqbh2MT4HnjxdvHH3aCdzeftdGDROilKRiIefwd/vAv
tX49lQzBFu5dxh7d0ArlctpM6eD7jbZotKIb0t2TmV3d0sHjsEf4vc1u+DhO
ZWpfSQeXeQ8tO6cfEEByDNgznQHGjzwbnpn/4xzxb2lTI+/gqJ9PxVv1PjAY
vi3VxJwDktNMb4R8+qDj+lQdY3gOiGn4Pk6r7gPkMl4rvzsXSJx+8tmK/VCl
qqVh/ToX6GL888ulBkC4AJlvledBZ0ZQWj/XEFweiKCU7i+EZhZ2L+PLQ9B1
9N2ckVUh1FsFm4wGDMHGq5nCt58KwTD6PIcz3TAQY9Zox28WgbaBWtPTx8OQ
b3M4LS65GBRHL5wPsh6BS3dZCMmXS2HX0iWFrCtUEAwOjRUiYeDolTFxcaBC
Lmo8y+2JgYdCDFAJp8K28svDJbMYSIGjvT86qXBr9w09NhMKiIs8cWXQHQX7
ovQLicqVoHLtfamh4RiMkDi6oxmrwblwpzzn/Qn4T30rpaKnDh7Fzhn1B0xA
k5FA9dTeL/Dk+Xef9KwJcI31eman/wVeXErsVpqdAGt3/g7f/i8QMirvYmn/
C5L2eIzNjNbDe557xdUuk3D7BkeJB+M3GHaqk3X2nAZOdGHXWGAL9NczkDJS
psESy1KpXS3wY9/Zvz010xD2IjfwNUcrtNZUf1VimIGBVSVtx5utQOGpNGTw
noGSsIED5MVWiC/85Bvh8xsehkrXpku0g+FSbn++/xycKOAX2VXWCbOlGlUu
9fOQ7nPwzD39XhDd+cXpcfc8mEbQHd707gUDXUR+Nj4Pv87pZxYU9ELDikyg
N/0CSL/x0ovc1Qepx4g6kWgButgbX/H964HBh5+T+R8XIIqRGHhMbgAaElw4
ZzMWoV+4K7P+H8+n+SQam/otwyVmE2kPbSoY51nnZMUsg4j0q6N1dlQg9Z3c
XspcBt1naRcFg6kQLNUe59WwDF1xOl94v1LB+TtddxrrCgjU/tfPhkbhnLCp
xmTQCvz5Yey+X2YMxivETtmErUIog292q9gEiK68534Ytw4VDldj3a5Ow2C+
QLnCvS1415vtI/Evx/VXw77TITRIJnssPH5wBd6mBpZfiqJDdLbcpajhP6C/
af2b4RE9avzS9qTSmRY1G2emX/VkRCEH8iv5BBlQ0S7SrVUrZqQVbOs80MeM
xGIP/GK6xIJSlAq1b7SyoQ1nz6332mzogfyGpFcJB5re4GPPkGdHJW/M5nmY
uFHCXZ9OPmEOdK5IJ+ZmwR4UcroxcK8oJ6pnZa4acyMidtv3KtV7uNCdgU6w
P82HKlQ/lheTuFGZW3+ruCU/2rI2Oq7DzoOEPCxQdJUgomVqjzm0xYMeaEQn
sd0UQsfVHKrUaXiRumlZ2bFDImijP+vXngVe5O3rasr0RxSpWtWHaKzwIhWP
7kjimigK2qTKe23wopG8NJVDNGJIkMTnt0RHQI35cezXOcTQ+Rt+Bzu4CchQ
Ydi27IgYimgzswyRIyCdux03Gu3FkFQd/wzLIwLKkLhTzrYshh5ePxWh8pSA
loYZbmlsiaHK0euKru4EJNzE9/AlAxld2xEUOOlHQNLn3woSecnoMdqUrI8l
ILqqrVMKJ8iovqzb2uszAT1uF4usf0RGXOqLe8opBLR74ve0oAcZGfSwVyzV
EJDvUXKFqz8Zza2eZTdtIiDRe386ZeLIiFeuMFtlkIB4DQa+FX4mI+OaFh3X
nwTUInB8m1hLRpna09t54wRkuZc2y62JjBQdhC4fmCMgrezfjzQHycibVnlV
d5GAYi/sjv04TkatIXrxIasEVE9KlhOZIyOS4IPz9ZsE1H8g81LoKhn93x+C
/v8P+R++r2ry
          "]]}, 
        Annotation[#, "Charting`Private`Tag$39953#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5.999999755102041, 5.999999755102041}, {0, 12}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SuperscriptBox["x", "2"], 
       RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"(", 
            FractionBox["x", "3"], ")"}], "2"]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.766109416918622*^9, 3.766109428005431*^9}, {
  3.766109459613789*^9, 3.766109520983899*^9}},
 CellLabel->"Out[65]=",ExpressionUUID->"ad76a13a-f1d4-4db8-9aaa-038e6a08e678"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["x", "2"], ",", 
      RowBox[{"3", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["x", "3"], ")"}], "2"]}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7661095565457287`*^9, 3.766109594864602*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"99ef5a17-da5f-44ca-8f71-dd356f00f413"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$40192#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
FRp4BVjcOjQW8H8+BP/vQ/4HDPOeBw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$40192#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {0, 4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SuperscriptBox["x", "2"], 
       RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"(", 
            FractionBox["x", "3"], ")"}], "2"]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.766109624927228*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"0c41e560-0c1f-4d8c-b68a-c3b06ab88e7d"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.76610957925504*^9},ExpressionUUID->"c0465f2f-1aa3-48ae-ada8-34f3c87fb66f"],

Cell[BoxData[""], "Input",ExpressionUUID->"f578709a-22a6-4973-ae4c-094ca3403bcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       RowBox[{"a", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["x", "a"], ")"}], "2"]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "1", ",", " ", "3", ",", " ", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.766109715623786*^9, 3.766109753011291*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"5898ed23-1a1b-421a-9346-73349c39b1f8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1, 3, 1}}, Typeset`size$$ = {
    1073., {221., 232.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$43139$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$43139$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`x^2, $CellContext`a$$ \
($CellContext`x/$CellContext`a$$)^2}, {$CellContext`x, -2, 2}, PlotLegends -> 
        "Expressions"], "Specifications" :> {{$CellContext`a$$, 1, 3, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1157., {324., 335.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.76610973412114*^9, 3.766109754970854*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"f2e9f618-f6fb-48aa-8c6b-4ead06021620"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", "\[Alpha]"}], "]"}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["f", "*"], "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.766109778717125*^9, 
  3.766109806019637*^9}},ExpressionUUID->"1e66a6f3-e6e5-4cca-8453-\
4960604f8f9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{
    SuperscriptBox["x", "2"], ",", "3"}], "]"}], "\[Equal]", 
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["x", "3"], ")"}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.766109810967698*^9, 
  3.7661098216110497`*^9}},ExpressionUUID->"d697fdb9-0712-4391-9c0f-\
5ea8e7eee0b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Normalize", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", " ", 
          SuperscriptBox["x", "2"]}], "}"}], ",", "x"}], "]"}], "]"}], ",", 
     " ", 
     RowBox[{"x", "\[Element]", "Reals"}]}], "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.766109824922154*^9, 3.76610985249037*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"5e01a064-dff8-46d8-801b-00be126c42b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"ArcSinh", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["x", "2"]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766109852919464*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"f784dd64-12bb-42ed-a37a-61c21b4e19b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", " ", 
  RowBox[{"Integrate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Normalize", "[", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           SuperscriptBox["x", "2"]}], "}"}], ",", "x"}], "]"}], "]"}], ",", 
      " ", 
      RowBox[{"x", "\[Element]", "Reals"}]}], "]"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7661098655092783`*^9, 3.766109866794941*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"1d748b4c-74b3-4525-b1e8-112ff4073437"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["3", "2"], " ", 
    RowBox[{"ArcSinh", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}], ",", 
   RowBox[{
    FractionBox["3", "2"], " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["x", "2"]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766109867544684*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"95a71e4d-344c-40f8-ac59-8ccdb9f031ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["3", "2"], " ", 
      RowBox[{"ArcSinh", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], ",", 
     RowBox[{
      FractionBox["3", "2"], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "2"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "13.649999999999999`"}], ",", "13.649999999999999`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[71]:=",ExpressionUUID->"880faed1-8d31-4b92-98c9-326df43a0737"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$46307#1"]& ], {}}, {{}, {}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-6.000553730988832, 6.000553730988832}, {0., 
   40.97746331826801}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766109870866435*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"d09aaec5-73f5-49ec-ada4-349f28e3fb21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", " ", 
    RowBox[{"3", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["x", "3"], ")"}], "2"]}]}], "}"}], "/.", 
  RowBox[{"x", "\[Rule]", "3"}]}]], "Input",
 CellChangeTimes->{{3.7661099482274323`*^9, 3.7661099667740097`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"e32a7ad9-f576-4341-83a1-1d7fbe7423a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.766109968470807*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"0282e004-2e21-4416-bf4d-4ab2c5585a78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["3", "2"], " ", 
     RowBox[{"ArcSinh", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], ",", 
    RowBox[{
     FractionBox["3", "2"], " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "2"]}]}]]}]}], "}"}], "/.", 
  RowBox[{"x", "\[Rule]", "3"}]}]], "Input",
 CellChangeTimes->{{3.766109977032508*^9, 3.766109979792685*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"4296a38c-8c26-45c5-a773-7554ce3b87fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"ArcSinh", "[", "6", "]"}]}], "2"], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SqrtBox["37"]}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.766109981767867*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"198b2678-8ff2-4d6b-9b06-213886bc2cdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"ArcSinh", "[", "6", "]"}]}], "2"], ",", 
    FractionBox[
     RowBox[{"3", " ", 
      SqrtBox["37"]}], "2"]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7661100000305634`*^9, 3.7661100014071827`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"ca0d3aeb-bc71-41b7-8780-7b874137e479"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.7376697789673683`", ",", "9.12414379544733`"}], "}"}]], "Output",\

 CellChangeTimes->{3.7661100017212753`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"1302aada-e7d1-41ab-bca9-193b8f2f2171"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"\[Alpha]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["3", "2"], " ", 
         RowBox[{"ArcSinh", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}], ",", 
        RowBox[{
         FractionBox["3", "2"], " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["x", "2"]}]}]]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", " ", "1", ",", " ", "3", ",", " ", "1"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661100592125263`*^9, 3.766110096983926*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"3263ddb3-fb91-4023-b390-92a657abe4de"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Alpha]$$], 1, 3, 1}}, Typeset`size$$ = {
    720., {362., 372.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$48275$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Alpha]$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$48275$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[$CellContext`\[Alpha]$$ {(3/2) 
          ArcSinh[2 $CellContext`x], (3/2) 
          Sqrt[1 + 4 $CellContext`x^2]}, {$CellContext`x, -3, 3}], 
      "Specifications" :> {{$CellContext`\[Alpha]$$, 1, 3, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{804., {438., 450.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.766110097439127*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"66dcf4aa-abe0-4dbf-80f3-56507136e50d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Alpha]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["3", "2"], " ", 
           RowBox[{"ArcSinh", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}], ",", 
          RowBox[{
           FractionBox["3", "2"], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["x", "2"]}]}]]}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", 
         SuperscriptBox["x", "2"]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", " ", "1", ",", " ", "3", ",", " ", "1"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661101043500433`*^9, 3.766110137076742*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"26b8c77b-d59b-4af7-abc6-d57f9064f2cd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Alpha]$$], 1, 3, 1}}, Typeset`size$$ = {
    708., {427., 437.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$49033$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Alpha]$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$49033$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{$CellContext`\[Alpha]$$ {(3/2) 
           ArcSinh[2 $CellContext`x], (3/2) 
           Sqrt[1 + 
             4 $CellContext`x^2]}, {$CellContext`x, $CellContext`x^2}}, \
{$CellContext`x, -3, 3}], 
      "Specifications" :> {{$CellContext`\[Alpha]$$, 1, 3, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{792., {503., 515.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.766110126035151*^9, 3.766110137396166*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"ead3e126-7eba-47bb-b021-02fd8c72d878"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Normalize", "[", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", 
      SuperscriptBox["t", "2"]}], "}"}], "]"}], ",", " ", 
   RowBox[{"t", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766110257063058*^9, 3.766110276859199*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"33b23cd8-d9e5-401e-994e-e24f5c6233b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["t", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["t", "2"], "+", 
      SuperscriptBox["t", "4"]}]]], ",", 
   FractionBox[
    RowBox[{"Abs", "[", "t", "]"}], 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox["t", "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.766110277580716*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"ab57caab-edc4-4f6a-8168-ce9dcbd62034"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["t", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["t", "2"], "+", 
        SuperscriptBox["t", "4"]}]]], ",", 
     FractionBox[
      RowBox[{"Abs", "[", "t", "]"}], 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["t", "2"]}]]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "15.77333333333333`"}], ",", "15.77333333333333`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[79]:=",ExpressionUUID->"963f37f3-b8e7-4e3a-aec9-51467068defc"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
+r0=
      "]]},
    Annotation[#, "Charting`Private`Tag$50651#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8372851944742844},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.9999743405784431, 0.999997054024523}, {0.8372851944742844, 
   0.9979963757943681}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7661102809109573`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"278c0cdc-8ba5-44b4-812c-f29be6129811"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", " ", "\[Sigma]"}], "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.766111269853443*^9, 3.766111277594186*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"4ce64e8c-6032-4684-a517-4a0b09456858"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.7661112787907*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"18dd1d2f-7dc8-4d00-a74f-239dea9183d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]], 
       RowBox[{
        SqrtBox[
         RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], 
      RowBox[{"Log", "[", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], 
        RowBox[{
         SqrtBox[
          RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], "]"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7661112823796463`*^9, 3.766111300039384*^9}, {
  3.76611133678356*^9, 3.766111337786614*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"c4244365-2888-4c67-8c5b-d0c2dbd304e8"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7661113895123587`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"9647ccda-693a-461c-98da-294f8edfbd7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], 
    RowBox[{"Log", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7661113924910307`*^9, 3.7661114091325006`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"d4edd3e8-9657-416c-aac4-2629e5d80354"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"f", "[", "x", "]"}], "]"}]}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Output",
 CellChangeTimes->{3.766111410207108*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"0e204faa-184d-4de5-895b-c36cc3609d87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entropy", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.766111417702302*^9, 3.766111427989264*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"4e7036f9-ee90-4830-841d-1c4e26c8d83a"],

Cell[BoxData[
 RowBox[{"Log", "[", "3", "]"}]], "Output",
 CellChangeTimes->{3.76611142830542*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"5042b882-036a-4c68-bf50-28e3284d8ca9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entropy", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7661114327530613`*^9, 3.7661114328332*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"3334002d-5036-4f7d-bb28-b3ba34b7d7f5"],

Cell[BoxData[
 RowBox[{"Log", "[", "4", "]"}]], "Output",
 CellChangeTimes->{3.766111433139752*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"7db1acfe-e7d4-428c-a561-313574f11a30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entropy", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", " ", "e"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7661114375071087`*^9, 3.766111437699252*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"847f3647-9994-4375-9531-6fb3df4d449d"],

Cell[BoxData[
 RowBox[{"Log", "[", "5", "]"}]], "Output",
 CellChangeTimes->{3.7661114380902987`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"30d21415-4594-4203-9032-54f0280003ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entropy", "[", 
  RowBox[{"Range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.76611143935916*^9, 3.766111443982209*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"9e38a477-94e6-4244-87bb-83cf427ce4dc"],

Cell[BoxData[
 RowBox[{"Log", "[", "10", "]"}]], "Output",
 CellChangeTimes->{3.7661114443742456`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"87332279-ce08-4954-a900-a77fcebc527b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"f", "[", "x", "]"}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[Equal]", 
  RowBox[{"\[Lambda]", " ", 
   RowBox[{"f", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.766111466105982*^9, 3.766111489892933*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"8e59e34c-e040-4635-9638-466696c88065"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"f", "[", "x", "]"}], "]"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[Equal]", 
  RowBox[{"\[Lambda]", " ", 
   RowBox[{"f", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.766111490888997*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"553074df-7a46-479c-b090-f1e4a3cb54db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     RowBox[{
      RowBox[{"f", "'"}], "[", "x", "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"f", "'"}], "[", "x", "]"}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[Equal]", 
  RowBox[{"\[Lambda]", " ", 
   RowBox[{
    RowBox[{"f", "'"}], "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.766111497556501*^9, 3.766111501794263*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"2dce743e-91fb-4cd3-b2b7-a0eb76e75091"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[Equal]", 
  RowBox[{"\[Lambda]", " ", 
   RowBox[{
    SuperscriptBox["f", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7661115021747723`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"27c8c7a0-6d2d-4e41-9477-d54587cf8a04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}]}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[Equal]", 
    RowBox[{"\[Lambda]", " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[89]:=",ExpressionUUID->"896b427f-c1a3-444d-9bc6-329df44cbd9e"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "1"], 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}]}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[Equal]", 
    RowBox[{"\[Lambda]", " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.766111505174521*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"c38a7ed7-7049-4564-8eb5-335f7fed840c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TranslationTransform", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.766111689667527*^9, 3.766111704838121*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"fa7082f4-0370-49fd-b22a-1378b23e948a"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {"1", "0", "a"},
      {"0", "1", "b"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.766111705198332*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"3bde6fda-a221-48bf-aa96-eaadf391227b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", "]"}], ",", " ", "10"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.766111793441617*^9, 3.766111817890068*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"7f1b0663-c142-42d4-bc42-3f53cd844624"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6649999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6649999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {0., 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{29.969975980784653`, 
          255.46957566052842`}, {-211.8205651464334, 192.41692312990665`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {2., 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{254.46957566052842`, 
          479.96917534027216`}, {-211.8205651464334, 192.41692312990665`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {4., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{478.96917534027216`, 
          704.468775020016}, {-10.20182100826338, 192.41692312990665`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.12, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-2., 4.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766111818426252*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"9e0feae9-ae9e-4574-8e89-0eece178528f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", "]"}], ",", " ", "100"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.766111823291821*^9},
 CellLabel->"In[92]:=",ExpressionUUID->"794954a2-e0fd-40fc-ba75-f843dfabeecf"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.609], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.609], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-3., 0}, {-2.5, 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{40.75860688550836, 102.02500181963745`}, {
          175.4099385316329, 192.9478526371176}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2.5, 0}, {-2., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{101.02500181963745`, 162.2913967537666}, {
          142.33411032066346`, 192.9478526371176}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-2., 0}, {-1.5, 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{161.2913967537666, 222.55779168789573`}, {
          125.79619621517877`, 192.9478526371176}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1.5, 0}, {-1., 9.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{221.55779168789573`, 282.82418662202485`}, {
          43.10662568775524, 192.9478526371176}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-1., 0}, {-0.5, 24.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{281.82418662202485`, 
          343.090581556154}, {-204.96208589451538`, 192.9478526371176}}],
        StatusArea[#, 24]& ,
        TagBoxNote->"24"],
       StyleBox["24", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[24, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0., 9.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{342.090581556154, 403.3569764902831}, {
          43.10662568775524, 192.9478526371176}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 19.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{402.3569764902831, 
          463.6233714244122}, {-122.27251536709184`, 192.9478526371176}}],
        StatusArea[#, 19]& ,
        TagBoxNote->"19"],
       StyleBox["19", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 21.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{462.6233714244122, 
          523.8897663585414}, {-155.34834357806125`, 192.9478526371176}}],
        StatusArea[#, 21]& ,
        TagBoxNote->"21"],
       StyleBox["21", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 8.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{522.8897663585414, 584.1561612926705}, {
          59.64453979323994, 192.9478526371176}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{583.1561612926705, 644.4225562267995}, {
          175.4099385316329, 192.9478526371176}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{643.4225562267995, 704.6889511609288}, {
          175.4099385316329, 192.9478526371176}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3.11, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-3., 2.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766111823603807*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"0b705f14-ae69-472f-a7b6-99906dc25ed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", "]"}], ",", " ", "a"}], "]"}], "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "1", ",", " ", "10000", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7661118278993464`*^9, 3.7661118404839077`*^9}, 
   3.76611187644874*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"bf0a7b11-faa1-41d1-be74-5caf96784748"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 10000, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1, 10000, 1}}, Typeset`size$$ = {
    720., {213., 224.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$190000$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$190000$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Histogram[
        RandomVariate[
         NormalDistribution[], $CellContext`a$$]], 
      "Specifications" :> {{$CellContext`a$$, 1, 10000, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{804., {290., 301.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7661118383423758`*^9, 3.766111840854363*^9}, 
   3.766111876774784*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"3d3e64e3-7a15-49ae-8eae-5f5a0f97d417"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"DirichletDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"3", "/", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     RowBox[{"3", "/", "5"}]}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "<", 
        RowBox[{"1", "/", "4"}]}], "&&", 
       RowBox[{
        RowBox[{"x", "+", "y"}], "<", 
        RowBox[{"6", "/", "7"}]}]}]}], "]"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Opacity", "[", "0.7", "]"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76611198388736*^9, 3.7661119838886547`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"784c98ed-d19c-430c-b1fa-8694ba9d5635"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
YYjeyTkXlYW/i6cUF+Qqg9OqbfWvkaFUq/GjdubbKKWN6ZtHk0Z9F/nOrj4z
Ob/XDaWpV5PU5WE66uDFxX+GBmnnewt/H52e+/W3UlgvY9oJv6fKmq/lehwa
e09xDziRtCixjFr7jNulu6Ha+d5+es4DZr4qq06qZRlzd2GyGDdfXo0rXPCX
sTrp8Xgz7w+JYnwsu7vBgj/umapTtmxPbLnukbgv7p8r8jn13kLF9XD9HQcz
Tt10tlHnLjoX+NfJVcr2GkapKwpL2vXSsFmmVX4oDSva1v9Q7YRSbeT5ii4l
fiq0DP7gPdNChV/gp68XUuo0mmyrVlka4tv0o3ZOss+bpV0yKxSI/nTL8TO9
D2XGKzo/Jm8Y+7u0inaAdhFssO9csypGYtyJTkrPtSkpR5ald1Tp2YYq2hPa
l1tqYdcLhSZivxX+eD51Vuvq30xUtEu004dj+nzZsMRczN/g1+Cxl94GDzTX
9lv/qbfntfNWXL9jJ+Y/uD8udnH0tc+0UcM6utbyfq2dB94wMbKPY4SNOA+8
c3/Zy2dL7r/wKT9cTPcaq4Up4wt6hESK/qBa+ITd9WKt1VadmvYdPaSkvKvO
x7x0LylvtzJRD9wM1RU2/g1dvj9RTie1HJjTMFHZ1M4gfWhlExXf8f/8+L7T
PW+bqfg90tvuP9r7fFtLdczAYN2Eq+nKiJuj1Pd7YhXdm497rm/0S/lrm/W8
LcfTlZMJ98Nv/HlVmf7BZfGERoXK++nTyteblKasnn3z+KIZD5XNc3PeGO4w
UINmv15UqX6Kkvx7dfzdc4+VPX1/NLq/1UjFd/w/cIvPyau6Fip+j/TynR5k
BIZbqcgH8nXCeNnRH9F2KvKBfG1+vbjm29t26iFHPf2OXzOUqOnTS42dvl2p
0sgr0H9TrPLqd+mD/d9lKD97lj7sW7RHiRp8c9ks0/vKxnuznA9d0s7hX4/5
/apT7Etlipfb2ZYl85+6a65MruF+SmlTNu/D1q+ZyvvzNn+4BD0Tz1nzfOrV
/Wmrpyb5BStzuj1Ttr62+PP96dtKqQ2nAnQi9NTNcT7LTfWeKVUKF3arpxuv
LHpkUDN4SWkxviC9zLjM5l7xtuK8X+FinxfFeRmK04Ipc1LXFYv8nbaJuF49
KkPZt+x+ZRdLS3XKhrazt6RmKKblCrf5TjikFOl181mXmaQ8NZ7ifaNlhhif
90VfHBKe+1UZFV9xXb5JhlIq8aGpWW60MuJSQdK3FnnKaA/XB2GT0pX6ByLO
nYi6pmw0epfodL1IMTfssu9l0TNlcOOVzb07xykj9H+cfTRWVz1zbE81l7PP
lEAPq4o6128qUzt3GPB6fCm15rFtoYsaPxXPKb1OL4uKaq+v4r0LvIfh1Wli
oGGogRq9z71TTnaa8tkqJql/3QdKWfXesSqx+qr5rw7lV5Zc72zVT6fvllw/
uMIUXZtxJc8jnx6WqVFyPdMQXcd6JdefkL9Gd3w57Rw4rr+sZ2bQ1HvWKtLF
dTZ1rBjz90hr9dGuh/dqGc5Vqm2oVtGlZFwYdiN0zt+V3wg/wq/ptyb86Huy
nAp/wX+jW/TJ29dfO+99PG9AR++vMYpt8svyMcUFyrLgEQ1CJ2vvZ40Y2s5n
1jYDtYXFrz4GPf5WavqHPgl7l6oEZracNuq7pZifG+092Ht0mTRl+5vJBT8d
tPMkSY9ib58t6e9nf2ix+f5SS/XAx94ZZ0O1c+Ozl3Y+ciDaUjwXNH9Qd/Wi
knG7w7aDlVbPtVPRLtFOT795/HXfX7ZqarRax7ukXbZ4rb85v9QzJf/xwffr
DG1V3D+4n2q/732g8nI9FfcP7qcuPaud17lcVsV9gvvGav/VPrOnWqprAlfF
V39e0h66KhUC1scrcxqZDrFKLq2i/PCHceKTcrnDy6rjQw/YddyUrHic8elq
8FeCcqCPTfjGwcZq9B4fM+/PiYpHq9m/p3V9ohzdueSB/m1T1SinOMcm+5Hi
bjp+86L4FEWnq3O0/i4LNWvM5K1pJe04xnhuzNmSdt1vQ/X2xSX9xprZ4f67
X0Yq6V/LGHRcmqHcKbC+suaztYrfI73qX27M8XtmqOJ6uP6OxbsOexSYqMgf
8jt4XOifkyaYq6tGBao537X53srr+1vkR0SK+3Chh9WEE/97X6YfdC86byue
c8fc8fc/EZShtPsje/uH79bi+bR+9fBmc0rGyVHnK7uv2manop2h3d1K3Rqx
4Iid2qrz0axpJeNx1PF14Y0jVimB99pea9huv5I9pfjLu58Zyr3i1XVu5a1V
ogvWDW5T/rhYb9wXXtG3qUOGYhFmWhTdyk59+jnCyiwrSjkxbtbuESXzl5vl
n3c+YmSn6mXFuBdcjFJSd3mYRdfMUBpucjd6paudExu4/WDcxfw5yhe/yxfL
NtTWa9I7bKrkMjpDeZBs6VY3z0Y94LO7+EaZs8pa/zH56UsylEf3l+w2L7JW
Vw8xWO9d57xy6OnaLf5+JdxY9S2ILxk3P71sP/qzNt9Ozyq4MfxpnNIvoVz2
u28ZSlDL+z1+ddqqNNhkdsN4ZbRiusM3v0GJH+9ve/zY4HekUvhrbfdrrT8p
sve/MC+MCjZdMGGOvxI40ndWl3ljpOcBmOv88yfTQ2DO9nwemznbs54Ac9jL
9qmZw16m28Ac9rJ9beawl+k/MIe97HmfOexlOhLMYS/TkWAOe5keBXPYy/Qo
mMMe81rWqWAOe5l+BXPYy3QtmMNett/BHPay/Q7msJfpaTCHveycHnPYy3Q5
mPP9xecxmLM961cwZ3s+v8Gc7Vn/gTnbsx4Cc7Zn3QDmbM/v1zNne34PnTnb
83vczNme349mzvb8PjJztuf3gpnDXja+MIe9bL2COeeH34dlDnvZujRz2P+n
92rZXjbOMoe97D1c5rCXvffEnP3D5wyZw152vp05+5PnCcxhLztvzBz2svkb
c9jL5nXMYS/bZ2cOe9n+OHPYy879Muf64nU55rCXrQ8w5/rleSlz2Muei5mL
+1eyvscc9rLnC+bifpGsazGHvfQ5hTjsZetgzEX6kucd5rCXrZsxh73suZg5
7GXPv8xhL1s3YC7sJeszzGEvWxdlDnvZOg9z2MvWV5nDXrZexBz2svVt5rCX
rTsxh71sXfdf/J8/2boBc9jL1n+Yw162LsQc9rL1Xuawl60/MBf+lKw3Moe9
bN2SOexl64HMhX8k+xrMYS/bv2AOe9l6MnPYy/ZNmMNetp7JHPay9VvmsJet
AzOHvWxdlDnsZfs+zGEv2xdgDnvZ/hFzkX/Jeh1z2Mv2AZnDXrZ/wRz20n0u
4rCXrSsyh71sv5I57GX7LMxF/iX7ccxhL1v/ZA572b4qc5G+ZD+IOexl+4bM
RX4k67T/4v/8yfZ/mcNetr7NHPaydW/msJft3zGHvWz/lDnsZevtzGEvW4dn
DnvZ+jxz2Mv2H5nDXrafwhz2svVe5rCXrSczh71sv4Y57GXr7cxhLzsvwRz2
sv1H5rCX7Ssxh71sP5057GXnOpjDXnZegjnsZedDmMNetk/KHPay/WXmsJed
H2AOe5m+FnNRX5LzBsxhL9sHZw572fkE5rCXnZNhDnvZuRfmsJftyzOHvWy/
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
3+obgMv0bGW6uDJ91/8Bgh+UOg==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.7], EdgeForm[None], 
      Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
1VOi38byT9QhZyTGJb4lHycvJh4j3iTuJA6v530kWM38EL8Su4LrxPQvuge+
dA6Jk6lLvEo8TPsLisT7r9THn+mvlqfTL2X4I/nbLtryrfbwLoRvd/huZ5B1
39AG2mSvnaltrAP5NfrEn+TZ3ysTU/GuoZ9ruNJ1/Em5r89/UubZz645ucSP
lhPT/mCbK9X/RAwnruIsIF5bZfu/KBNH4PvENN+555HBGPpBjxhjH/vd13Fj
P3eG02z/e7Gas5xzn1iGmAYfpQ7fzdDGIcqHytdQJqbgnh3da6y7vzIxHD64
pvr7ijOVOr/er1fpm3OU8Q+wnbP/BNcFmf0wTDvxHdqj3V/0lQ/1l7OL3GN8
n8Ad+K97rsz7KL6TwXfWVObuqoH3xZQ3VOY5vKH3yNwtz63yDKrvPTPnC3Y2
VJ9zlTOY85lYgPigFi8QBxADPKwMDjymPuc15zznfS0GQW5iXdoB2xvZbyP3
M3udvQ2GNXauejte/Gux5fhr6yLvgnjn39c7Lu4cfm2vqjtvG9l+N3WaeDY1
tS/uPLgD4RtGOLk3ZxxY08K7EbCR95ftrdvMe7TnbYczjneb6ICf4BZ5+NZi
AnIN/8C1vvpFS+WPlFlv8lHOg8lF4jnyPM+I1lVd7IeMLrk4727JtXl/izxf
3lYZnERGl7nczP3DOYLM2dGzyncetftx+JuOZVPt59uo9j5nnjs4t9z3bm55
e2XiHHhH5T7KnPWsQyfXYq7t1HdOKSf24BuBzs55T/sdb1kXy1mXLp5Tq8QH
8ITfWzj/8C2VKad+B/GKZ90dIzrLtX8r++Keeyvtvyz4xVV+ozMh+NAqv8li
zrar8l0RGN7bvdrL8vH6bnf9l+9/+PaLu3TuVbs6D7sFn1jlt0KUdbOceltb
d+NauWXdXUdiub7uf+Z8e+d5cPBrq7zXOSL4VVV+y/XX4KdViStTg59e5fcz
A4JPq/Ld1JHBD67ymxdwfbnnwkLXu4F7qbf75++ucW19+7qOrHkf/RF7t9Fm
5rmn+61erTxoUtDuVX5fdn7w86r8PuuQ4JcV+U3L6JD3UOdk/KDKd1iMdbjj
PTX4uCrfr+0d/I9VftdzWHD+IYNvbPYJflSV39HsVeWYGe++wY+u8tukkcFH
VPk93LDgx1X5nc/4KueLueIOnPXnOzzWvJf7oZ0+xfMejne8Oj2UL6nymy/2
Feuwv2txYZVrxnodyJiq/IaM9TnIfkdVuX7onxS8nzZcwNxX+b0ge/YS9y13
L9y78N6cuRxY5XweH3ynoPuCbg+6o8r3IMzlWOfzXNqr8tu0W4LfXOX7B/o8
w37Ja26t0m9mBZ9Z5XsY1od3jazRWSFPrvJ7PuZyR+fzJNebtWZ9BrlGrMOl
rgVreKjreGzwHar8Fo41PNx1PJv5qPJbvXNYN3VmV2kfeHVXyHdW+T3jAcHn
VPluCN1j1b+ySj/Hx1n/K9wDe7hH2Xv3BD/R9d61yr14mucSPszZNMU5ZT7/
D9+D9QQ=
           "]], Polygon3DBox[CompressedData["
1:eJwtkllLVVEYhtf58Cd0oZf+gyAUvAhETVBT1HLIGa0bE6cgk+w45zxrOFVq
aaE41U1EP67n5T0XD/s5+6y997ve9RX2DjUORkqpCPJglx87MIOvQTl+CJd4
O0zjb2EC/wQf8FrYw3egCe8LP/sZ2vB6OMCXYSG8Rv8dwxw+Cw34PjTjSzCP
z0IFfgTX+EsoxafC316CJ/gx3OEDUI1Xwiq+Cd/wVjjBH2R4TlnD715PzjYT
/rYyjuDDMJb8jl/4U9jFF6FMe4EfyZlb8OXwu+aS16oTdaFn5vFtOMcP4Rxf
gVO8gDyX+FU4m+7d4W9gAS/m+hXaw93/gVO8O7zXf/ATP4N3+KOM/R5Kcve+
c/0Cv/H8jLM3KGPyHvTfq3B2rTnBO8Nd/03u9rk6T+5Ys9AI2eSZ0Nk8g8nk
M7rGb+Fxxp135Pag7PrmTTiTsmiNutGZ6azU0Sa+pTXJ3+zHX8N7/CGMaV/h
WdIMVoVnQrOwAeP4x3DXmuHRcKfFuU6y8EKdJc9sT7hTdak96OwvwmejGegK
d6IutOfVcCZl0Tsm8BoYTz6zunAmZVHm/3Auay8=
           "]]},
         Annotation[#, "Charting`Private`Tag$191859#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, 
     {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmnn8kFP2x7/03KckUZIKFRUhQiFCtvohS0pGKftStpCl7EuUfcmaLUqW
bI0mjWZkDVnGMmMby2TLMgzGNtbfeTvv70t/nNe9z33ufs/5nM+5z7P6AWMG
H7V0Q0PD0KqhoUmkUyJtXhoaFoS8Hfl1In0r0k0jPTrSppFuEvIHy/qEnB/5
lSLdPOTPkV8j0tci/STkzZDN4nl6pKtG+kOkP4ZsELJaPD8cacdIn4t0Ycgz
IZ3i+fFIO0f610j/FvKXkCdD3gh5OuQ2yx4KeSRkvvk1o80rka4VafeQtUP+
Gc8bRtorZKOQ3eJ5i5C+IYNCdg/ZMmSXkM2Zb8jOpn1CdgoZaH5X21Fvr5B+
Ve5Fq5C12a+QPWOMiyK9IGRRyPNV7mHvKN+45PrXjfRfkfaIdIOQjyP/Qch6
ke8Zsn7IevG8NXMP+b+QHUN2COkS7/4e6QshL7oPjLF9lA8I6R/yb89uu5Bt
PcNPWZd1dgnZ07lznttYh7qcK+c8JGRgyXP8KOS7Kuff2/kuds7Md6eQfiG1
a98h0qXUmU099+1Yh+Os4xy7RvpypN2Yg3s6OPIXRjq05B5uFemHVfa/hfkt
I+1bUl84Y3Tkbfdh9ZI6+KxjsofbhuwRZedV2Xc/x6J895L1GB99Hur4W5dc
48fOezvrbmvbbVz/h85x15BB6FfIVuoCOjG4yuchjru177qHLB+yHPpqumzI
KSGnhZwacnrImSFnhJwVMiHkbPTcus1DvghZKuRL+113CX1s5Rgbc87sjXrd
jb3nbNTrrur1WvbdI2T9KnWwm+N04azVR+x36ZDOIV+FfBbyn5DPQ1q6FsZd
wbSVfXSz/y6O2c11rOnYLXymfVPrNQt5p0pbwmbe8pw57099RpfQ0U+q321p
sWeD/aMnYNEyzoMx3g15P+S9kI1Ceof0ClnDuTF2J/eMdR4XckLI8VXixdqe
4aiQw0JGhxxUJUYcHLJ3yMiQESEnhuwbMi7kkCox6NCQY0LGhhwbclSV9jIm
ZPuQASH9q9QzdO83Ha5Sh8Br7Bc9xIaHWX94yOEhR4YcEbKP44JfB1SJcQeG
7Fclxu0f0j5klZAOIb82SV1qCCmeQe1ZVyFNQlYN6RiymmfT3H1d1vNbxvNr
6XOjHvA8PuTkkJOqxODunvuOJc8MOwJb0Qd0Y8WQlULahLQNaReycpX61Lr6
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
X3EADODb9hvW+Up7h9P+P6yBTOI=
         "]], Polygon3DBox[CompressedData["
1:eJwtk0dPHEEQRkcrprgj+4QvcIIbBwMXTI4mLzILEjmYtLBgkhDGFkkIIYIs
G7iQESBE+lkg/A+48D7VHp7m9fR0d3VVTUZfIjoRCYIgF1LgnwXBVBgEpTCP
f4X/TJQxXsDLIQOfgC28GD7gI7CBl0I6HodN/Bb68Ap4wJ+gEU/jeQf7kM04
S9/gAzCEf4RefAkGQ9/jF15nHtsrMf3Br833roQbfAW+423MH+JxGGecqRjx
YRjFP8EgXgjR0Ncs4486A6+Hv/gxFEAETqDMfC/lQLmIQgyvhWn8DFrwVOjE
26Akxc/4oruZ50oxKJZZ87sox3P4mHnuFLNi74ZW5Zr5HnwN8kM/4xRvgurQ
v9G3XeZn6906fg5VeDPE8Avzvb4xvsSvIAevgQO833xONVAtdCfd7Zk1M/i2
csa4CHbUK+ZzL/ADT5j3RgImzffU3lqjtXvqqdBreqTYzNcqhupkjpXrz4x/
8+zQ/ZnPY7yK1yfn3njXkOyhtGSN7s1rrtprTbtyb15r9aR6UzlQLlQT1WbX
/C6KSbEVmfeeelq9rTN1tnKu3C+a95p65Kd5j6hX9M/o39GddXf19Dj+DiSj
Woo=
         "]]}]}, 
     {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
      GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwt1nV8F3Ucx/Gf98VAUcHEBrtbDLCwCxUDLERsUFAUROwkVEQlLGxUDCxi
gw02NraxURtdY2OwUYONwYaUvt6P7/uP5+Pu8bv73X3vU3ctu/Ro3z1JpVIj
0QgXhlTqYlyCi7Adn+Fz7MASbEE9lmJ/7MQuNMX3WITF+AG1GIGvsMnnHoWj
/Z8vsA7r8SX+xUbUYBsa0AwHYCuGogjTMQwzvEatbSbewFt4G2/iayzAQnzj
tTf4WnqG8TgJJyMN/+A4HI8xmIjTcDoycAsyMQnt8CJewsvoixuwBmtxIz5C
PgrwMZ5ENzyFrjgHszAb5+JSfIIhuAzFqMJqlOAC9EN/tHKuPsRg56wOZ+Fs
bPZa6ryvNQ0PMcfK7aeYg5H4EXMxD6tQifl4Fs/hefTETzgGLfCzc1Xr3Cpn
1c6hcrcB09AabVDoXFf7mHI+wjlSblQjH+A6XI9BXks5VnhNFXgYj2AlHsVV
uBqP+dwKH9N/lmMUfkEZHsIylKILHkAHdEQntMQduBPH4i7shgR340p8i+/Q
FrfjclyB9vgDD6Iz/sQrGItxeBUBt+I2NAqxV9RT6iX1jGo1G1NCrNl3kI4J
eFexpVmPYHukYsx+DtubcDNyMQBTkYeB6IW/8Dd6h1i7k5EVYg3f4xpQ7u/1
MdVcic9Rbb6G10Os0TPwAvrgTJyCHngGp+IEPI4ncCJ+xX24H7+F2LvqWfWq
eli9oRpRbRR47e/hfT+DYpHjZ1NMng6xRlWb3R0b9WiGY6RYq6fTHHM9u3p6
jGOgXjoP54fYU6O8Rq1NNfK7c6jcjQ6xVlRDqh3VjHpFPaDaV88sIAeLsBgL
k5gLzYh2zol6WTNLs2qIY6eZ0dcxPCzEnlQvHh5iL2tmaFYMdizUE4McE91r
Hub7nv2cc+W6v3Ohnu3pnHRwjpXbjs6NZlBX56ibY6pYaiap9lXzqnX1gHpf
NaTa0QxQbauH1DudnVv1UCfnWL2pnlQvqkc1i1XDql3NZNWSZrRms2pKvaAe
Uu+oJ1TbDTzX1iTWuGavak61phms2awaU21pRmu2aGZqVrZxbjUjWznH6k31
rHpVParZqJmrWasZeahzqNw1D3GWXINrQ5wp+2Anx3ahSYizXj2tXtbM16zS
zNes18zSu60x9g7xHadZqZmiWaKZqXeNeka9onfOMq57MNtDUMp+EaYiD9Ox
PYk1otrYkcRZpBmi2aGZVM5vFViJFa6NOZjrGslBJiYhFxOxHGXISOK7dV/s
F+I7Np/fsjEFBTiQ35awXYqD2B/Pdk+2eyGN/d3ZjmU7Dnv4WvomaOprNnYM
mzgmtZxXh83YhMm+hv6b5Wuns52QxHtUs92IGmxIYi7+0wdLiDnZ4hgpNvWO
pXLa3DGt8zn1vqdqSzN0m2tMuVbPj3bOda9ar63G91IM9Oy6p2K9CpWOeRXW
YC1WoxizMBslPrfKxyqdm2IfU44UW9VAqWOs3JQ7l2W+1gzM9DW1Pw2F/k3f
ZvqG0reTvtFUO/nOXZ7PLXItFXqt67Dea852jeQ655nOSZZrRudWO/b6j3Kt
GkhzztNdUxnOmd6N+gbUt5/ekf8Dxv2GUQ==
        "]]]}, {}, {}}, 
    {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0slO1VAAgOEiIqK4dEFYsfABDCRsTEBEQRSVi+BFkBlUJhEZRZTBy4wj
k4IDokwKiPER3BhiYsIL+TVx8fU/p+lp2tOm1d6LtMUFQbBKlUE4jjoc6An6
jFO0X0/pac6QR4QKGmilkxj5h4JgglIeMsc89Uxyg34WaOA9n9lhl22irPKV
LTaZ4gtrtHOfGt5xgQJeEWOUPl4zSy11lDDGOA8863N9xktecJfrLHOeNqpY
oZo7FLNEbrjOPW7pRyq5TYS3nKOVcj5QQSNFvCGHFmYY4SnDXOMmi5yllx66
GWKQbC5yhSdcpZkmpinjMYUMcJkf4Xt73i7t5BKPyAr3gu90sMcnNkj33dc1
U7/pSf2pyeEeu9cv8wySjX9rDn84br6vxzSJoyRyhARSrT+sva6J1251Kvj7
/z/8B/rESJ0=
      "]], Line3DBox[{583, 691, 623, 583}]}},
   VertexNormals->CompressedData["
1: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
di2TbeH4S7LxP/Srv/dwBXD6yx//DVc5395h5QuYR1LuSvvXnF/3c8CWKT4k
+rd+q2BGQ/0o66HN5dn76MTbJN2Y8EF91cZFUYNjfDCnh/p22Keg/p+9z/+e
hy592su+31+0cvWS9iNp/YB54dqujOkgdlHsavOxdrVu1B/bCq+LnfqjXZy+
uWcdjbrZzs9KqbPrtas3Pplrr65FfWfntfeP5PnwnHHXQkusGnVONAyP1nyA
SGu3DcBmol4uuT+5V4QFNfveBob44+68x0xRQ38ADg3mGKbPrn8xbz+cPmwp
PQDD6cei6Gv7Ud9L4zCSPHqhN+f8Rca9QdTHVGSS3Up7YdT7zmdFU9zN9Jrz
pk8zQMCGJiPdw0LdW+XqE7UwBhhtM7i89wXuzyMNi5Ki6fDOLG6yt4CL+ohK
+jz5nPfAjaw8eNgLd/EHGzkWR2nQIZDj9M1s/8L8qy4Z5/VvE0FbyXx+yCfc
hYfsV/NCCyBNoHTXmgrcZc6mHGJ4FYOUjrj1Ty9wt6tx9Nv1ig/RQf6nt0cX
oq7g7tPq38IHq47A3JuvclBf6pGjynjCgcdcLaF8w3bU2dGjeZtqOXC8nXtr
oq0N9fKrgtWO6p0wvvx4VZsKB3X3h87RG0y6QOh1zCudfjbq9KQP0gqCDVCr
rffU5Q4P9UURzMofRhvAxOpZ+Bt73DPr57lZZvLBLfhEW0p1CepL+t4wgwv4
sN7cr9LwYDHqVp7lm/bt58NLaUf7VN9K1Ncxk7aIms0+NypmSMy/AvXRBOaV
RD8e7MyyXEcXb0B9ybrFvptTeOC9O8b+2Il3qKe9+dM5pgIPGE6yIeXaTain
uIo577DjgatDxDzp6QbUZ4IZ7iK6XJj/8UcRk/IW1B0rlL/KuMWFklrFZq8n
71Gfv2Ku/0VT/RFzekldYNo1DnhqL8jWUuxA3cPJtolrzAIPWdWzK7cxUfeW
Xdm4P5oFPToWt66WMVDfE7GzOHecBXSO8Xfuqrj7+KqapC9jg56S2Ph6Sdwn
nWa6RkYGYFTO55PG3j7UO6j8EP7zXJ6gTuWTBpVXmNP9V8curB2Ei1lekga7
cP+Nqm+Mqhfzr9Pm8jXhyFzeYt7cN5ffJfvm8hzzNYevXFhX2gemkkEfmM64
F3C3vdwkx4T7YSXDRqYs1PVy3L0lApjQLNZ330sE9+nmwThpHhO64jXbG6s+
oP4oLTDPWqsHMtzbh+Rv477+cZ33mooWeFmfVfXoMBf115n2vRfqWyFi4yXj
tYK4czpSpDdKtcORLcktxwo5qJ+pFT0podYB1oJy8mddcGe0jS7K35sOttpx
rX6jfNRpNrHOKYlPoaVRR16dhftN4a3Pu41K4YWm38O7abhfebbC63N9Gdjc
+XrfQBDuUT7hJ3a7/gyiN0Pqz3zBXXAqecIs8jWcFGps1LyO++7hx1PMM+WQ
nWsQdcoZdzfTDVtMT9dCXLpd6s3FuLdmLPuxyKgOFjhu7awZ4qGuVJ9+NJ/J
h4/fpQb6xWShbmw3Ibx0tj1G+l3c+188RR3YjieiOnnglBDcZtheh3qi1K+W
r0dm62vR+r7uEO6G56KU+pV5EFTfYDOq1IR6seHmT0a7eZAnPCDSI4L7BnPf
T4YDHGgxN52/yKUNdZPBCzwjAS6wXHukShtbUbd+4HcpQeEDmPaesxku6kE9
lxovaNT4gXkDtU9STp0xZ0jMjadR1PiK+UmqPluqXsyvU3nzlsofzM3Eb0we
W9EEbucFL+rv4aGule/wLjOjCcJC5GryJHB3WKrdZx1aD1mudNkHZbhfpOZz
K6j5HeaXehZw3vy1DSJ1OlbQBjio95jIWcCzLJhoNzD0YPJRd6CdCbx8KBfi
Zz/rKTruskfeq3peegX535q1Hr2Du+G0f0CeZRlc6LxsFBCGu5uonEL5OwZI
6lZ8nxbMQl1PeezqzMJmuJ6vP961nId6JtUePlT7YM6eXPblyg9sGBrJXTts
34168K+qkid/q4NqtcrbP7XyUJdcnr3Kk8cH8WGhHUPZmagvmcyUshrhw/Cu
siB9rwzUTXhqzosLuRAXrb9q5gEd9YVuu994cLjQyq2yPpXRjPqA5l3FsAA2
WLFW1cZpdKO+kFpPxlPrS8wHNQr2bs1lg/L2ZweejONOU3ol5BXfDKXGUwf9
eVzUj3eIJtfadkOseERY9jU26gbMd2qPDrwFHRP1ssrjfNQ7xRTjlmZXQt1o
gEKqOu7n5fqrFeiVoPLyUle3Ku7ipWnGxRI1wBkMd9m8FncpZS/1x/MY8EXb
aeyjBBv1Qs9wX4kpPmj5txXI3aOhbsuz9Fec4EPC9lDJ2MJfUN/p4OfrplsJ
4aciYuI1+ahbGise6BF6DZ4CC6XsbuGum1PRozvDhwOx42FjAyGo//Pjf79P
TJw4ceLEiRMnTpw4ceLEiRMnTpw4ceLEiRMnTpw4ceLEiRMnTpw4ceLEiRMn
Tpw4ceLEiRMnTpw4ceLEiRMnTpw4ceLEiRP///HfASykHVI=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{367.9564007155983, 237.28648084135176`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->NCache[{{0, 
      Rational[3, 5]}, {0, 
      Rational[3, 5]}, {0., 7.773965750658009}}, {{0, 0.6}, {0, 0.6}, {0., 
     7.773965750658009}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.9522524842489803`, -2.4442897921446614`, 1.2900223446751213`},
  
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.7661119846651573`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"71fa8556-aac4-4a95-8b71-2d5c726c016f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDistribution", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"Last", ",", 
    RowBox[{"FinancialData", "[", 
     RowBox[{
     "\"\<NASDAQ:AMZN\>\"", ",", " ", "\"\<Price\>\"", ",", " ", "All"}], 
     "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766112182358531*^9, 3.766112210557102*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"0fabe44a-8ed8-4e1f-a3dc-088a2fb6f566"],

Cell[BoxData[
 TemplateBox[{
  "ClearAll","wrsym",
   "\"Symbol \\!\\(\\*RowBox[{\\\"FinancialData\\\"}]\\) is Protected.\"",2,
   97,6,17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766112217291202*^9},
 CellLabel->
  "During evaluation of \
In[97]:=",ExpressionUUID->"18d0308f-8b34-4831-91ef-2f60c8f97fa2"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"FinancialData\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Options\\\", \\\"[\\\", \\\"FinancialData\\\", \
\\\"]\\\"}]\\) is Protected.\"",2,97,7,17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766112217357246*^9},
 CellLabel->
  "During evaluation of \
In[97]:=",ExpressionUUID->"0fd34fb9-7be3-4f3c-adc1-34f407443b79"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","optnf",
   "\"Option name \\!\\(\\*RowBox[{\\\"Method\\\"}]\\) not found in defaults \
for \\!\\(\\*RowBox[{\\\"FinancialData\\\"}]\\).\"",2,97,8,
   17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766112223221664*^9},
 CellLabel->
  "During evaluation of \
In[97]:=",ExpressionUUID->"f4c2e9da-7984-460d-8f49-b40fecda0fad"],

Cell[BoxData[
 RowBox[{"MixtureDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.8450850211631245`", ",", "0.15491497883687555`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LogNormalDistribution", "[", 
      RowBox[{"4.101142427727217`", ",", "1.534026265117049`"}], "]"}], ",", 
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"1.3293289603702165`", ",", "2039.5732571819829`"}], "}"}], 
      "]"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.766112226992176*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"2af084c8-d551-4b2d-8bb8-58fe08cfc4ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", 
  RowBox[{"MixtureDistribution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.8450850211631245`", ",", "0.15491497883687555`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LogNormalDistribution", "[", 
       RowBox[{"4.101142427727217`", ",", "1.534026265117049`"}], "]"}], ",", 
      
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"1.3293289603702165`", ",", "2039.5732571819829`"}], "}"}], 
       "]"}]}], "}"}]}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[101]:=",ExpressionUUID->"5e60bd7b-8de7-4ab0-88dc-e42b7a96ed35"],

Cell[BoxData["671.9116953727688`"], "Output",
 CellChangeTimes->{3.766112305150991*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"acaa37aa-10e3-4105-9bc4-12c1e302fb75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Median", "[", 
  RowBox[{"MixtureDistribution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.8450850211631245`", ",", "0.15491497883687555`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LogNormalDistribution", "[", 
       RowBox[{"4.101142427727217`", ",", "1.534026265117049`"}], "]"}], ",", 
      
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"1.3293289603702165`", ",", "2039.5732571819829`"}], "}"}], 
       "]"}]}], "}"}]}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[100]:=",ExpressionUUID->"0bcab2a1-3f4f-41ef-96ac-73fec579dcbc"],

Cell[BoxData["83.7247209422453`"], "Output",
 CellChangeTimes->{3.766112285229128*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"22b22277-1faa-4f4c-b448-e5fb1943785f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"MixtureDistribution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.8450850211631245`", ",", "0.15491497883687555`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LogNormalDistribution", "[", 
       RowBox[{"4.101142427727217`", ",", "1.534026265117049`"}], "]"}], ",", 
      
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"1.3293289603702165`", ",", "2039.5732571819829`"}], "}"}], 
       "]"}]}], "}"}]}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[99]:=",ExpressionUUID->"638a816f-6e4b-443d-8a8f-59076d25f882"],

Cell[BoxData["323.66123947334165`"], "Output",
 CellChangeTimes->{3.7661122796793633`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"6a0e06c4-96d6-4af5-bcd3-bc400a36cfe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"MixtureDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.8450850211631245`", ",", "0.15491497883687555`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LogNormalDistribution", "[", 
        RowBox[{"4.101142427727217`", ",", "1.534026265117049`"}], "]"}], ",", 
       RowBox[{"UniformDistribution", "[", 
        RowBox[{"{", 
         RowBox[{"1.3293289603702165`", ",", "2039.5732571819829`"}], "}"}], 
        "]"}]}], "}"}]}], "]"}], ",", "x"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[98]:=",ExpressionUUID->"33f72edc-2bf5-42c4-8b8e-757676a22981"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"0.`", 
        RowBox[{"x", "\[LessEqual]", "0"}]},
       {
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         FractionBox[
          RowBox[{"0.21977468909255313`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.212473324530932`"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4.101142427727217`"}], "+", 
                RowBox[{"Log", "[", "x", "]"}]}], ")"}], "2"]}]]}], "x"]}], 
        RowBox[{
         RowBox[{"0", "<", "x", "<", "1.3293289603702165`"}], "||", 
         RowBox[{"x", ">", "2039.5732571819829`"}]}]},
       {
        RowBox[{"0.00007600414096267682`", "\[VeryThinSpace]", "+", 
         FractionBox[
          RowBox[{"0.21977468909255313`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.212473324530932`"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4.101142427727217`"}], "+", 
                RowBox[{"Log", "[", "x", "]"}]}], ")"}], "2"]}]]}], "x"]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.766112260162352*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"c69577e1-8bbb-4b0c-a68d-51018293ba27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"%98", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[102]:=",ExpressionUUID->"b7f60158-5ba3-42cc-9b0a-6d33be81bda8"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQrWcv9ur/f/kDDFCQ/1O54+cvBH/DZkO1z18RfCMN
36RnrxF8c8GWW2euI/gOjz+emrkewQ9qP7vaOB7BLz/fkpu+Tw7Ov3KF+9XB
RFk4X/ZAvoi5jAycvzX7CCv/XSk4P6HH8MPNJkk4/8ek6o799hJw/mK+e5Iz
HorB+XO8DIsud4rC+U05iRWaniJwfjXzqvKit0JwfmLDeZVrKwTh/Kl7n86Y
kyUA5++6r8GzRokPzlcWcHAKmccN52/S6sh69JgDzr9/dKOCmRkbnP9UZ6rR
/m3McL5g3UozPUZGOF/H7L3O0s9/9sP4zS5vL+ys+A7ni4asmxAp/gnO3/Tt
KP8JlVdw/tLbT3tfttyD82MDZbbcTj4C57/5/NWy9MhhOL9m2vn9fKoI/pzb
Tacdnx2E87ecvnTU/+I+OH/9lxzlF7e2wPmWrPrLHzwtgfMBm6afgQ==
        "]], 
       LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAAOQUvp+DldD/nvzScXA2WPnuTRspr
NJA/dxcOI13S3j7+fnmbny+VP9cKhjI4s+0+gGqsbNMqmj+kWomd5V74PgNW
3z0HJp8/rbZ7vzwUAj/DIImHnRCiP9OBI7gXCgk/hJYicDeOpD9f7OYni38Q
P0YMvFjRC6c/nyyRn8LwFD8HglVBa4mpP9kMznc30Bk/yPfuKQUHrD/Lvs8V
6xUfP4ptiBKfhK4/TZP+szJdIj+m8ZB9HIGwP9Syq6BaWyU/Z2cqZrb+sj+G
Hpv0yc4rP0gid1qDPbQ/KOz+MFY+Lz8o3cNOUHy1P4VRLCwnZzE/6lJdN+r5
tz/wxcOPICM1P2w+kAge9bw/GGXy0TEvPT+5CnvVwnXDP8HANzQmdkc/oC0V
068ixD9x3/SzVrlIP4ZQr9Ccz8Q/CkZjlUL/ST9UluPLdinGP+fZi/hWkkw/
8CFMwirdyD85WeJDyOdQPyY5Ha+SRM4/E3UAH4xAVj/Js19EsYnUP/6xtTID
gGA/PMUswyfg1D/vS/mqEtVgP7DW+UGeNtU/QA40dvQpYT+W+ZM/i+PVP+cy
fE0m02E/ZD/IOmU91z+xCYuzDCNjP//KMDEZ8dk/HsTxboe3ZT814gEegVjf
P5Enz7Q7rGo/LrpX8TCp3z/gdXMa7fNqPyaSrcTg+d8/N9kPv1s7az8Loaw1
oE3gPyu+VypwyWs//FBY3P/u4D/EkBlTcuJsP92wrym/MeI/rmFIk88Hbz+f
cF7EPbfkP5j2rVMXkHE/nFwJrpXf5D8vHYCXwK9xP5hItJftB+U/qlHdKEnP
cT+QIAprnVjlP4YenY34DXI/gNC1Ef355T9nQGbu0olyP2EwDV+8POc/lXpP
/ot7cz8j8Lv5OsLpPz+OwczPR3U/fM1DhPTt6T9mR+js52V1P9aqyw6uGeo/
qG8Nst2DdT+KZdsjIXHqP34zTMZiv3U/8Nr6TQcg6z88jG1W1zR2P77FOaLT
few/6W2wJYwZdz9am7dKbDnvPyqHb38zy3g/SaPZzU5Y8j8H2vtootd7P/CF
rmbFbfI/NBG8pOPtez+YaIP/O4PyP4L7X5IMBHw/6C0tMSmu8j+QX538FTB8
P4i4gJQDBPM/ZMprVQqHfD/IzSdbuK/zPzSDStySMH0/R/h16CEH9T8zt+Jx
6XJ+P+7aSoGYHPU/uOG5zViGfj/vd/+QCDD1PwOq9azgl34/Zhy5Iw==
        "]], 
       LineBox[CompressedData["
1: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
jS0tseCXj4poXAOB/g+QIXlT
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$208635#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-8, 8}, {0., 0.011875758613071321`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7661123196191187`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"53faf7ea-1ab9-45f4-9ac1-20274df82f1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"1", "+", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7661123623881617`*^9, 3.766112365088325*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"767b9ab6-3744-4446-a3e2-e6668408640f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"1", "+", "1"}],
    HoldForm], ",", 
   TagBox["2",
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.766112365420226*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"6b23381b-fdbc-4ad7-9de6-f52d7a1841af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"FindDistribution", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"Last", ",", 
     RowBox[{"FinancialData", "[", 
      RowBox[{
      "\"\<NASDAQ:AMZN\>\"", ",", " ", "\"\<Price\>\"", ",", " ", "All"}], 
      "]"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766112375727769*^9, 3.766112377033451*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"8929584d-f86a-4e8c-82fe-848099aabb33"],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","optnf",
   "\"Option name \\!\\(\\*RowBox[{\\\"Method\\\"}]\\) not found in defaults \
for \\!\\(\\*RowBox[{\\\"FinancialData\\\"}]\\).\"",2,104,9,
   17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766112377705635*^9},
 CellLabel->
  "During evaluation of \
In[104]:=",ExpressionUUID->"362cdb27-e082-40fe-845e-a8d212aba668"],

Cell[BoxData[
 RowBox[{"$Aborted", "[", "]"}]], "Output",
 CellChangeTimes->{3.766112425493896*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"b95158ea-002f-402d-8b5c-45463d684541"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "1"}]], "Input",
 CellChangeTimes->{{3.7661124277740517`*^9, 3.766112430510729*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"e3e31169-d47f-4c88-a110-827c2a1ec83c"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.766112440714596*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"e9ec0bb6-43d7-4d0c-a559-451b54b38f82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"\[Integral]", 
   RowBox[{
    SuperscriptBox["x", "2"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766112450023828*^9, 3.766112460613392*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e02de9e0-7fe5-45ad-aaf2-9a4daf113a5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"\[Integral]", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"\[DifferentialD]", "x"}]}]}],
    HoldForm], ",", 
   TagBox[
    FractionBox[
     SuperscriptBox["x", "3"], "3"],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.76611246088239*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"e095d735-7170-4eac-953b-6ddfbea153ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"1", "+", 
   RowBox[{"\[Integral]", 
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766112470275467*^9, 3.7661124706050863`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"f88396d9-9e34-45c0-8de7-f405fba35835"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"\[Integral]", 
       RowBox[{
        SuperscriptBox["x", "2"], 
        RowBox[{"\[DifferentialD]", "x"}]}]}],
      HoldForm], ",", 
     TagBox[
      FractionBox[
       SuperscriptBox["x", "3"], "3"],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"1", "+", 
     FractionBox[
      SuperscriptBox["x", "3"], "3"]}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.766112470924368*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"a35fdc74-aabc-496c-9e04-0a40729f27ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "@", 
  RowBox[{"Mean", "[", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", "100"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.766112485200059*^9, 3.7661125013387747`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"9955ab6e-4cf6-46ac-95ca-ee76f826f54e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"NormalDistribution", "[", "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}],
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", "100"}], "]"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.1896531356420512`"}], ",", 
        RowBox[{"-", "1.2780422227739225`"}], ",", 
        RowBox[{"-", "0.38924158674957965`"}], ",", "0.03678561076664587`", 
        ",", 
        RowBox[{"-", "0.09777815082421536`"}], ",", 
        RowBox[{"-", "0.8281528151314962`"}], ",", 
        RowBox[{"-", "0.07745452201642007`"}], ",", 
        RowBox[{"-", "0.5649184354823991`"}], ",", "0.7361881752125369`", ",",
         "0.8397646733957951`", ",", 
        RowBox[{"-", "0.38490404260770394`"}], ",", 
        RowBox[{"-", "0.5478267641758185`"}], ",", 
        RowBox[{"-", "0.5839307906812932`"}], ",", 
        RowBox[{"-", "1.6950201157382536`"}], ",", 
        RowBox[{"-", "0.7035268306169119`"}], ",", 
        RowBox[{"-", "0.6797297954187785`"}], ",", 
        RowBox[{"-", "0.22222834731588234`"}], ",", 
        RowBox[{"-", "0.9081366899401824`"}], ",", 
        RowBox[{"-", "0.8630893318421924`"}], ",", "0.45855710400936667`", 
        ",", 
        RowBox[{"-", "0.43866637873090125`"}], ",", 
        RowBox[{"-", "0.14488830818461354`"}], ",", "0.6089602111294842`", 
        ",", "0.4950955153068788`", ",", 
        RowBox[{"-", "0.07248966080601187`"}], ",", 
        RowBox[{"-", "1.2577709309843232`"}], ",", 
        RowBox[{"-", "0.35971102847519476`"}], ",", "0.1470534188943634`", 
        ",", "1.4555018805140796`", ",", "1.393728781825292`", ",", 
        RowBox[{"-", "0.2776906751951464`"}], ",", "1.6434479715197317`", ",", 
        RowBox[{"-", "0.7646108688593263`"}], ",", "0.3868397644309716`", ",", 
        RowBox[{"-", "0.19293982879534932`"}], ",", "0.4424517234642914`", 
        ",", "0.6220815261559581`", ",", "1.1351470213862973`", ",", 
        RowBox[{"-", "0.22532491803736895`"}], ",", 
        RowBox[{"-", "0.17604202850635678`"}], ",", "0.5325971305715435`", 
        ",", 
        RowBox[{"-", "0.11193933981483481`"}], ",", 
        RowBox[{"-", "1.3509296946427505`"}], ",", "0.6840085027487512`", ",",
         "0.1354252995348871`", ",", "0.1969990068641432`", ",", 
        "0.35621793121616685`", ",", 
        RowBox[{"-", "1.791959302335902`"}], ",", "0.5120854187001068`", ",", 
        
        RowBox[{"-", "0.22723624872584167`"}], ",", 
        RowBox[{"-", "1.026570653474762`"}], ",", "0.6968524065272668`", ",", 
        "2.0324069666143743`", ",", 
        RowBox[{"-", "1.321295700284156`"}], ",", "0.1535541741905295`", ",", 
        "1.12644369181355`", ",", 
        RowBox[{"-", "2.434595523309632`"}], ",", 
        RowBox[{"-", "0.6843571790709175`"}], ",", 
        RowBox[{"-", "0.7397619073962444`"}], ",", 
        RowBox[{"-", "0.255857662535879`"}], ",", 
        RowBox[{"-", "1.8943788776986523`"}], ",", 
        RowBox[{"-", "0.28721373252419025`"}], ",", 
        RowBox[{"-", "0.19185970596896068`"}], ",", "0.4506960496452233`", 
        ",", 
        RowBox[{"-", "0.37222249483272135`"}], ",", "0.0007238713336391631`", 
        ",", "1.8257409069594717`", ",", 
        RowBox[{"-", "1.2987884261680358`"}], ",", 
        RowBox[{"-", "1.2273490968690257`"}], ",", "1.4627727494521179`", ",",
         "0.4451393601296052`", ",", "0.34321916352538917`", ",", 
        RowBox[{"-", "1.6932800518073894`"}], ",", "0.22134811307345362`", 
        ",", 
        RowBox[{"-", "0.19510389478687268`"}], ",", 
        RowBox[{"-", "2.642569861242628`"}], ",", "0.85533840487399`", ",", 
        RowBox[{"-", "1.4398610642245229`"}], ",", "0.7919370808607265`", ",", 
        RowBox[{"-", "0.7283478734251956`"}], ",", 
        RowBox[{"-", "0.34910968554754224`"}], ",", "0.9365260494918312`", 
        ",", "0.10685930638353738`", ",", "1.306557692816369`", ",", 
        RowBox[{"-", "0.9626805146259286`"}], ",", 
        RowBox[{"-", "2.2358372085898397`"}], ",", "0.5707569119693582`", ",", 
        RowBox[{"-", "1.2416457706886006`"}], ",", 
        RowBox[{"-", "0.9287815705041484`"}], ",", "1.8038086325753206`", ",", 
        RowBox[{"-", "0.2847199908913003`"}], ",", 
        RowBox[{"-", "0.17923690916503465`"}], ",", 
        RowBox[{"-", "0.7183104510988407`"}], ",", "0.13557886404215047`", 
        ",", "0.30765845762569305`", ",", "0.48094974090795045`", ",", 
        RowBox[{"-", "0.7028940000862616`"}], ",", "0.3666907018398199`", ",", 
        RowBox[{"-", "0.22087123549237098`"}], ",", 
        RowBox[{"-", "1.484892198466408`"}]}], "}"}],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"Mean", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.1896531356420512`"}], ",", 
       RowBox[{"-", "1.2780422227739225`"}], ",", 
       RowBox[{"-", "0.38924158674957965`"}], ",", "0.03678561076664587`", 
       ",", 
       RowBox[{"-", "0.09777815082421536`"}], ",", 
       RowBox[{"-", "0.8281528151314962`"}], ",", 
       RowBox[{"-", "0.07745452201642007`"}], ",", 
       RowBox[{"-", "0.5649184354823991`"}], ",", "0.7361881752125369`", ",", 
       "0.8397646733957951`", ",", 
       RowBox[{"-", "0.38490404260770394`"}], ",", 
       RowBox[{"-", "0.5478267641758185`"}], ",", 
       RowBox[{"-", "0.5839307906812932`"}], ",", 
       RowBox[{"-", "1.6950201157382536`"}], ",", 
       RowBox[{"-", "0.7035268306169119`"}], ",", 
       RowBox[{"-", "0.6797297954187785`"}], ",", 
       RowBox[{"-", "0.22222834731588234`"}], ",", 
       RowBox[{"-", "0.9081366899401824`"}], ",", 
       RowBox[{"-", "0.8630893318421924`"}], ",", "0.45855710400936667`", ",", 
       RowBox[{"-", "0.43866637873090125`"}], ",", 
       RowBox[{"-", "0.14488830818461354`"}], ",", "0.6089602111294842`", ",",
        "0.4950955153068788`", ",", 
       RowBox[{"-", "0.07248966080601187`"}], ",", 
       RowBox[{"-", "1.2577709309843232`"}], ",", 
       RowBox[{"-", "0.35971102847519476`"}], ",", "0.1470534188943634`", ",",
        "1.4555018805140796`", ",", "1.393728781825292`", ",", 
       RowBox[{"-", "0.2776906751951464`"}], ",", "1.6434479715197317`", ",", 
       
       RowBox[{"-", "0.7646108688593263`"}], ",", "0.3868397644309716`", ",", 
       
       RowBox[{"-", "0.19293982879534932`"}], ",", "0.4424517234642914`", ",",
        "0.6220815261559581`", ",", "1.1351470213862973`", ",", 
       RowBox[{"-", "0.22532491803736895`"}], ",", 
       RowBox[{"-", "0.17604202850635678`"}], ",", "0.5325971305715435`", ",", 
       RowBox[{"-", "0.11193933981483481`"}], ",", 
       RowBox[{"-", "1.3509296946427505`"}], ",", "0.6840085027487512`", ",", 
       "0.1354252995348871`", ",", "0.1969990068641432`", ",", 
       "0.35621793121616685`", ",", 
       RowBox[{"-", "1.791959302335902`"}], ",", "0.5120854187001068`", ",", 
       RowBox[{"-", "0.22723624872584167`"}], ",", 
       RowBox[{"-", "1.026570653474762`"}], ",", "0.6968524065272668`", ",", 
       "2.0324069666143743`", ",", 
       RowBox[{"-", "1.321295700284156`"}], ",", "0.1535541741905295`", ",", 
       "1.12644369181355`", ",", 
       RowBox[{"-", "2.434595523309632`"}], ",", 
       RowBox[{"-", "0.6843571790709175`"}], ",", 
       RowBox[{"-", "0.7397619073962444`"}], ",", 
       RowBox[{"-", "0.255857662535879`"}], ",", 
       RowBox[{"-", "1.8943788776986523`"}], ",", 
       RowBox[{"-", "0.28721373252419025`"}], ",", 
       RowBox[{"-", "0.19185970596896068`"}], ",", "0.4506960496452233`", ",", 
       RowBox[{"-", "0.37222249483272135`"}], ",", "0.0007238713336391631`", 
       ",", "1.8257409069594717`", ",", 
       RowBox[{"-", "1.2987884261680358`"}], ",", 
       RowBox[{"-", "1.2273490968690257`"}], ",", "1.4627727494521179`", ",", 
       "0.4451393601296052`", ",", "0.34321916352538917`", ",", 
       RowBox[{"-", "1.6932800518073894`"}], ",", "0.22134811307345362`", ",", 
       RowBox[{"-", "0.19510389478687268`"}], ",", 
       RowBox[{"-", "2.642569861242628`"}], ",", "0.85533840487399`", ",", 
       RowBox[{"-", "1.4398610642245229`"}], ",", "0.7919370808607265`", ",", 
       
       RowBox[{"-", "0.7283478734251956`"}], ",", 
       RowBox[{"-", "0.34910968554754224`"}], ",", "0.9365260494918312`", ",",
        "0.10685930638353738`", ",", "1.306557692816369`", ",", 
       RowBox[{"-", "0.9626805146259286`"}], ",", 
       RowBox[{"-", "2.2358372085898397`"}], ",", "0.5707569119693582`", ",", 
       
       RowBox[{"-", "1.2416457706886006`"}], ",", 
       RowBox[{"-", "0.9287815705041484`"}], ",", "1.8038086325753206`", ",", 
       
       RowBox[{"-", "0.2847199908913003`"}], ",", 
       RowBox[{"-", "0.17923690916503465`"}], ",", 
       RowBox[{"-", "0.7183104510988407`"}], ",", "0.13557886404215047`", ",",
        "0.30765845762569305`", ",", "0.48094974090795045`", ",", 
       RowBox[{"-", "0.7028940000862616`"}], ",", "0.3666907018398199`", ",", 
       
       RowBox[{"-", "0.22087123549237098`"}], ",", 
       RowBox[{"-", "1.484892198466408`"}]}], "}"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"-", "0.16907730065528426`"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.766112501650135*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"70e2de76-5f63-420f-a87d-95b223cea058"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotationTransform", "[", "\[Theta]", "]"}]], "Input",
 CellChangeTimes->{{3.7661126539047937`*^9, 3.7661126777447968`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"2ea7bb15-2218-4d21-a134-1a4a9a966542"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       RowBox[{"Cos", "[", "\[Theta]", "]"}], 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
      {
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.766112678054002*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"a2248d41-74f0-4ef3-8b00-bfc8b68674f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransformationMatrix", "[", 
  RowBox[{"TransformationFunction", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[110]:=",ExpressionUUID->"58ab3b62-ffc9-4cc7-8ebb-c3183ee1bd95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76611268440147*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"a8585667-c8a1-4088-ba9d-639b9b85b315"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"TransformationFunction", "[", 
   RowBox[{"(", 
    TagBox[GridBox[{
       {
        RowBox[{"Cos", "[", "\[Theta]", "]"}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
       {
        RowBox[{"Sin", "[", "\[Theta]", "]"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
       {"0", "0", "1"}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     #& ], ")"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766112694975746*^9, 3.76611269805579*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"9c296c47-f7b2-484d-afb8-23980259a153"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"List", "[", 
     RowBox[{
      RowBox[{"List", "[", 
       RowBox[{
        RowBox[{"Cos", "[", "\\[Theta]", "]"}], ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"Sin", "[", "\\[Theta]", "]"}]}], "]"}], ",", "0"}], "]"}], 
      ",", 
      RowBox[{"List", "[", 
       RowBox[{
        RowBox[{"Sin", "[", "\\[Theta]", "]"}], ",", 
        RowBox[{"Cos", "[", "\\[Theta]", "]"}], ",", "0"}], "]"}], ",", 
      RowBox[{"List", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.766112698337078*^9},
 CellLabel->
  "Out[111]//FullForm=",ExpressionUUID->"639b32c1-b7f0-4ff3-9006-\
1d90afda90b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RotationTransform", "[", "\[Theta]", "]"}], "//", 
  "Trace"}]], "Input",
 CellChangeTimes->{{3.766112705477023*^9, 3.766112707430996*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"d3d7db5b-b21e-4ef8-9a0e-1cb1f342968d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"RotationTransform", "[", "\[Theta]", "]"}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox["System`TransformConstructorDump`scalarQ",
        HoldForm], ",", 
       TagBox[
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MatchQ", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}], "&"}],
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MatchQ", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}], "&"}], ")"}], 
       "[", "\[Theta]", "]"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"!", 
       RowBox[{"MatchQ", "[", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}],
      HoldForm], ",", 
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"MatchQ", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"_List", "|", "_SparseArray"}]}], "]"}],
        HoldForm], ",", 
       TagBox["False",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"!", "False"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{
       RowBox[{"VectorQ", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "]"}], "&&", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], "\[Equal]", "2"}]}],
      HoldForm], ",", 
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"VectorQ", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}],
        HoldForm], ",", 
       TagBox["True",
        HoldForm]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["2",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"2", "\[Equal]", "2"}],
        HoldForm], ",", 
       TagBox["True",
        HoldForm]}], "}"}], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"RotationTransform", "[", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "]"}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox["System`TransformConstructorDump`scalarQ",
        HoldForm], ",", 
       TagBox[
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MatchQ", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}], "&"}],
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MatchQ", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}], "&"}], ")"}], 
       "[", "\[Theta]", "]"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"!", 
       RowBox[{"MatchQ", "[", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}],
      HoldForm], ",", 
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"MatchQ", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"_List", "|", "_SparseArray"}]}], "]"}],
        HoldForm], ",", 
       TagBox["False",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"!", "False"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"VectorQ", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"VectorQ", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"VectorQ", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"System`TransformConstructorDump`vCompDim", "[", 
       RowBox[{"RotationTransform", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "]"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[Equal]", 
        RowBox[{"Length", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "||", 
       RowBox[{"System`TransformConstructorDump`vMessage", "[", 
        RowBox[{
         StyleBox[
          RowBox[{"RotationTransform", "::", "idim"}], "MessageName"], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}],
      HoldForm], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["2",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"Length", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["2",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"2", "\[Equal]", "2"}],
        HoldForm], ",", 
       TagBox["True",
        HoldForm]}], "}"}], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"System`TransformConstructorDump`M$", "=", 
          RowBox[{"System`TransformConstructorDump`iRotationMatrix", "[", 
           RowBox[{"RotationTransform", ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"RuleCondition", "[", 
         RowBox[{
          RowBox[{"$ConditionHold", "[", 
           RowBox[{"$ConditionHold", "[", 
            RowBox[{"System`TransformConstructorDump`postProcess", "[", 
             RowBox[{
              RowBox[{"TranslationTransform", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}], ".", 
              RowBox[{"LinearFractionalTransform", "[", 
               RowBox[{"{", "System`TransformConstructorDump`M$", "}"}], 
               "]"}], ".", 
              RowBox[{"TranslationTransform", "[", 
               RowBox[{"-", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
           "]"}], ",", 
          RowBox[{"System`TransformConstructorDump`M$", "=!=", "$Failed"}]}], 
         "]"}]}], "]"}],
      HoldForm], ",", 
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"System`TransformConstructorDump`iRotationMatrix", "[", 
         RowBox[{"RotationTransform", ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "System`TransformConstructorDump`M$", ",", 
            "System`TransformConstructorDump`M2$", ",", 
            "System`TransformConstructorDump`u$", ",", 
            "System`TransformConstructorDump`v$", ",", 
            "System`TransformConstructorDump`phi$", ",", 
            "System`TransformConstructorDump`xi1$", ",", 
            "System`TransformConstructorDump`xi2$", ",", 
            "System`TransformConstructorDump`z11$", ",", 
            "System`TransformConstructorDump`z12$", ",", 
            "System`TransformConstructorDump`z21$", ",", 
            "System`TransformConstructorDump`z22$", ",", 
            "System`TransformConstructorDump`a$", ",", 
            "System`TransformConstructorDump`b$", ",", 
            "System`TransformConstructorDump`n$", ",", 
            "System`TransformConstructorDump`prec$", ",", 
            "System`TransformConstructorDump`method$", ",", 
            RowBox[{
            "System`TransformConstructorDump`rc$", "=", "\<\"real\"\>"}]}], 
           "}"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"VectorQ", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                 "\[NotEqual]", "3"}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "v3d"}], "MessageName"],
                    ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ";", 
                 RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"System`TransformConstructorDump`smallQ", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ";", 
                 RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "System`TransformConstructorDump`phi$", ",", 
                 "System`TransformConstructorDump`xi1$", ",", 
                 "System`TransformConstructorDump`xi2$"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}]}], ";", 
              RowBox[{"System`TransformConstructorDump`M$", "=", 
               RowBox[{"Quiet", "[", 
                RowBox[{
                "System`TransformConstructorDump`iRotationMatrix", "[", 
                 RowBox[{"RotationTransform", ",", 
                  RowBox[{"{", "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}],
                 "]"}]}], ";", 
              RowBox[{"System`TransformConstructorDump`rc$", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"VectorQ", "[", 
                  RowBox[{
                   RowBox[{
                   "Flatten", "[", "System`TransformConstructorDump`M$", 
                    "]"}], ",", 
                   RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "&"}]}], "]"}], ",", "\<\"real\"\>", 
                 ",", "\<\"complex\"\>"}], "]"}]}], ";", 
              RowBox[{"System`TransformConstructorDump`M2$", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "Cos", "[", "System`TransformConstructorDump`phi$", "]"}], 
                   ",", 
                   RowBox[{"-", 
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$", 
                    "]"}]}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "Sin", "[", "System`TransformConstructorDump`phi$", "]"}], 
                   ",", 
                   RowBox[{
                   "Cos", "[", "System`TransformConstructorDump`phi$", "]"}], 
                   ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";", 
              RowBox[{"Return", "[", 
               RowBox[{"System`TransformConstructorDump`postProcess", "[", 
                RowBox[{
                "System`TransformConstructorDump`M$", ".", 
                 "System`TransformConstructorDump`M2$", ".", 
                 RowBox[{"System`TransformConstructorDump`conjtrans", "[", 
                  RowBox[{
                  "System`TransformConstructorDump`M$", ",", 
                   "System`TransformConstructorDump`rc$"}], "]"}]}], "]"}], 
               "]"}]}]}], "]"}], ";", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "System`TransformConstructorDump`u$", ",", 
              "System`TransformConstructorDump`v$"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";", 
           RowBox[{"System`TransformConstructorDump`n$", "=", 
            RowBox[{
            "Length", "[", "System`TransformConstructorDump`u$", "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"System`TransformConstructorDump`vCompDim", "[", 
               RowBox[{"RotationTransform", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "System`TransformConstructorDump`u$", ",", 
                  "System`TransformConstructorDump`v$"}], "}"}]}], "]"}]}], 
             ",", 
             RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"System`TransformConstructorDump`n$", "<", "2"}], ",", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{
                StyleBox[
                 RowBox[{"RotationTransform", "::", "rdim"}], "MessageName"], 
                ",", "System`TransformConstructorDump`u$"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                "System`TransformConstructorDump`smallQ", "[", "#1", "]"}], 
                ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", "#1"}], "]"}], ";", 
                 RowBox[{"Return", "[", 
                  RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}], "&"}],
              ")"}], "/@", 
            RowBox[{"{", 
             RowBox[{
             "System`TransformConstructorDump`u$", ",", 
              "System`TransformConstructorDump`v$"}], "}"}]}], ";", 
           RowBox[{"System`TransformConstructorDump`prec$", "=", 
            RowBox[{"Precision", "[", 
             RowBox[{"{", 
              RowBox[{
              "System`TransformConstructorDump`u$", ",", 
               "System`TransformConstructorDump`v$"}], "}"}], "]"}]}], ";", 
           RowBox[{"System`TransformConstructorDump`rc$", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"VectorQ", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`u$", ",", 
                   "System`TransformConstructorDump`v$"}], "}"}], "]"}], ",", 
                
                RowBox[{
                 RowBox[{"#1", "\[Element]", 
                  TemplateBox[{},
                   "Reals"]}], "&"}]}], "]"}], ",", "\<\"real\"\>", 
              ",", "\<\"complex\"\>"}], "]"}]}], ";", 
           RowBox[{"System`TransformConstructorDump`method$", "=", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{
              "System`TransformConstructorDump`prec$", "=!=", "\[Infinity]"}],
               ",", "\<\"Reorthogonalization\"\>", ",", 
              RowBox[{"VectorQ", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`u$", ",", 
                   "System`TransformConstructorDump`v$"}], "}"}], "]"}], ",", 
                
                RowBox[{
                 RowBox[{"#1", "\[Element]", 
                  TemplateBox[{},
                   "Rationals"]}], "&"}]}], "]"}], ",", "Automatic", ",", 
              "True", ",", "\<\"Householder\"\>"}], "]"}]}], ";", 
           RowBox[{"System`TransformConstructorDump`M$", "=", 
            RowBox[{"Orthogonalize", "[", 
             RowBox[{
              RowBox[{"Join", "@@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`u$", ",", 
                   "System`TransformConstructorDump`v$"}], "}"}], ",", 
                 RowBox[{"NullSpace", "[", 
                  RowBox[{"System`TransformConstructorDump`conj", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "System`TransformConstructorDump`u$", ",", 
                    "System`TransformConstructorDump`v$"}], "}"}], ",", 
                    "System`TransformConstructorDump`rc$"}], "]"}], "]"}]}], 
                "}"}]}], ",", 
              RowBox[{
              "Method", "\[Rule]", 
               "System`TransformConstructorDump`method$"}]}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "Length", "[", "System`TransformConstructorDump`M$", "]"}], ">",
               "System`TransformConstructorDump`n$"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], "===", 
                  RowBox[{"{", "}"}]}], "&&", 
                 RowBox[{"System`TransformConstructorDump`closeQ", "@@", 
                  RowBox[{"Normalize", "/@", 
                   RowBox[{"{", 
                    RowBox[{
                    "System`TransformConstructorDump`u$", ",", 
                    "System`TransformConstructorDump`v$"}], "}"}]}]}]}], ",", 
                
                RowBox[{"Return", "[", 
                 RowBox[{"SetPrecision", "[", 
                  RowBox[{
                   RowBox[{
                   "IdentityMatrix", "[", 
                    "System`TransformConstructorDump`n$", "]"}], ",", 
                   "System`TransformConstructorDump`prec$"}], "]"}], "]"}]}], 
               "]"}], ";", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"System`TransformConstructorDump`n$", ">", "2"}], ",", 
                RowBox[{"Message", "[", 
                 RowBox[{
                  StyleBox[
                   RowBox[{"RotationTransform", "::", "spln"}], "MessageName"],
                   ",", "System`TransformConstructorDump`u$", ",", 
                  "System`TransformConstructorDump`v$"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], "=!=", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"Message", "[", 
                   RowBox[{
                    StyleBox[
                    RowBox[{"RotationTransform", "::", "sdir"}], 
                    "MessageName"], ",", "System`TransformConstructorDump`u$",
                     ",", "System`TransformConstructorDump`v$"}], "]"}]}], 
                 "]"}]}], "]"}]}]}], "]"}], ";", 
           RowBox[{"System`TransformConstructorDump`M$", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"System`TransformConstructorDump`M$", ",", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{
                "System`TransformConstructorDump`smallQ", "[", "#1", "]"}]}], 
               "&"}], ",", "System`TransformConstructorDump`n$"}], "]"}]}], 
           ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "Length", "[", "System`TransformConstructorDump`M$", "]"}], 
              "\[NotEqual]", "System`TransformConstructorDump`n$"}], ",", 
             RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], "===", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`z11$", ",", 
                   "System`TransformConstructorDump`z12$"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`z21$", ",", 
                   "System`TransformConstructorDump`z22$"}], "}"}]}], "}"}], 
               "=", 
               RowBox[{"Take", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "System`TransformConstructorDump`u$", ",", 
                    "System`TransformConstructorDump`v$"}], "}"}], ".", 
                  RowBox[{"System`TransformConstructorDump`conjtrans", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`M$", ",", 
                    "System`TransformConstructorDump`rc$"}], "]"}]}], ",", 
                 "2", ",", "2"}], "]"}]}], ";", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "System`TransformConstructorDump`a$", ",", 
                 "System`TransformConstructorDump`b$"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"System`TransformConstructorDump`conj", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`z11$", ",", 
                    "System`TransformConstructorDump`rc$"}], "]"}], " ", 
                  "System`TransformConstructorDump`z21$"}], ",", 
                 RowBox[{
                  RowBox[{"-", "System`TransformConstructorDump`z11$"}], " ", 
                  
                  RowBox[{"System`TransformConstructorDump`conj", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`z22$", ",", 
                    "System`TransformConstructorDump`rc$"}], "]"}]}]}], 
                "}"}]}], ";", 
              RowBox[{"System`TransformConstructorDump`M2$", "=", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "System`TransformConstructorDump`a$", ",", 
                    "System`TransformConstructorDump`b$"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"System`TransformConstructorDump`conj", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`b$", ",", 
                    "System`TransformConstructorDump`rc$"}], "]"}]}], ",", 
                    RowBox[{"System`TransformConstructorDump`conj", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`a$", ",", 
                    "System`TransformConstructorDump`rc$"}], "]"}]}], "}"}]}],
                  "}"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"System`TransformConstructorDump`norm", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`u$", ",", 
                    "System`TransformConstructorDump`rc$"}], "]"}], " ", 
                  RowBox[{"System`TransformConstructorDump`norm", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`v$", ",", 
                    "System`TransformConstructorDump`rc$"}], "]"}]}], 
                 ")"}]}]}], ";"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "System`TransformConstructorDump`phi$", ",", 
                 "System`TransformConstructorDump`xi1$", ",", 
                 "System`TransformConstructorDump`xi2$"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}]}], ";", 
              RowBox[{"System`TransformConstructorDump`M2$", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "Cos", "[", "System`TransformConstructorDump`phi$", "]"}],
                     " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", 
                    "System`TransformConstructorDump`xi1$"}]]}], ",", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$", 
                    "]"}]}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", 
                    "System`TransformConstructorDump`xi2$"}]]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$", "]"}],
                     " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    "System`TransformConstructorDump`xi2$"}]]}], ",", 
                   RowBox[{
                    RowBox[{
                    "Cos", "[", "System`TransformConstructorDump`phi$", "]"}],
                     " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    "System`TransformConstructorDump`xi1$"}]]}]}], "}"}]}], 
                "}"}]}]}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"System`TransformConstructorDump`n$", ">", "2"}], ",", 
             RowBox[{"System`TransformConstructorDump`M2$", "=", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"System`TransformConstructorDump`M2$", ",", "0"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"IdentityMatrix", "[", 
                    RowBox[{"System`TransformConstructorDump`n$", "-", "2"}], 
                    "]"}]}], "}"}]}], "}"}], "]"}]}]}], "]"}], ";", 
           RowBox[{"System`TransformConstructorDump`postProcess", "[", 
            RowBox[{
             RowBox[{
             "Transpose", "[", "System`TransformConstructorDump`M$", "]"}], 
             ".", "System`TransformConstructorDump`M2$", ".", 
             RowBox[{"System`TransformConstructorDump`conj", "[", 
              RowBox[{
              "System`TransformConstructorDump`M$", ",", 
               "System`TransformConstructorDump`rc$"}], "]"}]}], "]"}]}]}], 
         "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{
          "System`TransformConstructorDump`rc$226757", "=", "\<\"real\"\>"}],
          HoldForm], ",", 
         TagBox["\<\"real\"\>",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"VectorQ", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                 "\[NotEqual]", "3"}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "v3d"}], "MessageName"],
                    ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ";", 
                 RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"System`TransformConstructorDump`smallQ", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ";", 
                 RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "System`TransformConstructorDump`phi$226757", ",", 
                 "System`TransformConstructorDump`xi1$226757", ",", 
                 "System`TransformConstructorDump`xi2$226757"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}]}], ";", 
              RowBox[{"System`TransformConstructorDump`M$226757", "=", 
               RowBox[{"Quiet", "[", 
                RowBox[{
                "System`TransformConstructorDump`iRotationMatrix", "[", 
                 RowBox[{"RotationTransform", ",", 
                  RowBox[{"{", "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}],
                 "]"}]}], ";", 
              RowBox[{"System`TransformConstructorDump`rc$226757", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"VectorQ", "[", 
                  RowBox[{
                   RowBox[{
                   "Flatten", "[", "System`TransformConstructorDump`M$226757",
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "&"}]}], "]"}], ",", "\<\"real\"\>", 
                 ",", "\<\"complex\"\>"}], "]"}]}], ";", 
              RowBox[{"System`TransformConstructorDump`M2$226757", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "Cos", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}]}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "Sin", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], ",", 
                   RowBox[{
                   "Cos", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";", 
              RowBox[{"Return", "[", 
               RowBox[{"System`TransformConstructorDump`postProcess", "[", 
                RowBox[{
                "System`TransformConstructorDump`M$226757", ".", 
                 "System`TransformConstructorDump`M2$226757", ".", 
                 RowBox[{"System`TransformConstructorDump`conjtrans", "[", 
                  RowBox[{
                  "System`TransformConstructorDump`M$226757", ",", 
                   "System`TransformConstructorDump`rc$226757"}], "]"}]}], 
                "]"}], "]"}]}]}], "]"}], ";", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "System`TransformConstructorDump`u$226757", ",", 
              "System`TransformConstructorDump`v$226757"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";", 
           RowBox[{"System`TransformConstructorDump`n$226757", "=", 
            RowBox[{
            "Length", "[", "System`TransformConstructorDump`u$226757", 
             "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"System`TransformConstructorDump`vCompDim", "[", 
               RowBox[{"RotationTransform", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "System`TransformConstructorDump`u$226757", ",", 
                  "System`TransformConstructorDump`v$226757"}], "}"}]}], 
               "]"}]}], ",", 
             RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"System`TransformConstructorDump`n$226757", "<", "2"}], 
             ",", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{
                StyleBox[
                 RowBox[{"RotationTransform", "::", "rdim"}], "MessageName"], 
                ",", "System`TransformConstructorDump`u$226757"}], "]"}], ";", 
              RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                "System`TransformConstructorDump`smallQ", "[", "#1", "]"}], 
                ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", "#1"}], "]"}], ";", 
                 RowBox[{"Return", "[", 
                  RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}], "&"}],
              ")"}], "/@", 
            RowBox[{"{", 
             RowBox[{
             "System`TransformConstructorDump`u$226757", ",", 
              "System`TransformConstructorDump`v$226757"}], "}"}]}], ";", 
           RowBox[{"System`TransformConstructorDump`prec$226757", "=", 
            RowBox[{"Precision", "[", 
             RowBox[{"{", 
              RowBox[{
              "System`TransformConstructorDump`u$226757", ",", 
               "System`TransformConstructorDump`v$226757"}], "}"}], "]"}]}], 
           ";", 
           RowBox[{"System`TransformConstructorDump`rc$226757", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"VectorQ", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`u$226757", ",", 
                   "System`TransformConstructorDump`v$226757"}], "}"}], "]"}],
                 ",", 
                RowBox[{
                 RowBox[{"#1", "\[Element]", 
                  TemplateBox[{},
                   "Reals"]}], "&"}]}], "]"}], ",", "\<\"real\"\>", 
              ",", "\<\"complex\"\>"}], "]"}]}], ";", 
           RowBox[{"System`TransformConstructorDump`method$226757", "=", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{
              "System`TransformConstructorDump`prec$226757", "=!=", 
               "\[Infinity]"}], ",", "\<\"Reorthogonalization\"\>", ",", 
              RowBox[{"VectorQ", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`u$226757", ",", 
                   "System`TransformConstructorDump`v$226757"}], "}"}], "]"}],
                 ",", 
                RowBox[{
                 RowBox[{"#1", "\[Element]", 
                  TemplateBox[{},
                   "Rationals"]}], "&"}]}], "]"}], ",", "Automatic", ",", 
              "True", ",", "\<\"Householder\"\>"}], "]"}]}], ";", 
           RowBox[{"System`TransformConstructorDump`M$226757", "=", 
            RowBox[{"Orthogonalize", "[", 
             RowBox[{
              RowBox[{"Join", "@@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`u$226757", ",", 
                   "System`TransformConstructorDump`v$226757"}], "}"}], ",", 
                 RowBox[{"NullSpace", "[", 
                  RowBox[{"System`TransformConstructorDump`conj", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "System`TransformConstructorDump`u$226757", ",", 
                    "System`TransformConstructorDump`v$226757"}], "}"}], ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}], 
                  "]"}]}], "}"}]}], ",", 
              RowBox[{
              "Method", "\[Rule]", 
               "System`TransformConstructorDump`method$226757"}]}], "]"}]}], 
           ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "Length", "[", "System`TransformConstructorDump`M$226757", 
               "]"}], ">", "System`TransformConstructorDump`n$226757"}], ",", 
             
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], "===", 
                  RowBox[{"{", "}"}]}], "&&", 
                 RowBox[{"System`TransformConstructorDump`closeQ", "@@", 
                  RowBox[{"Normalize", "/@", 
                   RowBox[{"{", 
                    RowBox[{
                    "System`TransformConstructorDump`u$226757", ",", 
                    "System`TransformConstructorDump`v$226757"}], "}"}]}]}]}],
                 ",", 
                RowBox[{"Return", "[", 
                 RowBox[{"SetPrecision", "[", 
                  RowBox[{
                   RowBox[{
                   "IdentityMatrix", "[", 
                    "System`TransformConstructorDump`n$226757", "]"}], ",", 
                   "System`TransformConstructorDump`prec$226757"}], "]"}], 
                 "]"}]}], "]"}], ";", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                "System`TransformConstructorDump`n$226757", ">", "2"}], ",", 
                RowBox[{"Message", "[", 
                 RowBox[{
                  StyleBox[
                   RowBox[{"RotationTransform", "::", "spln"}], "MessageName"],
                   ",", "System`TransformConstructorDump`u$226757", ",", 
                  "System`TransformConstructorDump`v$226757"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], "=!=", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"Message", "[", 
                   RowBox[{
                    StyleBox[
                    RowBox[{"RotationTransform", "::", "sdir"}], 
                    "MessageName"], ",", 
                    "System`TransformConstructorDump`u$226757", ",", 
                    "System`TransformConstructorDump`v$226757"}], "]"}]}], 
                 "]"}]}], "]"}]}]}], "]"}], ";", 
           RowBox[{"System`TransformConstructorDump`M$226757", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"System`TransformConstructorDump`M$226757", ",", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{
                "System`TransformConstructorDump`smallQ", "[", "#1", "]"}]}], 
               "&"}], ",", "System`TransformConstructorDump`n$226757"}], 
             "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "Length", "[", "System`TransformConstructorDump`M$226757", 
               "]"}], "\[NotEqual]", 
              "System`TransformConstructorDump`n$226757"}], ",", 
             RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], "===", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`z11$226757", ",", 
                   "System`TransformConstructorDump`z12$226757"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`z21$226757", ",", 
                   "System`TransformConstructorDump`z22$226757"}], "}"}]}], 
                "}"}], "=", 
               RowBox[{"Take", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "System`TransformConstructorDump`u$226757", ",", 
                    "System`TransformConstructorDump`v$226757"}], "}"}], ".", 
                  
                  RowBox[{"System`TransformConstructorDump`conjtrans", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`M$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}], 
                 ",", "2", ",", "2"}], "]"}]}], ";", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "System`TransformConstructorDump`a$226757", ",", 
                 "System`TransformConstructorDump`b$226757"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"System`TransformConstructorDump`conj", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`z11$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}], " ",
                   "System`TransformConstructorDump`z21$226757"}], ",", 
                 RowBox[{
                  RowBox[{"-", "System`TransformConstructorDump`z11$226757"}],
                   " ", 
                  RowBox[{"System`TransformConstructorDump`conj", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`z22$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}]}], 
                "}"}]}], ";", 
              RowBox[{"System`TransformConstructorDump`M2$226757", "=", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "System`TransformConstructorDump`a$226757", ",", 
                    "System`TransformConstructorDump`b$226757"}], "}"}], ",", 
                  
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"System`TransformConstructorDump`conj", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`b$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}], 
                    ",", 
                    RowBox[{"System`TransformConstructorDump`conj", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`a$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}], 
                   "}"}]}], "}"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"System`TransformConstructorDump`norm", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`u$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}], " ", 
                  RowBox[{"System`TransformConstructorDump`norm", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`v$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}], 
                 ")"}]}]}], ";"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "System`TransformConstructorDump`phi$226757", ",", 
                 "System`TransformConstructorDump`xi1$226757", ",", 
                 "System`TransformConstructorDump`xi2$226757"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}]}], ";", 
              RowBox[{"System`TransformConstructorDump`M2$226757", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "Cos", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", 
                    "System`TransformConstructorDump`xi1$226757"}]]}], ",", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}]}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", 
                    "System`TransformConstructorDump`xi2$226757"}]]}]}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    "System`TransformConstructorDump`xi2$226757"}]]}], ",", 
                   RowBox[{
                    RowBox[{
                    "Cos", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    "System`TransformConstructorDump`xi1$226757"}]]}]}], 
                  "}"}]}], "}"}]}]}]}], "]"}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"System`TransformConstructorDump`n$226757", ">", "2"}], 
             ",", 
             RowBox[{"System`TransformConstructorDump`M2$226757", "=", 
              RowBox[{"ArrayFlatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "System`TransformConstructorDump`M2$226757", ",", "0"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"IdentityMatrix", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`n$226757", "-", "2"}], 
                    "]"}]}], "}"}]}], "}"}], "]"}]}]}], "]"}], ";", 
           RowBox[{"System`TransformConstructorDump`postProcess", "[", 
            RowBox[{
             RowBox[{
             "Transpose", "[", "System`TransformConstructorDump`M$226757", 
              "]"}], ".", "System`TransformConstructorDump`M2$226757", ".", 
             RowBox[{"System`TransformConstructorDump`conj", "[", 
              RowBox[{
              "System`TransformConstructorDump`M$226757", ",", 
               "System`TransformConstructorDump`rc$226757"}], "]"}]}], "]"}]}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"VectorQ", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{"False", ",", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                  "\[NotEqual]", "3"}], ",", 
                 RowBox[{
                  RowBox[{"Message", "[", 
                   RowBox[{
                    StyleBox[
                    RowBox[{"RotationTransform", "::", "v3d"}], "MessageName"],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ";", 
                  RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"System`TransformConstructorDump`smallQ", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"Message", "[", 
                   RowBox[{
                    StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ";", 
                  RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "System`TransformConstructorDump`phi$226757", ",", 
                  "System`TransformConstructorDump`xi1$226757", ",", 
                  "System`TransformConstructorDump`xi2$226757"}], "}"}], "=", 
                
                RowBox[{"{", 
                 RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}]}], ";", 
               RowBox[{"System`TransformConstructorDump`M$226757", "=", 
                RowBox[{"Quiet", "[", 
                 RowBox[{
                 "System`TransformConstructorDump`iRotationMatrix", "[", 
                  RowBox[{"RotationTransform", ",", 
                   RowBox[{"{", "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}],
                  "]"}]}], ";", 
               RowBox[{"System`TransformConstructorDump`rc$226757", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"VectorQ", "[", 
                   RowBox[{
                    RowBox[{
                    "Flatten", "[", 
                    "System`TransformConstructorDump`M$226757", "]"}], ",", 
                    RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "&"}]}], "]"}], ",", "\<\"real\"\>", 
                  ",", "\<\"complex\"\>"}], "]"}]}], ";", 
               RowBox[{"System`TransformConstructorDump`M2$226757", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Cos", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}]}], ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], ",", 
                    RowBox[{
                    "Cos", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";", 
               RowBox[{"Return", "[", 
                RowBox[{"System`TransformConstructorDump`postProcess", "[", 
                 RowBox[{
                 "System`TransformConstructorDump`M$226757", ".", 
                  "System`TransformConstructorDump`M2$226757", ".", 
                  RowBox[{"System`TransformConstructorDump`conjtrans", "[", 
                   RowBox[{
                   "System`TransformConstructorDump`M$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}], 
                 "]"}], "]"}]}]}], "]"}],
            HoldForm], ",", 
           TagBox["Null",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "System`TransformConstructorDump`u$226757", ",", 
               "System`TransformConstructorDump`v$226757"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox["System`TransformConstructorDump`u$226757",
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["2",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"System`TransformConstructorDump`n$226757", "=", "2"}],
            HoldForm], ",", 
           TagBox["2",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   TagBox["System`TransformConstructorDump`u$226757",
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   TagBox["System`TransformConstructorDump`v$226757",
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"System`TransformConstructorDump`vCompDim", "[", 
                 RowBox[{"RotationTransform", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[Equal]", 
                  RowBox[{"Length", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "||", 
                 RowBox[{"System`TransformConstructorDump`vMessage", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "idim"}], 
                    "MessageName"], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}],
                HoldForm], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   TagBox[
                    RowBox[{"Length", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}],
                    HoldForm], ",", 
                   TagBox["2",
                    HoldForm]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   TagBox[
                    RowBox[{"Length", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}],
                    HoldForm], ",", 
                   TagBox["2",
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"2", "\[Equal]", "2"}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"!", "True"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{"False", ",", 
              RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}],
            HoldForm], ",", 
           TagBox["Null",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox["System`TransformConstructorDump`n$226757",
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"2", "<", "2"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{"False", ",", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 StyleBox[
                  RowBox[{"RotationTransform", "::", "rdim"}], "MessageName"],
                  ",", "System`TransformConstructorDump`u$226757"}], "]"}], 
               ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}],
            HoldForm], ",", 
           TagBox["Null",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox["System`TransformConstructorDump`u$226757",
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}],
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox["System`TransformConstructorDump`v$226757",
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "System`TransformConstructorDump`smallQ", "[", "#1", "]"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"Message", "[", 
                   RowBox[{
                    StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", "#1"}], "]"}], ";", 
                  RowBox[{"Return", "[", 
                   RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}], 
               "&"}], ")"}], "/@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                   "System`TransformConstructorDump`smallQ", "[", "#1", "]"}],
                    ",", 
                   RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", "#1"}], "]"}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}], 
                 "&"}], ")"}], "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                   "System`TransformConstructorDump`smallQ", "[", "#1", "]"}],
                    ",", 
                   RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", "#1"}], "]"}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}], 
                 "&"}], ")"}], "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                   "System`TransformConstructorDump`smallQ", "[", "#1", "]"}],
                    ",", 
                   RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", "#1"}], "]"}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}], 
                 "&"}], ")"}], "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"System`TransformConstructorDump`smallQ", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "]"}], ";", 
                 RowBox[{"Return", "[", 
                  RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`smallQ",
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{
                   RowBox[{"Quiet", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", "#1", "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", "#1", "]"}], "]"}]}], "]"}], "]"}], 
                   "&"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Quiet", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", "#1", "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", "#1", "]"}], "]"}]}], "]"}], "]"}], 
                   "&"}], ")"}], "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"Quiet", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                   RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                   RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "]"}]}], "]"}], 
                 "]"}],
                HoldForm], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}],
                    HoldForm], ",", 
                    TagBox["\[Infinity]",
                    HoldForm]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    TagBox["\[Infinity]",
                    HoldForm], ",", 
                    TagBox["\[Infinity]",
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"\[Infinity]", "=!=", "\[Infinity]"}],
                    HoldForm], ",", 
                   TagBox["False",
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"If", "[", 
                   RowBox[{"False", ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "]"}]}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"PossibleZeroQ", "[", 
                   RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "]"}],
                  HoldForm], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   TagBox[
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}],
                    HoldForm], ",", 
                   TagBox["1",
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"PossibleZeroQ", "[", "1", "]"}],
                  HoldForm], ",", 
                 TagBox["False",
                  HoldForm]}], "}"}], ",", 
               TagBox["False",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"If", "[", 
               RowBox[{"False", ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "]"}], ";", 
                 RowBox[{"Return", "[", 
                  RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}],
              HoldForm], ",", 
             TagBox["Null",
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                   "System`TransformConstructorDump`smallQ", "[", "#1", "]"}],
                    ",", 
                   RowBox[{
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", "#1"}], "]"}], ";", 
                    RowBox[{"Return", "[", 
                    RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}], 
                 "&"}], ")"}], "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"System`TransformConstructorDump`smallQ", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ";", 
                 RowBox[{"Return", "[", 
                  RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`smallQ",
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{
                   RowBox[{"Quiet", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", "#1", "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", "#1", "]"}], "]"}]}], "]"}], "]"}], 
                   "&"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Quiet", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", "#1", "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", "#1", "]"}], "]"}]}], "]"}], "]"}], 
                   "&"}], ")"}], "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"Quiet", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                   RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                   RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], "]"}], 
                 "]"}],
                HoldForm], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}],
                    HoldForm], ",", 
                    TagBox["\[Infinity]",
                    HoldForm]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    TagBox["\[Infinity]",
                    HoldForm], ",", 
                    TagBox["\[Infinity]",
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"\[Infinity]", "=!=", "\[Infinity]"}],
                    HoldForm], ",", 
                   TagBox["False",
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"If", "[", 
                   RowBox[{"False", ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"PossibleZeroQ", "[", 
                   RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}],
                  HoldForm], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   TagBox[
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}],
                    HoldForm], ",", 
                   TagBox["1",
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"PossibleZeroQ", "[", "1", "]"}],
                  HoldForm], ",", 
                 TagBox["False",
                  HoldForm]}], "}"}], ",", 
               TagBox["False",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"If", "[", 
               RowBox[{"False", ",", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "idir"}], 
                    "MessageName"], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ";", 
                 RowBox[{"Return", "[", 
                  RowBox[{"$Failed", ",", "Module"}], "]"}]}]}], "]"}],
              HoldForm], ",", 
             TagBox["Null",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{"Null", ",", "Null"}], "}"}],
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`u$226757",
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}],
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`v$226757",
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"Precision", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["\[Infinity]",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{
            "System`TransformConstructorDump`prec$226757", "=", 
             "\[Infinity]"}],
            HoldForm], ",", 
           TagBox["\[Infinity]",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`u$226757",
                    HoldForm], ",", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`v$226757",
                    HoldForm], ",", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"VectorQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "&"}]}], "]"}],
                HoldForm], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "&"}], ")"}], "[", "1", "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"1", "\[Element]", 
                   TemplateBox[{},
                    "Reals"]}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "&"}], ")"}], "[", "0", "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"0", "\[Element]", 
                   TemplateBox[{},
                    "Reals"]}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "&"}], ")"}], "[", "0", "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"0", "\[Element]", 
                   TemplateBox[{},
                    "Reals"]}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}], "&"}], ")"}], "[", "1", "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"1", "\[Element]", 
                   TemplateBox[{},
                    "Reals"]}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"If", "[", 
               RowBox[{"True", ",", "\<\"real\"\>", ",", "\<\"complex\"\>"}], 
               "]"}],
              HoldForm], ",", 
             TagBox["\<\"real\"\>",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{
            "System`TransformConstructorDump`rc$226757", "=", "\<\"real\"\>"}],
            HoldForm], ",", 
           TagBox["\<\"real\"\>",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{
                "System`TransformConstructorDump`prec$226757", "=!=", 
                 "\[Infinity]"}], ",", "\<\"Reorthogonalization\"\>", ",", 
                RowBox[{"VectorQ", "[", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "System`TransformConstructorDump`u$226757", ",", 
                    "System`TransformConstructorDump`v$226757"}], "}"}], 
                   "]"}], ",", 
                  RowBox[{
                   RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Rationals"]}], "&"}]}], "]"}], ",", "Automatic", ",", 
                "True", ",", "\<\"Householder\"\>"}], "]"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`prec$226757",
                  HoldForm], ",", 
                 TagBox["\[Infinity]",
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox["\[Infinity]",
                  HoldForm], ",", 
                 TagBox["\[Infinity]",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"\[Infinity]", "=!=", "\[Infinity]"}],
                HoldForm], ",", 
               TagBox["False",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`u$226757",
                    HoldForm], ",", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`v$226757",
                    HoldForm], ",", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"VectorQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Rationals"]}], "&"}]}], "]"}],
                HoldForm], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Rationals"]}], "&"}], ")"}], "[", "1", "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"1", "\[Element]", 
                   TemplateBox[{},
                    "Rationals"]}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Rationals"]}], "&"}], ")"}], "[", "0", "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"0", "\[Element]", 
                   TemplateBox[{},
                    "Rationals"]}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Rationals"]}], "&"}], ")"}], "[", "0", "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"0", "\[Element]", 
                   TemplateBox[{},
                    "Rationals"]}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Element]", 
                    TemplateBox[{},
                    "Rationals"]}], "&"}], ")"}], "[", "1", "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"1", "\[Element]", 
                   TemplateBox[{},
                    "Rationals"]}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox["Automatic",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{
            "System`TransformConstructorDump`method$226757", "=", 
             "Automatic"}],
            HoldForm], ",", 
           TagBox["Automatic",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`u$226757",
                    HoldForm], ",", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`v$226757",
                    HoldForm], ",", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                    HoldForm]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`u$226757",
                    HoldForm], ",", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`v$226757",
                    HoldForm], ",", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                    HoldForm]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`rc$226757",
                    HoldForm], ",", 
                    TagBox["\<\"real\"\>",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"System`TransformConstructorDump`conj", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], 
                    ",", "\<\"real\"\>"}], "]"}],
                    HoldForm], ",", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"NullSpace", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"{", "}"}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"Join", "@@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                   RowBox[{"{", "}"}]}], "}"}]}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", "}"}]}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`method$226757",
                  HoldForm], ",", 
                 TagBox["Automatic",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"Method", "\[Rule]", "Automatic"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"Method", "\[Rule]", "Automatic"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"Orthogonalize", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", "Automatic"}]}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"System`TransformConstructorDump`M$226757", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`M$226757",
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox["System`TransformConstructorDump`n$226757",
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"2", ">", "2"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{"False", ",", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], "===", 
                   RowBox[{"{", "}"}]}], "&&", 
                  RowBox[{"System`TransformConstructorDump`closeQ", "@@", 
                   RowBox[{"Normalize", "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "System`TransformConstructorDump`u$226757", ",", 
                    "System`TransformConstructorDump`v$226757"}], "}"}]}]}]}],
                  ",", 
                 RowBox[{"Return", "[", 
                  RowBox[{"SetPrecision", "[", 
                   RowBox[{
                    RowBox[{
                    "IdentityMatrix", "[", 
                    "System`TransformConstructorDump`n$226757", "]"}], ",", 
                    "System`TransformConstructorDump`prec$226757"}], "]"}], 
                  "]"}]}], "]"}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "System`TransformConstructorDump`n$226757", ">", "2"}], ",", 
                 
                 RowBox[{"Message", "[", 
                  RowBox[{
                   StyleBox[
                    RowBox[{"RotationTransform", "::", "spln"}], 
                    "MessageName"], ",", 
                   "System`TransformConstructorDump`u$226757", ",", 
                   "System`TransformConstructorDump`v$226757"}], "]"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], "=!=", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"RotationTransform", "::", "sdir"}], 
                    "MessageName"], ",", 
                    "System`TransformConstructorDump`u$226757", ",", 
                    "System`TransformConstructorDump`v$226757"}], "]"}]}], 
                  "]"}]}], "]"}]}]}], "]"}],
            HoldForm], ",", 
           TagBox["Null",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox["System`TransformConstructorDump`M$226757",
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox["System`TransformConstructorDump`n$226757",
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{
                  "System`TransformConstructorDump`smallQ", "[", "#1", 
                   "]"}]}], "&"}], ",", "2"}], "]"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{
                    "System`TransformConstructorDump`smallQ", "[", "#1", 
                    "]"}]}], "&"}], ")"}], "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"!", 
                 RowBox[{"System`TransformConstructorDump`smallQ", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], "]"}]}],
                HoldForm], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   TagBox["System`TransformConstructorDump`smallQ",
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", "#1", "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", "#1", "]"}], "]"}]}], "]"}], "]"}], 
                    "&"}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", "#1", "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", "#1", "]"}], "]"}]}], "]"}], "]"}], 
                    "&"}], ")"}], "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"Quiet", "[", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "]"}]}], "]"}], 
                   "]"}],
                  HoldForm], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}],
                    HoldForm], ",", 
                    TagBox["\[Infinity]",
                    HoldForm]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["\[Infinity]",
                    HoldForm], ",", 
                    TagBox["\[Infinity]",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"\[Infinity]", "=!=", "\[Infinity]"}],
                    HoldForm], ",", 
                    TagBox["False",
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"If", "[", 
                    RowBox[{"False", ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "]"}]}], "]"}],
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}], "]"}],
                    HoldForm], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "]"}],
                    HoldForm], ",", 
                    TagBox["1",
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"PossibleZeroQ", "[", "1", "]"}],
                    HoldForm], ",", 
                   TagBox["False",
                    HoldForm]}], "}"}], ",", 
                 TagBox["False",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"!", "False"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{
                    "System`TransformConstructorDump`smallQ", "[", "#1", 
                    "]"}]}], "&"}], ")"}], "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"!", 
                 RowBox[{"System`TransformConstructorDump`smallQ", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], "]"}]}],
                HoldForm], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   TagBox["System`TransformConstructorDump`smallQ",
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", "#1", "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", "#1", "]"}], "]"}]}], "]"}], "]"}], 
                    "&"}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Quiet", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", "#1", "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", "#1", "]"}], "]"}]}], "]"}], "]"}], 
                    "&"}], ")"}], "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"Quiet", "[", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "=!=", 
                    "\[Infinity]"}], ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], "]"}], 
                   "]"}],
                  HoldForm], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}],
                    HoldForm], ",", 
                    TagBox["\[Infinity]",
                    HoldForm]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["\[Infinity]",
                    HoldForm], ",", 
                    TagBox["\[Infinity]",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"\[Infinity]", "=!=", "\[Infinity]"}],
                    HoldForm], ",", 
                    TagBox["False",
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"If", "[", 
                    RowBox[{"False", ",", 
                    RowBox[{"TrueQ", "[", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[Equal]", "0"}], 
                    "]"}], ",", 
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], "]"}],
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"PossibleZeroQ", "[", 
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}],
                    HoldForm], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    RowBox[{"Norm", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}],
                    HoldForm], ",", 
                    TagBox["1",
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"PossibleZeroQ", "[", "1", "]"}],
                    HoldForm], ",", 
                   TagBox["False",
                    HoldForm]}], "}"}], ",", 
                 TagBox["False",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"!", "False"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"System`TransformConstructorDump`M$226757", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`M$226757",
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox["System`TransformConstructorDump`n$226757",
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"2", "\[NotEqual]", "2"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{"False", ",", 
              RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}],
            HoldForm], ",", 
           TagBox["Null",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}], "===", 
               RowBox[{"{", "}"}]}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{"False", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "System`TransformConstructorDump`z11$226757", ",", 
                    "System`TransformConstructorDump`z12$226757"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "System`TransformConstructorDump`z21$226757", ",", 
                    "System`TransformConstructorDump`z22$226757"}], "}"}]}], 
                 "}"}], "=", 
                RowBox[{"Take", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "System`TransformConstructorDump`u$226757", ",", 
                    "System`TransformConstructorDump`v$226757"}], "}"}], ".", 
                   
                   RowBox[{"System`TransformConstructorDump`conjtrans", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`M$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}], 
                  ",", "2", ",", "2"}], "]"}]}], ";", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "System`TransformConstructorDump`a$226757", ",", 
                  "System`TransformConstructorDump`b$226757"}], "}"}], "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"System`TransformConstructorDump`conj", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`z11$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}], " ",
                    "System`TransformConstructorDump`z21$226757"}], ",", 
                  RowBox[{
                   RowBox[{
                   "-", "System`TransformConstructorDump`z11$226757"}], " ", 
                   RowBox[{"System`TransformConstructorDump`conj", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`z22$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}]}], 
                 "}"}]}], ";", 
               RowBox[{"System`TransformConstructorDump`M2$226757", "=", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "System`TransformConstructorDump`a$226757", ",", 
                    "System`TransformConstructorDump`b$226757"}], "}"}], ",", 
                   
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"System`TransformConstructorDump`conj", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`b$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}], 
                    ",", 
                    RowBox[{"System`TransformConstructorDump`conj", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`a$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}], 
                    "}"}]}], "}"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"System`TransformConstructorDump`norm", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`u$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}], " ", 
                   RowBox[{"System`TransformConstructorDump`norm", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`v$226757", ",", 
                    "System`TransformConstructorDump`rc$226757"}], "]"}]}], 
                  ")"}]}]}], ";"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "System`TransformConstructorDump`phi$226757", ",", 
                  "System`TransformConstructorDump`xi1$226757", ",", 
                  "System`TransformConstructorDump`xi2$226757"}], "}"}], "=", 
                
                RowBox[{"{", 
                 RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}]}], ";", 
               RowBox[{"System`TransformConstructorDump`M2$226757", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "Cos", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", 
                    "System`TransformConstructorDump`xi1$226757"}]]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}]}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", 
                    "System`TransformConstructorDump`xi2$226757"}]]}]}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    "System`TransformConstructorDump`xi2$226757"}]]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Cos", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    "System`TransformConstructorDump`xi1$226757"}]]}]}], 
                   "}"}]}], "}"}]}]}]}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "System`TransformConstructorDump`phi$226757", ",", 
                "System`TransformConstructorDump`xi1$226757", ",", 
                "System`TransformConstructorDump`xi2$226757"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}]}], ";", 
             RowBox[{"System`TransformConstructorDump`M2$226757", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "Cos", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", 
                    "System`TransformConstructorDump`xi1$226757"}]]}], ",", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{
                    "Sin", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}]}], " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", 
                    "System`TransformConstructorDump`xi2$226757"}]]}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "Sin", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    "System`TransformConstructorDump`xi2$226757"}]]}], ",", 
                  RowBox[{
                   RowBox[{
                   "Cos", "[", "System`TransformConstructorDump`phi$226757", 
                    "]"}], " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    "System`TransformConstructorDump`xi1$226757"}]]}]}], 
                 "}"}]}], "}"}]}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "System`TransformConstructorDump`phi$226757", ",", 
                 "System`TransformConstructorDump`xi1$226757", ",", 
                 "System`TransformConstructorDump`xi2$226757"}], "}"}], "=", 
               RowBox[{"{", 
                RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}]}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", "0"}], "}"}],
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`phi$226757",
                    HoldForm], ",", 
                    TagBox["\[Theta]",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}],
                    HoldForm]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["\[ImaginaryI]",
                    HoldForm], ",", 
                    TagBox["\[ImaginaryI]",
                    HoldForm]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`xi1$226757",
                    HoldForm], ",", 
                    TagBox["0",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"\[ImaginaryI]", " ", "0"}],
                    HoldForm], ",", 
                    TagBox["0",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    SuperscriptBox["\[ExponentialE]", "0"],
                    HoldForm], ",", 
                    TagBox["1",
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", "1"}],
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}],
                    HoldForm]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`phi$226757",
                    HoldForm], ",", 
                    TagBox["\[Theta]",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"Sin", "[", "\[Theta]", "]"}],
                    HoldForm]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["\[ImaginaryI]",
                    HoldForm], ",", 
                    TagBox["\[ImaginaryI]",
                    HoldForm]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`xi2$226757",
                    HoldForm], ",", 
                    TagBox["0",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"\[ImaginaryI]", " ", "0"}],
                    HoldForm], ",", 
                    TagBox["0",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    SuperscriptBox["\[ExponentialE]", "0"],
                    HoldForm], ",", 
                    TagBox["1",
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`phi$226757",
                    HoldForm], ",", 
                    TagBox["\[Theta]",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"Sin", "[", "\[Theta]", "]"}],
                    HoldForm]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["\[ImaginaryI]",
                    HoldForm], ",", 
                    TagBox["\[ImaginaryI]",
                    HoldForm]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`xi2$226757",
                    HoldForm], ",", 
                    TagBox["0",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "0"}],
                    HoldForm], ",", 
                    TagBox["0",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    SuperscriptBox["\[ExponentialE]", "0"],
                    HoldForm], ",", 
                    TagBox["1",
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "1"}],
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"Sin", "[", "\[Theta]", "]"}],
                    HoldForm]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`phi$226757",
                    HoldForm], ",", 
                    TagBox["\[Theta]",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}],
                    HoldForm]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["\[ImaginaryI]",
                    HoldForm], ",", 
                    TagBox["\[ImaginaryI]",
                    HoldForm]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["System`TransformConstructorDump`xi1$226757",
                    HoldForm], ",", 
                    TagBox["0",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "0"}],
                    HoldForm], ",", 
                    TagBox["0",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    SuperscriptBox["\[ExponentialE]", "0"],
                    HoldForm], ",", 
                    TagBox["1",
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", "1"}],
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"Cos", "[", "\[Theta]", "]"}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"System`TransformConstructorDump`M2$226757", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox["System`TransformConstructorDump`n$226757",
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"2", ">", "2"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{"False", ",", 
              RowBox[{"System`TransformConstructorDump`M2$226757", "=", 
               RowBox[{"ArrayFlatten", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "System`TransformConstructorDump`M2$226757", ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"IdentityMatrix", "[", 
                    RowBox[{
                    "System`TransformConstructorDump`n$226757", "-", "2"}], 
                    "]"}]}], "}"}]}], "}"}], "]"}]}]}], "]"}],
            HoldForm], ",", 
           TagBox["Null",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox["System`TransformConstructorDump`postProcess",
              HoldForm], ",", 
             TagBox[
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Head", "[", "#1", "]"}], "===", 
                  "TransformationFunction"}], ",", 
                 RowBox[{
                 "System`TransformConstructorDump`postProcess", "/@", "#1"}], 
                 ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                    
                    RowBox[{"!", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", 
                   ",", 
                   RowBox[{"Developer`ToPackedArray", "[", 
                    RowBox[{"Together", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                    "]"}]}], "]"}]}], "]"}], "&"}],
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`M$226757",
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox["System`TransformConstructorDump`M2$226757",
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`M$226757",
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox["System`TransformConstructorDump`rc$226757",
                  HoldForm], ",", 
                 TagBox["\<\"real\"\>",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"System`TransformConstructorDump`conj", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], 
                  ",", "\<\"real\"\>"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
               ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}],
              HoldForm], ",", 
             TagBox[
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
               ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Head", "[", "#1", "]"}], "===", 
                  "TransformationFunction"}], ",", 
                 RowBox[{
                 "System`TransformConstructorDump`postProcess", "/@", "#1"}], 
                 ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                    
                    RowBox[{"!", 
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", 
                   ",", 
                   RowBox[{"Developer`ToPackedArray", "[", 
                    RowBox[{"Together", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                    "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
             "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                "]"}], "===", "TransformationFunction"}], ",", 
              RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Developer`PackedArrayQ", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  "]"}], "||", 
                 RowBox[{"!", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", "Conjugate"}], "]"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                ",", 
                RowBox[{"Developer`ToPackedArray", "[", 
                 RowBox[{"Together", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}], "=!=", "MachinePrecision"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}],
            
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Head", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                 "]"}],
                HoldForm], ",", 
               TagBox["List",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"List", "===", "TransformationFunction"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{"False", ",", 
              RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Developer`PackedArrayQ", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  "]"}], "||", 
                 RowBox[{"!", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", "Conjugate"}], "]"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                ",", 
                RowBox[{"Developer`ToPackedArray", "[", 
                 RowBox[{"Together", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}], "=!=", "MachinePrecision"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}],
            
            HoldForm], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Developer`PackedArrayQ", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                "]"}], "||", 
               RowBox[{"!", 
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  ",", "Conjugate"}], "]"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
              ",", 
              RowBox[{"Developer`ToPackedArray", "[", 
               RowBox[{"Together", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}], "=!=", "MachinePrecision"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{"Developer`PackedArrayQ", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                "]"}], "||", 
               RowBox[{"!", 
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  ",", "Conjugate"}], "]"}]}]}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Developer`PackedArrayQ", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                 "]"}],
                HoldForm], ",", 
               TagBox["False",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", "Conjugate"}], "]"}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"!", "True"}],
                HoldForm], ",", 
               TagBox["False",
                HoldForm]}], "}"}], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"If", "[", 
             RowBox[{"False", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
              ",", 
              RowBox[{"Developer`ToPackedArray", "[", 
               RowBox[{"Together", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}], "=!=", "MachinePrecision"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  "]"}], "=!=", "MachinePrecision"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                   "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   TagBox[
                    RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}],
                    HoldForm], ",", 
                   TagBox["\[Infinity]",
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{"\[Infinity]", "=!=", "MachinePrecision"}],
                  HoldForm], ",", 
                 TagBox["True",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"If", "[", 
                 RowBox[{"True", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
               "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Together", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "]"}], 
                ",", 
                RowBox[{"Together", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}], "]"}]}], 
               "}"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Together", "[", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], ",", 
                  RowBox[{"Together", "[", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "]"}]}], "}"}],
                HoldForm], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Together", "[", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}],
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Together", "[", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Together", "[", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], ",", 
                  RowBox[{"Together", "[", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}]}], "}"}],
                HoldForm], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Together", "[", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"Sin", "[", "\[Theta]", "]"}],
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Together", "[", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"Cos", "[", "\[Theta]", "]"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
             "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
        HoldForm]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"System`TransformConstructorDump`M$226756", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
        HoldForm]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           TagBox["System`TransformConstructorDump`M$226756",
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "=!=",
            "$Failed"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"RuleCondition", "[", 
         RowBox[{
          RowBox[{"$ConditionHold", "[", 
           RowBox[{"$ConditionHold", "[", 
            RowBox[{"System`TransformConstructorDump`postProcess", "[", 
             RowBox[{
              RowBox[{"TranslationTransform", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}], ".", 
              RowBox[{"LinearFractionalTransform", "[", 
               RowBox[{"{", "System`TransformConstructorDump`M$226756", "}"}],
                "]"}], ".", 
              RowBox[{"TranslationTransform", "[", 
               RowBox[{"-", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
           "]"}], ",", "True"}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"$ConditionHold", "[", 
         RowBox[{"$ConditionHold", "[", 
          RowBox[{"System`TransformConstructorDump`postProcess", "[", 
           RowBox[{
            RowBox[{"TranslationTransform", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "]"}], ".", 
            RowBox[{"LinearFractionalTransform", "[", 
             RowBox[{"{", "System`TransformConstructorDump`M$226756", "}"}], 
             "]"}], ".", 
            RowBox[{"TranslationTransform", "[", 
             RowBox[{"-", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], "]"}],
        
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"$ConditionHold", "[", 
       RowBox[{"$ConditionHold", "[", 
        RowBox[{"System`TransformConstructorDump`postProcess", "[", 
         RowBox[{
          RowBox[{"TranslationTransform", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}], ".", 
          RowBox[{"LinearFractionalTransform", "[", 
           RowBox[{"{", "System`TransformConstructorDump`M$226756", "}"}], 
           "]"}], ".", 
          RowBox[{"TranslationTransform", "[", 
           RowBox[{"-", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], "]"}],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"System`TransformConstructorDump`postProcess", "[", 
     RowBox[{
      RowBox[{"TranslationTransform", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}], ".", 
      RowBox[{"LinearFractionalTransform", "[", 
       RowBox[{"{", "System`TransformConstructorDump`M$226756", "}"}], "]"}], 
      ".", 
      RowBox[{"TranslationTransform", "[", 
       RowBox[{"-", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox["System`TransformConstructorDump`postProcess",
      HoldForm], ",", 
     TagBox[
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#1", "]"}], "===", "TransformationFunction"}],
          ",", 
         RowBox[{"System`TransformConstructorDump`postProcess", "/@", "#1"}], 
         ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
            RowBox[{"!", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
           RowBox[{"Developer`ToPackedArray", "[", 
            RowBox[{"Together", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                "MachinePrecision"}], ",", "#1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                 RowBox[{"N", "[", "#1", "]"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                  RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
            "]"}]}], "]"}]}], "]"}], "&"}],
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"TranslationTransform", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"VectorQ", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"Length", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["2",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"IdentityMatrix", "[", "2", "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["False",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"VectorQ", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
              RowBox[{"{", 
               RowBox[{"{", "}"}], "}"}]}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "\[Equal]", 
              
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}], ")"}], "||", 
           RowBox[{"System`TransformConstructorDump`vMessage", "[", 
            RowBox[{
             StyleBox[
              RowBox[{"LinearFractionalTransform", "::", "idimr"}], 
              "MessageName"], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
              RowBox[{"{", 
               RowBox[{"{", "}"}], "}"}]}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "\[Equal]", 
              
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
               RowBox[{"{", 
                RowBox[{"{", "}"}], "}"}]}],
              HoldForm], ",", 
             TagBox["True",
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"2", "\[Equal]", "2"}],
              HoldForm], ",", 
             TagBox["True",
              HoldForm]}], "}"}], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"First", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}]}], 
            "]"}], ",", "1"}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"First", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["2",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", "2"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["False",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"VectorQ", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"VectorQ", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{
           RowBox[{"System`TransformConstructorDump`scalarQ", "[", "1", "]"}],
            "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "===", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}]}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}]}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                "\[Equal]", 
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}], ")"}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimr"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
               "\[Equal]", 
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimc"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ")"}]}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox["System`TransformConstructorDump`scalarQ",
              HoldForm], ",", 
             TagBox[
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MatchQ", "[", 
                 RowBox[{"#1", ",", 
                  RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}], "&"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MatchQ", "[", 
                 RowBox[{"#1", ",", 
                  RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}], "&"}], 
              ")"}], "[", "1", "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"!", 
             RowBox[{"MatchQ", "[", 
              RowBox[{"1", ",", 
               RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"MatchQ", "[", 
               RowBox[{"1", ",", 
                RowBox[{"_List", "|", "_SparseArray"}]}], "]"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"!", "False"}],
            HoldForm], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "===", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}]}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}]}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                "\[Equal]", 
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}], ")"}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimr"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "===", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", "}"}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}]}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                "\[Equal]", 
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
                 RowBox[{"{", 
                  RowBox[{"{", "}"}], "}"}]}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Length", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox["2",
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Length", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox["2",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"2", "\[Equal]", "2"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox["True",
              HoldForm]}], "}"}], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
               "\[Equal]", 
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimc"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"2", "\[Equal]", "2"}],
              HoldForm], ",", 
             TagBox["True",
              HoldForm]}], "}"}], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"System`TransformConstructorDump`postProcess", "[", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], "}"}]}], 
            "}"}], "]"}], "]"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox["System`TransformConstructorDump`postProcess",
          HoldForm], ",", 
         TagBox[
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}],
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], 
                 "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"ArrayFlatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", "0", "}"}], ",", 
                   RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], "}"}]}],
               "}"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], 
                   "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                  RowBox[{"Array", "[", 
                   RowBox[{
                    RowBox[{"1", "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", "1", ",", "List"}], 
                   "]"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   TagBox[
                    RowBox[{"Array", "[", 
                    RowBox[{
                    RowBox[{"1", "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", "1", ",", "List"}], 
                    "]"}],
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}], "[", 
                    RowBox[{"1", ",", "1"}], "]"}], "}"}], "}"}],
                    HoldForm], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}], "[", 
                    RowBox[{"1", ",", "1"}], "]"}],
                    HoldForm], ",", 
                    TagBox["1",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"{", "1", "}"}],
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", "1", "}"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", "1", "}"}], "}"}]}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", "1", "}"}], "}"}]}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"ReplacePart", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], 
                   "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"TransformationFunction", "[", 
           RowBox[{"(", 
            TagBox[GridBox[{
               {"1", "0", "0"},
               {"0", "1", "0"},
               {"0", "0", "1"}
              },
              AutoDelete->False,
              
              GridBoxDividers->{
               "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             #& ], ")"}], "]"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {"1", "0", "0"},
              {"0", "1", "0"},
              {"0", "0", "1"}
             },
             AutoDelete->False,
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
               "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            #& ], ")"}], "]"}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"1", "0", "0"},
                 {"0", "1", "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], "]"}], "===", "TransformationFunction"}], 
          ",", 
          RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
           RowBox[{"TransformationFunction", "[", 
            RowBox[{"(", 
             TagBox[GridBox[{
                {"1", "0", "0"},
                {"0", "1", "0"},
                {"0", "0", "1"}
               },
               AutoDelete->False,
               
               GridBoxDividers->{
                "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                 "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              #& ], ")"}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"TransformationFunction", "[", 
               RowBox[{"(", 
                TagBox[GridBox[{
                   {"1", "0", "0"},
                   {"0", "1", "0"},
                   {"0", "0", "1"}
                  },
                  AutoDelete->False,
                  
                  GridBoxDividers->{
                   "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 #& ], ")"}], "]"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", "Conjugate"}], "]"}]}]}], ",", 
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"1", "0", "0"},
                 {"0", "1", "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"TransformationFunction", "[", 
                   RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], "=!=", "MachinePrecision"}], 
                ",", 
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], ",", "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}]}]}], "]"}]}], "]"}], "]"}], 
             "]"}]}], "]"}]}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Head", "[", 
             RowBox[{"TransformationFunction", "[", 
              RowBox[{"(", 
               TagBox[GridBox[{
                  {"1", "0", "0"},
                  {"0", "1", "0"},
                  {"0", "0", "1"}
                 },
                 AutoDelete->False,
                 
                 GridBoxDividers->{
                  "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                   "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                #& ], ")"}], "]"}], "]"}],
            HoldForm], ",", 
           TagBox["TransformationFunction",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"TransformationFunction", "===", "TransformationFunction"}],
          
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"If", "[", 
         RowBox[{"True", ",", 
          RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
           RowBox[{"TransformationFunction", "[", 
            RowBox[{"(", 
             TagBox[GridBox[{
                {"1", "0", "0"},
                {"0", "1", "0"},
                {"0", "0", "1"}
               },
               AutoDelete->False,
               
               GridBoxDividers->{
                "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                 "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              #& ], ")"}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"TransformationFunction", "[", 
               RowBox[{"(", 
                TagBox[GridBox[{
                   {"1", "0", "0"},
                   {"0", "1", "0"},
                   {"0", "0", "1"}
                  },
                  AutoDelete->False,
                  
                  GridBoxDividers->{
                   "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 #& ], ")"}], "]"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", "Conjugate"}], "]"}]}]}], ",", 
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"1", "0", "0"},
                 {"0", "1", "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"TransformationFunction", "[", 
                   RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], "=!=", "MachinePrecision"}], 
                ",", 
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], ",", "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}]}]}], "]"}]}], "]"}], "]"}], 
             "]"}]}], "]"}]}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {"1", "0", "0"},
              {"0", "1", "0"},
              {"0", "0", "1"}
             },
             AutoDelete->False,
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
               "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            #& ], ")"}], "]"}]}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox["System`TransformConstructorDump`postProcess",
          HoldForm], ",", 
         TagBox[
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {"1", "0", "0"},
              {"0", "1", "0"},
              {"0", "0", "1"}
             },
             AutoDelete->False,
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
               "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            #& ], ")"}], "]"}]}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"TransformationFunction", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", "#1", "]"}], "===", 
               "TransformationFunction"}], ",", 
              RowBox[{
              "System`TransformConstructorDump`postProcess", "/@", "#1"}], 
              ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                 RowBox[{"!", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", 
                ",", 
                RowBox[{"Developer`ToPackedArray", "[", 
                 RowBox[{"Together", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                 "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", "#1", "]"}], "===", 
                "TransformationFunction"}], ",", 
               RowBox[{
               "System`TransformConstructorDump`postProcess", "/@", "#1"}], 
               ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                  RowBox[{"!", 
                   RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", 
                 ",", 
                 RowBox[{"Developer`ToPackedArray", "[", 
                  RowBox[{"Together", "[", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                  "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "===",
              "TransformationFunction"}], ",", 
            RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Developer`PackedArrayQ", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
               RowBox[{"!", 
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Conjugate"}], "]"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"Developer`ToPackedArray", "[", 
               RowBox[{"Together", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                   "=!=", "MachinePrecision"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}],
          
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Head", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["List",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"List", "===", "TransformationFunction"}],
            HoldForm], ",", 
           TagBox["False",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{"False", ",", 
            RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Developer`PackedArrayQ", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
               RowBox[{"!", 
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Conjugate"}], "]"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"Developer`ToPackedArray", "[", 
               RowBox[{"Together", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                   "=!=", "MachinePrecision"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}],
          
          HoldForm], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                "Conjugate"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                 "=!=", "MachinePrecision"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                "Conjugate"}], "]"}]}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Developer`PackedArrayQ", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Conjugate"}], "]"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"!", "True"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox["False",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{"False", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                 "=!=", "MachinePrecision"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"Developer`ToPackedArray", "[", 
           RowBox[{"Together", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Precision", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "=!=",
                "MachinePrecision"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Complex"}], "]"}], ",", 
                RowBox[{"N", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                 RowBox[{"N", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                  "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Precision", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox["\[Infinity]",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"\[Infinity]", "=!=", "MachinePrecision"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"If", "[", 
               RowBox[{"True", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"Together", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}], ",", 
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}], ",", 
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}]}], "}"}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Together", "[", "1", "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}]}], "}"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "1", "]"}],
                HoldForm], ",", 
               TagBox["1",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}],
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Together", "[", "0", "]"}], ",", 
                RowBox[{"Together", "[", "1", "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}]}], "}"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "1", "]"}],
                HoldForm], ",", 
               TagBox["1",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}],
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Together", "[", "0", "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}], ",", 
                RowBox[{"Together", "[", "1", "]"}]}], "}"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "1", "]"}],
                HoldForm], ",", 
               TagBox["1",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"Developer`ToPackedArray", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"TransformationFunction", "[", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"1", "0", "0"},
             {"0", "1", "0"},
             {"0", "0", "1"}
            },
            AutoDelete->False,
            
            GridBoxDividers->{
             "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
              "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           #& ], ")"}], "]"}],
        HoldForm]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           TagBox["System`TransformConstructorDump`M$226756",
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "}"}],
          
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "}"}], 
         "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
            "}"}], "]"}],
          HoldForm], ",", 
         TagBox["False",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "]"}],
          
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"LinearFractionalTransform", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
              ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", "#1"}], "]"}], ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", "#2"}], "]"}], ",", "1"}], "}"}], "]"}], 
           "&"}], ")"}], "@@", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "]"}]}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"Dimensions", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "]"}],
          
          HoldForm], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"LinearFractionalTransform", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
              ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", "#1"}], "]"}], ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", "#2"}], "]"}], ",", "1"}], "}"}], "]"}], 
           "&"}], ")"}], "@@", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}]}],
        HoldForm], ",", 
       TagBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"LinearFractionalTransform", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
              ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", "#1"}], "]"}], ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", "#2"}], "]"}], ",", "1"}], "}"}], "]"}], 
           "&"}], ")"}], "[", 
         RowBox[{"2", ",", "2"}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", "2"}], "]"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", "2"}], "]"}], ",", "1"}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", "2"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}],
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", "2"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["False",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "]"}],
          
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"VectorQ", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"VectorQ", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{
           RowBox[{"System`TransformConstructorDump`scalarQ", "[", "1", "]"}],
            "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "===", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}]}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "=!=", 
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}]}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                 "]"}], "\[Equal]", 
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}], ")"}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimr"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
               "\[Equal]", 
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimc"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ")"}]}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox["System`TransformConstructorDump`scalarQ",
              HoldForm], ",", 
             TagBox[
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MatchQ", "[", 
                 RowBox[{"#1", ",", 
                  RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}], "&"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MatchQ", "[", 
                 RowBox[{"#1", ",", 
                  RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}], "&"}], 
              ")"}], "[", "1", "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"!", 
             RowBox[{"MatchQ", "[", 
              RowBox[{"1", ",", 
               RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"MatchQ", "[", 
               RowBox[{"1", ",", 
                RowBox[{"_List", "|", "_SparseArray"}]}], "]"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"!", "False"}],
            HoldForm], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "===", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}]}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "=!=", 
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}]}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                 "]"}], "\[Equal]", 
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}], ")"}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimr"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "===", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", "}"}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "=!=", 
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}]}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                 "]"}], "\[Equal]", 
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], "=!=", 
                 RowBox[{"{", 
                  RowBox[{"{", "}"}], "}"}]}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Length", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                   "]"}],
                  HoldForm], ",", 
                 TagBox["2",
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Length", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox["2",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"2", "\[Equal]", "2"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox["True",
              HoldForm]}], "}"}], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
               "\[Equal]", 
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimc"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"2", "\[Equal]", "2"}],
              HoldForm], ",", 
             TagBox["True",
              HoldForm]}], "}"}], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"System`TransformConstructorDump`postProcess", "[", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
               ",", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], "}"}]}], 
            "}"}], "]"}], "]"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox["System`TransformConstructorDump`postProcess",
          HoldForm], ",", 
         TagBox[
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}],
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], 
                 "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"ArrayFlatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", "0", "}"}], ",", 
                   RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], "}"}]}],
               "}"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], 
                   "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                  RowBox[{"Array", "[", 
                   RowBox[{
                    RowBox[{"1", "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", "1", ",", "List"}], 
                   "]"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   TagBox[
                    RowBox[{"Array", "[", 
                    RowBox[{
                    RowBox[{"1", "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", "1", ",", "List"}], 
                    "]"}],
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}], "[", 
                    RowBox[{"1", ",", "1"}], "]"}], "}"}], "}"}],
                    HoldForm], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}], "[", 
                    RowBox[{"1", ",", "1"}], "]"}],
                    HoldForm], ",", 
                    TagBox["1",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"{", "1", "}"}],
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", "1", "}"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", "1", "}"}], "}"}]}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", "1", "}"}], "}"}]}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"ReplacePart", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], 
                   "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"TransformationFunction", "[", 
           RowBox[{"(", 
            TagBox[GridBox[{
               {
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
               {
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
               {"0", "0", "1"}
              },
              AutoDelete->False,
              
              GridBoxDividers->{
               "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             #& ], ")"}], "]"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
              {
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
              {"0", "0", "1"}
             },
             AutoDelete->False,
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
               "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            #& ], ")"}], "]"}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                 {
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], "]"}], "===", "TransformationFunction"}], 
          ",", 
          RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
           RowBox[{"TransformationFunction", "[", 
            RowBox[{"(", 
             TagBox[GridBox[{
                {
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                {
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                {"0", "0", "1"}
               },
               AutoDelete->False,
               
               GridBoxDividers->{
                "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                 "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              #& ], ")"}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"TransformationFunction", "[", 
               RowBox[{"(", 
                TagBox[GridBox[{
                   {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                   {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                   {"0", "0", "1"}
                  },
                  AutoDelete->False,
                  
                  GridBoxDividers->{
                   "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 #& ], ")"}], "]"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", "Conjugate"}], "]"}]}]}], ",", 
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                 {
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"TransformationFunction", "[", 
                   RowBox[{"(", 
                    TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], "=!=", "MachinePrecision"}], 
                ",", 
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], ",", "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}]}]}], "]"}]}], "]"}], "]"}], 
             "]"}]}], "]"}]}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Head", "[", 
             RowBox[{"TransformationFunction", "[", 
              RowBox[{"(", 
               TagBox[GridBox[{
                  {
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                  {
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                  {"0", "0", "1"}
                 },
                 AutoDelete->False,
                 
                 GridBoxDividers->{
                  "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                   "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                #& ], ")"}], "]"}], "]"}],
            HoldForm], ",", 
           TagBox["TransformationFunction",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"TransformationFunction", "===", "TransformationFunction"}],
          
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"If", "[", 
         RowBox[{"True", ",", 
          RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
           RowBox[{"TransformationFunction", "[", 
            RowBox[{"(", 
             TagBox[GridBox[{
                {
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                {
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                {"0", "0", "1"}
               },
               AutoDelete->False,
               
               GridBoxDividers->{
                "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                 "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              #& ], ")"}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"TransformationFunction", "[", 
               RowBox[{"(", 
                TagBox[GridBox[{
                   {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                   {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                   {"0", "0", "1"}
                  },
                  AutoDelete->False,
                  
                  GridBoxDividers->{
                   "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 #& ], ")"}], "]"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", "Conjugate"}], "]"}]}]}], ",", 
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                 {
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"TransformationFunction", "[", 
                   RowBox[{"(", 
                    TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], "=!=", "MachinePrecision"}], 
                ",", 
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], ",", "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}]}]}], "]"}]}], "]"}], "]"}], 
             "]"}]}], "]"}]}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
              {
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
              {"0", "0", "1"}
             },
             AutoDelete->False,
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
               "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            #& ], ")"}], "]"}]}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox["System`TransformConstructorDump`postProcess",
          HoldForm], ",", 
         TagBox[
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
              {
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
              {"0", "0", "1"}
             },
             AutoDelete->False,
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
               "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            #& ], ")"}], "]"}]}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"TransformationFunction", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", "#1", "]"}], "===", 
               "TransformationFunction"}], ",", 
              RowBox[{
              "System`TransformConstructorDump`postProcess", "/@", "#1"}], 
              ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                 RowBox[{"!", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", 
                ",", 
                RowBox[{"Developer`ToPackedArray", "[", 
                 RowBox[{"Together", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                 "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", "#1", "]"}], "===", 
                "TransformationFunction"}], ",", 
               RowBox[{
               "System`TransformConstructorDump`postProcess", "/@", "#1"}], 
               ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                  RowBox[{"!", 
                   RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", 
                 ",", 
                 RowBox[{"Developer`ToPackedArray", "[", 
                  RowBox[{"Together", "[", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                  "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "===",
              "TransformationFunction"}], ",", 
            RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Developer`PackedArrayQ", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
               RowBox[{"!", 
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Conjugate"}], "]"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"Developer`ToPackedArray", "[", 
               RowBox[{"Together", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                   "=!=", "MachinePrecision"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}],
          
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Head", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["List",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"List", "===", "TransformationFunction"}],
            HoldForm], ",", 
           TagBox["False",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{"False", ",", 
            RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Developer`PackedArrayQ", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
               RowBox[{"!", 
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Conjugate"}], "]"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"Developer`ToPackedArray", "[", 
               RowBox[{"Together", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                   "=!=", "MachinePrecision"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}],
          
          HoldForm], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                "Conjugate"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                 "=!=", "MachinePrecision"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                "Conjugate"}], "]"}]}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Developer`PackedArrayQ", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Conjugate"}], "]"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"!", "True"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox["False",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{"False", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                 "=!=", "MachinePrecision"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"Developer`ToPackedArray", "[", 
           RowBox[{"Together", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Precision", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "=!=",
                "MachinePrecision"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Complex"}], "]"}], ",", 
                RowBox[{"N", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                 RowBox[{"N", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                  "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Precision", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox["\[Infinity]",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"\[Infinity]", "=!=", "MachinePrecision"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"If", "[", 
               RowBox[{"True", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"Together", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
               "]"}], ",", 
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
               "]"}], ",", 
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}]}], "}"}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
               "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Together", "[", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], ",", 
                RowBox[{"Together", "[", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}]}], "}"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}],
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
               "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Together", "[", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], ",", 
                RowBox[{"Together", "[", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}]}], "}"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"Sin", "[", "\[Theta]", "]"}],
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"Cos", "[", "\[Theta]", "]"}],
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}],
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Together", "[", "0", "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}], ",", 
                RowBox[{"Together", "[", "1", "]"}]}], "}"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "1", "]"}],
                HoldForm], ",", 
               TagBox["1",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"Developer`ToPackedArray", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"TransformationFunction", "[", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
             {
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
             {"0", "0", "1"}
            },
            AutoDelete->False,
            
            GridBoxDividers->{
             "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
              "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           #& ], ")"}], "]"}],
        HoldForm]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"-", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0"}], ",", 
            RowBox[{"-", "0"}]}], "}"}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"-", "0"}],
            HoldForm], ",", 
           TagBox["0",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"-", "0"}],
            HoldForm], ",", 
           TagBox["0",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"TranslationTransform", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"VectorQ", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"Length", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["2",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"IdentityMatrix", "[", "2", "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["False",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"VectorQ", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
              RowBox[{"{", 
               RowBox[{"{", "}"}], "}"}]}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "\[Equal]", 
              
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}], ")"}], "||", 
           RowBox[{"System`TransformConstructorDump`vMessage", "[", 
            RowBox[{
             StyleBox[
              RowBox[{"LinearFractionalTransform", "::", "idimr"}], 
              "MessageName"], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
              RowBox[{"{", 
               RowBox[{"{", "}"}], "}"}]}], "&&", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "\[Equal]", 
              
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
               RowBox[{"{", 
                RowBox[{"{", "}"}], "}"}]}],
              HoldForm], ",", 
             TagBox["True",
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"2", "\[Equal]", "2"}],
              HoldForm], ",", 
             TagBox["True",
              HoldForm]}], "}"}], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"First", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}]}], 
            "]"}], ",", "1"}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"First", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["2",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", "2"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"LinearFractionalTransform", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["False",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"MatrixQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"VectorQ", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"VectorQ", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{
           RowBox[{"System`TransformConstructorDump`scalarQ", "[", "1", "]"}],
            "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "===", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}]}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}]}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                "\[Equal]", 
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}], ")"}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimr"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
               "\[Equal]", 
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimc"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ")"}]}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox["System`TransformConstructorDump`scalarQ",
              HoldForm], ",", 
             TagBox[
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MatchQ", "[", 
                 RowBox[{"#1", ",", 
                  RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}], "&"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MatchQ", "[", 
                 RowBox[{"#1", ",", 
                  RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}], "&"}], 
              ")"}], "[", "1", "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"!", 
             RowBox[{"MatchQ", "[", 
              RowBox[{"1", ",", 
               RowBox[{"_List", "|", "_SparseArray"}]}], "]"}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"MatchQ", "[", 
               RowBox[{"1", ",", 
                RowBox[{"_List", "|", "_SparseArray"}]}], "]"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"!", "False"}],
            HoldForm], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "===", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "}"}]}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}]}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                "\[Equal]", 
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}], ")"}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimr"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "===", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", "}"}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
                RowBox[{"{", 
                 RowBox[{"{", "}"}], "}"}]}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                "\[Equal]", 
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}]}]}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "=!=", 
                 RowBox[{"{", 
                  RowBox[{"{", "}"}], "}"}]}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Length", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox["2",
                  HoldForm]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Length", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox["2",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"2", "\[Equal]", "2"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox["True",
              HoldForm]}], "}"}], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
               "\[Equal]", 
              RowBox[{"Length", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "||", 
             RowBox[{"System`TransformConstructorDump`vMessage", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"LinearFractionalTransform", "::", "idimc"}], 
                "MessageName"], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Length", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}],
                HoldForm], ",", 
               TagBox["2",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"2", "\[Equal]", "2"}],
              HoldForm], ",", 
             TagBox["True",
              HoldForm]}], "}"}], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"System`TransformConstructorDump`postProcess", "[", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}]}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], "}"}]}], 
            "}"}], "]"}], "]"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox["System`TransformConstructorDump`postProcess",
          HoldForm], ",", 
         TagBox[
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}],
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], 
                 "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"ArrayFlatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", "0", "}"}], ",", 
                   RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], "}"}]}],
               "}"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], 
                   "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                  RowBox[{"Array", "[", 
                   RowBox[{
                    RowBox[{"1", "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", "1", ",", "List"}], 
                   "]"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   TagBox[
                    RowBox[{"Array", "[", 
                    RowBox[{
                    RowBox[{"1", "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", "1", ",", "List"}], 
                    "]"}],
                    HoldForm], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}], "[", 
                    RowBox[{"1", ",", "1"}], "]"}], "}"}], "}"}],
                    HoldForm], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "&"}], ")"}], "[", 
                    RowBox[{"1", ",", "1"}], "]"}],
                    HoldForm], ",", 
                    TagBox["1",
                    HoldForm]}], "}"}], ",", 
                    TagBox[
                    RowBox[{"{", "1", "}"}],
                    HoldForm]}], "}"}], ",", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", "1", "}"}], "}"}],
                    HoldForm]}], "}"}], ",", 
                 TagBox[
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", "1", "}"}], "}"}]}],
                  HoldForm], ",", 
                 TagBox[
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", "1", "}"}], "}"}]}],
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}],
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"ReplacePart", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "1"}], 
                   "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"TransformationFunction", "[", 
           RowBox[{"(", 
            TagBox[GridBox[{
               {"1", "0", "0"},
               {"0", "1", "0"},
               {"0", "0", "1"}
              },
              AutoDelete->False,
              
              GridBoxDividers->{
               "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             #& ], ")"}], "]"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {"1", "0", "0"},
              {"0", "1", "0"},
              {"0", "0", "1"}
             },
             AutoDelete->False,
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
               "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            #& ], ")"}], "]"}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"1", "0", "0"},
                 {"0", "1", "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], "]"}], "===", "TransformationFunction"}], 
          ",", 
          RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
           RowBox[{"TransformationFunction", "[", 
            RowBox[{"(", 
             TagBox[GridBox[{
                {"1", "0", "0"},
                {"0", "1", "0"},
                {"0", "0", "1"}
               },
               AutoDelete->False,
               
               GridBoxDividers->{
                "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                 "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              #& ], ")"}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"TransformationFunction", "[", 
               RowBox[{"(", 
                TagBox[GridBox[{
                   {"1", "0", "0"},
                   {"0", "1", "0"},
                   {"0", "0", "1"}
                  },
                  AutoDelete->False,
                  
                  GridBoxDividers->{
                   "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 #& ], ")"}], "]"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", "Conjugate"}], "]"}]}]}], ",", 
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"1", "0", "0"},
                 {"0", "1", "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"TransformationFunction", "[", 
                   RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], "=!=", "MachinePrecision"}], 
                ",", 
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], ",", "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}]}]}], "]"}]}], "]"}], "]"}], 
             "]"}]}], "]"}]}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Head", "[", 
             RowBox[{"TransformationFunction", "[", 
              RowBox[{"(", 
               TagBox[GridBox[{
                  {"1", "0", "0"},
                  {"0", "1", "0"},
                  {"0", "0", "1"}
                 },
                 AutoDelete->False,
                 
                 GridBoxDividers->{
                  "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                   "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                #& ], ")"}], "]"}], "]"}],
            HoldForm], ",", 
           TagBox["TransformationFunction",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"TransformationFunction", "===", "TransformationFunction"}],
          
          HoldForm], ",", 
         TagBox["True",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"If", "[", 
         RowBox[{"True", ",", 
          RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
           RowBox[{"TransformationFunction", "[", 
            RowBox[{"(", 
             TagBox[GridBox[{
                {"1", "0", "0"},
                {"0", "1", "0"},
                {"0", "0", "1"}
               },
               AutoDelete->False,
               
               GridBoxDividers->{
                "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                 "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              #& ], ")"}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"TransformationFunction", "[", 
               RowBox[{"(", 
                TagBox[GridBox[{
                   {"1", "0", "0"},
                   {"0", "1", "0"},
                   {"0", "0", "1"}
                  },
                  AutoDelete->False,
                  
                  GridBoxDividers->{
                   "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 #& ], ")"}], "]"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", "Conjugate"}], "]"}]}]}], ",", 
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {"1", "0", "0"},
                 {"0", "1", "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"TransformationFunction", "[", 
                   RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], "=!=", "MachinePrecision"}], 
                ",", 
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], ",", "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"TransformationFunction", "[", 
                    RowBox[{"(", 
                    TagBox[GridBox[{
                    {"1", "0", "0"},
                    {"0", "1", "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    #& ], ")"}], "]"}], "]"}]}]}], "]"}]}], "]"}], "]"}], 
             "]"}]}], "]"}]}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {"1", "0", "0"},
              {"0", "1", "0"},
              {"0", "0", "1"}
             },
             AutoDelete->False,
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
               "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            #& ], ")"}], "]"}]}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox["System`TransformConstructorDump`postProcess",
          HoldForm], ",", 
         TagBox[
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "#1", "]"}], "===", 
              "TransformationFunction"}], ",", 
             RowBox[{
             "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                RowBox[{"!", 
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
               RowBox[{"Developer`ToPackedArray", "[", 
                RowBox[{"Together", "[", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {"1", "0", "0"},
              {"0", "1", "0"},
              {"0", "0", "1"}
             },
             AutoDelete->False,
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
               "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            #& ], ")"}], "]"}]}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"TransformationFunction", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", "#1", "]"}], "===", 
               "TransformationFunction"}], ",", 
              RowBox[{
              "System`TransformConstructorDump`postProcess", "/@", "#1"}], 
              ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                 RowBox[{"!", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", 
                ",", 
                RowBox[{"Developer`ToPackedArray", "[", 
                 RowBox[{"Together", "[", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                 "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", "#1", "]"}], "===", 
                "TransformationFunction"}], ",", 
               RowBox[{
               "System`TransformConstructorDump`postProcess", "/@", "#1"}], 
               ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
                  RowBox[{"!", 
                   RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", 
                 ",", 
                 RowBox[{"Developer`ToPackedArray", "[", 
                  RowBox[{"Together", "[", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                    "MachinePrecision"}], ",", "#1", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
                  "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "===",
              "TransformationFunction"}], ",", 
            RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Developer`PackedArrayQ", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
               RowBox[{"!", 
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Conjugate"}], "]"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"Developer`ToPackedArray", "[", 
               RowBox[{"Together", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                   "=!=", "MachinePrecision"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}],
          
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Head", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["List",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"List", "===", "TransformationFunction"}],
            HoldForm], ",", 
           TagBox["False",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{"False", ",", 
            RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Developer`PackedArrayQ", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
               RowBox[{"!", 
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Conjugate"}], "]"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"Developer`ToPackedArray", "[", 
               RowBox[{"Together", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Precision", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                   "=!=", "MachinePrecision"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}],
          
          HoldForm], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                "Conjugate"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                 "=!=", "MachinePrecision"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                "Conjugate"}], "]"}]}]}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Developer`PackedArrayQ", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Conjugate"}], "]"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"!", "True"}],
              HoldForm], ",", 
             TagBox["False",
              HoldForm]}], "}"}], ",", 
           TagBox["False",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{"False", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                 "=!=", "MachinePrecision"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"Developer`ToPackedArray", "[", 
           RowBox[{"Together", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Precision", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "=!=",
                "MachinePrecision"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Complex"}], "]"}], ",", 
                RowBox[{"N", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                 RowBox[{"N", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                  "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 TagBox[
                  RowBox[{"Precision", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
                  HoldForm], ",", 
                 TagBox["\[Infinity]",
                  HoldForm]}], "}"}], ",", 
               TagBox[
                RowBox[{"\[Infinity]", "=!=", "MachinePrecision"}],
                HoldForm], ",", 
               TagBox["True",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"If", "[", 
               RowBox[{"True", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"Together", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}], ",", 
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}], ",", 
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}]}], "}"}],
            HoldForm], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Together", "[", "1", "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}]}], "}"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "1", "]"}],
                HoldForm], ",", 
               TagBox["1",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}],
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Together", "[", "0", "]"}], ",", 
                RowBox[{"Together", "[", "1", "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}]}], "}"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "1", "]"}],
                HoldForm], ",", 
               TagBox["1",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}],
              HoldForm]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Together", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Together", "[", "0", "]"}], ",", 
                RowBox[{"Together", "[", "0", "]"}], ",", 
                RowBox[{"Together", "[", "1", "]"}]}], "}"}],
              HoldForm], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "0", "]"}],
                HoldForm], ",", 
               TagBox["0",
                HoldForm]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               TagBox[
                RowBox[{"Together", "[", "1", "]"}],
                HoldForm], ",", 
               TagBox["1",
                HoldForm]}], "}"}], ",", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}],
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"Developer`ToPackedArray", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"TransformationFunction", "[", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"1", "0", "0"},
             {"0", "1", "0"},
             {"0", "0", "1"}
            },
            AutoDelete->False,
            
            GridBoxDividers->{
             "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
              "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           #& ], ")"}], "]"}],
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{
       RowBox[{"TransformationFunction", "[", 
        RowBox[{"(", 
         TagBox[GridBox[{
            {"1", "0", "0"},
            {"0", "1", "0"},
            {"0", "0", "1"}
           },
           AutoDelete->False,
           
           GridBoxDividers->{
            "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
             "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          #& ], ")"}], "]"}], ".", 
       RowBox[{"TransformationFunction", "[", 
        RowBox[{"(", 
         TagBox[GridBox[{
            {
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
            {
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
            {"0", "0", "1"}
           },
           AutoDelete->False,
           
           GridBoxDividers->{
            "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
             "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          #& ], ")"}], "]"}], ".", 
       RowBox[{"TransformationFunction", "[", 
        RowBox[{"(", 
         TagBox[GridBox[{
            {"1", "0", "0"},
            {"0", "1", "0"},
            {"0", "0", "1"}
           },
           AutoDelete->False,
           
           GridBoxDividers->{
            "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
             "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          #& ], ")"}], "]"}]}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"TransformationFunction", "[", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
           {
            RowBox[{"Sin", "[", "\[Theta]", "]"}], 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
           {"0", "0", "1"}
          },
          AutoDelete->False,
          
          GridBoxDividers->{
           "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
            "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         #& ], ")"}], "]"}],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#1", "]"}], "===", "TransformationFunction"}],
          ",", 
         RowBox[{"System`TransformConstructorDump`postProcess", "/@", "#1"}], 
         ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
            RowBox[{"!", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
           RowBox[{"Developer`ToPackedArray", "[", 
            RowBox[{"Together", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                "MachinePrecision"}], ",", "#1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                 RowBox[{"N", "[", "#1", "]"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                  RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
            "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
     RowBox[{"TransformationFunction", "[", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
          {
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
          {"0", "0", "1"}
         },
         AutoDelete->False,
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
           "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        #& ], ")"}], "]"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", 
        RowBox[{"TransformationFunction", "[", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
             {
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
             {"0", "0", "1"}
            },
            AutoDelete->False,
            
            GridBoxDividers->{
             "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
              "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           #& ], ")"}], "]"}], "]"}], "===", "TransformationFunction"}], ",", 
      
      RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
       RowBox[{"TransformationFunction", "[", 
        RowBox[{"(", 
         TagBox[GridBox[{
            {
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
            {
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
            {"0", "0", "1"}
           },
           AutoDelete->False,
           
           GridBoxDividers->{
            "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
             "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          #& ], ")"}], "]"}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Developer`PackedArrayQ", "[", 
          RowBox[{"TransformationFunction", "[", 
           RowBox[{"(", 
            TagBox[GridBox[{
               {
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
               {
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
               {"0", "0", "1"}
              },
              AutoDelete->False,
              
              GridBoxDividers->{
               "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             #& ], ")"}], "]"}], "]"}], "||", 
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                 {
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], ",", "Conjugate"}], "]"}]}]}], ",", 
        RowBox[{"TransformationFunction", "[", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
             {
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
             {"0", "0", "1"}
            },
            AutoDelete->False,
            
            GridBoxDividers->{
             "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
              "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           #& ], ")"}], "]"}], ",", 
        RowBox[{"Developer`ToPackedArray", "[", 
         RowBox[{"Together", "[", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Precision", "[", 
              RowBox[{"TransformationFunction", "[", 
               RowBox[{"(", 
                TagBox[GridBox[{
                   {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                   {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                   {"0", "0", "1"}
                  },
                  AutoDelete->False,
                  
                  GridBoxDividers->{
                   "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 #& ], ")"}], "]"}], "]"}], "=!=", "MachinePrecision"}], ",", 
            
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                 {
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", "Complex"}], "]"}], ",", 
              RowBox[{"N", "[", 
               RowBox[{"TransformationFunction", "[", 
                RowBox[{"(", 
                 TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                   },
                   AutoDelete->False,
                   
                   GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  #& ], ")"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
               RowBox[{"N", "[", 
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], "]"}]}]}], "]"}]}], "]"}], "]"}], 
         "]"}]}], "]"}]}], "]"}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"Head", "[", 
         RowBox[{"TransformationFunction", "[", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {
               RowBox[{"Cos", "[", "\[Theta]", "]"}], 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
              {
               RowBox[{"Sin", "[", "\[Theta]", "]"}], 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
              {"0", "0", "1"}
             },
             AutoDelete->False,
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
               "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            #& ], ")"}], "]"}], "]"}],
        HoldForm], ",", 
       TagBox["TransformationFunction",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"TransformationFunction", "===", "TransformationFunction"}],
      HoldForm], ",", 
     TagBox["True",
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"If", "[", 
     RowBox[{"True", ",", 
      RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
       RowBox[{"TransformationFunction", "[", 
        RowBox[{"(", 
         TagBox[GridBox[{
            {
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
            {
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
            {"0", "0", "1"}
           },
           AutoDelete->False,
           
           GridBoxDividers->{
            "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
             "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          #& ], ")"}], "]"}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Developer`PackedArrayQ", "[", 
          RowBox[{"TransformationFunction", "[", 
           RowBox[{"(", 
            TagBox[GridBox[{
               {
                RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
               {
                RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
               {"0", "0", "1"}
              },
              AutoDelete->False,
              
              GridBoxDividers->{
               "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             #& ], ")"}], "]"}], "]"}], "||", 
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                 {
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], ",", "Conjugate"}], "]"}]}]}], ",", 
        RowBox[{"TransformationFunction", "[", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
             {
              RowBox[{"Sin", "[", "\[Theta]", "]"}], 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
             {"0", "0", "1"}
            },
            AutoDelete->False,
            
            GridBoxDividers->{
             "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
              "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           #& ], ")"}], "]"}], ",", 
        RowBox[{"Developer`ToPackedArray", "[", 
         RowBox[{"Together", "[", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Precision", "[", 
              RowBox[{"TransformationFunction", "[", 
               RowBox[{"(", 
                TagBox[GridBox[{
                   {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                   {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                   {"0", "0", "1"}
                  },
                  AutoDelete->False,
                  
                  GridBoxDividers->{
                   "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 #& ], ")"}], "]"}], "]"}], "=!=", "MachinePrecision"}], ",", 
            
            RowBox[{"TransformationFunction", "[", 
             RowBox[{"(", 
              TagBox[GridBox[{
                 {
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                 {
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                 {"0", "0", "1"}
                },
                AutoDelete->False,
                
                GridBoxDividers->{
                 "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                  "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               #& ], ")"}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], ",", "Complex"}], "]"}], ",", 
              RowBox[{"N", "[", 
               RowBox[{"TransformationFunction", "[", 
                RowBox[{"(", 
                 TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                   },
                   AutoDelete->False,
                   
                   GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  #& ], ")"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
               RowBox[{"N", "[", 
                RowBox[{"TransformationFunction", "[", 
                 RowBox[{"(", 
                  TagBox[GridBox[{
                    {
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
                    {
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
                    {"0", "0", "1"}
                    },
                    AutoDelete->False,
                    
                    GridBoxDividers->{
                    "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
                    "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                   #& ], ")"}], "]"}], "]"}]}]}], "]"}]}], "]"}], "]"}], 
         "]"}]}], "]"}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
     RowBox[{"TransformationFunction", "[", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
          {
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
          {"0", "0", "1"}
         },
         AutoDelete->False,
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
           "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        #& ], ")"}], "]"}]}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox["System`TransformConstructorDump`postProcess",
      HoldForm], ",", 
     TagBox[
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#1", "]"}], "===", "TransformationFunction"}],
          ",", 
         RowBox[{"System`TransformConstructorDump`postProcess", "/@", "#1"}], 
         ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
            RowBox[{"!", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
           RowBox[{"Developer`ToPackedArray", "[", 
            RowBox[{"Together", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                "MachinePrecision"}], ",", "#1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                 RowBox[{"N", "[", "#1", "]"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                  RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
            "]"}]}], "]"}]}], "]"}], "&"}],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#1", "]"}], "===", "TransformationFunction"}],
          ",", 
         RowBox[{"System`TransformConstructorDump`postProcess", "/@", "#1"}], 
         ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
            RowBox[{"!", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
           RowBox[{"Developer`ToPackedArray", "[", 
            RowBox[{"Together", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                "MachinePrecision"}], ",", "#1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"FreeQ", "[", 
                  RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                 RowBox[{"N", "[", "#1", "]"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                  RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
            "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "/@", 
     RowBox[{"TransformationFunction", "[", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
          {
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
          {"0", "0", "1"}
         },
         AutoDelete->False,
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
           "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        #& ], ")"}], "]"}]}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"TransformationFunction", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "#1", "]"}], "===", 
           "TransformationFunction"}], ",", 
          RowBox[{"System`TransformConstructorDump`postProcess", "/@", "#1"}],
           ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
             RowBox[{"!", 
              RowBox[{"FreeQ", "[", 
               RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
            RowBox[{"Developer`ToPackedArray", "[", 
             RowBox[{"Together", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                 "MachinePrecision"}], ",", "#1", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                  RowBox[{"N", "[", "#1", "]"}], ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                   RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
             "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}],
    HoldForm], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "#1", "]"}], "===", 
            "TransformationFunction"}], ",", 
           RowBox[{
           "System`TransformConstructorDump`postProcess", "/@", "#1"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Developer`PackedArrayQ", "[", "#1", "]"}], "||", 
              RowBox[{"!", 
               RowBox[{"FreeQ", "[", 
                RowBox[{"#1", ",", "Conjugate"}], "]"}]}]}], ",", "#1", ",", 
             RowBox[{"Developer`ToPackedArray", "[", 
              RowBox[{"Together", "[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Precision", "[", "#1", "]"}], "=!=", 
                  "MachinePrecision"}], ",", "#1", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"FreeQ", "[", 
                    RowBox[{"#1", ",", "Complex"}], "]"}], ",", 
                   RowBox[{"N", "[", "#1", "]"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                    RowBox[{"N", "[", "#1", "]"}]}]}], "]"}]}], "]"}], "]"}], 
              "]"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "===", 
         "TransformationFunction"}], ",", 
        RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Developer`PackedArrayQ", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
           RowBox[{"!", 
            RowBox[{"FreeQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              "Conjugate"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
          RowBox[{"Developer`ToPackedArray", "[", 
           RowBox[{"Together", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Precision", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "=!=",
                "MachinePrecision"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Complex"}], "]"}], ",", 
                RowBox[{"N", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                 RowBox[{"N", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                  "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}],
      HoldForm], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"Head", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["List",
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"List", "===", "TransformationFunction"}],
        HoldForm], ",", 
       TagBox["False",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"If", "[", 
       RowBox[{"False", ",", 
        RowBox[{"System`TransformConstructorDump`postProcess", "/@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Developer`PackedArrayQ", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
           RowBox[{"!", 
            RowBox[{"FreeQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              "Conjugate"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
          RowBox[{"Developer`ToPackedArray", "[", 
           RowBox[{"Together", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Precision", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "=!=",
                "MachinePrecision"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                  "Complex"}], "]"}], ",", 
                RowBox[{"N", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
                 RowBox[{"N", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                  "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}]}], "]"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Developer`PackedArrayQ", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            "Conjugate"}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"Developer`ToPackedArray", "[", 
         RowBox[{"Together", "[", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Precision", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "=!=",
              "MachinePrecision"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                "Complex"}], "]"}], ",", 
              RowBox[{"N", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
              ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
               RowBox[{"N", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}],
      HoldForm], ",", 
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{
         RowBox[{"Developer`PackedArrayQ", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "||", 
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            "Conjugate"}], "]"}]}]}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"Developer`PackedArrayQ", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox["False",
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"FreeQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              "Conjugate"}], "]"}],
            HoldForm], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"!", "True"}],
          HoldForm], ",", 
         TagBox["False",
          HoldForm]}], "}"}], ",", 
       TagBox["False",
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"If", "[", 
       RowBox[{"False", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"Developer`ToPackedArray", "[", 
         RowBox[{"Together", "[", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Precision", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "=!=",
              "MachinePrecision"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                "Complex"}], "]"}], ",", 
              RowBox[{"N", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
              ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
               RowBox[{"N", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                "]"}]}]}], "]"}]}], "]"}], "]"}], "]"}]}], "]"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"Developer`ToPackedArray", "[", 
       RowBox[{"Together", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Precision", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], "=!=",
            "MachinePrecision"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"FreeQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
              "Complex"}], "]"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             RowBox[{"N", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}]}],
            "]"}]}], "]"}], "]"}], "]"}],
      HoldForm], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TagBox[
              RowBox[{"Precision", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
              HoldForm], ",", 
             TagBox["\[Infinity]",
              HoldForm]}], "}"}], ",", 
           TagBox[
            RowBox[{"\[Infinity]", "=!=", "MachinePrecision"}],
            HoldForm], ",", 
           TagBox["True",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"If", "[", 
           RowBox[{"True", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"FreeQ", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
                "Complex"}], "]"}], ",", 
              RowBox[{"N", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
              ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
               RowBox[{"N", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], 
                "]"}]}]}], "]"}]}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"Together", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
        HoldForm], ",", 
       TagBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Together", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
           "]"}], ",", 
          RowBox[{"Together", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], "]"}], 
          ",", 
          RowBox[{"Together", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}]}], "}"}],
        HoldForm], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"Together", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], 
           "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Together", "[", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], ",", 
            RowBox[{"Together", "[", 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "]"}], ",", 
            RowBox[{"Together", "[", "0", "]"}]}], "}"}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Together", "[", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}],
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Together", "[", 
             RowBox[{"-", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}],
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Together", "[", "0", "]"}],
            HoldForm], ",", 
           TagBox["0",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}],
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"Together", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Together", "[", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], ",", 
            RowBox[{"Together", "[", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], ",", 
            RowBox[{"Together", "[", "0", "]"}]}], "}"}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Together", "[", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}],
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Together", "[", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}],
            HoldForm], ",", 
           TagBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}],
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Together", "[", "0", "]"}],
            HoldForm], ",", 
           TagBox["0",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}],
          HoldForm]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TagBox[
          RowBox[{"Together", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}],
          HoldForm], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Together", "[", "0", "]"}], ",", 
            RowBox[{"Together", "[", "0", "]"}], ",", 
            RowBox[{"Together", "[", "1", "]"}]}], "}"}],
          HoldForm], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Together", "[", "0", "]"}],
            HoldForm], ",", 
           TagBox["0",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Together", "[", "0", "]"}],
            HoldForm], ",", 
           TagBox["0",
            HoldForm]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           TagBox[
            RowBox[{"Together", "[", "1", "]"}],
            HoldForm], ",", 
           TagBox["1",
            HoldForm]}], "}"}], ",", 
         TagBox[
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}],
          HoldForm]}], "}"}], ",", 
       TagBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
        HoldForm]}], "}"}], ",", 
     TagBox[
      RowBox[{"Developer`ToPackedArray", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}],
      HoldForm], ",", 
     TagBox[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"TransformationFunction", "[", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {
          RowBox[{"Cos", "[", "\[Theta]", "]"}], 
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
         {
          RowBox[{"Sin", "[", "\[Theta]", "]"}], 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
         {"0", "0", "1"}
        },
        AutoDelete->False,
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
          "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       #& ], ")"}], "]"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.766112707851286*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"92a0f538-05da-4079-ae54-271e758f9339"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotationTransform", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.766112885930904*^9, 3.7661128892814074`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"426996c0-3901-46ef-b073-e360e3348782"],

Cell[BoxData[
 RowBox[{"RotationTransform", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.76611288955541*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"7d2ffa2a-087d-417d-b219-36d66ecf1534"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotationTransform", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.766112893338307*^9, 3.7661128940858173`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"ab156ef9-851f-4061-ab9a-88edf3802f58"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       RowBox[{"Cos", "[", "a", "]"}], 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "a", "]"}]}], "0"},
      {
       RowBox[{"Sin", "[", "a", "]"}], 
       RowBox[{"Cos", "[", "a", "]"}], "0"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.766112894471875*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"279cc390-fbdf-4ee7-bc62-bf08f6135c33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransformationMatrix", "[", 
  RowBox[{"TransformationFunction", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "a", "]"}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "a", "]"}], ",", 
       RowBox[{"Cos", "[", "a", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[115]:=",ExpressionUUID->"88c371fb-0fb3-48e1-934f-1094eee7b679"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "a", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "a", "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "a", "]"}], ",", 
     RowBox[{"Cos", "[", "a", "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.766112901470284*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"73b7e529-4e17-4923-b941-2c63bf48ebd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotationTransform", "[", 
  RowBox[{"\[Theta]", ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766112917617679*^9, 3.76611292331691*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"02cbc789-8034-4db7-be20-54ece2357450"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       RowBox[{"Cos", "[", "\[Theta]", "]"}], 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       RowBox[{"a", "-", 
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"b", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]},
      {
       RowBox[{"Sin", "[", "\[Theta]", "]"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], 
       RowBox[{"b", "-", 
        RowBox[{"b", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.7661129236423407`*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"6583ed92-ec25-43b0-87dd-78a6424d51f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransformationMatrix", "[", 
  RowBox[{"TransformationFunction", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
       RowBox[{"a", "-", 
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"b", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"b", "-", 
        RowBox[{"b", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[117]:=",ExpressionUUID->"995e62b1-30a9-4c59-ac71-b5265855d88e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"a", "-", 
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"b", "-", 
      RowBox[{"b", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.766112933427413*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"4fa96740-7093-4e7e-9d33-5cbc7d5ac853"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Return", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7661130011513767`*^9, 3.7661130025691032`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"9eb35403-506c-453e-a90c-33bcf50f1aa2"],

Cell[BoxData[
 RowBox[{"Return", "[", "]"}]], "Output",
 CellChangeTimes->{3.7661130028415947`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"5522b858-79d2-4906-81f0-4f501e37e85c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RotationTransform", "[", "\[Theta]", "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7661132912854967`*^9, 3.7661132992275753`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"90a8feca-2cdf-4a51-bf08-319eb12271db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{"b", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"b", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766113299577471*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"afc166d6-0cd2-47ce-b19b-886010cdd51a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{"b", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"b", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[120]:=",ExpressionUUID->"be2975f4-3b93-4086-a5e0-d10e5671cf50"],

Cell[BoxData[
 GraphicsBox[{},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 0.}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766113303456354*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"7d860a45-ba25-4e74-91a9-4c5a53d050be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RotationTransform", "[", 
   FractionBox["\[Pi]", "4"], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.766113456848167*^9, 3.766113478891871*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"1bd904c8-0782-4dbc-89b5-52e5748ba8c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["x", 
     SqrtBox["2"]], "-", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox["x", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766113479674156*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"f88bd3e2-240d-40bb-98d1-021837d1506d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      FractionBox["x", 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", "x", "]"}], 
       SqrtBox["2"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "16"}], " ", "\[Pi]"}], ",", 
     RowBox[{"16", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[122]:=",ExpressionUUID->"dc906d1e-e0bb-4cd9-b60d-961478e1aae7"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
6n9xEdSwyymS+NWe0RqQ3LgsezLVh1jAyS8s6eYisHt5tzNx2EedTSeecjHN
5JjGImLtrs6WSDLXgfkrf88nTpqgcdCNzKksbEK1LfH0GVv8LUu42MHVK/jP
KckOs6TzuZhVNfp1HrH10m2b3h7nIk1/qEtELDMnUuNWMhdnubpl1sTihXbv
s2K4kPR/cs6M2NIzLTkuhIuWwvEpasSXVgc82BrARfRQ84zRs1w4OB7zCFjN
xZXvs2Y8IvY4uGB0vSMXBRO/O2YQl98MWrl9Hhe/rGS1VhAX1S83TrPiQtXb
rlGSuK1zpmqNKRf1Ty3LMgu52HKe0vxPmwvhm2ALPWJxx4f+ZcpcJN5dmptW
wMU8K2nVa1PJnOW0wgfJvvqo1t3sMWvUGVxToxNnuGa8bPpmjVyd0X+r8riY
cnLl4R291vjgo3d+fS4XssfN4+1eWSOa5nLSPYeLGqk/ltRWa+RMGfE0O8PF
++CV0qy71sgI0z3Ylc2F1VyT7auuWyPxyMx7wVlk/n7MV2cuW8OjbF/pmwzS
7/hbB6QLrFESrS1pcYqLSaOGL9JPWaNganWo6wku3IsTJ9odtsZinS+tbse4
+Pt4he3svdY440X9ZJnGxdDTGfc1d1jDZKnUo42HyPnyZc9KW2+N5LS0mIYD
pB6Ps9Lya6xx0afh3Og+Un9L8M4KV2ucYg+skkjkYr31ovVJi60xY5VB6fM4
8v5xnXE5aZ41NnzKfRK7mwvzyUdNqrjW0FT++nNsBxd31OflKtOtofNGc+26
MC6WNyqGrtGxhsvSi8uXBnOxMWu31lJ1a4R/e3huShDJv7WH3+YZ1ghd+fDl
gfVcvJ6xuhXS1hiu3RTS7cvFud4bT+dLWqNDICk7YQ3JU5H+y7FRDl6lnLEf
cOfC9WS89afvHKz54J1pTnIRcPu29upeDqx2SzvELOSi009l+tsuDhQ/drdm
kpws5vMNsl5w8HBbhfZePhcvvvmHHHjCwfb0dRwbkpvo6ZU/Lzdz4Fv4inLT
klzn8XOlGjiQmK+kIk3hYm/nRJfUWg4cDQuypDTJ+zNq85QFVzlosa5c1kFy
ZN906mJsOalvWsH7mGlkvp6fQr9eIvW8uHlzaDLJ44/pv1OKyPOU2+1Y49ZI
ncO471nIQYC61WT7HyQnu+UDPHI5iJsSvNt0wBp7fina7c/mQBDInxPQaY1b
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
/fjf9dxijzwXNip1Nzf0ENtKXZVOJ3PpjZP49I6YblVMjyd9MZDb2v6fZ4jq
UrZZsnHY3/7FW+I74cFt3vpsHBxdwe0ifh/ysXq5GhvhHWbznhFr6J0aXyjH
RkviEcF94u6pNxcvkCBzFEpHlhMHvX2wetEwCxO/OojT/vt+7fTOFR9ZaNpW
83EDMfeRdszWDhY2yf6toxNfvR/Yn97KgpoE3bSfRc6b/82H9++wsMy4Muo4
sfzDW/enXWOB4bRFyZLYgXMgyvciC35Ll66uYJI8NzJ2NOWwIHOhttqAuOTf
fN9Fx1jYX2leHMNgY3GC963X+1nYPLg8u4bOJr+vamYmx7CgeLxJ8TONDYn6
h5+dQlkIct1y6CfpQ93J8iraBhZqmm7nfKSSPpR/GrDwYuHwuFvXDQs2OhRf
jC5czkK/76LeLeZsZAk28ePtWbiZcdhzohkbfceL5bv4LCw/6jsSSmEjhL62
ZjWDhZgpZwLqjMlcHYtO/DFm4bGTbkS/IRsWxy49uj2bhXrnOSPfSN9XGFhl
n1dmQS90d9VDXTbU0z0Nrsuw8DndPC9hDhtbJ1nFDUmwMPQ24KzibLIf+7iG
5T+Z0AhQvB02i40drmtGX/czob5i7OtFMreMH6Mz0nuYqPtu5nR9Junnl2V/
w18xkTys+fekIqkn+uPJhMdMzP8y9vOhLJlXoTLNrIaJ00vW1+tPJXlus7xw
9yoTq52+v104iQ3ZdWYvUkqYyCnvuSAgc393pMY96RwTuh7iI5J/Wdgd9aW6
7AwToUd+yKf/ZGFx+82k6SeZOGn3r2xkiIX5pVxq5hEmRlX/Pdf+xMKcifaZ
S+OYmPLa7trHdyzQWxImh+5g4n1dRcSu1yxsicw+1BTGROAiyufu5yxIxZcE
rNzChJdIe1D+CVmvPbdYdQMTm4Ivb5dtZmFuDCdIxpfs1zQj9sk9FqTdnlyw
9GQi/Ndt3/skR4cv3PBUdWaSc31MNaichbN3u4TUJUyoPk336SlmYeaOV/tD
7Jnosnm3k1rIwprPSZN75jHh43Ly4tLTLHw92xy4W8jEU6NK0dwTLBwturDZ
3oaJFU1SR2SOsKDT4XLFxorU2yE9ZVYsyW2EfWAulYmWKUeU1kWx8Fbv5ndl
MybS7+Jy3DYWzG0S+0uMmbh+Znh91EYWNNlLH4QZMOHOvvDM3oeFQ+FHv/no
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
s7Gn/9F3WW4+z8vFodp+jpWJD6v0fdJnQsszcOj5e4/4EO5Veq/tmTukVBwa
XONhfnb2L13Xovq/tlfY/sNc/PAVK/QuciNXTTQO9fSys0mJrdCriOkhf8Jw
KNdAWOWzzzK990H7x8NBODTMcUNU/tsSvYpmG9h5F4cedLuFG+os0a/d4OK4
7Y1DXwj8QzuiF+k2q5NJOudxiCylNM69tkBXe8YztHEch56GdDH3nlqgr/6b
eNZogUO6pqEymfV/6Gkle2uiaDjUVz91MfbVPP1E0R8SKwmHvfeLd7VzzdPf
cnLmxvPiEJe1lX3c6m86V3XhA4ENBiRv8s6eMjhLN5VrZTk7yYAKrReZXRt+
0Sdol74HdzAg0mffUK/iGXq43921m+UM6OmQ94xj1jR9V5xGqmYaA2qjt69r
JE/SPQdvy4xeZUCn3c3uwpsJ+kGbMKZvDgzIQ+joWf+ccToXa9mjG3sYkGux
5gXmT2N0/rtFjxqlGNCur+Q/PS2j9H2K3bYR29t04pMcPp7xn/SvwYt1Pyq2
6Ssk0YAcpp90j9sk/ht3tuncjnFRpw4P03/Zy3Fd/LVFxxnwTQTeG6KvJjad
rUrcoudrr7ZddflBJ3jfGLe0wXr1UWCLt3OAvtoS8YoPt0XPXXY+OmLTT399
J8mMMWeTrsuiLbj0vY9ede2Lo7z9Jp1gnJlg6tVLbx+23bixsUF3EfvaUlDa
RW9MC1vOgg36IKnMuNarkz5PXhELH1ynu1Q+0eXU+kbv2pl66s2tdTqBUih0
c6ud/v5Fmfsf/Dqd0b/1Ia7rK30NRJ9df7tGj/+2dDH6YxtdbMqrV3f3Gj39
yb0J00Nf6PkZp9f2NP6jn85pe5lg2ER/S3/BTh5ZpXPfEP3kc+oz/TqTYD2P
+yo9vlxfwutpPT2z23rzyNxfOvOw8C7Lrlq60XuHMpz3X/qh+EWrRo0a+siR
+5/EFlboH2+NhMYlVNF3Fxvav728QtdhOcHkKVNJbx9ZCSmcXqY7VGXuflBb
RnfC32262btE/8guruJ1sJROevPZm8dqiT6ZJnFGYLmY7ir7+o1rzSL9gGWf
YWblBzpxePzV052LdN2Lje1u7wvodjcOicemLdDnfa9P30Z59NOWlNOPBBfo
Q3TPPvaRd/Rbk5bqPn5/6CS2t4sGAdl0t9zeatfpeXrDDK9Ry6kMuidbVvdF
m3k6u8Ez46qbafQ6sQkV7Stz9NMV7/aoN6XQbVyk9Bb1ftO95nHv+Y4k0QMv
R/zW3/5F19jeqn2n+Jo+Wselq145Qz/94tfbLp4XdMdHb1pm7k/TGUokbhsd
iaaX6JWrxOhP0b0sbmlErEXQ3R4WPLJdmqD7aQvFPlgIpx9R8esyyhynJ34s
+B4Y94geMUxMCz85Rh8iDA90DD2k33X8pHWMd5RO0nVZ267wp+/+b8GyvmyE
zhAgtDhod5d+XjjhJMOFYfoQ27XiL1rX6dkh9AMqAkP001d6jkkxX6E7jJjO
D14foDP8NLpfcuECfZ3I9HSquo/u99yF3ursQt8DnVt1PD10Bndui/TwY/TX
x46FNth10v3ufP0cOWZF11hW14e4djrDvve9IWNGdJfXZSa44i90hoEh0bNP
d9FvJqh/LdnVSGfwe7jVTFWgt1ITDaw/1NAZ4hPS2EwJdOZ70nw/TlfQGfhF
vSZbFypW3zSZ3rYtoDOAQ6p5UHGFE1eK8pPgRDoDw/s6+oGL+5IzktMczgfR
GBJNFxtqvu+7xXacJ7Q0i8YwrwS+qsw0PjN66r+ZjzQG3RvNDselaKv2DyV6
1ytpDN/mudIWNWhqqkvO4ffraQy9vtO7Zmm0UdnTrjcYWmgM1i1eO6fMaY7T
Cc1L+77SGApzo6kbdrSc/XOvE9Y7aH4/66JmRp1ofQ2vzKY+dNH8DBVZwtE5
WsRg1737F3tpaH73Lt1nF2nPHUgR/DL9tNMjmV3Xgq7SDlQNRx3sGKQBLrOx
T+0WLTr/lJYXGqL5pTTrJLTfp23vGemnCY3Q/OqyTqrUBNL6VlSSZs//pCH9
G6eUNf+jFcTe6bH5OErzWy0/2aEXSrto0XvejHWcZoW79rv66jPawjXtz1nW
EzQrSvUSSnpOu9l0VPDIi0ka6XHZHzeVWBpjWx0beWiKNl8XpKQuFE9rtziF
/yUzQ/Prk1/4oJlI41/5YR/p8os2pFiVpxWaTOth2Fux9HqWFlvif0lG+g3t
dnf98u/u3zSNoa29oVNvaafdBSres87TrBbkCy/+zqSlxfHYRSfM007r493f
U3NpOm85emJ3/qHFOkvVxHW/pzXnVztkNP2h+XGIKJ8pzqfJP+VzLHFaoHml
d54W/FhI4+E9PFI6t0BLpByND5IuofXUzv5x5FqivdcsdG8v/0TTnz6b9yhp
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
      "]]},
    Annotation[#, "Charting`Private`Tag$230363#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-35.54306350526693, 35.54306350526693}, {-35.54306350526693, 
   35.54306350526693}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766113482909094*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"e179efe6-23c0-44cd-8bd6-cf110d93f0e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Composition", "[", 
  RowBox[{
   RowBox[{"RotationTransform", "[", "\[Phi]", "]"}], ",", 
   RowBox[{"RotationTransform", "[", "\[Theta]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766113580175394*^9, 3.766113595335803*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"d9169f18-eba3-46c5-a6fb-a9efb82ad6c3"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "0"},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "0"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.7661135957223454`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"3fe9c8a0-a9fb-4fb4-807b-508804d94eac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransformationMatrix", "[", 
  RowBox[{"TransformationFunction", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[124]:=",ExpressionUUID->"c138af90-05b6-4b53-8743-c708d1b2e4d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.766113612422887*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"7626aecd-645c-4a26-8503-ea0593e364bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[125]:=",ExpressionUUID->"08f939b2-dae8-4a58-8072-d3e759aa1042"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.76611361877561*^9},
 CellLabel->
  "Out[125]//MatrixForm=",ExpressionUUID->"04eeb115-414c-46e3-998d-\
3db750993b8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "@", 
  RowBox[{"Composition", "[", 
   RowBox[{
    RowBox[{"RotationTransform", "[", "\[Phi]", "]"}], ",", 
    RowBox[{"RotationTransform", "[", "\[Theta]", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.766113630197792*^9, 3.766113635250516*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"b59e7458-adf2-4feb-8b2f-9493e15660b2"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], "0"},
      {
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], "0"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.7661136355630617`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"8579b8af-0fb3-4444-9d3a-ff217f1b1905"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RotationTransform", "[", "\[Theta]", "]"}], "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}], "\[Equal]", 
  RowBox[{"\[Lambda]", " ", 
   RowBox[{"f", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.766113658919304*^9, 3.766113674325096*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"71879490-6fdf-4178-9073-57993a515849"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
        {
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
        {"0", "0", "1"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}], "\[Equal]", 
  RowBox[{"\[Lambda]", " ", 
   RowBox[{"f", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.766113674774376*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"cad1eeb8-045d-427d-90dd-e448103bd8d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"RotationTransform", "[", "\[Theta]", "]"}], "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}], "\[Equal]", 
   RowBox[{"\[Lambda]", " ", 
    RowBox[{"f", "[", "x", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766113681265863*^9, 3.766113682901149*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"45f8e755-37fc-4804-810c-f5c38dbac425"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]", " ", 
   RowBox[{"f", "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {
         RowBox[{"Cos", "[", "\[Theta]", "]"}], 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
        {
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
        {"0", "0", "1"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.76611368321504*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"f656f93f-b5d9-4d30-82d7-f567316a37ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"RotationTransform", "[", "\[Theta]", "]"}], "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "\[Equal]", 
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"f", "[", "x", "]"}]}]}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661136918285027`*^9, 3.766113696438942*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"90e3e769-c48b-4436-8937-4f94669f8dc4"],

Cell[BoxData[
 TemplateBox[{
  "Solve","nsmet",
   "\"This system cannot be solved with the methods available to Solve.\"",2,
   129,10,17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7661136967623672`*^9},
 CellLabel->
  "During evaluation of \
In[129]:=",ExpressionUUID->"4406cf0e-4eaf-496d-b66f-a2903a866a17"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TransformationFunction", "[", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
          {
           RowBox[{"Sin", "[", "\[Theta]", "]"}], 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
          {"0", "0", "1"}
         },
         AutoDelete->False,
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
           "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        #& ], ")"}], "]"}], "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "\[Equal]", 
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"f", "[", "x", "]"}]}]}], ",", 
   RowBox[{"f", "[", "x", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.766113696766971*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"7a1d7fe6-f155-47a7-b6fa-3aaab785ec28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"RotationTransform", "[", "\[Theta]", "]"}], "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "\[Equal]", 
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"f", "[", "x", "]"}]}]}], ",", "\[Lambda]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766113704766313*^9, 3.7661137073149137`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"0d055fda-a986-4278-8e39-91f66c4bac75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Lambda]", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"TransformationFunction", "[", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "0"},
           {
            RowBox[{"Sin", "[", "\[Theta]", "]"}], 
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "0"},
           {"0", "0", "1"}
          },
          AutoDelete->False,
          
          GridBoxDividers->{
           "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
            "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         #& ], ")"}], "]"}], "[", 
      RowBox[{"f", "[", "x", "]"}], "]"}], 
     RowBox[{"f", "[", "x", "]"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.766113707833742*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"64bb110b-ea2b-45e8-9055-f7eece7c6de7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "t"}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.7661137739523573`*^9, 3.766113780184512*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"51392d1e-9bd6-485a-9f9e-f7f5176b1999"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.766113780520013*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"24819021-30a2-4697-914e-a673f65b81a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normalize", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.766113784302121*^9, 3.766113785828478*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"05effc5c-cc72-4d68-b102-bfcc5228bd28"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   FractionBox["1", 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{3.7661137861081667`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"83fbcc76-f49e-452f-a899-21ea87eff179"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.766113789241838*^9, 3.7661137920152197`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"7b26c4c6-3bbe-4ef5-9d7a-579666fa38ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["t", 
    SqrtBox["2"]], ",", 
   FractionBox["t", 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{3.766113792688587*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"8289be2c-6510-403e-aab4-61c50df89696"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["t", 
    SqrtBox["2"]], ",", 
   FractionBox["t", 
    SqrtBox["2"]]}], "}"}]], "Input",ExpressionUUID->"87671e58-0fbd-495a-9ac2-\
4531faf00e0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", 
      SqrtBox["2"]], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", 
      SqrtBox["2"]], ")"}], "2"]}], "\[Equal]", "1"}]], "Input",
 CellChangeTimes->{{3.7661139110840397`*^9, 3.766113919911613*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"2c32adac-a7d1-458b-8e79-7c2f57db1b84"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.766113920984774*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"cbaafede-2f6b-43db-b6b6-d5f661de05d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.76611393205087*^9, 3.766113955619195*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"2229fb7b-6bc9-43a6-8b45-4f5474ded66c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.766113955954405*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"4ede789b-5bdf-44d5-8a1f-bad7edcc3fc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normalize", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.766113959341474*^9, 3.766113961352221*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"4e880291-ba92-4d90-8ab8-516e367ea014"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "]"}], "2"]}]]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "]"}], "2"]}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.766113961737685*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"60b688b1-0ce2-4ddc-bac9-2578e8c22f3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Normalize", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}], "]"}], ",", 
   " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "t", "]"}]}], "}"}], "\[Element]", 
    "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766113964852742*^9, 3.76611398243231*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"05f6c7e4-9b4c-47c5-91a2-650e412111c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.766113983398505*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"11d96911-78a5-4ca6-a5fe-ce2e632b4802"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Power", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["y", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}]]], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["y", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}]]]}], "}"}], ",", 
   "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.766114001140067*^9, 3.766114008601036*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"a3244734-837d-4090-b400-67111f0e4823"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]], ",", 
   FractionBox[
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], "}"}]], "Output",\

 CellChangeTimes->{{3.7661140048929043`*^9, 3.766114009156886*^9}},
 CellLabel->
  "Out[139]=",ExpressionUUID->"4a3b9db4-d914-4293-8e9e-8ee805e43862"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Power", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]]], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]]]}], "}"}], ",",
     "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766114013818552*^9, 3.766114015881266*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"e3749b3e-1a00-4006-9d50-633110517ab7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.766114016444592*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"9e106f7f-a0cf-4f9f-b11c-e0f824f9c7e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{"Power", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["y", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]]], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["y", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]]]}], "}"}], 
     ",", "2"}], "]"}], "]"}], "\[Equal]", "1"}]], "Input",
 CellChangeTimes->{{3.766114020714089*^9, 3.766114020937109*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"9ad23b73-aa04-4f42-8b0c-360be0832480"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], "\[Equal]", 
  "1"}]], "Output",
 CellChangeTimes->{3.766114021430133*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"b3d8a342-3b77-4f70-9fcf-74b59009755c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]], "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], "\[Equal]", 
    "1"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[142]:=",ExpressionUUID->"55ec4b00-5900-47fc-be43-ed9568b764f9"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","underdet",
   "\"There are more dependent variables than equations, so the system is \
underdetermined.\"",2,142,11,17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7661140248539057`*^9},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"bdae361d-e254-42c8-9b95-d4426c0e36bc"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]], "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], "\[Equal]", 
    "1"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7661140248585052`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"803c51c3-0b02-49bc-ae23-bd7a3e1f50d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpandAll", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], "\[Equal]", 
   "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.766114034427148*^9, 3.766114039443081*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"48283e7e-9007-46f8-b238-b3e04834eaac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]], "+", 
   FractionBox[
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"], 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], "\[Equal]", 
  "1"}]], "Output",
 CellChangeTimes->{3.76611403975098*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"99c23bb1-a7c6-4485-b987-e3c63b31db2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["x", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["y", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "2"]}]], "\[Equal]", 
  "1"}]], "Input",
 CellChangeTimes->{{3.7661140667430677`*^9, 3.7661140710480824`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"f0a98955-44a6-4361-a1cc-1cdfd90726e9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.766114074100617*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"0cd1c10d-9a60-4d22-a213-7ae0e7b80e18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], "\[Equal]", 
   "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.766114081783525*^9, 3.766114083387765*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"bbd632de-17c1-4bba-8cdd-b95a0a55133a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.766114083758881*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"edb4492c-7c68-473f-a454-49da62de02ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", "True", "]"}]], "Input",
 CellChangeTimes->{{3.766114090588396*^9, 3.766114091577283*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"02275549-aca2-4cdc-9e25-eacd21bfa280"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.766114091865584*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"32ed5690-edd9-49f4-9d9e-5a6d1ecd1e1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"True", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766114095564406*^9, 3.766114095790612*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"2d54c887-7c46-4280-ad82-89e832800340"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.766114096086784*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"d8bcf527-a77a-4ef3-9344-c6224ce1d31b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]], "+", 
     FractionBox[
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["y", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], "\[Equal]", 
    "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7661141166874943`*^9, 3.766114118018416*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"0f793217-e7ef-454c-8f03-5d8088b53740"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"], 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["y", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"], 
        RowBox[{
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["x", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["y", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]]}], "\[Equal]", 
      "1"}], "]"}],
    HoldForm], ",", 
   TagBox["True",
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.766114118293044*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"b4acff45-ad60-439a-82c4-915b1f43c075"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Composition", "[", 
  RowBox[{
   RowBox[{"RotationTransform", "[", "\[Theta]", "]"}], ",", 
   RowBox[{"RotationTransform", "[", "\[Phi]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766114183293491*^9, 3.7661141957014503`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"e873da46-8d49-41e4-add0-a75a53491dcb"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "0"},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "0"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.76611419662954*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"6eec3c42-12c1-4cf3-8d8a-1c75ec3e5cf3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Composition", "[", 
   RowBox[{
    RowBox[{"RotationTransform", "[", "\[Theta]", "]"}], ",", 
    RowBox[{"RotationTransform", "[", "\[Phi]", "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.766114200798106*^9, 3.7661142025523167`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"5229d78e-975e-434e-a246-e9877b3274f3"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], "0"},
      {
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], "0"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.766114202905066*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"2c9d07dc-b762-4ebb-b195-f3bb7b704dd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransformationMatrix", "[", 
  RowBox[{"TransformationFunction", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], ",", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[151]:=",ExpressionUUID->"bb131092-1d86-4a48-9fe2-787edd3d24b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.766114210658393*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"ddce7065-98a0-4330-9927-344b20478d99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], ",", "0"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], ",", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[152]:=",ExpressionUUID->"9cdd0cb8-d572-42d7-922e-be7b2c010401"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}]}], "0"},
     {
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "+", "\[Phi]"}], "]"}], "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.766114215167194*^9},
 CellLabel->
  "Out[152]//MatrixForm=",ExpressionUUID->"1a6bf8d0-c55c-4045-ab3a-\
1c7fc49fe30e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Composition", "[", 
  RowBox[{
   RowBox[{"RotationTransform", "[", 
    FractionBox["\[Pi]", "4"], "]"}], ",", " ", 
   RowBox[{"TranslationTransform", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], "]"}], ",", 
   RowBox[{"ScalingTransform", "[", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766114394152141*^9, 3.766114446794594*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"fd577889-1efd-44c8-a932-4a0c5ef32344"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       FractionBox["x", 
        SqrtBox["2"]], 
       RowBox[{"-", 
        FractionBox["y", 
         SqrtBox["2"]]}], 
       RowBox[{
        FractionBox["a", 
         SqrtBox["2"]], "-", 
        FractionBox["b", 
         SqrtBox["2"]]}]},
      {
       FractionBox["x", 
        SqrtBox["2"]], 
       FractionBox["y", 
        SqrtBox["2"]], 
       RowBox[{
        FractionBox["a", 
         SqrtBox["2"]], "+", 
        FractionBox["b", 
         SqrtBox["2"]]}]},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.766114447360464*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"e34708dd-375c-44bb-85ca-787d0c74fab2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.766114451076291*^9, 3.766114453363325*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"94fb9da0-54c0-437e-a860-165b5071f7d6"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       FractionBox["x", 
        SqrtBox["2"]], 
       RowBox[{"-", 
        FractionBox["y", 
         SqrtBox["2"]]}], 
       FractionBox[
        RowBox[{"a", "-", "b"}], 
        SqrtBox["2"]]},
      {
       FractionBox["x", 
        SqrtBox["2"]], 
       FractionBox["y", 
        SqrtBox["2"]], 
       FractionBox[
        RowBox[{"a", "+", "b"}], 
        SqrtBox["2"]]},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.766114453664536*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"b2f95523-aa89-479b-a9f0-2ae798af5d4b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.766114461161586*^9, {3.766114516967807*^9, 
   3.766114518205214*^9}},ExpressionUUID->"5bb2551b-631a-4a72-9c3a-\
99dbbc86afca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Composition", "[", 
   RowBox[{
    RowBox[{"RotationTransform", "[", 
     FractionBox["\[Pi]", "4"], "]"}], ",", " ", 
    RowBox[{"TranslationTransform", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], "]"}], ",", 
    RowBox[{"ScalingTransform", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766114478782509*^9, 3.766114511842514*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"c40014c2-02c9-4890-9bf9-5cd8522c8e36"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       SqrtBox["2"], 
       RowBox[{"-", 
        SqrtBox["2"]}], 
       SqrtBox["2"]},
      {
       SqrtBox["2"], 
       SqrtBox["2"], "0"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.7661145122725277`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"31ee0ed4-0df5-432d-9689-0ca31c6a1f06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TransformationFunction", "[", 
   RowBox[{"(", 
    TagBox[GridBox[{
       {
        SqrtBox["2"], 
        RowBox[{"-", 
         SqrtBox["2"]}], 
        SqrtBox["2"]},
       {
        SqrtBox["2"], 
        SqrtBox["2"], "0"},
       {"0", "0", "1"}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     #& ], ")"}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"x", ",", "x"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.766114538559349*^9, 3.766114542462751*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"039e88b3-f6fc-4a92-8047-ac906d561556"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox["2"], ",", 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.766114542966007*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"e1308f88-f700-403b-9514-2cbf9005f455"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox["2"], ",", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", "x"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[157]:=",ExpressionUUID->"0138f1e1-9128-4680-8187-563d055f524c"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfda6Pm3egm/2EJrtAIz/Krjp0Ss9BJ89pzXOfC8r
nH/3/aFZ64+xwPlzY73V6h4ww/nXdSVWXPjHBOevDZTJY+JC8HPis5u7VBnh
/OMHPt75qMsA51twVkbuKv23H8bflrJkuu2GP3B+VrpdXP2RX3D+Z9u8w7k/
f8D5BTfVRFPMv8P5qjJ+7yX8v8L5a424M6raP8P5OR/MMmfN/Ajn2z+7trYl
8z2c7z85+5juw9dw/um+u++DeV7A+e8Nq8MuVzyB8xuUv509P+MBnP/VltV2
x9SbcL51S2lEc80lOH/LOQftiVOOwvne50Qyma6tgfNn/z/g6dS62h7G31C5
oVpX6xicn82luOOS2SU4X816/YQpH2/C+Ww6vdHSRx7A+ReFphsK+z2B8w1X
H/7Wq/ICzn8++0jd+p2v4fzNTFt0D9q8h/O7eB8/1Wr7COc/dQ2b5uH7Gc7n
vh61b7nVVzg/ZspJ9yj273D+rp71T1hO/4DzH9xV+/lhyy843ziaI9+g7g+c
H2BYHbMx9x+cb7Nwk56oFoMDjP9s/5343zyMcP6XrvM+TMxMcL5kTvmrTS8Q
/MOvbk28f5IZzr8kyv5VZx8LnP897AWHyiJWOD/p5GbzREU2OB+aXxwAjie5
nA==
      "]]},
    Annotation[#, "Charting`Private`Tag$242877#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 2.8284271247461903`}, {-2.8284271247461903`, 
   2.8284271247461903`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766114547741645*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"7da36f80-2f5b-4500-8aba-9e565c89511c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TransformationFunction", "[", 
   RowBox[{"(", 
    TagBox[GridBox[{
       {
        SqrtBox["2"], 
        RowBox[{"-", 
         SqrtBox["2"]}], 
        SqrtBox["2"]},
       {
        SqrtBox["2"], 
        SqrtBox["2"], "0"},
       {"0", "0", "1"}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     #& ], ")"}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.76611456682628*^9, 3.766114567914857*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"b5f5229a-6863-430b-b69f-6d4325ddd2d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox["2"], "+", 
    RowBox[{
     SqrtBox["2"], " ", "x"}], "-", 
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SqrtBox["2"], " ", "x"}], "+", 
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7661145683074913`*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"58bb97f1-a3a4-4a6d-ba5c-7131b21707bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SqrtBox["2"], "+", 
      RowBox[{
       SqrtBox["2"], " ", "x"}], "-", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SqrtBox["2"], " ", "x"}], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "16"}], " ", "\[Pi]"}], ",", 
     RowBox[{"16", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[159]:=",ExpressionUUID->"72b725a2-d01f-430c-a9cf-a37a824aab20"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
RZmHv3nY18hz30bcFj9yF708hK8+ruRObGN26syVDh4yujX6BMRhn+YHHG7m
ke+365ewiDXb3zRuf8TDDP6iiXTi1HFqe1ZVkDmKaqixIVaYsdlH/woPx2kD
xf95b5r9HNlTPFjffjBmTWwu3Brw/hAPZcsqey2Ip2puV6tM46GW1l9pTGzL
tes6FsuDVsDx0iXEBu6ZaTtDePhWWDtzJvFlV9/aLb485P0+oj40yAVflO3m
68pDy/DHefXE7nvYIxvJHNXI3nHLJi6tCFwTzuBhrnXL0pXEhQ8dtDPJnFj4
zmwd+8ZFyxsllbvLyVy9+lN5iDj4/LKGfxo8rP9oZaFObNv2sU8yi4cLdWqX
937lgmkqq3JjMg/2ip8Tvgxwye9rageF9FH38iQtHeJcp5xX9eS5+0seyK3q
52LSkTX7dnRzMWXTQKlXHxdyh3QS7V5zkWeqecaxl4uqSaP6ek+4qJa767ek
h6wTvEbW5D4Xd6L6j7z6zAXVdmm4y00uLhx69yzgExdHvY1fn7jMRWy5U2Ub
WVchsTJd9jQXTfE905Z2cTFhZPHLrKNcPJqWGi/u5MKlMFnabh8Xm5eUvZG8
42Ls2Wqm+i7SFxtGh5a3c/G9eUbN3B0kj45Nb7xfcfHXizIncyMXRUc90++1
kP24nZVVWMvF042ZpUPNXMg3BkeXOnFRaXnTd/QpF35U3sYUPhcmnt9uNzVy
YeU043IKg4s9A0Ed0XVc6E04sLTMnPSVWoXM8EOSl9mMglmGJI8fPwWsBReO
dYrb1s7nItxxuye3ggv/Y3HzhLO5OPIrp3RcORcHqW7eQTO4OOSR8zG5hIv2
Ga5PIMuFSo1Z3OsiLs5332pmjefiH7NR5c950k8XFr0aG+Hgb2aA0+dTXKw6
kkj9/J2DnX0657VJXjbduaPh2s2By67nqyMzuXjrrTztfTsHJv2Fbw5lcCGw
stI69pKDwYj4FfEpXLz65hOS3sTB0Rx9FiWBix3Trv+63MDBrsKzpmVR5HNL
q4JJjzhYaN++QCaUi+Q30o4HqzjYuiL4wnhfLuojgyayy8l6NgkeLSSPvPqj
lxJKyP5mBg9GruHCzP3ztq9FHLi2p9T0iUk//pw2nHGBvE+twFGfS+Zf06jG
/QwHuzWkFRl0LgriFHzdCjg4I2e1ZzGVnD+/Fe1253GwLlhWZ7026Rv3u+7B
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
lrdAzauCAQFxzIPTsyf/NEftiLEOnXjCdNv5nLfm6M/tfGdB7N9ytzjugTk8
VAurzYmT7y+ZVVpkDlGzV9p/Vg/JO/Ap2xyduvk9psSKCXvD1WPNsSX0VI4e
8YzTN+VcfM1x/xLNQZ2Y/YJ/NE9kDrWv9+qliLeP/fIeMDXHyhnt95usqKhh
Tb0q0iRz5Z4ulUk8wyu9omqyObwXDjGsiesnrqy0/0bF9cdO7o8tyX6rNb70
vaRiwLVDk0nsmH/Pv7CKCuHjXL8jFlTEHjLx3X2RCr8sO416c3Kf+Y1fuzOp
SAnQ0XlJpcK5YZxeMenbxiKZPbfNqMj5sWaWlC95/uY92zBTKk6vfHQyUkzF
IcttHlIUKj5R2Q0LyTpuS6TH1hhTcbG8K+TvQirKZ8lzow2paDGeEig/jcT1
/kyUnz6Ztyd5sQ6/zTBJsODNPF3Sv48lXk3vzRDt0Hg/czkVVwyb7+xtMMN9
vZK8em0q+Z4wb0VauRluFHHfV2mRfV4o1Xl00gxHSnXmhS6gwlheyoy71wwB
9+r6O9TJvG3cd3F6lBk2WMtOkZlD4l0d/1zT1wwnPD6atClTUXfiaX+Ugxmc
UzWFvopUHG1/MGcRzQztX+8wTsqT/bxz8p+jY4YkUcm8jMlUJPbue+GlZgbt
rFXDWtKk/tPn0v5NMsNNz+Epm8bM4F10NmRgyBRNmh55Tr/M0Lw6WIvywRSy
SQnfFn0xw9UH590a7ppi74X5VTKdZrg+hfpUs9gUY3EzTFNem+HJsfD8JydM
wZ72VqWoyQwKkS8nvN1nio9BP1ihdWYYSfg2lxdviq3KgxVtVWYYZS7oUdpq
iknPeg903jBD/6CTi62XKQ6aTTKvP2OGbWsPW4FtipHDJ2I9jpkhflDpxSjV
FKKAhh1HD5qhQFGqbI+OKeKSE9tjU83Q9WWtYdh8U1zftd9vWqwZFrZvSipV
MsWcXSeHWNvMYNgU1Go/xRQbmlcFLt5kBveIZ9bUfxSsSK6zei8hdStMWzb7
CwXPhRGtt1lm4LUOBU7toOCAeE+nLdUM42p/0RxfUMCZuexa8Aoz3BkJFn6v
p4DZuPwaT8MMpkbJKz7doyBkcOb6xhlm2DH+upvhLQrSKz6Lx6TN0LL8l/3T
qxQcUbE5ufajKa6UPS6dcpIC7zUzD2S2mmKNn+LpkzkUbE/WaA2vIXHozrPK
yKRg8NPBgCk3TVGMO7tq9lDAKJB1EVwwRfOIZ7hjMgUfj9hW0o+a4tRP6286
8RSwb32o+ZRqihuPSu45RlHQOefaT4eNppgoUnRI2kKBfdSvZrXVplDs7FqZ
7k9Bb/6S5iMsU3Rdrjd47UPBCZlbMc+MTHGaJvbesp6CLy8UtzwgeX2yTmEl
z4OCQBVVx3AFU2DWfL6vCwUxBc3d3X8o0IqOOnR/FYnXa/IPZZLHtMseG70c
KNC4c3OVbAsFAXb3Oq3FFPwUPfp9h+RJ9kK9xioBBfWKgc8sr1Bw9pX1orM8
ClTn1X2Oz6Wg8d6vL3ocCr6NBq7cn0KBX6u/Zz+Lglkva1cEbqPgdr/Whg4G
uS/x9mkVTwrCKbwaaVtSn8TxPw/YUxC8bO7qVTQKtjCL1r2jkPvdk2ueW1Ow
5kC+6YQFFHClLz6NtaLgRuToEyl5CtymbVReaUnBhasp+178MkF7zTdjngWp
T6H++5T3Jjh8z/OutzkFQVGe5moNJpjwyc6ugErqczFEaU+ZCX5esOeNmVFw
12DOr858E2Sr3mJvI354sGrT/HQTTLyw7KoM8d+I72N2YSZglE//c9GUgo6K
Mq6Lpwme+3pl+BKPMxj56MIzgfZH00ZjYrphdzjf2AQuL9fPnUFsasbONVA3
QeuD2S+GSVwpSe9G5CabYDQgy6mXeLXmS4t334xx4v61wS7ifqqMbPFrY0Qf
PyH9gXiiDl8+9r4xXh7f/KaTWMN88g/BZWNQdtU2vyf2WOq8UfOIMfx377N+
S3xoOHHWcIIxzlyK2tJE3HlvZf6rAGM0vqi+e4d4/ahP6cNVxrh34GHaCWJ/
/RM/qmjG0JWcXhZCnByz7V/jMmPs+vlxzJhYlDc9W2mmMXYflkt9bULBrsxN
orBRI8zfsO2bL/G8R8Vbf3QaYdVg78ALYwpG/j2yPlhvBNaObJYW8X6u5LNT
qREifzRWiIwo+LDjwTGbPCMMJagtczCkoOj44R0OyUb4NV82cIUBBRUbuUcz
txihVG12cKsemc+Fe/5OcDFC7fxsXUddCm4Zbj55gWEEcfO2i7krKHAPjtyW
pEPWX73sT9EyCtoLuwRHVIxQ/SaWmaJNQWFY9eincUa493xdudZiCqi7LKnh
vYYYn3IhN3EhBRu77lxmtxgi/8tHuwJNCgw1+D+dqwxxcuvchTvmUbDgbNG+
kkuGiC2MvKCgRsH1osZ+pyOGKPOZE+SiTM6j3D/+jCRDKFgUKbooUnDN0U4Y
E2wIB+ailXLTSJ/ubrk/2cMQ4U8c/wTJkvPAUtL7gWcIt46cX7EyFNxZs9ns
qJYhIu3+9Z8aNsG04bQ54TMNMbzxpE7pdxNkZIUsuTTOEKyMHYyAPhPMGGj4
Y/XVAPt+vt/7qNsEaTsPLFjeboD3C9vTHrWb4HvfkQlhjQZgRx2u9Ws1gdYF
ym+NSgN0xFUMX3pighNnTzVm5Rng78QnPoowwdgr5mOvvQYIyvqabEDmQsc6
VjUrzgBTfoR59l0ywWrPCSHLthqg8GDxEtYpE6zim6Ut2mCAqE02BmZHTUCt
+vV15yoDbCil9d3fa4JD8dtVuFwDPCuL/dSXaIJJPns6J+gb4M+qvrVTg0yg
6WPZPrbQAJdV/yVJrTfB7MmP7dxUDZBgpmOz18kE1k6d/zTlDbD00stzZRwT
fFmzqMF+vAG4/s5j2y1M8DrfZU3bL30s/tB58IUOmcOBRJ1nffr4vTqyo0HD
BN256at6XukjXvfHSMZ4E7x0fWAk/0wfLgZRNi7fjSH9Tjlof40+/gb2LL7X
aYxnV2fLhN/Vx6j7+au1TcZYrPS2teKGPkJvn/4XfM8YvPOm19Zd1ce8Hjn2
zavGOFWlzNhwUR97D/a3nso3xsbNYxd25OnDyy/1mk8Mmcs/wy57DxMfFyym
k7mT6eMFDh/Qx7ott02qnY2h6X9y2o09+phxTev6N7Yx/irGO9Sn6ONfw+SD
dUbGEE8qMzNI1EdUzsHHDprGcLn+72RXrD6siqbuSpczxmrtrA0fo/Qh95fy
Mfy3ER5dfGxkHKEPX8vbVNUPRqgxvV01LlQf6n8ivJ89McKJIvVCua36+PME
FNFtI4zbkd21crM+HEWDZfvOGyF0gvaqZwH6yJ4xZfyRLCPclK14keKnD1ln
DUu/eCMsjjxnuG2jPhyM245ODDRCfqGF9gEffewTDK7dssYIr+7xNnVs0Id8
QvrL82Qury67l+PmpY8en9vrSnWN0PHX2kVmvT5C3n5xz5ptBBd2rvFzT30U
v6dY82WMoF6bfaV+rT5OXuja0dZviLQtG3ifPPTRL7p7jPPSECe+OoRqEe+d
E6Vz8J4htMoCc+Pd9VF1YsrdSjKXvc+VF464kfUapgw1HDLEiuel3unES9WU
Au/FE1s73zQhbv+j1pTvbwjR9bXB31318T+K6zueqv8NALg9M66957Wudblc
63IeskM2FclIZFRUWkZTmaGokFkkKZRVuZ+sRMW3iEol2ZKSkf07v7+83q/z
Oc95Ps/nea5zjvY+/xDmoYvWE+Q/tOCOdbmjQcR0UYVZrnYR7sRvfalvVHXR
j2bxF8m4We5v1R0U0EWbTeNd8biLVj8f2FzTQT+clpJO4Y6qORaQPKaDlFiv
m57EPW6TcFCoRwdd2iEi83+bOJZb5jXg64nnD8TgzqaPPlEq1kHHZ209juBu
tOg8V5usg/axTSoG/f/5x95F2h7TQQGmxQTH/9+f9MJkYi8+V+2qfmq4zzuO
lmfa6qAvOXbOS7vJSOtleJSjrg46yJ2nUY17V0Grs4SUDlo5rwFeuBOihpbX
WPE5YlYZGttFRpNmySKLc/g+TiR47cZtK/zZgwOfG86S23w13nh+1GBvwzYy
kvLdDJn2wp/f+bAxsQrvA7XBHgbcTTbxPCt4n4d+aGmY98Dna9z0W9p5MsoQ
dC967o7HX/Co3hFJRmxvmvn93PDzSLy2roM/Z1rt0I0+FzLaOJaqbWmJ14ml
tE/SmYzqxxmrLmiT0ddG1ghdJzKKibXrXZTA+1rRWFjEgYxK/ZpHbrLh+ZYc
S22zIyNLT2/78VFtdFOIs8TEhozauC9cY3+ujVxjf5JP4nGb/+P7lXtdG2mH
WsudNsfnOaPqQlmkNgpEcyGYGRmdOFUVomWrjdYYFghtxmRUe/Vfsp6CNupo
4NFlNyCj5AbRF8/XtdA5ednfbBQyiouzaXozoIVSFrT19UlkZM3eLXE1XQvF
YvS9+5TIqI9ji2YXroWWPI3DzeXIyOnInpxsOy105Fn35w/4PjpNkzVPq2ih
n5/MzWSFycjsxp8vK6xayDw51ECcj4yYexb2CY9poo6pwLhWDjIKu+dq29um
iXT4GkJtl7RRfh57h+YlTRQ1L6p8ZFwbnZl1ZHPbr4mIdr9d+vq10XSX5ICp
lSa67i3/6FCbNsqZu3rst5ImarjvZ2peo40ye/+NhrNroliDV2SbAm00c0L/
1+MpDWSWE7oen6yN7B1NZLteayCj/a08F/21UfKEJrv/dQ3E++2X/84d2qiv
qPzh6CkNtGbVft9WTxuxHzoRYOSvgZzHfa4cltJGvUyJZ/1sNVAfIbS/g1kb
70N5XS+yBoqasSzbMa2FpvfP+MiJa6D7pT9dt3q0UM/w1IMmJg3UGSxQt3hD
C/2+xG+5b1Adbe88vd34jBbK2uVYG9qmjowbtjyq92qhpvxD+VCtjqhxixE+
oIW+csud+3FbHX1ga7Y2lddCPvUbd5xT1RHX1e0fPBi1kHWAjOClM+qIOyjE
oXxYEwW2FNw8G66OCo4IdbHkayIeaRB+4aSO+OwpjkKnNNHTEy/TtkAdLYcn
VYZ4aqI/V0Q0VijqyHN6mzarriZ6BMZ3K1TUUfTqqPPsNk1UG8Rxll9KHaW0
H2khTmighjfy21QI6iiMj3rgIdJAy/XMQdNs6ujzgut/b49ooJfGlL/BCySk
Mb3iGm6nga6d1I0U/UlCh3tnYyPl8Dq9HMUCR0loVG+/4qcldSSVI5hj9YWE
9oeqwOPX6qgxe/l44wcSOrMqscZYrI5ajCoaGntJ6OjCy5LO4+poMrpkm3k3
Cf3d//YRzw51lEjdvm7XQUIzGS7NH2TU0QOz4Jm3L0hIwto7RW2ehPKaWSW6
nuPx3ypscLeT0JGD3+/oN5GQI0OM4IUcEioLp6Rw15NQ79DI75xQErJoi7hv
9ZiEouyW3juakFBzMkP7l2oS2hZ0VKRyGwlZ3lGNf/OQhPSWz6g3flFDxtYd
wbxVJPy7vyr/dJUa4vlk/OdmJQl9/WvOsxqnhl5XO8aF3sf3PyajZbJTDe1e
ENl9vIKEOl/PtFvJqiE589/NjfdI6NJr0Qq5OVWUcOzggAZu/6jh5++aVVEr
sy3qLCchqr/b74A0VbTN7nTSJdxD6Q7Gg76q6JKTqqkf7oDqI3lGmqpIxv/e
wA7c233UpdPWVdCe6etuVrgbL+V1DHWrIOaFrruWuAd+3SjVyFVBrOhouwXu
Pay5LRcOqqCCL2Klhrj95xvVfhqpoHpioZEsbsYdhV9DOVWQPsO+s3NlJPSE
98I3lo/KqOSwQmwxbs7zcgpt5coogqxhoIN776ylZdpJZcSQUcF14y4JMbyW
uXjZXhlZxkbT394hIR+s26tRUhn19oWOvC3Fn7epKacyq4Rqh+/xZZaQUM8f
VZ3BZiWk3uCyQCgmIe20wa53V/Hr45bOtoV4/IP9YtKBSiiyf3pZ6zYJBaWf
Jj/XV0IOpyf66bl4v6wb8DVyKCHixzc/F26QkO7g0A2RISJy7uz27rxOQq0d
69c/PySiklInF71MEmL55FjDc4GIHHwKSZQ0EhpPEzpd401ErlFnvOhX8Hra
5fj2aBLR53N5B99fIKHcZ7fuhDITUdgnE7GD8ST05sHE6UsfFZH84wyDuJMk
dDHm0yjpkSLa+cS8jSuahDga1pv3JCqix1jLN65wvP9S7r2Q9lNEXtSGdyeD
SOhq47PTxwwU0ep7G143HxICRUfXA/yKSFd/t2amGwmxTUbFL08pIHeTgUVd
exLql/06wVSggNxuVp+4ok9Cr0dWn1w8pYAsiwwKDUgkNFJntvnEUwEJ3ch2
NJTB+/GugGAORQExRO/XukwgoU/ZKcIaBAX00zFNnshCQqwd6Qsxc/KobErT
kHNJDWW4rIXFvpVHzGr76/Qm1NAHnV989DR5lPK1fsP9pRq6T02q2jokj/JL
m92t6tSQ+7FTnUyu8miIfIQcXaqGmFxo/F168khEzvXrUIYa+m80g9FLTB5p
ehWMJOBzIU8Q+16xLofaF5/+8z2ohg7MzDzt+C6HDownCUZ7qKFRWXrCrio5
1GCzYWShhj//s2LEf9fl0CNPk+1rBDW0c957l2CcHJLmvucwvYLPRfxbI9kD
csja7oM/33dV9PBrXteCsxxKfVzRcfClKkotzEnPMpFD15+7Lq9XqiIH9cN9
q8pyqHlDqrwjQxW1DAgsyjDIIZEJehTLLlU077mzpOazLLL5+ob7tIkq6mJs
21fVIIta3eoUtKRVkenwj6uaObLokLZdguymCjKEZX2NGFm02z5A0eWrCvK4
uWPijrcsejy5G9qfq6BTRyLfXTeRRYk24RCXp4I64tqZW1llUbUnW9YrLxUU
+Y6xaOGnDGpf5mry11NBzmW+ahf7ZZDxYHyYPb8KIm0I9UbQZZD+vw6exBll
FH41IKSsQgadWbEwkOxQRqz2CQdIOTIoe8LzAVehMuKbejH+64IMWhnxDtyF
z+HhgffbJIPw62evmyiR8PV539YCPWUQe9z5mWAWZVRXlP36rp0MmvmYW6H+
FZ+z0eMtn01lkFqOrFdMvRLiGtYdX9WVQUYnnvx0xOfwaV0h+7qqDMoLizpf
G6KE1NTr6R9kZZAc/2enSlBCgVM5UedEZRA9/WseTQyf0zt3XZb4ZFAMf3df
yBwRFSdX+qpxyiDxdZPj+h1EpBvHHirALINS/ZnEyvKIiP/GqHj5hjTaXct+
oCWKiAoPXvw5/E8avVVVV0qxxdeHpuvXLkgjcw4JVU4ZIro0H0QU/iON3BQU
vc3+KqIrwYnt67PSiPcl60NypyLifMzIum9GGnHFP6OO5Smi/Z2fHulNSaMb
77dz+B9RRO9s008fnpBGUlG+9vesFFHuWsYmx7g0il7eSW4Vx+fW6t2zv6PS
SKG65F/trAJ6ImurpIz7a/HQTMILBTT/48L16z+k0RlZ3T3a1xWQhqetjwFu
KSvLgrYQBRRgKf6MAXdzZY+INU0B+ct+nx0fkUar+X5KjXwK6N/kFcVvuKdF
t3QUf8gjuf78pK+4rzJM3blSJ48E1iacPuF2e20w8+eKPBqLEs5/iVt57lqY
v688cqd53snFrR46mfaFLI+oOzbyd+A+hjiawljk0Q0R2Y7X36XR2cYwR8Kg
HDrDrhUihLtLdrDk/X05JKN0bUh0WBo9mRMjNMTLoQ0fu5TXX6XROd2a4VY3
OTTavv+vyhdp1D2U476uIoeIZg9LZD9Lozebb2ze/JNFth3yNvcGpZGS3va/
fMWy6NnqkeKmftzPP4137ZBF5fxXcuzeSaNHQfeBY0kGmT9dUXF4i+8vRmHr
v0IZJOYfEdPwShrppGdv6jjIoNNcnG8vtEkj65KRJR383KWOvrpV1oz/XeY8
+blUGlnW9h8TbZBGEcfGfhq4SiOTzy8Vuh9Jo19cn9OcGaTRP+GZzMZyaXQv
tSBC66EUulUaOfGxQBrFP2MO+bRXChGw1GjFbGmU8O01yZdPCnE7ljenJksj
hvSbWnQkiVSPeV7iT5BGXsT3TziiJVEn035UEo3n517ZZa4sia7c6c7DgqXR
ZKSmadQnCeRPyEwc8pJGl5BTUVG6BCr2Lz+0biCNqDPsXhIb4sgnNffsEWVp
9PfMetaRJ+Jo1Cb7bbegNPoRP3X9R6Q4QsuenKx43mdT+SuOq+HXg16TRGek
0Icv5wbIY2KIFpQSvd4nhRZzK76IFouhfdJGEQ+fSyG7wjFdnX1iSF2Oie9g
shQKF/upxTcsirR1D9kIRkohiw0e94d5oojCbfCf6U4pJCHZr/J2tyhqtWKo
HNWSQgEDtyoOS4iiw6fFrJl5pFD6DUJk7mcRFCTbEnt9ShIdm1nKcr0tgu4G
BRTntEki3vyx1zcDRJB7xKr6t2OSSOhc2ObonDC6lm0eKesgiSp31or/ahBG
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
qz62Bk8zIH5Hs8wirkUsgv3+QIQrA6pUUbYQMFrEXopPqFOObNHHscfnZgIX
MfcAGaO/Rpv0Dqn4MMfkRezCocxfJlvr9L7tOye9Hy5iox3chlov1uirH7Bq
7d5FbG/SnTcz8at0Vs8qi4XZRazJ6Ll6jskKPeDIWt8rjiUs5GJtktvCMn1r
XMa9T24J81RP+GBZsUSfDuf3MqQuYde+S9xN912kn6tnF5W0W8JifZ7q7uJd
oM/WXA8u3rWEGV+ed3r5bJ7eyX+zfOEAHk+kwJch9A/9uRv/S8OjS9iDK3Rb
dcHf9OmkbrXsuCXMe8Tm99fjs/Tppa1KvcQlbF2C+epU6zTd6CM9h5a2hJlC
/2YHzyT9xhPvzA9ZS1jBrl2pne5jdH63W3nqN5Yw3UUtE7g5Qm/u4WDZn7uE
Bd1+Zs1Y/41eLbu+qzJ/CTtVoPVfo8En+jG3h6HqBUvYW+1CC5cnffReNgut
bYVLGGusLN+3fW/peXuqOk/gXrnTbXPKrZVuPvHkWC5uP+4SUkriI/q1tZfn
b+MuuVd81/tANnbkyQ/bStyn2HfzpDY9xY7RTojN4ea3o5euzHRiiQVWRhlF
S9g/z4tSH9f+wyYb4fOz4iVMS2PBPz1+ACtPPsOTV7qEjSnuC45h+ILJH5J8
7F22hPlMF7xeMPuOKWfZx0ndX8KqzOduF6z9wMxk7Yf4Hy1hnzrz7aaejGOE
oAuLe+uWsKyvH2LjI6aw58frbms34+fjLZfJr/ATy8zQcL7/cgmzb/l+fcf7
X1hvupDU6rslLLvGT/cw+o0J9U+Wbh9ewhhMR4Yw4XlscnpR8OEcHn9JvWj2
wF/smdgGXyDjMvb4xulB14YFrIqyVHtReBmLdPx4wI5tCRv4PH+RprGMLRyl
vLrvsowxeChFVlotY6e6vYQ8bv3DVOR4qlb8lzHm3g52+eEVjCWqe8Dm7DLW
5+hH+Kmwhh2/WdTeWLKMEZa+eWYFrGO79+ZmHHm1jH1kMG1euL2BBXsdSL06
v4ydGXi5+GtgE/tPzc/YQPYftu+gYPMjNgaYv/XC/OLOf9jdmzzu2QUMcG6n
XMTN8/8w/TLOwRtURmDgYC7IePoPe1vT6n2vmxG2pFq6k5b/YcpX+Xwa9zLB
0O+b84UGKxgv786RpjkmKJLjMk5vW8E+ts/+8eFmAZaW/lpvsVWMNh1UnVTE
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
YtIX0daoRt0wClJeDFcdiiBzZbRf8JN43D9gdeUJCrbrb9XrOEDBn/Zh5o9E
CnSKIkM6wymYXMRtnnSJgpHHapsnke8NqS148zeLgl35DoPmkRSYxDksb8mn
wJ0zYempQ+T5TXNbLzykIOSBuZrEEfIeZ/FbehUFlqcZt08cpSCn9+7CupcU
FM7Gt9XHyfw8N3xj8p4CpeN9+ZOiKbCv+jYY3kFB2u8jQwNkX9EPH6dk9VJA
m6DCWhpH8hqlODtJgor7zOzx8DMU5OX0sFymUKEvOXHPaAIFUhukC3/PoGLu
ZEfv0+coqHuodTNQjYp9KbpRtikULDtTuuuZNhW5in+Orb5AQcEhJ+c/i6hw
yraVYZBzPrfb9VTaiIpWObnmhqvk+0/PPb5MoYIqn0J1zKZAb/FerOJQUd7+
xFHqFtnPo5KZaWIqpgkDo5rvkPkq2V/xwZGKst6HtKZ7FHQfuTw04krFAbn7
nyUekPy/VLPs2ESF5dMtxbaPiMObuFe3UaFy3YOyl9Tp9Pbi+Jx9VJgWPPPk
1VGwoqrMaeAAFR0Jqrc4r8icrf06PPkIFcc50ozdTRRsnLKFNRRNxbtJQxZV
LeS+u9tlcjeOCs1jzVfYnyngpuy+zz1Lha6MechQJ7kPjoRX5KdSkd8Y7Fg/
SPp5VKuIDBykX4sN//wk8/KjoK4vm4r5Oy4p2ktSIfOoqS47l4q0v+Pvm2Wo
4CR3f7O8S+qrfJt3dDoVMT2ZnhmFVAR2PJ7rpkzFj0OT9n8uoaJvovIfj7lU
rHk+P2K4jIpVa04GfyF13r316KsL1VSwz9ozvVaQfe5Z1reqjorP7NpQOTMq
6IsXXUh/QcWxbYy0d9ZUuO3U9PrWQNZ5dljrJZuK7cGC2qlNVKRw3m/tI3Wv
2+S9ReodFVExjI8rnKi4ELXtbWMLFdzrudkLfahwtf7YMvUz2ffQobPvdlGh
5bq/eXsHFcXJvq239lOxbd6k4FtfqajdYJF39RAVGhWXo+u6qBCERTLLYshc
yNd+qP6PionIL/6dSIXXPVmbjB7Sv3UbjB0uUtEt/aLMrY+KWPHG0ufXqVgX
aKn+t58KXs6CXd55VGyI6LTZ/50K+bvTVQZIXRb/OTc49oOK6tK4p0lVpO67
bh23HyL1rIxY7knOyeld53V6mApaZ/FfbhsVd4WFLbkjVJxsO1or6qZivPmY
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
ewYkzxyVT+9j4Nlrq3lOpO+zpcaq/fsZ0CvSKr73g5zPxUTHYYCBA/eMin7+
JXOo5pK07jsDJ4SuKfNkmZjZ73llL3nucP3VrkXKTATsK7l1f5DkNynNWFmL
if7N7TqqwwzETKhVaVvEROKqIedzI+Rcx+RMjqxkQjVTkGUxxgDLTwpyYCJV
wtBR+hcDK7cGdftymJhMYV4c/M2AeWjOaOZaJiY5hxRMGSd9KKgyebCBCaeY
gEqGJBPP32sfuOrNxIIJvO7siUzsLUnN99nJxJUCq6UW0kz4Ov+qkNrPRMy3
tbofpjKxqeFoWF4ME9PP9RcOTmfCPsSSUpXIhN7JmSYmM5m4836b+q00sr8Z
a32uknOtuhUC72tMeD+tV2PPJs+LbDv7c5lQc+v6OVudiVlTo1zZhUzIrJ59
Z848JpKPZv/1L2NiRPHLhLyFTMQ6HnQxeMmE4SzzS9wlZL9ZIcrFzUwI9Or0
ZxkxodVv/mXORybSQkeHFE2ZQK+HP7OT7KeG6US3YMJgxMvDqo+J4D63xOsU
Jpj6qSETh5k4PvVHG5XFRI6bS/Tp30ws9RieqUjq1Jf3W0ZlCgvv5XeqsJ2Y
uO3y0klWnoWlM/zX39nIxIvcBX5VSizkLjJ5Kt7MRGnPTae1aixoNv5ZquPH
REWiGStLkwXf0iG3RQFM9Eqe2Vanw8Lay+tneZI6BgWEKZQsZAGHVNP9o5jw
t/RaJmXEgmlf9zXKaSY6F7YfXG/Cgspz18OMZLLv84/+HFjDgn2dX1bwZbLf
oQnLAqxYmOnwKvhjFulHWd9dUyoLMlPNeIF5THR4vLWoZbCgsGanh3kxqdOx
HyHLOCx4Zh62ENcz0VoRbuMnYmHblCucC01M0IvyU9i2LFy7fNpo9ifyvj0q
U8fsWHAMovwp/o8Jy5GCsyGOLNwfM0uLHmLCpmYmv8mJhRXzByZHjjPBG7mx
RtaFnFdhpuplUrdI19YIJVdSj1+NlzoVWaBWbxWNbmThxZH1u2w1WJh42uTN
XXdSz4Ph+bf0WfCqnL+E48nCHeuIPUtJHS6aGks/8GKh9mnzrjoLFlif+y5O
28yC92Ep92gWC362b3jwJu/P7/i2mezbc+3k9XZbWGgZ1brvuoGFvWjTF2xl
4bvnfted5O+1pRLUDH1Y4F2lBp7fzcLR/g/J/cQHhDeiP4WxMGvvMc1UXxbU
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
      "]]},
    Annotation[#, "Charting`Private`Tag$243768#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-69.67191344816077, 72.50034057290695}, {-71.08612701053386, 
   71.08612701053386}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766114572043508*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"cbd4428c-067b-40ed-80e0-1045826efda8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotationTransform", "[", 
  FractionBox["\[Pi]", "4"], "]"}]], "Input",
 CellChangeTimes->{{3.7661145812053547`*^9, 3.766114586369413*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"0ac2e7fb-a656-4b1f-abbe-0bfed8789162"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {
       FractionBox["1", 
        SqrtBox["2"]], 
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox["2"]]}], "0"},
      {
       FractionBox["1", 
        SqrtBox["2"]], 
       FractionBox["1", 
        SqrtBox["2"]], "0"},
      {"0", "0", "1"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.766114589826157*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"fa375dd9-f1de-45b4-a679-4eae12a93d9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TransformationFunction", "[", 
   RowBox[{"(", 
    TagBox[GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "0"},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", "0", "1"}
      },
      AutoDelete->False,
      GridBoxDividers->{
       "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     #& ], ")"}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"x", ",", 
    RowBox[{"Sin", "[", "x", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7661145943177853`*^9, 3.766114598000723*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"d06d6b42-0b36-42e5-ad32-7b5ab145a3a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["x", 
     SqrtBox["2"]], "-", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox["x", 
     SqrtBox["2"]], "+", 
    FractionBox[
     RowBox[{"Sin", "[", "x", "]"}], 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766114598427765*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"6a804bb4-db18-4034-a3cb-1e683fafdc02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SqrtBox["2"], "+", 
        RowBox[{
         SqrtBox["2"], " ", "x"}], "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", "x"}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["x", 
         SqrtBox["2"]], "-", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}], ",", 
       RowBox[{
        FractionBox["x", 
         SqrtBox["2"]], "+", 
        FractionBox[
         RowBox[{"Sin", "[", "x", "]"}], 
         SqrtBox["2"]]}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "16"}], " ", "\[Pi]"}], ",", 
     RowBox[{"16", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766114606578822*^9, 3.7661146155809383`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"370ac397-55d1-4686-95f1-2f3973b00149"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
RZmHv3nY18hz30bcFj9yF708hK8+ruRObGN26syVDh4yujX6BMRhn+YHHG7m
ke+365ewiDXb3zRuf8TDDP6iiXTi1HFqe1ZVkDmKaqixIVaYsdlH/woPx2kD
xf95b5r9HNlTPFjffjBmTWwu3Brw/hAPZcsqey2Ip2puV6tM46GW1l9pTGzL
tes6FsuDVsDx0iXEBu6ZaTtDePhWWDtzJvFlV9/aLb485P0+oj40yAVflO3m
68pDy/DHefXE7nvYIxvJHNXI3nHLJi6tCFwTzuBhrnXL0pXEhQ8dtDPJnFj4
zmwd+8ZFyxsllbvLyVy9+lN5iDj4/LKGfxo8rP9oZaFObNv2sU8yi4cLdWqX
937lgmkqq3JjMg/2ip8Tvgxwye9rageF9FH38iQtHeJcp5xX9eS5+0seyK3q
52LSkTX7dnRzMWXTQKlXHxdyh3QS7V5zkWeqecaxl4uqSaP6ek+4qJa767ek
h6wTvEbW5D4Xd6L6j7z6zAXVdmm4y00uLhx69yzgExdHvY1fn7jMRWy5U2Ub
WVchsTJd9jQXTfE905Z2cTFhZPHLrKNcPJqWGi/u5MKlMFnabh8Xm5eUvZG8
42Ls2Wqm+i7SFxtGh5a3c/G9eUbN3B0kj45Nb7xfcfHXizIncyMXRUc90++1
kP24nZVVWMvF042ZpUPNXMg3BkeXOnFRaXnTd/QpF35U3sYUPhcmnt9uNzVy
YeU043IKg4s9A0Ed0XVc6E04sLTMnPSVWoXM8EOSl9mMglmGJI8fPwWsBReO
dYrb1s7nItxxuye3ggv/Y3HzhLO5OPIrp3RcORcHqW7eQTO4OOSR8zG5hIv2
Ga5PIMuFSo1Z3OsiLs5332pmjefiH7NR5c950k8XFr0aG+Hgb2aA0+dTXKw6
kkj9/J2DnX0657VJXjbduaPh2s2By67nqyMzuXjrrTztfTsHJv2Fbw5lcCGw
stI69pKDwYj4FfEpXLz65hOS3sTB0Rx9FiWBix3Trv+63MDBrsKzpmVR5HNL
q4JJjzhYaN++QCaUi+Q30o4HqzjYuiL4wnhfLuojgyayy8l6NgkeLSSPvPqj
lxJKyP5mBg9GruHCzP3ztq9FHLi2p9T0iUk//pw2nHGBvE+twFGfS+Zf06jG
/QwHuzWkFRl0LgriFHzdCjg4I2e1ZzGVnD+/Fe1253GwLlhWZ7026Rv3u+7B
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
lrdAzauCAQFxzIPTsyf/NEftiLEOnXjCdNv5nLfm6M/tfGdB7N9ytzjugTk8
VAurzYmT7y+ZVVpkDlGzV9p/Vg/JO/Ap2xyduvk9psSKCXvD1WPNsSX0VI4e
8YzTN+VcfM1x/xLNQZ2Y/YJ/NE9kDrWv9+qliLeP/fIeMDXHyhnt95usqKhh
Tb0q0iRz5Z4ulUk8wyu9omqyObwXDjGsiesnrqy0/0bF9cdO7o8tyX6rNb70
vaRiwLVDk0nsmH/Pv7CKCuHjXL8jFlTEHjLx3X2RCr8sO416c3Kf+Y1fuzOp
SAnQ0XlJpcK5YZxeMenbxiKZPbfNqMj5sWaWlC95/uY92zBTKk6vfHQyUkzF
IcttHlIUKj5R2Q0LyTpuS6TH1hhTcbG8K+TvQirKZ8lzow2paDGeEig/jcT1
/kyUnz6Ztyd5sQ6/zTBJsODNPF3Sv48lXk3vzRDt0Hg/czkVVwyb7+xtMMN9
vZK8em0q+Z4wb0VauRluFHHfV2mRfV4o1Xl00gxHSnXmhS6gwlheyoy71wwB
9+r6O9TJvG3cd3F6lBk2WMtOkZlD4l0d/1zT1wwnPD6atClTUXfiaX+Ugxmc
UzWFvopUHG1/MGcRzQztX+8wTsqT/bxz8p+jY4YkUcm8jMlUJPbue+GlZgbt
rFXDWtKk/tPn0v5NMsNNz+Epm8bM4F10NmRgyBRNmh55Tr/M0Lw6WIvywRSy
SQnfFn0xw9UH590a7ppi74X5VTKdZrg+hfpUs9gUY3EzTFNem+HJsfD8JydM
wZ72VqWoyQwKkS8nvN1nio9BP1ihdWYYSfg2lxdviq3KgxVtVWYYZS7oUdpq
iknPeg903jBD/6CTi62XKQ6aTTKvP2OGbWsPW4FtipHDJ2I9jpkhflDpxSjV
FKKAhh1HD5qhQFGqbI+OKeKSE9tjU83Q9WWtYdh8U1zftd9vWqwZFrZvSipV
MsWcXSeHWNvMYNgU1Go/xRQbmlcFLt5kBveIZ9bUfxSsSK6zei8hdStMWzb7
CwXPhRGtt1lm4LUOBU7toOCAeE+nLdUM42p/0RxfUMCZuexa8Aoz3BkJFn6v
p4DZuPwaT8MMpkbJKz7doyBkcOb6xhlm2DH+upvhLQrSKz6Lx6TN0LL8l/3T
qxQcUbE5ufajKa6UPS6dcpIC7zUzD2S2mmKNn+LpkzkUbE/WaA2vIXHozrPK
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
70N5XS+yBoqasSzbMa2FpvfP+MiJa6D7pT9dt3q0UM/w1IMmJg3UGSxQt3hD
C/2+xG+5b1Adbe88vd34jBbK2uVYG9qmjowbtjyq92qhpvxD+VCtjqhxixE+
oIW+csud+3FbHX1ga7Y2lddCPvUbd5xT1RHX1e0fPBi1kHWAjOClM+qIOyjE
oXxYEwW2FNw8G66OCo4IdbHkayIeaRB+4aSO+OwpjkKnNNHTEy/TtkAdLYcn
VYZ4aqI/V0Q0VijqyHN6mzarriZ6BMZ3K1TUUfTqqPPsNk1UG8Rxll9KHaW0
H2khTmighjfy21QI6iiMj3rgIdJAy/XMQdNs6ujzgut/b49ooJfGlL/BCySk
Mb3iGm6nga6d1I0U/UlCh3tnYyPl8Dq9HMUCR0loVG+/4qcldSSVI5hj9YWE
9oeqwOPX6qgxe/l44wcSOrMqscZYrI5ajCoaGntJ6OjCy5LO4+poMrpkm3k3
Cf3d//YRzw51lEjdvm7XQUIzGS7NH2TU0QOz4Jm3L0hIwto7RW2ehPKaWSW6
nuPx3ypscLeT0JGD3+/oN5GQI0OM4IUcEioLp6Rw15NQ79DI75xQErJoi7hv
9ZiEouyW3juakFBzMkP7l2oS2hZ0VKRyGwlZ3lGNf/OQhPSWz6g3flFDxtYd
wbxVJPy7vyr/dJUa4vlk/OdmJQl9/WvOsxqnhl5XO8aF3sf3PyajZbJTDe1e
ENl9vIKEOl/PtFvJqiE589/NjfdI6NJr0Qq5OVWUcOzggAZu/6jh5++aVVEr
sy3qLCchqr/b74A0VbTN7nTSJdxD6Q7Gg76q6JKTqqkf7oDqI3lGmqpIxv/e
wA7c233UpdPWVdCe6etuVrgbL+V1DHWrIOaFrruWuAd+3SjVyFVBrOhouwXu
Pay5LRcOqqCCL2Klhrj95xvVfhqpoHpioZEsbsYdhV9DOVWQPsO+s3NlJPSE
98I3lo/KqOSwQmwxbs7zcgpt5coogqxhoIN776ylZdpJZcSQUcF14y4JMbyW
uXjZXhlZxkbT394hIR+s26tRUhn19oWOvC3Fn7epKacyq4Rqh+/xZZaQUM8f
VZ3BZiWk3uCyQCgmIe20wa53V/Hr45bOtoV4/IP9YtKBSiiyf3pZ6zYJBaWf
Jj/XV0IOpyf66bl4v6wb8DVyKCHixzc/F26QkO7g0A2RISJy7uz27rxOQq0d
69c/PySiklInF71MEmL55FjDc4GIHHwKSZQ0EhpPEzpd401ErlFnvOhX8Hra
5fj2aBLR53N5B99fIKHcZ7fuhDITUdgnE7GD8ST05sHE6UsfFZH84wyDuJMk
dDHm0yjpkSLa+cS8jSuahDga1pv3JCqix1jLN65wvP9S7r2Q9lNEXtSGdyeD
SOhq47PTxwwU0ep7G143HxICRUfXA/yKSFd/t2amGwmxTUbFL08pIHeTgUVd
exLql/06wVSggNxuVp+4ok9Cr0dWn1w8pYAsiwwKDUgkNFJntvnEUwEJ3ch2
NJTB+/GugGAORQExRO/XukwgoU/ZKcIaBAX00zFNnshCQqwd6Qsxc/KobErT
kHNJDWW4rIXFvpVHzGr76/Qm1NAHnV989DR5lPK1fsP9pRq6T02q2jokj/JL
m92t6tSQ+7FTnUyu8miIfIQcXaqGmFxo/F168khEzvXrUIYa+m80g9FLTB5p
ehWMJOBzIU8Q+16xLofaF5/+8z2ohg7MzDzt+C6HDownCUZ7qKFRWXrCrio5
1GCzYWShhj//s2LEf9fl0CNPk+1rBDW0c957l2CcHJLmvucwvYLPRfxbI9kD
csja7oM/33dV9PBrXteCsxxKfVzRcfClKkotzEnPMpFD15+7Lq9XqiIH9cN9
q8pyqHlDqrwjQxW1DAgsyjDIIZEJehTLLlU077mzpOazLLL5+ob7tIkq6mJs
21fVIIta3eoUtKRVkenwj6uaObLokLZdguymCjKEZX2NGFm02z5A0eWrCvK4
uWPijrcsejy5G9qfq6BTRyLfXTeRRYk24RCXp4I64tqZW1llUbUnW9YrLxUU
+Y6xaOGnDGpf5mry11NBzmW+ahf7ZZDxYHyYPb8KIm0I9UbQZZD+vw6exBll
FH41IKSsQgadWbEwkOxQRqz2CQdIOTIoe8LzAVehMuKbejH+64IMWhnxDtyF
z+HhgffbJIPw62evmyiR8PV539YCPWUQe9z5mWAWZVRXlP36rp0MmvmYW6H+
FZ+z0eMtn01lkFqOrFdMvRLiGtYdX9WVQUYnnvx0xOfwaV0h+7qqDMoLizpf
G6KE1NTr6R9kZZAc/2enSlBCgVM5UedEZRA9/WseTQyf0zt3XZb4ZFAMf3df
yBwRFSdX+qpxyiDxdZPj+h1EpBvHHirALINS/ZnEyvKIiP/GqHj5hjTaXct+
oCWKiAoPXvw5/E8avVVVV0qxxdeHpuvXLkgjcw4JVU4ZIro0H0QU/iON3BQU
vc3+KqIrwYnt67PSiPcl60NypyLifMzIum9GGnHFP6OO5Smi/Z2fHulNSaMb
77dz+B9RRO9s008fnpBGUlG+9vesFFHuWsYmx7g0il7eSW4Vx+fW6t2zv6PS
SKG65F/trAJ6ImurpIz7a/HQTMILBTT/48L16z+k0RlZ3T3a1xWQhqetjwFu
KSvLgrYQBRRgKf6MAXdzZY+INU0B+ct+nx0fkUar+X5KjXwK6N/kFcVvuKdF
t3QUf8gjuf78pK+4rzJM3blSJ48E1iacPuF2e20w8+eKPBqLEs5/iVt57lqY
v688cqd53snFrR46mfaFLI+oOzbyd+A+hjiawljk0Q0R2Y7X36XR2cYwR8Kg
HDrDrhUihLtLdrDk/X05JKN0bUh0WBo9mRMjNMTLoQ0fu5TXX6XROd2a4VY3
OTTavv+vyhdp1D2U476uIoeIZg9LZD9Lozebb2ze/JNFth3yNvcGpZGS3va/
fMWy6NnqkeKmftzPP4137ZBF5fxXcuzeSaNHQfeBY0kGmT9dUXF4i+8vRmHr
v0IZJOYfEdPwShrppGdv6jjIoNNcnG8vtEkj65KRJR383KWOvrpV1oz/XeY8
+blUGlnW9h8TbZBGEcfGfhq4SiOTzy8Vuh9Jo19cn9OcGaTRP+GZzMZyaXQv
tSBC66EUulUaOfGxQBrFP2MO+bRXChGw1GjFbGmU8O01yZdPCnE7ljenJksj
hvSbWnQkiVSPeV7iT5BGXsT3TziiJVEn035UEo3n517ZZa4sia7c6c7DgqXR
ZKSmadQnCeRPyEwc8pJGl5BTUVG6BCr2Lz+0biCNqDPsXhIb4sgnNffsEWVp
9PfMetaRJ+Jo1Cb7bbegNPoRP3X9R6Q4QsuenKx43mdT+SuOq+HXg16TRGek
0Icv5wbIY2KIFpQSvd4nhRZzK76IFouhfdJGEQ+fSyG7wjFdnX1iSF2Oie9g
shQKF/upxTcsirR1D9kIRkohiw0e94d5oojCbfCf6U4pJCHZr/J2tyhqtWKo
HNWSQgEDtyoOS4iiw6fFrJl5pFD6DUJk7mcRFCTbEnt9ShIdm1nKcr0tgu4G
BRTntEki3vyx1zcDRJB7xKr6t2OSSOhc2ObonDC6lm0eKesgiSp31or/ahBG
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
qz62Bk8zIH5Hs8wirkUsgv3+QIQrA6pUUbYQMFrEXopPqFOObNHHscfnZgIX
MfcAGaO/Rpv0Dqn4MMfkRezCocxfJlvr9L7tOye9Hy5iox3chlov1uirH7Bq
7d5FbG/SnTcz8at0Vs8qi4XZRazJ6Ll6jskKPeDIWt8rjiUs5GJtktvCMn1r
XMa9T24J81RP+GBZsUSfDuf3MqQuYde+S9xN912kn6tnF5W0W8JifZ7q7uJd
oM/WXA8u3rWEGV+ed3r5bJ7eyX+zfOEAHk+kwJch9A/9uRv/S8OjS9iDK3Rb
dcHf9OmkbrXsuCXMe8Tm99fjs/Tppa1KvcQlbF2C+epU6zTd6CM9h5a2hJlC
/2YHzyT9xhPvzA9ZS1jBrl2pne5jdH63W3nqN5Yw3UUtE7g5Qm/u4WDZn7uE
Bd1+Zs1Y/41eLbu+qzJ/CTtVoPVfo8En+jG3h6HqBUvYW+1CC5cnffReNgut
bYVLGGusLN+3fW/peXuqOk/gXrnTbXPKrZVuPvHkWC5uP+4SUkriI/q1tZfn
b+MuuVd81/tANnbkyQ/bStyn2HfzpDY9xY7RTojN4ea3o5euzHRiiQVWRhlF
S9g/z4tSH9f+wyYb4fOz4iVMS2PBPz1+ACtPPsOTV7qEjSnuC45h+ILJH5J8
7F22hPlMF7xeMPuOKWfZx0ndX8KqzOduF6z9wMxk7Yf4Hy1hnzrz7aaejGOE
oAuLe+uWsKyvH2LjI6aw58frbms34+fjLZfJr/ATy8zQcL7/cgmzb/l+fcf7
X1hvupDU6rslLLvGT/cw+o0J9U+Wbh9ewhhMR4Yw4XlscnpR8OEcHn9JvWj2
wF/smdgGXyDjMvb4xulB14YFrIqyVHtReBmLdPx4wI5tCRv4PH+RprGMLRyl
vLrvsowxeChFVlotY6e6vYQ8bv3DVOR4qlb8lzHm3g52+eEVjCWqe8Dm7DLW
5+hH+Kmwhh2/WdTeWLKMEZa+eWYFrGO79+ZmHHm1jH1kMG1euL2BBXsdSL06
v4ydGXi5+GtgE/tPzc/YQPYftu+gYPMjNgaYv/XC/OLOf9jdmzzu2QUMcG6n
XMTN8/8w/TLOwRtURmDgYC7IePoPe1vT6n2vmxG2pFq6k5b/YcpX+Xwa9zLB
0O+b84UGKxgv786RpjkmKJLjMk5vW8E+ts/+8eFmAZaW/lpvsVWMNh1UnVTE
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
YtIX0daoRt0wClJeDFcdiiBzZbRf8JN43D9gdeUJCrbrb9XrOEDBn/Zh5o9E
CnSKIkM6wymYXMRtnnSJgpHHapsnke8NqS148zeLgl35DoPmkRSYxDksb8mn
wJ0zYempQ+T5TXNbLzykIOSBuZrEEfIeZ/FbehUFlqcZt08cpSCn9+7CupcU
FM7Gt9XHyfw8N3xj8p4CpeN9+ZOiKbCv+jYY3kFB2u8jQwNkX9EPH6dk9VJA
m6DCWhpH8hqlODtJgor7zOzx8DMU5OX0sFymUKEvOXHPaAIFUhukC3/PoGLu
ZEfv0+coqHuodTNQjYp9KbpRtikULDtTuuuZNhW5in+Orb5AQcEhJ+c/i6hw
yraVYZBzPrfb9VTaiIpWObnmhqvk+0/PPb5MoYIqn0J1zKZAb/FerOJQUd7+
xFHqFtnPo5KZaWIqpgkDo5rvkPkq2V/xwZGKst6HtKZ7FHQfuTw04krFAbn7
nyUekPy/VLPs2ESF5dMtxbaPiMObuFe3UaFy3YOyl9Tp9Pbi+Jx9VJgWPPPk
1VGwoqrMaeAAFR0Jqrc4r8icrf06PPkIFcc50ozdTRRsnLKFNRRNxbtJQxZV
LeS+u9tlcjeOCs1jzVfYnyngpuy+zz1Lha6MechQJ7kPjoRX5KdSkd8Y7Fg/
SPp5VKuIDBykX4sN//wk8/KjoK4vm4r5Oy4p2ktSIfOoqS47l4q0v+Pvm2Wo
4CR3f7O8S+qrfJt3dDoVMT2ZnhmFVAR2PJ7rpkzFj0OT9n8uoaJvovIfj7lU
rHk+P2K4jIpVa04GfyF13r316KsL1VSwz9ozvVaQfe5Z1reqjorP7NpQOTMq
6IsXXUh/QcWxbYy0d9ZUuO3U9PrWQNZ5dljrJZuK7cGC2qlNVKRw3m/tI3Wv
2+S9ReodFVExjI8rnKi4ELXtbWMLFdzrudkLfahwtf7YMvUz2ffQobPvdlGh
5bq/eXsHFcXJvq239lOxbd6k4FtfqajdYJF39RAVGhWXo+u6qBCERTLLYshc
yNd+qP6PionIL/6dSIXXPVmbjB7Sv3UbjB0uUtEt/aLMrY+KWPHG0ufXqVgX
aKn+t58KXs6CXd55VGyI6LTZ/50K+bvTVQZIXRb/OTc49oOK6tK4p0lVpO67
bh23HyL1rIxY7knOyeld53V6mApaZ/FfbhsVd4WFLbkjVJxsO1or6qZivPmY
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
ewYkzxyVT+9j4Nlrq3lOpO+zpcaq/fsZ0CvSKr73g5zPxUTHYYCBA/eMin7+
JXOo5pK07jsDJ4SuKfNkmZjZ73llL3nucP3VrkXKTATsK7l1f5DkNynNWFmL
if7N7TqqwwzETKhVaVvEROKqIedzI+Rcx+RMjqxkQjVTkGUxxgDLTwpyYCJV
wtBR+hcDK7cGdftymJhMYV4c/M2AeWjOaOZaJiY5hxRMGSd9KKgyebCBCaeY
gEqGJBPP32sfuOrNxIIJvO7siUzsLUnN99nJxJUCq6UW0kz4Ov+qkNrPRMy3
tbofpjKxqeFoWF4ME9PP9RcOTmfCPsSSUpXIhN7JmSYmM5m4836b+q00sr8Z
a32uknOtuhUC72tMeD+tV2PPJs+LbDv7c5lQc+v6OVudiVlTo1zZhUzIrJ59
Z848JpKPZv/1L2NiRPHLhLyFTMQ6HnQxeMmE4SzzS9wlZL9ZIcrFzUwI9Or0
ZxkxodVv/mXORybSQkeHFE2ZQK+HP7OT7KeG6US3YMJgxMvDqo+J4D63xOsU
Jpj6qSETh5k4PvVHG5XFRI6bS/Tp30ws9RieqUjq1Jf3W0ZlCgvv5XeqsJ2Y
uO3y0klWnoWlM/zX39nIxIvcBX5VSizkLjJ5Kt7MRGnPTae1aixoNv5ZquPH
REWiGStLkwXf0iG3RQFM9Eqe2Vanw8Lay+tneZI6BgWEKZQsZAGHVNP9o5jw
t/RaJmXEgmlf9zXKaSY6F7YfXG/Cgspz18OMZLLv84/+HFjDgn2dX1bwZbLf
oQnLAqxYmOnwKvhjFulHWd9dUyoLMlPNeIF5THR4vLWoZbCgsGanh3kxqdOx
HyHLOCx4Zh62ENcz0VoRbuMnYmHblCucC01M0IvyU9i2LFy7fNpo9ifyvj0q
U8fsWHAMovwp/o8Jy5GCsyGOLNwfM0uLHmLCpmYmv8mJhRXzByZHjjPBG7mx
RtaFnFdhpuplUrdI19YIJVdSj1+NlzoVWaBWbxWNbmThxZH1u2w1WJh42uTN
XXdSz4Ph+bf0WfCqnL+E48nCHeuIPUtJHS6aGks/8GKh9mnzrjoLFlif+y5O
28yC92Ep92gWC362b3jwJu/P7/i2mezbc+3k9XZbWGgZ1brvuoGFvWjTF2xl
4bvnfted5O+1pRLUDH1Y4F2lBp7fzcLR/g/J/cQHhDeiP4WxMGvvMc1UXxbU
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
      "]]},
    Annotation[#, "Charting`Private`Tag$245003#1"]& ], 
   TagBox[
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
6n9xEdSwyymS+NWe0RqQ3LgsezLVh1jAyS8s6eYisHt5tzNx2EedTSeecjHN
5JjGImLtrs6WSDLXgfkrf88nTpqgcdCNzKksbEK1LfH0GVv8LUu42MHVK/jP
KckOs6TzuZhVNfp1HrH10m2b3h7nIk1/qEtELDMnUuNWMhdnubpl1sTihXbv
s2K4kPR/cs6M2NIzLTkuhIuWwvEpasSXVgc82BrARfRQ84zRs1w4OB7zCFjN
xZXvs2Y8IvY4uGB0vSMXBRO/O2YQl98MWrl9Hhe/rGS1VhAX1S83TrPiQtXb
rlGSuK1zpmqNKRf1Ty3LMgu52HKe0vxPmwvhm2ALPWJxx4f+ZcpcJN5dmptW
wMU8K2nVa1PJnOW0wgfJvvqo1t3sMWvUGVxToxNnuGa8bPpmjVyd0X+r8riY
cnLl4R291vjgo3d+fS4XssfN4+1eWSOa5nLSPYeLGqk/ltRWa+RMGfE0O8PF
++CV0qy71sgI0z3Ylc2F1VyT7auuWyPxyMx7wVlk/n7MV2cuW8OjbF/pmwzS
7/hbB6QLrFESrS1pcYqLSaOGL9JPWaNganWo6wku3IsTJ9odtsZinS+tbse4
+Pt4he3svdY440X9ZJnGxdDTGfc1d1jDZKnUo42HyPnyZc9KW2+N5LS0mIYD
pB6Ps9Lya6xx0afh3Og+Un9L8M4KV2ucYg+skkjkYr31ovVJi60xY5VB6fM4
8v5xnXE5aZ41NnzKfRK7mwvzyUdNqrjW0FT++nNsBxd31OflKtOtofNGc+26
MC6WNyqGrtGxhsvSi8uXBnOxMWu31lJ1a4R/e3huShDJv7WH3+YZ1ghd+fDl
gfVcvJ6xuhXS1hiu3RTS7cvFud4bT+dLWqNDICk7YQ3JU5H+y7FRDl6lnLEf
cOfC9WS89afvHKz54J1pTnIRcPu29upeDqx2SzvELOSi009l+tsuDhQ/drdm
kpws5vMNsl5w8HBbhfZePhcvvvmHHHjCwfb0dRwbkpvo6ZU/Lzdz4Fv4inLT
klzn8XOlGjiQmK+kIk3hYm/nRJfUWg4cDQuypDTJ+zNq85QFVzlosa5c1kFy
ZN906mJsOalvWsH7mGlkvp6fQr9eIvW8uHlzaDLJ44/pv1OKyPOU2+1Y49ZI
ncO471nIQYC61WT7HyQnu+UDPHI5iJsSvNt0wBp7fina7c/mQBDInxPQaY1b
njWewcc50Ir6lYmn1ugsn8czSePgfP/OxP5GazgU/CmedoSDRfMWXBiotUbh
la09Wikc7Jvxo+vONWv4OYzLuCdzMEtRVzq4xBqPLsvzbyVxYPxSXmW4kNx/
8ZrkxXvJ8yeYPIpNtYbnIPZ27+HAgteffngfyaE6V6snhgOuo0JgZIw1sgNd
8uR2cVBy1ShcEGYN/YCo7yt3cPAo4WZv90Zr/BvXfV0fxUFt348R77XWkBsz
oKyM5GCxtV1vLcnZrplK6VMjOPirLzdxsoM1GlKSnzwL5yC0nH3GRGSNpX7Z
R+6EcXCk+Is6nWUN6iPDkOZQ0u8W3afaFGsMKJkrfwvh4MLTedzh2daQDVko
bUF8eX3NrRIla0y2le6O3cbBFP2yl25TrVHc76o9EMzB/isB0z7+5UC3ttNu
M7Gd3aQOv28ceKftejqBeIrr9EeP3nNw5ksp9+xWDlQGJXeYv+QgpXL0swfx
k6LerVEtHDSucVmmQ4xFbXbXSS5e6ue1DW3hYIPt4cyBSg6ohw06HhJfnCs3
Xf0CB59+9N6tJJ53Z4xvc5qDJS/p3wqID/5Y1+qWysE/OenrGcS/+9QCgxI5
OBR9NOoYcYirc8XuaA6UIo4lpxHve8BacfS/dQFfbf/z+DvP33m+HOwqnzye
Shxr6GdbtYKDX2020/9b5/99S3ezAzkHmzc3HyAWnawM/STkgGnulxZLbF4o
f1aWyYE4YWF1MPHGzKhZbGMOJIdn5a8k7jS5ELJRk9TZaHyWRWw0MX1pkQIH
/BU7jKSIt8T+svs5iYNvPLd9jZs5GDH5+tP5txU2jGYw9xA7U2KGbvVbQWbN
onRD4h+yOvW8t1ZY+/b9rOtBHKhnrJJoabeC9dVPfC7xb+ZivdBGK6yIY4UX
bOLgS9r8y5awgm9S5PzRQA4Chau1JldYoXNuDt2KuPTcWNfQeSukCniNqzZy
MMw46vMn2wqL1d7n+W7gQMF4uvScNCtY7Ctc6bSeg8yKVKrPPitkr/U6qB3A
wWTKDErdLitQl80eeOhHzufGt/NsQ61wI2w/de06Dm7EaU46sZHsZ4qk6hcf
Mmfq7hZpbytwJzkNr/Amz7/NOHVqBal39tLWgjUcpJt2ujkstYKfh9uNJ56k
P2rr+zTnWyFafWdz92ryfrnRzFXgEc+5b9jkzsHnnOnuayhWaD/4ZQXXlcxj
9dzbN3WskLBrw8kbzhw4+J+WEaqT+2vdGlF1IvMw8/raq2CFKonSqqVLOFBT
z9asmGqFTbd0GWsWcWDwzYZeJGGFZYfZd+3tOJi0tejBvV9s+NyIfCpjy4Ff
Ydu1iE9sfHheylThc5CnrKck/5aNk8oqcV7WpD9T9YdbXrKR9uDewp0sDjzf
cO9efcJGXYb3nG00koO4/J6mJjYS8s6f45mT9Qe8C2XvseFvm53S8V9uJHRd
wm6zMRR1KGmZPtlPdbD/gzI2zs/Iu3tNg+TclEupLGajfvGB88UzOdg53/tE
cyEbNp0q70JIrqKUTO8p5LBBvzbuIS/LwdXx+bdiMtjo2Z4uFzOZg3XWDbs1
jrFB+XDnW+0/K1y4Rp345jAbzxTkVV+R3DlNvf3x6142lFXe7U4iubOaP02S
G8uGVtwC+dkfrFAbe9ru0k424gf9gpO6rTDcsjxqSSQbC5b49ta/sMLe+AIn
1TA28sV1VR2PrbBa+Xa4bDAbNatXW9eTXL5fkpJiEsSGaRP/fuIdK5x9tvbj
Gz82HI613DpAcvm84pNNtA8bMj4/FR9ftAJFLiift4aNogoD58ECK+TnUo8a
eLAx576y3PssK8TE9Aay3NmwOib/sjzdCkljr1IC3diYXdvo5XHQCg9NVB3r
l7NxXzh3QVe8FYTKhg/6lrLBP39MY3uIFeLbOBIVi9n4fIR14CDJqdA96MHp
RWzoXS3bsIfktP7czGXF9mwkK97cv3ylFa4tXXXlxQJiFZOHkxyt8GXXVjmj
+WwsPHxn9jGS0/uUxxtS57HhmaK8YSrJaerw9jatuWzEbZ5T4EG3wtbvysvu
itg4oc56lGpshZfWLs+ShKTenWeHLs22wml5NY8AAenHsvSZl5VJfx9eb1rD
Z+MjN39xuowVzDyWKQTz2MhdebvEh+S0WnFQ6pQNGxMWP1mr9oON1dwvKS+4
bKxoSdpT9YUN81ajaAvi7W/HeOI3ZF/n3LOOW7MRfGVnbWU7G2P2buHSxBX5
UgxGIxuf7h5UP8wh+b7q9uIUyeH8Z3JDJsTnOV6LBsvZ+LZ6g1+bFRuz5ifN
oZ9jQ1/D6ulh4ilq4j/rMtn41bfz1Cpip/bdu/aRXCnwaQo0YjdVF+eceDb8
cs/tUyTWnuereymCjbYD6ivH2Gw0forIKt1E7t8648EgcTNbKuziWjZm/Bgy
/fjf9dxijzwXNip1Nzf0ENtKXZVOJ3PpjZP49I6YblVMjyd9MZDb2v6fZ4jq
UrZZsnHY3/7FW+I74cFt3vpsHBxdwe0ifh/ysXq5GhvhHWbznhFr6J0aXyjH
RkviEcF94u6pNxcvkCBzFEpHlhMHvX2wetEwCxO/OojT/vt+7fTOFR9ZaNpW
83EDMfeRdszWDhY2yf6toxNfvR/Yn97KgpoE3bSfRc6b/82H9++wsMy4Muo4
sfzDW/enXWOB4bRFyZLYgXMgyvciC35Ll66uYJI8NzJ2NOWwIHOhttqAuOTf
fN9Fx1jYX2leHMNgY3GC963X+1nYPLg8u4bOJr+vamYmx7CgeLxJ8TONDYn6
h5+dQlkIct1y6CfpQ93J8iraBhZqmm7nfKSSPpR/GrDwYuHwuFvXDQs2OhRf
jC5czkK/76LeLeZsZAk28ePtWbiZcdhzohkbfceL5bv4LCw/6jsSSmEjhL62
ZjWDhZgpZwLqjMlcHYtO/DFm4bGTbkS/IRsWxy49uj2bhXrnOSPfSN9XGFhl
n1dmQS90d9VDXTbU0z0Nrsuw8DndPC9hDhtbJ1nFDUmwMPQ24KzibLIf+7iG
5T+Z0AhQvB02i40drmtGX/czob5i7OtFMreMH6Mz0nuYqPtu5nR9Junnl2V/
w18xkTys+fekIqkn+uPJhMdMzP8y9vOhLJlXoTLNrIaJ00vW1+tPJXlus7xw
9yoTq52+v104iQ3ZdWYvUkqYyCnvuSAgc393pMY96RwTuh7iI5J/Wdgd9aW6
7AwToUd+yKf/ZGFx+82k6SeZOGn3r2xkiIX5pVxq5hEmRlX/Pdf+xMKcifaZ
S+OYmPLa7trHdyzQWxImh+5g4n1dRcSu1yxsicw+1BTGROAiyufu5yxIxZcE
rNzChJdIe1D+CVmvPbdYdQMTm4Ivb5dtZmFuDCdIxpfs1zQj9sk9FqTdnlyw
9GQi/Ndt3/skR4cv3PBUdWaSc31MNaichbN3u4TUJUyoPk336SlmYeaOV/tD
7Jnosnm3k1rIwprPSZN75jHh43Ly4tLTLHw92xy4W8jEU6NK0dwTLBwturDZ
3oaJFU1SR2SOsKDT4XLFxorU2yE9ZVYsyW2EfWAulYmWKUeU1kWx8Fbv5ndl
MybS7+Jy3DYWzG0S+0uMmbh+Znh91EYWNNlLH4QZMOHOvvDM3oeFQ+FHv/no
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
s7Gn/9F3WW4+z8vFodp+jpWJD6v0fdJnQsszcOj5e4/4EO5Veq/tmTukVBwa
XONhfnb2L13Xovq/tlfY/sNc/PAVK/QuciNXTTQO9fSys0mJrdCriOkhf8Jw
KNdAWOWzzzK990H7x8NBODTMcUNU/tsSvYpmG9h5F4cedLuFG+os0a/d4OK4
7Y1DXwj8QzuiF+k2q5NJOudxiCylNM69tkBXe8YztHEch56GdDH3nlqgr/6b
eNZogUO6pqEymfV/6Gkle2uiaDjUVz91MfbVPP1E0R8SKwmHvfeLd7VzzdPf
cnLmxvPiEJe1lX3c6m86V3XhA4ENBiRv8s6eMjhLN5VrZTk7yYAKrReZXRt+
0Sdol74HdzAg0mffUK/iGXq43921m+UM6OmQ94xj1jR9V5xGqmYaA2qjt69r
JE/SPQdvy4xeZUCn3c3uwpsJ+kGbMKZvDgzIQ+joWf+ccToXa9mjG3sYkGux
5gXmT2N0/rtFjxqlGNCur+Q/PS2j9H2K3bYR29t04pMcPp7xn/SvwYt1Pyq2
6Ssk0YAcpp90j9sk/ht3tuncjnFRpw4P03/Zy3Fd/LVFxxnwTQTeG6KvJjad
rUrcoudrr7ZddflBJ3jfGLe0wXr1UWCLt3OAvtoS8YoPt0XPXXY+OmLTT399
J8mMMWeTrsuiLbj0vY9ede2Lo7z9Jp1gnJlg6tVLbx+23bixsUF3EfvaUlDa
RW9MC1vOgg36IKnMuNarkz5PXhELH1ynu1Q+0eXU+kbv2pl66s2tdTqBUih0
c6ud/v5Fmfsf/Dqd0b/1Ia7rK30NRJ9df7tGj/+2dDH6YxtdbMqrV3f3Gj39
yb0J00Nf6PkZp9f2NP6jn85pe5lg2ER/S3/BTh5ZpXPfEP3kc+oz/TqTYD2P
+yo9vlxfwutpPT2z23rzyNxfOvOw8C7Lrlq60XuHMpz3X/qh+EWrRo0a+siR
+5/EFlboH2+NhMYlVNF3Fxvav728QtdhOcHkKVNJbx9ZCSmcXqY7VGXuflBb
RnfC32262btE/8guruJ1sJROevPZm8dqiT6ZJnFGYLmY7ir7+o1rzSL9gGWf
YWblBzpxePzV052LdN2Lje1u7wvodjcOicemLdDnfa9P30Z59NOWlNOPBBfo
Q3TPPvaRd/Rbk5bqPn5/6CS2t4sGAdl0t9zeatfpeXrDDK9Ry6kMuidbVvdF
m3k6u8Ez46qbafQ6sQkV7Stz9NMV7/aoN6XQbVyk9Bb1ftO95nHv+Y4k0QMv
R/zW3/5F19jeqn2n+Jo+Wselq145Qz/94tfbLp4XdMdHb1pm7k/TGUokbhsd
iaaX6JWrxOhP0b0sbmlErEXQ3R4WPLJdmqD7aQvFPlgIpx9R8esyyhynJ34s
+B4Y94geMUxMCz85Rh8iDA90DD2k33X8pHWMd5RO0nVZ267wp+/+b8GyvmyE
zhAgtDhod5d+XjjhJMOFYfoQ27XiL1rX6dkh9AMqAkP001d6jkkxX6E7jJjO
D14foDP8NLpfcuECfZ3I9HSquo/u99yF3ursQt8DnVt1PD10Bndui/TwY/TX
x46FNth10v3ufP0cOWZF11hW14e4djrDvve9IWNGdJfXZSa44i90hoEh0bNP
d9FvJqh/LdnVSGfwe7jVTFWgt1ITDaw/1NAZ4hPS2EwJdOZ70nw/TlfQGfhF
vSZbFypW3zSZ3rYtoDOAQ6p5UHGFE1eK8pPgRDoDw/s6+oGL+5IzktMczgfR
GBJNFxtqvu+7xXacJ7Q0i8YwrwS+qsw0PjN66r+ZjzQG3RvNDselaKv2DyV6
1ytpDN/mudIWNWhqqkvO4ffraQy9vtO7Zmm0UdnTrjcYWmgM1i1eO6fMaY7T
Cc1L+77SGApzo6kbdrSc/XOvE9Y7aH4/66JmRp1ofQ2vzKY+dNH8DBVZwtE5
WsRg1737F3tpaH73Lt1nF2nPHUgR/DL9tNMjmV3Xgq7SDlQNRx3sGKQBLrOx
T+0WLTr/lJYXGqL5pTTrJLTfp23vGemnCY3Q/OqyTqrUBNL6VlSSZs//pCH9
G6eUNf+jFcTe6bH5OErzWy0/2aEXSrto0XvejHWcZoW79rv66jPawjXtz1nW
EzQrSvUSSnpOu9l0VPDIi0ka6XHZHzeVWBpjWx0beWiKNl8XpKQuFE9rtziF
/yUzQ/Prk1/4oJlI41/5YR/p8os2pFiVpxWaTOth2Fux9HqWFlvif0lG+g3t
dnf98u/u3zSNoa29oVNvaafdBSres87TrBbkCy/+zqSlxfHYRSfM007r493f
U3NpOm85emJ3/qHFOkvVxHW/pzXnVztkNP2h+XGIKJ8pzqfJP+VzLHFaoHml
d54W/FhI4+E9PFI6t0BLpByND5IuofXUzv5x5FqivdcsdG8v/0TTnz6b9yhp
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
      "]]},
    Annotation[#, "Charting`Private`Tag$245003#2"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-69.67191344816077, 72.50034057290695}, {-71.08612701053386, 
   71.08612701053386}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766114616068617*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"f1eb5298-9df6-4d0e-b22b-1ea702b71025"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageTransformation", "[", 
  RowBox[{
   Graphics3DBox[
    TagBox[Raster3DBox[CompressedData["
1:eJzsvQd4HNl1Jnqrqqs6ImeAIECCIEEQAEEkAgQYwEyCJJgJEEwgCSIROWd0
rq4cOwJgmiBplCzZkka2ZcmS5ZXXCn6yR5IVba3tXa93/RzWXq9t8VU3IidU
Fz9ZT9rv45kBSXT1XzfUrXPPf+65526523fxAQwAGDIof1xsHasfHGyduBSv
/HKld6izvbft/qne4bb2tsHqu4jy4Sbl59DKzyv51RLoF3x7CFa9juViH4hU
sFFqB4H4vvz3b8LKh1UnDiZ+cBshEDt0ermo90hs3eFDB09aWbJADR/f3lcH
R27w4udQwm2JZ3nG7cJ3qeHj2tvvH8jfXVFRXVVWXFZRVVlRUVlVva/uVKfT
4XA6XS4XUaSKH7NNT8yTFEERHjeO42630+3xUBRDunEPQRJOq2M3+MBHoNR/
YnZmfnpmamZyfn5u1jYzNzs9o/w3OTwyOeuyz0yOD06Xq7b/Qee9jnt377ff
7+zqbu3q7uroaHvQ3tndcb/94cjkjM01aq1WwydO4zan3e50OV045XYo9fcQ
hAefnxibcSnVx11Otk6t/ol22q10ksvpdhLOWacCx+3Tk9PTVjfuIJwO55yV
PqCGN5wfmHG4lY52OCZ2ZtzxWGcnZ51WD41P3K4vveb2jE0S+9XeESj71KDD
7XI6HeRlCCpwKn040Xbx7tnd6SYESqi72Hp/WAUPAf3VeRfucruUx9aTGnuZ
IvtPFcRaYlBIh2EGHZx4Zdher/r8ZykP7nZYp8bHZocHHM5zmw0IhukNegzD
dBBIvj5PH1Ed/xOumamx4fHJuTnlIThO6jG9HkPDYFSpXO7JcRd9VA1vbhsZ
mZq3uRw2q43oKTEa9KgO1SEIiujS9pztnXfaqeNqeEu/8pBcdrt93uqYyQZK
2QpYER1c3DU9Y5/xuDjV8uPmOGWcu22ugRHnPaMuXLgO0elQzHyHctpGR21T
c3vV8KbL97r6hoY6JkYe9F/QI+HCFTSKwnGdTttIT9f5+oObVXUkrEP1pti4
hKz6Ow06GEFgRAFDqKWww+m0vebLj7GgKmiwroBjWy4YwngUReI2F9VdnKSI
N376g9KoCnpFXcHojetmpdtRnWHL8cbm9n47TTz9m7+/FkX/rtfCfOuuHuiV
hpc3jszNOe02F8H88J9wOJoOXhHdrrtteTEIbD54Z8jltk5MTNsp/HPfexqn
cYKJO9x67/QeAMo6bC7n3FD/yJSTJrjXFyowLTdQBtKp1ntN+0HshXmX3TrQ
1TM07qY883ZXb/UmTXMcUt9692ypLuuuzeYYaWt72Dfm8rgcdpdj7rC2OXL3
rcEqE5rX67DNtTXf63w4pKhil91pYxq14CEo9dLwXoAVDDnsfc0Xb7d1Dric
Do/bamcuaiofgmrGDqFo4Yhr5u7lCy33O/qcrsnG5lkb26wND3LHDyO6ncP4
0M0rF1vuP+ixuwc3YxdczPVo+OXxB6UNH0HQ/BFXz63rV260dfTM4b05uhIX
3aKKX5s6oarRc3osu8/Rfe9Wy832h30znqEtaLGTuQmplg/p9JbErLySM4Mz
XbHIQYetr6uttbVrcGje7T4GSnFWFQ8VNly+3zsxb3eTDpvr2ilFHQ31Pmzv
6B8fdbhx+5l2N3dbpf4Q0ilTlDJLOe3zNus8hY9Y8Ynhwd6Hw1PTYZ1Ou+3c
bZXyIaSddTjsNmXQ2R12q13RhYRV0ccD4/N2HLe7PS4bd0cND7dS83NzczMz
1vlZZSafnZm1zo8OD/SOzticDkWl2+aIO2r1h+4wdruiu5XSw38qVXC5ZsbH
RsatdjfuxgmXnVHH3xVcLocy/zqUSQxX/unw4BOjo8PDk9M2ZfYmPC72pnr5
vAJSlI3HPTtL4m6nHbf19/X39AwMDduUiREnAq1qeHBHVKYtm2usvrSoi8Zx
l90123az6fjplo7OEbfbQbtuqthfEbxL+Zq7EjbGd9JKC+zOiROVu3duKzl0
omVWqUDhB2KX8TdFxeRw2bcaY1M7aYLAHa7eXYl6HWzIzCtqJZwtelUFDIEb
kjJ9eWy5xpjUDooilKp0pq9cM+6ZmLydqv72gGbRQ3kIe5YO3TREk7jTgXck
RgaM8mM+O9ip1vplPE56CK5la2Ub7gmbj2R73AoEAtvbu1SsB0Vg0CiQoszS
Si8ozVDEzXTErL7RwNTs6jComk8gaWdR+VG7wDCK3aeIx+3pjllFQKB2piNZ
g/pKy9+at2VL7ubN2VkZaRtnHDTGGGX+C6subVOk2k3gjczhxdv/vPd+Ja/k
Fyg/99hXFyjKC2AsNnwQEo7mOwgriDRvrRr/h2729+ap2f8pfPdySe+qKAxi
T5w/29DiDT1W5Z+phHxh9Rdo44XYsaePlhb9HP/4sBo+nWG9F1I3l1SW5+gU
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
xK6Jd69ZS5IErh2TiTyDDoXszH8BgksmUq03kOYFS/yJ2OjTvEFhv0/CCaNp
6e57H73/1oVg/y2zDyrs9RHLw8mP33//3XtL1uldW7VCBLqPiKMjjk3dtRhp
0mA4v/HGOLcFhcfL+KFrp/q5gXy7lh3CjLkbkxmHPljwl/9ZaASI0zqc1jN1
a5abNQPsVcrKmCwnhPF/0WkDgY97r1tOuOin1xbwLpXGIiyCJASSEVybCLaS
6abadWewFsJULNB+AKqpTvFWKp1Yo+YoQA7P020Cl/+9+3SXweZrF8YFPmQH
o3rjsKAAjhBETU8f23DGAm6tCxeAmKVwcUaVoCAoEOTND4du4pNsjVw6eDEM
JyxXBfn/i6+rr3uD9Rffd1S/B2IilOP/Dr7495ulgyiNrkmygT9ny2fhIhEC
Gmgbb/y+dbgkaVqLlyLreEmXIRQVoxiUFRm1dr7123V4yBBN63TZYB0fRjZj
YgxD3AcdpNbm0n6AePVZtBMK3QWwrgdetCcBsQgDu9kBTW/jX79GQFB2p1aT
4tFEbQQhRurpfZBr/N2EiTZY+f3/oagUp/FesbiROr2Olw/OeSFiTAIjzPSE
ZrGFV38434EbGabfXdZCRK7j/ecGRIiE5e9RNnJQt5zPh0dm75gIyqTw9bmu
P7KO34+3icRiTIZEWVj8Cm8ATTiySOO0kT51fJJVFtZTCVnrRXKp1B09ZSdu
qpczePvP0BKDM0Z7eyUze3C9+WNtM0Fcw4jLF8k+rQt8zwKjp42MmSSmDq2X
n0CaxjIziyp6aCOLX0zj1T/7763YlleW7iyaqMh1/AWHbWllZYVVih3WYdpV
/qrqyvLq6qrassK8wPX225Odk52ZkZ565crllFNnk4Tk7/j9ZXPRf1vgrG1O
AG/8/9/Iv2r5Y/N/J7uGrwmU6WoRC4LA6YhNF+VvnShk3QQEmptYDhoYk50d
9d08QWjg3tD9YfLvha7jg/REfekwc/vubevgtyK9iSN7KKvDcYvX/99Dtby4
yIzVX0s+2Kj8RqjnXWkzduNkV880bwJn2DicHxfmyTWB73zHBv9mLxOSdYOg
+nydoWD4xHPTvIH26IOQjR0Ae7PqZmnmDC/021caX4xZ/+gWVVQ/zdgGUeh5
7qIQDol4HMnopC2jiTFRMfFxF9rGBueNjPXCvpJRZpHP/4ETkd/RK7WDWovd
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
o/tntBqlSq3RUvz4MzmFVb0qdZ57knpkLV2xNJPowcpMKoVGpeNy0xXy4uOK
a29Mqoc8QQwzedx5xKfKVuCtmM3q1OpnO4qTw/kjyNfNK7RqdbeH+KxxdM1j
LLTbfiUUH73QRN4IdD1+36BVGpWmx0N0zjQU5jwSPmxNCSNGkmuZDABc8v8e
G0no9YPe4LytN9R55PiUKX6fYSixgs4SwP+TmzsHp3BNWMB1pmMtXN7pGXtM
GD6UXCVMc2D5v1fKwtyQSt2xtoIUNcH0NBoGkypwIfi1Kp6bwCnz4CHuoyhZ
b1s0macv1Dj4n9y2S7AqVFJDbaYz+jA8VFxdVlSUGnYm/4gwPPjnWAXdoipr
7P+7QQHfyBt5I98S+Aeu/wdaTv5B/D/w5Q2Afk9BXECj4MDAoF27/Hn5f+DH
96O/v6jLd+5/8smnn3z0MBW8dhaAYNcPX76Tdujg/gOHIk6cOnP6ZGTkqdOn
T505FVnx7MtXrz777LOXPynlwwd99Ojhh4xOr9PpDThNEQa9HscJxnzryZMH
Tx4/efrs6VeVfPjQR88fPXz89Dl77hP259Ej9q8nT1++fPboycvPP3v2/MXT
H9fx4UMevXj6+P79Rw/Yn2fPnj1/9uTpi+dPHj389NNHn33+4umzZ4+/5MXv
efTyyaMHn95n/3/06AFbicePnj5k/3z4+PkXXz5n5dFXTXz2h30fvnrBFvj4
4cf3n371hbPuL14+ffzq1bNHjx8/fvLs6YMv2/nw3pWdA7O49fbHjz/9bL7v
4xefP7pn15ofLuEzgze7Vl4+fXL/yw5e/s5yVXdv/5Bjg8817ljVV29f3rfb
Iyr72IHd/t7yghdPHj/4UTd//IL1RVa3lVEAMn8yiIqlbl5yCbeCLg0afe/J
wx+5zp/EJQAAPc+ayu58WQA8PNzd3N1lbnKpKFbxyZMHXwrav4qAsi9evvpq
JVgsl0mlMrlM5oGeMj949vTJj3uF4bNePX2iO4TJxGIxW3uZTLKfePzg6ecv
fiIID8H555+ko04HfhYv95LtVz34+MHzDxZvC1oFgCD6hVYkknLxB8RimbuX
W8vzj97+8MOJts7LrtEcPvKZ2hk9QCTCJOyHY6Ynnzz+69u5l9MEMUAIwh/Q
7E2zdy/GMLH/8ab3n774T1//8PSxCEH+E+yb+IHJU8Z5fogkR+JKBmzPP3vx
H79+tN9NLEwHAgFvL++SyaWYNDC+b2bxwxcvH99//g+fRQgBc3joeeujCKlM
EphSOfXh/WfPH334g9WV3/3qquD9F/KFzy6LQhJbtYvvPfjwnbu37Ea9/d/9
w5BMqP+D3PGqObpF63j/vVtWxqBRaMzL7/zj1y+PCnUA8LI+o3rJu+8v6hWT
Y0MDM5Z7D179u6//Q2OYt2s0h/ekXrzH3PnIMjU8cPN6zwh199MvXz58/sXb
ZZHC+LtY+erh2/dXxvp6ujrab6puffzhW08ffPT481vXBN5A/+eP7n8019PV
3tbSNmT54L6pbuz+oxfPvxL0/rAvYNMXD56s9He2NjW3dyrffmBvPR40dvvx
0x9PC8RXfv7goa67tbm59fqg/dNbXWc8gmZv33/yk3mB/L341eOPpzuam1u6
epTvv9WX4OV55L3nDx/9mdrl+LUmeS+e/XCivamppWPA/pHigq+3z+EPXzx+
+GOdoPFH7N3//NkPxlh8a9vcB7eKg9y85Wc+ffb4wVc6XqDUd/eBY7GX8hrn
Pnz44t3xtqbG5h7Ls+Xo4EMRsTPP2Fn0S148WtQ/qbesvv/pk5eP7j//wWRb
c2PL5NuffTw0rtLbP2Vn1If8eInl+ZNXX3z+xedPHz1++PLdybbGxm7y0Wfs
LPjsxWcvXz1//pgfj93+6WefvXj2/PGnD+5/+vTOWGNVzc2lpw8fvHr+9NXn
T188ffLwcyVf+4lWf/6SnT4ffPzxRx98cH95qLq4YuTtxz/8lG34p88ePHr0
+NHnc3x48b1fffn55+w8+ZhVHF68Nd1W38k8++zBi6++fPnyxVN2an7+lYoP
L7n7y6++/Ozp0xevnj1++vLORFtD3wo7o3/04ouXT56y6sOzx1/wl3/7lz/6
6uXTl2/1NlEvX66OtTZPv//FZxO1rz57/9PnT19+9aMvfzTAf/+//PJztpXO
yTzS333uGG5p03zyI9wz7c+YsOtffP7MPlmd6PN6NPv8l3/68tXTF7f9vXyz
3n5m7WvtIh89a5LV/8U0Wvqjt6OlrrouYv7q+atnL1Z3efnmv/fUfLPlhvX5
p2Xylp8pJAV/NgZdxoGBjl989dWrF7eDvT3y339M9rT0Lrz6sNC9+WfTWNqP
xlzunoOgDLe98/DLJ2fEZzXPHhqutw8uv3pYDbt+NiNO+3Jc0Ngt9d/b8ctP
qPtPXnyi62ofWnnxYqV+5atZ8ZWXQvBrpxTf/viLH//sc/to3/R7f/7TX/zl
Vz/XilL/XCF8/R/xzJ1Tz3aUFpT3q1Wzk4Nj2SBi8NJ/bf4PN347n5rw3X9v
5I38tyk86/+C8v+55Yf8AS8vi69PBq8pRuzl4e7h7u7GY8OFwL2y5nuX7wE4
kF9RXlFRUV59+PUVZPEV9RXxkccjIiLPxMTFxkRHRcXEREfHxJw5W91Qx0lt
0yk+vEdlbW1jUzMnLS3NW9LUUFvD/VdT3RDFh/esrGNPqt0StkRWarhjzuPV
ja+xb6yXX8Gez5ZTXVVVXVXJ3W9ZGfs/+5u9+Ur2YGXdad7yK5z1ZC/AVrWq
mhXuQtwvDlzD1Z8ngRXLeurruUbiLlHb0Fi3fgtc9evqG5x30hjP10G88kvK
q2rYc+tr664mVdfVNjTUVVY2NjU11ldX1te5xAOp3N3LP2jPobSGDAka1VCb
sj/U+9jlk4f3BPl7nOEatzFBUAeVlbE89UjjNQyiqLsEclEYMOiXWV/dkCiE
/yMguSHuVElTPOBIrMTJQ0Vgd0FddaOg+NcQnGpsaGis8EfXCCy3hi+Kqq5j
2z9JGD6iobo+N1gkRtccAERiJLbB2f+SXKOd6/f1tVEiwDnwcwEIxVLkcD33
TOtbzgvD720owCBbNIpwxcvEQZVsv6hvamy9KAwfXJ8rFa2lXhBhEjl6tqGm
uqKupqgkWhjevy5PInKWj2BiDHHLq6suL6u9eOakyxxQa3iv6nwZBxdhrNYm
8jhZVV1bU9VwzF1g/DfgVl7s5tx8gYq8A09eLq2trW+sbzkuDMyKtKgmEJOw
D14UlJ5bXce+Eo1NDa3JgrfwS/Mb9mFi1G1PZFoDJ42N7DvUWOgucHiGWE59
MJTvi8qqaWzk3j9WGqorGmIEukBAJKPxqOzIpRIWuoZurK2pLKuqivAVeAOp
TZmHr1Zw2DW4c/Sprq8Q9PxZudhYkVq+jmWlPvVcHTs2VTdfEXgDSQ01ZbVN
G/iG/IPosTJ2/GgQZL9iWzmhoaamYbP48mNSDA28UCMcH9NQU7eBbqqJlmNy
aVhyVU2DsPpDeIbFbxaf5IbJZd4F9Wz9U10i13rIqcbq+nV8U0GASC6X+nHj
p0u8U1CZf3b91u1HQ5FEhBzkxv+GVN4O6B4YFnEm4VJWcS1X13V8Q7JPWHhE
XHldravysWsNjdx021jPzWMNHLahsYH92NTU1FLPTWwNaXzlS0oauUGyurqG
m3nZnssJOxc1sHMPN6exE1I6Hx7Nra3ckIqKmlrn/FlWWlFWXFJWXlpaUVlR
c4F3/T+rpry0uLioqKi4oKCwtKyE/VCUV1hUmF9QXFJUXFpeVn2eD4/l1VZz
esLazOusfzNb/TXdgZuZXbSfOL+Wu3d2sGJn4Fpn6zVy7VjjPMhepqr+Km/5
uc7y6+qKruVU1jr7Djvtp2fUrSky9Q0NTSl8ePRaLVdSXaTcQ5pY78TX152G
kY3FhzPYCuVdit7Pu/6P5taxD7uuxE3sJo2rX+s8hT5YYtM17wsNFftdGm+R
nDq2/vVF7lI3+dl1fJaH5FxTnv/5pky4wY9fKzC/ib3RukJ3uQRLanDCG1Ld
ZIlNuT4JTemo68H3VPq1kqr6ymCRZ2Sps/yG+lwPJLkpz5fFCxq6MQ/fc02l
aWVsQzgH/uqaSyeL6/L84huF4J2nwBN5ZTUN9Y0tLS2tLfX1zc2NTcU+iW05
QopfuwYq8ku5fDktLS019fKli+eTz5/B9p8/IhD/z8H/v7MDYMcZgP7bkP8f
Oe0ztQ==
      "], {{0, 64, 28}, {64, 0, 0}}, {0, 255},
      ColorFunction->"GrayLevelDefaultColorFunction",
      Method->{"FastRendering" -> True}],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "Grayscale", Interleaving -> None, MetaInformation -> 
      Association[
       "Exif" -> Association[
         "NewSubfileType" -> "Primary image", "ImageWidth" -> 256, 
          "ImageLength" -> 256, "BitsPerSample" -> 8, 
          "PhotometricInterpretation" -> "Black Is Zero", "ImageDescription" -> 
          "ImageJ=1.45b\nimages=110\nslices=110\nunit=", "StripOffsets" -> 
          255, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 256, 
          "StripByteCounts" -> 65536, "XResolution" -> 0, "YResolution" -> 0, 
          "ResolutionUnit" -> "none"]]],
     Selectable->False],
    AxesStyle->{},
    Background->None,
    BoxRatios->Automatic,
    Boxed->False,
    DefaultBaseStyle->"Image3DGraphics3D",
    ImageSize->Automatic,
    ImageSizeRaw->64,
    PlotRange->{{0, 64}, {0, 64}, {0, 28}},
    ViewPoint->{-1.6568704793629423`, 1.7433739302936433`, 2.380215862855323},
    
    ViewVertical->{-0.9917517438465164, 0.10572324543353409`, 
     0.16563267274875976`}], ",", " ", 
   TagBox[
    RowBox[{"AffineTransform", "[", 
     TagBox[
      RowBox[{"(", GridBox[{
         {"1", "0.5", "0"},
         {"0", "1", "0"},
         {"0", "0", "1"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], "]"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661147302900467`*^9, 3.7661147302922773`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"1cad9238-a889-46e5-b7cd-a05bf905bc10"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[Raster3DBox[CompressedData["
1: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
WgEE85OWKOor//hbC1quuN22NTm1pCBJ7L2/qU0E0IAbudBChePln32rb4S1
WeyEcXN9W8OwNrOZWAXhf2+wRJ0R+50vNhZpSQvGYJp9pY5hSNyKMfVgW8Eg
WTtrvp8XdNNBESxp0aj0NsamNVvsSt9Hvz8RcT8xFC7MVjoZhsYNGp2JJBRj
uyYabCT2bve/i3WIgzodbq4NmLVag5Wyz1eNEYZGUP5PVq7GIxm7LgdmM2mU
ah1GW9sTp/F1oOx7Xj9crbVbKGumnJhJr9rdU2gIeqcoagEfAstHCfHCVneS
kZglFjeqFRsr65s6mh4Jy1XZ/By+flqa439Rsf4uKi6zsEblzvrM1MKanjW1
yuopTbFvBS7aWOzafJwgZJKyKreWRu+NTKzZHOuJCetO/zkYIFFQVHLxje2N
TFSWq2HUm4ujt7vvjW3R5HDkTRbv9l0arRpcVeqMZis+GyOVye/ipq3F8b7O
m71jOpoZGjG6fJ+AACfP3SxbYqwGq+aqRCALyNillItTg10dnXdmrDRB4wTe
5RO/C9Q5cPA6YVrm+J+PygNv2y2bs6N919tv9K4ROEVhLl8pGCE4YmpFLCjG
tnP4fBFfIA5IX6d1y1Mjvdc6uod2KIJyMArf6/83TbmIfEmbJhKjAoFQLLtp
se8tTAx3X+28M2GgCMdIsu8mELfvVcA2IfdOIUJUkrRMGzfnJ4e6rnUNLFoZ
fNKfS7YPL+IHLBsLJGJUKBJLxK1mQrM2Nz54q+vu2A7BmMv8uKDi9jdk/EJs
LkgoEiB8PhyzzFgVK3PjA7fuDM+oaHLH91DK8b+1iC9bcPVHBoVFxMSntO9h
pGmbq6CPa0XLRood8rf+v74s5edaHLatnT0lN3pYzXabdnNldrT39uD4mp2x
3vK3/k+W8CULngfHbqeDG4JIinXRur2tlfH+kalFNeOy5Pq0yiFZVS0KBde2
t3v53xsBcKW2ujQvLzczJSklLT07Pzv2mZzq70DOUzA9zf8X8p/MNc/lufyf
IO+2n7zrPhaWmZsX8Y75Hwq7/+CFQyPo+X+/zP+x2+o1sxuU/3+xBoifqdhN
jFwkwPCbB/He7qeEeJLb+NylNnYEzOhDn2hw4UFI0+9WKG1A6fd4d693NNdd
rq6uKosXngT7QQgcu8FqtPRdoP3/RjN28NDBze/Hhzu5J4FiMCzIXPZQxjGg
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
aP7nL56/+KAESIBHjx4/efyEFuLJsyePHn35+OmLb7796uXLl0+/WQ0EEeDL
h49ffff6ydNnL7569er589dfPX/y9OnT5y+ePfuoGkSAjx8/emVZvPf86+cf
3DSaP7lvki9Nj5kfv3j25WtpMIAAZzLVnw7zgudfEdfC/P3SCy6FB3oLQ8Ze
Pnvy7NNaMPv/ivwM6+p7unCUw3PnczhcGgf6dN95/OQbBUjNJxgO2XxbPPLh
u1lsNzcBX8Dn8Xm4Rynx6OmzT0CSTjFRt+++fv3texl8GnlzuDwuV4CdX/34
+fNn36pA6m5DsPfgV88/ngrBOBiG4Rwul+ueufPk8cuvv37YCOZ4HH/ryx4f
plIzQvPTgxA8/v7DR88/v3sP7NYfcmv8bAhB6eYdtw9u7mdXn33y/qdvLQ6J
k1xzMwJEbFkvcTg4hiKM/wTn7PJnj5787We9RUUpQOgP4pZ+NMnl4nT/MRTl
BaXPf/bi5//H/0TER58DCqeHWL7a3QQeh4nVxc4kVY2RX7z+6vf/+efFnoBZ
OCH02ttr3lwejgnOFC2o733x6tWTxz/9D7thQNyM5uOvflTmweV4p9TP3//i
2cunn394/+6vfjMIcgHkeAA77sG9ZN65wkni7iePPn73/u1tE/nhf/xFOw7q
AcFZfLya0yLdeu/D+zsWQqtQm2++80//16+qAVMRQkji3c80y9Z33tvWytaW
FxZVu+8//el/+s/f1YYIXHM7XCAmH362fefjW4rl+emJyQXdnU9fv6a10Sej
aWAPgCOtrx5+8Kl9aXpidHhkwfjg848/fPbo4fNn+gywHrCaPnn+5efE3Njw
4MDgDPHuw5tjs+88fvnyR0CvIS1A4Orrx19Yp4f7e/uHp4kPPzE0RyYq3nv2
6lEXIPwuePfpY9vcUH/fwOgs9fHbSzl+voO7nz39zhYBJoDf5KvHb68M9fUN
js2TH+70xgl9Sj598fjF036Xqdf26fpbLz/Xjvf19g9NUx8QNWGenhHG58+e
/GjnHIgeYXOjlC+f3F4Y7O0bmCA+MBb5CoQ+tV8+f/Ls8aBTTswjIPxSUnZl
x+qDRy8+UY/19fSNGR6+XRUecTFp/KPnzx5/vX3OCTvk374gI3YefPLl85eP
Hz+9szTQ1zuq+fjlW4vravLul8+ePn32pVMB0Jkvnn/1zTc/+ubl06dPXn6i
Ge/tGVF9TG9l9K76+vXrVy+fuRAg9qOffv361YsXTx59Sf/ZmROLelYfPHv8
9KuXL75+/eLl86fPHvY5mwL2yo9+9Or508cPP//sk48fPpD2NrVM7T36/CG9
pT978eTJk6dPXlucrQE47rNffvvN16+eM0eJZ09uLvf3zt18+erJ6+9+9BUt
w6tXL7/60qkAqOS7n377zcvnL1+/pM8hH6jGeiesT7569cXzb14/f/6cPmE8
+9q5ALEf//LH37568XRnYuLmV0+25gdGdQ9/9On8wusXn3xJD8J3P/7u82bn
I/DdT35E79qtfoJ005P70pFB6Xtf78Wlv3c3s+3jb169pejLD3aWlQSKfv8n
X3314vG6t0d490cPicnBuZ2nb1eeWX0mDpj5SnfJZTZbeOopPVSv3kv39My1
Pr69PDRm/OLLibDqz62R2R8Q4SyXOWEuvfeL7759/VjqLwwb/PQT9fjQ6v0X
27ln15+I/QYeitiu9DDEypPaHnzx9cs6z5i5T+gRHJ6xPnk6G1Dz0HIh7YEx
HEiD8P0T5T/7YOfL58/f2xwZk7776jE59d4XPX49H4sA9oH9X8khP/7qxz//
9r5sbu3ut3/1y7/72V/vRl75wAqkgvYVCRrWrlCt9jXWdy2pldLVhYl03vWh
pH9z/A8dfmVm7jSX6W/oDf2F0p+I//9kQt3cBW4CAR8w9/oPiRtX19rSSlM1
6HVj8pXUlOSkpJSU5OSUlKS0erG4i6bOnuuA596+/v6+Y+oVd3Ywfzo6GiPB
BOjcJ7pJmmg+5i/mu+5ssApc7e2i9ja6wy3NzS3NdNdb6P/bmA/rzwMJIOro
ELWLaGJ4mC8MMy2HSJwDJAAtbFd3d9dBJ5gOdInFjp+ao0AE6KbHuyKrobNT
3C1ubxP39vZ0d7Qzo9HRnecOwH8mtqo9HRNmiZvSwgP9E7Jizof4e/ldb6ef
0BwNNAJ4QYknK7S+zh9ms3kcNmPDRmHh9bYOcYEQZM+EhUVNKemtLVEwkwAP
d4BQNn6psbOzBSjrNcQ619jd3dMeSWNPGr0yGBhFLtZ2dorERQACMO73aeIO
UZ4PirIdDgA0CXPEzGJqiQVgZ6Lfa7oyPSAHPxvBMA4SWkuPn1jcVwoGnznx
HdkITLfNCIBiHH4UPYVd3b29HYlgAnhX1weh+9UXEBTnojHNnaK2zs6mxutu
QA9AL7ZnMdkPEfoBKP1NSH1ne0trc2ZClMu6T/sC8Mvqg1Em/yKKwBCbH1kj
6qRfgas+HED7N/tMcz6Pib9A2bhXaHJJC/1W9HQ3hYNx04TltkfxmAsQxPt6
ZSv9EnX39Pb0l3iA6kE4qKEmkJ55j4jkqm6Gemj+7s5cLqAehJCM9ss4Jyi2
sIVh7e2hqbujrSsHaAkyD/C50RDhGVfcSvMesHeKWlvaq8+5A3YhVVQTn9nQ
3ctIzhCzgkWirvZMoDXAYnmUiRvK2w+YaWrNL+gS0+tYlAzYg9iWzlbREX93
Qzw/vJJW5uJyT9fMDL97vrij84hfXHkWRzkRJR2drUC3YPREXWxils0+9XZl
+WBcbtCV+g5xBaAAbpniTvFh+y0JPIzHj2iktXFbqivOgy3/XGNn12H7TeeZ
y0iPUloViyu9QJpHBWdruo4GoOkiTL+KvCRmL2hLdbqKuD5hkfFXckrrROKu
jsMOdBeFhJy/mHyjw6UAkH9ddy+z+/Yw228nM4L0+qfnoquX/riL2U/brjgT
AM1jti569+tgNmJabzHUTWswevkw3F2d4mpnigTyq+toO6TWto5OZjttb25u
bWpoam5pam5ta2tKcGr/T6e1VWNDfX19Q11tXWNzU0N9Q31NbX1dbW19Y0ND
U0tze7EzVQAF1HeKmIODYyPu6nF0QEz/5DhMMAcaF2sAzWrvEDG/K2b63M2M
Xw89FT2djg/px4i6Kpy5Q0EBdQ4BukR1VTXtjjVEt99SUt3lONow6qwt3tkI
wBltDvnTvQXcuCYHf3fXdbeIhpaknLauzvqitEgPp/H/fnXMRHfk83CeT+7+
S9SR7+5V2JkdUtpVEeTyQAlfowXo6GoK4/J4sU37K7AmlBvX2nAupa3Gm8Vy
dSr2beyhuyrKFXBx7yKHAN1taXzfws6c4HxRGuxaD5/Lq6xv6xJFcwUXKjod
/OL6MJQW4Gx8i9PldzwIuHtIobiuvLWro4vZA8Sipsyrze25IXntTtf/Ibvj
r7PFjSKxuIc+2A70d4t7+3p7W84miOqBBHA8BGJzwrLzC4qLi4sK8/Nys7Ou
Rwqi0kFqmJwQ40+kH0YAnLoi0F8K/b8QTUI0
    "], {{0, 64, 28}, {64, 0, 0}}, {0, 
    255},
    ColorFunction->"GrayLevelDefaultColorFunction",
    Method->{"FastRendering" -> True}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "Grayscale", Interleaving -> None, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "NewSubfileType" -> "Primary image", "ImageWidth" -> 256, 
        "ImageLength" -> 256, "BitsPerSample" -> 8, 
        "PhotometricInterpretation" -> "Black Is Zero", "ImageDescription" -> 
        "ImageJ=1.45b\nimages=110\nslices=110\nunit=", "StripOffsets" -> 255, 
        "SamplesPerPixel" -> 1, "RowsPerStrip" -> 256, "StripByteCounts" -> 
        65536, "XResolution" -> 0, "YResolution" -> 0, "ResolutionUnit" -> 
        "none"]]],
   Selectable->False],
  AxesStyle->{},
  Background->None,
  BoxRatios->Automatic,
  Boxed->False,
  DefaultBaseStyle->"Image3DGraphics3D",
  ImageSizeRaw->64,
  PlotRange->{{0, 64}, {0, 64}, {0, 28}},
  ViewPoint->{-0.3638502326316644, -2.460819782130849, 2.293900391927985},
  ViewVertical->{-0.09292894944458241, 0.12212975109664971`, 
   2.2586379531567355`}]], "Output",
 CellChangeTimes->{3.766114730783039*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"c6c95d5e-5e63-443b-a99c-d8337ef43dc9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"EulerMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Pi]", "/", "4"}], ",", 
      RowBox[{"\[Pi]", "/", "3"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", " ", "\[Pi]"}], ")"}], "/", "4"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.76611496807367*^9, 3.7661149680755663`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"f1d834b0-da5b-43b7-9a6b-7950548d0723"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"GeometricTransformation", "[", 
   RowBox[{
    RowBox[{"Cuboid", "[", "]"}], ",", "m"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766114972950779*^9, 3.766114972953082*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"49c9305e-4d3d-49fe-a82f-882e8b35feab"],

Cell[BoxData[
 Graphics3DBox[
  GeometricTransformation3DBox[CuboidBox[{0, 0, 0}], 
   NCache[{{Rational[-3, 4], Rational[1, 4], Rational[1, 2] 
      Rational[3, 2]^Rational[1, 2]}, {
     Rational[1, 4], Rational[-3, 4], Rational[1, 2] 
      Rational[3, 2]^Rational[1, 2]}, {
     Rational[1, 2] Rational[3, 2]^Rational[1, 2], Rational[1, 2] 
      Rational[3, 2]^Rational[1, 2], Rational[1, 2]}}, {{-0.75, 0.25, 
    0.6123724356957945}, {0.25, -0.75, 0.6123724356957945}, {
    0.6123724356957945, 0.6123724356957945, 0.5}}]],
  ImageSize->{399.1756647302226, 365.95806952580017`},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.997618604005968, -1.563736834748034, 0.1378760913628969},
  ViewVertical->{0.6733965150241186, -0.0039710704502586075`, 
   0.7769732551119027}]], "Output",
 CellChangeTimes->{3.766114973333351*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"d02faf37-38d4-42a4-95af-557fb662be6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Laplacian", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766115037937049*^9, 3.766115045854692*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"9990ba5f-4548-4c76-8d4f-1982c967b50d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["f", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "2"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "+", 
  RowBox[{
   SuperscriptBox["f", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"2", ",", "0"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{"x", ",", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.766115046115882*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"773cd8e0-856b-4b5d-a86b-e4e9e0549436"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RevolutionPlot3D", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", "t"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766115076793086*^9, 3.766115152163699*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"faf96dfe-dfc6-4c8f-9aba-5be3a0bcbdd7"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXV4VMnShxMcFhZfZHFd3D2kBxZ31+DuENxZFgvuLCzuHjxImJ6QEAgR
AiEQPFggaAwn8J3p+lXPcO5+9595bm0/darfU11dVX3SFO47qt2AFC4uLqPS
uLikNH4r9ZsS+ONHWtvJns0un117ynqv/5BLRUp6itQdGyQ2WZnKVq5t/zxb
PY5bJ9yO6DIicYm43ejXQiuLudp2/Tlj6NwiR6xTO44s9GPZTtF9zJH1p0Z8
lXWGV5wYGb7PGpj9x6W8M31ESqUnSZZRenZYI4rmWpyzS6Doosa/kjXV+PXW
cWs3Fbx++Jpor+R3ZRUl97K6FNzd9HyzWyIo+YfxP3+32rbupeKve9ZpW/1G
lYYLbotBNF40ovHuyQVofF/SL+qTfvfR0J+O7BEVyR73YNjTi+wXgux3Pwf7
79J8LXtovu5jMN+0xMdSgfi49wIf8LSApzvz7DWkTbolW1LbyuVqXHBFRJJk
edtuhdJeWJDCNrrm1bwvb8dL5jxvbfQvb598l/2PHy47z/ZGMudhk2al73Lq
k4x9by1aM/S5ZM6tlZ4EOVLpeSSZ82A1/oWMUeNvSebcT8mj5GMlvySZ81P/
/Mfep7rgVnXN99yfux11Y87jabxIpPGCOY8h/eId6RfMuQPZIzzJHsGcR5L9
4jXZL5jzQpqvGEzzFcy5PfGxjCE+gjmDpwU8BfN8M7Re/dFvkmW6Uo3OrfRP
YWP5uzdv/0rY/Vm2GR5WuWtOFxtzThi90W9c7/eyQq9DHUTYF805KbGp68c8
8VI+O/9nyJj3mvMbpSdWtlJ64jTnBDX+kfRV459pzu+U/Jo8reSRmvOXjd88
F8SddrtYZkhUUkOpOX+l8eIyjdecP5F+EUD6NedEske0I3s05w9kv7hA9mvO
STRfUZnmqzknEB/RlvhYmDN4CvC0MM+MMz2e7vd4JjMce/E4aUBazbl9k9Yv
RrR+LNuleb1J/JpKc65WdE5UnzkP5Ppu77osPOViY87+J4dEPx8SJf16PCu5
//wXzbmt0nNdtlF6kjRnmxp/WVrV+Jeas6+Sn5ZnlPyO5nz5ZQv3WqHb3A6s
nr5220x/zTmMxosQGq85B5F+cZn0a86dyB7RgezRnC+R/eIi2a8516T5in9p
vhbm3JH4iPbER3MGTwGemvOIdjl2HTLk9ScdO+vMOXhZtwajDT3ZB42b6sy5
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
LA+y1Rv1xP+4+xr4VWXyN0tj8jfB8mV1P9e6UOGLfN7vfr9Cw1xs7IeVsxyt
lMPzg1xcNza3R/Fv2t9uPB5cauCJBNnseK6hE8d91H71VvWx38j0qo+doP2n
itITI5cqPa+1n8Sr8fdlBjX+sfaHVe++eo1+c8j3z7zixUr/Y/q9P1PjQ0VK
Nf66fr+xpEekIT36PVag5woveq5+Xy/JToxP0O8lguYlmtC8NP9KxEEsIg6a
81LiJmKIm4V5lnkXPj/n0ccy6N9FjapPTqV5Nu3VsMys1NFywdzy+ycudrUx
z/DNYzdFHr8jlzzY/runSNY8M6nvlyLlL+r85aPm2UzpCZdeSk+85plZjb8o
M6nxzzXPorOW5TrgscY3NHdy3vcDfDTPtGr8SZFKjb+leaYnPSIt6dE8G9Nz
xTx6ruaZgewU6chOzTOU5iUW0rw0zybEQcwnDhbmWZq4icvETfMseHlMXC5D
XruUR1FnntfrXq0z29BT+U7qxc480w/q+utt47ntf+sVO8aJ50h1bhgp/lTn
hg6eEUpPuKii9Dh4jlLjL4qGaryDZ75ujaMOeaxx2/kgMCHJiecgNf6kdFPj
HTyHkh4pSI/mGU7PlRXpuZrnMLIT55sOnmloXrINzUvzvEYcZCXioHkWIG6y
FnHTPAu9qVnJ3/DbMjkbuzqv999nb06d0/Bz15XPR3V3Wu+5cqW6Y18XBz9b
7k9wWu/F1Xn3G9FZnXc71nt+pSdGpFR6HOv9DzX+vuiixjvW++iHS3aOeXPI
7e+2qyY6r/f8anyobKvGO9Z7IdKDc3bHes9Dz5XfV6jnap5FyE6Md6z3nDQv
uZ/mpXnmJQ7ShTjo9V6AuMnSxE3z3L/u0QF7XE3uPeZBfqd9/MdfGVz3G/F5
Sc3JgZ2d9uv9UQMP2uN8Ye/M4WOd9mX6TuO9OKG+03Dsvy6z7XrixDKlx7HP
dlbjn4lTarxjP13+bdFCY990a7do+S/LnfbN1mp8pDysxjv2x7akRx4lPZrn
d2V/nFxIz9U825Gd8hjZqXnuoXnJAjQvzZP0uNgWEwfNcx9xs30jbno/KpCH
9q+xd+a+ylrax5d59guhfTCvZ3TQyzvHfZlnmx+0n9rS19nrv+iIL/O8M4D2
5TD1fdF+X+bZP4T299+Vnh2+zPPeAMoTwtX4Db7Mk76nOu2WYeHmFrUmDz3D
PCMGUN4SqMYvdGOeN0mPDCI9bsyzDz1X5qbnujHPW2SnDCY73ZhnS5qXlDQv
N+bZlzjY8hAHN+aZn7jZPImbm9k/v4Az8yS/crF44b0wzwPwz/x4j8yzE/zz
KN4783SFfy6CnzDPLvDP4/Ar5rkC/tma/NPN7J8HyD8l82wH/zwMPzf751ys
C+bZHv7pjXXEPPfCP/Ni3TFPrFPbfKxTs3+Cm2SexRA/OQ4wz4KInz9WUNxg
nnkRPznOMM/SiJ8dEZeYZyHET4rDrzXPsoifnRH3mOc4xM/ZFD8dfTzEzzYU
PzXP4oif7RCHmWc+xM9vFD81zxKIn+0R55lnbsTPvdgXmGd+xM9k4qB5FkH8
LIV9h3lWxP5eE/sU84zG/l4R+xrzLIT9vS32QeY5C/t7PeybzPMR9vdK2GeZ
52zs739iX2aeFbC/b6f9XfOcgv29Nu3vmud07O91kScwzwfY38sjr2CeM7C/
uyMPYZ75sb+3Qt7CPB9if6+APId5VsD+XgN5EfPMgvzzCvIo5lkF+acX8i69
HyH/XIY8jXm+m0H5ZybkdcyzKvLPhcgDdT4/g/LPzMgbmWdq5J9hlH9qnrEz
KP9MQ/mn5vmK9Ij0yGOZZyXkn/OR9zLP12QnvvN38NyD/HMx8mrmWRn5J+fh
zDMz8k/O25nnLNRHb5DnM89iqI/Woi5gnkGoj9qjjmCe91AfZUbdwTxLoD76
B3UK83yI+igr6hrm+Rfqo2ZUH2meEaiPqJ5yrPdbqI8yos5inkVQH61CXcY8
o1AfZUIdxzwvoT5qi7qPeRZFfbQGdSLznIH66DXqSuZZHn2PHqhDmWdK9Dde
oJ5lnt7oY+S6T3Ux8+yKfkUj1NfMMxX6Ei9RpzPP7ug/NEG9zzxvo88QR30G
zbM9+gkW6idonp3QN/gTfQzm6Yr+wDP0Q5hnZ/QB/kRfhXkeQr2fg+aleaZA
XR+DPg/zLIf63QP9IuYZTPW+bWdmH1Xvm/tIN19sVH0Dc78o85zUU+39B3Nf
aKz6bme3u7n/c0vp2epu7vOMV+PXujPPLuo7JR/fTfFJ38+uHVjH3LcZrsbP
s5r7M6NIj9Xch7lBz7Wa+y2jyU6rua+SkeZlNfdPIomDlXlmPDPPI3BgSluz
gn+v3ZQtTuftEe3mBAxJdrENzbXh+MlLz3Xe/mpmipu3Ir7JxteiYitvjHbU
lep87aNsps7XInXe3rKV57yn1nh5qE9Q4IcCl3XeHqj6289lIdXfPqnz9sfw
wxBTv6v9QuuQNmVvihNF/3g/tOcFnbePGHnkSI09MWLKuNAGCSeu6rxdtgiL
ed48XjQrn2rmjrcRjrqS7BR1yU6dt1+/lT162qpk0fXanl2heW7ovP36XxMH
pHniasny6PeGkwuG67z9Ro9vKZd++yozd4lpU7ztD83Nt+qigUfHfZaTOmWa
d8z4ZW4d7q6aNr/nB3nRa8aPhcmJmlu8OsdMkPXUOeYbza3h2AVnq3q8kY8W
LeuVPvKp5vbw1u9/N2z3VG7N3TN+o9dtzW0j4qEw9YtyF1maKsu3q6JEbM5n
tZ5d09wiQj0aTPgULZo/TZdqovHL3NaNOHo58tZLMTNqXeVMyc81tziyU9Qg
OzW3X3rna/TXxE9iSVKLKZU94jW3IP99DQZP/S7GrUxzslrJRM0tOrfXnCz1
nsuZoxoUe1rO0ccIz5PhxDHDz/Yv3Zd2qOF3zO3r1R6WlB9i5MpZUakH+HzV
3P5U58VP8b3Be83tSZl/6icOeSSD848slXn2O82tX8aOJf41eDVP1T57I4Mf
c6uDfTnY1BealG/SulmrzoqFlz1LRWd29DGKhvZt+Nbws4eDa2Soafgdc6ux
avSsTUvuig6zft/kti1Oc2tMdooZZKfmdjWxXcDL1G/E1dyVWvrU+6K5NQ6S
HlUNXsPmfcs3xODH3ErV7Tkpf7F7YnVC7v0ZTji4FUrbr/REwy+tTzONMPxU
c4u4P7Xlh9izwrV8uSMvEx39n+HBrpfscaoi6i3m5nut95n44kekr3yewfbJ
0f+JsNWL/9NYn9MefvpiX686n0F+uNvU/zlzu1qhHTmOyFl7BlyouM/Bzbvn
7SVNDT1fKp6PMfRobtFzppf/Yjw3uFWrlMZzHes0uF6gPQ6WQ/3K3L4f+1D1
hTGv6NW3fI15aW4b28QneRocNuypPc2+XpnbgY/3/B+2/CT82tRuOK6Qq+Y2
rk2D+na/PNb94mLDT/U6Hbz8bOvXxntJlfD64al6XzS3r5vt3z88FR/U9w8O
f9t4oOX4LcZ7rxFYd4jx3jW3bLH73sUZfjIv94IwIz5pbgNRp8w39XkK9j++
9lRgsLw763PqsJURmtvznN272Nd5obrljxvrXnPb0ulmhSTDz8MXtN796+x3
mlsi2SmTyE5HX+KM7VEqYx2lfD/Qu7/PV83tykh5/ISx7vpmi7ljxHvNLXfb
dR5V+qSwZCoy7FB8myQd357HR9+wr+tBmWZfNfxUc5O9Iy7b44BP4+wXKnnE
a25H1XcpCWKQ+i7FEd/KZm47/aYRZ157Tx6cMfm55ibvFwuwx6WmNy1zjF/N
bSnqZQ9TPydnTdGwl2uk7JJiy7Z3NS5pbpZtlif2OPkwaxdprHvN7VCm/p2r
GXG1gdf02ekin2puh8hOOZjs1Nw+PsqdfYERt9dly9LZiNua24YWNUrY4/uQ
en0CjXiv12n/B0nHFn5MZSlyvF7jpJsXNLcDjXaOs/tlp7L7M48vGK65dWr6
MvV0Y9/JEfag9JU8NzQ3+i7ooxiivgty7KcRM9pnfGHsazOCsk3Y9jZCc2vv
1+u1fR/M5zFvw7sTV6W5b1P/2qpSJVv/q/s230+E9ez44Za8Unv1hoT5azS3
6HR34+zrfP7yJbLRzJOOPliZEpvs+/jS0lHrEwpc1twuk51yLNmpuR35Y1GO
KCNPWNfubI1KG6M1t6/hjePteUXWi0+PH7/0XHM7NiT9eiMPsQye3tlzY7Y4
nQ//oPGWpAAaz9xOk34xGfqZWxi4WWAPc0tZVtkvKsJ+5vaC5isKYb7MbTX8
rYGpP7OjQsxhIw+Rp4aKPUN6XnD0Z4i/fNSd+DM3vC/ZHu+LueH9ysp4v8wN
/iDDQ8kfmBv8x5YT/qPPv+pceWfkIeJLgbIzirX9obntIf8UveCfzC3VY+XP
YjH8mbmdxjrtBP9nblZaL6I61gtza0nrS1zF+mJu0xHfZpj6MGWP/pIt67er
su/MA8ONPERzC6D1LutgvTO3mhQfZCTiA3PzwTptiXii6zKKP3Iv4g9ze0vx
SnZBvGJuqwa2fJqt3nPxqc+MT0/KOfoDLygeit6Ih8ztKsVP8T2J4idzy76F
9oU4xFvmdpriswhCfGZuaX9T8VwUQDxnbo3+n37L2TaZW/296qzcc3/Yx4eZ
Hf2BprS/yKnYX5ibH+1HsiL2I+aWleyUb7B/Mbc5tN/Jz/G03zG32bQ/yr3Y
H5nbyrAG63MXuycTPdcEGHmI5taC9l+5Efsvc5t0VO3X8in2a+bW+EiZYKc8
RHMLm6vyARGKfIC5Neil8gfxHfkDc3s7k/K3cFNfpUa6NZ235jgiZobsjzby
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
MekRkvTo+w//oOeKTfRcff/hQrJTnCc79f2Hr2le4iDNS99/WJL4WDYSH33/
4eKwjGV350qWA+dvG7fH+GVu11VfyMXWVvWFXPTfKY9z7X21l/snWbpRpUe9
jV/m5qH+DitRvlV//5WouXkp/W9kf6X/jebWTY1/Il+r8U80t85KHiFfKHmE
5jaA5OIjyTW3PqRHJJIezW05PVcMo+dqbr3IThFPdmpuE2leohzNS3NbRnzE
EOKjuU2svatpI8PPfh9ZMMrud8wtMGNzlyGGn413mXLN7nfMrV/3EyvPGn72
l4/XebvfMbfW0/zvljf8LHTljSt2v2Nu45T+hzKP0p+oubVQ42/IK2p8rObW
RMkDZKCS39bcupBcRJFcc+tAesQN0qO5TaPnigL0XM2tHdkprpGdmttAmpeY
S/PS3KYQH5Gf+Oh7TXdY3uW234t0thPdt8Tc7p/MN3Ruka3uDXGvJPMp32n1
BPt9SdvG0n1LzGeb0rPK/XQnum+J+ZRR473cN4+l+5aYTwkln+y+fizdt8R8
isXF/vFff49ci8ZbD9F4za0q6bfuJf2a226yx3qe7NHcKpH91l1kv+b2kOZr
bYx7Q5nbLuJj9SU+mtuQYL9L/3UvxIYtmec1MTjPfRy10dkP93v7jPI13sv9
MGs3Z387J3t1rWi8xyNRwVOd/W2d0vNQ/K30OPzttBp/QxxS4x3+dlLJA8Q+
JXf4m3/QL4U9Nh32PVP1SfM/pzj+XjuAxstzNF7ztJF+6UP6Nc/NZI9cQPZo
nlayX54g+zXPQzRf+Yjmq/1wE/GR84mP5nnxUpVW9v3g3x7tFhvrVPM8szVv
Wvs6H3N61frdTvHw3dxXc+1xoWfArtLOca+4+rvsRNFc/V22I+6dUnreiJFK
jyPuFVXjn4gmarwj7hVU8gjRUMkdca8F7ge4SvcDaJ7labxsT+M1z9KkX7Yh
/ZrnebJHTiB7NM8/yH7ZkuzXPBNovrIPzVfz9CU+chzx0fHQT51vutjqq/NN
F83z1h/Tztq5x464M6ix076cpUGxxfb3VD9N9b/OOe2/ntXb7LC/1383r9hQ
wWn/jVR6EkWM0uPYf0ep8bHiHzXesf8OU/LbYrWSO/ZfjzPHBxt+6Xv7ZlCG
7psOa57TabzcSeM1z8mkX24l/Y77n8ke+Zbs0TwnkP1yM9mveWan+cqGNF/H
/c/Ex/aG+Gieu1R+m8Z2WeW3CcLMMwbjmeduGm8JNI3PCs4Cz2XOY8H5H9hp
5vwE82LOo8F5LTgw5+HgvBLcmPMM8NwG/sxzCnhuwvtinnfA8yXeL/OcCJ7s
D8wzB3iy/zDP2+DJ/sY84bdiNPyWufmT31rMfhuP9d4D/s/cSmK9N8N6YW5n
sN5HYH0xt+I/r3fNrTDWewOsX+ZWAeu6HeIAcyuLdd0acYO52bCuxyHOMLfS
P69rzS0J67o34hhzs2Jdj0XcY257sb/MQfxkbqEUP8UGU/w8hX3nLuIwcwvA
vnMYcZu57cK+MxtxnrldwL5zEPsCc7Ni39mDfYS5hWJ/OYP9iLldwf5yEvsX
czuI/WUe9jv97xFgfzmG/ZG5ncH+8hD7KXM7gP1lHvZf5tav1Kq8TnmO5jZ9
+5RhTnmOvoe2vLo3TOc5mk8fpUfnOZpPGTVe5zmaTwkl13mO5lOL5JzPaD5V
SQ/nM5rPQHou5zOaT2Wyk/MZzWcmzYvzGX3f7ADiwPmM5tMJ+XMB5IfMpzHy
5PnIJ/W/C4A8mfNP5tMeeXI+5Kv63wVAnnwV+S3zqYw8+QryYeaT5/H8pK7G
fvDNbc5c+/7A+0I95M/3kVczN3fkz1HIw5lbN+TPhZG3638XAPlzJPJ85tYM
+fNC1AXMrSvy50KoL5jbMaovxGRTfTENddwE1CnMcxDqtRqoa5hnO9Rrn1AH
Mc/JqNfGom5inm1Qr31AncU8W6BeS0RdxjyPJPXvbc9XmuW/vSXQ6V6jbqjj
XFNTfcc8O6OOS0Y9yDxnoY6bgvqReXZEHfcV9SbzHIo6rjbqU+Y5E3XcZNS5
zDOI6lxLN1OdWxj9hADUy8zzEfoGYaivmecs9A1uoR5nngXRN/BD/c48p6Nv
EIl6n3lORt/gGvoDzDOjd7YK9ny68rmWNXoY+TXzXIR+QjT6DMxzHvoJ99GX
YJ7oY4gg9DGY5xz0E+6g78E8n6GfcA19EuZZFP2ES+i3MM+21G+x3Df1W/jv
L1qY/v7iblDymId1XGx7A7/EHH72Uq5Nbjqsd6vtot3J2F/jC3+Rp1u921pk
9zM59peoaaMGnRRxN2/VKhqSKC/ffNJt7cBo+fld7MgTEQHi9/hFQftfv5TH
zx8plaPVTdkhZQ6X8ffDxZHB4e4FZt+TB/+tUufjpksyd4n2v/9y7qbojT5b
CM6Xr6PPluSa8qG/33MR4HogTavDEWK6585KvtOuC49eqwK8qyeI7fF+KweW
eyDyHOyUWPr5JWGtu2v99MWfhBw9fJno9FQsPX3Ru8bpM6JgPp+RzR9/F4df
TIwMXhMrmjXad+l+2j2i3vSn2zJuTGHZ1Pvv37tEvhUDJjXsuqXUCjFm+IjF
iYGpLQ2HX6romSFBzN6y5TevpuPFOfydxRTT31lsH/Qg/bB/k2TdnJsS7L+/
3kvfufSY4yJntX7dms55J1Ps7WptZvx+t57LMq67v3i+If0232vP5KLik9ed
N34jNp/3+5w+XIxW6yVKllDrJUq2zpS/jleBmyISfzfREd8FlcB3KSkHn0pO
ceClCBkYWzqV8Xv1TmBkx5lBIo/rgruXyieIbUlP9142fm++LnJ8bjZfUTGs
as1f030U96t1dMts/B73PLV37+l9osm/j1Z3ePRV5Jl48WpH4/fzEvFr9MZV
okLVS5Na9nCxlL63oVIr45fvffpo+vuIyvy9U9xwr4mnHskH3YtmX9fnvewd
dv3tkjg/sanop5233kTJ9iPvWVbmeisNqC3bDwsTsVfKjpx1P0S+KubZ/cOw
R/KfLmmHe06IFGXxdw3d8F3ZE3xvs/+PUhO7pXkiMu0KX5bh4wex/fL4uDFL
rOJ82rzlYxq+ELagubOjWiSLrBlyzozaeVBci8nwbMzcN6L2xE21219ztYxs
F+fi1nWtSHycHDqjb7xYnf5TldrfUlmafJ7RZ0/q6WKwquvXupc3fXd3T/UH
lrs3UPtpvJy0rEKbGf4hYqvqD/zt7qP206fyD5cB+7MG3BDDSI+1Er4zfM/f
dUcPLB6XYZM1z+yY4SPufhfL55cN2RnmLep9neu3Um6z/tV6n9eIuyksuWem
nbKh/3qxE9/5VzF9VxkYvKnJ/F+viUxb1+S4v/apFHm8ks6nuyF88L19Knxv
Xx7vZfe+3J+WV3st/3lftvH6NK6Wt6c79vwcsFFY8d27wHewZeBXO/Gd+QB8
x9sAfs7n5iNM5+BP+m7ZacQNS9VVGb4ffPZScNwoeXpobyNuiCVlBuYqvPuZ
4LjhtX/tRCNuiBh/v4prBkYLjhs3a83Nf+D1SzHjdO3V2VrdFB0RN2rVPbvO
iBui//UnS95vuiTyIm4cxrlDqOn7n2xVfi8V4PdcHp/zYmuLwxGS40bJPX2S
jbghXTtUGtm/3APJccP/RLUYI27I3VnP53fv9FRy3Oh9If1VI27IFpP7pLqy
JlZy3Pjx/O1dI27YEqNTv+oY+VZy3Ah92yXciBu2FsUiX4zOkCA5buzAd9F9
TN/tR1VKt8uIF6Jly7Gd7b/ZETfylz/W2IgXYsKxDNeM+CF+IG4s/NS+oREv
RNsr5RON+CE4brxUdUSU6KTqiCjRBnEjEN85N8T75bjRPfvfgSkPvJTDrPn6
2n9DEDcm7hzd34gXskn7bwXtv9cRN+rLLc+MuCG7N3651P57EHEj452wgUa8
kCPrRCUb8UMmIW4M/fI90YgbNpmr3yn7L8cNK75nTsb3zLX4u7igwcGTTj0S
17+PDV/b573oh7jhc7zw0NtvokTLrCmerMj1VlRF3Ni758mU2fdDRFKxfMWN
uCE2IG744Dvk6lgvHDdCLn4P757miezjW7GJETckxw3ryU7Pnzd8IZceK1rS
iBsyA+LGkV2Hk8fOfSN7dPglpRE3bEMQN8Kbpcwwq2+89Lw6J6HWt1Q2jhuN
1b2ja93LYr1/x3qfqvLw5e5/UtwQkxE3eqk8/G/3UxQ3BMeN5qSH44bkuJHL
eq+kU9yQHDcSnqXxd4obNo4baSl+yi6In2/A4dWNpdnm/XpNNvYJ6WDEDcFx
Ixrfx/6DeM5xI+5wq49Lq70We643mmbEDdtzxI2L+E61M/Yjjhve+C7UC/sj
x40W+H7snOkcbarKA0NlR5UHhkqvan9lrSSM963y8LNysMrDr8oO+RaVT9gW
JYqp/u0Q93Wm++dzQj4fch/Id6o68ay4qerEq7I99AxVdaK3GKzqRH/pUXT2
6IFVb4s9JJdLSC66QR5AeuQ30iPaQs9BVaeHigGqTnfYvwnfE14w/b3GZsil
6ZzUG3r6kR7BevbC/it4LttfC3wmEB8tr6HqFG+ZUdUp/oLnRecX3qISySXP
qwvpEf+CM89rNN4LnbM47GmK93jL9PewoylfsiFf0nHvhspj94kvKo9dLQ56
box6NuO2GK/kQfKgkp/Q7/FXfJfSEt+rTMH+gnNDC84NdT+tPOUntlKUn9hW
Is60VvWIv3yk6hF/rf+Ga03/jy2/i9Prpuf5bPx2nhjxz6F/54l4ygfkSsoH
bAOwrqnePCHPqzoxSOvJD38z/zsIe8G5Jvh3Bec6NN7qbbrfvhnk0iTPeqlg
5yVn48SP/tvGz6qUyhIfcmz09aV/izTzuvznvff/n/yQ6p+cEFtU/8Rhfzoa
/z/34f9/8ssU98RYxL3O4BPUoub8pYadh0bvrm7YaUsVSnbmVv0uf+Gu+l0O
/n/i3t3BuE+Y72O8RP4vZ8L/58Hfgkm/PEz6LV/AIQhxeDzZ48jfaN+x2Ez7
zrBBA/d8Mt73hGqtqxm/sh/ee1/VzwwSS1Q/0+GHI2m8nEzjtZ9Avw36dT4c
TPu+pZVp38ffl9lGI19aAH8OQZ6A8bq+gNzS3CRnOxeSnfq+d9Y/Et8Hsn7s
vxZpsjMv3ktdei9azxjMdyL48Hyv4r2PAWd+74GIk2sRPzmenIK/bSZ/0/qv
4z2yn/B7LI315UfrS49/iPW4Dvk5P/d7oFoX0mUArYsf0NMQ653Orx3z+kHj
hSuN18+NRv7/D9Y7+08JxJMqpnrHj+KGvIi4wf4zCnEsiOKYfm4A4sxlGq95
Qr8F+rV/Dkf87GmqN1G/2+6b4h5//9wP9Tu/d+ix9DTF4SzoV6SlfoU+Z8F3
BRZ8V6D7xr3ovYjHeC8cl+ojXpn/nQ6cswucs2s9OCf9n3v1cd4ncN6n5dXI
P2U3+Cfr9/v5XECPx7mMBecyjnuPcV4TaJL7/3wupvWE45z0NJ2T6n5OJPmz
9Ef8ZHvQb5cbTPajHygnmzigr2XrZuJcG33Oz9Tn1O8lBM8NwDri51YHn66I
qyxvivcVg32K5dlVX8hfTlF9IW+d5wxDnpAd+UB3yBOm2vWslj2Unn3yEPZr
L+RLY5AXsZ5Fys7VYoiyc5/e379DzyLSo+UTlZ2rRf5VpJ/lwyB/Zxo/C/cJ
Z6X7hPV+MZzWu/iO9c7ztaLP6UZ9Ts2zMe5Dvm26/9wN8lCTfBfmtYbmpe08
puLwPhmi4vBqLedzzEg6x9T+E6LOv/xFhDr/8hbMeSHlV2IO8l7e77KQftEU
+pl/MPTcIj36ffUBh3SpKc9hDq6Ud8mRyLtYT374g5X8Qdszn/YXuQ/7IOth
+QHsOyzfBg4XyE79vuLITpljJM2X94XVFCfFC+R7+t/3QX74nOzUPOuTneIr
/JbzqLqY1wzT+GuIzycRbzk+rwNnT+Sx85kz5VcymfIrG+8jv3irekfuQL3z
GfXOMOTJi5Bvt0OenDJS1VOiOeopN9RTFurnuM9CXVYEddl76v+450Id9w/q
uD3UR7JaUQ+WQD0YTX0naxPUj6NRP26j+lRwfcp9rSNUz4rFqGdzo569QPWv
6I36dz/q3z1UR8tk1NFrUUcfp7pbdkHdXQp192Wq02UU6vTuqNPTUh9AjEAf
wGUp9QHqUt9AdEXf4Az6BmOpzyAaoc9wH32GNtSXEP3Rl4hCX+I99Tdkf/Q3
WqG/sZT6IbIr+iFX0Q8pTP0TORP9k0/on9yhfotsh35LevRbvlE/x5KEfo4n
+jndqf8jWqL/0wn9H0n9IsH9on/QLypM/SWR3J76S0XQX0pP/SjhjX7UX+hH
NaO+lpyAvlZO9LWiqQ8mvdAHa4M+2BLqm8nX6JvFoW9WivpsciX6bMPQZ0Nf
zlYLfbmV6MtlQ5xpgvXL8QF5rxiHvJfX0RXk5zNQ53K8uob8/yDyc15HR6nf
KNai38jr6CLq6Deox7nevEH9TJkd/cw6WEfx1N/gdWThdZSd+iHuOdFH3YJ1
NJj6KlaJfmwxrKNZ1IfhdSR5HR2j/rCsa+oPb6N+sryAfnJBrKOV1H+W3H8+
jHV0i/rY4gP62LyOFlDfW/RC35vX0XXqk4un6JPzOqpBfXhZEn14XkeFqW8v
Y9C3t3H/jfr8ci/6/NFYR28HqXMBGYFzAV5HI+l8QbjjfKEF1tEjOo8QG3Ee
wesoA51fiDw4v+B1tIHOO0QznHfwOqpD5ym2QJynDME6+o3OX2Q4zl/aYB2d
pPMaeRvnNbyOOtD5jryI852CWEfP6DxIRuE8iNfRGTpXErdxrsTrKD+dQ4nb
OIfidfSOzq3EY5xbJWAdtaZzLhGFcy5eR1F0Lma5inMxXkdH0A8fZfr7rNQ4
X+uNPsZ2yFfOe5Z8dm2nc+bv57mPfdX096fdcC721PT3v//f+Z3f81at3ba5
2HZX8x21dckrfT71pmz5Of19vsqTZT2Ppf4Qo+97ob7KB3lR6X+s73u5oPTE
yb1Kz1193wv9PXKMDFTjr+v7XtrCTmnqC9HfjcaICzTecU8a6Rc7SL++16Uj
2YPxj/W9Li/JfnGc7Nf3uthovpZdNF/dV///zukau46LXFX9vRyY/5eLq41f
5kB1UJxsp/LzOMf9VEpPrJym9MRqDjfQ/2xP/U/NIRzndK1N95udJj2C7meL
1fOl8XGiDT1Xz7ch2Sn6k516vmfRX51M89Lz/YTzuFWm+8ouqXrksZyg6pEP
el5l0B/uSv1hPa/Lavx1OUmNd9wfVQLncZ1M94wFkH4xlvRr+z+gn7yc7NH2
/6H0vBKdlR7HvU9Dce5mvh9seZdrOTPGL3d/Gkz3ILKdw9X4ee6Vcd8z2zkI
527m+7vquR+bPMRto3XSd7qnkO1ZqvRvtT4OpnsK9f3DOHerbrpf65Kq+66L
zaruc/A5gXM3F9M9V7uVnleyqtLjmC/unxENTPdNbcO5W1/TORGfu4003VN0
fkfZv+16Sxd6OGWzwZX9fPm5LXfsdkxqmDmr/byF/WGPijMfxCUVZx477ttR
euJEGaXnrr5Xgf4uPkZQfX1d36tA9xHFyACS63sSzpEeWZL06PPKnfRceZGe
q89Vl5KdcgLZqe9J8KV52f6geel7EnbhHK2f6X6hqjnLj7evk4hf2ha3//J8
iXOcoHo/Ts93t9ITK/orPbF6vhd/fi96vn44RxOm+4K2kx7Zm/To+V6g50oL
PVfPtzLZKcPJTj1fnA9KnA/q+frhvMz1/c/3/4QpP3yM/skHPa+T8Ntq5Ld6
Xlfht5vIb/W8juK8rLLpfDmY9Mt/SL+2H+d3EvcRafuPwc/pnNpxj0oznIuZ
79upGWDJ5bSutZ0t1Hi9rrWdTXAuZr4Pp9vG36Y5rWttT3WlX69rbU8mxD0P
0301JxH3plLc08+9jzi2xnRvTAbEMfo+wTHfYOwLHqb7Ww4ibs8z3ZdSivTg
nM5x/yTF1evCE/awvy2jeOX+BPPi8Q0ovrlPBQf2k4EUJ61lwZP1LKG4an0E
/vze99B7hP847DkFP8Q9flr/RfjhRviJzh/I3+R6+Bs/F98zwE8c+4g//G0D
/JnfL5+b98e6YHsq/7zetT1Yd+JPrDu2ZyfW+wCsU9O9f1injv16K9Z1H8QH
ttOGdV0P8YTtrIh1fQ3xh/3kqCk/1Pe1Im6XQ3zjeS1D3J6KeMjz2o24HYT4
qe/DQdyugHjL89qLuB2M+Mx+uBV5ZoDp/JHjeSDiPHM4i3heGvsCc9iBeM77
CHNYgng+GfsOcziHeF4W+xT7/wn4G++PzOEK/Gcd9ll93ymta/Z/Pb4HxQH2
f6f7vlQ8Yf/XeqpR/GH/13EvI9Zjd+QnrP8h8iucj2v9x5FfTUH+w+/lCNbv
BORR/Nz0yKM47+LnHkUeNRF5mr6nGnnsAuR7bE8d5LFjkB+yPUHIY7sjn2R7
vJHHeiH/1PkM8tUuyGPZzgPIV+ci7439aXyc6Io8me2shXx1FPJqfu9pUaf0
Nd0/cB51Sgjydp5XDOqUSOT5PK92qFMeoC7QeQvqlDDUETwv1B0yGnUH+z++
QxC3Td8htEadchd1jc5nUKcEoQ5iDq1Rp9xD3cQcnqJOiUCdpfMZ1CnBqMvY
/z1wnn7ZVN/dVJzDZSfFOVzLryg/uQB/u6nlo1Scn+BeDf8uCsuD1Dq6ILap
deQYbyO5XEtyHQfoe6Fw0VjFN8dzD+C7BfN3VgchDzbVrZegpxHp0fJrsGcL
nsvy1mqdavu13AfznUHz1fLDJEfdcVO/x1Bw60Xc9PjO4PzYdH/RLzhHa266
R6jC4O0fw44ly6XLMjcOt//y/fkkF0tIrseXO1Av+l8jvg+0NfOx+7uux2Hn
KNiv7zui92UthfmyvCzpEdCj78P5tiJo5BP/He5euem+Ddb/leTWBSTX40Na
jUhln8+LrJenONtznt6LdMd74ecG03j5nMZrPdnnWG5dNeaZNGHMoKtOHLKS
XCaSXHNAP8Q2yvR9IPZB2whTnyQn9LMe1i9hZ134IduZA89NgD2sJwLzZftZ
z2X4+Wr4P+tpQP7G/LUcemQMuLF+S+0Jo534a/2C5Mxfj88HfxiK96j/nS+8
3yHwE/3vrMHfNsOveHwB+Nsm+CGPTwO/7WO6v2Xf/LZlh/Tc7rvae3OatmVP
Of79lJpPNrcpe8p32I7yhYcZ/53lvhi/gsZr+dOGtacM7bndLUvGiX5tnPRg
fYmWWF/MbXev9CMmfDriGzfxZNmJxi+Pvws92UiPll/GfSPedN+I030Xqj/2
P/ddjHyQ4andjtbPG0YMcbJ/FOQtSe74+1bYyfFT39sAO7+QnXr8OPCZQ3y0
fBvyJfN3XP8HqxM/VA==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
dzPnVTrQbkGeSLwfjoq+T+/sx/jeZKMaZd7v2mPjIjfQO9E6VL6jOde/FqdL
7AfFAfqmvu/TeG8t2jWZ37k4rIpU4rFaC33ieugdY6Vz6f+u/Z+aP2wd143G
VKJtlTqfXDK2SXB8WgVd69T5eb2Pv+M7Ec9XHUpziVNflplXyzeLu4u3j879
XqZH/jaocE5GtYnno79WzWJJ7hyscq2nFPYvB8qGp65Jaa/WZZ6bEtcvFufO
5apWsjR37neX4PxPndR5qmMKx3qq3aiWozqO8kWjC3NL5Xt/yu0Hlcc4tnBc
plrJotx56QrBOXa9g6G5YwPFBcqNjCgcV6quNLmwH1RuZHjhmLEI5ht6r+KW
lQvnLVUnmlTY1imWrFu47iOOXbtwrUS8fdci1kHE/QvXO1RvmljYzyqWr1OY
X4mr71645qJ86dGFuZzs8KjC/lScT7VD5ShUL1Mue3niWLJL4Rys4uiuhdeh
Ys/OhfPDNRnfIjiePZX7RyJdU8dimk+xnmKw7qljJXGdDnH9i58P1vcG78b1
g1Pn6BSnH144XyRb2yPawB2D84oaq2/ZOXUdTXbg6mi7FC/3KJx/npzaL3ZB
TuV3B2e2vRfkrp2obiIupdqD6g6q8Y0v7MuuQ3dt7vxH7eCaXb3UNcQTC/tK
1RBPKOynlCvoWTgHrpxAr8J7fzy2vCfjFubOp4qziR+rzjiusG8V128e97Jy
7L0LY9mxWnH/yu7JPyonpZzN7Mx5G8W5X+XeX+JjW3K/5xl61tT7WnHqjMx6
1cIm8EwvZ47t5maOifSelV+Q3ejKHAtT58aVQwiFf2vP1PVdxari2OKiR6Ue
e3bm8X3RHSb+Kbug98NvvSS7xpxb5eaAD+T+fT3b5alzzc/G7zg92nS10+I3
vTpi2fkL43i9Q8Vz16Z+/rPi/6t4U/XInXL7eMWhehZdn49ux9yxtepByl1f
Fu+bEe89I66Zt6P9nx6foUvUi18ph3FW5rX9KPPNRComzhWohnViah6vVjGI
cguqXY+nv4l3uaYwrx4e94nm+X+OQ/kN1VtUd1F8opqq+orRDuF5x5TOLe6Q
msN+F+9TroS/ZAvj3yvMz7vF+cUr9N0mIdvEb1S98Hs7gLluidxJY05PXb+X
T9sU/VrXuK+1/s+M+JP4u6elzstId2rU6z3pPdaN72xyfJ+qGzyb+T2rMPhc
5rpwn7hmro3z6DfqI8NS70v5LK2ZJI7Xe9D/OCF1/W9GXOeT4vrUOv058f7W
d1Htp1HqOr5ileap17M4ouIfxT4lbYvUMWBPfmdybrukfdsvczy7G7+7ezAH
bps7JpH9lF05PbdtEZ/RmQyt4SHoq4HfSZzfqBt8JkH5tMbBeVTlLfcMzvnL
j62LvkycQzxMe1/867PIwcSnFQ8rFm6fet/OinZYsaQ4ei/GFrltuOJz5b+U
+8po905dX1b+rWFwjUN5sAbBZ1FU62qSunap/ELT1LalHfOclbueOzJ+H62H
M9CdmTvG11oYEtfh4YrDxNPi9zkv7i+9S9kBvU+dY5FtvEp7OPOe/RD9KNqt
s1jv49qNqfdyvzin+qonaf1oX9+fe10pp6I4WmcJNnBvx+C60rBoL/Qs+l3V
u2RDZEtU1zo6d23rCHDl3HxAtvqaaJ+Up5mauvZ6RdTJXqkWphr01Lhvhsb9
NY720tTPoPi8S8yf6NyKaiWbot1Q7f7S+H+dVPjZRmW2UYpN9Dv6PfHnnhH/
xzlT111UR1F+UfZVtvG/3FBmv6Na6ODcvOJI2enS/E92WDUY/e+qPb2f+2zS
Z+BOpWNp2UmdZdG7V63qg9xnkz4HH1Q6Dv8XrKK/9o3qBb/kzm8o9lYev1dc
M8rjbo7PoPxGr/i9dIbj7Gi/FE8qv/Mx83QonQtTreTX3DkK1XAPKZ0jFvdT
Xlb7W3WQv3PHWap3/JU7V9MuxkpHpq6LHVR4T12cm6MqD6czRV9F//5b4bNY
2h+qO3yf+1yH6ho/5I61B4gHlvZz4gbyp8qRnBkcI8hHaEzHuN5uzO1blWNT
vKqcr/K9qnd8l/t8iOoaX+bO2ygGElcXL1ecqXhDscaHjGlbOl+j3M7G3OdG
VItcn/tslfIzX+Q+zzAjNzdQnkb5b+XoxL/0PMp5Kd+1Ft3+pfODD+U+S6H9
ubqwf5Jv0vmflbnz5Kpvvpr7zJhqsq/lPlemNdC7dD5CdckNuWs9qnu+njvf
qLrqqtxnzwbzPF1L5+LfRb9f6bxV59w1gNqJa7vv5D6/pLrnJ7nPwqmOobhe
Pl913rdzn3fS+5GPlH9UzfSV3OfKNP+W6Ac7obsp9ZkWfesepetSOnP1Yu4z
MKovr85dR9D70VkR5WZVz12bO4emmu+Huc+kKYeiXLPyzKqZdi9c39Ea01kK
7VflZFXLVCytPJnyk/I/ip1VvxTf0lmvFbnP3ui8QZfS+WvVwd/MfTZM8YXy
94r7xamUFz0/rr0jSseWqun3K32ORLHJYaX3v2KNvqXrE6q5v5X7jNw02ntT
n+3ReR3VNZQT13mD/qX9kGrWH+c+E6h8WqvCMbJydy0K152VE1BuWrGxcndt
Ctdhj819rmVq/O7KcYiHqH7UsfAZD+XK9ioc/+pcR9/CNSnVlToVXv+qW7Uv
XKc+Jzh/Ib+ovFzbwnVh1aaHFo4plBtsWbimL94+srRv1r5QXVa1UNXHDy6c
V9S5lD6F61yqjw8rXLNTDrB54TqyziPKj4v7KY93QGH/qzx/s8L161Ny8wZx
BuXx9i9cp1bsOaI0n5D91LlN1XRUL2tauOauHGCDwvVonYfpX7gGpzyJclKK
83Um85vc5xCUe2xY2GeNRFch89knnc1blvusl2KlYWXMQaBvUriOr5xk48L1
bnEH5bOUd5DtVY5J+aXeufOMsns6Q7g895kxnfkZULjOqG8xoDQv0TnVH3Pb
N9mQ1qXzzqq/dyvMW5TPrF+4bi5fI18oP6gzsZ/lPhOis1Wbc+e6ldvcp3C9
XueIjiycG1HNtEPh8ww6O/p1bm6jnGq9wjX6/wG/q1wQ
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFmgn0VtP7xe8995xXkxSpTKkQmiTSQIMUkqGiEjKUUKLMMxkLCZkyJWUe
M1MyZJ7neSgRRabM829//vus9V/r+6579j3n3u/73nvO8+y9n9Nq1IQhh4ei
KFpXRRF1nFcWxQ5q/6P2vmovVfuxVBRvqt1H53pq0OfC7XXRLOFB6t9Yny/V
jhqzofrfVH9j9Z+pcxfq+JrO91S70HEL9X+q/lY6f6lO/aVrnxVepr7hwr3U
/4VwB/VfL/yo+q8Xvkr9jYUfE54tfI3w6sI/Cz8t/JnwIOEvdf0s4RnCjYS/
Uv8Twm8L9xW+jnvXimIP3f9l4Y00/i2dW134LOGhGt9Wn2Vq19E1G6j/DfU3
Uv8ZOreO2rvoc4H6fhTuqv5Fwhup/0rhX3TtM8JL1D9Y+HHhOcIzhdcQ7qbx
i4XbaPxVwp+q/2fh+erfRHhn4Y30Wcrj0rkv1X5c/W+pva3O9db1S4U76vrZ
/D7hm4RvUn8z4f5q76rPNOFJwk/q+huFZwuvKdxd4z8T3ljXXy38t/qfE16u
/j2FnxC+QXiWcBPhHhq/RHgTjb9GeLH6HxV+Wf3dhV8Xvid//42FN9f4j4XX
1/jpwm+r/wHhx9XfTvgz4QXCrwj3EP6B56ZzY4XvFL5b+Arhg4VHCc+o3D9O
+FvhS9W+TJ+DSs+5Sv/ved3vB+H9haer7xJ9Diz9DN9U+z71LxDeVPh94QeF
nxLuJPys8G3CdwmvI/yd8FPCHwkPEN5W7YM0Xy7W+QN0bpGO83XuJbW7qf9b
4YXCHwrvyPtRu0/y2mlT+L1cqDEj8/u5Rr/vE7V35rvr+JH6HtH4Z1kbOndZ
8PcfLdxP+PLKz+OQ0nPyA7Uf0vinhTfP82ee8IvCXYU/FH5Y+BnhzsJ99Hy+
FN5M950jPDv4+Y1R/+7Cz6l9u/rnCq8rfLPwLfqcIrxcuJ2uf0/9zXXd+cJv
qe9+4cfU31a4rfrfFW6m/vOENxF+R7ip8LnCbYTfFl5D+GzhP3TdPrrHqjqO
E35V7bnqf5jYwXoP/v8nCx8h/Iba96r/0bw+2ut+7wuvpXFThV9R/93CD7FW
hTup/yPhFuq/OL/vn4TvV38r4e3VPlTv83adP03nXtDxjtzfUv0z1V5V/SuF
RwuvUP+TOvcBcVH4JeE7hR/I99tM/+9D4fX0/y4S/ljnd9WYoONA4c7q/0T9
LXmvwi+r7y7hB9XfWriD+j8QXlv9Fwi/q/7t9f/7V/4+h6h/P+Fjhd8QbsZ6
0+dsXf+h8O9qd1P/Jjr2Fx6s8d/qftvpfo8IDxH+Trif8DzhLdQerfFnaPyO
rHn1f69zO6n/CWK4zu+i9tNqr6/+54W30/g+Oq6nc0/peLPG36K+5sL/Ce9G
POU64Yk6bqXPd2qvpzEjdP8fNH6g7vkkz0d9XTR+Ax23FK6pfxfhwcJ7CJ+s
4+ncS9cuEX6H36X+fjq2z+/j9zzfWX//MK90bmfhR4UbMdf16SU8U/g1/o+u
b0VcFV6i4wDhnXTcWrijxh4ofJZwT13zk45/6twbOd/9qO/XK/lZkROfUf+t
wncIr53n++66fn+dP1F4oY5bCK+vY9PC86uf8LaV89f2Gr9c12+l73079+e7
q383HXsJj+f7Vo51axPTNP5HjR+i8S/o3EDhb4S3Eb6HfCG8Qrin8L3COwl/
Lby18Fzhr3nPuv+OvBfhE3U8QZ8Nde+NSsfvMTXHKN7nSTpuo89K1i4xSPf7
SvfbUve7Nc/3PTT+AN6T8MHCK9U/Qv2vC/+mY299HlB7XV3/tdqb63OT8Fql
5x/Pc7jaXXTuaN2nuz4/qN1S5/rrfsvU30XX3KZzn6hvh5o5CfmluY6jguf+
WRp/Fe+xci4+VPhztXfS+IE6bqZzc/N6OSfn62/U/k33fyHHy5XCfwi/Ltyb
mMxa0GdKjn8D1B6n+z1Q+VxLfb/XdK6BvsOpzHHhl4XrCp8k/DTxU/g2jV1L
eB31vyRcJ3h+rBI8Vxqp/wTh1uobVfOc31jn6jK3k8fR30LXvyJcT/hk4aHC
fTS+K3GENSr8qvrrq/8U3jdxXX01HfcSHsG6qfxb6pNjuU6fM0s/8wFqP6F2
B9ayPvVy/xk695LwbZVj5STepfCDwTGc2F2PPKb/fbi+z/zKnKievs8LOveb
2gdrzHbEb7VbqP0nv1f9r6t/teD50wIuouuP07jWfOfgWNdK7TfVv6vG76P+
CcQd4WOF9695Di8WnlR5/Q8uHXO2Uf9w9R9UOR6XkFrhRerfrSj+j+T+p//5
KXFacEfhPdV/iMZfV5hP/pX5Lnyrr/r3Uv+hOj9D+Asdf1H/wswfDlD/tjXP
4ReFNwgey1y/QriL+oepf0zlfNhL/YervY767xcerf7x6r9D5xYITxDuW/Oc
/oD1rfFHqt1C458qzMd/zfyF/P+u+qfp3Ah4hvCawf+rifAU4X10v311v6N0
7sHCfPvfnM/gK38K/yP8fs5ve2n8yJr/50LytY5/q/899W8vfKvu/43aezOX
S/OvUDP/hu/+ruNwXVNXx7Hkt8pzsH6eP5upPVKfhsLf5Hz/X+l+OEd9Yp3u
t6/GrCYckvML/5f/93N0/GbeMl/hiz+W5upwpCnCz+n4N3MHzhidP5iHzL9P
hbep+Xvw/z/P6+lfXfc9MYg4zDumT5/l0fmvN8+9sE7qS8xgLhCf1L91zb+T
3/drdPxB96B3Fgn3FN5c/St06hTWHjmTuU6+iY7Pl2v8v4X53zuluT8c9t+c
H+fqfCrN5Z7WuRsKczq00sJoLYBmQhs8Fc310AjE7mejYykxHG7+SDQXgaPD
TeZFazE4CtrtrmgthIaD2zwUzaXgOCfBK0r//lGlteCT0VoNTYi2eDxaK6Ax
/orOb/Be+C788/PSWhEOT+wlBrMWrw1ee6xBtNx1wdpqQbRWQmOhRZ4Qvraw
JkFLPRatZdBUaMv5wpcV1photzujtSgajvWyjj6rl34HDdU/VN9vtP7nGsJz
eKasLX2+0jXnEvcra6keOne+2udVXmvwhcZq761rti8dv7YQPpjcXzqHf66+
TYPxIDhD8nqEZ8GviLe7B+c+YjLz7B64bun5dh/xU586hfMDenONmvk1fHvd
4Fi3pvp2Kq3Pm9T8rnhn/K4mak8u/PtYVzXh4wuvr9XJ3Ro/lvwPp4zmkzwH
fn/D4FzfuLSmRK91DeYmaDL4V/9grkcMXjM5XsMDyP8/6thNn4FqN9One+af
rFPW59aZf/GcBuXne2peK3sIrxr8/HcvHTP20Pc7QOOnVtaLzMVz1B6S5+Rk
tU+rvDY5x7obVfl9c0/ePe+Pe3OOdfeujgNKrz+u535oNzgf7581y1rlO1yr
9jWVtRx6cLusD1kXrIdpeX0zV4jJPCu+69DSz+w35ofGz6qs75J+zyHCsyvr
MXLjHdFeAzkSb+LuaO2ER4GWmit8TmFNhTdyQrQXgkeC13BStHbHc9hDePfk
XH55aW/k+GguikcyMbr/itKaAq5xSzSXgHNw/ZBkrsWYNdQ3SPiS0hptMPGZ
/1n6HJh+tPv00lpncrQ2Q/Ogtc6O1k5oLrTUOdFaCE2FFjw3mqujCfEiTo72
LvAk8BrOi9aCeA4TavY7TlX7xWBv6MRorwWPCO0/NVqr4gGg7WcSowtrfLT7
tdFaHw2P13JVtFeE54J3MS1ae+BhoH0viPYy0MB4CRdF52JyMtr84mjtjUZH
u54f7T2gYdH6l0RrHzQ/Wn16tPZHs+PVnBKtHfBs4FI3MEcKcyq44Y3x/7kk
2vSa6FxOTscLuy46F5OT8aJmCQ8p7EnhtV0f7fXgueH9zBYeUdgDwkuZwxor
7KngnV1NDizsocFlb4rmunBatPeUaO2OBsdLODNaK+Ip4K2cEe0t4LEQ30cl
ays4FtxidLJ2hWPARQ5M5hpwErjKmGRuwu8r4WrJXG5xzh/7J2snODxc7+Dk
fALnQyvul8z10Yxwv4OStSocEK13QDL3R/OhPZ6L1mZoELyMe6NjLTEXrf6g
8LTCmh2v4eForwvPAW/igWgtj0eBN3JftHeCR4I2eyFau6HR0BK3CZ9WWFPg
tdwf7W3guaymdl39pm+J3YW14/M6d0dhDQkX3SdZ68BJ4WJjk/Mn7x9tcGu0
VkEjoFVujtYSaBa0yqRoLYtmQdufFq1d0Ph4JyOSvQjWK9r39GivDA2M93hq
tHbE60Jb7ZusNdFYaMM3or0LNCLcdWQyd2a94FW8HO1N4FmgZV8Svq+wpkXr
vhitbdG8eBmvCM8v7GngXbwa7S3gYZDb9lYsbVA6x6GdX4/m5mhovIjXorkt
nkRDtevoma3Q+JFwBOF6wt8J71c4tuEH3VQ5xjHf8ZyIrycExy88IeLvccHP
A0/2Z+EJwfEPz4d4dHxwPMNj1aEYH6yb5mb9in6Ch25PjirNR4mHeGTEvxOD
4yeeAvH72OD1hoe3qvDRwjdW9kzhHkeU5tYPoj1Kc+xHKmtAtN/U/D7xNOoL
H5nnAxq2Htfn3P5w5bHr5fWMZ9pA/UcFzxc8obrCE4NjMTEZ3gBfgLfipZEL
4K8L4MX6XFr6eb6rZ/VDNF8/PM8fNDrr/4o8v9FcrM+LgtczHhDxYEbw/MTj
Yz6dmecXGon4cnHw+98/z6+6lb12PFPiwXmZi5J7J5bmpMzXg/N8alR5vaDx
xxOfNb5+5doBufT0nG/x+JGZhwbHbzx3PYLisJyPqFnorxgXnH+pUeCvHBKc
b9H4h5EPguMrnsGh5I+c36mB8NjGZi55Q+V3C6ecU9kjxhvmN6Ad4BYTSmsI
8h8eOOv7tOB8xfMi/54VnK/wlMm/Zwf7XRvqXPvSHs28/LzIt+cH5z88YNb/
pOB8hodN/J8cnM/woMn35wTnPzxc4smpwfmUmgD54PScv3ifeHlXBtcGqBGQ
X6cF1554n+TX6cH5mZoI+fWS4PxEjYf8eWlwfsfDp7ZwdbBXj2dP/p0anO/x
7KldXBVcy6CmAT+4IFjv4HGdTv4JzqfokW2FZwXnU2o88IPrha/O/HyyntV4
8n9lzwQteG7mS/hH91fmRMz3sTXXKZYK31CaTx5WWnPC9/FAlxS+J1p2ZuW1
wRqBf15UWZselvlBvZzPHwj2qfDw8XumZH6HPzOvMgck/+MBwBduDs7/1IDg
P7cE5/8q84e7gvkGnhR+/VPB/AvPkHh/SvDvJb7g1eOn75jsZ7BOWB+jmNs1
xxD8Wd7vFdHeKzUg8menzHc/CNajnbP+/Aj+G+3ftsy/+UjhjsJDWTtwkmg/
uXXm/Pgn7WuO9cT8Mcxn/E/mjvCBcFH8ROaW8EFwTfyEYP/7KOHNhIcJvyr8
ZrSf2yK/k6OFOwkPJ3cX9lub16x9rxceRC4V3iLYLz2M2ERcKOz54Kc2rVnL
ommJTa1rzn3EKGJPm5pzGTHoGLil8J7B/ir+V+eacyk59Zpk/wzP/hliKNwU
Pz3YL4a7U++8uzKHX139DWrmdnC8usJJ+KvS9dc6wlH4S+FhwqsIV8JLhYcW
nmu1mrkjc25N4YbCPwkfKNxYuL7w96XrcVfr/69Ss2e0j/AA9TcTbhdcP24q
vJrwz+ofI9xMuJHwL8IH8fzg7sKDmJvEWLg/nF/4WXIo3Br/nLkMh0ArCG8Y
XI9F17YmXhfWtwTSWyvrBXJQc7SQxv9a2q9cCy1VM9eGc7cN9gbRrtQUdoMb
qb8zubJwvWWdmr0VPBb8E2rgRzO/M3/cJPP1NzK/a5f511vB+o4a9DHCrwbr
O2pmxwq/FuxfUIM+SvjlYL7E/+R//RXsh/TIfHNJ5kdDMn/9O1hP4rkeKfxS
5pt42BOEnw/2S6jJny38cbCf0i3z1cXBfLdD5o/vBPsxXTMfXhTs93TPfPWz
YL6JJ3248HPB/Ldt1gtvBvNjanjoy7eD/ShqxmcKf5j53J6ZH4fKfJAaxxzh
XzO/If9R26FmPAxtgf+qvrt1bjjaQ7hHcP2De7WomWtzz32FW1KPIVcVrqcd
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
64FDk/Ubnh/8fXyynsEThN+PS/5/eID/A9FnE7o=
            "]], 
           Polygon3DBox[CompressedData["
1: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
iut0e34erZFpSHfK/x8itP3K
            "]]},
          Annotation[#, "Charting`Private`Tag$277024#1"]& ],
         Annotation[#, "Charting`Private`Tag$277041#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0ktLlFEcwOFjqWmltg5xCMmcydHppoYT3TQXtXJpqeWVSSmISmf8APYJ
jIoIEYuICCGXrnTlUstbF23bSmjRLnwOLc78nj+8hzPn5T3R/7DrQVEI4ZU1
DtGP/PzRxYMhHNOkeYUTfJo3uJFPlaj5Etdzhm9xis/x7fg8X+D73KLVxSHk
+SIn+RlnuZmf8xV+q2fsu8YLfJbbeZkTXMt5a838RG/Esw6E8MV8R79qj65r
r25on27qXd3Sl+4wat8987a5X7/pgH7XQf2hQ/pTh3VHR3RXC/aftL9g/TI/
1U5r3D1WzR2c4yW+Hv8ff+arPKcZ97jM05zmNp7iBm7lCW7W4/bl+Dwf5e74
Pvif829yE+9xluvsTZvTXMspruHf9v3VCXOVPtZ6a96qNH/SCv0Yz9APekTf
62F9p+U6p2XxW3HeGM9ah8wzWqpv1LHhtRbH59Sj4YV6bWHSUFf0/zvbBxJG
QYs=
       "]]}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{409, 617, 1441, 410, 630, 1452, 436, 1523, 643, 450, 1525, 
       656, 464, 1529, 669, 478, 1535, 682, 492, 1544, 695, 506, 708, 1483, 
       520, 721, 1493, 534, 1555, 734, 548, 1557, 747, 562, 1561, 760, 576, 
       1567, 773, 590, 1576, 786, 604}], 
      Line3DBox[{411, 618, 1442, 412, 631, 1453, 437, 644, 1462, 451, 1526, 
       657, 465, 1530, 670, 479, 1536, 683, 493, 1545, 696, 507, 709, 1484, 
       521, 722, 1494, 535, 735, 1503, 549, 1558, 748, 563, 1562, 761, 577, 
       1568, 774, 591, 1577, 787, 605}], 
      Line3DBox[{413, 619, 1443, 414, 632, 1454, 438, 645, 1463, 452, 658, 
       1470, 466, 1531, 671, 480, 1537, 684, 494, 1546, 697, 508, 710, 1485, 
       522, 723, 1495, 536, 736, 1504, 550, 749, 1511, 564, 1563, 762, 578, 
       1569, 775, 592, 1578, 788, 606}], 
      Line3DBox[{415, 620, 1444, 416, 633, 1455, 439, 646, 1464, 453, 659, 
       1471, 467, 672, 1476, 481, 1538, 685, 495, 1547, 698, 509, 711, 1486, 
       523, 724, 1496, 537, 737, 1505, 551, 750, 1512, 565, 763, 1517, 579, 
       1570, 776, 593, 1579, 789, 607}], 
      Line3DBox[{417, 621, 1445, 418, 634, 1456, 440, 647, 1465, 454, 660, 
       1472, 468, 673, 1477, 482, 686, 1480, 496, 1548, 699, 510, 712, 1487, 
       524, 725, 1497, 538, 738, 1506, 552, 751, 1513, 566, 764, 1518, 580, 
       777, 1521, 594, 1580, 790, 608}], 
      Line3DBox[{419, 798, 1587, 799, 830, 800, 1588, 801, 834, 802, 1589, 
       803, 838, 804, 1590, 805, 844, 806, 1591, 807, 848, 809, 1593, 810, 
       853, 811, 1594, 812, 857, 813, 1595, 814, 861, 815, 1596, 816, 866, 
       817, 1597, 818, 871, 819, 1598, 820, 876, 821, 1599, 822, 880, 824, 
       1601, 825, 884, 826, 1602, 827, 922}], 
      Line3DBox[{421, 829, 623, 1446, 422, 911, 1637, 636, 442, 839, 1607, 
       649, 456, 840, 1608, 662, 470, 808, 1592, 675, 484, 849, 1613, 688, 
       498, 1549, 934, 701, 512, 937, 714, 1647, 526, 865, 1620, 727, 540, 
       870, 1623, 740, 554, 872, 1624, 753, 568, 823, 1600, 766, 582, 940, 
       1644, 779, 596, 1581, 943, 792, 610}], 
      Line3DBox[{423, 624, 1447, 424, 637, 1457, 443, 1524, 650, 457, 1527, 
       663, 471, 1532, 676, 485, 1539, 689, 499, 1550, 702, 513, 715, 1488, 
       527, 728, 1498, 541, 1556, 741, 555, 1559, 754, 569, 1564, 767, 583, 
       1571, 780, 597, 1582, 793, 611}], 
      Line3DBox[{425, 625, 1448, 426, 638, 1458, 444, 651, 1466, 458, 1528, 
       664, 472, 1533, 677, 486, 1540, 690, 500, 1551, 703, 514, 716, 1489, 
       528, 729, 1499, 542, 742, 1507, 556, 1560, 755, 570, 1565, 768, 584, 
       1572, 781, 598, 1583, 794, 612}], 
      Line3DBox[{427, 626, 1449, 428, 639, 1459, 445, 652, 1467, 459, 665, 
       1473, 473, 1534, 678, 487, 1541, 691, 501, 1552, 704, 515, 717, 1490, 
       529, 730, 1500, 543, 743, 1508, 557, 756, 1514, 571, 1566, 769, 585, 
       1573, 782, 599, 1584, 795, 613}], 
      Line3DBox[{429, 627, 1450, 430, 640, 1460, 446, 653, 1468, 460, 666, 
       1474, 474, 679, 1478, 488, 1542, 692, 502, 1553, 705, 516, 718, 1491, 
       530, 731, 1501, 544, 744, 1509, 558, 757, 1515, 572, 770, 1519, 586, 
       1574, 783, 600, 1585, 796, 614}], 
      Line3DBox[{431, 628, 1451, 432, 641, 1461, 447, 654, 1469, 461, 667, 
       1475, 475, 680, 1479, 489, 693, 1481, 503, 1554, 706, 517, 719, 1492, 
       531, 732, 1502, 545, 745, 1510, 559, 758, 1516, 573, 771, 1520, 587, 
       784, 1522, 601, 1586, 797, 615}], 
      Line3DBox[{433, 831, 1603, 832, 434, 835, 1605, 836, 448, 841, 1609, 
       842, 462, 845, 1611, 846, 476, 850, 1614, 851, 490, 854, 1616, 855, 
       504, 858, 1617, 859, 518, 862, 1618, 863, 532, 867, 1621, 868, 546, 
       873, 1625, 874, 560, 877, 1627, 878, 574, 881, 1629, 882, 588, 885, 
       1631, 886, 602, 888, 1632, 889, 890}], 
      Line3DBox[{603, 785, 887, 1575, 589, 772, 1630, 883, 575, 759, 1628, 
       879, 561, 746, 1626, 875, 547, 733, 1622, 869, 533, 720, 1619, 864, 
       519, 1482, 707, 860, 505, 694, 856, 1543, 491, 681, 1615, 852, 477, 
       668, 1612, 847, 463, 655, 1610, 843, 449, 642, 1606, 837, 435, 629, 
       1604, 833, 408, 1440, 616, 828, 891}], Line3DBox[CompressedData["
1:eJwV0EkuBGEYgOEPiYXE2sLK0gmcwAU4QRcxRjkA2kwbY2pDzI0QYp6HvTgA
F+gLcADh6cWT7/v/t2pRVZf0NqVlEZGQKY+oqYi45opX0sqIF7NZqzIvOOeZ
Hu3JbNR+GbcPMUdGmzUb3H+zYV/niEPq3RVp9dyYc5YZpql1/8W8fZQBpshR
7f6Dbu+dOZ/yyAN/PuRNO7Efc0+X5+7MH+1SW7OvckCHVjCLWkHL21fYp13b
Mz+1vLZsX6LT/a65w7uW01rcjTgPMslE6f9ofVqbtui8wDZbpe/XUi3Rhp37
ueWGTf4BlxY7FA==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{957, 1254, 1440, 1144, 956, 1441, 1145, 958, 1442, 1146, 959,
        1443, 1147, 960, 1444, 1148, 961, 1445, 1149, 962, 1587, 1234, 1256, 
       1335, 1365, 1634, 1314, 1255, 1446, 1150, 963, 1447, 1151, 964, 1448, 
       1152, 965, 1449, 1153, 966, 1450, 1154, 967, 1451, 1155, 968, 1603, 
       1257, 1156, 1258}], 
      Line3DBox[{970, 1259, 1366, 1604, 969, 1452, 1157, 971, 1453, 1158, 972,
        1454, 1159, 973, 1455, 1160, 974, 1456, 1161, 975, 1588, 1235, 1260, 
       1346, 1347, 1638, 1345, 1343, 1344, 1367, 1637, 976, 1457, 1162, 977, 
       1458, 1163, 978, 1459, 1164, 979, 1460, 1165, 980, 1461, 1166, 981, 
       1605, 1261, 1167, 1315}], 
      Line3DBox[{983, 1262, 1368, 1606, 982, 1369, 1523, 984, 1462, 1168, 985,
        1463, 1169, 986, 1464, 1170, 987, 1465, 1171, 988, 1589, 1236, 1263, 
       1336, 1337, 1635, 1331, 1342, 1265, 1316, 1370, 1607, 989, 1371, 1524, 
       990, 1466, 1172, 991, 1467, 1173, 992, 1468, 1174, 993, 1469, 1175, 
       994, 1609, 1268, 1176, 1318}], 
      Line3DBox[{1008, 1273, 1272, 1611, 1007, 1182, 1475, 1006, 1181, 1474, 
       1005, 1180, 1473, 1004, 1528, 1375, 1003, 1527, 1374, 1002, 1608, 1267,
        1317, 1266, 1001, 1437, 1641, 1238, 1264, 1237, 1590, 1000, 1179, 
       1472, 999, 1178, 1471, 998, 1177, 1470, 997, 1526, 1373, 996, 1525, 
       1372, 995, 1610, 1270, 1269, 1319}], 
      Line3DBox[{1022, 1280, 1279, 1614, 1021, 1186, 1479, 1020, 1185, 1478, 
       1019, 1534, 1381, 1018, 1533, 1380, 1017, 1532, 1379, 1016, 1592, 1242,
        1332, 1241, 1015, 1639, 1348, 1240, 1271, 1239, 1591, 1014, 1184, 
       1477, 1013, 1183, 1476, 1012, 1531, 1378, 1011, 1530, 1377, 1010, 1529,
        1376, 1009, 1612, 1275, 1274, 1320}], 
      Line3DBox[{1036, 1285, 1284, 1616, 1035, 1188, 1481, 1034, 1542, 1389, 
       1033, 1541, 1388, 1032, 1540, 1387, 1031, 1539, 1386, 1030, 1613, 1278,
        1321, 1277, 1029, 1640, 368, 1276, 1243, 1593, 1028, 1187, 1480, 1027,
        1538, 1385, 1026, 1537, 1384, 1025, 1536, 1383, 1024, 1535, 1382, 
       1023, 1615, 1282, 1281, 1322}], 
      Line3DBox[{106, 505, 107, 506, 108, 507, 109, 508, 110, 509, 111, 510, 
       112, 857, 267, 511, 113, 404, 512, 114, 513, 115, 514, 116, 515, 117, 
       516, 118, 517, 119, 518, 120}], 
      Line3DBox[{1050, 1288, 1287, 1617, 1049, 1554, 1399, 1048, 1553, 1398, 
       1047, 1552, 1397, 1046, 1551, 1396, 1045, 1550, 1395, 1044, 1438, 1549,
        1359, 1361, 1360, 1043, 1642, 1353, 1354, 1283, 1244, 1594, 1042, 
       1548, 1394, 1041, 1547, 1393, 1040, 1546, 1392, 1039, 1545, 1391, 1038,
        1544, 1390, 1037, 1435, 1543, 1286, 1323}], 
      Line3DBox[{1052, 1289, 1482, 1189, 1051, 1483, 1190, 1053, 1484, 1191, 
       1054, 1485, 1192, 1055, 1486, 1193, 1056, 1487, 1194, 1057, 1595, 1245,
        1290, 1351, 1400, 1643, 1350, 1349, 1358, 1647, 1195, 1058, 1488, 
       1196, 1059, 1489, 1197, 1060, 1490, 1198, 1061, 1491, 1199, 1062, 1492,
        1200, 1063, 1618, 1291, 1201, 1324}], 
      Line3DBox[{1065, 1292, 1401, 1619, 1064, 1493, 1202, 1066, 1494, 1203, 
       1067, 1495, 1204, 1068, 1496, 1205, 1069, 1497, 1206, 1070, 1596, 1246,
        1293, 335, 910, 345, 344, 1333, 1402, 1620, 1071, 1498, 1207, 1072, 
       1499, 1208, 1073, 1500, 1209, 1074, 1501, 1210, 1075, 1502, 1211, 1076,
        1621, 1294, 1212, 1325}], 
      Line3DBox[{1078, 1295, 1403, 1622, 1077, 1404, 1555, 1079, 1503, 1213, 
       1080, 1504, 1214, 1081, 1505, 1215, 1082, 1506, 1216, 1083, 1597, 1247,
        1297, 1338, 1339, 1636, 1326, 1296, 1327, 1405, 1623, 1084, 1406, 
       1556, 1085, 1507, 1217, 1086, 1508, 1218, 1087, 1509, 1219, 1088, 1510,
        1220, 1089, 1625, 1298, 1221, 1328}], 
      Line3DBox[{320, 281, 1626, 1090, 1407, 1557, 1091, 1408, 1558, 1092, 
       1511, 1222, 1093, 1512, 1223, 1094, 1513, 1224, 1095, 1598, 237, 920, 
       361, 279, 1624, 1096, 1409, 1559, 1097, 1410, 1560, 1098, 1514, 1225, 
       1099, 1515, 1226, 1100, 1516, 1227, 1101, 1627, 283, 321}], 
      Line3DBox[{1115, 1304, 1303, 1629, 1114, 1231, 1520, 1113, 1230, 1519, 
       1112, 1566, 1416, 1111, 1565, 1415, 1110, 1564, 1414, 1109, 1600, 1251,
        1334, 1250, 1341, 1108, 1633, 1340, 1249, 1299, 1248, 1599, 1107, 
       1229, 1518, 1106, 1228, 1517, 1105, 1563, 1413, 1104, 1562, 1412, 1103,
        1561, 1411, 1102, 1628, 1301, 1300, 1329}], 
      Line3DBox[{1129, 1309, 1308, 1631, 1128, 1233, 1522, 1127, 1574, 1424, 
       1126, 1573, 1423, 1125, 1572, 1422, 1124, 1571, 1421, 1123, 1644, 1352,
        1355, 401, 1122, 1645, 396, 1302, 1252, 1601, 1121, 1232, 1521, 1120, 
       1570, 1420, 1119, 1569, 1419, 1118, 1568, 1418, 1117, 1567, 1417, 1116,
        1630, 1306, 1305, 1330}], 
      Line3DBox[{1143, 1313, 1312, 1632, 1142, 1586, 1434, 1141, 1585, 1433, 
       1140, 1584, 1432, 1139, 1583, 1431, 1138, 1582, 1430, 1137, 1439, 1581,
        1362, 1364, 1363, 1136, 1646, 1356, 1357, 1307, 1253, 1602, 1135, 
       1580, 1429, 1134, 1579, 1428, 1133, 1578, 1427, 1132, 1577, 1426, 1131,
        1576, 1425, 1130, 1436, 1575, 1310, 1311}]}}},
   VertexNormals->CompressedData["
1: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
dII/W/yK6XhO1y0n2O+CmEUmsN8l/stgX6jcY+5R2K/Vfu/DsN87fePp+OJr
s08BT4k7CVeA55tsW+CGKrT+vgae+JfuOuD5Y+p6Ov6i8GQZnNeP1xtXwXmp
hcuUknNB9VojTsB5fbo+Px7Oa4+sHB3Xm72qGOIhd5b9WYiHPjl/OHeUuGFN
PcTD3IwNEyEedi1n487Tzz0V2p6A/hrqz0SORrpnVmyabvi7E8VO2rgQ4k0u
6e+PxSTeztSWQryhH5eL38tLnEczbY7vEUyOIXWHxeG2audT209eQ8Fffxka
+6SjWassaLwN3XEnYMXVbLT12jGJe+8LkNKfKhpXIQuTjS5+KEGWohk9Kdxy
NGfiRBo/ZxYmiPU+KkOzhv/c62d6GxW9m0fjpMQh9CG3uRTJPggQEp9RhRJ7
Gmg8qHI4R6BOa3E4opWDvo/RLjSysbc6By1Tt84TMSpCQy/VviNxggwiDB6B
HQfZPcJg52cwl56j9uh1orDut8S8PbDufNN19LwO2iavAj/Lg1w6wM+WNGt6
LtezhbxgXwEF7f/ukn0Ni5ak/HP9z7sAh7jnQmrAIXyXL+U8SbX9NnBb8koV
ATdRb8Zz+9vTz9d5eiHp0SO+bdBNQMa2jGfY+IZ1SrUhSCdsqZaYTRaaqm1G
ecYevO14wf0ikjLas+63UimyL2A8vx+KVZLecgWJ9j7semZZjVJdp1Ce+tXv
noU6XEdHAi99tXhTg9YValKek/CBNYtkklGDZOYm9d33kM6Ll5QnuUcN8H2t
lRzO5sHf19oVJ31RSeYS2uP//cqR4WUo+EUd5Tniy3AjsNMfuXIL2HF3L6c8
r4qtaoR1r7ku/wLrRi/ZRHnGyCergJ8txb1fwE/vchb/Aotad8K+Sk7/XAb7
Sp0kQXkGPGxaAhzkEqdPBw6yxxjPD99mFgC35Q7bnwK3D0vLKM9XL6ImG3t6
4bYC/AjGHz+9SXnGZHWFq9SGkPETMmAnP5jlSUObL44X3S9iu1Pf1WHdUb6Y
8sxdcWyUzJYrOPLz7Tvgp/s1Ccoz9sQfk3MO1/HNi5eKYV8+bydQnoVHd4ct
lknG8rPcpwKHaVOqKM+lHE42fE66gsOZNJinRf+Dh9NkLmFR9x0BwFPwBYvP
1Wk5sWBn4MzNaWBnd2Ua5Wnxesp6WNcwp6EQ1l0mvpjydHkuKQJ+/lnyrQz8
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
9/ObMv2lSVz9pf8H0tuuww==
    "]],
  Axes->True,
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{331.15694729181143`, 211.36228857794896`},
  ImageSizeRaw->Automatic,
  Method->{},
  PlotRange->{{-2.9999995714285714`, 
   2.9999995714285714`}, {-2.999999571428496, 2.999999571428496}, {0., 
   0.3989422804014327}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-3.0154755282833037`, 0.6598722217458735, 1.3861731454954305`},
  ViewVertical->{-0.203036186634516, 0.04868729383955492, 
   3.164745192706488}]], "Output",
 CellChangeTimes->{{3.766115117366791*^9, 3.7661151533062353`*^9}},
 CellLabel->
  "Out[170]=",ExpressionUUID->"c7db4b9d-2f37-4b18-90ca-77d5b8fb1f69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinormalDistribution", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7661155911344547`*^9, 3.766115607598699*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"c13ec830-b92e-43bf-8e64-1bfd2b5dabab"],

Cell[BoxData[
 TemplateBox[{
  "BinormalDistribution","argb",
   "\"\\!\\(\\*RowBox[{\\\"BinormalDistribution\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; between \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"3\\\"}]\\) arguments \
are expected.\"",2,171,13,17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766115608061672*^9},
 CellLabel->
  "During evaluation of \
In[171]:=",ExpressionUUID->"5b1ae34c-bbaf-4091-bdd1-d99db35b89cd"],

Cell[BoxData[
 RowBox[{"BinormalDistribution", "[", "]"}]], "Output",
 CellChangeTimes->{3.766115608065834*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"75ac8abc-96b4-4eac-9aeb-91c3fd81fed7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7661156307886467`*^9, 3.766115633271132*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"e1934c21-852a-4e71-82fe-42da2e244028"],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"0", ",", "1"}], "]"}]], "Output",
 CellChangeTimes->{3.766115633575061*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"ed22bec4-06d2-483f-ab75-4327e05475ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinormalDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661156379759398`*^9, 3.766115653724559*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"0f9cba08-2872-498e-9b7d-fb94540c56b4"],

Cell[BoxData[
 RowBox[{"BinormalDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.766115654119789*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"da42a6f5-7db7-4704-81ab-c296fe0fa668"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"BinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766115779234201*^9, 3.7661157825896873`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"526c3f95-0c0c-47b3-bfd5-1532a25bfa81"],

Cell[BoxData[
 TemplateBox[{
  "BinormalDistribution","corprm",
   "\"Parameter \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"BinormalDistribution\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) is expected to be greater than -1 \
and less than 1.\"",2,174,14,17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766115782940695*^9},
 CellLabel->
  "During evaluation of \
In[174]:=",ExpressionUUID->"de9cba85-e691-4ce8-8337-75158be89a63"],

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"BinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7661157829451*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"ab1636d9-b7cc-47b4-bbed-d870bec225dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"BinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", " ", "0"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766115847671644*^9, 3.7661158479936333`*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"4d904ea4-3fed-43f7-95ff-5d837b84d493"],

Cell[BoxData[
 TemplateBox[{
  "BinormalDistribution","vrposln",
   "\"The value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"BinormalDistribution\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \\\"0\\\"}], \\\"]\\\"}]\\) is expected \
to be a length \\!\\(\\*RowBox[{\\\"2\\\"}]\\) list of positive numbers.\"",2,
   175,15,17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7661158486182947`*^9},
 CellLabel->
  "During evaluation of \
In[175]:=",ExpressionUUID->"e1de950e-23c4-4800-91ab-c84c46343cb9"],

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"BinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.766115848622891*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"ca25c281-d779-4f7c-a43d-ae3af7b752eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"BinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Mu]", ",", "1"}], "]"}], ",", 
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Mu]", ",", "2"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Sigma]", ",", "1"}], "]"}], ",", 
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Sigma]", ",", "2"}], "]"}]}], "}"}], ",", "\[Rho]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766115862217352*^9, 3.766115862219302*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"500e333e-4ea7-43cf-b240-a7f894d8d52d"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["\[Mu]", "1"]}], ")"}], "2"], 
       SubsuperscriptBox["\[Sigma]", "1", "2"]], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          SubscriptBox["\[Mu]", "2"]}], ")"}], "2"], 
       SubsuperscriptBox["\[Sigma]", "2", "2"]], "-", 
      FractionBox[
       RowBox[{"2", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["\[Mu]", "1"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"y", "-", 
          SubscriptBox["\[Mu]", "2"]}], ")"}]}], 
       RowBox[{
        SubscriptBox["\[Sigma]", "1"], " ", 
        SubscriptBox["\[Sigma]", "2"]}]]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["\[Rho]", "2"]}]], " ", 
   SubscriptBox["\[Sigma]", "1"], " ", 
   SubscriptBox["\[Sigma]", "2"]}]]], "Output",
 CellChangeTimes->{3.766115862541573*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"41d696a1-3770-4280-a619-989e58bc8c90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"BinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Mu]", "1"], ",", 
       SubscriptBox["\[Mu]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Sigma]", "1"], ",", 
       SubscriptBox["\[Sigma]", "2"]}], "}"}], ",", "\[Rho]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661158932775993`*^9, 3.7661159277513313`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"c875b7b9-6e6b-4b05-bf88-a44530bc7c98"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["\[Mu]", "1"]}], ")"}], "2"], 
       SubsuperscriptBox["\[Sigma]", "1", "2"]], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          SubscriptBox["\[Mu]", "2"]}], ")"}], "2"], 
       SubsuperscriptBox["\[Sigma]", "2", "2"]], "-", 
      FractionBox[
       RowBox[{"2", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["\[Mu]", "1"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"y", "-", 
          SubscriptBox["\[Mu]", "2"]}], ")"}]}], 
       RowBox[{
        SubscriptBox["\[Sigma]", "1"], " ", 
        SubscriptBox["\[Sigma]", "2"]}]]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["\[Rho]", "2"]}]], " ", 
   SubscriptBox["\[Sigma]", "1"], " ", 
   SubscriptBox["\[Sigma]", "2"]}]]], "Output",
 CellChangeTimes->{{3.766115925332752*^9, 3.766115928113784*^9}},
 CellLabel->
  "Out[178]=",ExpressionUUID->"f20117ba-1143-4790-9bbc-07bfab925a12"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"BinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "\[Mu]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "\[Sigma]"}], "}"}], ",", "\[Rho]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76611593238839*^9, 3.766115949215898*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"ef1dc464-21ac-4115-99a5-dc357102c1ad"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
       SuperscriptBox["\[Sigma]", "2"]], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", "\[Mu]"}], ")"}], "2"], 
       SuperscriptBox["\[Sigma]", "2"]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"y", "-", "\[Mu]"}], ")"}], " ", "\[Rho]"}], 
       SuperscriptBox["\[Sigma]", "2"]]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["\[Rho]", "2"]}]], " ", 
   SuperscriptBox["\[Sigma]", "2"]}]]], "Output",
 CellChangeTimes->{3.766115950168583*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"9ecaec3c-f8ed-46e5-8ace-e4c01d1694c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
        SuperscriptBox["\[Sigma]", "2"]], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", "\[Mu]"}], ")"}], "2"], 
        SuperscriptBox["\[Sigma]", "2"]], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"y", "-", "\[Mu]"}], ")"}], " ", "\[Rho]"}], 
        SuperscriptBox["\[Sigma]", "2"]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]], 
   RowBox[{"2", " ", "\[Pi]", " ", 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Rho]", "2"]}]], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[180]:=",ExpressionUUID->"8071a631-8c7a-4133-9ae1-9966622c9541"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"], "+", 
     RowBox[{"2", " ", "y", " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Mu]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}]}], "-", 
     RowBox[{"2", " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{"\[Mu]", "+", 
        RowBox[{"y", " ", "\[Rho]"}], "-", 
        RowBox[{"\[Mu]", " ", "\[Rho]"}]}], ")"}]}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[Rho]", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Sigma]", "2"]}]]], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["\[Rho]", "2"]}]], " ", 
   SuperscriptBox["\[Sigma]", "2"]}]]], "Output",
 CellChangeTimes->{3.766115958097557*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"18cef4eb-497b-486c-9caf-eb8f3df05077"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Out", "[", "180", "]"}], "/.", 
  RowBox[{"\[Rho]", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.766115987145844*^9, 3.766115994956334*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"7c37da71-ec7a-443b-ac23-2d16410287b9"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"], "-", 
      RowBox[{"2", " ", "x", " ", "\[Mu]"}], "-", 
      RowBox[{"2", " ", "y", " ", "\[Mu]"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Mu]", "2"]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   SuperscriptBox["\[Sigma]", "2"]}]]], "Output",
 CellChangeTimes->{3.76611599555973*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"5ca2151d-09d2-4a0a-b8e5-4be978b74bbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "-", 
       RowBox[{"2", " ", "x", " ", "\[Mu]"}], "-", 
       RowBox[{"2", " ", "y", " ", "\[Mu]"}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Mu]", "2"]}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}]], 
   RowBox[{"2", " ", "\[Pi]", " ", 
    SuperscriptBox["\[Sigma]", "2"]}]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[182]:=",ExpressionUUID->"c52ef181-b88e-40a1-8ccd-52851a0e252e"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"x", "+", "y"}], ")"}], " ", "\[Mu]"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Mu]", "2"]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   SuperscriptBox["\[Sigma]", "2"]}]]], "Output",
 CellChangeTimes->{3.766116003064075*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"2fd219f3-f283-48b0-92ee-ec6def112700"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"BinormalDistribution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Mu]", ",", "\[Mu]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "\[Sigma]"}], "}"}], ",", "\[Rho]"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Mu]", "\[Rule]", "1"}], ",", 
    RowBox[{"\[Sigma]", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7661160160210533`*^9, 3.7661160283436613`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"b0e8a745-a149-4cf7-9c08-290fbe6d27e4"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"0\\\", \\\"2\\\"]]\\) encountered.\"",2,183,16,
   17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766116029535273*^9},
 CellLabel->
  "During evaluation of \
In[183]:=",ExpressionUUID->"7db5bdb3-03b0-4f6f-9ec9-6d3beb16e891"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"0\\\", \\\"2\\\"]]\\) encountered.\"",2,183,17,
   17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766116029539564*^9},
 CellLabel->
  "During evaluation of \
In[183]:=",ExpressionUUID->"93b3aab3-b2c2-496f-a8b0-5185496c85db"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"0\\\", \\\"2\\\"]]\\) encountered.\"",2,183,18,
   17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766116029560425*^9},
 CellLabel->
  "During evaluation of \
In[183]:=",ExpressionUUID->"13da985d-9e2d-4624-be14-70d4d4f902d2"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,183,19,17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766116029581108*^9},
 CellLabel->
  "During evaluation of \
In[183]:=",ExpressionUUID->"f9924459-310a-49af-844b-139f3396a9a9"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"ComplexInfinity\\\", \
\\\"+\\\", \\\"ComplexInfinity\\\", \\\"+\\\", \\\"ComplexInfinity\\\"}]\\) \
encountered.\"",2,183,20,17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766116029602027*^9},
 CellLabel->
  "During evaluation of \
In[183]:=",ExpressionUUID->"a6275e64-7445-4707-800d-2ddc6f66a96b"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{3.76611602962325*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"ff4df042-eea4-4c64-8d23-50cebb4ddfff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"BinormalDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "\[Mu]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "\[Sigma]"}], "}"}], ",", "\[Rho]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"ed5d60f3-257d-4798-81e3-9f795934d58b"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
       SuperscriptBox["\[Sigma]", "2"]], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", "\[Mu]"}], ")"}], "2"], 
       SuperscriptBox["\[Sigma]", "2"]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"y", "-", "\[Mu]"}], ")"}], " ", "\[Rho]"}], 
       SuperscriptBox["\[Sigma]", "2"]]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["\[Rho]", "2"]}]], " ", 
   SuperscriptBox["\[Sigma]", "2"]}]]], "Output",
 CellChangeTimes->{3.766116035460844*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"adbaeeb9-2375-4160-85ab-672b5da2d44f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"BinormalDistribution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Mu]", ",", "\[Mu]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "\[Sigma]"}], "}"}], ",", "\[Rho]"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
    RowBox[{"\[Sigma]", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.766116046253702*^9, 3.766116047583177*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"9c4ead76-9167-41ce-ac72-c29f2191fda6"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"], "-", 
      RowBox[{"2", " ", "x", " ", "y", " ", "\[Rho]"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["\[Rho]", "2"]}]]}]]], "Output",
 CellChangeTimes->{3.766116048696251*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"825405fe-3dcc-45f5-9dbc-5dc8e82a0d64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "-", 
       RowBox[{"2", " ", "x", " ", "y", " ", "\[Rho]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]}]], 
   RowBox[{"2", " ", "\[Pi]", " ", 
    SqrtBox[
     RowBox[{"1", "-", 
      SuperscriptBox["\[Rho]", "2"]}]]}]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[186]:=",ExpressionUUID->"a48604ee-735e-4a96-bcd7-b1e602540954"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SuperscriptBox["y", "2"], "-", 
     RowBox[{"2", " ", "x", " ", "y", " ", "\[Rho]"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[Rho]", "2"]}], ")"}]}]]], 
  RowBox[{"2", " ", "\[Pi]", " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["\[Rho]", "2"]}]]}]]], "Output",
 CellChangeTimes->{3.7661160526138153`*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"5d680f23-60c8-441d-9615-a47e94b285b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"BinormalDistribution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Mu]", ",", "\[Mu]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "\[Sigma]"}], "}"}], ",", "\[Rho]"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
    RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
    RowBox[{"\[Rho]", "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7661160619494*^9, 3.766116065546132*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"5d3f18a7-6c78-40d7-ac38-6ca8914bb586"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "-", 
      SuperscriptBox["y", "2"]}], ")"}]}]], 
  RowBox[{"2", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.766116065996533*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"322ed033-93b1-4904-bc1e-e9c94177bed6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "-", 
        SuperscriptBox["y", "2"]}], ")"}]}]], 
    RowBox[{"2", " ", "\[Pi]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.43907057974912933`"}], ",", "0.439070576991095`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "0.439070576992762`"}], ",", "0.43907057974746233`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[188]:=",ExpressionUUID->"7ecf7506-1d09-4fe6-a7d9-c83e3958de09"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
wXfto/kPncHfp+1V+hvgr9dR/ofO4D+G0/oLncHXDeuh9DfAX4YUVvob4MNX
F1P6G+DZQ2j/BZ3B+3hZKf0N8XdzqP8AncFfZVH/BzqD6+5tUfobyVXZv7oV
E7Yq/Trwxi6eSr8OfPpUmv/QGTy0m7nSrwM/85+10q8DPzvrD6VfBx78mOof
6Ay+wzVE6deBj40sofTrwAel0P4LOoNXH9ta6deB31ndTunXgc96Qv0f6Az+
rvQapV8H7phO/c/G088feWx/R29z5XqM9u+e4pW+zG0j9QfvVtK5c5tiBj19
2H/rwH8f+Bsbj+uDv1kbzsbj+g+LsH91f11NzTO+PnjrV086GV8fPKQ6xQOO
+P+p6axcH33ICYN0SpzgH9eo8eA6LV7T30X8+Lv3ptB1qi259CmtbKa+aNbN
bO3fTacD9/b+JUEXN4b9tw68dJ0kxjH+mhX7V7d+UlllPHipTLoOdMB1hk++
sPP989NiPOLvMr76Lo3j+oi/6MnJbDzix/Xfxl7eaTwe12my/rIyHn/3HL8+
4sF1lpyYrMSDv1s5nOL0+C8lff5a2deNHGdtV39zgm56s/iArtYZsq9et27P
ZQskx/i4MQcbxX1O0O2ff7CIbdhVMT7xwfB7pmmSY7z30UrzK3RI1KVs7+IS
X+6iGP9h8PjSZuaSY3zSYbvs4wsMz5e7U2BX6xQx3mv+/Z/2bpJj/Iieca1K
xxl4Slu3+HInxPj0fr9MPz9Mcoz/yzQh4EBmou6naSP3+HJ7xfit9/e0vzJF
cowPq7LareMHljfc/1+fP95sZgPDePG7r3sQx66D8fn71RgPXvW3zez6f3Yc
28QQp7jO6ZZVWPzgGP9iwW0W/6CinUcbdBDjn1mampR1kxzjY85lMn2yRw1p
btBZjO/hvpHpD47xFa54MP09RhwvZPgdxfioo5Hs9wXH+OMlB7Df18o2ZYxh
nojxv00IZPMHHOMnheSy+ZOVkpZmmIdivL93/xcHGkmO8bkRfmx+Yt6i37vv
m/XTrMKJYn6CX2gxItNnUKKYh+C/l72T579Hzjfwput6HR7/Ss4r8Nl9Vty4
VyVJzB/wxY4/KnTukCTmCfjM2LRJQ32TxO+ev3+O3x3ctPNdNh6/L7htK/uK
2vXxO4L/si6WxYPfCzwnYR6LH78LeMPjdl+0+4X+4Jcu7mH6QGcRz8uRTE/o
LPrGnrdquvSTOoN3zF1+t+8hqTP4yItP36WaJAmdwXuPXJaT2y5J6Aye1Xp2
515TpM7guz88ODBmo9QZ3H6+1fpnsVLn/P1z6Axeu3cVNh46g8cFfWHXh87g
V+pvZ/FAZ/BHQXoWP3QG7zS/5nvtfqEz+Ib0m0wf6Ax+YV/9Wpqe0Bn93g3m
1Yt3Xyt1Bv/xoEP0/o9SZ/B3XQLPubpLncE/vq0f02+x1Bl8QdTEzLEnpM7g
LwNyQsweSZ3BZ5p/Tc38InXO3z+HzuBFS5id18ZDZ/CJ7S0na9eHzuAVbSNY
PNAZvPrewSx+6Az+6N4edr/QWdyvfgXTBzqDR66fwvSEzuj3flnSappXitQZ
vNjahOF/V08SOoPv3qQf8CNY6gzuYzKv+OljUmfwLkH95vm8kTqDRwZkZ/jY
Jgudwa0a6Cf5N0wWOufvn0Nn8CmdLrLx0Bl8yQKLG9r1oTN4M49QFg90Bn/V
+giLHzqDv738g90vdAZ/6ljKT9MHOoO/frmC6Qmd0e/tEDA/9ey/UmfwgXEH
1v7dRuoMblP89rVpK6XO4C7NTzfaekPqDF7aevODZaWShc7gj/4t1S21qdQZ
fOVNl6Hfu0id8/fPoTP4DbNObDx0BvdxqM2uD53Br9U4y+KBzuC/6T+y+KEz
ePmIste1+4XO4B6JX5g+0Bk8osdtpid0Rr831fJ6cNeXUmdwu7Hu1t6dpc7g
n292CO8fKXUG9zyt77j1gdQZfOYv2bV320mdRd870nHgZ1epM7hDROKWll5S
5/z9c+gMbn41jY2HzuBtXnRi14fOov/foEIdLR7oDD51xEcWP3QGL75kIbtf
6AyeEbGC6QOdwf2r1AvR9ITO6PdajAlR5jP4qcAtynwGPznvvDKfwXuEHlLm
M3iVJuHKfAbPePS9q/F8Bl9+toEyn/P3z6EzePpnZ2U+g3etUVaZz+CP2h9T
5jP4gmL/KfMZPMmqhDKfRV996itlPoP7db2gzGf0e5P2VlbyM/ithtuV/Awe
f3Krkp/B7x4foeRncNc7LZT8DL4n8oaSn8EDnLco+Tl//xw6g1/x2q/kZ/C/
jrzLMM7P4LUPDVbyM/j4T38p+Rm88Jt/lfwMfvzs2+HG+Rn8qGWwkp/R7/25
J8/MuN4An32gglJviD726HZKvQH+T4iJUm+AVzngodQb4Etrpir1BnjplZeV
eiN//xw6g0csz0w1rjfArb4/DDGuN8DjagQq9Qb4i1+bKvUGePG8OUq9AT5p
+Uil3gA3ce6u1Bvo99a7t0Wpn0U/eVp/pX4Gn+l3QKmfwb+06KvUz+CVgjso
9TP4jWM7lPoZfK7prQjj+jl//1ysg5yvTH8cYVw/gz9uflqpn8Et/QKU+hl8
abtFSv0MPqz863fG9TN4eL/NSv0MXrtdTk3j+hn93n9qX31ivB8U/Wrrqsp+
ELxh+mplPyj62ENLKvtB8FKDPJX9IHjL/UeV/SD4gnuLlf1g/v45dBb97Umr
lf0g+JljaRWM94Pga7YEKvtBcN+lrZX9IPjVSVfzjPeD4OV3jVb2g+Bl7Kor
+0H0ewe+T7Y17heB/+o3VOkLge/1vTjPuP8Dfskt+aNxnwe851c/pZ8DPqFk
oNK3Ab+aqFP6M/n759AZfJh1V6XfAp7850KlrwK+cdISpX8CXn1g9kfjPgm4
ecwvSj9E9P+Ddih9D/CjlW2V/gb6dTFPDzzX+iHQGbxO3cs9tL4KdAbfMKgY
689AZ/AtEaVZnwc6g9fSz6F+GtcZvMmtndO0vhN0Bl//tovS18rfP4fO4OHv
+rPx0Bm8aryeXR86i/5wl20sHugM/mOWjsUPncGnNG3D7hc6g5efYMX6TtCz
nssVTW99T/ur8Z9WSj0dEq/+lmd3W5/z1D+uxl2pZ/lO18oE/XVbX+lmaFqP
cnLeWvE++cNqzX927iT1LNn/Rh+fdXf0/9x1CzsRIPUswvu0V3sW7jJqjtTz
24jbazpEZOptDtV8VHOx1DOngL5iXR7//k21ot4/lHoi/oaTstZbn5R6Iv7Q
+qHRAb9LPa15/LcWzS461VPqifhXtHQLT/si9TTl8a+acPhslS1Sz1GmyWdv
rLyuv5hQN/ByrtRz8FL2/+lPHrJ5GuEu861XmbPFE1dl6Itl79w4baHUs/u6
c9EtbG7o21060OLdMalnxyrnu+xbfUO/+aNluw1ZUs82Oy68crC9qS/9vKt5
s1ypZ8uGl5atW3NT37/MKLewn1LPXwvou47k8bt6lwi27yHzLeJ/1uaP6Sn1
ZL5F/MWPD0zr/Vnq2YPHb9/seZDzMakn4m968o/7pQJkHtDx+O9y/zDyQAse
/1rr7mEue6XOWy/E6euuuKJPS2/wS70ucl1b3/ufoVGWhn3GvcUV90VKnVfe
Zn9fH5LX70rVf6XOS4ee2Lq0dLp+zeMku5/2sn6Y//Rke5PwdL3foMaX77aR
61roeP3jkDLX9A+yNp32HyjXteCc0wtfhl/TD630YMDk0XJdCyygz7mFx9/h
uUVs+m6pM+J/c2BASc/FUmfE//idaZ/eXnJd+4PHPzqx68pR9rJ+QPzxhcm/
Cp1n8PhntT28ofBEqfMkHv+QNWWKvSsl17UTtfsH5dml6m+n+10bsFzqvLe5
z6HH9uf1VbOuJ/g+kjpHth/0Ma3sBX0R7/MZzvVlnbas11AtXv3OJ7tXDx8p
dZ41xG/KjvKX9Jnfl/f1C5c6BwWO+ie8wmX9++cZwx7vlzoPnTH2a2jFNL3J
3mqZ0SelzrsL6HPG8/gr/vt5SbkPUmfE31BXPvnPq1LnjTz+4Q1/v9p/q9R5
OY/fLov8q9AZ8de8fu7RpXKyThvP43ep3CllR4LUeTCP/1WZlwMdB0mdmx1z
GxJlmaB3cg08s1Yvda5xpu2WpaUT9eOW5Jy6aS/3dzbX3R+FlEnSfzg/Ou35
cKlz0Ycdaw6zStYPaNbH32mz1Dn3Lbs//YUBNSLbpkmdn37vtruFzRm95aew
vnveSp1vlez10sH2rN4mZdOYxoXk/u58AX3Opjz+B+F1Mmxry/0d4jd5N/FT
nJnc39ny+N8EkX8VOhfj8ZdJWNbrfpTUGfGfyab5D52f8PirF/btPv2n1PkG
j9+jSIcT5pFS5/7hXTctLR2jr/5u8oVuWVLnFvt6OwyzitUHn2o8e66z1Lls
qveOFjZH9VnBW1KWLpY6f3k8uJ6F3TF91u8lJ144K3W+azJy/2P74/r6tbM3
6vOkzqcqBmh66KtNTLP9WVHuoze3nHA0vMIp/ak2J+e4/Sp1bldAn7Mvj79e
duc+dT2lzoi/NvevivWOx1/Et05KnUKyX/GNx+9n439m7VmpM+JP+cNpzOvZ
UucTPP4NnpT/oXMkj7/GtMgpV85JnRuvvPfusMUc/ZD4RVEOL6TO61ouNou1
CNNvaXjoS3ZHqXP5XVFlLezW6TMqdri/f53U+WpJX5tYi816285jS+7JlDqv
aT+m4jCrbfrAfVVtBpeWfSGfGcE1LOx26dNHN8ru7yR1rnJ4jqaffqD7Je8O
3aTOEwvoc1bk8bfn/lXojPj9h9eJHesidXbg8b/4c332LSupcwaPf5R754CI
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
lxf5kbrz/ADuWyic+S6QH8CH5JK/FPkBvM9r8vciP4j9UR75q5EfwO8PJx87
8gPq+WqHyf/QjecH8Ivcf/I7zw9i3/GO/D8PeX4Ar5tB/qv/eH4Af1xyBfMz
OPH8AD4mkHzLX3h+AJ9VtDTzjet5fhD7mnfkz3fj+QF18rVe5J8Zx/MDuPM2
8i8d5fkBPMOT/GPIA+AVc8lfjTwAvu4B+dvxfRvwLCd6j6AzzwOoJ+9Ek58K
eQDcczf52ZAHwE+Z7WLn3cgD4L+9pvcX6vHz5Ub5zvFb8PwAfsGJfHTID+BL
ftL7EZ/4efSXfOfR5S3TtHNWsY5f+prLzltRb4g6wYe+72HPx+M63aPonL0T
zz+izuHnvKifwT/9R+/F7OPPI/il/XS+fJifg9fL996E27iz2vm0WGfvbKNz
6uwrv2l+RLEOBv5YxnRw+sjOucX6VTp3GNNzYjzzGQjeqCn5DZpFjND8jmI9
GjOAfI976/tpflPBNy0k32kj/l0jrAsBI+mc3b/dKc3fIHjNn6vY/NlRIkbz
l8hzoqPkM5k0zFvzX4r1JdyVfJjnLQdp/lfB71iSDzbwk4fmPxb86inyIdcu
dFHzAYh151JN8gP4pTIfhjxneUF+jKhw5oMRfGwK+WGOHu6u+ZAEt5pMfqRB
fdZp/lGxTsUvJh/ps49emn9X8JoDyMcb+ry95p8W3Jf7qIsM8NX864JbOZKP
vSr/bhLWtUlR5HPw7Zmg+UsEv7uWfCbryh7R/D2CJ+jJ57MzoZfmrxJ8xX7y
WVXp7az52wR3r0s+t/RHszW/rFhP3w4m32zRWz01v7LgP/h3j//IbKP5xQWv
9Z5849ZdBmh+fcHXtiPffvd7x7T3JQRfcoTem4Dv4lQ+33JZ/nyhHx5eg3wg
fW8y/43gNxaTDycsivmfBE+eTj6odWl9Nf+Z4IViyIdWemhrzf8n+BRL8gGW
/rej5r8UvG077sN8dlnzGYv+/HzuQ3Y40VnzeQuu537v9ZdcNZ+94MmryW/v
4OqlvecgePsn9L5DPy/2nongG97R+ybllidp7/kIHj2M3ve5x30gVfL5jcsU
0P/vVsA5wu8F9P9TCujzFy6gnz+9gL79wwL6820K6KvvKqB/3riAPrlvAf3w
qgX0vR8X0N9GXkWdUNWB/Eu5PK+CRwWSXx15Fevy4k7kg0JeBS9enHxo8Fmt
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
IdUPrkusN6rH3JpYY1yo35S4X1bf90nivlj13vLEfbF6gY8T99eqCT9Lc4Fy
9JbE+uQCxj9K3KerzvwmseapWu7DNL8r/25OrE/OZ3xnYn3vdXhHGv9fC+4X
tT5HcX2z4HWi9bIp69ogX9b9iOoj1SBdo7WPvVrviTUH9ZJl0ti1FP9jYr10
DrwpzQvKQT9jTeB5jH+fuJ5UjvspsR47V3VOYu10tuqaNH+pVvk6sY6q/npl
Yl1C/VT3YK1AutScaM1LNXm34Pr5PPi9xLqE6vl3E+sYquHVY6jX+K+2D96z
9ZRzgrWI2trLwb1Mo+h6X3t/Js/TK7iXkU6melxr703Vt4zPhOtzfc/gnqiB
am2u6QovZiyb1gzKcbsS67SLGNsNt4XfgFcl1nDUJ36heJBxH7E6sa6i3uFI
Yi33bTgv1htegv87sQ78Fnw4ce5Tri8SrL+pVvkzcZ5Vvv4rsT78Jv+fBOtg
7+CL5VxHar9UCNbr3tW6jc7xqj2mpXHnC+WNaP1d6/OuaF1ea35ktO6sZ3s4
Ws/ROnk8Wuv4FJ4crQl+Bk+K1iVW6N1H65U/KRdF60paP4OjtXWt7UHRmpfW
z+xoDfRnrcdoLV5rfkG0jrkRPj9Yb/xcezdaG/0RfiJaf9T4PdHnB9ojA6O1
MK3nJsF9zUr83Gj9dIPea7QGp3U7L1pb/EX7KVqL17wvid5X2jv1sUcy/o0f
RfdvqvGmRMfcVfDZwfH8I3zzYP1T73lCtF7xCfxYtKbxsdZ2dA2tGr5Dui8U
s8dHayC6T83g+K/rq6f7XbXDmcH54kPF6eg4vhquF5wLNEcXBPdueramwT2d
rpkYrR0th5+Mzg16P3WC47/GqwXnhWWKwdG9k+rh04PzyPv4KsG55gP8ucG5
Sb+xcbBOqLXRKDjnqkaaH60R/8rY0mgtQH3E4mi94zf47Widejt8Q3BeUKy4
LVjr1nroHaxXay+viO6fVZMvi+6NVZN/GN1vq25/PVpH3gy/Ea13b4XfjNbQ
t8F9gjX5Tfjl0T2zavJPo/tk1eE9gnVprZP3o7UV9VxPR+fpNfB70fqL+q/r
gjVtre2uwZq81u1Neo6M38O1wecC2i83BmvdWp+LonXwLfCQ6DMwxZmh0edY
2vsLo88V9MzPR+vy32gNRp8hKSYMCM6Jyq0vRvfz6xibHp3vv4Sfi9Z2v4Zn
RZ9b/ADPjNbuv4dfjtbrv4Ofja45voKvCD6PWK89FXy+oPd8X/Q5nOKkzpCU
0+fy+f7g/lc5elj0GZ7i3gPBupnm/YVoPeJbrfHosy7FzHuDNS7N10Ds44zf
z0vR5w16hnuCdTPN7zPRNdNauGPw2YGe/+No3UR92SPRerLiZC7nszHVBiuj
tTb1QaOitWtpyCflfHal/HIkWi9TPXlhcK2lXPx5tHaj/mt0tBat/fJvtO6m
GjV/zudqqoVaBp8TaS5aBJ+JaC1dFHxuoudPcj6fU35spX2b8fvPm/N5m2rR
UXz+MeN9JH1Bvbi0lGzOZw/KldIn/18vUX2wOWM95+Scz/ZUJ+fL+axO9aq0
C83baYy1CT6T0jo5Gq15qU6W3rI1Y63hlJzPDlUTxpzPF5VP2wafYWl9Ho/W
HJWvQ85nk8q/x6I1StWcFXPWgFTzV8hZL1DN/1m0Zqo+97LgszOtk4I518Sq
q0/NWQtQ/1I65/5fdX7RnLUV1a7lc9YO1I+UyllfUK1eLmfdQX1HJ637jPfC
uGj9WfH2RLQ2qnpyTPT5hWLg4ehzEfUjBXKus1UDF8q5hlYNfHnwGZ/24JXB
52XaX0Vy1kFUD5fNWb9QzzU2+oxDcfj/AM8b5U4=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtmnXgFUUbhXd3FhMDC8HExO7uxlbs/kTs7g6wuzvBxMbE7u7u7u5W/J7H
s38MO2dm773z2533fc85Q79Buw7cpamqagv+abnuzj/z1FW1MP3XGfulVNWc
9Gdi7AHm9gQ/Aj6BuXF7VNXe4EfBJ4J7gncD3wQ+DnwT9+8Cvg98NHhs5ncH
3ww+Hnwz87vSZue752fsZcb2Yf4x+ifRH4/7f2euP21uxp53obS5wQvRfY3+
byVz3vMQ37U5+AbwvszVfP4AxpZhbgBjnzO2GfPX09/H72L+Z/DMdKflnvu5
d1rG16K/AWO/0T+EsVXAA8E/gg8CLwdeBfwleG0+fzr9Helfztxa4NPAO4Av
Aw+hDeT+jRj7g7EDmX+a/hn0J+T3twDfCN4P3IB3Bt8LPgo8FvgQ8HPgs8ET
gw8FPw8+BzwJ+A6uk4M/4Dfu5LcOZv5Z8FmMT8T8RuCrfa/gf5kfwfVD1067
kf5+zN9J/1T6tzB/NPhJ8DDwKN8P+H7wMeBx+L6DwM+AzwT3Al/P9XPwF7Qb
6O/P/F30T6N/K59fmna7c3Xe52HMPwg+j/nbfTe0Ua6F+fGZnxK8I3gr8Of0
p6LtBB4M/oJ+X9p24C3Bn9KfgrYDeBD4M/pr8v2XgLfj+/8CL0u7AzyS+Qn4
/g2Yvwq8K/P/uPdox4GHMv8H/RXb7NdRdZ73rOBjwIeBf6Pfh7Yt+H/gT+iv
1Ob53FHnfQzge7envwPtW+Zmox3L/BDw7/TnpJ0CPrbO+vrT9vf9gH+hPxlt
MHgz8If0e9O2Bm8O/oj+9MYgeCfw9/Sno+3h/gN/R3+JNvtpRJ33tXibeLiq
Tvytwd9/MXhb1vknc0vRbgNfXyd+lwTfCr6uTnwvVbLeDbn/V+ZmoO0F3pn5
H+j3o+3m8wZ/Q39y2jbmE/DH9Kem7QzeGvwl/Rlpe4N3Af9IfxpzBHgb8Ff0
Z6Lt4/sB/0R/Ztq+4N3APxuf7knXD/66zf59AnxKk/e7Qpv4ub3O/l+sTbxf
WSee9gTPR39Rxt7kM3uB5wcvBn4L/CPfNy39yRm7l7kfwNOAe4PvcS20xegv
x9hH3L8HeF7wIuA3wB938fNAnXjaxT1Afz7GXmJ+Z/Cs4HnBL4L35f7H6Z/c
ZP8fDn4FfAF4UvA+3L8o9y/L2IeMbcj8CJ8H/dHMLVSyv9Zqsn92os3C/fMw
9gJj6zF/pc+b/t/MTUrbCrwp93zgu6AtQn8Zc4g5h7YweGnw+/SP5POv0b+I
fm/WMy/3n2d818knc9HOdv11vv8I7n8VfCH3T8b9K4LP6eqL8TMAfK7x0yQe
Vi75vi2bxN/ytHvAt9XJL3O3+fwpdeJ1/jb795w6+X1B8BWuD1zAC7X5ey8G
t+B52vzeqXWe18Jt4v8ScA/mj+L3X/d+8yh4gTb549w6+XiRNs97GHgM8xd4
bfobMvZ7l8OeBL9QJbcNpJ1hfDJ3BXPHu5+ZP4SxGZg7wT0EPtSaamyBDwIf
Dp4TfDL4QPBQ8OzgY4x38IHgqcFHtckV5owpwUcb/+ADwH3Bx/lOwQeDp3Nv
GK/gg6xx4KHgjcBbgmvw+bSp6U/G2P98H+Zw+vvRTgSfak2hfwT3zG1tAx8C
PhI8L/g68DV1av6W4JPAB4CHgGcFL9wkN5gjJgQf0SZ3m8PHKmnWxnmazBkj
M4D/qhM7coIZwX/X4QqLlDyLgYyfYWzTrq3DKQYx9715jNYH/Dj3PGAdtD75
N3PvXbQ/wb1o91m73LdV7vHee+Qd9D9lfIs23+F3/QDeFvwEuC/4R/+GNjE2
HfiPOrH3NHgq8C/gHdvwlz517vHeT1nji1X2jHvnQes6+EvwIPBD1nXwV+Ct
2uQcc4856VnmDuDzd9M/nf5tzH0Cfgr8YJ16+7B5A/w1eLC1q5sfzvgdbXKa
ua1fFT71GfNvurY69f4R4xb8DXjrNjlqevCfdXLXU+ApwT9b48xNJXtrHcbP
NPZoFzJ3mWMlY4eDj69y79pNaqE5y9wlJ5JLTdeEKxlTK4P7NYk1OZa5eeKO
e5mjZwe3Xe7+okkun0hu1SYHzwpuutzsHrG2W+PdO+b82eiXJrXg4ja5zBxk
LjoHfBT4JPASJZzPXN+344I/NMnFfbgeDD7fGK/D+ZaRC4IPBR8Fnh98AfiE
OhxxWfBF4JPAZ4KXB18IPrFOzljOWGjCDay51t7zmD8OfCp4afBiJbG9Lved
1Yajz2IsN+HuZ9OONHYZW5x7h/kMwBeAVwVv3yS3mePkSvs34QpyBrnotdx/
NXikObqEw54HHlaF28pxzwcPr8J9zXEXgC+tkvt8Zua29Zs8S9dg7luvydrk
4NbKXk24+VW04XU4qlzVGmetHKdJ7RtOO5P5CxlbTW4HPh18PniVkmdwBPiE
Ks/GnCZXn6VJrhtBu5T5axjbmLnPmmibCc1z/q20y5i/lrFNSmq6WmTcJrXe
mmitHrtJrXyS6xTgn/jM9m3q5SxdPffeu2k96X/C2OatG43nyGVmxl9qoynU
FtNwfRb8K9f1ze1cnwF/z3UtcG+uT4L/5bqFtYLri+B/uG5mLeH6PHg0183B
M3J9oU0MG8tvVOHyfzG+Kf3puT7XJkaWrRNjxs53tDXN/1yfYO4XOQN4Kq5P
gycp4XuLN+Gjk5bwtyWa8NHeJfxsqSZ8+Geu61qbuD4FnriEry7WhG+0Jfx2
dvAr4IlK+Oui4PfB33JdAzwp18fBpYSvzAZ+GTxZCT9csgm/PNd119FEaiPf
sXt9zybv3pi0tm7SJFaNOWNz8yaxuFMJ3zgSPGaP5ABz1aAmucGYtfZt2iSW
3XPuta2a7EVj1lq4WZNYdo+aO7ZusneNOWNxcJNYdI+7d/dosvcHl/Dvg5vw
l21L9NChTfiJNdXYOrBJrTUmjb0DmsSqe9bY2KvJXt6uRO8c1oSvWBPNxQc1
qZX9uW5YZ0+6N3co2fuHM34j89uU6LVDmvCn7UtiZyj4hjY13Fq+EPg98AQl
fHxB8Lvg8Uv4/ALgd9pOU/N7/avo9Vub/2R39Q5jGzB3m+sEvyunAt/uewC/
B94I/A54SXCPJv6DnHRp8JhN9L5+QL86OdBc+B5tKfpjcH2wzW/qFfxbZy3m
0KHmgia59ZYmvsfbzK/fRk+PDf4QvIl8ATwu+GPwZuBH2/gP5pDPujX07/i2
a7uTNg79jxjb1HpKm6vOGj7t/ga9lLmq/G2uceY6HoZrv7n577VUbzG2HnMj
m//+xOpN8LptvmNF8PhNvts1rASeoMnaPuG6Ang8rg+DxyvRX/OD3wb3LNHT
84HfAn/NdXXwJFwfa8MxXNuvnd4Zp0SPz8v4m+AeJXp0DvCrbfibXG5u8Bvg
MUv08Vzg18FjlOjBOcGvteEc/q2/dfrKPXdzHc/Avegeu6mOJ+Hek9PIbdRU
egt6RnfV8RD0kl7l+xakP5qx+5h7rImf8x347jYaTC2mRlQr6kndCX6gilc1
pIk3YMwYO3LCaX23dbjisU20/f1VvJD/OA39nZtwHWvI0nXege/iuiaeyPvg
k0o03Y3d96v19DD0Mnwn07ieklysR2U9vLmED5mjzdU3lPAPNaD1cGSJl+Vv
+tvXl/ARNZz16Vza0fRPNkeWaG61tzHZD3x1Sf3V45MvvMJaZwL/I0dv4yGN
VScGjIWPaQvQ78l1P+auLeFjamj50zUl/EsNLN+6BbxqFY9MvnYdePEqGlu+
Jgd9sQ7nlJveSFu+iqa23qr51f7WlPlKNKBaUE2v96SmV9vr0eh1qSkP6/ik
WlNNOaTje2pNPQ29DXOaXqWeht6GOXfP7v0P7/iB+01PYdtOr8xY4plc1fEj
vcxDzengdcA/uVeYv7aJJzqU+clp+/l+mvhTejAjOj7l/nE/ya9u6vafnoTe
hB6N3p8eiF6IOXX6Eo7/UB0O/x/39zvreH7u9aZkLbPSP5y5Ndv4c49yz5R8
90jfSR3NsCP3nl2iX8bv8tOqbfyH++vo39XaxIox00e/qI1f+Qh4CvDabfzI
x8FTg9dq4zc+Bp7KZ1XCn/Q81G+Xg+fwWXZ66LIS/j5Dpx8Gtqnd1vBpesQT
0huyxs8j/y3RU5PU0WPnlPCvCbt8fGkJn5++42OjeA5jmYvBG4PPKtFvPbt8
fkqJ1lPzrdvVw5XrcEa5423d89Tzle/7jt2fUzR597d2/NLPyP9HyTmqeLzq
lzvAg6pobPnn7SX6Vs9APaMHqhdqjdfrNkfPWSeHmbuvLOG/ekTqLT019fPu
jM1s7qH1tr519XFESXzqoauPzyjRb21XT08r0ZNVV99OLdGbo6vUl9NL9GLT
1WM9GPWSHEgupKc2ssvH5k85xbCOr5svrQFr1OGw1gZz/Jp1OK653xqgn65f
Ym2QE6xfh9PKFeQMG3R8RC5hDfFZ+cysLdacdepwWGuRnHeFOhzxn47TLl+n
hsl19TM+9lnSvjC/ylOreN6fl3AW+c+WVbiM+Votrib/pqQmrluHY1srrZnr
1eHY1lI9W/WZekz9JOdesQ6HHt1xYL1ha6Lc2POEZTq+rbaV4y/V1YtfO469
ZJ2aLvd+tqsn5ni1wuRNcrs5/oeOEy9Yh+PIldUI+nXLVNEOcviF6nCk77r8
dL65CPxViYZYqY7G+Lfj4KvX4fxyc3OW/sz2VXKZ/o172T3dq0TDDACv7Z4q
4eB6vdZ8ubkaQe9ajqB2kPPrNQ6uogXUDHrZcgK1xKXGKPgi8OrWq5K1fkb7
mv7JtG+qnDH4fvQ49b/0u/QP9IT1hs25C5ToWfWqHFmurIen3h1WRd/qGeod
XlLlrEg/Qv9MT0l/QE9TP0COLldXj+tnyRnljupn9bh6Xz0sR9dL1COUu8uZ
9R71GOXSniGM6viDZzl6mHqZepKeReiZ6p3qcerVqgH0MvUw1QZ6lnqX+hN6
v/+d+dThL+od9Y98Rj6k/6iHd02TGDAW9GDvrXOmpjfrGYlnJXK6PiVnLJ61
yAmnKvF476tTE/R+zenmdnP+CSU539xvzj6xpMZYa6wBx5fkcHO5fqj8Rw/7
njpnhHrb1hRri3xOfSqnWLxOjpVryEHmqJPT5CbWJGuTNUmv1pw+dp0caK7f
Bjx1HQ7zaJMaZa2yBh5XUhM37vavtXJ4iT80XR3/Ts44TR3OKJccVqIl1BT6
fXqgeqGHMda/5G98h/7lTf52c6q51ZyqlhhdEnvGpLE5oA038Bn4LFZu8yx8
J74bOcPLVWLUWH0MfHQVD0kvyWeklr+kybOr2+QKc4i5pGmTS8wZ5g6f+fvg
q5q8i39KcoU5wdxwrDkOfCnzfZn/u0RfmVPMLYoh9YM5ydz0F/NLGFt19MEf
JbVKTaP+8Bm/Db6se/aPluhrPWK94udKvC09MPXzkyV6WM9G7+bZEm9MD019
/kxJbBlj6jM5rM9+gybc9ukSbqtHp79kzbJ2WePUlo+U6HE9a73rJ0r0uh6k
XqR7+F3wFU329hUl3o0ejv7twyV6X09eb/7xklpoTdRLvL/E39LT19t/sCQ3
mCP0vh8q8Rv08PXyjZH3wFc2iZ2nSvwBPTr9MD2HK+qcUelF/FmiFdWY6rmJ
29RGa5a1S/F8dp0zEM+yfy3Ra2pItaQcS64lx9KLHqNNbTLnm/sLbbUqNdPa
OWabWmBON7frwWxSx3PRm7H+DOjqhfVFD2a1Oh6P3oxn2LfW8VA825YTrdzV
B+uVHtASdfaU3pBniJ4vDKnib75R50xajTuy25MP1+Gc7tXv/I0qnr16zDNV
z1b1jGYx37ap/XICucHYbdZmTbO2Tcr1qyr58Gq+f7w2XESOIdfwvMPv9Ls8
r3iK8a+r1CBjUo4kV5Izqs3ljHLHXt16Xb9rc43yix5tuImcQG7gGesxdfxc
z14naMNl5BhyjXHa1F45lFxq3DZcSg4llxrf91GFA8mFerXhInIouVTPNlxL
jiXXmrANd5GzyF0masO15FhyrQe6ePIMyrMoY9rYNgfoBbxaUjutoXq/R7Y5
z5Z/Wv9fLvGb9JT1szyz6FvnfMOzjNW7+NymSW33fMXzhmmraGs5ulzdHKyX
eldJLbeme7alJlAbyOk9a9i0hBvsTf8a5l4v8bP0nPWeXyvxx/Sk9aZf6e7X
M9Z/e7fkbMgzKv2zF0tquzVef++ekvMLz9g8a3upxD/UY9bfu7uEG8gRPGtz
DZf7XVXW5hm8Z/F6pHOUaBS1imckniXpAU9UR7PoDXtm7tm5Hupc5uoS70PP
Q+/jnRJtqEbU31PjqHXUbHpRnmF5ntSvynnVByXaTg9FL0WN59qOaKL9Pizh
BnIEvQ81n9pPTaRX9XyJn+EZhP7lR+CHqngsei3+nwL/b4Ee7mwdv/CsUE22
ThtNpbZSj+oXvFXiJ+q567++B76lyhmd/qM11dqqH+jZ2iUltXuqOudNahq1
jRpGL9Caq+7x/1VYiz3TmrLOGaFnXX7Gz3pG6NmVmkfto6bRW3yBz55V5cxF
v/fCkvMs96x7V84gl/i2Dpc4t+Td+c58dxeU7G2fuc/+vpLzDM9YPWu9qGQt
U9Q5r7u4ZC2u0bU65py/6dnevSXnN57JejYrB5GLyDk8W3yzxIvQk9AfNubk
Los0icU7S7i5HN3z0jfAl1c5c9OPWqUN15PDyeU8D9V/ld/oF7zd7Q/PPPSL
/w+eOLQ7
           "]], Polygon3DBox[CompressedData["
1:eJwt13nYVmMaAPCv930rKUWJGSraTaW0onW0Ma20cbXSOtOKNrRotGqnUkwb
pbKFaaV1tNJmqCwtQpaELJWplPnd1/n+uK/nuX/nPqfec57nPucr3nVAq/6p
rKysXSKnKJ/JyrofTM+RlTVH3jidlXWd+LMo4lh9x8Ybb5TfIIqZN2RPGrfK
m5n/bF7J/BbxF/P72ATXGy+elb/AfzG/Ulzv33jP8efZz/L84jr2LrtV7Ujj
craadVezUZ7f/GXjK6K1mpvE3eaj1E1w7DZ1/xF3sh8cK2t+kyglSoobWWPH
JhlLyIvHbzFvxCYay4ku5tNcb7br3en4WlGCNWBN2XnziuzmuG4m+d3TjcXk
RSPMG8TvNlYQD5g/Fb/fuXc5XkVUFmUca+HY08Zq8qqirHlLNsO4Td7c/JdM
Uh/nrYn/M6vvek1c75x5ZccfNC5ky9i9anaJtmwIe5zVkVcQ5eM+qG8av9FY
VQwxX6LuRfGK/AM1Xdlo+WTnNpFX40PZUracdWJ7RQc2nI1h9eMZpZM18V0m
ubdxj3eKVmyguuHqasoLO16L9WEPs4LsalaT9Wb/EGPlhcStrJd8gLoC6j4U
3dgYNoU1lVdX9whbxl5nndmmdPJcT2aSZx9rYJ/oyEbE9dU1kG9PJ8/h10zy
DOJZ7Egnz+E0q25eI9a0+QC2wLlLnduWVWR/Z3PYAtaCXcNqs75sICsUa4X1
YrPZM2KRfH062VPfZpJ1E+unknlsyvlqlji3HducTtbs946VjnUj/is6s8dj
b6lrJH9fdGIj2TjWMLs2zimeSfbEZGNBUcO8p7r+6vI7fi2rw/qxQezqWG/s
odif7CV2X/QD9lf2IBvKrs3e67HnS2eS9fqU8T15G/PB6kaqqy3fkk7W3U+Z
ZO/EHioiro9gdzg2LvZg9I5YO+ZN2FTjfnl387GuN9X1msl3i3ZsKBvF6srf
Fa3ZIDaC1ZLnd34V1pX1ZnlZvuhTrAvryXKxK9gt7H7Wi+VmBWJNsG6sD7uc
XRn7lXVnfVk+dlWsE9aD9WNXsMvjd7JOrDvLsD+xuqw/G8wKszzRJ1hH1o2l
o+eyemwAG8KuYe+kk/txKpPs49jPec0rss7qekQfZxvSSf85kUn6dPTry+Ic
1kFdezFavoe3Z8Mid+4d8kuxFtidrCU7Zb6YnZZfLYqy3ayR858xbmd72PDo
uWwO28n2sZHRv9gi9iH7QLwlv0vMZbvl+9U9Eb+LzWd72UE2hv2NzWN72AE2
Ot4xbCF7n33MxrGabEwq6V/Rx3J7mX3JJ7FX5SvVPSzPpa4Ma8c6s0vmTdkC
4z72ERurLne8N9i9rAv7w7wFW2zczw6xJ9U9LQ7L/8h+f66Kvs2OsBwiF1vN
vopa4wq2nj0m/yPWPKvN6ohdrn+cPcX+LV+n7lH579Er436z5uz7VNInb08l
zzGe57HsPj44lfSW6DHxH2rFlrGP5Z+hKXF9cUh+MdajWOn4MfaEcRF/lfWW
Txefyi/EehQrHP/cZHSsB/4a6yP/QkyM9zFbwR6KvunCL7ID7DCbyH4Ux+LZ
iMvE2/GOFDPUrZSvim8C/+eV6gqxavLazj0Z7z/2m7ysqMT2snT09PgGiHvA
fjdPxXo3tmTt2Fnz87GHjfVYY/Z1fKOws/IyoiLbF70/1n7k4mbxoGvliHd6
PHt5W3VnzDOslLEN68gumF+Mnm9szFqwH81zRq82tmWd2EXzC/GOMzZkzdgP
qeQhFDU2Z22kp1PJ2ihibBbfG/H+VnOPWMo+kh9VNzn2ZKyjuCeiBjvo+P+i
j6WSNRVr65FMcu8/N79c5In9n0m+ze5V94j8UXFWfkrdN+bXihtcb3OsWVbQ
WJXVYt/F+ox+Z6zCarIT5ueizxrrskbsq1TyzuuZSr794hvwvPwndafi+qJY
9F52huVUVz32gnOPmr8ZfTa+bdjt7Fvz32JvGm9l9dhnqaS/vGDcwraK66yh
s7HXWQ15XXVHYm2zX+UFRZH45mWfsH7xfol3MmuT3SfLpZL7Hvd/v/yN6LOs
gry6uuPmr0d/N5Zn1diX5sujlxvLsarsC/O3WWVjq7jvLI/8gOgR7zo2jTWX
vyYyrHSsP3bY/KXY/9FzY62yA9HPWNpYilVgh8yXsvPy60Up9iF7meUwlmDl
2Cfmy9iF+P2iNNvPlrBzcd9ESfZB9JDY1/K8sWbY22wuOyG/FN8z4h02j30X
vSbeDYYtbD47KU+JwmwrWxXvM2NN1oD9Yr6AfS/PiGvYtujf7EzksTbYHraQ
/RC9NNYl2x69hqWMJVl59qn5s+wr+VXiCraBzWZfRh6/ha1jz7Gv5YVyJH9L
xN8Uc9hxeQGRj61nb8U3iLEJa81S8tXx/cNqsYbsV/N16eS75ZtM8ndS/L30
jXievZMj+dtqQjrpLxez13ys/U3xDSZGqHst+p+6Hmpqs/FsDdvI+rFabBxb
zTawvtHDxUA2k81jHeSfieHxXNiLrJv8qBgWz48tZl2z35djU0nPjd77pnxW
nG+eM/qzurXRz/hs4w62l41Qc1D0ZpPYDHaPvGGcz7ax3WwYu5stYQfZETYp
3ifi4XhHsrmsvfwj0YdNZjNZK/nHoi+bwmax1vGeFYPYLDafdZTf5t94PPYi
W8N6ppP+ly+V9PDo5VvjO0pMYRvk29QNVFOXTWbro4YNinUhnotnyrawf8pn
xj2Up+PdxdakkvfWzFTSb6LvrI5vYjGVbZRvVzfYefXZdLaZ7WRD00n/+zG7
D0c/Xh/fvWKauk3yHeqGqLmdjWJvsLWsF6vDJrC1sX5Y//jWEI+xf7FF7IHY
k+nkN8Vve9Wxk/L/A+oG3aM=
           "]]},
         Annotation[#, "Charting`Private`Tag$293534#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrhWEcwPHX/X5LShH5A9jIwCgDk2RgIwMDJQOjQWw2/gJWErtic+e4
35Pktrhf4/OU4Xs+v8556v09vaesvbepJy6KomG9KsyPutRsfBTlcoGlXGcF
T1nLBzbym23MSIiibhaxWIPmao6ynhNs4RQ7Oc9+LvGe13zXtp7Dd1q2UIwr
3OEqd7nGvbAT97nBA27ykFvc1pE5xmPu8IS7POUez7jPc067xw0/dKGXcEeN
2W2LQ1xkH+fYwUk2c5x1HGEVKzVgLmQX09jKT89o4B1reMzycC+W8Ma5K74p
R0/hrArsmM18ZjGPmeEMM5jF9PAOmMZUpijVnBRmJjA5vGMm8VeJ+gm/6UvW
iGZ83P7/H/4AxG9K7g==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1000, 473, 689, 1108, 912, 691, 1109, 913, 692, 1110, 
       914, 693, 1111, 915, 694, 1112, 916, 695, 1113, 917, 696, 1114, 1006, 
       1210, 697, 1115, 918, 698, 1116, 919, 699, 1117, 920, 700, 1118, 921, 
       701, 1119, 922, 702, 1107, 1120, 923, 1001}], 
      Line3DBox[{704, 1007, 1211, 703, 488, 705, 1121, 924, 706, 1122, 925, 
       707, 1123, 926, 708, 1124, 927, 709, 1125, 928, 710, 1126, 1008, 1212, 
       711, 496, 712, 1127, 929, 713, 1128, 930, 714, 1129, 931, 715, 1130, 
       932, 716, 1131, 933, 717}], 
      Line3DBox[{719, 1009, 1213, 718, 1010, 1214, 720, 504, 721, 1132, 934, 
       722, 1133, 935, 723, 1134, 936, 724, 1135, 937, 725, 1136, 1011, 1215, 
       726, 1012, 1216, 727, 512, 728, 1137, 938, 729, 1138, 939, 730, 1139, 
       940, 731, 1140, 941, 732}], 
      Line3DBox[{734, 1013, 1217, 733, 1014, 1218, 735, 1015, 1219, 736, 520, 
       737, 1141, 942, 738, 1142, 943, 739, 1143, 944, 740, 1144, 1016, 1220, 
       741, 1017, 1221, 742, 1018, 1222, 743, 1145, 945, 744, 1146, 946, 745, 
       1147, 947, 746, 1148, 948, 747}], 
      Line3DBox[{749, 1019, 1223, 748, 1020, 1224, 750, 1021, 1225, 751, 1022,
        1226, 752, 536, 753, 1149, 949, 754, 1150, 950, 755, 1151, 1023, 1227,
        756, 1024, 1228, 757, 1025, 1229, 758, 1026, 1230, 759, 544, 760, 
       1152, 951, 761, 1153, 952, 762}], 
      Line3DBox[{764, 1027, 1231, 763, 1028, 1232, 765, 1029, 1233, 766, 1030,
        1234, 767, 1031, 1235, 768, 552, 769, 1154, 953, 770, 1155, 1032, 
       1236, 771, 1033, 1237, 772, 1034, 1238, 773, 1035, 1239, 774, 1036, 
       1240, 775, 1037, 1241, 776, 1156, 954, 777}], 
      Line3DBox[{779, 1038, 1242, 778, 1039, 1243, 780, 1040, 1244, 781, 1041,
        1245, 782, 1042, 1246, 783, 1043, 1247, 784, 568, 785, 1157, 1044, 
       1248, 786, 1045, 1249, 787, 1046, 1250, 788, 1047, 1251, 789, 1048, 
       1252, 790, 1049, 1253, 791, 1050, 1254, 792}], 
      Line3DBox[{796, 1158, 955, 794, 1159, 956, 798, 1160, 957, 800, 1161, 
       958, 802, 1162, 959, 804, 1163, 960, 806, 1164, 961, 808, 1165, 585, 
       810, 1166, 962, 812, 1167, 963, 814, 1168, 964, 816, 1169, 965, 818, 
       1170, 966, 820, 1171, 967, 822}], 
      Line3DBox[{821, 1268, 1063, 819, 1267, 1062, 817, 1266, 1061, 815, 1265,
        1060, 813, 1264, 1059, 811, 1263, 1058, 809, 1262, 584, 807, 1261, 
       1057, 805, 1260, 1056, 803, 1259, 1055, 801, 1258, 1054, 799, 1257, 
       1053, 797, 1256, 1052, 793, 1255, 1051, 795}], 
      Line3DBox[{824, 1064, 1269, 823, 593, 825, 1172, 968, 826, 1173, 969, 
       827, 1174, 970, 828, 1175, 971, 829, 1176, 972, 830, 1177, 1065, 1270, 
       831, 601, 832, 1178, 973, 833, 1179, 974, 834, 1180, 975, 835, 1181, 
       976, 836, 1182, 977, 837}], 
      Line3DBox[{839, 1066, 1271, 838, 1067, 1272, 840, 1068, 1273, 841, 1183,
        978, 842, 1184, 979, 843, 1185, 980, 844, 1186, 981, 845, 1187, 1069, 
       1274, 846, 1070, 1275, 847, 617, 848, 1188, 982, 849, 1189, 983, 850, 
       1190, 984, 851, 1191, 985, 852}], 
      Line3DBox[{854, 1071, 1276, 853, 1072, 1277, 855, 1073, 1278, 856, 1074,
        1279, 857, 1192, 986, 858, 1193, 987, 859, 1194, 988, 860, 1195, 1075,
        1280, 861, 1076, 1281, 862, 1077, 1282, 863, 633, 864, 1196, 989, 865,
        1197, 990, 866, 1198, 991, 867}], 
      Line3DBox[{869, 1078, 1283, 868, 1079, 1284, 870, 1080, 1285, 871, 1081,
        1286, 872, 641, 873, 1199, 992, 874, 1200, 993, 875, 1201, 1082, 1287,
        876, 1083, 1288, 877, 1084, 1289, 878, 1085, 1290, 879, 649, 880, 
       1202, 994, 881, 1203, 995, 882}], 
      Line3DBox[{884, 1086, 1291, 883, 1087, 1292, 885, 1088, 1293, 886, 1089,
        1294, 887, 1090, 1295, 888, 1204, 996, 889, 1205, 997, 890, 1206, 
       1091, 1296, 891, 1092, 1297, 892, 1093, 1298, 893, 1094, 1299, 894, 
       1095, 1300, 895, 665, 896, 1207, 998, 897}], 
      Line3DBox[{911, 1005, 685, 910, 1311, 1106, 909, 1310, 1105, 908, 1309, 
       1104, 907, 1308, 1103, 906, 1307, 1102, 905, 1306, 1101, 1209, 904, 
       999, 1208, 903, 1305, 1100, 902, 1304, 1099, 901, 1303, 1098, 900, 
       1302, 1097, 899, 1301, 1096, 898, 1312, 1003, 1002, 1004}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1108, 252, 488, 280, 1214, 503, 295, 1218, 518, 
       310, 1224, 533, 325, 1232, 548, 340, 1243, 563, 355, 1256, 578, 1159, 
       370, 593, 385, 1272, 608, 400, 1277, 623, 415, 1284, 638, 430, 1292, 
       653, 445, 1301, 668, 460}], 
      Line3DBox[{253, 475, 1109, 254, 489, 1121, 281, 504, 296, 1219, 519, 
       311, 1225, 534, 326, 1233, 549, 341, 1244, 564, 356, 1257, 579, 1160, 
       371, 594, 1172, 386, 1273, 609, 401, 1278, 624, 416, 1285, 639, 431, 
       1293, 654, 446, 1302, 669, 461}], 
      Line3DBox[{255, 476, 1110, 256, 490, 1122, 282, 505, 1132, 297, 520, 
       312, 1226, 535, 327, 1234, 550, 342, 1245, 565, 357, 1258, 580, 1161, 
       372, 595, 1173, 387, 610, 1183, 402, 1279, 625, 417, 1286, 640, 432, 
       1294, 655, 447, 1303, 670, 462}], 
      Line3DBox[{257, 477, 1111, 258, 491, 1123, 283, 506, 1133, 298, 521, 
       1141, 313, 536, 328, 1235, 551, 343, 1246, 566, 358, 1259, 581, 1162, 
       373, 596, 1174, 388, 611, 1184, 403, 626, 1192, 418, 641, 433, 1295, 
       656, 448, 1304, 671, 463}], 
      Line3DBox[{259, 478, 1112, 260, 492, 1124, 284, 507, 1134, 299, 522, 
       1142, 314, 537, 1149, 329, 552, 344, 1247, 567, 359, 1260, 582, 1163, 
       374, 597, 1175, 389, 612, 1185, 404, 627, 1193, 419, 642, 1199, 434, 
       657, 1204, 449, 1305, 672, 464}], 
      Line3DBox[{261, 479, 1113, 262, 493, 1125, 285, 508, 1135, 300, 523, 
       1143, 315, 538, 1150, 330, 553, 1154, 345, 568, 360, 1261, 583, 1164, 
       375, 598, 1176, 390, 613, 1186, 405, 628, 1194, 420, 643, 1200, 435, 
       658, 1205, 450, 673, 1208, 465}], 
      Line3DBox[{263, 480, 1114, 265, 494, 1126, 286, 509, 1136, 301, 524, 
       1144, 316, 539, 1151, 331, 554, 1155, 346, 569, 1157, 361, 584, 1165, 
       376, 599, 1177, 391, 614, 1187, 406, 629, 1195, 421, 644, 1201, 436, 
       659, 1206, 451, 674, 1209, 466}], 
      Line3DBox[{267, 482, 1115, 268, 496, 288, 1216, 511, 303, 1221, 526, 
       318, 1228, 541, 333, 1237, 556, 348, 1249, 571, 363, 1263, 586, 1166, 
       378, 601, 393, 1275, 616, 408, 1281, 631, 423, 1288, 646, 438, 1297, 
       661, 453, 1307, 676, 468}], 
      Line3DBox[{269, 483, 1116, 270, 497, 1127, 289, 512, 304, 1222, 527, 
       319, 1229, 542, 334, 1238, 557, 349, 1250, 572, 364, 1264, 587, 1167, 
       379, 602, 1178, 394, 617, 409, 1282, 632, 424, 1289, 647, 439, 1298, 
       662, 454, 1308, 677, 469}], 
      Line3DBox[{271, 484, 1117, 272, 498, 1128, 290, 513, 1137, 305, 528, 
       1145, 320, 1230, 543, 335, 1239, 558, 350, 1251, 573, 365, 1265, 588, 
       1168, 380, 603, 1179, 395, 618, 1188, 410, 633, 425, 1290, 648, 440, 
       1299, 663, 455, 1309, 678, 470}], 
      Line3DBox[{273, 485, 1118, 274, 499, 1129, 291, 514, 1138, 306, 529, 
       1146, 321, 544, 336, 1240, 559, 351, 1252, 574, 366, 1266, 589, 1169, 
       381, 604, 1180, 396, 619, 1189, 411, 634, 1196, 426, 649, 441, 1300, 
       664, 456, 1310, 679, 471}], 
      Line3DBox[{275, 486, 1119, 276, 500, 1130, 292, 515, 1139, 307, 530, 
       1147, 322, 545, 1152, 337, 1241, 560, 352, 1253, 575, 367, 1267, 590, 
       1170, 382, 605, 1181, 397, 620, 1190, 412, 635, 1197, 427, 650, 1202, 
       442, 665, 457, 1311, 680, 472}], 
      Line3DBox[{277, 682, 683, 1120, 278, 501, 1131, 293, 516, 1140, 308, 
       531, 1148, 323, 546, 1153, 338, 561, 1156, 353, 1254, 576, 368, 1268, 
       591, 1171, 383, 606, 1182, 398, 621, 1191, 413, 636, 1198, 428, 651, 
       1203, 443, 666, 1207, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 1312, 684, 444, 652, 1291, 429, 637, 1283, 414, 
       622, 1276, 399, 607, 1271, 384, 592, 1269, 369, 1158, 577, 1255, 354, 
       562, 1242, 339, 547, 1231, 324, 532, 1223, 309, 517, 1217, 294, 502, 
       1213, 279, 487, 1211, 250, 473, 681, 688}], 
      Line3DBox[{467, 675, 1306, 452, 660, 1296, 437, 645, 1287, 422, 630, 
       1280, 407, 615, 1274, 392, 600, 1270, 377, 585, 1262, 362, 570, 1248, 
       347, 555, 1236, 332, 540, 1227, 317, 525, 1220, 302, 510, 1215, 287, 
       495, 1212, 266, 481, 1210, 264}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
oxPXJOLF81VuKPtF4pyWe5O5iP3vugyUI7iiMfPUXPDd+RpZ7w2VY0sLHYNx
9BxpWSvHGPxUzHFdM8FnthlvAMEN9+zSbTnTGIu5Fzw9f5zkEd8z+CDvkPyr
zrlfSOzOfZLfXbNaK+LjHI4f85rov6d5XPbww86IYCQgl2irGX0RC8QWWtWQ
8UmbqpfMF4xGe8QNjHFaBLb1eP9ekPzd3v2yx5KkE5HpF4UB35hI3FkodoqF
2L/jakEx8XsU29q4m+wD7NUgBf7f8tMjqXIgA90wVpwXJhmNr0cMLQ0i8cfB
3+rq6nM5KLU0wJ/jcTR2ypm+xJ747Y39ladPf83BOimB/i/XnsbP2UdDnIjf
ythFP3ivmInPvjAQ2zzki3dnhfNRPUao4nbeUONU/LNE6vyGx374lVy43nJa
d702b+IenUR88/OGfqWMAHxfx6vJjuD51upp9BLFaLx9Y9EnOfkgnCm3Wk6Z
rDdAQ+GwTlIwZp4/ZzYMBhN8tL4uySW44djcCTYKQyE4v1yIV5Xkxe0lXZBH
7/2rzrlZZnqM6hNPtO/m7u1K785g5b51matHu9H8+P33668How/+5gHv1M9h
xdPblFaQ8Rn+/fjg7mj0pUkUlcX6Y6na6F5/Yo/x/JHVv/QSke3JQuO8mgDs
InK03prY72AawXHBMBVtNGURmdJwAV8UchNtJXlKTEEkH4n7SLS6483hZ0GY
Lz0B4r+84nQ274c5KHrio5vPM4NxVf+xgDrityu+H+LwZs3FCQvO4H43LRxh
o3uR1otmVdvMWK2XiV3ORlU9+X0IC/wSt+4mOI+GvfPsckzFhaJ6FU0LrPHT
VeX7ywjOy/Ue1VuaJ+JT09nPvKk4judu1+EVJX4yURlvZTWJxnOebT03gdsZ
mytOlVxM62+BMypmlARj3+ibdxUN3PF10aDf/rQuIfbbiuCGmef1C5MUD9K6
0CxbqHOm/lXnPFngl+n+0hNtKtT9YGm2G5dbHcvPI9+r/eI5EFERjIoXePP0
GJjgoOdB0mVkflupO5XVFtHI7MiPDeoGNpi979qT9VTPeUFmR7JFIjobrqoS
N8kec7zbdEuE2O94VT5MziEVvRF49ESnwAlfWqt1MY2sV/Ds7Y0uWplopWSC
+5MFblhhy6SQSoLPOqPgZMJv0LGbhRr0PFfTZgGeI6p+gX6PlV0jgQcdGh0O
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
KQHfeKKleYHqczdXpgJ/EBD/DHxjGYuGEtVHj30mftUgq0z5xrnFyqBPz42J
g/GDVnagf7WRmQjzFxrfhPnT0m2Ab1i7bLhH7ZlW/xbscQkrAr5Rd8LzOrX/
aEwa2O+eZXqW8o1rDtqtdL2iZWO6uM+9v0AvtSd4szLFTVWVBXBrm30N9EZr
F2nOpLiFvTMD3EZm3wT+LHApHO6fLRm/d8bcT2PuqzH31LZVuwN/vhx9mZ/q
3WwHo4FPMvdzmPs6zD0d5j4Jc7+EuVfy+K0c8OcjYsklVG97w3Uf8FuXvRuG
KH+uOHp8L9U7zyhrAz6cunjkDuXP7DWXvlG9+djnbsT+SgT00Cu5bUEfPa9z
TBfdkLAO9Md3vRNg/tf+OjA/ozdl9KeM7pTRRzJ6SUYnOSPPyYPyZ0PVYnpf
DeVciIH15oQHg/7MUtP9OcXtZnoY4LZlLO9A2mN5B2LyDtfbv+fSfPDn8cd7
qU7tpHUK5DXjOirM6KoYPdVyu3K4L7dAu3su1Q9uP/sbdINHmpvhvpOntU0l
1W9e2+UH+RRzP+fPfZ3xezqsq6JovoZDTLhuUv1yQYQ35GvKnjFw/0F92Qlx
qh+f3mIJ+d325eer1g/Nlk/84fCN6vcbNJZCPhjZ6vea5oObTx2H8XKWFjA+
Y1MQ6L89vVjg/opZ0EmYXyrzAuiV5/N2OVJ7dO4VgD2M3vSP/nRcd+qhUQD5
oNyKzpl0vXK232C9Twsei9N80CvnqgXF7biyzz9xQ3/j9kzjHNQ3gkPXge5v
uqkE5Olvn355Rusb6w2Kh6hOTUZ0z1ienr0V6hv7Ai3gfl5/+DHI9x9OvAj3
x/KrNltTPSyrsjjUBwJWVE6j9Y0sc4tRqkeefrcX6gnRUf03aX3j++x6qpdH
L+aHQf0hZ1QI6hsRd/k0qB4/YsMFqFcw9yhyxuobiKlvfMqYDfWNK7qLQb/f
0T82PqijC+ob7DYVoDf/te8MzH+CPxL04hN9dbmyiT2B+9+APdpsIbQ+g+Sv
bgM979BxCbD/rowY6HEtlu4WouvNXWI4dg/R0uomrW+YLeR7SHFbIrIQcJPx
7aG4oQU1GPR9Zzn3Am41Y/UlnD5WX0JMfYm5x8jca2TuM1rJD3vT+pv/2o2g
IzaXdID6FXvpl1u0/nZR2eEd1XEvuqUE9S4nI2Wov21pdntGdfQhBhegPmYV
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
DFVz
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.43907057974912933`, 0.439070576991095}, {-0.439070576992762,
    0.43907057974746233`}, {0.13124887022867113`, 0.15915494309189535`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766116071577818*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"04e8ed5a-af12-4ab0-b384-c5aea2f55191"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "-", 
        SuperscriptBox["y", "2"]}], ")"}]}]], 
    RowBox[{"2", " ", "\[Pi]"}]], ",", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "3"}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.766116079301682*^9, 3.766116090919469*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"bca2b5d5-b32d-4989-b112-da6df0e5b4ce"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
fyMe5voWgS09SOtau+ON3Hy4HTjYVlDnDjHbHe/IPplH3YNK++ctooFdVlXX
/3MtLLDedUmtXkR5DbY+Sp9DoTSDcbXrxSRky7oYdXj9DLow1D41/ykJFHy+
mCW9+oWe+vPolLQvoTL6p/pFhcGwpkvEWVCiDo5t6fnQd3cYrbna/encjmw4
eGgVvebZImjVIEmrLo4jG4WDJbwD6bBJRdizgLMY7mU3bvT6s290PJdYUsga
BN3mpPTtLp0gY+d2lBxDIJVxrTncausLnnuu9deeHoXYEGFNESMC6dlVxRD5
1+4ge2pRrvdnD+yN0zEZqSAjNdXVrsuXwyF/X9Vdx6s5kPB7mnZBqx8tLG3Z
vq85HzbFnXNrZ8pFIlYy3+7pj6Nv/YenG4YyoDSePmLx+whki4SXdriMoZtq
TvqXzydC2/rrbLPRzfAm/n7bzfI59HhdYJFQxStQ+3Quf2ZbN4RftbBYNzqJ
ChjXOoZIJwLXWAHtTbnfwGJe+b0iZRKdqrtokySRAv1GT9glR0aAjpHTV6Zg
GtU1ru3zZ46G65sNhOT8puE788XZ82NTqNVOVmO3TzAEbTulVH6wG5b32KRv
yRxBvLPMAXah6dBSlnvImmEMbLJaFx6t/o0O7L626apCJgRK+ymIqQxD0mFz
A/WiHlSl//zd9fx0uFkbEKMxPw/BfdPEycButDeFNeDsnzpQanfq7dYzrXCe
n2uqurQescgpWnE5k4BpbwNLvEAVLAubfyC4tiP508kN2hEkkJB1IbUca4ey
J860leHdyOZ5n67lQi449bdIlnhPQeCXzYFxwt3I01fY06rtDZhNSD2P+k6G
3EOPx1bdHEOWCqcePhZ6Bok3DrHd2NUHW7gTZcz7WtCBgtcXg+/kQrcdiS9t
ahaaPzJckD35E60WuE1KmYyDB5n1HDRpNMStoZMW4dpj6MMs89FL5x1hp+LB
p2+1p6BOOoZ098ko0izOTqd99AqeXWA7X7R/Ct7ZFegbRzYgr77AlraWt9Bt
/K6mhXsZohymGxJZJ9CN+PmE+OMekGFprWN3n4YoQBfGv855BuVvWL/KWssS
COe/ufsWLcMp9+aez4ILSPTXdMaWCxaQmxt7Tev1HJROJb7fS1xA5zdsXt81
/RB8km4cbYyiI/6MtmXVTJxG4yNyFdvcb8G6+diT31ctgGvW7IT4n3Wba1WW
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
XAbTAS/E2n4vQOwRetsrxhGQvSB6cFNEJfi/eSfjNz8Nu4/w2kZsSILIq6Iv
Sn63QKGwwu9dB8mgplhcGPcrGvx2dH5g8xwAFFTTJvSLDEYvM1LIAS8gYFba
eVm4F2K4OfwrcpbgebSKi7fuE4jIYEiaixgH01w/RYcT0SjjBWfFcnIGuF7W
kt5MNwGpp5hItjn14Pkw05jfJw1u6hz2IP2YABN1mr0edkPQu4+9SCA/HhKI
R8XFgoehTTqkIoalGF5fih4XsswBK9ndByqZf6KL/FUywuLp8HOj7fPay0VQ
M3Fy6KBCKopZX36L5vMkrF5j8brFMRVG+4+Wnrr6Bfllx+TcG+kDnvYDXD3Z
+RCrPv/zkPAsvMveefYJXSPsq3Fez534Gk72tzIfGpiGda5+8LCkG645M/46
khQHgoub37mfGQbiRd5KVrpuaOmjI+X5ZICLYrCNyZVBuE8glhxnGgP/M8UA
J97BvV/bn/twt0AGd/73izM9YM1y68uPq3lQzDc9cDd7HHbldDA77poEFTqb
N/Vh0bD1ZlZHg1UPTOuJrD+yaQBOb47NzPyYCbqBLce1podgz8i2iE8+06BU
s8Q4YP0KckxfcNS+b0Dn04+qHpHsgmTpFuOfRR+AWXjopZBhGrKPDlQ4sL0V
6tanCeZ1FcIGozuvtbf8hCfbb12VsKuD5PKPF+sZPkKK6Nrh7bqlEL9+Xvo5
dMGpivKLgmtIkKnfemKcthKE2evNRS/nwCbyCFdFbBGIHu+MR6JtsKosyDhx
TSuwhaxVq+dGMDv17bu96SuYTu+4rvl4ACpnbo3s5smHEZDW0HnSgNL72p+f
mB0BQ5XyI0teWWActNxzxrsFVu/eLlZ/6Y9uA8ZqpeszwM3+N5NNfSvs5R00
f7qvFHaF1pUjo8KV/dKf/d85j07Gk4PoZF3jNrrDLpg/zTnfPtU9ivLnAwZ5
J+1X+CyI0qX93K5FhoqDmtMaB7wxz64TDReimYb8G4WrYE3QCl9C0+R94XHj
U2hN8jztHQ03zAOaOErqb5DRkSXPix+CKP57URB7aV1s4xfgvKBzonn6A+ZZ
n993qDvlwy3N4pQrhwowr34jGmEUTUP0cUbie71cMU+abImiiVuGi9EG+lOR
ASucgZSmf2Pz2OoJFPnqQAfT45uY17xhm8+dGkJcZmd+sQjeofQLRQ5sfiTv
N4eqj8w79OT4YN6RV1gu0f/n37/rj/hq++F2fxWyblAKpSdyrzleQq43w9ys
8IB+2CN6Yqlckc7lEHPcrspqVvOPA5PI7XQAnTeDHsUe5qVU2lJUGEiC4Ruv
TDIbY37+vMLDhEp60qFrehs/FlP8Ewi+x9y+J8UzkhoaAhmKm25jntTAeY1B
kJ5keiqTd4+rHWV8iQ2l528rKc6gPbtVHUvkzDFPH1P/kHV4HL1nd5s1OP4A
c3emjdumfOfR6G1NHpNEA8yjaJ8RK+Vm0VkVKdMqK2p/J33NBNr2U9+VKFxZ
gXVNETsD6ZReIJenvinOh12rHqvdujCKlm7RSH1ZH0DNk0P+xx+uGUOT7xXf
Hdjkj/U/7sPk8cVpHNXMxF/hlniBuUPUQYPIwTH0VQxUzZYovA5NnhEwplFf
Rns/9vMkvnyGua67Pfk+0JLalbl4A1ZT8nMculNjzib/2Y9LpC9G0zKYY54+
P6D9mpeO6PM7nXEvqyXu173jcUmvW+lI/dcc7hHk72GuEJ+SwbOelrT2RmRp
Q8NDPF8sV97RvP+jzyw4/vO+RsmTjm9Gw7uZm5CGK6sEc6oV5gL6114uCVej
GetzFt9MLLFu628v3H8+OAP9lVObHD+4YP6J4w1Z60/dS0YbzvXvccV+fnBd
VNvzoRtJ0TQ3fDpoivX0Sj1H8vtVgYhaMWhsSwLmp8zeMV6aSwDHjS4X5mQT
sB/7pxXWuwO7UZOfb6yXFMUPLSntuaZv4xcyXLpXdX39GyPMGYUlPCojl/95
t6UllTx+JW9I6oFMJfe+5D5qXfomYSxIf6ofju9KOvZaCXMi818/aHn/f/RE
S9cPXnhlSCDRupzutXK0pYwjGr9+qPrVYxrSjn3sMcUjDti+SzXIRdCIliRv
f5aW1fQutl9102BM8wsNiSvjfav2B3ucP1kFPMHdC/REgcrGey8MLfC8o7wX
qK/cq1Psc9ilhBLj6In22Q2361Ktsb3bir3pf+xnkaKcbMSby+1g1O9rb34x
DvMzWkx89/m64aEKE+cJ41hcH3o4T2c9XNuGTg28cOB2zcW8uIZj1li4B3X5
p1rEub3H+eCkLbVVwp2W2JlDYD6uoYX5sK1K6HQu9R2f0m5mgGA0/5V5tN6F
yLq22hPr03PyasvdbALpWs60+4U6F2wfM5lyjkxLIJmE9XfJfaWuI2+OlXZ8
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
PuyuSIBXoSmlzGLU8/Llt3eALNSN5LcIDZRwZGNu91mxe0daK1SR2elGv+F7
EvRxkOlD0nAPSHgllG7rzcLx59bS0CtGdcDOzs53yrzUcVfN+9o59W0UqlQZ
lzZFxGOeeLnDymvvJHSaZKs+/fkKx0lzafXNtuo/9fjlOF8n6TFuN6VdchgY
exHtu7ydRifeY75D04fBcPEnSqwRqcvvy8c8/3KRbfGaSZTMoNT7oygJ5xV/
tjnbsTMjKE+g57nq+feYa67iMNmh3ouSX8q4Rp7Ix/E8LNsS+uznKAhyLDLO
Wvtjzkojx9WtOQRbT6WTXuZQz5XGX77tl3Ibhyt7C4tfPKeeswri16yvspgA
SaMHWS63KfdsDKSReKasx7/7QFjBjbR75A7Wh72pSj2TuIQSXrjuTCj2xvz6
UHVXNt8COpV8kszP8QT3d3RY57ECDQ2pUZScZFPgiTnNu52fFnWW0epkLbGB
qgCcn4MibNMbvOeR8/TUzUf3ozEXSTFozf5CRjLSPLUqEIPbDeYdrx4pHkUT
LzsiesTeYPv97Zlvo+emkCBTlkHZh3eYR8nM7dc+PYP8arkjd/Al4XiYzdrM
erlH0fSN900j59Kw/jSJnmlPx5dQ3ZN+BiPtYMwvPsvjbFKeQi/En23OP/4O
c+Yao6T+LxPoHc/dx5xOqZjXMdp9OJU8h5xCb1hNlsfgeEp3b/FOiB5HJ3v6
2UNcM7B9r5x56FHTbjR8MSAh/f4HzGO0Ju+O3WhGxVv8OwvcKPO6Dqx6bdrN
vi4i2VlLo+6KUMxTK4YS5y0nEVv4lmmj/BTMTXZo9a9Vn0LGn7fb79pGiX8c
kk8kNK1znEb9yi3VIdz4vAkXHAJsEJDRhjvhG9fuwTpAvJ/GiQWfYXT9kVfZ
I7ZszPVYM+kzdYdR9kd35iwxPH/B+CCvjXgQgaT2+IxdjCPOH7gT365/3JOW
dOAhPbeXwX3My0S+nwr0JJB2tnLs+vn1EfZz84irSMDZKWTkLy/jZv8Gc40E
wtjFHDKqYXA0uGsdjuPZf6XSiZC6iDR/Se34vB+/L8B5Gbk+7U1zaJPhcxoQ
odbVF0FOoyUuIyj1i8qYwwS1X56nley95jpQ+NOhbkFGhPmBV/l1vWuHUbG0
EI2cEcV+Fu48qF9z5NYkYm6T9EjaEIz55f7x1rGj00j/mDStaRF1n3zlQEn5
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
2jzrKsxBnPDfLawVa+leAv8PEaFw/Q==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
TWZx8v9SKObvkKwh6pzxf3TBkDE=
           "]], Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt0L8vBFEUxfFnzVAgQaHXyBYKCh0i8R+IWAnbSNbSrEanWCLYQrObUIlE
u1SiENEpdAo/oqFXiUgUKj4vM8U379xzz73vzQyvbMzVCiGEAXRhsJPGUBJC
Q2O5I4RR9a96hq7KTDmn0eCtoYoHrMt/45O+xp9MO86YP8cFmvxF3i2u7NqU
r6QhdGOPN8+rOQ9wmmQzcbaNRDbFDb9fPSYzjt0ke3N8ey/dgz5syb7r7/OL
KNt9yC+664t/zCuk2Tfe6ZWdS2jJlPRa9DZ20MQZ/x6z9j6qnzBJv8p+8N/o
H9TyfxL/zYTeqtwCSqjgiF/HSL473lHHSfTlX/Ld8Y5nXPL/AQ8tM7I=
           "]]},
         Annotation[#, "Charting`Private`Tag$294152#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TkvRGEUgOFjG/vYt7Fey9hanYJEQT3JVFQUOiMShR9gKQSRkahQS9RC
KXoqQauT+AkSz00U577vOd8558u9N1kvFbYqImJTZKsiejGPPbiKa6Kb32AX
JtiJl9iBP4YveDs/qY4oyNt4mW/wVn5cGdGCb2qnPMv3sRm/9DSl+7ARP7EB
37EeD/DK3CHWyWvFNz93Z4af8SKv4R/6yvZCzHooRw6VYkmSvuciLogZPuds
Gn/lU7itMaM2me7FooE8f+U7zib4ito43qk98zH+hKPpN8IEX3AEd80M47x8
CB/x1twDDsoHxD0vub+f7/FlnuPX+o7kff//5Q9+RiWS
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{782, 1270, 1153, 787, 1292, 855, 1185, 1186, 1328, 1187, 
       1160, 1273, 794, 878, 944, 863, 1188, 1346, 972, 1347, 962, 961, 1221, 
       1348, 975, 987, 990, 1359, 985, 986, 1361, 996, 995, 997, 1360, 1224, 
       999, 1225, 1371, 1000, 1363, 994, 993, 1227, 1369, 1022, 1014, 791, 
       1157, 1406, 1031, 1020, 1368, 1021}], 
      Line3DBox[{801, 800, 967, 1404, 809, 1279, 1167, 929, 1322, 1206, 813, 
       1171, 1318, 921, 955, 1426, 1249, 1091, 1428, 957, 956, 1146, 1009, 
       1364, 1228, 1109, 1460, 1141, 1140, 1148, 1456, 1267, 1145, 1142, 1451,
        1260, 1117, 1265, 1449, 1130, 1131, 1448, 1066, 1399, 1242, 865, 1293,
        1179, 843, 1395, 1062, 1051, 1050}], 
      Line3DBox[{806, 1165, 1276, 803, 1177, 1284, 837, 1191, 1296, 874, 872, 
       1295, 871, 939, 938, 1332, 945, 1339, 1214, 974, 963, 1216, 1350, 948, 
       1335, 949, 950, 992, 1358, 991, 1005, 1366, 1002, 1001, 1229, 1370, 
       1006, 1226, 1367, 1015, 1080, 1408, 1079, 1407, 1178, 841, 1074, 1405, 
       1075, 1076}], 
      Line3DBox[{831, 834, 897, 1309, 896, 1077, 1410, 1084, 1090, 1416, 1017,
        1016, 1083, 1013, 1012, 1372, 1019, 1018, 1443, 1114, 1113, 1108, 
       1432, 1003, 1004, 1010, 1365, 1011, 1107, 1431, 1106, 1430, 1254, 960, 
       1340, 1215, 815, 814, 1331, 1210, 940, 1208, 1327, 934, 937, 1330, 
       1209, 877, 1297, 1192, 873, 798, 1275, 799, 859}], 
      Line3DBox[{835, 836, 913, 1314, 1203, 1069, 1401, 1055, 1056, 1402, 
       1063, 1064, 1068, 1129, 1444, 1262, 1128, 1256, 1434, 1257, 1133, 1458,
        1150, 1147, 1455, 1261, 1120, 1266, 1454, 1137, 1135, 1446, 1255, 
       1112, 1105, 1429, 1253, 951, 1336, 1212, 954, 953, 1337, 952, 1211, 
       1333, 946, 931, 932, 1325, 875, 876, 1324, 930, 927, 928}], 
      Line3DBox[{839, 1285, 840, 842, 1300, 826, 820, 819, 1299, 821, 1173, 
       1218, 1345, 827, 828, 1344, 969, 890, 1307, 891, 970, 1200, 1306, 889, 
       978, 885, 1304, 883, 979, 1355, 1202, 895, 1356, 989, 1029, 1377, 1027,
        1028, 1379, 894, 810, 1280, 1168}], 
      Line3DBox[{853, 1290, 854, 1043, 905, 1311, 906, 1237, 1393, 1057, 1082,
        1247, 1409, 1081, 1038, 1386, 1236, 1126, 1442, 1037, 1035, 1049, 
       1437, 1093, 1092, 1094, 1419, 1250, 1088, 1089, 1421, 912, 911, 1411, 
       1248, 1070, 1048, 1389, 869, 867, 1316, 918, 808, 807, 1278, 1166}], 
      Line3DBox[{860, 858, 870, 1323, 1193, 1298, 861, 862, 935, 1329, 936, 
       805, 1277, 804, 864, 1189, 1424, 1103, 1425, 1152, 781, 941, 1435, 
       1115, 1111, 1433, 1110, 1116, 1259, 1457, 1149, 1118, 1436, 1119, 1445,
        1134, 1127, 1230, 1373, 1023, 1007, 1008, 1414, 1246, 1053, 1054, 
       1078, 1415, 1052, 1240, 1391, 838, 833, 832}], 
      Line3DBox[{879, 1301, 1176, 825, 811, 1281, 1169, 1381, 1233, 797, 1163,
        1343, 968, 981, 1161, 1274, 795, 893, 1198, 1305, 886, 892, 884, 882, 
       1352, 888, 1199, 1354, 988, 1222, 1383, 1034, 1384, 1174, 822, 1032, 
       1378, 1232}], 
      Line3DBox[{914, 1315, 856, 857, 1313, 904, 901, 900, 1312, 846, 845, 
       850, 1288, 849, 903, 1310, 902, 1036, 908, 907, 1387, 1045, 1095, 1420,
        1046, 785, 1155, 1417, 923, 924, 1239, 1418, 1087, 1413, 1071, 1047, 
       909, 910, 1321, 816, 1172}], 
      Line3DBox[{917, 916, 1190, 1294, 802, 1164, 1320, 1205, 866, 868, 1319, 
       922, 1086, 1073, 1403, 1072, 1100, 1422, 1101, 1252, 1423, 1251, 1096, 
       1097, 1438, 1258, 1098, 1099, 1440, 1040, 1039, 1441, 1125, 1143, 1453,
        1132, 778, 1268, 779, 1394, 1243, 915, 1204, 1392, 1184, 852, 1241}], 
      Line3DBox[{920, 1317, 919, 966, 1217, 1342, 965, 925, 926, 959, 1341, 
       964, 1085, 1412, 958, 1338, 1213, 1102, 1104, 1427, 943, 942, 1136, 
       1447, 1122, 1121, 1264, 1459, 1263, 1124, 1439, 1123, 1139, 1452, 1144,
        1042, 1041, 1450, 1138, 1244, 1398, 1061, 1060, 1397, 1065, 1396, 
       1058, 1059, 1245, 1400, 1067}], 
      Line3DBox[{1030, 1025, 1375, 1158, 792, 1374, 1024, 1026, 1231, 1376, 
       998, 984, 1353, 983, 1223, 1357, 898, 899, 980, 1362, 982, 973, 1220, 
       1351, 1219, 971, 977, 1349, 976, 947, 1334, 1207, 933, 829, 1283, 830, 
       1326, 1154, 783, 780, 1269, 1151, 1180, 1291, 848, 1183}], 
      Line3DBox[{1182, 1287, 847, 1162, 796, 1181, 1286, 844, 1234, 1385, 
       1235, 851, 1289, 1170, 1282, 812, 786, 784, 1044, 1388, 818, 817, 1390,
        1238}], 
      Line3DBox[{1194, 1195, 1380, 793, 1159, 1302, 880, 1033, 1201, 1308, 
       887, 1156, 1272, 790, 1196, 1303, 1175, 789, 1271, 788, 823, 824, 1382,
        881, 1197}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{315, 316, 1302, 445, 325, 326, 1343, 553, 554, 1344, 371, 
       372, 508, 1334, 524, 543, 1347, 560, 541, 1339, 534, 509, 510, 1340, 
       542, 720, 1425, 297, 296, 1429, 724, 535, 536, 1428, 723, 1427, 722, 
       721, 716, 1422, 703, 702, 1421, 689, 299, 298, 1417, 305, 304, 643, 
       1388, 645}], 
      Line3DBox[{328, 327, 631, 1384, 359, 360, 621, 1377, 623, 622, 1376, 
       586, 585, 1363, 591, 595, 1367, 607, 606, 1372, 612, 613, 1373, 617, 
       754, 1444, 422, 421, 763, 1448, 755, 680, 1398, 679, 756, 293, 1268, 
       292, 668, 1393, 641, 404, 405, 1313, 403, 365, 366, 391}], 
      Line3DBox[{338, 1278, 337, 424, 1294, 425, 549, 548, 1342, 340, 1279, 
       339, 506, 1325, 505, 431, 430, 1298, 406, 407, 437, 1297, 436, 395, 
       376, 1284, 290, 291, 1292, 402, 384, 383, 1291, 378, 1285, 377}], 
      Line3DBox[{341, 1280, 313, 314, 1375, 311, 312, 1406, 665, 666, 693, 
       1407, 379, 380, 691, 1410, 697, 1415, 692, 663, 664, 683, 1401, 667, 
       423, 1293, 381, 382, 671, 1396, 491, 492, 1392, 399, 398, 1290, 400}], 
      Line3DBox[{355, 354, 1321, 495, 1316, 496, 1320, 331, 332, 540, 1341, 
       546, 547, 503, 1322, 502, 521, 1333, 522, 533, 512, 1329, 513, 1330, 
       514, 515, 433, 1296, 434, 317, 318, 414, 1328, 412, 401, 385, 294, 
       1269, 295, 1300, 367, 368, 375, 1301, 439}], 
      Line3DBox[{392, 306, 300, 1270, 301, 1276, 333, 336, 329, 1275, 330, 
       428, 1323, 438, 429, 432, 435, 1324, 504, 1404, 550, 498, 1317, 497, 
       494, 493}], 
      Line3DBox[{408, 409, 397, 1289, 347, 349, 1387, 644, 710, 711, 1437, 
       734, 735, 1438, 748, 759, 1459, 761, 762, 1460, 768, 767, 772, 1454, 
       773, 774, 730, 1433, 728, 1431, 727, 527, 526, 1335, 525, 582, 1359, 
       565, 558, 559, 1351, 556, 555, 458, 1306, 459, 455, 1305, 448, 447, 
       310, 1272, 309, 463}], 
      Line3DBox[{416, 415, 446, 1303, 370, 369, 1352, 453, 1304, 454, 568, 
       580, 581, 1362, 570, 569, 1361, 573, 574, 584, 1358, 583, 602, 1365, 
       603, 608, 738, 1457, 743, 742, 1455, 747, 746, 776, 1456, 775, 750, 
       1439, 749, 751, 1440, 715, 714, 1442, 635, 477, 1310, 476, 633, 1385, 
       634, 632, 475, 474}], 
      Line3DBox[{441, 440, 444, 344, 1281, 342, 358, 1299, 356, 302, 303, 
       1326, 507, 413, 319, 1273, 320, 427, 1295, 426, 511, 1327, 334, 1277, 
       335, 523, 530, 1337, 531, 350, 351, 1318, 499, 532, 1412, 698, 501, 
       1319, 500, 700, 653, 1389, 654, 686, 701, 1413, 687, 651, 652}], 
      Line3DBox[{450, 449, 307, 1271, 308, 456, 457, 1354, 575, 1355, 468, 
       466, 579, 1357, 578, 587, 1360, 588, 592, 1366, 353, 352, 609, 1432, 
       593, 594, 741, 1436, 599, 598, 777, 1458, 769, 1451, 740, 739, 766, 
       1452, 771, 752, 1441, 638, 636, 1386, 637, 480, 394, 1288, 393, 387, 
       1286, 386, 473, 472}], 
      Line3DBox[{452, 451, 1382, 362, 361, 576, 1383, 577, 1356, 469, 467, 
       572, 1353, 571, 590, 1371, 605, 604, 1370, 589, 488, 487, 1443, 737, 
       736, 1445, 757, 732, 1434, 733, 676, 675, 1449, 764, 765, 1450, 639, 
       640, 1453, 770, 753, 696, 1409, 481, 1312, 388, 324, 323, 389, 1287, 
       390}], Line3DBox[{483, 482, 396, 346, 1282, 348, 648, 1420, 650, 649, 
       712, 1419, 713, 718, 1423, 717, 744, 1447, 745, 601, 1364, 600, 729, 
       760, 758, 1446, 731, 519, 518, 1435, 726, 725, 1430, 567, 566, 1350, 
       545, 544, 1348, 563, 562, 1349, 564, 461, 1307, 460, 561, 321, 1274, 
       322, 630, 462, 1308, 363, 364, 629}], 
      Line3DBox[{626, 1378, 464, 465, 1379, 620, 619, 1374, 618, 596, 597, 
       1369, 616, 695, 1408, 694, 706, 707, 1416, 610, 611, 1414, 685, 684, 
       1402, 677, 678, 1399, 662, 661, 1397, 672, 670, 669, 1394, 478, 1311, 
       479, 642, 489, 1315, 490}], 
      Line3DBox[{655, 1390, 646, 647, 656, 1418, 704, 705, 699, 1411, 484, 
       485, 1403, 688, 539, 1338, 538, 709, 708, 1426, 537, 528, 1336, 529, 
       719, 1424, 420, 419, 1331, 517, 516, 1332, 520, 557, 1346, 418, 417, 
       374, 1283, 373, 552, 1345, 551, 357, 343, 345, 1381, 628, 627, 1380, 
       443, 442}], 
      Line3DBox[{660, 659, 681, 1400, 682, 673, 1395, 674, 486, 1314, 410, 
       411, 1391, 658, 657, 471, 1309, 470, 690, 1405, 614, 1368, 615, 625, 
       624}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJxcvHc81+/3P65CZRaioWxSRkKbE1FICiUJyZ4lo+y99957r7JX0omXUmko
JIqErIbRklG/65nX+/O7fV/906377bqd65z7OdcZ1+N6xmN4VcNkNRUVVQ0N
FdUa8veovO6epkZHoFr543WHdtFz+M80xK9vdE1zdYQFJb8f18eVQYVmBS9+
dzEjt9UBapKfhJikX4ClXwt/8fqrz/XmYuxBOsp6r0q/Ibh9WsGDr6y3Vv96
DWRcDXs3upjD6tkV3NtfT461/yrkLE0qDYXbANP4Ct5VSpekx2EFM4bZolpL
tiA1vYJ/vVF5tKnRBN6NaLckd9qB8ecVnPus13IdXoIL+0ZoFA86gPbPFZwz
QWGzuZYmGPTXOyuLOcKPVSv609Rd0mNeOAgcsXu+ipY4gt+aFXy67dIpguOh
f/GGf/EKR4UDRA6K9K7I4V5ekf/r69GPZF98MmK8jrJvyPcVPH+r7jGiJ2qm
0LVR9JT9sILrHsmpIHZhkwudBMUuga4VXHp3tw7hARNEWs5QeLjxYAV/L5fv
R3jD32dWeOtoXMFpMwXcCM94/haPIIVn7+IV/N5YQgvxC3ZeeXKF4hfhvBXc
ZN3eAuJHzP/k+9ePh2P/3ffRRV3id/yf3+UiV3Dj/3c9/m99za+1bRT5/+g+
cSHy0SZ1BR+MueNB0Uem+oI40Qeb01fwgNMvvSn6G6/qHyL640jDCn7wiJM5
xV4tRlUzYi+y/qtnGLtgMYWf96KcQPjB1KYVXO5gpSqFz0+V+wYJn3gxewVf
OzX2hcL/ZNi4EOEfF/+VIyC94q+jNcw5xF+oHrOC07Vd+sxE/Lsr+hSnWIkj
Jsev4J0Wf/0Oq3lz/+LO/9obfW4lfmzrV+QIJa7g8fOef+NNUtpiF2Vfmn95
mIuhVaHEJ/3u7gGKnv+zS+cQZzIlnhn2silS7PK9s4JfMlyJ/ywnvqsUHlr+
WcEXLVbOiyjn+mEKb4MTK7hMk+3f87V7ZIXn/50LheGV86hd/uQ6xS9L/8Zn
wv97fvF/5/fWj4ANRs8qcMOVxdmfZrk4gpwtNhPTsKOwxTbscCqqbJQQPWbg
jxwJv38VLk2DUef1MuOSBNzHms3tYZOEPBlex4oXpyGCKSHeky8QaNGNynVP
Nc67cvyVE/ZZOY+uNwuMuD4KLrlWgusk11/cluGZ9yHtW7idY2/0t71FUMaz
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
D2VmU/k=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{358.0872847769284, 239.89637780287921`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-3., 3.}, {-2.9916113915435405`, 2.9916113915435405`}, {0., 
   0.1567508461291688}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.3157534737787072, -3.117526978034378, 1.2772334496968467`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.766116091722908*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"45fb538c-d170-4316-8a3c-238d3095a319"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grad", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "-", 
        SuperscriptBox["y", "2"]}], ")"}]}]], 
    RowBox[{"2", " ", "\[Pi]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766116176317477*^9, 3.76611618367428*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"734291c4-8a66-49cd-a966-65460e9f1050"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], " ", "x"}], 
     RowBox[{"2", " ", "\[Pi]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], " ", "y"}], 
     RowBox[{"2", " ", "\[Pi]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766116184007238*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"2a110d30-1e64-431b-87a4-633f463526b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StreamPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["x", "2"]}], "-", 
            SuperscriptBox["y", "2"]}], ")"}]}]], " ", "x"}], 
       RowBox[{"2", " ", "\[Pi]"}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["x", "2"]}], "-", 
            SuperscriptBox["y", "2"]}], ")"}]}]], " ", "y"}], 
       RowBox[{"2", " ", "\[Pi]"}]]}]}], "}"}], ",", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
    RowBox[{"Disk", "[", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766116193549407*^9, 3.76611620493855*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"8d7d03b8-8fb7-4888-b66e-b2d3e1545546"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.7125655477599313, -0.7321459397602147}, \
{-0.6864789056872506, -0.7053424700506099}, {-0.6604236253985333, \
-0.6785712239067735}, {-0.6447366365622955, -0.6624531766343216}, \
{-0.6291216963226129, -0.646409157761922}, {-0.6135788046794853, \
-0.6304391672895749}, {-0.5981079616329128, -0.6145432052172805}, \
{-0.5961231459144762, -0.6125038492955778}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5932120858683398, -0.6095127970339619}, \
{-0.5694818445232532, -0.5851304789371169}, {-0.5453681958780903, \
-0.5603542179968273}, {-0.5217825928853193, -0.5361205127296574}, \
{-0.4986656508868359, -0.5123683466628746}, {-0.4767696840228848, \
-0.4898707065693249}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.4738586239767484, -0.48687965430770896`}, \
{-0.47092109500988527`, -0.48386140579319975`}, {-0.44410175371358857`, \
-0.4563051032202574}, {-0.4182076269979461, -0.42969943894404783`}, \
{-0.39323871486295786`, -0.4040444129645709}, {-0.36927198892330687`, \
-0.3794191119782635}, {-0.3574162221312933, -0.367237563843072}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.3545051620851569, -0.36424651158145605`}, \
{-0.34638442079367643`, -0.35590262268156264`}, {-0.3245760104740666, \
-0.33349494507446825`}, {-0.3038467579644772, -0.3121960791569804}, \
{-0.28418116223953477`, -0.2919900979553279}, {-0.26556372227386604`, \
-0.2728610744957398}, {-0.2479944380674708, -0.2548090087782161}, \
{-0.2380627602397018, -0.2446044211168191}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.2351517001935654, -0.24161336885520318`}, \
{-0.23147330962034898`, -0.23783390080275674`}, {-0.20542558253421012`, \
-0.21107041541386756`}, {-0.18189645473574445`, -0.18689473720727867`}, \
{-0.16088592622495201`, -0.16530686618299018`}, {-0.14239399700183283`, \
-0.146306802341002}, {-0.12600375341568587`, -0.12946617577548453`}, \
{-0.1187092983481103, -0.12197127839056623`}}]}, 
     {Arrowheads[{{0.01934599263245186, 1.}}], 
      ArrowBox[{{-0.11579823830197392`, -0.11898022612895032`}, \
{-0.11129828181581011`, -0.11435661658060817`}, {-0.09827758220220556, \
-0.1009781247563729}, {-0.08694165457487221, -0.08933070030277872}, \
{-0.06800405114233316, -0.06987271569278769}, {-0.053165407381507004`, \
-0.05462632493590915}, {-0.031607354145521745`, -0.032475883905635286`}, \
{-0.017896607448853505`, -0.018388383385011746`}, {-0.009811018822119448, \
-0.010080613100236276`}, {-0.005661274658786524, -0.00581683926247637}, \
{-0.00316354589161526, -0.0032504760959500656`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.7121774296757271, 0.7077344757615021}, {0.6965642655243299,
        0.6922187151023941}, {0.6810101555711313, 0.6767616402289652}, {
       0.6655150998161312, 0.6613632511412156}, {0.6500790982593294, 
       0.6460235478391452}, {0.6193842577403212, 0.6155201985920415}, {
       0.5937555300476773, 0.5900513569773241}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.590794982556976, 0.5871092790077197}, {0.5889256340141068, 
       0.5852515924876548}, {0.5636169730849445, 0.5601008208841767}, {
       0.5387206056707629, 0.5353597706823128}, {0.5142991878134942, 
       0.5110907070411969}, {0.49041537555507875`, 0.48735589511997046`}, {
       0.47237308292892616`, 0.4694261602235419}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.4694125354382249, 0.46648408225393745`}, {
       0.46210961648968685`, 0.459226722924359}, {0.4347673259186523, 
       0.4320550085775271}, {0.4329553482332484, 0.4302543350040121}, {
       0.4311481006711116, 0.4284583620446577}, {0.41341953195279213`, 
       0.41084039387403676`}, {0.3961905401245305, 0.3937188859584798}, {
       0.3794962828266094, 0.37712877660560196`}, {0.36332504084560147`, 
       0.36105841971286495`}, {0.35099063581017514`, 0.34880096346975953`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3480300883194739, 0.3458588855001551}, {
       0.34716870988738135`, 0.3450028808197669}, {0.33156521629164987`, 
       0.32949673038608746`}, {0.31651456005840717`, 0.3145399684118268}, {
       0.3020167411876532, 0.3001325948969849}, {0.27464157309740256`, 
       0.27292820813895724`}, {0.24940166958468915`, 0.2478457650054046}, {
       0.22960818869142405`, 0.2281757667159773}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.2266476412007228, 0.22523368874637287`}, {
       0.22620605283425627`, 0.2247948552506443}, {0.20496374503084727`, 
       0.20368506862899374`}, {0.18283913494926649`, 0.18169848401531838`}, {
       0.16279854306234703`, 0.16178291634632155`}, {0.14484196937008903`, 
       0.14393836562200346`}, {0.12896941387249236`, 0.12816483184236396`}, {
       0.108225741572673, 0.107550569962195}}]}, 
     {Arrowheads[{{0.017269721591882524`, 1.}}], 
      ArrowBox[{{0.10526519408197176`, 0.10460849199259056`}, {
       0.10209030912939547`, 0.10145341371590638`}, {0.08077518050116865, 
       0.0802712605657344}, {0.050635919427014245`, 0.050320024753799056`}, {
       0.029997577068975736`, 0.02981043570938988}, {0.017022572831364945`, 
       0.016916376673722415`}, {0.009363909684851353, 0.00930549247384018}, {
       0.005393231965837659, 0.005359586023022743}, {0.00300953223405789, 
       0.002990757119230981}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.7154632556740292, 
       0.7073103993073097}, {-0.6998311518392872, 
       0.6918564266292184}, {-0.6842565728639262, 
       0.6764593233024686}, {-0.6687395187479461, 
       0.6611190893270602}, {-0.6532799894913468, 
       0.6458357247029931}, {-0.6225335055562911, 
       0.6154396035088835}, {-0.5967356434596099, 0.5899357135520358}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.5937674531542494, 
       0.5870013464081539}, {-0.5920171210587589, 
       0.5852709597201395}, {-0.566634627701603, 
       0.5601777052874553}, {-0.5416607985859476, 
       0.5354884582800943}, {-0.5171586690968022, 
       0.5112655357814122}, {-0.49319127461918333`, 
       0.48757125487477104`}, {-0.47503984093983004`, 
       0.46962666065288006`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.47207165063446954`, 
       0.4666922935089982}, {-0.46476430923318635`, 
       0.45946822082123007`}, {-0.4372992348201551, 
       0.4323161167879002}, {-0.43547892433500063`, 
       0.4305165491288946}, {-0.4336633415656242, 
       0.4287216553123375}, {-0.41582394420013447`, 
       0.4110855416839737}, {-0.3984858042129393, 
       0.39394497349918856`}, {-0.38168502639278923`, 
       0.3773356441249658}, {-0.365409575810101, 
       0.36124565577231094`}, {-0.35334403842005024`, 
       0.3493176077537244}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.35037584811468975`, 
       0.34638324060984255`}, {-0.34914940875321465`, 
       0.3451707767864224}, {-0.33344513598539394`, 
       0.32964545755563446`}, {-0.318296757506639, 
       0.31466969807994716`}, {-0.30370427331694966`, 
       0.3002434983593604}, {-0.27614984033814494`, 
       0.2730030540201692}, {-0.2507446895823567, 
       0.24788740037474155`}, {-0.23164823590027045`, 
       0.22900855485456867`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.22868004559490995`, 
       0.22607418771068682`}, {-0.2273977789340978, 
       0.2248065327519104}, {-0.20601806627788105`, 
       0.2036704464805087}, {-0.18373466984394696`, 
       0.18164097410074195`}, {-0.16355383624514105`, 
       0.161690105404238}, {-0.1454755654814633, 
       0.14381784039099682`}, {-0.12949985755291368`, 
       0.1280241790610184}, {-0.10995243338049067`, 0.1086995019554129}}]}, 
     {Arrowheads[{{0.009474512314511489, 1.}}], 
      ArrowBox[{{-0.10698424307513019`, 
       0.10576513481153106`}, {-0.10245601580234591`, 
       0.10128850765413788`}, {-0.08102219659458455, 
       0.08009893138688434}, {-0.05073993187522716, 
       0.050161739531518146`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.714224223079756, -0.7096646579907328}, {
       0.6986393412088431, -0.6941792690815521}, {
       0.6831112026006941, -0.6787502611895107}, {
       0.6676398072553092, -0.6633776343146085}, {
       0.6522251551726883, -0.6480613884568456}, {
       0.6215660807957386, -0.6175980397927374}, {
       0.5957937145406806, -0.5919902027956361}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.5928329518272037, -0.5890483414157587}, {
       0.5911339794698451, -0.5873602151971861}, {
       0.565812032310008, -0.5621999218465101}, {
       0.5408959322596137, -0.5374428847013959}, {
       0.5164486372410462, -0.5131516597645838}, {
       0.492533105176696, -0.48938880303882093`}, {
       0.47440244328812836`, -0.471373886220662}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.47144168057465147`, -0.4684320248407846}, {
       0.46415899489402246`, -0.4611958313937017}, {
       0.43674280831336504`, -0.4339546681224867}, {
       0.43492566317840514`, -0.43214912353431767`}, {
       0.4331132283047499, -0.4303482591374245}, {
       0.41529363939148145`, -0.41264242942313606`}, {
       0.3979741979979771, -0.3954335543165027}, {
       0.38119124741748844`, -0.3787577450973467}, {
       0.3649326732189317, -0.3626029646723943}, {
       0.35301117203557614`, -0.3507575696456879}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.35005040932209924`, -0.3478157082658105}, {
       0.3486894726287153, -0.3464634597115781}, {
       0.3330013956371112, -0.3308755344732377}, {
       0.31786844224411975`, -0.31583918895737334`}, {
       0.30329061244974076`, -0.30135442316398486`}, {
       0.2757636520344312, -0.2740031932317096}, {
       0.25038384276879383`, -0.24878540716348585`}, {
       0.2316199007830239, -0.23014125307071379`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.22865913806954702`, -0.22719939169083636`}, {
       0.22706043735794545`, -0.22561089698978004`}, {
       0.20570268850700302`, -0.20438949474105866`}, {
       0.1834360912515877, -0.18226504612218683`}, {
       0.16327185484031223`, -0.1622295370004889}, {
       0.14520997927317658`, -0.14428296737596477`}, {
       0.12925046455018074`, -0.12842533724861446`}, {
       0.11022862953047162`, -0.1095249364957397}}]}, 
     {Arrowheads[{{0.009569438723679536, 1.}}], 
      ArrowBox[{{0.10726786681699474`, -0.10658307511586229`}, {
       0.10223786757359535`, -0.10158518708937056`}, {
       0.0808334138475427, -0.08031737812669221}, {
       0.05060219209305034, -0.05027915069926976}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.0142636450391904`, 
       0.002736636961918534}, {-0.9914962000452795, 
       0.0026752069463564796`}, {-0.9687866304320325, 
       0.0026139330873388156`}, {-0.9461349361994495, 
       0.0025528153848655413`}, {-0.9235411173475305, 
       0.0024918538389366585`}, {-0.9010051738762754, 
       0.0024310484495521653`}, {-0.8785271057856844, 
       0.002370399216712063}, {-0.8561069130757574, 
       0.0023099061404163504`}, {-0.8473119758553533, 
       0.002286176067478381}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{-0.8431381841257574, 
       0.0022749145451173773`}, {-0.8152561534366025, 
       0.0021996846025570875`}, {-0.7750810307590934, 
       0.002091286035570459}, {-0.7357150036303763, 
       0.001985070530941806}, {-0.6972915306376082, 
       0.001881398180156498}, {-0.6761865149419202, 
       0.0018244536506772237`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.6720127232123242, 
       0.0018131921283162198`}, {-0.6571993300594878, 
       0.0017732233495556275`}, {-0.618449384776747, 
       0.001668670127075715}, {-0.6158801925796069, 
       0.0016617380573290027`}, {-0.6133176133714339, 
       0.0016548238304283044`}, {-0.586569185455682, 
       0.0015826525198765675`}, {-0.5606164972495831, 
       0.0015126282356055746`}, {-0.5355207989328008, 
       0.0014449162398786552`}, {-0.5112616737787807, 
       0.0013794614452747004`}, {-0.505061054028487, 
       0.0013627312338760653`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.500887262298891, 
       0.0013514697115150614`}, {-0.4870275220101626, 
       0.0013140740326476991`}, {-0.4636798901751103, 
       0.001251078585097569}, {-0.44121877827362416`, 
       0.0011904751026243113`}, {-0.4196441863057039, 
       0.0011322635852279246`}, {-0.3790812049264788, 
       0.001022818516708574}, {-0.34191758879335266`, 
       0.000922545450582325}, {-0.3339355931150539, 0.0009010088170749075}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.32976180138545796`, 
       0.0008897472947139038}, {-0.30798918101180806`, 
       0.0008310014666801596}, {-0.27713182468732783`, 
       0.0007477436448330595}, {-0.24694849888356132`, 
       0.0006663044594376042}, {-0.21964437936397746`, 
       0.0005926338087587589}, {-0.19521946612857638`, 
       0.0005267316927965239}, {-0.17367375917735797`, 
       0.0004685981115508991}, {-0.16281013220162083`, 
       0.00043928640027375}}]}, 
     {Arrowheads[{{0.01088166877703886, 1.}}], 
      ArrowBox[{{-0.1586363404720249, 
       0.0004280248779127462}, {-0.1372601025204237, 
       0.00037034854970041317`}, {-0.10844354778612894`, 
       0.00029259711969823414`}, {-0.06780070218041084, 
       0.00018293656539742533`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.0144903239117957`, -0.006101443070178699}, {
       0.9917264786644467, -0.005964534612245359}, {
       0.969020224691657, -0.00582797252516917}, {
       0.9463715619934268, -0.005691756808950128}, {
       0.923780490569756, -0.005555887463588238}, {
       0.9012470104206444, -0.0054203644890834955`}, {
       0.8787711215460922, -0.005285187885435903}, {
       0.8563528239460995, -0.00515035765264546}, {
       0.847541066417823, -0.005097361152196164}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.8433673349804737, -0.005072259104246601}, {
       0.8155016896236886, -0.004904666920515733}, {
       0.7753251744798126, -0.004663033546465095}, {
       0.7359567794935518, -0.004426260444631288}, {
       0.6975300056439966, -0.004195150529152117}, {
       0.676418077486501, -0.004068177186264066}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6722443460491516, -0.004043075138314502}, {
       0.6574305803333664, -0.003953980796023183}, {
       0.6186727078884433, -0.0037208795562478237`}, {
       0.6161029575594571, -0.0037054243222575923`}, {
       0.6135398176488763, -0.0036900088452671274`}, {
       0.5867804351968922, -0.0035290700518892265`}, {
       0.5608168472505473, -0.003372917400633407}, {
       0.5357104722371928, -0.003221920279978901}, {
       0.5114408373477121, -0.0030759555604326304`}, {
       0.5052950885551789, -0.0030389932203319665`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5011213571178296, -0.0030138911723824034`}, {
       0.48719624037131254`, -0.002930141426256828}, {
       0.4638384593449491, -0.002789660863930195}, {
       0.44136749426862193`, -0.0026545138734527345`}, {
       0.41978334514233084`, -0.0025247004548244432`}, {
       0.37920232056206904`, -0.002280634242096802}, {
       0.3420222114263757, -0.0020570221347287008`}, {
       0.33417209962385686`, -0.002009809254399868}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3299983681865075, -0.0019847072064503044`}, {
       0.3080788791493961, -0.001852876955007739}, {
       0.2772081851452757, -0.0016672115252215165`}, {
       0.24701052953907238`, -0.0014855939462349954`}, {
       0.21969392868674875`, -0.001321303877574135}, {
       0.19525838258830494`, -0.001174341319238936}, {
       0.1737038912437409, -0.0010447062712293984`}, {
       0.16304911069253483`, -0.0009806252884677696}}]}, 
     {Arrowheads[{{0.010910703779825398`, 1.}}], 
      ArrowBox[{{0.15887537925518552`, -0.0009555232405182063}, {
       0.13727672101904256`, -0.0008256225598375592}, {
       0.10845106621544431`, -0.0006522565970488698}, {
       0.06779868451625895, -0.0004077612216288877}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.016162825153693237`, 
       1.0129152725101565`}, {-0.015799382819205773`, 
       0.990138543332029}, {-0.015436886223126093`, 
       0.9674210830544765}, {-0.015075335365454199`, 
       0.9447628916774988}, {-0.014714730246190088`, 
       0.9221639692010962}, {-0.01435507086533376, 
       0.8996243156252685}, {-0.013996357222885222`, 
       0.8771439309500157}, {-0.013638589318844464`, 
       0.854722815175338}, {-0.0134991502476184, 0.8459842460522761}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.013432558374966529`, 
       0.8418109703908291}, {-0.012987189354172856`, 
       0.8138999412993758}, {-0.012346637985715826`, 
       0.7737569429208313}, {-0.011719058327989574`, 
       0.7344268744468578}, {-0.011106573495510464`, 
       0.6960427902846187}, {-0.01076888346889169, 0.6748799439329487}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.010702291596239819`, 
       0.6707066682715017}, {-0.010467495477702225`, 
       0.655992125972658}, {-0.009849883662448324, 
       0.6172867366484129}, {-0.009808937315987944, 
       0.61472065186504}, {-0.009768096662124344, 
       0.6121611907779856}, {-0.009342253954193788, 
       0.5854738648650788}, {-0.00892909734932742, 
       0.5595815699829577}, {-0.008529591065716576, 
       0.5345447331499656}, {-0.008143413697297479, 
       0.5103432120266549}, {-0.008038616690164977, 0.5037756418136213}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.007972024817513107, 
       0.49960236615217435`}, {-0.007757629815746347, 
       0.48616635050674295`}, {-0.007385961823122893, 
       0.46287412390330995`}, {-0.007028409719427118, 
       0.4404665322163562}, {-0.0066849735046590215`, 
       0.4189435754458813}, {-0.006039266168560282, 
       0.3784774554398246}, {-0.005447657241481095, 
       0.3414016526705961}, {-0.005308349911438271, 
       0.33267133969429397`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.0052417580387863994`, 
       0.328498064032847}, {-0.0049075284773404965`, 
       0.3075520831109678}, {-0.004416261630057527, 
       0.27676466273371225`}, {-0.003935718183222661, 
       0.24664927190474664`}, {-0.0035009777757552805`, 
       0.219404332105322}, {-0.003112040407655384, 
       0.1950298433354383}, {-0.0027689060789229717`, 
       0.17352580559509548`}, {-0.0025780831327115615`, 
       0.16156703757496657`}}]}, 
     {Arrowheads[{{0.010733452102116141`, 1.}}], 
      ArrowBox[{{-0.0025114912600596906`, 
       0.15739376191351956`}, {-0.002188887296983107, 
       0.13717635078240265`}, {-0.001729762187358192, 
       0.10840323524661337`}, {-0.0010819699090615417`, 
       0.06780645307138249}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{0.01444687612105541, -1.013176079810695}, {
       0.014122127231858302`, -0.9904010657714961}, {
       0.013798219643012774`, -0.9676850530959842}, {
       0.013475153354518828`, -0.9450280417841592}, {
       0.013152928366376465`, -0.9224300318360213}, {
       0.012831544678585684`, -0.8998910232515703}, {
       0.012511002291146484`, -0.8774110160308063}, {
       0.012191301204058865`, -0.8549900101737291}, {
       0.012066545839640052`, -0.8462407726224366}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.012007037582604668`, -0.8420673899427301}, {
       0.011609128425819046`, -0.8141615619827834}, {
       0.011036638494154842`, -0.7740121829866369}, {
       0.010475729761473278`, -0.7346750068284202}, {
       0.009928300580181541, -0.6962831671512747}, {
       0.00962670730118931, -0.6751320827544717}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.009567199044153925, -0.6709587000747652}, {
       0.009357103592183794, -0.6562244637852384}, {
       0.008805080691729687, -0.6175104612866162}, {
       0.008768482331963878, -0.6149437761178425}, {
       0.008731978390521799, -0.6123837126149775}, {
       0.0083512759468101, -0.585684611282475}, {
       0.007981911842090936, -0.559780680736775}, {
       0.0076247499504576745`, -0.5347325054641041}, {
       0.007279502313879193, -0.51051989063572}, {
       0.007186868762738571, -0.5040233928865068}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.007127360505703187, -0.4998500102068003}, {
       0.006934607154180985, -0.4863319954173601}, {
       0.006602331203298102, -0.4630290998633353}, {
       0.006282674461230547, -0.44061120397364556`}, {
       0.005975636927978317, -0.4190783077482909}, {
       0.005398364775638298, -0.3785935461021852}, {
       0.0048694600339965035`, -0.34150084673661657`}, {
       0.004747030224287831, -0.3329147030185419}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.004687521967252447, -0.32874132033883546`}, {
       0.004386582811143304, -0.3076361103340359}, {
       0.003947393215169071, -0.27683523757689416`}, {
       0.003517792251026145, -0.24670682662590254`}, {
       0.003129144941965933, -0.2194505427259729}, {
       0.002781451287988437, -0.19506638587710523`}, {
       0.0024747112890936536`, -0.17355435607929942`}, {
       0.002307191685837089, -0.16180601315057708`}}]}, 
     {Arrowheads[{{0.010761912730902967`, 1.}}], 
      ArrowBox[{{0.002247683428801705, -0.15763263047087062`}, {
       0.001956228796000462, -0.137192581021436}, {
       0.0015458340021345881`, -0.10841112093694485`}, {
       0.0009668380908358161, -0.06780547008754484}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3858243073891716, 0.9494675830065155}, {0.3712218630804559,
        0.9135327099613118}, {0.3566355579094083, 0.8776375534081488}, {
       0.3421107263237496, 0.8418936760134526}, {0.32769270277120455`, 
       0.8064126404436596}, {0.3229728864893802, 0.794797735753846}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3214016009668854, 0.7909309895725293}, {
       0.31936448047135435`, 0.7859178791071123}, {0.31110524062962147`, 
       0.7655928753688399}, {0.294793708320508, 0.7254521406871212}, {
       0.29370265264422984`, 0.7227671828551709}, {0.29261316990231795`, 
       0.7200860958270098}, {0.27929217792887984`, 0.6873047240729696}, {
       0.2662559866488665, 0.6552242128423488}, {0.25855018006709396`, 
       0.6362611423198599}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.25697889454459916`, 0.6323943961385431}, {
       0.25359397669730005`, 0.6240645172128254}, {0.2412763545291732, 
       0.5937523188251737}, {0.2260606468777162, 0.556308277869531}, {
       0.21149629931878777`, 0.5204671563797584}, {0.1975833118523879, 
       0.4862289543558562}, {0.19412747364480776`, 0.4777245488858737}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.19255618812231298`, 0.47385780270455696`}, {
       0.18432168447851657`, 0.45359367179782406`}, {0.17172666934593064`, 
       0.4225988424238299}, {0.159813518603387, 0.3932819999520415}, {
       0.14858223225088554`, 0.3656431443824588}, {0.13803281028842634`, 
       0.33968227571508175`}, {0.12970476722252158`, 0.31918795545188755`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.1281334817000268, 0.31532120927057083`}, {
       0.1281286764649035, 0.3153093841603045}, {0.11883325452921112`, 
       0.29243445992852113`}, {0.11014654448134922`, 0.2710575030197317}, {
       0.10206854632131775`, 0.25117851343393605`}, {0.09021000222126957, 
       0.22199605139353398`}, {0.07955983509628206, 0.19578726090232831`}, {
       0.07011804494635518, 0.17255214196031893`}, {0.0652820608002354, 
       0.1606513620179014}}]}, 
     {Arrowheads[{{0.008350511526959052, 1.}}], 
      ArrowBox[{{0.0637107752777406, 0.15678461583658465`}, {
       0.06188463177148893, 0.15229069456750577`}, {0.04815142402684762, 
       0.11849490898710535`}, {0.03746869954226745, 
       0.09220599871876407}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.9452215422786112, -0.3970772833750208}, \
{-0.9095634989423959, -0.3820977274242745}, {-0.8739433961910446, \
-0.3671341099003347}, {-0.8384712809949351, -0.35223266033785194`}, \
{-0.8032572003244559, -0.3374396082714812}, {-0.7912994282469141, \
-0.3324162783542199}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.7874513753961216, -0.33079975322869987`}, \
{-0.7828565534572173, -0.32886951853610724`}, {-0.7626240856657887, \
-0.32037007900024334`}, {-0.7226636873103622, -0.30358315052704593`}, \
{-0.7199906948355429, -0.3024602554776753}, {-0.7173215414917422, \
-0.3013389732054656}, {-0.6847739222080798, -0.28766607254947135`}, \
{-0.6529178190235263, -0.27428367028116973`}, {-0.6335292613644244, \
-0.26613874820789896`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.629681208513632, -0.26452222308237894`}, \
{-0.6219710402935882, -0.26128326532037205`}, {-0.5918609832330967, \
-0.2486343580271412}, {-0.5546331932362457, -0.23299536858730024`}, \
{-0.518992390917481, -0.21802305540035666`}, {-0.4849385762768027, \
-0.20371741846631045`}, {-0.4757590944819348, -0.199861218061578}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.4719110416311424, -0.19824469293605798`}, \
{-0.4524717493142107, -0.19007845778516153`}, {-0.42163039235042554`, \
-0.17712233936105415`}, {-0.39245298770616754`, -0.16486522919813248`}, \
{-0.36493953538143675`, -0.15330712729639648`}, {-0.33909003537623317`, \
-0.14244803365584616`}, {-0.31798892759944525`, -0.13358368791525704`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.3141408747486528, -0.13196716278973702`}, \
{-0.29203018747391524`, -0.12267870368898202`}, {-0.2707316633641779, \
-0.11373142549533811`}, {-0.2509207391487216, -0.1054090718282196}, \
{-0.22169504262484327`, -0.0931316747722141}, {-0.19545371513750648`, \
-0.08210797867054967}, {-0.17219675668671128`, -0.07233798352322635}, \
{-0.1602187607169557, -0.06730615776893606}}]}, 
     {Arrowheads[{{0.004969204462168702, 1.}}], 
      ArrowBox[{{-0.15637070786616328`, -0.06568963264341604}, \
{-0.15192416727245756`, -0.06382168933024408}, {-0.11812718507252581`, \
-0.049623944909532196`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.9475940811893474, 0.3870565978096003}, {0.9117094615876785,
        0.37239907825304}, {0.8758679783632982, 0.35775917828673104`}, {
       0.8401809338625161, 0.3431823607394796}, {0.8047596304316526, 
       0.3287140884400961}, {0.7930378924971647, 0.32392619867231265`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.7891739877798601, 0.32234793869388045`}, {
       0.7842870563929347, 0.3203518107379331}, {0.7639851958981302, 
       0.3120592631077691}, {0.7238936155402601, 0.29568335806343754`}, {
       0.7212121044559048, 0.2945880614824409}, {0.7185344797418112, 
       0.29349435233775395`}, {0.6858131642384424, 0.28012892371594117`}, {
       0.6537941049028002, 0.26705034036729636`}, {0.6346177990876776, 
       0.25921753955659277`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.630753894370373, 0.2576392795781606}, {0.622695991465249, 
       0.2543479288343666}, {0.592445927349001, 0.24199191360296954`}, {
       0.5550284221467641, 0.2267082678419879}, {0.5192172224297055, 
       0.21208073755120388`}, {0.4850123281978256, 0.1981093227306176}, {
       0.4761977056781903, 0.19450888044087292`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.47233380096088573`, 0.19293062046244072`}, {
       0.45241373945112406`, 0.18479402338022904`}, {0.42145797787300315`, 
       0.1721497572362339}, {0.39218156514686464`, 0.16019144203482802`}, {
       0.3645845012727087, 0.14891907777601135`}, {0.3386667862505352, 
       0.13833266445978387`}, {0.31777761226870305`, 0.12980022132515315`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.31391370755139847`, 0.12822196134672095`}, {
       0.2915060401864031, 0.11906927068801759`}, {0.27017216850051134`, 
       0.11035518524070904`}, {0.2503359643787358, 0.1022528407524502}, {
       0.2213195142689887, 0.09040071051764079}, {0.1952537356981386, 
       0.0797538188019087}, {0.17213862866618548`, 0.07031216560525394}, {
       0.1593575188592158, 0.06509156220943335}}]}, 
     {Arrowheads[{{0.008199491503341346, 1.}}], 
      ArrowBox[{{0.15549361414191123`, 0.06351330223100117}, {
       0.15197419317312943`, 0.06207575092767654}, {0.11832392174208767`, 
       0.04833087869385974}, {0.09212950634339256, 0.0376314436645643}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.3775804842024963, -0.9498589434153668}, \
{-0.3632305497206847, -0.9137595840065704}, {-0.3488996265445835, \
-0.8777080503184098}, {-0.3346324384358932, -0.8418168515159817}, \
{-0.32047370915631845`, -0.8061984967643931}, {-0.315908843270337, \
-0.7947149088441928}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.31436705224703304`, -0.7908363079799134}, \
{-0.3123090409988338, -0.7856590796232087}, {-0.3042131477739956, \
-0.7652926758860275}, {-0.28822768612225885`, -0.725078908623675}, \
{-0.28715859537648103`, -0.7223894544577784}, {-0.28609106656821226`, \
-0.719703929574178}, {-0.27301822769570416`, -0.6868172909940429}, \
{-0.2602285373522646, -0.6546429539599443}, {-0.2526954113148738, \
-0.6356922734087395}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.2511536202915698, -0.6318136725444601}, \
{-0.24780928616983383`, -0.6234005108260794}, {-0.23573137727109852`, \
-0.593016764141049}, {-0.2207869768853985, -0.5554219387879346}, \
{-0.20648824067920307`, -0.5194513761311319}, {-0.1928351686525125, \
-0.48510507617064114`}, {-0.18948197935941052`, -0.47666963797328604`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.18794018833610654`, -0.4727910371090067}, \
{-0.1798277608053265, -0.45238303890646214`}, {-0.16747981449791305`, \
-0.42131997361673373`}, {-0.15580512709053984`, -0.3919505895795942}, \
{-0.144803698583207, -0.3642748867950439}, {-0.1344755289759144, \
-0.33829286526308255`}, {-0.12626854740394725`, -0.31764700253783273`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.12472675638064326`, -0.3137684016735534}, \
{-0.11569059292709931`, -0.2910366106260354}, {-0.1071967331019891, \
-0.26966906368822663`}, {-0.0993019454097438, -0.24980857033756104`}, \
{-0.08784079683041932, -0.22097637446049534`}, {-0.07754088543637702, \
-0.19506544059779587`}, {-0.06840221122761692, -0.17207576874946273`}, \
{-0.06305511544848398, -0.1586243671023794}}]}, 
     {Arrowheads[{{0.004674053741296836, 1.}}], 
      ArrowBox[{{-0.06151332442518, -0.15474576623810005`}, \
{-0.06042477420413899, -0.1520073589154958}, {-0.04710049622363628, \
-0.11848818847673598`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.9442047494776107, 
       0.38909700806965924`}, {-0.9084076343798719, 
       0.37434538731180833`}, {-0.8726600045831083, 
       0.35961415893449084`}, {-0.8370727103231481, 
       0.3449490031729825}, {-0.8017566018358295, 
       0.33039560026256326`}, {-0.7898453009431562, 
       0.32548707640465974`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.7859863147297949, 
       0.3238968281130347}, {-0.7813235464269506, 
       0.3219753495386445}, {-0.7610630004826261, 
       0.31362618818020394`}, {-0.721059436987642, 
       0.29714113355975796`}, {-0.7183841088708508, 
       0.2960386585230416}, {-0.7157126964373732, 
       0.2949377970989053}, {-0.683097820717486, 
       0.28149754426370943`}, {-0.6511879588714993, 
       0.26834782035154003`}, {-0.6316268661953404, 0.2602868964480353}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.627767879981979, 
       0.25869664815641036`}, {-0.6201995091260444, 
       0.2555778008326334}, {-0.5900603387389111, 
       0.24315776055024405`}, {-0.552687367660722, 
       0.2277567458474028}, {-0.5169273509991713, 
       0.2130204129712669}, {-0.48278028875425877`, 
       0.1989487619218364}, {-0.4734084314475245, 0.19508671649141088`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.46954944523416314`, 
       0.1934964681997859}, {-0.45024618092598445`, 
       0.18554179269911125`}, {-0.4193596454452272, 
       0.17281377099423315`}, {-0.39015530024286577`, 
       0.16077896249834367`}, {-0.36263314531890023`, 
       0.14943736721144285`}, {-0.3367931806733304, 
       0.13878898513353063`}, {-0.31518999669970865`, 
       0.12988653653478635`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.3113310104863473, 
       0.12829628824316136`}, {-0.2897901171616988, 
       0.11941950897637038`}, {-0.268534592031717, 
       0.11066032699004688`}, {-0.24877640465229117`, 
       0.10251818239856113`}, {-0.22006536216567998`, 
       0.09068665884788851}, {-0.19426287144753024`, 
       0.08005371938774307}, {-0.17136893249784196`, 
       0.07061936401812482}, {-0.1569715619518928, 0.06468635657816182}}]}, 
     {Arrowheads[{{0.012574785467911988`, 1.}}], 
      ArrowBox[{{-0.15311257573853143`, 
       0.06309610828653683}, {-0.15138354531661513`, 
       0.06238359273903375}, {-0.11800238019998624`, 
       0.048627559971834065`}, {-0.09198333003808394, 
       0.037905378605544895`}, {-0.056060728225233086`, 
       0.0231020460707413}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.9431006699945693, -0.3918860454938653}, {
       0.9073731009998276, -0.3770401905666928}, {
       0.8716946753868254, -0.3622147561589249}, {
       0.8361758640750874, -0.347455646184292}, {
       0.8009271379841476, -0.33280876455652864`}, {
       0.7889286987904851, -0.3278230604452909}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.785074399510383, -0.32622148581907656`}, {
       0.780517909238533, -0.32432813019885753`}, {
       0.7602808337767641, -0.3159190305900965}, {
       0.7203231427047628, -0.2993154356193048}, {
       0.7176508642852526, -0.2982050253994854}, {
       0.7149824942892267, -0.29709623924448975`}, {
       0.6824268516702117, -0.2835684129472708}, {
       0.6505739684980316, -0.27033260385385177`}, {
       0.630902428306299, -0.26215850077050207`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.6270481290261969, -0.2605569261442877}, {
       0.6196396825913706, -0.257478498921228}, {
       0.5895520480106674, -0.24497620249706775`}, {
       0.552233160314605, -0.22946910788168193`}, {
       0.5165234054827461, -0.21463065526273384`}, {
       0.48242278351509116`, -0.20046084464022365`}, {
       0.47287615782211273`, -0.1964939410957134}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.4690218585420106, -0.19489236646949903`}, {
       0.44993129441163987`, -0.18695967601415123`}, {
       0.4190837610688912, -0.17414161932143407`}, {
       0.3899150063833442, -0.16202114449898958`}, {
       0.36242503035499873`, -0.1505982515468178}, {
       0.33661383298385483`, -0.1398729404649187}, {
       0.31484988733792646`, -0.13082938142092457`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.31099558805782435`, -0.12922780679471021`}, {
       0.2896597767748238, -0.12036215016110115`}, {
       0.26842491857734957`, -0.11153844250147338`}, {
       0.24868484031790278`, -0.10333585983669956`}, {
       0.21996997429421541`, -0.09140398909274834}, {
       0.19416525748389207`, -0.08068137087432961}, {
       0.17127068988693267`, -0.07116800518144335}, {
       0.1568236168537402, -0.06516482174613579}}]}, 
     {Arrowheads[{{0.012579989893172227`, 1.}}], 
      ArrowBox[{{0.1529693175736381, -0.06356324711992142}, {
       0.15128627150333737`, -0.06286389201408957}, {
       0.11791010253077595`, -0.048995112902239873`}, {
       0.09189897072074502, -0.038186723185040954`}, {
       0.05599522559574722, -0.023267661898045945`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.3999145140075113, 
       0.9373175250124641}, {-0.38477257694310874`, 
       0.9018279329222061}, {-0.36965391312204976`, 
       0.8663928885367346}, {-0.35460511829891894`, 
       0.8311216027394595}, {-0.33967278822830493`, 
       0.7961232864138003}, {-0.33439703950168925`, 0.7837580144223812}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{-0.3327591026390437, 
       0.7799190266576291}, {-0.3310043764238902, 
       0.7758063086255167}, {-0.3224098264644682, 
       0.7556624478392835}, {-0.3054423120806025, 
       0.7158940772729686}, {-0.3043076704330407, 
       0.7132347101742073}, {-0.30317470166198635`, 
       0.7105792639545656}, {-0.28938437090015334`, 
       0.6782575595751597}, {-0.2758929279245151, 
       0.6466363868098859}, {-0.2672416281332218, 0.6263595160675461}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.2656036912705762, 0.622520528302794}, {-0.262790996883926,
        0.6159281500600231}, {-0.2500483697287678, 
       0.5860620478584783}, {-0.23419560771262168`, 
       0.548906428001914}, {-0.21902861841053026`, 
       0.5133581186093226}, {-0.20454740182249365`, 
       0.4794171196807042}, {-0.2000862167647542, 0.46896101771271115`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.19844827990210864`, 
       0.4651220299479591}, {-0.19075195794851174`, 
       0.4470834312160584}, {-0.1776565338858786, 
       0.4163904454867497}, {-0.16527537673188802`, 
       0.38737155476414176`}, {-0.15360848648654007`, 
       0.36002675904823495`}, {-0.14265586314983475`, 
       0.3343560583390289}, {-0.13293080539628666`, 0.3115625193578762}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.1312928685336411, 
       0.30772353159312416`}, {-0.12273532945372082`, 
       0.2876664167107228}, {-0.1137278971571544, 
       0.2665548444841234}, {-0.10535568789491498`, 
       0.2469321046492264}, {-0.0932286113966061, 
       0.2185087268249892}, {-0.0823271484825931, 
       0.19295793564418723`}, {-0.07265129915287603, 
       0.17027973110682063`}, {-0.06577539402781911, 0.15416402100304125`}}]}, 
     {Arrowheads[{{0.012302024971280417`, 1.}}], 
      ArrowBox[{{-0.06413745716517356, 
       0.15032503323828916`}, {-0.050079174144042504`, 
       0.11737530376924618`}, {-0.03906322216689827, 
       0.09155617372717159}, {-0.02383757679388103, 
       0.055870386545449194`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.39803146239120807`, -0.938347046300227}, {
       0.38295564597677034`, -0.9028062683977298}, {
       0.36790279065408527`, -0.8673196205695148}, {
       0.3529193372366253, -0.8319965856184938}, {
       0.33805172653786686`, -0.7969466463475882}, {
       0.33283593359804614`, -0.7846505733944807}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.3312060453782171, -0.7808081615718371}, {
       0.32942557771974595`, -0.7766107633100952}, {
       0.3208728790228779, -0.75644803669575}, {
       0.3039878319929008, -0.7166420527365045}, {
       0.3028586969919946, -0.7139801513716992}, {
       0.30173122582126316`, -0.7113221724358415}, {
       0.288001015236535, -0.6789536192821288}, {
       0.2745684196567113, -0.647286684435444}, {
       0.2660105165850552, -0.6271116886660907}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.26438062836522613`, -0.623269276843447}, {
       0.26152377617336264`, -0.6165343348369865}, {
       0.24883697242263217`, -0.5866255815063565}, {
       0.2330600830871221, -0.5494320455510731}, {
       0.21796569092554174`, -0.5138474758906093}, {
       0.20355379593789108`, -0.47987187252496505`}, {
       0.1991850995720642, -0.4695728039377007}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.19755521135223517`, -0.465730392115057}, {
       0.18982439812417018`, -0.44750523545414045`}, {
       0.1767916919479251, -0.41678102769350184`}, {
       0.16446987187270196`, -0.38773271225841566`}, {
       0.1528589378985008, -0.36036028914888185`}, {
       0.14195889002532155`, -0.3346637583649005}, {
       0.1323596825590732, -0.3120339192093107}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.13072979433924417`, -0.308191507386667}, {
       0.12213411724824785`, -0.2879274605175292}, {
       0.11317005851090811`, -0.2667949651401229}, {
       0.10483821820769977`, -0.24715290546023608`}, {
       0.09276905446418007, -0.21870021962980146`}, {
       0.08191981412129364, -0.19312346605060093`}, {
       0.07229049717904047, -0.17042264472263452`}, {
       0.06553426554608222, -0.15449503448092072`}}]}, 
     {Arrowheads[{{0.012328659834719096`, 1.}}], 
      ArrowBox[{{0.06390437732625318, -0.15065262265827706`}, {
       0.06388110363742056, -0.15059775564590222`}, {
       0.049827872875329166`, -0.11746769226507531`}, {
       0.03886590795426806, -0.09162519392705548}, {
       0.0237157024644768, -0.055909046045723755`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5528208878566587, 0.8312616104333139}, {0.540324432494947, 
       0.8124710331652243}, {0.527830848435423, 0.7936847733955017}, {
       0.5261455482845069, 0.7911506337703772}, {0.524460756607909, 
       0.7886172587241425}, {0.5037124930008366, 0.7574186636663849}, {
       0.4831119146393551, 0.726442138862816}, {0.4628387743360606, 
       0.6959579736888206}, {0.46036919504542506`, 0.6922445350266427}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.45805790272514424`, 0.688769108141476}, {
       0.4428331544867545, 0.6658760716859374}, {0.4202493053534734, 
       0.6319173570051312}, {0.3982358676307298, 0.5988163543213723}, {
       0.37679284131852403`, 0.566573063634661}, {0.36560620991391063`, 
       0.5497520327348048}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3632949175936298, 0.546276605849638}, {0.3559202264168559, 
       0.535187484944997}, {0.3357170981397678, 0.504808594935042}, {
       0.3162825317013022, 0.47558537028745784`}, {0.29761652710145914`, 
       0.4475178110022442}, {0.27971908434023857`, 0.42060591707940126`}, {
       0.2708432247823962, 0.40725953044296676`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.2685319324621154, 0.4037841035578}, {0.26261429454097696`, 
       0.39488591368049886`}, {0.24632624882701065`, 0.37039402596710663`}, {
       0.23085494719833977`, 0.3471302539392248}, {0.21620038965496416`, 
       0.3250945975968532}, {0.2014177540286209, 0.3028663537530909}, {
       0.18743418398425027`, 0.28183964291414637`}, {0.1760802396508818, 
       0.26476702815112874`}}]}, 
     {Arrowheads[{{0.011564051401480082`, 1.}}], 
      ArrowBox[{{0.17376894733060097`, 0.26129160126596196`}, {
       0.16186424064142718`, 0.24339082025071063`}, {0.13949055962649493`, 
       0.20974812960654626`}, {0.1203131409394534, 0.180911570981653}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.8442348933161951, -0.5748784955822231}, \
{-0.8255818941444598, -0.5621768077144991}, {-0.8069301785910967, \
-0.5494759939217564}, {-0.7882816720836638, -0.5367773653164672}, \
{-0.78576601861104, -0.535064340783606}, {-0.7832511159267082, \
-0.5333518274971374}, {-0.7523191554833661, -0.5122888282941214}, \
{-0.7216056773381279, -0.49137460376962155`}, {-0.7062383709734578, \
-0.4809102957505927}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.7027884579148893, -0.4785610907548019}, \
{-0.6913780563662353, -0.4707912218140467}, {-0.6615471676092746, \
-0.4504779931305939}, {-0.627846424377417, -0.42752960196302237`}, \
{-0.5949942984054084, -0.4051590734466269}, {-0.5647919355721521, \
-0.3845928909231714}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.5613420225135837, -0.38224368592738067`}, \
{-0.531835898240938, -0.3621516043673644}, {-0.5016777768225732, \
-0.3416155478648026}, {-0.47266457821225105`, -0.3218591221340275}, \
{-0.4447963024099716, -0.3028823271750391}, {-0.4233455001708464, \
-0.2882754860957502}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4198955871122779, -0.28592628109995943`}, \
{-0.41807294941573486`, -0.2846851629878374}, {-0.3925309517360889, \
-0.2672924381472876}, {-0.3682067418775817, -0.25072896122825483`}, \
{-0.3451003198402133, -0.23499473223073908`}, {-0.3232116856239836, \
-0.22008975115474036`}, {-0.3012297614064894, -0.20512124461206832`}, \
{-0.28189906476954063`, -0.191958081268329}}]}, 
     {Arrowheads[{{0.014202725792703475`, 1.}}], 
      ArrowBox[{{-0.2784491517109722, -0.18960887627253822`}, \
{-0.2608119688430632, -0.17759890460033606`}, {-0.24237610049713113`, \
-0.1650450711312758}, {-0.20905041967682914`, -0.14235207726676716`}, \
{-0.1804528133519434, -0.12287864750040758`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.8496622274492418, 0.5623182132141568}, {0.8308367704040359,
        0.5498592653798159}, {0.812014737178655, 0.5374025834767875}, {
       0.7932012635028363, 0.5249515664020407}, {0.7906638542919391, 
       0.5232722738931241}, {0.7881272429223176, 0.5215935094065982}, {
       0.7569061359828131, 0.5009309490365845}, {0.7259121577324654, 
       0.48041870557431393`}, {0.7104384945868586, 0.47017802129906155`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.706957901265299, 0.46787451650118417`}, {
       0.6954152964024822, 0.4602354609652195}, {0.6653255559157942, 
       0.4403216545608235}, {0.6313348447230425, 0.4178261317915376}, {
       0.598208438244014, 0.39590261783539205`}, {0.5677341684029158, 
       0.3757343245860889}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.5642535750813562, 0.3734308197882115}, {0.5345485394271274,
        0.35377161636252247`}, {0.5041630781674972, 0.3336620978606847}, {
       0.4749379837780462, 0.3143205262017599}, {0.44687325625877444`, 
       0.2957469013857481}, {0.42502984221897294`, 0.2812906278731163}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.42154924889741335`, 0.27898712307523893`}, {
       0.4199688956096818, 0.2779412234126493}, {0.3942599828748275, 
       0.2609267094026034}, {0.3697815990982703, 0.24472657647575002`}, {
       0.34653374428001027`, 0.22934082463208927`}, {0.32451641842004747`, 
       0.21476945387162108`}, {0.30206936653515687`, 0.19991368448461347`}, {
       0.28232551603503014`, 0.18684693116014375`}}]}, 
     {Arrowheads[{{0.01429982840528648, 1.}}], 
      ArrowBox[{{0.27884492271347056`, 0.1845434263622664}, {
       0.2608568140023869, 0.1726386472362309}, {0.2420913133545076, 
       0.16021937937485597`}, {0.20824186329576014`, 0.13781734517773875`}, {
       0.17930114821969434`, 0.11866397968146508`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5527533466230028, -0.8537834286484963}, \
{-0.5404817742924778, -0.8348287444963811}, {-0.5282134312366948, \
-0.8158790482855931}, {-0.5159531613677669, -0.7969418219281226}, \
{-0.5142998283214171, -0.7943880818817992}, {-0.5126470341287498, \
-0.791835174149468}, {-0.49229029270327396`, -0.7603921288987487}, \
{-0.47208477774013397`, -0.7291826682084925}, {-0.46202099383117456`, \
-0.7136381364865901}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.45975268501137884`, -0.7101345041825424}, \
{-0.45220663010458995`, -0.6984788594533895}, {-0.4325971361748883, \
-0.668190013508543}, {-0.4104486860738791, -0.6339794930620932}, \
{-0.38886743824141257`, -0.6006450738650202}, {-0.36902033221955055`, \
-0.5699892120206363}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.3667520233997549, -0.5664855797165886}, \
{-0.34740654938210797`, -0.5366045392190048}, {-0.32762270679416505`, \
-0.5060463941444053}, {-0.30859766335255534`, -0.4766602910678687}, \
{-0.290331419057279, -0.44844622998939515`}, {-0.2760196706079266, \
-0.4263402875546825}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.2737513617881309, -0.42283665525063485`}, \
{-0.27282397390833585`, -0.4214042109089844}, {-0.2560973921906528, \
-0.3955683143454621}, {-0.24017373818915652`, -0.3709726208176537}, \
{-0.22505301190384708`, -0.3476171303255592}, {-0.21073521333472436`, \
-0.3255018428691786}, {-0.19596087807454823`, -0.30268138833642877`}, \
{-0.1830190089963026, -0.2826913630887287}}]}, 
     {Arrowheads[{{0.014498295914957823`, 1.}}], 
      ArrowBox[{{-0.1807507001765069, -0.27918773078468107`}, \
{-0.16881616583255799`, -0.2607536358782425}, {-0.15644578885074373`, \
-0.241646337952806}, {-0.13410899316547717`, -0.20714489870924632`}, \
{-0.11497747518469312`, -0.17759433494210436`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.8472314337881447, 0.560880862876}, {-0.82840055163128, 
       0.5484145154157385}, {-0.809575506287999, 
       0.5359520320201335}, {-0.7907650529786766, 
       0.5234992087861698}, {-0.7882286249164533, 
       0.5218200525327222}, {-0.7856930403002527, 
       0.5201414546541344}, {-0.7545233245622112, 
       0.4995066005144757}, {-0.7235871614603306, 
       0.4790263619838143}, {-0.708020662601707, 0.4687210888747357}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.7045403933220461, 
       0.4664170945247041}, {-0.693153138258189, 
       0.4588785481591046}, {-0.663131725867927, 
       0.4390038893413618}, {-0.6291744505627143, 
       0.41652362584482566`}, {-0.596088492987296, 
       0.39462018872728877`}, {-0.5653296221356084, 0.3742573205234397}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.5618493528559475, 
       0.3719533261734081}, {-0.5325305310258437, 
       0.35254379362921273`}, {-0.5022048778305943, 
       0.3324677224955217}, {-0.4730432447467092, 
       0.3131622514345262}, {-0.4450456317741884, 
       0.2946273804462261}, {-0.4226385816695098, 0.2797935521721438}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.41915831238984885`, 
       0.27748955782211215`}, {-0.4182120389130319, 
       0.2768631095306215}, {-0.39257589948977734`, 
       0.25989157208868097`}, {-0.36817064683096223`, 
       0.24373490152137306`}, {-0.34499628093658674`, 
       0.22839309782869785`}, {-0.32305280180665086`, 
       0.21386616101065534`}, {-0.3003279168282744, 
       0.1988219209280608}, {-0.2799475412034112, 0.18532978382084783`}}]}, 
     {Arrowheads[{{0.014452961870068582`, 1.}}], 
      ArrowBox[{{-0.27646727192375026`, 
       0.18302578947081624`}, {-0.25858669882342405`, 
       0.17118856192085719`}, {-0.23957036579694996`, 
       0.15859944299624792`}, {-0.20524625169590455`, 
       0.13587632630501495`}, {-0.17586687353072897`, 
       0.11642670449109568`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.8457669853185972, -0.5632277353745173}, {
       0.8269702924543667, -0.5507103175298578}, {
       0.8081793590122697, -0.5381967350989016}, {
       0.7894028241255061, -0.5256927412022036}, {
       0.7868709554730362, -0.5240066755692927}, {
       0.7843399274787237, -0.5223211697619584}, {
       0.753237035924183, -0.5016085958758256}, {
       0.7223668823385243, -0.48105101087129337`}, {
       0.7068075303052175, -0.4706894588578708}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.703333543929883, -0.4683760019449546}, {
       0.6919973073209429, -0.4608267797788542}, {
       0.6620390306717073, -0.44087644758834416`}, {
       0.6281458924566459, -0.4183057445306767}, {
       0.5951219044316642, -0.3963138409553214}, {
       0.5643740889165034, -0.3758377254283079}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.560900102541169, -0.3735242685153917}, {
       0.5316813789519427, -0.35406643225154816`}, {
       0.5014109684233002, -0.333908238485588}, {
       0.4723019619369339, -0.3145234669268563}, {
       0.44435435949284385`, -0.295912117575353}, {
       0.4219406475277893, -0.2809859919987452}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.41846666115245484`, -0.278672535085829}, {
       0.41756816109103, -0.2780741904310781}, {
       0.39197683197172617`, -0.26103197124388694`}, {
       0.3676138373751662, -0.24480774576363473`}, {
       0.3444791773013501, -0.22940151399032152`}, {
       0.32257285175027783`, -0.21481327592394725`}, {
       0.2999082000152696, -0.19972004020849526`}, {
       0.2795072061390752, -0.18613425856918245`}}]}, 
     {Arrowheads[{{0.014434673377652153`, 1.}}], 
      ArrowBox[{{0.27603321976374073`, -0.18382080165626627`}, {
       0.258273810609624, -0.17199414966689514`}, {
       0.23930407293898656`, -0.15936149484074694`}, {
       0.20505951166208267`, -0.13655676607775444`}, {
       0.1757415024710066, -0.1170328118338337}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.569830079118922, 
       0.8388896621841475}, {-0.5571373197682598, 
       0.8202036977290497}, {-0.5444496173600681, 
       0.8015251779788145}, {-0.531774557308053, 
       0.7828652699907357}, {-0.5300657063515596, 
       0.7803495421375618}, {-0.5283574449956976, 
       0.7778346822797652}, {-0.507409558258753, 
       0.7469957247164881}, {-0.4866214172245058, 
       0.7163919408014299}, {-0.4760203729878367, 0.7007853472845534}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.4736751303345596, 
       0.6973327394120636}, {-0.466172521654756, 
       0.6862875856170376}, {-0.44600303829557025`, 
       0.6565945741358292}, {-0.4231446130099966, 
       0.6229429692652578}, {-0.4008755083279763, 
       0.5901589475219184}, {-0.37986542420347436`, 0.5592284245124696}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.37752018155019723`, 
       0.5557758166399797}, {-0.3581052607745955, 
       0.5271936534169366}, {-0.3377019494427234, 
       0.49715640621317836`}, {-0.31808362179338145`, 
       0.4682747924524213}, {-0.29925027782656977`, 
       0.44054881213466535`}, {-0.28371047541911204`, 
       0.41767150174038553`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.2813652327658349, 
       0.4142188938678957}, {-0.2812019175422881, 
       0.41397846525991044`}, {-0.2639604414115133, 
       0.3885959931565324}, {-0.24754774990522174`, 
       0.3644336371529068}, {-0.2319638430234135, 
       0.3414913972490336}, {-0.21720872076608855`, 
       0.3197692734449129}, {-0.20179661208311866`, 
       0.2970799505741493}, {-0.1875555266347497, 0.27611457896830155`}}]}, 
     {Arrowheads[{{0.014421643192252696`, 1.}}], 
      ArrowBox[{{-0.18521028398147255`, 
       0.2726619710958117}, {-0.1735067440589125, 
       0.2554323108659134}, {-0.1606289847176762, 
       0.236473994028441}, {-0.13740781537693728`, 
       0.20228836638678754`}, {-0.11756577849184303`, 
       0.173077413456189}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.5679480398447894, -0.8403068013465295}, {
       0.5552988599199022, -0.8215917232467027}, {
       0.5426546518971762, -0.8028840013184069}, {
       0.5300228736298529, -0.7841946698189376}, {
       0.5283198408843148, -0.7816749498822642}, {
       0.5266173944452343, -0.7791560974145656}, {
       0.5057333017811356, -0.7482570646255993}, {
       0.48500834818306104`, -0.7175934858397431}, {
       0.47445900022379883`, -0.7019852114589358}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.47212177423327406`, -0.6985271717117459}, {
       0.46462162033568866`, -0.6874303285339632}, {
       0.44451342267745925`, -0.6576792702159379}, {
       0.4217303095769455, -0.6239705441510661}, {
       0.3995345202800741, -0.59113079227427}, {
       0.3786327346122834, -0.5602055818241523}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.37629550862175865`, -0.5567475420769624}, {
       0.3569049130972587, -0.5280582110849059}, {
       0.33656864201637954`, -0.49796970702393667`}, {
       0.31701478834927277`, -0.4690388276542412}, {
       0.29824335209593833`, -0.4412655729758195}, {
       0.2828064690007679, -0.41842595218936884`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.2804692430102431, -0.414967912442179}, {
       0.28025433325637616`, -0.41464994298867147`}, {
       0.26306957783135865`, -0.3892242599155066}, {
       0.24671093182165804`, -0.36502084597903384`}, {
       0.2311783952272743, -0.34203970117925353`}, {
       0.21647196804820742`, -0.3202808255161655}, {
       0.20111415786287734`, -0.29755819695308666`}, {
       0.18698020338925242`, -0.2766463225545854}}]}, 
     {Arrowheads[{{0.014432836511628393`, 1.}}], 
      ArrowBox[{{0.18464297739872765`, -0.27318828280739554`}, {
       0.17292366852177593`, -0.25584899423607743`}, {
       0.16009098936600463`, -0.23686242008214714`}, {
       0.1369507620840209, -0.2026253261834352}, {
       0.11717737617478224`, -0.17336963816358805`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.18693114201173983`, 0.9978917011579655}, {
       0.1791114133427987, 0.9561477613303616}, {0.1749588787172415, 
       0.9339803482550465}, {0.17082030990510846`, 0.9118874886712786}, {
       0.16669570690639968`, 0.8898691825790586}, {0.16258506972111508`, 
       0.8679254299783858}, {0.16203135338617639`, 0.8649695344037671}, {
       0.1614780580001105, 0.8620158859741788}, {0.15619132232711186`, 
       0.8337937845226732}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.15542282683499617`, 0.8296913366067908}, {
       0.1541636151618716, 0.8229693058895478}, {0.14695282713440205`, 
       0.7844760647207265}, {0.1399141818181952, 0.7469017703958352}, {
       0.1330248499130867, 0.7101245536055004}, {0.12544057788935262`, 
       0.6696375484422118}, {0.12468300715036822`, 0.6655934199714985}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.12391451165825251`, 0.6614909720556161}, {
       0.11811311336896876`, 0.6305214549078275}, {0.11104245635193517`, 
       0.5927762730023479}, {0.10422860683825177`, 0.5564020027257727}, {
       0.09769436073342211, 0.5215203351172595}, {0.09317469197362459, 
       0.49739305542032375`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.09240619648150888, 0.4932906075044414}, {
       0.09146251394294963, 0.48825296121596573`}, {0.0855330664668344, 
       0.4565998810218917}, {0.07990601830507635, 0.42656109453503716`}, {
       0.07457670522605223, 0.3981117027579475}, {0.06954046299813874, 
       0.3712268066931679}, {0.06479729162133589, 0.34590640634069847`}, {
       0.06166637679688096, 0.32919269086914904`}}]}, 
     {Arrowheads[{{0.015634819580357433`, 1.}}], 
      ArrowBox[{{0.06089788130476526, 0.3250902429532667}, {
       0.060347191095643654`, 0.3221505017005391}, {0.053463956978820615`, 
       0.28540583664160674`}, {0.04725623118555089, 0.2522672274965395}, {
       0.04172401371583448, 0.22273467426533727`}, {0.03686730456967138, 
       0.19680817694800012`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.996005768302052, -0.1994955054167232}, \
{-0.9545132127486972, -0.19118473192064267`}, {-0.9323982333502734, \
-0.18675520035287868`}, {-0.9103569078542292, -0.18234042133268896`}, \
{-0.8883892362605647, -0.17794039486007351`}, {-0.8664952185692798, \
-0.1735551209350324}, {-0.863545988184996, -0.1729644032656899}, \
{-0.8605989864123695, -0.17237413197730536`}, {-0.8323049020611457, \
-0.16670695329462226`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.828212380405123, -0.16588723949156975`}, \
{-0.8217680918131247, -0.1645964772785119}, {-0.7834827817374111, \
-0.15692810072220845`}, {-0.7461047534808213, -0.1494414486607039}, \
{-0.709513441278158, -0.1421123723098954}, {-0.6691583974351416, \
-0.1340294373271985}, {-0.6645115141642167, -0.13309868736946878`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.660418992508194, -0.13227897356641627`}, \
{-0.6301633176637336, -0.12621889707197048`}, {-0.5925282019639342, \
-0.11868075154421141`}, {-0.5562530503357428, -0.11141500074392122`}, \
{-0.521460054122345, -0.10444611905121101`}, {-0.49671812626728773`, \
-0.09949042144431536}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4926256046112651, -0.09867070764126283}, \
{-0.48827140466692537`, -0.09779858084619182}, {-0.4566871019694844, \
-0.09147238612886373}, {-0.4267071460300217, -0.08546753489922664}, \
{-0.3983079677393207, -0.07977930637000702}, {-0.3714659979881644, \
-0.07440297975393126}, {-0.346181236776553, -0.06933855505099935}, \
{-0.3289247383703588, -0.06588215551916193}}]}, 
     {Arrowheads[{{0.015628239746247614`, 1.}}], 
      ArrowBox[{{-0.32483221671433615`, -0.0650624417161094}, \
{-0.3224536841044862, -0.06458603226121129}, {-0.28564987605552455`, \
-0.057214393941782356`}, {-0.25245872560516813`, -0.050566354798651306`}, \
{-0.22288023275341712`, -0.044641914831818195`}, {-0.19691439750027137`, \
-0.03944107404128298}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.9947771696756449, 0.19243535858006916`}, {
       0.9531910122034439, 0.18439069554488957`}, {0.9310519324127462, 
       0.18010798592104005`}, {0.9089893169368434, 0.1758400679895259}, {
       0.8870031657757355, 0.17158694175034722`}, {0.8650934789294225, 
       0.16734860720350395`}, {0.8621423181154764, 0.166777717855848}, {
       0.8591934381395321, 0.16620726972647903`}, {0.8308636486574291, 
       0.16072699397863097`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.8267658106319737, 0.159934284863595}, {0.8203011723214957, 
       0.1586837284281544}, {0.781965114727644, 0.15126778321499232`}, {
       0.7445469843883632, 0.1440294070753559}, {0.7079262082935248, 
       0.13694527567979076`}, {0.6675162311390908, 0.12912813966081532`}, {
       0.6628522896137579, 0.1282259202621569}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6587544515883025, 0.12743321114712094`}, {
       0.6284798440535404, 0.12157671872407672`}, {0.5908170470368742, 
       0.11429101286957494`}, {0.5545278400890915, 0.10727102209730997`}, {
       0.5197323766595459, 0.10053998957451138`}, {0.49484093057008666`, 
       0.09572484654568277}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.4907430925446313, 0.09493213743064681}, {
       0.4865508101975904, 0.09412115846840871}, {0.4549831407032252, 
       0.088014528779002}, {0.42502936817645, 0.08222010050629117}, {
       0.39666355034773515`, 0.0767328552299792}, {0.3698597449475504, 
       0.07154777452976899}, {0.344617951975896, 0.06666485840566053}, {
       0.32682957152641545`, 0.06322377282920864}}]}, 
     {Arrowheads[{{0.012291488150875853`, 1.}}], 
      ArrowBox[{{0.32273173350096007`, 0.06243106371417269}, {
       0.32093817143277176`, 0.062084106857653795`}, {0.284370907947977, 
       0.05501032724600191}, {0.251389743614644, 0.04863026306847105}, {
       0.22199467843277307`, 0.04294391432506127}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.18331493432378682`, -0.9946428646418579}, \
{-0.17562294084835048`, -0.9529071137962614}, {-0.17153650976448498`, \
-0.9307346730488077}, {-0.16746456093864437`, -0.9086408111397968}, \
{-0.1634070943708287, -0.8866255280692288}, {-0.1593641100610379, \
-0.8646888238371033}, {-0.15881955716428756`, -0.8617341510213243}, \
{-0.1582754319797257, -0.8587817989159555}, {-0.15305488615179533`, \
-0.8304557998562434}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.15229838494749554`, -0.8263511232366031}, \
{-0.15108614179201502`, -0.8197736503795366}, {-0.14400113425383856`, \
-0.781331325864209}, {-0.13708733255897151`, -0.7438179418689805}, \
{-0.1303224289761555, -0.7071124595608489}, {-0.12285969351481082`, \
-0.6666206327235137}, {-0.12203833677550402`, -0.6621640584509886}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.12128183557120423`, -0.6580593818313483}, \
{-0.11565244942668351`, -0.6275150686709625}, {-0.10870069671177357`, \
-0.5897957674031955}, {-0.10200443537008096`, -0.5534627289202124}, \
{-0.09558553348965572, -0.5186346066084521}, {-0.09102178739921273, \
-0.49387231704573376`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.09026528619491293, -0.4897676404260934}, \
{-0.08946585915854789, -0.4854300538543533}, {-0.08364541237675745, \
-0.453849070657916}, {-0.0781241931442844, -0.4238916570191401}, \
{-0.07289705067049061, -0.39552986542150514`}, {-0.06795883416473794, \
-0.36873574834849054`}, {-0.06330954362702641, -0.3435093058000962}, \
{-0.06000523802292142, -0.3255805756404789}}]}, 
     {Arrowheads[{{0.01219471881516929, 1.}}], 
      ArrowBox[{{-0.059248736818621625`, -0.3214758990208385}, \
{-0.058949179057356, -0.31985053777632216`}, {-0.052241424377708276`, \
-0.28345513794438437`}, {-0.04619106398494825, -0.2506266735567473}, \
{-0.04079809787907593, -0.22136514461341092`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.9908457845242111, 
       0.19776506287880982`}, {-0.9494328377030679, 
       0.18949936284758556`}, {-0.9273245974142073, 
       0.1850867311352088}, {-0.9052955418754982, 
       0.18068990407915433`}, {-0.8833456710869414, 
       0.1763088816794222}, {-0.8614749850485363, 
       0.1719436639360124}, {-0.8585292802886832, 
       0.17135572432305388`}, {-0.855585904662814, 
       0.17076824958700754`}, {-0.8271227801105205, 
       0.16508723271765216`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.8230297050001782, 
       0.16427028696362322`}, {-0.8168678355503153, 
       0.1630404260526356}, {-0.7787110215289536, 
       0.15542462464130583`}, {-0.7414725871640151, 
       0.1479921246209048}, {-0.7050334909337381, 
       0.14071916623547037`}, {-0.6647069620320489, 
       0.13267030671717886`}, {-0.6593067005864877, 
       0.13159245680246556`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.6552136254761454, 
       0.13077551104843663`}, {-0.6257594025874602, 
       0.12489667870882651`}, {-0.5881908125999723, 
       0.11739828221041337`}, {-0.5520011920695849, 
       0.11017511722193937`}, {-0.517308533947713, 
       0.103250734212933}, {-0.4914906210624548, 0.09809768088727899}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.4873975459521125, 
       0.09728073513325006}, {-0.4842308311857717, 
       0.0966486836529227}, {-0.4527680837837609, 
       0.0903689655419085}, {-0.42292029174168044`, 
       0.08441157987989033}, {-0.39465988795230617`, 
       0.07877102448804409}, {-0.3679593053084136, 
       0.07344179718754561}, {-0.3428185438100029, 
       0.06842389797839488}, {-0.32367454153842184`, 
       0.06460290497209241}}]}, 
     {Arrowheads[{{0.01204742588809698, 1.}}], 
      ArrowBox[{{-0.3195814664280796, 
       0.06378595921806347}, {-0.3192376034570739, 
       0.06371732686059194}, {-0.2829201079864345, 
       0.05646863903496755}, {-0.2501607162792613, 
       0.04993012086995195}, {-0.220959428335554, 
       0.044101772365545126`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.9903099084137096, -0.20087974690119975`}, {
       0.9489614095620044, -0.19249239672575835`}, {
       0.926866821904046, -0.18801061265098679`}, {
       0.9048512359540564, -0.18354485370427534`}, {
       0.8829146517120361, -0.1790951198856241}, {
       0.8610570691779847, -0.17466141119503303`}, {
       0.8581131239930182, -0.17406424564248962`}, {
       0.8551715040560526, -0.1734675517556601}, {
       0.8266898735942058, -0.16769018583222522`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.8225993727237182, -0.16686044680550086`}, {
       0.8165091609601114, -0.16562507574917396`}, {
       0.7784062258976479, -0.15789607305364303`}, {
       0.7412188143036247, -0.1503527800244094}, {
       0.7048282210330545, -0.14297111787635913`}, {
       0.6645360104383642, -0.13479803084816194`}, {
       0.6589793379042145, -0.1336708857365263}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6548888370337269, -0.13284114670980193`}, {
       0.625620130644476, -0.12690412610479146`}, {
       0.5880805816513903, -0.11928940364624774`}, {
       0.5519173634591066, -0.1119538634725307}, {
       0.5172485617261191, -0.10492145870880795`}, {
       0.49126880221422314`, -0.09965158564082739}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.4871783013437356, -0.09882184661410304}, {
       0.4841922621109216, -0.09821614248024706}, {
       0.4527484646135141, -0.09183791478684802}, {
       0.4229171692338965, -0.0857867756286108}, {
       0.39467111340385475`, -0.0800571949207042}, {
       0.36798303455517456`, -0.07464364257829695}, {
       0.34285293268785594`, -0.06954611860138907}, {
       0.3235582665242318, -0.0656322855451285}}]}, 
     {Arrowheads[{{0.012038990061718114`, 1.}}], 
      ArrowBox[{{0.31946776565374424`, -0.06480254651840413}, {
       0.31928080780189894`, -0.06476462298998056}, {
       0.2829536288243622, -0.05739582413555809}, {
       0.25018561522347765`, -0.050748985380663095`}, {
       0.22097676699924534`, -0.04482410672529559}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.2100520936729351, 
       0.9863345719104414}, {-0.20129799747716798`, 
       0.9452282559831209}, {-0.19660294597913214`, 
       0.923181860117992}, {-0.19192509636162436`, 
       0.9012162385463731}, {-0.18726444862464472`, 
       0.8793313912682643}, {-0.18262100276819315`, 
       0.8575273182836655}, {-0.18199561948091142`, 
       0.8545907269545572}, {-0.18137073783499333`, 
       0.8516564911659771}, {-0.17527737452852632`, 0.823044089436066}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.1744080065499161, 
       0.8189618273742066}, {-0.17318574612372728`, 
       0.813222500080925}, {-0.16512003571043415`, 
       0.7753486141865226}, {-0.15724834381765965`, 
       0.738385774552275}, {-0.1495457580378886, 
       0.702217000821681}, {-0.14099137564959235`, 
       0.662048474322459}, {-0.13963328740550732`, 0.6556713448998313}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.13876391942689711`, 
       0.6515890828379719}, {-0.13273002555285351`, 
       0.6232559297275124}, {-0.12476170774767217`, 
       0.5858393670368424}, {-0.11708642223404819`, 
       0.5497987862504479}, {-0.10972899576266976`, 
       0.5152507655089406}, {-0.10398920028248834`, 
       0.48829860036359646`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.10311983230387811`, 
       0.48421633830173705`}, {-0.10271425508422491`, 
       0.4823118829529313}, {-0.09604220019871366, 
       0.4509821385824202}, {-0.08971283110613601, 
       0.42126153239740727`}, {-0.08372018498340128, 
       0.393122064969476}, {-0.07805829900741879, 
       0.3665357368702099}, {-0.07272717317818855, 
       0.3415025480996091}, {-0.06834511315946931, 0.3209258558273616}}]}, 
     {Arrowheads[{{0.011837884288985084`, 1.}}], 
      ArrowBox[{{-0.0674757451808591, 
       0.3168435937655022}, {-0.060028412054727205`, 
       0.28187340136039696`}, {-0.053083739592885634`, 
       0.2492635357792698}, {-0.04689279011018581, 
       0.22019290191429206`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.20820578648993338`, -0.9868480067988479}, {
       0.19952410914315297`, -0.9456988335228439}, {
       0.1948708377424463, -0.9236433869173601}, {
       0.19023459475025944`, -0.9016686510898526}, {
       0.18561538016659251`, -0.8797746260403219}, {
       0.1810131939914455, -0.8579613117687676}, {
       0.18039336566917447`, -0.855023466693937}, {
       0.179774034154177, -0.8520879763724302}, {
       0.17374080995335223`, -0.8234918677938514}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.1728791855399377, -0.8194079643187265}, {
       0.1716570742392713, -0.8136154351028908}, {
       0.163658422688782, -0.7757036485346509}, {
       0.15585228311622862`, -0.7387043248951017}, {
       0.14821392098377129`, -0.702500228108446}, {
       0.1397343434598247, -0.6623089619622115}, {
       0.13841420900335655`, -0.6560518253137301}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.13755258458994202`, -0.6519679218386052}, {
       0.1315452899064978, -0.6234947132666768}, {
       0.12364676032379061`, -0.586057482021842}, {
       0.11603875471170308`, -0.549997268227707}, {
       0.10874588569054212`, -0.5154307300987309}, {
       0.10308760805336088`, -0.48861178283360873`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.10222598363994635`, -0.48452787935848385`}, {
       0.10179276588061464`, -0.4824745258493726}, {
       0.09517939528192064, -0.4511286554796324}, {
       0.0889057738944601, -0.4213931189895099}, {
       0.08296598188602769, -0.3932398577226591}, {
       0.07735409942441807, -0.36664081302273366`}, {
       0.07207012650963124, -0.3415959848897337}, {
       0.06776100710336519, -0.3211717403534874}}]}, 
     {Arrowheads[{{0.011856247925304689`, 1.}}], 
      ArrowBox[{{0.06689938268995066, -0.3170878368783625}, {
       0.05948512711571147, -0.2819459541349213}, {
       0.05260314518918069, -0.24932692725042613`}, {
       0.04646811736207491, -0.22024829267017382`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6356558140531471, 0.7734283120665748}, {0.6337191185371098,
        0.771071855772398}, {0.6095310771527862, 0.74164128091336}, {
       0.5854187027970214, 0.712302773209036}, {0.5615985502066352, 
       0.6833198236255523}, {0.5379984344693544, 0.6546046018408669}, {
       0.5296507996295495, 0.6444476946260473}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.5270006742689596, 0.6412231791900341}, {0.511693887690752, 
       0.6225987886871628}, {0.4859414033832052, 0.5912646924212839}, {
       0.46074098154671417`, 0.5606023130432306}, {0.4360926221812786, 
       0.5306116505530025}, {0.42099565984536197`, 0.5122425617495068}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.418345534484772, 0.5090180463134936}, {
       0.41213257984478224`, 0.5014584914192914}, {0.3889971090951085, 
       0.47330862211078906`}, {0.3666862099322574, 0.4461620426274955}, {
       0.34519988235622895`, 0.42001875296941055`}, {0.32458942144270186`, 
       0.3949411659437839}, {0.3123405200611744, 0.38003742887296615`}}]}, 
     {Arrowheads[{{0.010595950596580304`, 1.}}], 
      ArrowBox[{{0.30969039470058446`, 0.376812913436953}, {
       0.3049061222673548, 0.3709916943578649}, {0.2861499848301879, 
       0.34817033821165366`}, {0.268321009131201, 0.32647709750515}, {
       0.25352919990947337`, 0.30847930092114034`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.4668590165464313, 0.882168710020933}, {0.4654322235088166, 
       0.8794726666141452}, {0.4640054604469705, 0.8767766798490507}, {
       0.4457304967041109, 0.8422446249473876}, {0.4275247205519528, 
       0.807843305718541}, {0.4095602247350085, 0.7738979056312878}, {
       0.3917796450051074, 0.740300030196036}, {0.3887665011987279, 
       0.7346064458577821}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.38681418831503533`, 0.7309173892537033}, {
       0.37229669858177983`, 0.7034853921478822}, {0.35324423743464295`, 
       0.6674841916200949}, {0.3346222615636969, 0.6322964286126739}, {
       0.3164307709689415, 0.5979221031256192}, {0.30872167296733205`, 
       0.5833551250905523}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3067693600836395, 0.5796660684864735}, {0.2987688163421591,
        0.5645483796302151}, {0.2817354483751318, 0.5323624225977457}, {
       0.26533066706785974`, 0.5013642320282113}, {0.24955447242034282`, 
       0.47155380792161156`}, {0.23444092677511397`, 0.44299551389031694`}, {
       0.22867684473593614`, 0.43210380432332257`}}]}, 
     {Arrowheads[{{0.014184722956728532`, 1.}}], 
      ArrowBox[{{0.22672453185224356`, 0.4284147477192438}, {
       0.2200240924747062, 0.41575371354669777`}, {0.20630396951911945`, 
       0.38982840689075404`}, {0.1932805579083538, 0.3652195939224858}, {
       0.18205148270482768`, 0.3440013279451006}, {0.1713384970921814, 
       0.3237582559181495}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{-0.7644421082245638, -0.6424798219681881}, \
{-0.7471728483772578, -0.6279657719533501}, {-0.7448392193468337, \
-0.6260044598436748}, {-0.742505957954113, -0.6240434567172484}, \
{-0.7137966033499854, -0.5999145124369276}, {-0.6852383962164184, \
-0.5759126009285221}, {-0.657081052437885, -0.552247597361483}, \
{-0.6366346338374483, -0.5350632857688037}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6334394469777704, -0.5323778723638191}, \
{-0.6292413333862277, -0.5288495433459933}, {-0.5978773132176399, \
-0.5024894699312497}, {-0.567239812442744, -0.4767400039721833}, \
{-0.5373288310615404, -0.45160114546879454`}, {-0.5081443690740285, \
-0.4270728944210829}, {-0.5056319725906551, -0.4249613361644346}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5024367857309772, -0.42227592275945}, \
{-0.4798353961186132, -0.40328045322924505`}, {-0.45255088183369896`, \
-0.38034902429347717`}, {-0.426290826219286, -0.3582786076137794}, \
{-0.40105522927537396`, -0.3370692031901514}, {-0.3768907841069938, \
-0.3167600545146571}, {-0.37462931134386185`, -0.31485938656006546`}}]}, 
     {Arrowheads[{{0.009440700849189014, 1.}}], 
      ArrowBox[{{-0.37143412448418395`, -0.31217397315508083`}, \
{-0.35384418381917576`, -0.29739040507935993`}, {-0.3319154284119201, \
-0.27896025488426}, {-0.3111045178852268, -0.26146960392935725`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.8775606333031224, -0.47636363940407556`}, \
{-0.8577348109586705, -0.46560164698124595`}, {-0.8550555979663098, \
-0.46414729772793484`}, {-0.8523768080549693, -0.46269317813444083`}, \
{-0.8185229298453451, -0.44431637769481985`}, {-0.784855156879471, \
-0.4260406002134545}, {-0.7516837309775488, -0.4080342533387262}, \
{-0.7308321997654315, -0.3967154784092212}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.7271639889269892, -0.39472427438434987`}, \
{-0.7189052381995114, -0.39024120118784117`}, {-0.6826283596384519, \
-0.37054913064392825`}, {-0.6472142013676445, -0.3513253679999554}, \
{-0.6126627633870901, -0.33256991325592306`}, {-0.5804355553892983, \
-0.3150761133894955}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.576767344550856, -0.3130849093646241}, \
{-0.5463199399493254, -0.2965572349043413}, {-0.5148723377972888, \
-0.2794866261701171}, {-0.4846312392406783, -0.2630709402091582}, \
{-0.4555966442794938, -0.24731017702146443`}, {-0.4300389110131651, \
-0.23343674836976966`}}]}, 
     {Arrowheads[{{0.010092307822309923`, 1.}}], 
      ArrowBox[{{-0.42637070017472284`, -0.23144554434489828`}, \
{-0.4013484586204832, -0.21786279507324965`}, {-0.376185241291927, \
-0.2042035203395729}, {-0.35232927429733685`, -0.19125385643284987`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.28685526615841633`, 0.9762917722723438}, {
       0.280507640941821, 0.9546880752044011}, {0.27414780575681563`, 
       0.9330428223656406}, {0.273288508148331, 0.9301182632444789}, {
       0.2724293649303448, 0.9271942295805464}, {0.2609695582446811, 
       0.8881915815592045}, {0.24958188022945696`, 0.8494344184070726}, {
       0.23979065524782325`, 0.8161106711457711}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{0.23861403997505842`, 0.8121061436176068}, {
       0.2383828907888672, 0.8113194435800997}, {0.22733373662151354`, 
       0.7737144225929696}, {0.21553443352538992`, 0.7335563223580889}, {
       0.20403467236201336`, 0.6944176920751037}, {0.19283445313138387`, 
       0.6562985317440141}, {0.19154942906446532`, 0.6519250424910341}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.19037281379170048`, 0.6479205149628698}, {
       0.18193377583350143`, 0.61919884136482}, {0.17138741384502343`, 
       0.5833050382820113}, {0.16125014054260717`, 0.5488035398400776}, {
       0.15152195592625273`, 0.515694346039019}, {0.1433082028811074, 
       0.48773941383629715`}}]}, 
     {Arrowheads[{{0.013983062301088707`, 1.}}], 
      ArrowBox[{{0.14213158760834257`, 0.4837348863081328}, {
       0.13330590619835225`, 0.45369729884926396`}, {0.12484414798005239`, 
       0.42489829844004084`}, {0.11681758534106046`, 0.3975804556511662}, {
       0.10922621828137646`, 0.37174377048264}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.9733704598671308, -0.2988609960149436}, \
{-0.9518471534881208, -0.29225253906336957`}, {-0.9302808823126894, \
-0.285630890318556}, {-0.9273668625079944, -0.28473617767096104`}, \
{-0.9244533542330918, -0.2838416220820704}, {-0.8857230960037967, \
-0.2719499898335398}, {-0.8472330883720238, -0.26013212346945813`}, \
{-0.8137716210228833, -0.24985820632032793`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.809781650051777, -0.24863313657796252`}, \
{-0.8093747356637673, -0.24850819870044566`}, {-0.7720175697703626, \
-0.2370381569562957}, {-0.7320359782548108, -0.2247623187679953}, \
{-0.6930636145667473, -0.21279635112350648`}, {-0.6551004787061725, \
-0.20114025402282937`}, {-0.6501828112075295, -0.19963034688334688`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6461928402364233, -0.1984052771409815}, \
{-0.618146570673086, -0.18979402746596385`}, {-0.5823880640146917, \
-0.17881483366816409`}, {-0.5480111322781934, -0.16825983484468424`}, \
{-0.5150157754635911, -0.15812903099552433`}, {-0.4865940013921758, \
-0.1494024874463659}}]}, 
     {Arrowheads[{{0.013924474006734383`, 1.}}], 
      ArrowBox[{{-0.4826040304210696, -0.1481774177040005}, \
{-0.4532150941658533, -0.139153919330881}, {-0.42450038481427593`, \
-0.13033743373683138`}, {-0.3972578655161529, -0.12197296533853548`}, \
{-0.37148753627148384`, -0.11406051413599319`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.29945707066917987`, 
       0.9520190895120434}, {-0.2985417444548944, 
       0.9491091297399022}, {-0.2976264379334826, 
       0.9461992325743698}, {-0.28532286492402553`, 
       0.9070843225539339}, {-0.2730703370778972, 
       0.8681316927889203}, {-0.2609962401929397, 
       0.8297463218994947}, {-0.24936211413906847`, 0.7927596844882487}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.2481097402258157, 
       0.7887781993626539}, {-0.23639668884283704`, 
       0.7515406464536091}, {-0.2240293670829201, 
       0.7122230695626441}, {-0.2119561470567884, 
       0.6738404863393741}, {-0.20017702876444182`, 
       0.6363928967837985}, {-0.19801478369570436`, 0.6295187943388593}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.19676240978245157`, 
       0.6255373092132644}, {-0.18875612041263953`, 
       0.6000841105321124}, {-0.1777575302081406, 
       0.5651179372205106}, {-0.16718125815094503`, 
       0.5314943768489929}, {-0.1570273042410528, 
       0.4992134294175594}, {-0.14731542890981925`, 
       0.468337916311009}, {-0.14666745325234024`, 0.4662779041894698}}]}, 
     {Arrowheads[{{0.009767147855764711, 1.}}], 
      ArrowBox[{{-0.14541507933908746`, 
       0.4622964190638749}, {-0.13806539258859962`, 
       0.4389306589141404}, {-0.12927719527739395`, 
       0.41099165722695374`}, {-0.12095083697620226`, 0.3845209112494489}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{0.9005180659109869, 0.4755001521110493}, {0.8806084751977339,
        0.46498729981969245`}, {0.860658853951607, 0.4544533102239426}, {
       0.8579634590346512, 0.45303006204988705`}, {0.8552685350299448, 
       0.4516070625314162}, {0.8211744529938401, 0.4336043796226018}, {
       0.7872756617090327, 0.41570481600196485`}, {0.7538851152024726, 
       0.3980736206445695}, {0.7528833645344114, 0.3975446666867624}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.749192496999997, 0.3955957795511552}, {0.7208984954651767, 
       0.38065571055872793`}, {0.6844087642349889, 0.36138805407601976`}, {
       0.6487966167359065, 0.34258378773885934`}, {0.6140620529679301, 
       0.32424291154724694`}, {0.6015577956234216, 0.31764029412686834`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.5978669280890072, 0.3156914069912612}, {0.5802050729310595,
        0.30636542550118234`}, {0.5473969862444898, 0.28904178614237086`}, {
       0.5158091025274161, 0.2723624500125176}, {0.48544142177983834`, 
       0.2563274171116226}, {0.4562939440017566, 0.24093668743968588`}, {
       0.4502322267124318, 0.2377359215669743}}]}, 
     {Arrowheads[{{0.012714627951888992`, 1.}}], 
      ArrowBox[{{0.4465413591780174, 0.23578703443136712`}, {
       0.4284153742902995, 0.22621597872738927`}, {0.40185441774259567`, 
       0.21219100870541469`}, {0.37661107435864505`, 0.19886177737376204`}, {
       0.3526853441384479, 0.18622828473243147`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6339453603712806, -0.7946562716160793}, \
{-0.6199012166335615, -0.7770518097834066}, {-0.605831638315833, \
-0.7594154654734987}, {-0.6039310514091769, -0.757033062510188}, \
{-0.6020308180918549, -0.7546511027743215}, {-0.5786577504730368, \
-0.7253527500593138}, {-0.5554161958935637, -0.6962192501345427}, \
{-0.5325091785445681, -0.6675050956690274}, {-0.5298294178540827, \
-0.664145991285209}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.5272265192911527, -0.6608832342769373}, \
{-0.5098690236956727, -0.6391254557730952}, {-0.4843475053187708, \
-0.6071340005039971}, {-0.4594274261781506, -0.5758964547844969}, \
{-0.4351087862738123, -0.5454128186145951}, {-0.4231105767739548, \
-0.530372953946067}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.42050767821102486`, -0.5271101969377953}, \
{-0.41139158560575556`, -0.515683091994291}, {-0.38839523376266727`, \
-0.4868569559284043}, {-0.366239140333234, -0.4590840914217543}, \
{-0.34492330531745574`, -0.4323644984743411}, {-0.32444772871533256`, \
-0.40669817708616457`}, {-0.31639173569382706`, -0.39659991660692484`}}]}, 
     {Arrowheads[{{0.011960956824802547`, 1.}}], 
      ArrowBox[{{-0.3137888371308971, -0.39333715959865306`}, \
{-0.3048483177785154, -0.3821301373235565}, {-0.2861609797586551, \
-0.3587053892528483}, {-0.26838571465575195`, -0.33642393287404015`}, \
{-0.2515225224698058, -0.31528576818713216`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{0.7898133116067658, 0.6427778787027268}, {0.7723506255257464,
        0.6285661299886235}, {0.7548528899731605, 0.6143258567806273}, {
       0.7524888887274682, 0.612401949341203}, {0.7501253009509128, 
       0.6104783783975184}, {0.7210502131835156, 0.5868160483714476}, {
       0.692134599851893, 0.5632835042555763}, {0.6636311338962662, 
       0.5400863801841158}, {0.6603239707983615, 0.5373948944249425}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.6570867372781514, 0.5347603198179979}, {0.6354555910032282,
        0.5171561314456626}, {0.6037010104201895, 0.4913131358335265}, {
       0.5726897396687074, 0.4660750719308531}, {0.5424217787487822, 
       0.4414419397376429}, {0.527597396469747, 0.4293773355402136}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5243601629495369, 0.426742760933269}, {0.5128971276604135, 
       0.41741373925389563`}, {0.48426524044035657`, 0.3941121014363161}, {
       0.45667557112536616`, 0.3716586572416091}, {0.4301281197154424, 
       0.3500534066697747}, {0.4046228862105852, 0.3292963497208128}, {
       0.39487082214113256`, 0.3213597766554847}}]}, 
     {Arrowheads[{{0.01202852958472878, 1.}}], 
      ArrowBox[{{0.39163358862092246`, 0.3187252020485401}, {
       0.38020556680067297`, 0.3094246755628005}, {0.3569218576755841, 
       0.2904755733638148}, {0.3347717588353186, 0.27244904312385576`}, {
       0.3137552702798765, 0.2553450848429233}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.4658705476502467, -0.9034730084234236}, \
{-0.45554951542036665`, -0.8834572034196579}, {-0.4452098287861466, \
-0.8634052215189101}, {-0.4438130272866619, -0.8606963736226974}, \
{-0.4424164859502631, -0.8579880302664843}, {-0.4247276260990908, \
-0.8236836349662753}, {-0.4071429702343112, -0.7895813247507549}, \
{-0.38982520400720716`, -0.7559965994847104}, {-0.38935589170628354`, \
-0.7550864518083995}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.3874430253076845, -0.7513767878930239}, \
{-0.37272009886735114`, -0.7228242925465461}, {-0.3538100689418976, \
-0.6861516552392553}, {-0.3353585207200648, -0.6503681615925081}, \
{-0.3173654542018526, -0.6154738116063048}, {-0.31092836936372126`, \
-0.6029902312779998}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.30901550296512215`, -0.5992805673626241}, \
{-0.2998308693872611, -0.5814686052806454}, {-0.28284297027097677`, \
-0.5485235985640893}, {-0.26648996084768595`, -0.5168098474051962}, \
{-0.2507718411173887, -0.48632735180396625`}, {-0.23568861108008493`, \
-0.45707611176039925`}, {-0.23250084702115895`, -0.45089401074760005`}}]}, 
     {Arrowheads[{{0.012675027004263794`, 1.}}], 
      ArrowBox[{{-0.23058798062255986`, -0.44718434683222447`}, \
{-0.22126477862616037`, -0.4291036559658206}, {-0.20752485164600062`, \
-0.40245751311155575`}, {-0.19446883013960567`, -0.37713768319760455`}, \
{-0.1820967141069756, -0.353144166223967}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.9731601273825091, 0.28996314098313436`}, {
       0.9515748061831958, 0.28353157092804243`}, {0.929953039052005, 
       0.2770891414300019}, {0.9270321401822262, 0.2762188293539685}, {
       0.9241118051224468, 0.275348685270965}, {0.8852464441525201, 
       0.2637683483611548}, {0.8466320428503883, 0.2522627874840717}, {
       0.8131593089700623, 0.24228923967818533`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.809159288509751, 0.2410973921455616}, {0.8086619732918084, 
       0.24094921192465468`}, {0.7712051114515284, 0.22978855192125747`}, {
       0.7311350550178051, 0.21784926351848988`}, {0.6920879282183355, 
       0.20621476759684323`}, {0.6540637310531202, 0.19488506415631773`}, {
       0.6491584700973041, 0.19342349084061272`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.6451584496369929, 0.192231643307989}, {0.6170624635221587, 
       0.1838601531969133}, {0.5812687717009353, 0.1731950519295812}, {
       0.5468673016649341, 0.16294477756527276`}, {0.5138580534141554, 
       0.15310933010398797`}, {0.4851576312245459, 0.1445577420030401}}]}, 
     {Arrowheads[{{0.013846569449199932`, 1.}}], 
      ArrowBox[{{0.48115761076423474`, 0.1433658944704164}, {
       0.4520593066196269, 0.13469575331929148`}, {0.42335597677860254`, 
       0.12614329885348396`}, {0.3961310374255255, 0.1180313461483043}, {
       0.3703844885603961, 0.1103598952037525}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.08625187132173129, 1.013865944252292}, {
       0.08433796008495918, 0.9913684680404788}, {0.08242451481681244, 
       0.9688764691558598}, {0.08051223447022901, 0.9463981635892255}, {
       0.08025429895020333, 0.943366205724896}, {0.07999644679362795, 
       0.9403352277739524}, {0.07639562152403678, 0.8980085622060396}, {
       0.07282669733258704, 0.8560568846380032}, {0.07209998148171581, 
       0.847514548790027}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.07174618423571542, 0.8433557639034703}, {
       0.0693293248873402, 0.8149462772707085}, {0.06589028729894247, 
       0.7745213793705337}, {0.062316232486957626`, 0.7325093928335009}, {
       0.058844707966997686`, 0.6917026203949603}, {0.05759429439569995, 
       0.6770043684412054}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.05724049714969956, 0.6728455835546487}, {
       0.0554757137390627, 0.6521010620549127}, {0.05220924980315264, 
       0.6137047178133576}, {0.04906024425676201, 0.5766890631635245}, {
       0.04604362519738531, 0.5412295735986432}, {0.04315939262502254, 
       0.5073262491187135}, {0.043088607309684085`, 0.5064941880923838}}]}, 
     {Arrowheads[{{0.013812613822826687`, 1.}}], 
      ArrowBox[{{0.042734810063683695`, 0.5023354032058271}, {
       0.0404075465396737, 0.4749790897237355}, {0.03778972620765068, 
       0.4442073645178076}, {0.03530757089526537, 0.41503034260502836`}, {
       0.03296108060251777, 0.3874480239853976}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.29639983926092567`, -0.9529583455065945}, {
       0.29549384191945205`, -0.9500454636045095}, {
       0.2945878641602542, -0.9471326446616122}, {
       0.28239768137500654`, -0.9079398554636862}, {
       0.27025818335366025`, -0.868910023401197}, {
       0.2582958260427562, -0.8304497183626286}, {
       0.24681550779019273`, -0.793539222340999}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.24557589950342443`, -0.7895537442618592}, {
       0.2339328777356575, -0.7521201383996743}, {
       0.22168878977851098`, -0.7127540380975486}, {
       0.20973619358867462`, -0.6743251161454425}, {
       0.1980750891661483, -0.6368333725433559}, {
       0.1959915680326915, -0.6301346210962637}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.19475195974592316`, -0.6261491430171239}, {
       0.18676893682976803`, -0.6004828392522846}, {
       0.17588119689836956`, -0.5654775482332237}, {
       0.1654118693719531, -0.5318174994861739}, {
       0.1553609542505185, -0.4995026930111347}, {
       0.1457479617738637, -0.4685958563921854}, {
       0.14516762827519025`, -0.46673001985152834`}}]}, 
     {Arrowheads[{{0.009791172984306104, 1.}}], 
      ArrowBox[{{0.14392801998842192`, -0.46274454177238844`}, {
       0.1365924021817867, -0.439159717213405}, {
       0.12789427547428747`, -0.4111942754747936}, {
       0.11965358165136598`, -0.38469953117635114`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.28051441284121453`, -0.9739086613651091}, \
{-0.2742790014731006, -0.9522601439963486}, {-0.26803440426566805`, \
-0.9305797346175356}, {-0.26719094140133764`, -0.9276513439484395}, \
{-0.26634765165907487`, -0.9247235543360928}, {-0.25510397415382313`, \
-0.8856870043169709}, {-0.24393501971938295`, -0.8469098828424647}, \
{-0.23430580411667495`, -0.8134785294134423}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.23315058889856147`, -0.8094677761146507}, \
{-0.23295493712707177`, -0.8087884992356651}, {-0.22212567678645057`, \
-0.7711907503888754}, {-0.21055250167975995`, -0.7310102286048445}, \
{-0.1992773881882062, -0.6918645370302923}, {-0.1883003363117895, \
-0.6537536756652195}, {-0.18694198017402194`, -0.6490376441629839}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.18578676495590846`, -0.6450268908641923}, \
{-0.17762134605050975`, -0.6166776445096255}, {-0.16729334188024983`, \
-0.5808201902913115}, {-0.1573692482768927, -0.5463650597380783}, \
{-0.1478490652404383, -0.5133122528499259}, {-0.13957815623136896`, \
-0.4845967589125254}}]}, 
     {Arrowheads[{{0.010607632639643679`, 1.}}], 
      ArrowBox[{{-0.13842294101325547`, -0.4805860056137337}, \
{-0.13003235363964444`, -0.4514550043424155}, {-0.12175967061811824`, \
-0.4227333512701612}, {-0.11391474370630804`, -0.39549681041009155`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-1.0133268400248385`, -0.09934627797400755}, \
{-0.990857835883566, -0.09714342313680294}, {-0.968393631943901, \
-0.09494103891001185}, {-0.9459414285082536, -0.09273983120925448}, \
{-0.9429128431945182, -0.09244290955815228}, {-0.9398852239313398, \
-0.09214608261837458}, {-0.8977058899138552, -0.08801083259188083}, \
{-0.8558963635472145, -0.08391183840331275}, {-0.847171179841626, \
-0.08305642385042433}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.8430172883370457, -0.08264917749733475}, \
{-0.8149191669568013, -0.0798944455915651}, {-0.774620126100821, \
-0.07594353897700629}, {-0.732677643509051, -0.07183150979757608}, \
{-0.6919331210459028, -0.06783692829172855}, {-0.6768616281538332, \
-0.06635932337375153}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.6727077366492529, -0.06595207702066194}, \
{-0.6523865587113764, -0.06395979445946377}, {-0.6140379565054721, \
-0.060200108300781714`}, {-0.5770631888909451, -0.05657511249847268}, \
{-0.5416381303305507, -0.05310204973532691}, {-0.507762780824289, \
-0.04978092001134442}, {-0.5065520764660404, -0.04966222289707873}}]}, 
     {Arrowheads[{{0.013777125140185833`, 1.}}], 
      ArrowBox[{{-0.50239818496146, -0.04925497654398915}, \
{-0.47543714037216, -0.04661172332652522}, {-0.44468146958151655`, \
-0.043596446025107406`}, {-0.41551602905971124`, -0.04073707445132907}, \
{-0.38794081880674447`, -0.038033608605190235`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.8970884232694676, 
       0.47560265536529245`}, {-0.8771886421131776, 
       0.4650525373238329}, {-0.8572554279727499, 
       0.4544846943673925}, {-0.8545628761143943, 
       0.4530572043002757}, {-0.8518708452350762, 
       0.45162999043671603`}, {-0.8178741493997338, 
       0.433606216644154}, {-0.7840800389303529, 
       0.4156898460188721}, {-0.7507993092282178, 
       0.39804565063271063`}, {-0.7495838358689711, 0.3974012522186985}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.7458962211839587, 
       0.39544621714003364`}, {-0.7179283618262339, 
       0.3806187064617229}, {-0.6815129084040833, 
       0.3613125980618561}, {-0.6459816601567221, 
       0.3424752621019289}, {-0.6113346170841507, 
       0.32410669858194135`}, {-0.5983916337834623, 0.3172448139934397}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5947040190984498, 
       0.31528977891477483`}, {-0.5775717791863686, 
       0.30620690750189344`}, {-0.5448623881409308, 
       0.28886561445533376`}, {-0.5133756856253917, 
       0.27217254503581106`}, {-0.48311167163975144`, 
       0.25612769924332524`}, {-0.45407034618400993`, 
       0.2407310770778763}, {-0.4471994316979534, 0.23708837576818081`}}]}, 
     {Arrowheads[{{0.012559682628836456`, 1.}}], 
      ArrowBox[{{-0.443511817012941, 
       0.23513334068951597`}, {-0.426298543455075, 
       0.22600750827512184`}, {-0.3998430976498543, 
       0.21198182257071935`}, {-0.374704008768348, 
       0.19865401996466886`}, {-0.3508812768105558, 0.18602410045697035`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{0.8957987673674175, -0.47817253916931723`}, {
       0.8759291047243303, -0.4675662206694552}, {
       0.8560259089179729, -0.45694200234832577`}, {
       0.8533374002050808, -0.45550689093195207`}, {
       0.8506494105298441, -0.4540720565750729}, {
       0.8167225531265543, -0.43596208350797166`}, {
       0.7829974999282082, -0.41795983243447904`}, {
       0.7497840781569198, -0.40023068745077706`}, {
       0.748516152888204, -0.39955387579697166`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.7448340875262236, -0.39758840921266303`}, {
       0.7169790120719846, -0.3827195205248051}, {
       0.6806234086111376, -0.36331309594242367`}, {
       0.6451498594291425, -0.3443775071655472}, {
       0.6105583645259995, -0.32591275419417587`}, {
       0.5975514730470102, -0.3189697458403174}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.5938694076850298, -0.31700427925600877`}, {
       0.5768489239017085, -0.3079188370283094}, {
       0.544190552845836, -0.2904859751157911}, {
       0.5127522666479477, -0.27370438790446366`}, {
       0.48253406530804416`, -0.25757407539432736`}, {
       0.45353594882612497`, -0.24209503758538195`}, {
       0.44658679320581635`, -0.23838561588366308`}}]}, 
     {Arrowheads[{{0.012548704148830813`, 1.}}], 
      ArrowBox[{{0.442904727843836, -0.23642014929935445`}, {
       0.4258047983645182, -0.22729229938863008`}, {
       0.39938749508555144`, -0.21319088571507416`}, {
       0.3742840389892248, -0.19979079656471413`}, {
       0.35049443007553827`, -0.1870920319375501}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.7883001018223736, 
       0.6399329187565167}, {-0.7708131509490984, 
       0.6257372139905057}, {-0.7532968535346553, 
       0.6115176860412912}, {-0.7509308905328747, 
       0.6095970246004272}, {-0.7485653855515795, 
       0.6076767349753037}, {-0.7195047928074498, 
       0.584085681399954}, {-0.6906102105025778, 
       0.5606293931819757}, {-0.6621334136513339, 
       0.5375122583703413}, {-0.6586809756786083, 0.5347096090955225}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6554404975250141, 
       0.5320790263539976}, {-0.6339904772489279, 
       0.5146661476153934}, {-0.6022367797821689, 
       0.48888886272828175`}, {-0.571233953299009, 
       0.4637211262340134}, {-0.5409819977994478, 
       0.43916293813258833`}, {-0.5258213713812487, 0.4268557166930035}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.5225808932276546, 
       0.42422513395147865`}, {-0.5114809132834855, 
       0.41521429842400653`}, {-0.48287868487873925`, 
       0.3919953397258201}, {-0.45532329771282604`, 
       0.36962619465558133`}, {-0.42881475178574585`, 
       0.3481068632132901}, {-0.40335304709749864`, 
       0.32743734539894637`}, {-0.39296176708388925`, 
       0.3190018242904844}}]}, 
     {Arrowheads[{{0.011887247532776021`, 1.}}], 
      ArrowBox[{{-0.3897212889302951, 
       0.31637124154895957`}, {-0.37898230341838457`, 
       0.3076534571325504}, {-0.3557466405187038, 
       0.2887910143341025}, {-0.3336460583984563, 
       0.2708500170036025}, {-0.3126805570576422, 0.25383046514105057`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.7866650660715946, -0.6420536142354879}, {
       0.7692157575226873, -0.6278119857420772}, {
       0.7517370287106641, -0.613546345268117}, {
       0.7493761279694496, -0.611619445347014}, {
       0.7470156832167771, -0.6096929175907673}, {
       0.7180218569448815, -0.5860289826440332}, {
       0.6891934542843908, -0.5625000617358822}, {
       0.660781597366976, -0.5393111135955213}, {
       0.6573237930811346, -0.5364889522529185}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6540902612563732, -0.5338498357033542}, {
       0.6327025788154137, -0.5163938186465485}, {
       0.6010178742064599, -0.49053366546629895`}, {
       0.5700820919180654, -0.46528476134671737`}, {
       0.5398952319502299, -0.440647106287804}, {
       0.5247489882659133, -0.4282851737207846}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.5215154564411518, -0.4256460571712204}, {
       0.5104572943029537, -0.4166207002895586}, {
       0.4819159796919737, -0.39332609246805905`}, {
       0.45441898883302667`, -0.3708838319393827}, {
       0.427966321726113, -0.34929391870352977`}, {
       0.40255797837123225`, -0.3285563527605002}, {
       0.39217418345069205`, -0.32008139518865075`}}]}, 
     {Arrowheads[{{0.011885993382320508`, 1.}}], 
      ArrowBox[{{0.38894065162593056`, -0.31744227863908653`}, {
       0.37823804210667294`, -0.3087071136750368}, {
       0.3550505962707238, -0.28978218101188236`}, {
       0.3329956408633844, -0.2717815547710369}, {
       0.3120731758846548, -0.25470523495250036`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.485515882639059, 
       0.8895074388528224}, {-0.4747221330967412, 
       0.8697323483679997}, {-0.4639126228868614, 
       0.849928382965715}, {-0.46245272027184064`, 
       0.847253714056836}, {-0.46099311835816076`, 
       0.8445795960590375}, {-0.4426233231754043, 
       0.8109245292537111}, {-0.4243654212125747, 
       0.7774744605855024}, {-0.4063861608344267, 
       0.7445348876007734}, {-0.40552853118108023`, 0.7429636352819289}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.40352884739463074`, 
       0.7393000401926565}, {-0.3886299592527087, 
       0.71200397778407}, {-0.36891023510045223`, 
       0.675875723379264}, {-0.34967131999401757`, 
       0.6406283530777783}, {-0.33091321393340456`, 
       0.6062618668796127}, {-0.323541495936652, 0.592756236621763}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.3215418121502025, 
       0.5890926415324906}, {-0.3126359169186133, 
       0.5727762647847671}, {-0.29493048443888165`, 
       0.5403383683904779}, {-0.2778879719834473, 
       0.5091149992939812}, {-0.26150837955231043`, 
       0.47910615749527713`}, {-0.24579170714547088`, 
       0.4503118429943657}, {-0.24155446069222375`, 0.4425488379615972}}]}, 
     {Arrowheads[{{0.009179327328402702, 1.}}], 
      ArrowBox[{{-0.23955477690577429`, 
       0.4388852428723249}, {-0.2307628506270175, 
       0.42277766718542675`}, {-0.21644670586103903`, 
       0.39654924146264015`}, {-0.2028432728475355, 0.3716265658260059}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.9691319981014365, 
       0.2934980752433163}, {-0.9475680512280076, 
       0.28696751293147515`}, {-0.9259745014816279, 
       0.28042798549801}, {-0.923058067046791, 
       0.2795447540136768}, {-0.9201422478284965, 
       0.2786617088454196}, {-0.8814460333167663, 
       0.26694270204279147`}, {-0.8430081924722521, 
       0.2553019427587367}, {-0.8093464385485895, 0.24510760390163183`}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{-0.8053517995597683, 
       0.24389784211808974`}, {-0.805217955920031, 
       0.24385730806212685`}, {-0.7679455801184107, 
       0.23256950559667147`}, {-0.7279840588021318, 
       0.22046730526369368`}, {-0.6890505204533048, 
       0.20867642580642853`}, {-0.6511449650719303, 
       0.19719686722487617`}, {-0.6455662400069212, 
       0.19550737077640534`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6415716010181001, 
       0.19429760899286322`}, {-0.6142673926580078, 
       0.1860286295190364}, {-0.5786001209437561, 
       0.17522692694619704`}, {-0.5443254676613942, 
       0.1648469737636458}, {-0.5114434328109219, 
       0.15488876997138268`}, {-0.481786041465253, 0.14590713765117883`}}]}, 
     {Arrowheads[{{0.010461331838926788`, 1.}}], 
      ArrowBox[{{-0.4777914024764318, 
       0.14469737586763673`}, {-0.4498984891468632, 
       0.13625010925050438`}, {-0.42131812181571193`, 
       0.12759464970745682`}, {-0.39421291439888523`, 
       0.11938593694026488`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.48360571718801604`, -0.8906696028306287}, {
       0.4728557164657386, -0.8708710385592774}, {
       0.46208989059575334`, -0.8510433286895127}, {
       0.46063587459115074`, -0.8483654284676978}, {
       0.4591821570900844, -0.8456880780078411}, {
       0.44087738992994485`, -0.8119756980317991}, {
       0.42268404144515925`, -0.7784685208145304}, {
       0.40476843329022827`, -0.7454728654020907}, {
       0.4039415024968614, -0.7439498848104238}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.4019498971295825, -0.7402818918599187}, {
       0.3870751249136517, -0.7128866254457947}, {
       0.36743191113606244`, -0.6767091924838089}, {
       0.3482676743000225, -0.641413904184577}, {
       0.329582414405532, -0.6070007605480995}, {
       0.3222856824384278, -0.5935621738397138}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.32029407707114893`, -0.5898941808892086}, {
       0.31137613145259063`, -0.5734697615743757}, {
       0.2937395561002337, -0.5409880083483917}, {
       0.2767634190074964, -0.5097226019551329}, {
       0.2604477201743786, -0.47967354239459953`}, {
       0.24479245960088036`, -0.4508408296667914}, {
       0.24062986237999429`, -0.4431744628690038}}]}, 
     {Arrowheads[{{0.009195029319691388, 1.}}], 
      ArrowBox[{{0.23863825701271543`, -0.4395064699184987}, {
       0.2298224384074289, -0.42327014065950286`}, {
       0.21556245771445126`, -0.39700715226052796`}, {
       0.20201251752194763`, -0.3720518644698668}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.647863451096509, 
       0.7792306492637175}, {-0.6334602588368823, 
       0.7619069233505743}, {-0.6190360526148933, 
       0.7445579224763145}, {-0.6170880476621314, 
       0.742214920781219}, {-0.6151404440625221, 
       0.7398724018216088}, {-0.5912553162315564, 
       0.711144089341611}, {-0.5675100623342669, 
       0.6825840130168851}, {-0.5441108397883119, 
       0.6544401327811797}, {-0.5411286749038885, 0.6508532746629023}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.538460305499073, 
       0.6476438402978819}, {-0.5209889294544718, 
       0.6266297953232459}, {-0.4948654711377387, 
       0.5952092863398966}, {-0.46936338456842575`, 
       0.5645361445823982}, {-0.444482669746533, 
       0.5346103700507513}, {-0.43172552930645214`, 0.519266465697067}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4290571599016366, 
       0.5160570313320466}, {-0.4202233266720604, 
       0.5054319627449553}, {-0.39670630780898297`, 
       0.47714640064632546`}, {-0.3740525656212754, 
       0.44989916173617645`}, {-0.35226210010893794`, 
       0.42369024601450844`}, {-0.3313349112719704, 
       0.39851965348132135`}, {-0.322322383709016, 0.3876796567312315}}]}, 
     {Arrowheads[{{0.008544795571834522, 1.}}], 
      ArrowBox[{{-0.3196540143042005, 
       0.38447022236621115`}, {-0.3113065177039663, 
       0.3744301048313848}, {-0.29221243799851865`, 
       0.35146432075946826`}, {-0.2740526721556278, 0.32962230126557185`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.9683516362969269, -0.29647182326143584`}, {
       0.9468079147120625, -0.2898759688437922}, {
       0.9252343310045869, -0.28327097179902316`}, {
       0.9223205700173348, -0.2823788908647232}, {
       0.9194074214786891, -0.2814869974385021}, {
       0.8807802445448913, -0.2696608496387233}, {
       0.842410231851966, -0.25791343558452956`}, {
       0.8087136138576968, -0.2475968342590976}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.804722663296716, -0.24637495953403915`}, {
       0.8046852803890168, -0.246363514333361}, {
       0.7674760911596761, -0.23497149953273766`}, {
       0.7275597479844289, -0.22275065888403556`}, {
       0.6886689297021376, -0.21084379429879863`}, {
       0.650803636312802, -0.1992509057770269}, {
       0.645084640857486, -0.19749997053170087`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.6410936902965052, -0.1962780958066424}, {
       0.613963867816422, -0.1879719933187203}, {
       0.5783318524701077, -0.17706284816913537`}, {
       0.5440898185309686, -0.1665792615735284}, {
       0.5112377659990051, -0.1565212335318995}, {
       0.4814556678572751, -0.14740310680430418`}}]}, 
     {Arrowheads[{{0.010443900568524336`, 1.}}], 
      ArrowBox[{{0.47746471729629436`, -0.14618123207924572`}, {
       0.4497450680108074, -0.13769454743309517`}, {
       0.4211873482629802, -0.1289512780209585}, {
       0.39410253563073555`, -0.1206589558078387}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6460572855421334, -0.7808719138650253}, {
       0.6316960070950738, -0.7635138262194481}, {
       0.6173135997578116, -0.7461302006574981}, {
       0.6153712225101469, -0.7437825019738448}, {
       0.6134292441044881, -0.7414352853597037}, {
       0.5896080902173132, -0.7126433029107442}, {
       0.5659262688371189, -0.6840197278829598}, {
       0.5425894741976105, -0.6558131773162615}, {
       0.5396316539917412, -0.6522381402774212}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.5369710132029814, -0.6490222959377311}, {
       0.5195291415542197, -0.6279407788640127}, {
       0.4934791724963005, -0.5964548879846729}, {
       0.4680486917797872, -0.5657177558572213}, {
       0.44323769940468005`, -0.5357293824816579}, {
       0.4305453816525891, -0.5203885223501271}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.42788474086382927`, -0.517172678010437}, {
       0.41904619537097887`, -0.5064897678579826}, {
       0.3955948349177454, -0.47814474470034074`}, {
       0.37300427328404095`, -0.4508401457228773}, {
       0.3512745104698659, -0.42457597092559246`}, {
       0.3304055464752201, -0.39935222030848616`}, {
       0.321459109313437, -0.38853890442283295`}}]}, 
     {Arrowheads[{{0.00855357113372249, 1.}}], 
      ArrowBox[{{0.3187984685246772, -0.3853230600831429}, {
       0.3104328324801411, -0.3752117427510993}, {
       0.29139181966466643`, -0.3521973871329728}, {
       0.27328250802879617`, -0.33030915345410666`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{1.01108429046113, 0.09394422722638013}, {0.9885961208174775, 
       0.09185475383742546}, {0.9661155613482667, 0.08976598754278894}, {
       0.9436540273151581, 0.08767898898394767}, {0.9406248462140211, 
       0.08739753462810432}, {0.9375966847727312, 0.08711617501328035}, {
       0.8954234225320139, 0.08319767428273026}, {0.8536305368766892, 
       0.07931451599069578}, {0.8448480364776695, 0.07849849578260315}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.840692130128083, 0.07811235249650872}, {0.8126795139868386,
        0.07550957881996567}, {0.7724165251357682, 0.07176856987627706}, {
       0.7304787244093531, 0.06787194689638669}, {0.689749530647608, 
       0.06408762083218131}, {0.6744558761446227, 0.06266662105273171}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{0.6702999697950361, 0.06228047776663729}, {
       0.6502289438505326, 0.06041559168366091}, {0.611916964018127, 
       0.0568558594508255}, {0.5749873289552127, 0.05342456686674682}, {
       0.5396137764666111, 0.05013785666449664}, {0.5057963065523222, 
       0.04699572884407497}, {0.5040637158115757, 0.04683474632286027}}]}, 
     {Arrowheads[{{0.01036540195029792, 1.}}], 
      ArrowBox[{{0.4999078094619892, 0.046448603036765845`}, {
       0.47353491921234603`, 0.04399818340548178}, {0.4428476488577171, 
       0.04114689600407453}, {0.4137525298994702, 0.03844354229521063}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.08511344030598114, -1.0099329439176128`}, \
{-0.08321630715162297, -0.9874220776584561}, {-0.08131998236657093, \
-0.9649208032897245}, {-0.07942567850478421, -0.9424435086470554}, \
{-0.07917025008372269, -0.9394126644429496}, {-0.07891491080782694, \
-0.936382878011146}, {-0.07535604538796262, -0.8941543484443817}, \
{-0.0718299550775639, -0.8523147194163667}, {-0.07109301734228957, \
-0.8435704165918776}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.07074250676819728, -0.8394113534087342}, \
{-0.06837559795067802, -0.8113262568426891}, {-0.06497998798262254, \
-0.7710348720848195}, {-0.06144349836933618, -0.7290718477558713}, \
{-0.05800965851156194, -0.6883268375196928}, {-0.056722083804505725`, \
-0.673048826082999}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.05637157323041344, -0.6688897628998556}, \
{-0.054678468409299824`, -0.6487998413762838}, {-0.051449928062549846`, \
-0.6104908593256444}, {-0.04833855605736998, -0.5735721649629477}, \
{-0.04535887097981823, -0.538216031883367}, {-0.04251087282989459, \
-0.5044224600869021}, {-0.04235115026672188, -0.5025272355741203}}]}, 
     {Arrowheads[{{0.010325154025316783`, 1.}}], 
      ArrowBox[{{-0.042000639692629585`, -0.49836817239097686`}, \
{-0.03979456160759906, -0.4721914495735532}, {-0.037211309417113404`, \
-0.4415392813585238}, {-0.03476248836261939, -0.4124822364570174}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.0075753459503238`, 
       0.1009690983610271}, {-0.985094710175227, 
       0.09871631445368238}, {-0.9626245667425375, 
       0.09646458198368857}, {-0.940180654165866, 
       0.09421547810707191}, {-0.9371545424168345, 
       0.09391223152996234}, {-0.9341295041498285, 
       0.09360909252645773}, {-0.8921269758429942, 
       0.0894000202927335}, {-0.8505126455723392, 
       0.08522984937379045}, {-0.8414550785898054, 0.08432219082969569}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.8373020719057924, 
       0.08390601814141241}, {-0.8097427632834565, 
       0.08114430056442463}, {-0.7696652456611486, 
       0.07712813359970407}, {-0.727810539988412, 
       0.07293387466817328}, {-0.6871701663844545, 
       0.06886130392064609}, {-0.671181804545274, 0.067259110610081}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.667028797861261, 
       0.06684293792179771}, {-0.6477441248492765, 
       0.06491042135712255}, {-0.6095324153828776, 
       0.06108122697760263}, {-0.5727064621526124, 
       0.05739089919329364}, {-0.537437689325835, 
       0.053856616415402826`}, {-0.5037260969025459, 
       0.05047837864393023}, {-0.5009085305007426, 0.05019603039046629}}]}, 
     {Arrowheads[{{0.01020418349800342, 1.}}], 
      ArrowBox[{{-0.4967555238167296, 
       0.049779857702183}, {-0.47157168488274426`, 
       0.04725618587887581}, {-0.4409907125711604, 
       0.04419166746472994}, {-0.4119994392725237, 0.04128645274598295}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{1.0073620238680052`, -0.10423459819726096`}, {
       0.9848891154410331, -0.10190926279180772`}, {
       0.9624265742061028, -0.0995850001090414}, {
       0.9399899509512776, -0.09726341923299235}, {
       0.936964796115308, -0.09695039790467086}, {
       0.9339407121100036, -0.09663748737822742}, {
       0.8919794264402485, -0.09229563445147812}, {
       0.8504051234663782, -0.08799382371895403}, {
       0.8412963814684407, -0.08705131641796217}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{0.8371447404084515, -0.0866217343734797}, {
       0.8096730593948969, -0.08377916182815373}, {
       0.7696314821569696, -0.07963594656324435}, {
       0.7277967595931467, -0.07530718947908278}, {
       0.6871745792964047, -0.07110389757328983}, {
       0.671079098008887, -0.06943845259418094}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.6669274569488979, -0.06900887054969847}, {
       0.6477649412667439, -0.06702607084586552}, {
       0.6095678455041639, -0.06307370929680983}, {
       0.5727547778788916, -0.05926455705420788}, {
       0.5374972242611531, -0.05561635824614472}, {
       0.503795184650949, -0.052129112872620384`}, {
       0.5008618145493333, -0.05182558877039968}}]}, 
     {Arrowheads[{{0.01019140226741947, 1.}}], 
      ArrowBox[{{0.4967101734893442, -0.05139600672591721}, {
       0.47164865904827846`, -0.048802820933634826`}, {
       0.44107413130295087`, -0.04563918805975669}, {
       0.4120880852647746, -0.04263991988155455}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.11392232575657138`, 
       1.0043446430643108`}, {-0.1113791780602017, 
       0.9819241319976038}, {-0.10883742709799439`, 
       0.9595159346057136}, {-0.10629707286994944`, 
       0.9371200508886403}, {-0.10595437254615073`, 
       0.9340987885320491}, {-0.10561179766330354`, 
       0.9310786320688537}, {-0.10087374237769348`, 
       0.8893077112853959}, {-0.09618000339022328, 
       0.8479274850944303}, {-0.09510567300594604, 0.8384561373216006}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.0946352566871804, 
       0.8343089246780329}, {-0.09158161334933246, 
       0.807387859752182}, {-0.08706156137220789, 
       0.7675388665065761}, {-0.08232685845044814, 
       0.7257975003222921}, {-0.07772984462936708, 
       0.6852700077993521}, {-0.07581860393655507, 0.6684204189353227}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.07534818761778943, 
       0.6642732062917549}, {-0.07327051990896472, 
       0.6459563889377568}, {-0.06894888428924106, 
       0.6078566437375057}, {-0.06478420861789135, 
       0.5711406649085792}, {-0.06079576374261081, 
       0.5359783451609572}, {-0.05698354966339946, 
       0.5023696844946399}, {-0.05653153486716408, 0.49838470054904466`}}]}, 
     {Arrowheads[{{0.010044054707503611`, 1.}}], 
      ArrowBox[{{-0.056061118548398445`, 
       0.4942374879054769}, {-0.05334756638025727, 
       0.4703146829096271}, {-0.049889576859246526`, 
       0.43982888279858673`}, {-0.04661134406642948, 
       0.41092782655418647`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.1121359663955865, -1.0046292062509556`}, {
       0.10963290169930534`, -0.9822041808122065}, {
       0.10713120225309972`, -0.9597913866864235}, {
       0.10463086805696963`, -0.9373908238736062}, {
       0.10429356568590571`, -0.9343689226567112}, {
       0.10395638660070139`, -0.9313481259612223}, {
       0.09929077648823649, -0.8895487966771032}, {
       0.0946687984765012, -0.8481403685831373}, {
       0.09361588954491647, -0.8387073285140758}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.09315288762364972, -0.8345592815706538}, {
       0.09014075207853854, -0.8075734763997231}, {
       0.08568987079000087, -0.7676979085533945}, {
       0.08102916579236401, -0.7259425243278917}, {
       0.07650401766811088, -0.6854015978583325}, {
       0.07463281077297966, -0.668637403833774}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.07416980885171291, -0.664489356890352}, {
       0.0721144264172415, -0.6460751291447174}, {
       0.06786039203975586, -0.6079631181870458}, {
       0.06376088738855508, -0.5712355432961407}, {
       0.05983488531654027, -0.536062382782824}, {
       0.05608238582371146, -0.5024436366470962}, {
       0.05564973200104283, -0.4985674791534722}}]}, 
     {Arrowheads[{{0.010058162150126776`, 1.}}], 
      ArrowBox[{{0.05518673007977608, -0.49441943221005025`}, {
       0.052503388910068595`, -0.4703793048889569}, {
       0.04909962719050993, -0.4398849100529197}, {
       0.04587283327993364, -0.4109759746834979}}]}}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
  PlotRange->{{-1.0434517305537323`, 
   1.0434517305537323`}, {-1.0406555277349125`, 1.0406555277349125`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766116205808024*^9},
 CellLabel->"Out[191]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQfUZcV1oPtbHcEKtixb9jig0VjOnnkT/N56a9YL64WZNcPYki00loVs
S5YlkhBJSGRJIESQQBJRQCNyk5Oa3OScczTQTZNEaOgGmijk+/ZXp746+57/
Qt/22B7PevrXug1//efWqdp718571x9++oubfnbLT39xs898+gP/cdtPb73p
Zp/Z7gP/YattY2jOT83MvOP2+Fz2gRn+fzQz4z/9z538k0f+Hgc2L/+ZO3rp
pZdGDz300GjlypWjv/3bv91l8vA76/Crr746WrFixejJJ58c/fjHP/5SHY7/
HT3++OPlT/HIu/4+5t5v8ty/0S1/4/KfOaPPf/7zo8997nOjVatWxbPd2G67
7VbGzj///PitG3vqqadGe+yxB+Mz7yj/zhntvvvuZWae2GHK595Rn7vpppvK
OzbffPP2jmeffXZ0yCGHjH13yy23HC1evHj05ptvzmxbn4s9j84555zRFlts
0Z6LeUZnnnlmfeKf9j52eRvYT5pvbfv99XGUbrbZZmWK5557rk27yy67lLGY
pi59vUJGW221VRnfYYcdRkcccUT5L79/9atfLUv98jo8K0huuOGGMr7JJpvU
sfVHr7zyymjnnXcu43z23XffAiLX+s1vfpM5tqlTnHXWWWmK7373uzEW/1/G
YvoGmf9BtrXz22AmTztnyu1PgfB77rlndPPNN0PHDTLQEM9B1y+//HLhZvwX
umZ8yZIlDTLTPCtkgn7Lu2677bY6Npe/N6gsW7bM4fhfyLgMX3755Vsn1iUe
rr32Wp++5pprytC2224Lqt7xP9Te3g7pk2adDgb/4q1Rv14d22677crYjTfe
2ChKKttmm20qGNb+3II6tv/++5exgw8+uG3gjDPOKGN77733zNZ1LPZcxnbd
dddZfOfSSy9t8/1jr28SItabcs0V3P+p/gmcHX300Xzi9fw7Z/TMM8+M6s/M
vAmvWlgRCa+Ral5//fU5dfi1115rwzHVpnWGN954Y3TMMcekN80dLV261Dd1
xwFRMI/JRvknZmxiIi/O/a1evbooA/HfNnbHHXeUFWy99dYNn4grxk477bT2
XPx/GTvyyCNn5q/TxrZfp6fnT7nWt8Pt2tY/wO1JJ53kCgLiHfgeeOCBKXA7
p2gFjMX5bc95lmOOGbEKlxl/x/zRfvvt11CX5pk0zbsSGQ6xdeihh5axiy++
uO0WgmEsXjEzf8qlbj/lc5PW8nbYWNv6Bth49NFHR9dffz2fgBT/zhmtWbNm
KmzcfffdZWynnXZqz+24445lLIinYQPNGIbSv2P+6P7772/YSPNMmkaIcsau
u+66wszd2YEHHqhC0DC01157lbF4tj0XjL6Mff3rX2/zrW3520/53LTrezus
rW3NbyOOxIbHNZbWlqlmfsstt7TtrO25bjsLRhdddFHjFKeccspo+fLlhUVw
pGV7bFdK+UKdK5arbG1bCdGirtfA9d97vTu+DTrWtocp0IHyxFhI17ZsJe1d
d93Vtre25wTXfffd11javLqdo446qm1nq/pcSGI1o7Z0pe83vvGNNt8/9vp2
ehtwr23NFdx/WjF92WWXjY477rhi//GDjTbUAsA+Y6jzYdfNHbw9dMiZ7ad/
tNvkwsIZpbELLrhgdMABBxRaWbRoEbSo4cwwj2AuOd25555bxrAy5v/3XOSO
U0BxvSk3MkCMCj9ThVY3UT1Di9LGeuSRR9RLkEPuL6y97dfpaTVUTUqg8aU6
poYanLhtITTYMnbqqac2XPxjrWvXKWC13pRrHwN/J4CwhLvD1/0b07Uj6HLq
M6MTTzyxKfwnn3xyGQuMN8Ngbc/J6g466KB2fPW0Id8Z23TTTUcvvPCCVlb8
b9tpkPQ/xop2XSfoTLvyCvqP18lxHcGxsuto9uTzi7bHLBDIhRdeWAgmzFy/
Egy1fWX7df+KvPjss88u6wzDO3hxACjG8Fb63FaVU+CG4bk999xz9OCDDxYe
jjum8t2F/6QW7YFeG6gXTre56tv5REWv/sB6BNevL/OUZqKBAfqyL0/5nIR+
6623zpKSoS8OMDOnWG9Vyrb5cIBVZt0I/R97fTu8PbjWtuyB3oTKhoYcEmvm
p8vYvKJvnHDCCcW9h+M1jmPVnCf/Lb8aSotPPMm/c5po44mtK7EhHdn54Ycf
XvSTK664gu/+Q79+x7fc8lsu6UMdsEbt5x8yzLL2gX/V/QbG+edY/vmp9KcO
4W3D754w9s+mHPul/4bv/mTs7x+m7+Hfn/oJwv+HGvsJwv9/NvYPjvDfnTC2
34Sx/accm/Td35tmIaP28/2fPP6Txyc/Pvb0aHQE/8z9J73inzz+k8d/8vjf
w+P/vPxnVkrW+us2y3vr4/hQ+cqxxx7735Q+tPDv9vrzzjuvfKWLTXdjf5dk
lr/H1//d0yoWvNUi/qD+4dXX3hi99vqPym8qNJ/f44TRh7c4aLTiiZXdw/95
msVOm3rwlkv6d/UPh5542WjDTb47WnLZ7U132mS3Y8vYoz987i2WNDMpt2BO
zi1o4ZRJq15bUH2tqz7uB9eVFR7/g+vaqj+769Fl7PGnVjXgXnXz34wWn3PD
aPnjFbj/csJOZsfT5+R4+tvuZG0B6bXuJOBeVn3wCZe2nfzVTkeVsR8+u7rt
ZK/Dzi1jl9/4wFvvZHYsek6ORb/tTtYWpC07mdc28m/qI1fe9EBZ1zcOO7et
/y93OLKMPf3ci2392+59chm758EnuvX/TptvCjJfW8jyLcH8ixLM2deOdj9k
yejNN3/clnTH/Y+VJX3pm6e2pf/5lxaVsZWrXmrP/cWX63ZWvvAWoH+7pa8t
/LfWpX9m546uHwkG4ZLi/8vYJl85ti39E188vIyteuHlme67c0dvBkH84aYH
jP7Lpt8d/ejNNyevvphHM/PLSqEeqOj88893J9OGy9a6ka8fek5Z4GU33N82
svrFl8vYx7c9rG3kT7f5Xhl74aVXZvzus8+/WMY+uf0R7bml1947uvnu5aPX
3/hR96L3vtXOlBTskKjgYGdri0StdWeLl1xfVvf906+qO0M8/20BO+OBBjf8
sa0OLUNrXnmtbe7eh58sY1t/48T2deTtRvXZ51evebv9zRldcskl5gE34UyG
mYtdt+jPWrd73W0PlXXt+t0zGzL+bLuO+p4P6nOvf7LlwWUsxF7bKxyZsSCG
9lzImTIWfKN70c8NN/oz5T/zitP5W9/6luy6HLRO8Zky3vM2u3rq2RfKKjZO
JLbpV48rY8gPV/uRENaMQXZ+94ylt5Sxw06+vD13cZAnY3t+75y32NXPVvgT
b5XDxY6mjTdMwtMbdeyNN35UBF/wvJlfHpBeRtEO+51Wxm6/79E29oebHdBR
bfBKN3j4KVeUsdMvvLk9d8jiTnU49YKb32KD8sXnn3++RC3RSNYSF1hvwqZ+
VMfi8FdsPNswFMy7jN16z4pZsvKKmx7oxt7Br/71G8O/xtg2e51Uxu64/9G3
2MokJd11feeYpQ0Qrku9ahLAfnDpbQ2wsAnGglVMlJVy8jd+9Obow5sfWFjK
y6++vu6L9OB9+VuntUVecNVdZeybR17QXn5C5WUhMdsieTljsYAkFRc1qehz
Dyx/qozFsenA+L7pVzgXllhoj8/Lr7z2S4NJN//a8e3l51x+Rxk78PhL2stf
ff2NMvYnnz+4l39v9vIv/t9HVbr2P/qidVjnmwOSu/qWBxu7RqvnRaw9zp4v
ikcat3MM7DG20RcOaWPPPNeJt1A/2h73O+rCMhZ7/Tss8tQLbirf/s6xS2fp
9Q+teLq9+a6/ebyMbb/vKW3spTWvlrEQxLNkVJyUtkLn+5tHnhqbL3RZnp95
bZoFL0voQ0vbYb/TG8da9tizDSxuYu/DzytjS6+5p71UAfK53Y5pY2oWfxaa
hWMqq7BkSSQoraPtYOuhIvkoeyjHICyMddhHp3KpMYaG6VYcevjRZxr8Tj7v
xjJ2+MlXtCWG0jML9sh/JdMkiePYbfc92nDk9tAjPKoPrnh6qq0sr2NaWfsu
Or+h5LvHXlzGYu1tHzfeubyMgbr8Xg4E4wHW99dH1eMCHL1sObnKlotuaWOC
5tATL5/FXVATXp9+H3OxQwoHAMUvrnlVSrrm1oca6f9SW99LDfyObVwV6+dW
r5lxHyoLn9rx+219WbD0Ou+SMnbp9fe1sWPOurbu7bKZX6ljp1148+jJZ1aV
3/5mmr09Usd2O+CsMtmZF99aj8jcwmH+aLMDC/xferkx0jgJ5dHAQVtLMNVG
lu6NdTAWhkd7TgF570NPtDHJ6vGnnm9jm1WF6bZ7V1SSmct3OvINOMbpWKft
XVtVTSSKJBhkVsauTAJ8x/27sRvvXNbW4hhrcW+P/fD5WZxCmw9z9f11zWH/
lbH/uvWhkLLDgobhoGpXtM+i88vwMWdeM/Pg9Nvr5JNaTUh7KTOUhiaf3OER
p1xZxk6Kg+fK9znivGZRucMV1TQEYu9Pr+EAVDHoowJ35++cMYuv9Gd+buE/
0lMQz1Q7XCGxn3lNt5WjLmz0qfUKQQRwfbUK816Hn9eWE+e/jJ118W1th0qF
LXY/vo1lAep3j66vjvPWxpTd0I7YU+NBKjw0/d7m4p8pX/zjzx/EORN7n6ru
jweTmI3zNYvuTjz3hkY17iO+U8a+8PXFbczz07P1OaOdKm1fd/vDDcurQ3SA
ItTEYAFCG7tfGguBNNUOH61jO3/7jPK97B0MnauMxfLHtFMoBAILQe7Kz7vi
zvLoAcdd3HYjF8fYdSzLZXeDANFiCc7royH2q+15VkPgFfXrm3/tuJmH12V7
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
cbDENydX/QH1saflvqy6NssQXmraZNKmNEI9tNziKB71pJJkOvSRoag7dlCK
vYvY7GQZ0g/io3fQ3NSMAU91bi6vRm4GB3gKILYE9KDUYXEUpqj1PgLDPFOe
DUsto1kLNoSRaB46VzDCd50GzTa9OaGv5in6TR9lt1lCx8tsliCajWOxprsf
fEJBBNAlu1BvlOa5GUY+DiZJB6pFr71dYZTNZRYmg8QTtpyYU0+nD4VY0gdL
iw2fM6cfz5zPmQqFZ8IxVZRrk1cv97F/i/RuD/KkyspcvC+GoWtZX6jYDcOh
lDcMn3aVZ41zOOZKCe73lWkw/PE6BoERtUZf+O06KVeF6cEl+hJyu2Ed3VmG
ba+Eln1apScneOWql8w+JbiBwoxdO6wOr+0whiltfS1Fz0ZRAZNH1JzmoKOG
SjhP5bgNbYZFKb71uexW8TmJ8LZ7VzRm//x4lZwrMvutttAX8QZnNuuasSqL
87WlkOll7X7ZLuhgqeJxZ18rsq9NyD6yR/Ykh8rkriYTkd1f6YEG/sTTq8Q3
eqUWDXoZmY0mH7NCy5v0paGefmrQMqGLkC0sxoI2+rZdG86yBpSA1AKQ1BtI
i99kA7lRhjB9Lt1cFHqcbMDzRUBTBHr3RM+9O/1fBhgrE//e0sOxHVY0Q6V+
fZBQ5aNmhH7toD7F2UOI0zZn/ZhSHgaQBAEoxC6KAFe3eZEwYr1vXdZdqujx
IoTg98Jq6NT49cpbkkujlYV1Eu+oooF/bXoq6W5isLEVcgYFONbxWxXDOFhN
oGP55owhK75y4FmW8YLhYWMF6/zxnmqQwJL5IR2CCkypAaLTMydvHPTUGBZ9
cHNpqxWqqaXZwWaPW7RJxwzicRGB+BWXnNR3DeZD0XHMNuykWzmfTWGJG8gv
BpcT5PIjVRD5Yr7LMI6LZNH1N+vMMtw1meuiO0kWLQVrYXGEoAzxg0dTCblj
556ZqkfKn1WKgCqNXhShEPPGRqQIDHhvsEHZ5HVqBrEhKYJwo2ympj43ikBG
mCqEM4Qzj78A0SNFIAjoNESsVT6Se2x47KwkAYbJQaceyQULvRb4qJyqjZks
QSMUMW2JMD4vx3o/zkNtLOdiyUQgYkMFIaAk0HxxQuZ2asdxjDNjRNZiOKlK
aYGiFceJzMRgKmbAxApaE0qgk6DkvsDz8pYU9Rv1ZZBavcW0w//aiGTjil5e
7WnCJoW5/lZ9P3xYF1JIGN8PhvW66mac1KPB9Avk9ie/dETpzu8c9aKJ8kRO
aCjK+NEXNd4x6M3xnrQyIypBDeqUeB8/ItJeekVcwrqdJFl/Si5uuHPM6Bwx
Nce2TD4hx/q0rZ6xaIxu36J9nSySn8ZCW75w9ZVjt0ov6Am6U99bD1jqz9gy
CzmrWPoSDznKEk/IMa9EQgXIFVaIdb5K9dpvpbOJEUDVzyemoZpPVtaCcyZ1
KSz/H2POi0m20SAXgZrvmtjWqIZohs4Wez7kcjbCtHC+wKfmFeEJp9E6w4z/
SF9rIpfJ/T0EvH5A7t31TMuNgk4bOzHdhwDVkJ1QNtHYSQUCSQOONeG0ek0b
053Zd3XoI8v4H12LrX1z059BUr/bAwoUeoyaqF1QMiU+1ZUdF7Fr0wzUaOkF
MpVejpFeuvvbTYgT2MC+Vu7NfKiiHk5DcFSAcwxjp1Mxnb+oeKd6wcowoIVT
/UP1eRSTqi63NHAsYueQduAMrZNEaIboXLoe2X5NyW9z4Mt2DglH8x/FNISz
w1Yi194hnmWAW9KzYjiYuqSicc+F4b0+0clVonqi28BNZhk+F4ur1eXjvqrY
lMOvjCeHOYwg8AiFcSAd5dsz+tKUjlYPam65LnWVfoCEpe2RopDCPy4txxma
SD9WH48n2hvGAYCEHnniX9TZoeZtUzcsXGAhuaZiP39Z58Cczff9cZJC2zGB
BAiikuE5Ev01llKeULUhViOLNN9d8xdrWhbmcaimzxgJAX8FRCvE6ev2cgdQ
kc2VekosPZDIziSarIukFYVjqh55TN/7zXcvbw1EbbxP1++ht4RMA8dMTd20
ZSrOutljaDqX6oLVa9w77mOFfogVmRDeYcH6RwH2LfY4viyUlkAmmGYiOrYn
Ii8dy0REOBHTGuFg4jG87/TEhGDXN9/9yCenIaJP1TnwVZFtoeqG8RRGlJVn
8DncfrQjcCn4ww1WGX4bdMYwbYFUwy0H7DR3WxaGD6XrzkM4OMyjqR1Ki37U
IC/eMccMfnKH2FAVwda18QiJ0xt2dlRZAocokLmg/HlhUT/gBuzbs0UpAFZE
SKX1B5SEkuPbzJWB2B3TF4dl7Ur1dofROKv0kfyZJrirUOXWBbWjSdEk0EEy
FFUEBkkRoBJWzClhQaqfGDR24jGMRhL5fr0CCWtnuwF3Cmvmz6chrL+qc4D6
3IsGbSgOk4QF3SGMuFNJyiCS5DQSFnn3qXGHhAVzq2btxEuG1JwNTqF5hBaa
axvLxo5Z2k49KFdJDa2hD6Rc3lDTR0y65FMqUG0mT1YMyqlWMGySFbH4RGC8
BY7KWUX1Bsz4nDjDofIvLI/Na53Xm7cvxKpvN1q0NHmA9Ej0TqXxu1aCw7pP
43AItbB+PWsm2eLSi1OQLx+TZGQAcDssJp7QG5jr/wMUHcUtKGjWonF2osYE
FaW2wsaCgMfZ2PK/nIbaPpPmQI+RVFCQA4m/UcHJeVXBrQUgMzYMwbZWQwxJ
bmEIzEPtbNya78JghhxDIAnC3CImaSH6SjCspSpZfC+Kuj3Ihr3IJQTrwjr7
uSl7KUAl1YMcobGgzm41b2a7OXNofiVGrBH0m2PO6gQtIWQcPmimwfHkdp9K
WXtqXMpITkxyVOSrYvLBMqYWal8umdd/vNTWT+NdPF07FOStIBIcqokEF/bM
BhVtpoVCAFSmhcLYlHaO7RhbO6awtU9NQ2ifrXNg4luoAyUBsmBGv1FXhVuN
8wl1xKulsUF/k5ag/8zq5hRviV/jnfdXPLFSppV71QwLo8vVgi+/pq0PgXr0
g+nbH8woN8cBTxOhioV19uTZHYP7kLbSfVRjMmRN9bssqP9q16H74JjXluRC
z/XrMs07qxmC6m6ap72vc9alNu5fdwDoTvzdA4Dkl7CYoWoJYymUhD56nbeL
ckpYJyy5fgMx+8jThVGDyphKmmJWDPSeeS0igeCvpqGpz9U5cI8Ux2F9K168
IKTfrG9GGuuoDhtBv1jmuKF7SFNoZqgd1UUgTVmbjdERwy1bZ7xdzjB5CCtt
6B1G7KxfGQjeU2Qp1h9BWnS9bffuiCwU/fXqV71ZLIO+NnUdo63U2Lc9l4uf
fW5So8ZzOwurgrSj99pMdCwfUYnpIcZokMjyHTwtXNdVDxhUCKjLwC68uqO9
0kh39RoNx3R1QfnwokeeWKlqNiAvsQmTJBsOWlj94su/WScrLCtpUXjc4qR9
Zhry2rTOAVSNy3DCgV7Ild+sX4ERsAWunXQ1KAPGnuJ8zKmP1phG+S13y7qn
67Lb5CM+WAEWX/dU5lY+wwYfGBjvrgu2CtWLIbAuAxByqnzVi9j/dup2K5Wk
7mONmtCnhs8x/bBmKPtafG7SRSPYgi+Pcb6F5RDA/Y6oTmPVWnTWeNd6Hr2V
tadFvDoO7TDPDvtYLmdVBbIiWFU+vDp/YnEGXLxOp6rM5W4mqe+yRH2Le+rD
vPHFB59w6W9URMjcFCXgNMjls9NQ32Z1Dg5Pro5lD6FIKDBtP8uiwg7Vb0tY
329U30lXUPntM5pzwmvXCHZIeZ5g8BIAzsGJ1I/Ig81hM6oThqOKmHkznIpn
QhGnEj7AIP1h2dTDMdF0kV7Y+dD/+0hX2F4ppcNXKlcsH/Yj57QrQp4DkI2/
a2HLNv7j0B+BML+jc2H3BGtxOsP81GgLhEElncPEOdV/b7/v0ZzbomG85/fO
UbyYkoSUj6dzKWUjt3NaXze8Xzlljyhyr6Stap1R+RAaj2V9bhqa26LOwWq8
RBXBDA0HLWtwsAezlvmQKxdA+pUK0dROtASfrCImGuJ+0fOADm8JzUkdw6oT
LjOT65lgiy4i1zNxFvvTbIVc766CDm5YAl6qLb9+wmibkK3/devvKfNF6179
lSeNStjzkNL26y+hLXAhPqUulstb/3KHI9X9kfDDqXMur8SuWy8fiivSdRMe
HmtiLks5bnpJuCpMCBlxw5BQ4Oq7wXINGamfG2UPCBBbzYSnAEsNBZF1H0u5
g9zQks1QAnLyCSyb0DQ3HRKeq3nppZdGDz300GjlypXZQ/3qq6+OVqxYMXry
ySdjyh8Lx0ymn69vBLZ6g/hwaH/47OoP1cWyB+1ZPIdcNS2NWroHf5Eg6k1T
rbgbeaPGjzcCz6N+kVXJadluW5g71hIqsKxAhuPJVZF2MMgQ5uIUlbPGzJuP
gJSUIY1YKf5WAllL1/TIKi5+ug7nxl2hAzhsvgifLXY/XoDn5FNfRuqHPQJ8
2UuprjxZUIOqQ7ki9pYB8RAkwo1Ka+EWbELKRMTXDTbKzKrVST1lYlY5vFdN
d5QyZ7HEOMax1M2GlOnZeeqpp0Z77LEHf4mt8++c0e677z56/PFiRDSOc9NN
NxW63HzzzWdU8Z599tnRIYccMvbdLbfccrR48eJgF2+2c5zp+QvtdC1r5bRA
g0zFufX5zN0ssiPyYOY5wqrvpD9ndOhJlzWaEn32JhyNegcfDltFeHBV9QC9
WYjwoPWWtlIjClSSv6euwkbw3NzK6oOGmvjNnvh2+2BKfJSxZhfXhsWoeKQx
VjR7Vxj8XrJF97Da9brbHnJYQb5hsb5ul5rT/UcNHNem3kCiRX8hepLsNRdT
Dut5+8Y7nWi36U+cHmUauahE1/nNwMUYEZ93o6Ek3A4514Z6lDH2evEs9jqr
e1K36vUKe91qq60Koe2www6jI444ovyX37/61a8WYpSQb7jhhjK+ySab1LH1
R6+88spo5513LuN89t1330LYm222Wfn9m9/8JnPIm2Z3a5tfXCL5NjEEzcpV
L/lWbAT0M37boEIA/mASDmKqT1HoquIqP25skhQ7PSe5olVnUZhH4kE1ka5p
ogzmpTyLr3UyaEGxTNGaDzrh0tKEXfdmnIYZKWrS9YonpO7AkraanZ9g4u3S
FwU3bgKdN0ga3ofjTaJWyIH75lecN1aYVXl9fe38klTuj+kocR68pBEC9B6C
VDwqm9Y7CatOZoDqLyLjBbvgdKquecHX3PqgnBovqER+ck/kcBxNLLgcSQ8S
OYJy+8Sp9+s49azuUBL5OeecUygPbv3yyy+X7fBfuDXjS5YsaUS+atWq0c03
3zy67bbb6thc/t4IfNmyZQ7H/4622GKLMnz55ZdPovFt6grQ0Yyc8187LMHR
4IY46luxWxCqnjUgG0ho6U0cfUIgXBRhtBmO6vskbruF1f6pogBJqQC97vaH
5dc6emBdEtiVyaz3GOW22+6Wo1iZTSNwkoh9TjtcFYlP4Fba1hdFN1JfDeuv
eYntDOgPDVS36ySHzdSpKJKwsS7InUc7c8fPPPeihI1zg2DOxVWA1brY/hq9
jgn0fVO76Llxg4Cdqbq4NZRtmIRkOr+3Hm3+lvslLk2kHpqbpA4MPpnScelF
YQaD/Nw3w89vuGPZFyaT+pzRdtttVwjwxhtvbMqGfHubbbZpaNt///3L2MEH
H9yUhzPOOKOM7b333jOTiHnbilDM/GSIjPY8dEmTsbjh4Em5MlT+xQfVICSg
9AxzqbTeJD8m0zM1EUhDUJOqFilJz3Ia0Pey7Sy77hqq3bfes0K6srQjv8wL
5UeJFye/p2tuPNbKZz6hWzg1OpQCRpIlJ6qmHrYxv47Acsp0hR5OyPUq5MwX
wpTj0ofaRvQd7G69ul4JD+HkPT+o/4RPglX4BkspiAO9aLeRztmv1zMALO+w
SvmTXY3Gz9XjjvNZLzHGsoRM4bKUPMwiJh1VSoZpZ7WrMO01r87q1YWl88Yb
o2OOOWZ09NFHx4v5d+5o6dLmjkFp6ZTm0IVeb77S8vPaa681hfqZZ55puJXG
V69eXezG+G8bu+OOOwqdb7311hPp/ot1jCgIliDpwdJPbW5YnpCBY0CrWRCl
giWonUAANYrc2CWQ8F1alTD6L7Se/GeVhJR8Va4BtgOPv0QuLotkedIlzrGa
DtiWfHu6nnFhel3uUHbU6Vc3mkVhRfgH9TS3fm6A4XPeUZnHcMRhc/Rj4xHW
WIu0PLxkFDaAtVh9jNoKZuLmHVUAlSeUN6zaoF/wWrm4hw2OkRiJPo/anVia
x1A3eIrW1tP8zTO2u4DDpXy0zs315o8762v9FjL3h3XBtmTonLJQWWf1r8Ip
FCpKVTtiLfw7f7Tffvu1qTA0+Xvo7/MqdFTlH3igTxtFm3k78t6+jrHBYWgS
l7LPSd7kiqgNA2Gqmb1gBg0BFq8qXA34lmcb+oflLseedW3rJP3kc+0bdz7w
WKvNjck06ULmSdNYSkON4+JEj1JAvr9u0WlX+XV4F+ya3xzLZrOky9Gpl5T3
JB6/V/O4jWkLBi9uWv+kRsDwT9+RfdfD54iKWbqrcUsUXqqN77S6t4CbEdFQ
fgQnJQup2bKNyPPlvvTi++P45mkX3tyad8Q71XsgA9wKohwygGChdUQ2iqKg
JzBZ8yhmJlHxj+M7aCDXX3997Jt/54/uv781GB3dfffdhRx32mknqXjHHXcs
Q8GYq4+2Y+bXXXdd0ctl3AceeKBGZwfSefy6Tf0rYe+adh+zdIvNDT3dHG5y
29vgWMf0sswO9cDukqGSGt+BhepwD44u4O3PhNM9OKotdE3axRVa/WIcGu2z
HIThQ4GmhGk0mDsiHLOHSSZCEADjoeujz3lDIg5Nx/LtBRKr5wSdxDHj2PmM
1fvpyxM6Qqybzs9BKGa/SsCsWfkSZnPOWdEwCOtVOOau22Hd6OfDC2BEyJdh
/QPfvrTYuEfftZO4xwfqsvXo8jn6jKvH2HAAYutGRZWAZaLqCEGaM5Lpbrvt
VsZuueWWSqYLRhdddFEzFU855ZTR8uXLi75x5JFHNr0EMhYJzjVJ38DiIEkj
lN5m7EF1tbFF68iBYa1mhbSk/NgmewR+a6ZXi06avAOBBKxUK8CRVXsh/99T
dwTPM6sEBxVlABA4ZCV6kxeYDESpDZUPdZC+ZgIyX2sotXnT7EZbHdooVcTg
ofW5Yv2GmkCFgc/B7HDb9/PNH3OO8YEZBkU6zaSbpy5LLY/dldYFCkzqzmCg
6lPdnTF2ysNsN/+KTAw0ttyMxrvn5qXjJN+0dV4OnGBJETiRcpNBXj7mtZd8
9DWvzmqbJsDvueeeQl1hGTZq00q86667GoO97777mrYxr1LqUUcd1aDic7Mb
anZWPFYed28px3Dr1zjsWEs2i3A5yb0e1fU30IsvpUpX5FU0UHf9Q1MzOvms
iuWmoayq+gV5iE4QJJ8PtT2nv9ec1kZUrMV7NmWxFlBSMuWYSguxf6nLKA73
gTofXUCpIempa95YSVPhRs3KnNeSnP2QxGzkC+PWSolQHKVK2ma4nLD3pEoY
trY6hgB8Un6a7nVvWIPtouEQs3x/Wk0LmoQ9w5HM3fSrxdfmAGtw9pHK5Wyy
nFsYY3UmczwU6fqNly1b1sKza9asaTz1ggsuGB1wwAGjr3/966NFixbBe7UM
ZreBXFCWAbtESdENRDCZvkI2mtfQ5kOCC8E9iRJmhwymNMvED9RSm9VQ9kVW
m5Spr7XervXO+hU4NPR0413Liqc4VyfmHBi3Ar1Ab9wRK53yWlhPT5Nd+Y59
i4IGJUvzq/EqOpZq3BupWtua/X4VcWOkqgaUdJtGqsmpUoQQhKMLgzrzK2t0
+ti+lLlJ/1TOcvAJlyr9jdpjKIQ9KbUSKqxesrErINFN+5j05OiIPd7hR9We
a3wYS7p6gWa3GG2Znq+/XigVGnvkkUfm1OFHH320EfErr7yiWm8ABSIWfZk6
d0mUhGqPEwHYAVepEiGlDCRchCtFrVQPDWK5QajLc1VtSvnSvMWczrCERTRe
PD0ROnjrjW4J+V2GA840fmu02IcNGoFhUvAKWoQ7ZvZfi2YUxPlXo4cUs+Ux
SCo7yHJm3h33PyYjtKQWag9dX+HPeeKoU0+iV/Leh5+U6OxXgzaayvBcCxQV
PM17uCxs8INgD2LxpiCSq4dBCmmNv1VnxRit4c3lYM7ijLpwCZlBLSeeeOKM
LtyTTz65jAXra7r3QQcdZOhhIpV9uI5l4/b368Lha3juESaoOXAFhTRJN6YV
Ii8f++HzTbWe1HJR8oPPymVuvHOZkPWSXAzVAJ3kR87NxwfXRteLk8fID9UJ
AYYTzV3iROMMwKklHCOIYd63MflWHyfu0hCrTtieMymH1tmO5fKPITlz34pr
AVIQTZBY44labRxGJMXuh/ygJRninlWVuOtvHs+d0vWcnnfFnXa9wgRQqqOb
c1uXuJgUNpD40HWqjGrQ5RhJfL+TDjKBa2TYhpMJcn7xMyGX4XIXXnhh4XpL
lizRnAklsmFNJfHss8824hYrDepF83+yvxFnktkjvRLZoxyINur/qoLH0Oa2
hVmvklQ5Y2p68HU68wieVwY9I2noLqnayQVdu90yPLcV2kPhKVEe3Aw7bz2X
rnCStDhUavR+11psrvwZkhtGvWM2FKEu3PksziXY53OyfhrOOWbhCNckOcaO
vR+zabVxeHmOLu8+B3OoFkeVqnPLSWXdSNE4dk3Z+FFvH4ZCKtCooTI56JDF
l6m6c2YxvinUCu4iVi5OEQKiFy+0vv4LigFqYyA+mWB/t36fZ7ynj2dIcJtF
uKZfGPft6LT799xzz22IU17feuuts0yf227r3XWTqPWPKr2j1sv1MHkIXgag
f7/+GWep1jM0RNJ1kFZuYWvcHSUujn4j4LFemLt1vTAlYL9DEkQQek5UEBdh
DcmjyBiqDsGmOuUrryQGTBfSJ/KY2tiRp/W80fYpuDwdM/mYhGoJGO6yYeeU
aM9ZpICTYlaBSojQIEgfhbnVeqpGwziW9u/iJW3KB1PCW7M+YyqvspKATUtC
hQ269kpZnLCGWnaq/epNfiZyhg6AsyNfom62aSV6viNPQmBhbmTq/b06HX8j
9J+vB0QnqJeFzfznISW7Roz4E044oaTWnHnmmThQe+/JSy8VthyfeJJ/u/yy
t6PeD1f6x3+XQ7noUvgj0Qd+r+4XOswprTt1jRqM8LIne/BW1sDXVZHI7lFu
2trTSOMr6ZawoGg7UHsRYncNZVehideeBkyaJDZO9EOMVsXQOnfEb4uC9v0c
aXfhGFkmjNEOzjH9OzQMEsbAoC5pljZA12ef85ZOToYkm296cowlvj4ILth7
Kp9SWEbNIGhkDMfBDQjXufehJ+TDZieXEPmaVzWbOEBoA31/17d39VupjhMV
gQb5/suKajQ8DTY+uLviHP/hkGonJY3/cZ0DLOTSCea47vaHVUxR7UxWBP+o
c56sIjuqMoSKhS9DMssdRbesHUUlM4CtVy0kvx2wbVGB9QXn26jLpRTMqQgc
17+8VI6MoM5JhmaxPm2SSX9zByCUQHT2k5LumC2DyBsbfren+f7eR4Kz2YoT
xH4XlNsX7Z2DzfpBBt9yzyMeGWjRBK/g9NKUAQ029+iTzyl9THVEvWp3iK9X
2PgbfYChqPj64fFYkeMjmREoNnsBTygK6O/X8w/f9m98sKLItYMp/dE0tPYn
dQxaxv9Ab45c6Ca7/d0KHIjHK3D44NWJzbhWEjmMWqIX0dLddDHWqs7Xrvsa
tj1NNc0yCA5vwN+rNUEjCiwGq1/d7YCzRI8lXR8br+C0CP7L3zqtEYT7QJOQ
IKwG4LLjFvWpmSjUSzi2qsrhOIBNNhui5ODFq31U9kE3HcdgTJxf/IPDAuZ6
Q4L5V2BGkKr7BBdYv1JA7QNUfmwZCnniIBm28gaSN921XNrMZSWtffB65YWs
2csn4xuzPO0bpMVB4joM4UfX3PrQ79XFQdbqX4oZ0gpY3EemIc+N6hhsA18r
d3hJnkwMv+rJs6tQMAsBoNHox6gA50i+xzrvrdeOEuzd54jztCORc8bfvlh7
skqSpjuxjx8+s9oq5q7ua1UJD2IM49t3lRCD9XgSCpaEYAkQ5VZCAjKGJUkr
immQ3FTI6jylpa40ZTUCSS2OYfUxRidtx5T5eN2dT18YTgqfsyUFfbA8MgbG
ey/7vHYjshRGHy6pE7yhQ8LvSK4voYgQyPRskzqhe71Pp190i9RpzWWlzl+o
WDQihxI9wdsuYeKx2TEZSDjaQ5/63boukIzvzMg0ygOaGT0V/mQawvyvdSJQ
SzsF/Y+cTkIkWCDyTBSznI+PARuMcIO6IxQmeQSyBv1NfAQspctJfWLNrIQA
bauGLwO2ohQ+vk/9bM5LPKnuJJvQeE/JofW7ontRs2jmNpL6aFcl6teX1pvP
KeQbxnfQ4R3zmm78+pOc647ZLmnjRrnjTbWCil3RS+NtRTxOJirxCR1YfqpF
Ri7lX+9ylCpxvt9AMIf11FPjbW2yYHhSI3H2lMteEkX4f7SBQMqv1XcWNnn5
kE0+KDWiZGI6uQmIiLQC0oU2moYaP14nAjeZrD9arwSEh8kiWYfHDRuGcPcG
AjjsNQXoF/ZcLA9jZ0zNQ4Z2ckdaiLtvj9iFD63v3mfR+bnsY1imuletqB4l
pYwDgbweNaWsbzhZukT34RsNC5x9Uo5ylEayrWiwGiVcYuwY8kA+6NjF1/Z+
dsessqYb45BiuWJU3pg7jXiAjMpyjY36ZY64oN6jg8eWrP7Jt01sV2+bGOaq
Fyq8/A57DyE4avVqkzubfvXYokHzhGQ4ZIo4gsNw0cOJ/kJmJMq108BWFbIf
m4YUP1FJkYQrWVI9xyXqjMvgd+p6oKFcRgbNtx4lXZbkPkecj93V6AVG6ask
xUmtcFu+XNhmZvecsfQWSRFVt57bsfszzWLL2W5wHZitY9Ic7WulQwoLGCML
Xm7F8jEZIflgyJKOLj10IIOYMkrSV3yu2dan97a1t1yT9zQcwwaXIw56k0iN
eIlAcD5sIP2jg4Z6hCugUhwQhvUsiy99JV94WYo08YNPoPf9ddb9eydIm5W3
UGcAMzIjFMYIVWTGePUtD0qR8COI+C++vKihCZ8KQV+e+NNpKNLmqDgHcodD
OFToqhIjMEOh6Bs2HcVXLP9DW68V3C1GlVPkJEbcRKrrGBjQu8RoSjvs+fb7
HpUYCfsM2z0gpZy698o8Wo45mJYYtS8DKu05u/XQjc4xvdG045JydLai0EuJ
3g/Ad33OmzxwpDtmoPHWe1a0MQvceYeUOGhgktOdqEnJZy2X0WSaqaBookDn
DyrXQyuelhJNHdyws+ikxHxThOoP1gxuydACq6NnflGvskd9r8wb5xcTyrBt
kY7BtGPvU7XH/Is6B846mwwU7h4wvOfBJ3wFerTOVXgGKwwm4U1DsBPOAjdi
S4DIcUDJE+qJY817Q/yQXCUB2vgLAg2sv7t+heOUTcxQ+9q5H3R6Fq/IaHXe
YONZQ9P+CmkjZSjy8J45pncMn6DUZ47k5l87rj3njQ8EjNdLr1FZCuXJYSX/
J7tLb6T93MBEVlgrUMYIcFIBIjFL05skQHx7alitHHJudkqyUQmQVIPq8Wpk
DW82FdOkYsojlVRoOZiuHWksKJ7AXBWG45I6OVxBG09Dgn9ZxwAcLCNbqGyb
Y88Tv1VpEbuN82luNHZzIMpcH3glx5WkGw8VuoqpTNLipGbAncNsYZnD2j3I
3nxbzMRQzQwQk29iL8F6acmspvF0khaJ5sz14rDv+ko0T7JSW+Nu56Gnhuo4
SVKaYqs+l93ZPmcrgc/u2mudJlBwL7QHx06NtbmJS4T9gGG0cbeHWWDCmMjq
LmV+aYwe0X88dGHtNXpcOpEeIQGLfltgJTgR3Am3oaKZFeVmvgAxGOJvV5IE
Lra5Vb9DHiLvpmrL+ek6EcorNqo2icYPbbp/u64FBqXPlb/zfLxI2YyHqqrM
bUs1/2uMHHNjYcyknhw7G8yUx/06Ui1gwvQV0ADeIEwIWVnkoC916w5Rr5wE
MrFYicJwTPC1RiiEPhmje+t6dbEo63oogQdS2nwWm/BQn5x5oq7wYNTSpd0L
6dE3ZL3Q+bBympYnniU9QHzXVkT2GPNDSKzdE9XFS/TK4grLd4/lhPIgSOMR
6s6wVKQu6oNNKDADh0xRCoSx5tuaUki543fTtepcUJzQ6DgyOyiRAALcWYYI
d8rV4cQ2Vjyx0nXi9zaVBZ2fzC6rtsn7TJ2IbceMrJPmBTRyu3cJd7UKnE0Y
nNpibmHtcxJl72Lur1uC0YRZI5l4q1PtcGhVm8awN6tgnUhtFh7jWHQavARf
2HNxeXPohVKbVgIXu7S2YtXjU+0r1zfoZ+Kp4TDZzT1YkHSVOVG9UX6s558/
pU1yzWUqd7u8/obkl+9nD0XKzhHEreGeqFvxwl+tCGfVOZkTYg7Y2cu8dvgv
v72jYhTXEZUl5iyxBcqbMKM+PQ1BfrZOBEPPUSisIpz1GLamudEIxLCo7beh
NM0+mBE7DnlpTzVAi8lf2mW/8SPpc6yh8alX9les3VcYRZjJjamel1oayjjI
ywAj/CZHHLTJ9lFVdDwkjsmLaPYnfzIvg/YrUpYGB23RHZPD0rJZakvuTqIB
Pqr9Qzdux/SmxIlqy8mtSTxdqgWcwnyZmZHlUPzsc0EE5u6u92AzzHFN4Fdv
dJgy1i+86m7RQOIzOhF63cs6QQYcsEY0fr0igDelbpTlIKC1KeNYHPoQomOq
Bo2bVEICsNkxg9USLzaShzqPHwlL3ppljvMwwTk4tP1m8SGhIvETx8jUJ2y7
1OrYbCQ4DnyO67/VLzframPLEy0DO2RevWKnaU2tk/axS2eyh9gLaIIepTPN
IaIZQx3w2mZu9ESBV9AxjWwIRdrT1qzZFDZ0IreHN8MXGiee06zNPjw+fu28
i/dCAKzWF7w9Z06rjMUukvywaiAWlCHD54CXa/0kv1wwEcJcTMBLAB3CO4S4
LsO3YIO2FwF/yDZOLAYqJzzktPwCBd3Clr+ehgC7Ho3rF09JNrfRxLL/BuIM
pP96PSQsI/d5IqJrmUS9kqn8Zi8FEAqSSDXMF7WrASw+5wbFLUey1jM3szuX
hUuKnDvECNf9qS8O2m+LZK1hGrgrDe+pl7EB/nilNGJSNRevOYboYUYqghyT
RkimyZURjFHoOKTarDiisrnK1gunJ7va78PhXCx+8nk3CibElV45Hd2mjvIx
j2Wpd3jObUX4HI1Qii3sItCgrQsuSYUYUwe36sO7uGBtToebXsnL5zO79Ilj
nAd4Gk9O1bdx87oFmAsvVSLB8oPenRdAvFhTGmSE/L5PUksxksJwkHeSJKhD
QRXEBOqaYCRFDvopyxxxA9b1NIcCVzMMKVIy2yn1GM4du+Uv0kRB9I9bN1gY
AmfkTwIHO337DCnIaMgehyxpPBMbwEpLlUZNGhqb+V1Tw7hE0TGlIReCO2a1
VXZq6pyhRsWV20+31nq7SRiRXVEEBo79jQclMXgdmIImLIb/MlEu7YkSgWS0
Cw2Ljqi/UhHOq3J4l8h+qIJenIRRPCzFhY2RHsP9QrOa5k2ix8/XMUQJsUWu
Wc+3n6B68kTHENcreU0agyDRpoZoW7h9iSz+Yl0/JzoXb6CyBguyEcGg87JU
SES/KuVtWzxmWwt5INzKGrwQNw4P2nyLZaOG19/xcONPGMzIvnr2JBJvJM7h
O4jz+QoKCRHnAM/tdsBZY63GBK3PaVeRRrfeYIx2YjJA/CIshdWvspbGsu2j
1eqkO7Q6wERZj7wyVbE3JGKrvFBvDVPHtNpuQIsg5CMtL7wrd7KrDFNnBhnk
3e4izFe1+FqSLATErL6ib0eIMMYju3SjJhYR2IaJJUT05HxnLxqB1AT3xNo1
ixtEqwyS+8y5lAoH7ZelQqQzMaVASKPCRamPu+Qm10JCx5LETu7/LQlqJuKf
yR1SlEmxwuZyCSCIidBGpJqU2NeoyzhI9vpg5g2f09VJgYL6Y27MFefGr3tm
My/XpKl12O7TMDRNGOWSgK4et0YOlEwQEMxUqBQvVHjtvZZ78XXzzQr/Xlwu
NH9//XNKtiw/MMlQrcURjq1xntWlINZuIKHKds/VDOnyxCbrQp8442sUpHW0
4HhyenlC7gzNbVRaQp3chCm6jE1ZdVIhJGWoMFxMKmlz0J5ZSY+Tzu4kerOx
0JUjOnuGl9Nxh6l0O2gTLrOBqXJS4EOhW2SNr2ZYNSJTV+vvRe5bayHDTXBZ
NV5YsKAOowXYET+Ex/ppWHCEbGx146ng+rrbH3YXTlBuKH129bsGy8giBGOZ
GgyesHeiRUBs7WIpcF7Nm+p9bgSXOnStV5zZtfFH+Sn9qCpfZN3kqOU7Wms5
Uz0I8wpgYckwCKy6p559YTpBvWVdHPRDAQYHEoWAxEVPGSF0o3YSP+LD66N8
DlXReaVDTAoNI/QZnKUdQPoWzMDJJg2olvkSbtx/mrjBRwUxKWp6Ga659UH5
hs15yHwdVg+GGtL3QKkXIHTA78Z0BZL6kjPs5beO9XUAp7UeW2gHcEJQQNwI
+955vX0XE8Y1me6N//ydaafS4rnudP5YBoCCpl0k3HesAIYhaKU1WLW6ifnZ
ogQvDFIAJwlwxLvV87klTSH5UAUP7Dx799BtQAmJWqQCIPa2nIbW/r0EHBau
/OrfVVpAO0LzBFsaL1jIyBV9mPDC6hdrPJKDMqQ5mJj+VzaKUiHNeTY5MGcF
z02u2yZpWBtShBCacDY5rxbeKb8G7b7lK3bl+1SXGi0poDDBRXEGDy8UII4h
iWkn0KjWMTtiUsiqoMVtKVbC9hiy0P6emc7/l0qmhynlfbfjec2+4oPD5rx2
92dfOQHYQkeX3HDujqVcBzQ7bCwsoVrj+3zs8lbY2g33f6g+hlsWSsMvx/HE
t4P7luYXAcJZ7acKgRX6+vd1bTyNyIStBIr+l3qACGBiEpOACxSwtpY/vtJy
WogKoqB0SMUQ7lx9Jk3Zg2gP6lsnFQ+HpWQl8hwExRyepH17bt4Ii5NnPwIZ
HMRm2fV3jl0qYnKf7ezKUGUPiItu8pG8TVK1zOsVCYEMe4KgfzmmPOJmBqlK
PwxyPNi3yqPp2qjpLSzSJ9sEh5ilvSLBWtrG3KZXQ58BBmnqxEpTQDDR1Okp
WRqpgPNWf1hucNDf4nhCMMezS1mNfjaQBlmYSEZ0bzv+NncqVjV/rICOs4DH
OMTk/1qXfmblIDitg5V+sM6EvwRjIyzXpqShyVcFuhVr4X3UYYL0f73lpHY5
khgR3JCogK29sssTamFkgNp/JgfY1fODFWWvcup1LQZVmMGgY2jLs/r811ZO
wCH+bgMkE6lp3ytZqWo9k2LAkiRuQF9jOJQGOcaRee1jXFVdXXzBP5q5wPmV
lwTnl7AQHjyKfzxQLmFZ4lQJy2Z5eo7FK3Is9a1FJ/TGVQHP7yJPxsE60Q/I
b5IGc7bnH9TnQJrNj/43/p1WTIIDzLBdvnNmoyI4BdKByNr/XPdDBEkzFKxj
ZwWuOmLsLpAkHwdXmlkXcBFq8M3lwR+tOoXCQTWAvUdx4VQ20RgkZrzLlZGp
K+GuWeWNeb0yXJpyvP6GGlDuS51rhW15E5iWu5rdTrMKic6oPrV2juUMfKUr
qjnI61vXdK/RGAkCzclYNu8PASQjtqgZd8x70uK9seud9YxwOh5c0c5n2yBv
uay/WmroLb7m1odaA1l06uqYa/oN/nVdVBtUhKNdKOP5oOgFA/+D+mekKFzB
14DY4CZT0d7/XseQUmRYENCSuGGiRBbwxf1BJS5yGnKHOA4neTxvpHY3rIeW
N5gVqGX8TcIjqUAXAv/FT+m1P/iNNh5cnJpvX7eeB7CZgA4CwXW+1tzspzAO
5CODLtKyI7WhoNkm28U/rnspzeI88qQcy1n3Uh9JmJUm2ph00XPbPhUURIb2
4irlrJzaoBu1CKkMafHuigf8DrV2vmVxQXmxqpbpO8knbLLm7PznuUVRI4UE
wR9MZIP6KvhZjrAxZekEEWD/d3U6KBZrMHSFRj6QBjkLL655dTo++H/WMRgQ
Ok7WrmAT0B29hKRF9JZcW0p6L4wXoa9CgA3OEeSDQoAmroaHR8HeyxuVPN5l
jRb5Ho1L8FTIi6vPqjyRw+zCOHDiMCgDHbWUTO+KDlNOKj+sVGlLfEK+GeNK
VnttURQv6RnuJSThmD0byLyX9HKPf1/DAXHBqaGeJwE2E8asw5iLahBxPKVI
pBRq0EHtutEFTSYjkY6sLRUKRd74QKPIoWd4dWuEtXDsejHNBqjxvo4aP1Bf
g18i3zDCWQGsFED827pqJCBedZS5WGYOhuFO49H/YxqC/L/rGNIUZkafoZzn
iLrGZN0pmF/eaR4HHwRRGMwfqssymRTsB7+VDGGX6kU1W6MphcioSqLtzbXy
aIwMS8uhqhLEEXDYhh8sKrimDRdyM+aLrr6nxHmlD5QQ8+Rj7UPHSIC0kZy+
XFqCOmYWDNkyfte8+dysAR8Fq4I5OKZtQh2pOyA4r6LSornzx7KtiJL9URBe
qEleKPoWvl9T6WXnkBgepEpi9q7hTONoNtgOxQJJOtP927pWgqgYLLkcnefI
zMTl9X9NQ1//bx3jlEH+n0hJz3JPwvW+lG3hXcotB9EfDNeaZoW+oNWNUVfv
65XgVJOLRAtrDkZuIwWODmdExxTuj+DHekWEHLM+tOJppS4u+XpRMNaddMZ6
Tz7vpvIntERuLJU3aQTulVweFv5iRpmFDdNnz6dWowUlBVZZSsN6t9hYwn3f
MUM1IcRJs0FgVAhe7MafHuwLHSHG3Ve+5mbfvk7QcvV8KlFmABzKjg0716Tb
XxBgfUeg+e1iWHAHcVUaVIlfMyzbDU5K4ywqQiQH5B9+4dh3WwZyHjlHzO3/
mYYG/2Mdw6GA8AxroDWPghvBQ+FrsbZ/U9eGPQXL1bjgMewrQg6SIOtPOkaR
00+vfEEShCWILtKMaPFh2gVWK8ePaUO10bgzdwtAx+5EkZ1g8Ok9+uRztqvE
ta3gEn5Bx3I51AFjpEFF8g2oX6dZTZvgXYo4o3GsHD1dxoTfUOvJXGusREMX
jrGgWISECBnXnjhjwVunDYaWVV57JJKpgiqoMAYdw8IvlFhLBXXzoeIPXcRa
ImiecBzG9Pjz/dowcsxdbCnGv07vr+ZHU5WgekwxiiH+wzRk+J/rGMomzpXg
pe2lsA9sDIhEGgQ7sG7zQvkvHB8e/cG6YdpibJz6z4QNOdZwT7czQAm1oskw
1gC9kuCfi171zJfGUj/ubQ4pE9nXnL/zcjvd8gG2cj8LQ2hdoHLk9NzliBGN
m16Ok27IbjCmHYDg8zn5WHb55ZYI5nJC6BbafuOwc5W2topHQYwj4qxJYLS3
I18wgVBhBRJeYZnCuFe4s4Ozcw2lQfeZcu1TSa5h2Nn0S0rTyvj40MoIxD/5
zKqZ/zQNpf2XOgZvh1PG0Rlr0YQvOrhHozTKHHJFNC88rbYI+eeVbxDuzG1E
OH5BPe6d2LJGKV8PymgV0+wd7yan6JnedZovaTzSCy+6qja193bXYeeK0XV6
en/JrZErSn6Up7gt0CjZJlkmJCr+ee0Qutdh54pyo60Z5eYN84TNCqhbh8BQ
KW3sGOqGuxt0PpD8NGDIG1/d83Lj1ChSYTW5FoJt9mzMt4ijQqB+21iNxAi9
q2CjdyB3/aYkTVBAEwllFV1RLFCQdEPk/euEobVYE7O6Fk4ivD9K1M4r8fRn
Nx8yEVXsX1fCIxs567m4xdgGPNU2Wkhs/aMfr8nXbhkNQz6D9gH7Ey+gCzZW
+75KdWDYFMUmfea2/kL4r1J+hw1QSE9fry4a+9iyXUQzjIbjCZsQn0kzbwCo
CfrlCSt5Nk04EW8x/7sqJQPHDatr48vfOrW0tuAggKuAk5Z87nog/eHFUs63
aHK9CqQq/cHb7EWf7oouH+RTHFn7PSEnc0+96l420QTGlxOM4A3xbY0NQJ6b
IrMbnRj/U93C2oyNqRpp/XEdw62NEr1R8vTBUlg2Es+05HplbvnNCmBEk4yM
D4kmwfRlgzCtfDX7Pl0fGSExtMqImMSY2jL0ut2gyauEKal1dyA+q6/W9Ldc
r4FYREfkN7VBY6kYDdZfxl4lSFBkswUJcnG62NMaHxu2+iFcq4tYRT3PAT9z
DnOOa/bSsAOCKbU5OhgWh5SJ18NzHhtU4OabRvnWgyuerotdr91O4w9CRg8x
YMQRnbljvtIS7iiB4rHN9AvPxvLnngQJdG2WyFSttD5ax6ADou+z3H9BTbj/
TF9iocQ1ENa/W8fYNKcnCGCsH4NOWdvAnZdaOkD8FBoKDLw6MkHSlhEj2aIb
9nGVRjV3yqVPa15tIayQpMI2liaZAi4TzObX2VklacnsYMs4ZjnSVHPXEz1O
vuL43FQBJd1eMbhuJNDd6FYlI8+BpDHALDNG+nG+1SlqvwTp1tpyYgYvuvnu
IhVLRoBlLwa65ERcQBjYV9/yoBe8YsnDn/zJXmzEFV7snMSnv54PdBqHWV8h
xhQ8svX0DYzjLCeB5bfr/lkhKl73W/fv2iyadWjA1WXDF+dhywCdX3goiSyS
GcwjkG5rWSQKykzuc4OHcBgXQozlaxgxRGJv3p4Ad5DyurLsF9vhwfYc7ys5
bO96XOqu0t3EIOHjpwMMw7AFCkgY07k7e61CbL3EMcurA7iFePKl3FI2nqBh
TjpelyFlP9+rqeXDeZSydUjlOWrDobTtTixhp/G8JU9h90rZmM2qsEH8UnZ3
GctZFVjHF5ryzZxfTAR8Qd3YwlJEjHKK2cHfB25wcYaHXJyhr3JUJWeAiZu/
2bwhsjgpAfPWBB4Ak+dFmb64XpvZNFXbpI/XBeKwOKbzVXZI3+6whkkWg6eC
J3PrMAT9R9Ki2QTEJR0DS+jdjSE6wlp+fwUdxGDJNvylZj8UOgwzRv/GpLax
GrZYYLo0jznzGvUHqyL2OaJ3QqaubO3w13sCyxO+zpoYP5j3OoF0s2z9jRNn
VBNzs10ZaLumeGHhVf7pj4MdbLXn4uL/JVnjSj3b4/eFhiYjNcKtVa3qXStj
CSP8/Y3UcBMPccq1kSpQcGo52ox51PDY3CcLQRA8tgvo/nTRS2tOffmxAMRk
Vt6C+UyCqjSB2eSRgqcm62pmknk1VRelT9QxHZkwb91huIGf7xK+Z2z9CUlk
4YBzDmDzQk8OHJLYAWLL4AHuYzkh3yVGFdzRhntYvHpW2OMFV97VbIob71wu
9UzqKyux5jsfg+nJZpFSGi3BiKTX5HdowMuJub4xdVYvH7IrpFf9Psf/4Lpm
TWfBwgedUAZnumM+I2zWQMSwlBOLMFQnd4IshRci/uLYSKi1XKMk3/5MxRI8
z8LJon3GIeZ3XOnyzGwEwzNJg7T2yW7mZBWm+wYEFBzc+w1zlznTrRXYOSkX
TrZ/Z3lN1V1p4zqWzV4Jk62YWPL79USxnty4BOBxEjj6dr9ifYhgiZJDe3xq
h4POFRqjMoyd66Xc5hsntVz2ePt4Tc/k7rL+zYYt5bLBJ58rKximNLDaIGZ9
qbD/YeJezpQ0fpMTDOIISZgmWWDlSphKXffJKiTMdB9xI0xEqq+zGTaHWGkT
qtCwIwqqQPBCNVUxB71ed9tDLi5ZRW1vH40DitMc68j8s+dncdBScGkfG/Ca
7ugsmkIIh3yngG3jNXOQiONXwswdbRFKiDZXnJpPTkOa8kyyukE2XZesbGGz
3o9r03jO/ReSHENLDLJzqeWyuCo+pEyc6UplqBNTPMjRbBvo4yuDS+ORrK5Q
0htvLntaukJoXguew0/PDNgH4bfcL4Dr4T3o+Ev0tRNt86xs2BnPLfXDumK6
OjqGELS5kzI0ZyGEhJYq8n3BAoamG0MSBFDKkTibWvq71zJSAhChaykTvKQC
9em62x/2Zam7YeMp2MliQbt1Fou85p4ZmxPBHOpeWuRPkHG+Qj///foo7jVb
hfm6Y868tu1tKqIrzZfoTBzCFR8nk1LVAE9DUJPOJ+DQHGoWS7vvyos39J5s
u3dvpeHR1nKVAjFdAJ+CHgJ+5ImVObfLQiz3ZDVqpsBJ/WS1nFgiltOfB0NF
j/jW9y9sjJEMBlMz4hwbE8w3FcZOTPhAF+AtPfK68IurkV9q+vPWAIhKZjaG
5eCBX7VHs/nhyAF+2R5SpbRjubBkTEtzUjKrv/6Oh3OEc3hNJNKcY8vNWe+t
aylsL12MidQPtifZATPTTJ0GFB1Crka7sqQjz9qpJNSr7rmTU++sqdrLld4O
8XUUOtYPzdnBEmsEEIct2QzwICHy3GEBGjes1dJDWTd8WWH54e4K7t6j2S0d
yU2jX0mL02fQV9VsUn9YAyxYuLsG5CQh/vt8X9Vr7h+8Lwjdaws4Ixo3tdt/
IyfsaMgmk1i+BFBZakYZ/TvkI7nlBboLqaESF3qLqwweqo2F0qBeKGXZqGpA
WZBEfcNY01tWgv3g7qgdk5tx3LhD+FfrHAiU2hmmwbxkVcUyRknLQ/2vXK6S
38KiXSPSOEUk//EdvBMsPyA4FXfbNOGt9VnavPNehnrh60slQL3GqU+yPl1E
NAor1TFJOWBrwYlkF4g3aDl4WiNUYkam8kthMKFh01dtR+TdxknFXrzk+rEW
wYbGQpXWLsqJhXIknJlOE5uXslhJdec1cwMDh4RurFTHqJAjs6F/rvOxSFHA
Eu+v1MbZ0ll1yOLLdBzlK08VqRIyU4XhZKpT8p4W1QIPRNNcOwTuMZt9SWf8
ub6/InBu4YKY+QSznn7uxa5+c/3iVzNpD1aLvgJOEQG4ZvFwrn7x5XXoP9OB
EETmunJeDVjRjX6j7p1lwiOgrbDQzDIn4lQ7jLbSfKL3CjhOwjmX39GCQbli
XFDjQqz5820JuVxf2hv2e4W5S3ssT58b/ATO59UM+WboykAKQuA5UheKK8/Q
6NIzkTufycvU1UhGleJg1uy5p7jOxhbhsReFtfEjfDZxQn95AmG1WzLntWQN
ZHkJ6saGVTxRXExE/1jNSbGdOC+vTssK0Hl97WUIKLRv3Iy/WedKURe1i5kt
piGiLeoYPJC6s3xpCZjCEOds+iK4AFYqWhpShTvgFNm5w4xGNz6Q3PiQ76QO
Mxw8my4ZySLnXHuK/fTeifEmrXhssu8ZFgFsau67UlPMoOsZOwx6lkTYdL00
r5EDnAOSI+/fMX18hNWz+iMgHbOXDHpf7tfpT0kH36xrxgaWJCA7sKE7hDoi
VaMfkExBVyzdcJyUXJTbde158dfq2zBo6TIDhQKjrpJyZYHVb9Vp3yqsYVuk
zaehnS3rGBwBy5rJcr4gSIQzBN//rbo2jBEgi2WK7QsucZmTgNmtv+sHo4BC
RVIDJ80IbRXHvpYTvhzIa7vuyirJZFLzVJUQcrHqhciVv8wvopaAUpc/fKCU
Ko2w6lp/19gDECxp/dzR/caP5C6KCVqytfYzof1aLCBeSXtBZsCglUJUoQOc
7kbOTtKGeiSF2PW0UojCFrKn7It9xVvsvMK1KXKXkvF21d3tUNqqnqwZftBd
A6q6FNYWJJiq4HvrOgZF4SL7cMriIyqB1sMNNr+T1gSMVcWRkmGaK5Gg+ew4
oTdJ7lBke0kJAxMNXRroxNkQWADJ8HxY4sov4gUq9HaTQKvACsLujOPkKYE8
zIUQmbykZkQ1PqCjgzi8hKBJRscgx9DiWBFuLecDL/8fZ3cCfulVlYm+npqr
wozidBHFgcYWxRantvs60tqWDSjDFUIDQl9JmEkYDJMIEkQbUCYVCAlGwiBh
6IA2Bk1QgQZUQhMETZTBBmUMBAgkyq27fvvb7z77nPpX1cF6nhOoU+d85/v2
ftda7xp3EnyJfnpA+8gNf0GPAMgtAFAOEEdUg5B3vPv9Uahz7THLujpua+mQ
7pav/bmq6ZbXzU2NcVHStzWPl29DMz+Zg4dP2m7hlx+6DXrOyMaUAReJn8sB
ERKcycHIOSimjWjqQbx+1tYIalzcx6bMwQF1PCHGkXKBAXqHVg5ekIqkq+rf
M5faiqUMLVx7DhQEBAnqAEHey7w1nkpAkN1RezBy4utl7MFGP5Vu+pn9cxF6
iwUS1pKdFSwuGbCoOw8sbH320XMrRVyuuJz5x5sVgPTn+NrkxAPfY29OVrZ0
xjageER/j6pgsg0uyIZinwwHbybGRlTpd3c474qxSfObz5z9269f20nfWV/i
pZs8NatAf/Gom9gYDPrqNwckAouJJuU2YXMTJPGAdVDlvYSEFOoGJImLO8Yi
eZK5xDzfZUKwCXXMwfaUoVwbKUdjAGeq4VLWfqd1qLDiKZkEMB54VobtDM7P
fNrL20iguSMl0+2+tu/K8Yax4/uBSzMaG6XfcxHRI7aBy6P7e/wsInCXhzxv
7agEWhYUAheB3c0DqV7SD6T6qulaPfY82nTxqE2JZBHmEdzkqOQhsr0xvzNX
X5jbOWu7RNvFuIV7ZPbHXZYmggCEVjqyBMUHaJJ/LM9+x8rwgGbuxo+qIRub
FRqsYboJ4shQpH0eUAfOBwaZlwDJgmJdFnP5zYNNpqL5mnzW5+5dG+Oxip58
Xd8XlnCuuh6z0+tSt+q3aoUuPkGZzqO2AUyaadQ1WSPe5Y9Na4GzOURrPi7R
uol0BkQnOkoqR2ABmniSqUD7pmsltZOT8v5wyhe3tRsDuPY2ZzLrWlIRBBG2
zbCZAuNNnZNmKD7nDafb8p5So7yXzC+bGPiktrsY3FCBG331QVCOKJtVoOhO
bmcNQS9ZIUjLYPr7oG1uH3rJUlN74427mZ8YycmMz6/pG5OB5yN4Og08D4pO
RnzP2hFFDUTf3e92PpaHUeQnl4MbGAmwcd3mWA09HHJ0q34ZbHKH858yp4Ia
so4OK8y6Ms+Z1BUECRMk3uJntIwFQfOszNrKZNAlgWdrXmp4WJFsJykLklJK
Y9xHEJIiZk5r3us5yiYsY5ZCbybRD59UwWwaYmzrd+PWQErGzqwjZd8OZa1X
jFtPcHzWZdPY+S6bB044ljyBtBOQ3Iv7Pv5wv6V4BsIomLv6rAaVkw2hiS6y
SzInymmT3uXYg273+H5kkv3zjhPCYbATwGOAU2iQ094xyNSgLIa8HfeUDkVU
hvBks9vg7c99IUF4jlZK7IQNrxgDRPeOE2G9xqFr+/pkkSUrAbkCY/HdeGJh
G+XgD/7TGyAMog2qst04ZDIKLp2SktqLmU9P3e5xurl+c/p3GbX9DzvhDRtf
ka8lGHWvR6/KUVUfB2/T0SMdb3vb9xFAurtuLFU73H3J23nf5mHkGf+44tDn
7sihfzjPf+11jWCIB9Y1ox9mmnK7HRXZBgS/Z9oONkR44h6PeH5QaNf8NOjU
kmdiw7HBoINNiPi+egZSiy5OttQVXJapOu3Ap0uPf+BTqrJ9jvwhBcmRBYoW
Kd2ReD8dEASk1ejI4n2F83L045TVzmcH4zXV/w6FldS7yQqB4PDxPvDREQ/P
GDW5mHx3bn2Pfp7viLtl3tGMvGdPyCtXdCBvrhrl+RiekPu2MkknJRpnJbgA
7qH2KhUXtJNLzX1vmEG0wy365/qhmv1vR7ei6D/UVxczEGuyUfUYQQ91YTWt
VMn+924DyO/vl3TbbpGpLsOYS1oQMcVO3QJIUvr0YwJQL24id8nb3rdWX5AY
UMpsjznvqdSKbjnNMRnkRd0wmsQVLV1psqVXN7MlvQyXCRpTQdUnYGZd56zV
nDjjqZmOn3o6kc8jPUJatx00Ej1va8TKe8mNOegnCM3kYE7nJtmT7cnPzKe7
jrMwOjjPn8BZ7kXaA2xPpk30n7AQOUtIkC/ruYHLUczPow5h8Orzx7+h36ht
IbEOOUkm4WQeQKYb8bFElM6YppJjWt4zcPLfb4PE/9BXh+GTOxLEq33M77JK
L1+IX5eDJcTovVUka/9a/ZSXjfrHj306jf9E53hnPaV5eT7iwM9KlkS7zFP0
MGiFaNfv187gN4gWN/HHxtXnxvij2WIEijG4itGDL9n+zgrGe4lfC9IFc2me
43RECjb64UMBcg6Trq5RUbs8bYoX12G3RDnnY63MeYhVQOwppxlrX91XQrpp
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
ziOC8RGUJx2rJ4g2MzQ+FA9BoNoTria/LZPVoJLFrce5bcfCDrmwY8I1cYet
zHO22f/nTPvP8rKNbBGIlpXN9W3gU9v+/0VTWcjHjLlcLvOkNyhPW90y7pEb
zl9PSg1M4NL06jwDz0rwCtSRzPUICV+nhssqZl5xfTb7ysFPqDNa74J+PvD5
Y5jHeq9yKZEx0aCumpCgl0gJxXjdGLS5VI4mJQKSHQpJ054sorxohYNNpvgr
okIhehRhr7C9TYfA8XNSqzxjUkTSAL+zDQR+J3tWZkJUHKnDnJQ2r0HgvMam
PQ7uRsUk70kF0BhkPDWnr+sD5WZ9SfV26rBrHmShgFlB7Ki9Kb3pFrQMps+L
lLS2yGI/ySrCQk9PjA32/H7XGOex6VMjcUptkhlnVXlgnxrnJyx5Msqj72aY
EIftREHfZF24RZiQoo0Ec7/c9NCLttm6F01bx7AsW3dJhuHn+pxGjuKFU7FN
MmOQZhkIfKHwln0tXdGt2gVOtK9DnNiaqwMnj+MzY7TO4sJRmYhidhyAoVFQ
MuV4LGLGziGdjEnY/nm9vP1lY5bcehdvIS+lDXgrWXJLxdfTbr1FfcKP9BtR
zsXohjIyPbv7v325uZvzt9mv89f26+MtiDyVY+7rt2tPqEL0uJRL1pKEvbP3
uPx4v7qr4ItrVSblLzDUqxPvl/LzHPmU4W3xHnOGaz3qMHUxiaWBV2GlksC3
9ib49OccLxF/Tk/E/2j/nHrK3nw2sEFEjpfXSA9yz2u8dJvVfVlWt/DCE8Aw
sNG+uvnZaRT4uBU8+LKNpWXtmeCSnmNaX7Q4pthrmVq2SBGdyVilYCwz5R26
kqWdT98Nu5Uh8LgUT3mvc1fNSQo6s8A2GB4BYVnMQ0fvuirRPF5AvjsJCxER
7aIG/+02q31hf/yUryuf+M3SFPWjI4DjUSmc1bIuulXQcoMcUSrN8/znf+kF
z0tFRNoRGFnBmtCA9OWuKiT3jvNpO+2ez4nPol90yWXzMesnss1pGBHEBkdR
1wNdQkWrp0j0fftH+7in9rclyne4yTqIYPaioYqT+T5+hnbEccqXzB3Mbu2t
t9mHRRIPteC2p2Sj3S7FxdaiFsw6V26nms779feSq18Ftg60RVef5E/LRJY4
CMcazBdjJ0vzwrXSgaXvnmJV6/RNfTN3Gn0Vw5qYkdKC+FvJhjkLOxX2LEd2
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
SdztjbAtghGT0gVksLQIileZmd1tQva+JjOxNl126itld+orkaHldenuNlRi
T33kj5sbt0osLDdLvGB4ulnQfXGXsuI+u4lavY1ZNkK7CN1uyqouFdnjgnqV
DNa9mGm0t7mnZLHL4+42dmffEMvmzdZLke5uAlr/FnMXUUUv9/f7ndVeGfrE
J/kHzRH488t3xTm4uFvDYRHLlWixuPoJoaGYRi9DBXczku2In/pA7OTyarJf
H3hr/Xf/0AFePJ1L3/ZehiZLynmltaiH6RZF4Ba36h92NVerOV31+aiIpiau
/PBuuqLny4Ub8pJj20151FeojyuW4Dw10sq9erCBJllen9jdTnxYDnMW21uw
lps8v6lXeqx824Qr5Pk+2sOEH/vk1btbC8Uy84dDKYnr9al2iog44RJpE21s
r89es7vVgOxt2ARdq1wfSQUerdUt6Dh/aaiZwkGp9uQc6T0MBwcbgxaXUpOM
gE4fGk/e8jEEPQ4wFBWsRmckTitKSrO7ySmdmc52H0qRBW2Md2GG2AU1k9gz
VWxL2SMqiIk/JvERXfie97yn6a8zzzxz6MKE2t/97ncPXfirv/qr7b1LL710
6MKE2s8+++wddWGL5RdJ6GeOjhfKjJqKuNbe3Lp/LHOM80JfqBeSUNuYj1nV
jLA50vulpy1dVujAOOHPC1fHickXeOQzOHlO0OQnYQCMECBlbjRQ8xUwgrqL
JUq/VCczmRSIYBI3olRr9kDskiC2br3S3JzeZHAEuXtr1cjgJGQkF5+2hXie
R4/ukMRLOPb9739/knDwl605/fTT29t///d/P7bwWc96Vnvvda973djC17/+
9e092bvjx2L3NdPOG4J66JfPyNkUno9XIq7x4Y9elbfpbqE5LkGRhjw9NclT
KFSPFaFIhEHU3qby1F4c6VXu9tIK3q5/HpnIGXvtPm9yvOW59tprR07yAx/4
QKjVhz70obFq11xzTVboVa96VXv72c9+9lih5z73ue293//93z/BCi358eTv
5lxd3ntXBw5FNTdZCyTm+ICf3HyMJL9+/dd/vf3oS1/60pH8evnLX97eq23t
N7b36Pve97723mmnnXb0M5/5zCC/n/nMQEQBZqfHaP9N/yCmuh7VXmIluN/4
8DHHEt+gP6E4ol+zuG94wxvaYl900UXJepdWGb+6LPzBlnp2N095ylOOXnHF
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
sbbYHq5lX2kylwZqbgOgp6ecxsy2ZqutRA70vFlf1czL5O3SnH6LuWZFXQN1
4CpZebfoTz91bzWu7mA7QQop8zTYIU6MMeC5xUh+cRv0ZXoLKPE3UMb0KFtt
ZQA0bzGX0Oy7dB9eJtRGtalTF6+6Udvsn2uvy3ABrmSiJ4mh5yDVI6Nk4kCz
hy7XT0ltdxOsfFOXX3uHv/E0LNizlwGj7XYQXJU0me5TeIrCojHSIoGx/ME4
e2Y5aMP7sqiB1DwgKGGIGVLrw4Cu1/YzRyzZAEo206GYACyYFRUwqoXMwJYU
peaP9Fr9REgs1F1e64lD3aULS0rK8od1wOSWaowjx9SL7OsGNh3E9syWSjnS
sW/sc0m4hlf1cYAP3gY3yznUh5snw0xlfJUgxzxtvY2gffBz52Nwc29pY6Wh
2Fb99aNDp4j66Lv/4nV37JvQjvkq9ULd04sCX7kM8oMr4/wJmdjIZU7MaxpG
KMj90/LCkU9+Vd8Ry5AWQVb2C19svU6bY4K9ioSOObK9lmwR7uPDZT74yh2t
COoyH5litRhikhydslCJtdESvaXymGFyuC1fiM9FDRC4wsnd+lcpDopF0XIG
kD67LK48Jb4qUu1ZqfTWd376s8Zs+ropLmxCI5I/8MyOWDqbLuXpxLPkZykS
1heySpduNbz1tA6mzELLFMI2O7/cmqeNecbTcMQ9Y/xdGaJhfnnP9KH1vvMO
qBHMXM103zMH89ai5dxkPCqFI9hCourzaOz1M+uWgeY/NxC0nBafeWIebTam
igeCIehkkv0tvOzzE4Y2pxDSqCJa4jAR/PssJze0T4wTMoq49tLz4Zky3P3g
uYG/TO+EBoS9HQ7wxesy+5NVZAGFXjJsr4zucvfzqKSFKrepN3+0OvjAL/Iw
YPCUjsFMKPWE7eCDWnE7JHBWT5rZnvPIJ1qLui/vIXv1nD7Iw4ePaVLbCWtH
+nWZfSzeNV2bWfl8zsU53LwLhmyMbbl4NVqbErVfd1nN6SSDoEflseCuOg8s
67Osd/cfJ+EzpcKAyz/4mb7xbVTzBmCPGTB64UKlDJeeO6y5m0IIaYVhYPrE
9CEk5Dj9yQEuLpIIF1dKeCQ2Mgf53WGKUKfq8OhwKhe32PeV1MSH3WmUZlxm
NrGr2yGQGHtOm1oKAq7XVjAHCXr1oWnNB/ZvoGZjuNUlEPNUIBT41/pxYS5b
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
Nj0T/zmh/NNa/zOhNm7Y8N/834RDYWg=\
\>"],ExpressionUUID->"96ec0902-10d1-4b82-b6f5-e10e5dae85ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Div", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "-", 
        SuperscriptBox["y", "2"]}], ")"}]}]], 
    RowBox[{"2", " ", "\[Pi]"}]], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766116246831623*^9, 3.76611625035771*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"0dd1229c-cb55-4121-a862-62061efa40f2"],

Cell[BoxData[
 TemplateBox[{
  "Div","sclr",
   "\"The scalar expression \\!\\(\\*FractionBox[SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", SuperscriptBox[\\\"x\\\", \\\"2\
\\\"]}], \\\"-\\\", SuperscriptBox[\\\"y\\\", \\\"2\\\"]}], \\\")\\\"}]}]], \
RowBox[{\\\"2\\\", \\\" \\\", \\\"\[Pi]\\\"}]]\\) does not have a divergence.\
\"",2,192,21,17594261052393589716,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766116250677114*^9},
 CellLabel->
  "During evaluation of \
In[192]:=",ExpressionUUID->"d9f0a548-91b0-46ad-bcb9-13883d73b410"],

Cell[BoxData[
 TemplateBox[{FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{"-", 
             SuperscriptBox["x", "2"]}], "-", 
           SuperscriptBox["y", "2"]}], ")"}]}]], 
    RowBox[{"2", " ", "\[Pi]"}]],RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]},
  "Div"]], "Output",
 CellChangeTimes->{3.766116250682023*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"f2c07908-a9e3-4e65-98d7-02b75e72688a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Curl", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "-", 
        SuperscriptBox["y", "2"]}], ")"}]}]], 
    RowBox[{"2", " ", "\[Pi]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766116259050931*^9, 3.766116261893079*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"eedb2ffe-f3fa-43d0-8a0c-c42214890ad4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["x", "2"]}], "-", 
         SuperscriptBox["y", "2"]}], ")"}]}]], " ", "y"}], 
    RowBox[{"2", " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], " ", "x"}], 
     RowBox[{"2", " ", "\[Pi]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.766116262376083*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"296b9fa6-7e03-4011-af48-754b3edb1354"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StreamPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["x", "2"]}], "-", 
           SuperscriptBox["y", "2"]}], ")"}]}]], " ", "y"}], 
      RowBox[{"2", " ", "\[Pi]"}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["x", "2"]}], "-", 
            SuperscriptBox["y", "2"]}], ")"}]}]], " ", "x"}], 
       RowBox[{"2", " ", "\[Pi]"}]]}]}], "}"}], ",", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
    RowBox[{"Disk", "[", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.7661162750651407`*^9},
 CellLabel->
  "In[194]:=",ExpressionUUID->"ac710869-0d5d-4d86-8980-c4e314b95c7c"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.617797413949293, -0.5901852773672283}, \
{-0.636044337601724, -0.570499732529822}, {-0.6536665869213631, \
-0.5502512839038418}, {-0.6706454694277709, -0.5294598668622487}, \
{-0.6869631585849676, -0.5081459742434367}, {-0.7026026903817377, \
-0.4863306313835498}, {-0.7175479599119354, -0.46403537114879806`}, \
{-0.7206763423504963, -0.4590352445117356}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.7228901362927922, -0.4554969143116295}, \
{-0.7317837179547869, -0.4412822089677757}, {-0.7452955675551943, \
-0.41809361786377996`}, {-0.7580699606040402, -0.3944925034871278}, \
{-0.7700941944184929, -0.37050217914747047`}, {-0.7813564083223079, \
-0.3461463408461157}, {-0.7918455802261335, -0.3214490423083422}, \
{-0.797636650196353, -0.30652416788026093`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.7991464755689979, -0.3026330123233541}, \
{-0.8015515232078154, -0.29643467001571566`}, {-0.8104710939550217, \
-0.2711250747686015}, {-0.8186000809748625, -0.24554325831188648`}, \
{-0.8259281617213681, -0.21971565516857633`}, {-0.8324461235239375, \
-0.19366880073857995`}, {-0.838145847059145, -0.16742931233141847`}, \
{-0.8428797823610382, -0.1417850160004344}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.8435322296043465, -0.13766283404692536`}, \
{-0.8470634696004814, -0.11447919856800506`}, {-0.8502704479418876, \
-0.08782204667325441}, {-0.8526373136300979, -0.06107916978975983}, \
{-0.8541611661546515, -0.034277310265765526`}, {-0.8548400991830983, \
-0.0074431785553947805`}, {-0.8546731840328052, 
       0.01939656574864057}, {-0.854323139934103, 0.028666304888538264`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.8541656407974118, 
       0.03283713912713739}, {-0.853660453142762, 
       0.04621533288233076}, {-0.8518028835453872, 
       0.07298662187765553}, {-0.8491023803383349, 
       0.09968403952987198}, {-0.8455617601562995, 
       0.12628131936480563`}, {-0.8411931937258245, 
       0.15275909122567435`}, {-0.8360071476595761, 
       0.17909608862757895`}, {-0.8316736709785826, 
       0.19799036629711997`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.8307406182697306, 
       0.2020585448657712}, {-0.8300055053887821, 
       0.20526369119827947`}, {-0.8231913884835638, 
       0.23123379456412846`}, {-0.8155691222740751, 
       0.2569788150719588}, {-0.8071442014716459, 
       0.28247169451096577`}, {-0.7979232557899223, 
       0.3076859048345952}, {-0.7879140155660066, 
       0.3325954528824311}, {-0.7771252773816002, 
       0.35717488510207807`}, {-0.7760140617879504, 0.3595037992308821}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.7742166901756067, 
       0.36327077673427527`}, {-0.765566869684144, 
       0.38139929227104913`}, {-0.7532496184079583, 
       0.4052443142186535}, {-0.7401853125953862, 
       0.4286861445478788}, {-0.7263866700179329, 
       0.45170153535727925`}, {-0.7118673027974068, 
       0.47426780196286317`}, {-0.696641683027062, 
       0.4963628276199754}, {-0.6891145790035426, 0.5065787387731455}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.686638768040338, 
       0.5099389507156286}, {-0.6807251083927385, 
       0.5179650682451848}, {-0.6641373396365241, 
       0.5390611753692527}, {-0.6468977733060138, 
       0.5596360567491241}, {-0.6290224285462042, 
       0.5796667007023332}, {-0.6105281830452685, 
       0.5991310407730905}, {-0.5914327309072418, 
       0.6180079443779024}, {-0.5747556753393778, 0.6334909440578506}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5716952251964725, 
       0.6363288995819948}, {-0.5515128124514803, 
       0.6539195130908879}, {-0.5307274372752971, 
       0.6709164802040999}, {-0.5094189534904953, 
       0.687250592152679}, {-0.48760850537070133`, 
       0.702905215398864}, {-0.46531780084151764`, 
       0.7178645821508911}, {-0.44256906935320606`, 
       0.7321137790086133}, {-0.43743313150436397`, 0.7351099482589143}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.43382794793461665`, 
       0.7372131162627489}, {-0.4193850197533719, 
       0.7456387356091178}, {-0.3957887981596524, 
       0.758426213272342}, {-0.3718039458324007, 
       0.770463793646692}, {-0.3474543570473685, 
       0.7817398673546608}, {-0.32509633823015477`, 
       0.791287218699219}, {-0.3024636473834386, 
       0.800193288995307}, {-0.282625630930269, 0.8073513564550481}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.2786908984739099, 
       0.8087427875668237}, {-0.2564594582736583, 
       0.8160544025169443}, {-0.23313013023645757`, 
       0.8229971278092334}, {-0.20961044356070002`, 
       0.8292739225931289}, {-0.1859209883623429, 
       0.8348798713461484}, {-0.16208213240385008`, 
       0.839810543689406}, {-0.13811400756380116`, 
       0.8440619875909112}, {-0.116513368549093, 0.847263604035993}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.11237837742361793`, 
       0.8478285261374217}, {-0.08986921815158633, 
       0.850513732894974}, {-0.06563151614364071, 
       0.8527084607977169}, {-0.04134244332179621, 
       0.8542127996656759}, {-0.017020749189346873`, 0.8550250872508193}, {
       0.00731513381664195, 0.8551440988718031}, {0.031528873495978466`, 
       0.8546284310991704}, {0.054219061555796866`, 0.8534575007195454}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.05838244136266526, 0.853168440710463}, {
       0.08004804982772569, 0.8514263633997426}, {0.10423284697894278`, 
       0.8487837743615668}, {0.12833848584268226`, 0.845451333771078}, {
       0.15234344028241723`, 0.8414329520290025}, {0.17622654181902309`, 
       0.8367329567126506}, {0.1999669796307778, 0.8313560925759169}, {
       0.22276013927853075`, 0.8255086917832827}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.22677798775707358`, 0.8243793718148117}, {
       0.2469384090798566, 0.8185928227398025}, {0.27012956736074917`, 
       0.8112179924311311}, {0.2930983952039261, 0.8031894440834966}, {
       0.3158258700746772, 0.794514008333714}, {0.33829332709569504`, 
       0.7851989329951823}, {0.36048245904707454`, 0.7752518830578843}, {
       0.3823753163663126, 0.7646809406883874}, {0.3824053237383652, 
       0.7646653851634141}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{0.3861108341670679, 0.7627444851955071}, {
       0.40395430714830854`, 0.7534946052298431}, {0.4252083221138629, 
       0.7416931507454924}, {0.4461250544982912, 0.7292794628137506}, {
       0.466685767378027, 0.7162664219379685}, {0.4868722344517804, 
       0.7026671099614982}, {0.5066667400405371, 0.6884948100676938}, {
       0.5260520790875597, 0.6737630067799103}, {0.5267175190541186, 
       0.6732267926790516}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{0.5299674932167884, 0.6706079509186721}, {0.5450115571583873,
        0.6584853859615051}, {0.5635289904408353, 0.6426758348158363}, {
       0.5815887057449955, 0.626348441886264}, {0.5991755405032368, 
       0.6095174970561491}, {0.6162748427702038, 0.5921974915488548}, {
       0.6328724712228176, 0.5744031179277456}, {0.648954795160276, 
       0.5561492700961874}, {0.6499744522179578, 0.5549234823692664}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.6526436259266193, 0.5517147168843922}, {0.6645086945040529,
        0.5374510432975479}, {0.6795215597978992, 0.5183237341151957}, {
       0.6939812922078422, 0.4987828404725011}, {0.7078805428669583, 
       0.47883176146384965`}, {0.7212113971516991, 0.45847722056341256`}, {
       0.7339617529315692, 0.43773977388606033`}, {0.7461201245716842, 
       0.4166398717024239}, {0.7472737230823638, 0.41449929489800486`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.749253828425754, 0.41082508109733856`}, {
       0.7576756429327707, 0.3951978584388951}, {0.7686180553711663, 
       0.373433972677626}, {0.7789377257388199, 0.35136834715652915`}, {
       0.7886256343832911, 0.32902100876927765`}, {0.7976733781477509, 
       0.3064118785653045}, {0.8060731703709811, 0.2835607717498032}, {
       0.813817840887375, 0.26048739768372825`}, {0.8147165562710147, 
       0.2575340519833842}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.8159316490606141, 0.25354103135526407`}, {
       0.8209008360269363, 0.23721135988379416`}, {0.8273162186152802, 
       0.213752156022476}, {0.8330586679736327, 0.19012917792800954`}, {
       0.8381234799188311, 0.16636171158439034`}, {0.8425065667633238, 
       0.14246893713137426`}, {0.8462074796988065, 0.11845303427651707`}, {
       0.8492256190227763, 0.09432036645593614}, {0.8496126636009668, 
       0.09029986470633047}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.8500126175125811, 0.08614526471445234}, {
       0.8515576520605234, 0.0700959141919767}, {0.853200938113914, 
       0.04580413023755102}, {0.8541535284613903, 0.021468939576137616`}, {
       0.8544141663579704, -0.002886260578218308}, {
       0.8539822870352486, -0.02723860078090401}, {
       0.8528580177013948, -0.0515657393567403}, {
       0.8510421775411552, -0.0758458623999812}, {
       0.8505568959263128, -0.08053461797439411}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.850127206290619, -0.08468624790020718}, {
       0.8485362777158517, -0.1000576837743136}, {
       0.8453425213633823, -0.12418044511285825`}, {
       0.8414638035982209, -0.14819391581816915`}, {
       0.8369037115114175, -0.17207839306223272`}, {
       0.8316665241705979, -0.19581470178646904`}, {
       0.825757212619964, -0.21938419470173132`}, {
       0.8191814398802938, -0.24276875228830547`}, {
       0.8174547173728531, -0.24812441639471247`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.8161739591382249, -0.25209686180885743`}, {
       0.8072753655802909, -0.27969705692438224`}, {
       0.7936641796360546, -0.31602115601205066`}, {
       0.7783995221852454, -0.3516819889146666}, {
       0.7615354857049523, -0.3866231748931321}, {
       0.7513034491939835, -0.4056164396321461}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.7493239141176591, -0.4092909607037323}, {
       0.7431286150116928, -0.42079101310589595`}, {
       0.7232379072614125, -0.45413448260895317`}, {
       0.7019248119494861, -0.4866052423558441}, {
       0.6788346983149202, -0.5177002620164379}, {
       0.655395226605263, -0.5469629116132216}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.652682958646724, -0.5501340474527826}, {
       0.6289498811576092, -0.5770784992114089}, {
       0.6020024949823359, -0.6049638811661138}, {
       0.573808564201245, -0.6315912502888399}, {
       0.5444356691582821, -0.6569189652769938}, {
       0.5328811357402182, -0.6660105985951764}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5296009983080938, -0.6685915601699206}, {
       0.5139513901973929, -0.680905384827982}, {
       0.48242330766252295`, -0.7035088676392108}, {
       0.4499190018976178, -0.7246877724080868}, {
       0.4164873236891004, -0.7443529070360848}, {
       0.3893607179894885, -0.7586498757206672}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.38566835200548294`, -0.760595922396389}, {
       0.3821839345715837, -0.7624323706232006}, {
       0.3470866310112986, -0.7789104586646212}, {
       0.31127320947447557`, -0.7937714666555338}, {
       0.2748214664273457, -0.8069996900911258}, {
       0.23780919833613973`, -0.8185794244665843}, {
       0.23016501796465746`, -0.82060092571128}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.2261299213993487, -0.8216680058078812}, {
       0.20031420166708838`, -0.8284949652770965}, {
       0.16241427288642254`, -0.8367306080178499}, {
       0.1241622115407124, -0.8432105474827338}, {
       0.0856199069654957, -0.8478808332661096}, {
       0.06184197111733606, -0.8496470704030022}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.05767963144866408, -0.8499562511050663}, {
       0.04687879031045436, -0.8507585430638724}, {
       0.008030292725270644, -0.8518607545719173}, {-0.03083415464037352, \
-0.8512045454861396}, {-0.06962312063679624, -0.848806993502434}, \
{-0.10824517411431527`, -0.8446851763166958}, {-0.10892061744907254`, \
-0.8445825490580964}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.1130470646850057, -0.8439555742316569}, \
{-0.1466088839232486, -0.8388561716248202}, {-0.1721362919560263, \
-0.8339930904002861}, {-0.19747984859920537`, -0.828358804700142}, \
{-0.2226395538527858, -0.8219533145243881}, {-0.2476154077167676, \
-0.8147766198730242}, {-0.27236117152419326`, -0.806842766965706}, \
{-0.27530284840282016`, -0.8057996359304466}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.27923665047744645`, -0.8044046931138427}, \
{-0.2968306066081051, -0.7981658020220892}, {-0.3210237129685033, \
-0.7887457250421737}, {-0.34494049060538773`, -0.7785825360259596}, \
{-0.3685367907901507, -0.7676958365682885}, {-0.39176846479418437`, \
-0.7561052282640015}, {-0.4146355126174888, -0.7438107111130992}, \
{-0.4305892706551334, -0.7345950921664577}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4342034311258202, -0.7325073880887555}, \
{-0.4371379342600639, -0.7308122851155812}, {-0.4592439657935226, \
-0.7171276003794655}, {-0.48092184328947757`, -0.7027743070127703}, \
{-0.5021514989976112, -0.6877660156666064}, {-0.5229128651675974, \
-0.6721163369920912}, {-0.5401592048776945, -0.6583365526630202}, \
{-0.5570312983369561, -0.6441239736883796}, {-0.5685717930400102, \
-0.6338793123969381}}]}, 
     {Arrowheads[{{0.006748085096331913, 1.}}], 
      ArrowBox[{{-0.5716931551907626, -0.6311084348197471}, \
{-0.5735291455453821, -0.6294786000681698}, {-0.5896527465029726, \
-0.6144004318023908}, {-0.5918026804839787, -0.6123370959367206}, \
{-0.5939453848464943, -0.6102662461323274}, {-0.6116224154300965, \
-0.591418366322696}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3530577464662269, -0.26212947117452373`}, {
       0.3371925068306828, -0.28213184186770685`}, {
       0.3201953806033563, -0.30115271621193784`}, {
       0.3020945564944686, -0.31909124748026696`}, {
       0.28296773085330895`, -0.33591463774893654`}, {
       0.262892600029168, -0.3515900890941883}, {
       0.24194686037133567`, -0.36608480359226414`}, {
       0.2299878466335962, -0.37339113563948917`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.2264261540832058, -0.37556714354398374`}, {
       0.2202082082291021, -0.37936598331940613`}, {
       0.19775433995175734`, -0.3914008303518559}, {
       0.17466295188859143`, -0.40215654676585555`}, {
       0.15100005224655438`, -0.411530148820249}, {
       0.1268358994661743, -0.41944417488929775`}, {
       0.10225456524710863`, -0.42590411022236974`}, {
       0.07734012128901477, -0.4309154400688332}, {
       0.07040144857546672, -0.4318993515423816}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.06626898177504553, -0.43248533991030874`}, {
       0.05217663929155017, -0.4344836496780561}, {
       0.026848190954372252`, -0.43661422429940644`}, {
       0.0014388479771384223`, -0.43731264918225254`}, \
{-0.023967317940493886`, -0.4365844095759623}, {-0.0492652126611731, \
-0.43436698838492527`}, {-0.07435738657034552, -0.43062259663897773`}, \
{-0.09917123475255052, -0.4253938117756579}, {-0.09950103510157284, \
-0.42530388111290096`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.10352781915411799`, -0.42420584904684033`}, \
{-0.12363415229232748`, -0.41872321123250394`}, {-0.14767353427421576`, \
-0.4106533724470541}, {-0.17121677578275474`, -0.40122687285684644`}, \
{-0.19419127190248375`, -0.39048628989941925`}, {-0.21652441771794226`, \
-0.3784742010123108}, {-0.23809436417477992`, -0.365182045910654}, \
{-0.2539109897793839, -0.3540567590257863}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.2573248567213565, -0.3516554725525733}, \
{-0.25879716917824275`, -0.3506198598450021}, {-0.2785870882522644, \
-0.3348581135560234}, {-0.29741837692077855`, -0.3179672777843861}, \
{-0.3152452907077189, -0.30001782327075854`}, {-0.3320220851370194, \
-0.2810802207558087}, {-0.34770301573261364`, -0.2612249409802049}, \
{-0.3622423380184352, -0.2405224546846155}, {-0.3692590705550189, \
-0.2291540837741265}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.37145126625259983`, -0.22560233177723302`}, \
{-0.3756944343986941, -0.21872763489105843`}, {-0.3877660640464343, \
-0.1961689581025749}, {-0.3984481849428388, -0.17293318647084546`}, \
{-0.40773175506909076`, -0.1491070821475508}, {-0.4156077324063731, \
-0.12477740728437195`}, {-0.42206707493586876`, -0.10003092403299005`}, \
{-0.42710074063876086`, -0.07495439454508565}, {-0.42786326291024057`, \
-0.06958979136433827}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4284506222086814, -0.06545751919536581}, \
{-0.4306996874962325, -0.04963458097233943}, {-0.43278111169515254`, \
-0.024168554938465158`}, {-0.43328903189304946`, 
       0.0013503608317443766`}, {-0.4322546397770959, 
       0.02684102753499004}, {-0.4297091270344644, 
       0.05222230636797259}, {-0.4256836853523276, 
       0.07741305852739228}, {-0.42067049366158316`, 0.10023367871415995`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4196624552292798, 
       0.10428216715117765`}, {-0.41331778191822766`, 
       0.12689842761234627`}, {-0.40503970354060975`, 
       0.15103076693128162`}, {-0.39534537185641583`, 
       0.174605779011471}, {-0.3842271023882431, 
       0.19751544164380608`}, {-0.37174940925004285`, 
       0.21970165894425228`}, {-0.3579768065557664, 
       0.2411063350287749}, {-0.34849522537492156`, 0.254103009749829}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.3460353149416551, 
       0.25747487939206554`}, {-0.3429738084193649, 
       0.26167137401333984`}, {-0.3268049289547892, 
       0.28133868001391277`}, {-0.30953468227599074`, 
       0.3000501571464591}, {-0.29122758249692066`, 
       0.31774770952694426`}, {-0.2719127283436828, 
       0.33430761517987984`}, {-0.2516320968652344, 
       0.34963001616303346`}, {-0.23046951965980722`, 
       0.3636926126422544}, {-0.22260258283382847`, 
       0.36827094411412337`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.2189951998817632, 
       0.37037033746961395`}, {-0.20850882832563267`, 
       0.3764731047833926}, {-0.18583385446094208`, 
       0.38794919275229783`}, {-0.1625284296639674, 
       0.39809857671481935`}, {-0.1386763855329399, 
       0.40689895683680716`}, {-0.11436155366609087`, 
       0.4143280332841108}, {-0.09285490590114462, 
       0.41961762357721605`}, {-0.07110854679429139, 
       0.423751147789506}, {-0.06233485450571746, 0.4249457697130406}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.05819920777642379, 
       0.42550887747751537`}, {-0.04918002107087319, 
       0.42673692580842554`}, {-0.027126873456232794`, 
       0.42858327752141945`}, {-0.0050066486757125855`, 
       0.42929852281593267`}, {0.017123108545345093`, 0.4288909815794102}, {
       0.039204853481597586`, 0.42736897369929666`}, {0.06118104140770251, 
       0.42474081906303707`}, {0.08297749165361401, 0.4209721596186772}, {
       0.10452607298372377`, 0.41604415656495336`}, {0.10737525863181333`, 
       0.41523229162696695`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.11138928721987279`, 0.41408850899107386`}, {
       0.12577831482434584`, 0.40998840866534625`}, {0.146685746601794, 
       0.40283651468333675`}, {0.16719989774238225`, 0.39462007338240557`}, {
       0.1872722976724248, 0.3853706835260334}, {0.20685447581823518`, 
       0.3751199438777011}, {0.2258979616061276, 0.3638994532008893}, {
       0.2443263428374491, 0.35171254567967003`}, {0.25991356691058, 
       0.3401719276432899}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.2632201890841134, 0.3376271276421056}, {
       0.27910580711977134`, 0.3245273325496469}, {0.29539043079609106`, 
       0.3096230585544325}, {0.3108940092460626, 0.29390702734814245`}, {
       0.3255833127823453, 0.2774262547375715}, {0.3394251117175989, 
       0.2602277565295142}, {0.35238617636448266`, 0.24235854853076533`}, {
       0.36439306792589365`, 0.2238269827489691}, {0.37130807354415574`, 
       0.2117683776134019}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3733843763647787, 0.2081476551963969}, {0.3753869690991879,
        0.20465547075509707`}, {0.3853565824387135, 0.1849121177009351}, {
       0.39429061049881886`, 0.1646650287382692}, {0.40217775583385185`, 
       0.14398230901888515`}, {0.40900672099816093`, 0.12293206369456884`}, {
       0.4147662085460941, 0.10158239791710616`}, {0.41944492103199965`, 
       0.08000141683828293}, {0.4239377345916391, 0.0501199038799178}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.424494233623978, 0.045985421846743584`}, {
       0.42680055210593076`, 0.0133127617686888}, {
       0.4265301715346519, -0.02025904137556511}, {
       0.42361881117708805`, -0.05370599371333012}, {
       0.41809300156978857`, -0.08682280632173042}, {
       0.41000322644621734`, -0.11930800412587392`}}]}, 
     {Arrowheads[{{0.014988978489430116`, 1.}}], 
      ArrowBox[{{0.40868710343915726`, -0.12326855821764784`}, {
       0.3993147022537924, -0.15129769678357227`}, {
       0.3861718822212369, -0.1822523977475407}, {
       0.3729082912736159, -0.20805071158580596`}, {
       0.35792149969555254`, -0.23288821514314828`}, {
       0.3568521673061049, -0.2345316521824084}, {
       0.35577529095967614`, -0.2361701761122869}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.007755764793346297, 0.6560006355062513}, {
       0.04341920395992626, 0.6543849627591496}, {0.07894776875942892, 
       0.6508433156912244}, {0.11424143356457528`, 0.6454053826628047}, {
       0.14920017274808442`, 0.6381008520342196}, {0.17252026382076682`, 
       0.6319260020823279}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.17655502411810567`, 0.6308576512191058}, {
       0.18372396068267552`, 0.6289594121657984}, {0.217672695587453, 
       0.6179383305677986}, {0.2509208488282908, 0.6050212096050487}, {
       0.283390254498062, 0.5902772399197351}, {0.31500274668964007`, 
       0.5737756121540449}, {0.3294996782057396, 0.565179692866217}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.33308981002012333`, 0.5630509331852575}, {
       0.34568015949589986`, 0.5555855169501644}, {0.3753443270097146, 
       0.5357761449502798}, {0.4039170833239577, 0.5144166867965784}, {
       0.43132026253150396`, 0.4915763331312457}, {0.4574086917368118, 
       0.46727550439495796`}, {0.46408164030730237`, 0.46031285739433375`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.46696961261570835`, 0.4572995070712201}, {
       0.48206156422194524`, 0.44155235564712236`}, {0.505237263346187, 
       0.4145026794580215}, {0.5268941724688188, 0.38622226839793916`}, {
       0.5469906749491218, 0.3568069150371591}, {0.5654851541463789, 
       0.32635241194596376`}, {0.5667359963447878, 0.32402174058267547`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5687097378031684, 0.3203441042657731}, {0.5823359934198719,
        0.29495455169463697`}, {0.5975015761288821, 0.26270912685346254`}, {
       0.6108588245001766, 0.22969605214792546`}, {0.6223142829905272, 
       0.19600101606525525`}, {0.6307216245901213, 0.16584966046614996`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6318426748171836, 0.161829223846536}, {0.6318707683042244, 
       0.16172847181835287`}, {0.6395310971455583, 0.12698287262011929`}, {
       0.6452980862188197, 0.09186867168345443}, {0.649174552228299, 
       0.05649032222125808}, {0.6511633118782866, 0.020952277446431262`}, {
       0.6512348066004496, -0.0035469262090514417`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6512469867471938, -0.0077207153589672044`}, {
       0.651267181873073, -0.014641009428124994`}, {
       0.6494083806821339, -0.05016497775511265}, {
       0.6455384352239686, -0.08550237868156035}, {
       0.6397041248764028, -0.12055972668605698`}, {
       0.6319522290172624, -0.1552435362471915}, {
       0.6271247419988415, -0.17240930615262914`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.6259947859125324, -0.17642724884347757`}, {
       0.622329527024373, -0.18946032184355457`}, {
       0.61088279827556, -0.22311659795373515`}, {
       0.5976588221486496, -0.25611887905632214`}, {
       0.582704378021467, -0.28837367962990623`}, {
       0.5660016064788251, -0.3197350934471315}, {
       0.5601699706599048, -0.3293276323566552}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5580017934386061, -0.3328940972395568}, {
       0.5475561531211777, -0.35007627635553107`}, {
       0.5274500548498116, -0.3793323359460291}, {
       0.5057653485660148, -0.40743837980954795`}, {
       0.48258407117107466`, -0.43432951553701094`}, {
       0.4579882595662781, -0.4599408507193412}, {
       0.4544591945844112, -0.46324374862914697`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.4514118352368784, -0.46609581195785016`}, {
       0.432059950652913, -0.4842074929474615}, {
       0.40488118133226675`, -0.5070645498122951}, {
       0.3764979526966866, -0.5283721481840778}, {
       0.34696936976904375`, -0.5480176806496592}, {
       0.3176734601343121, -0.5652273785302656}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3140030962564905, -0.5672115672563998}, {
       0.28488291222586104`, -0.5822265725255906}, {
       0.25252842320446695`, -0.5967419442676278}, {
       0.2194353510793014, -0.609499274766837}, {
       0.18570538864743685`, -0.6204745701890617}, {
       0.15885992785945094`, -0.6276583447576966}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.15482798553959431`, -0.628737281898256}, {
       0.15144022870594684`, -0.6296438367001451}, {
       0.11674036716105429`, -0.6368999404688404}, {
       0.08170673515201837, -0.6421659803901153}, {
       0.046441678325466786`, -0.6454633117191348}, {
       0.011047542328026391`, -0.646813289711065}, {-0.010678552039070751`, \
-0.6464599763395543}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.014851807172264359`, -0.6463921101682872}, \
{-0.024373327193675715`, -0.646237269621071}, {-0.05971858459301242, \
-0.6437566067043179}, {-0.09488588422335689, -0.6393926562159716}, \
{-0.1297728804380814, -0.6331667734111974}, {-0.16424240137214866`, \
-0.625023935878206}, {-0.17929503238204436`, -0.6205486183239545}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.18329576273945758`, -0.6193591559112648}, \
{-0.1981699392399432, -0.6149368949022825}, {-0.23147214451397038`, \
-0.602968666284204}, {-0.2640656676667364, -0.5891822658247474}, \
{-0.29586715917074724`, -0.5736407093246905}, {-0.3267932694985085, \
-0.5564070125848095}, {-0.3351362217957204, -0.5511555818871284}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.338668528095133, -0.548932188887441}, \
{-0.3567606491225264, -0.5375441914058822}, {-0.38568594851530674`, \
-0.5171152615886853}, {-0.40958968732011913`, -0.4983358028501377}, \
{-0.43254689249733125`, -0.47842623980055055`}, {-0.4545223005173421, \
-0.45744336085594295`}, {-0.467622368657462, -0.44369257609178253`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.4705013266409947, -0.44067061230096993`}, \
{-0.47548064785055, -0.43544395443233486`}, {-0.49538667096735395`, \
-0.41248480894574546`}, {-0.5142051063381529, -0.38862271281219374`}, \
{-0.5319006904333453, -0.3639144544476999}, {-0.5484381597233301, \
-0.33841682226828285`}, {-0.5637370316411576, -0.31216956290114745`}, \
{-0.5673290551267934, -0.3052528157850619}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5692526771716941, -0.3015487177231444}, \
{-0.5777332669061868, -0.28521861998761294`}, {-0.5904162669182789, \
-0.2576300774648705}, {-0.6017754330772956, -0.2294700192701109}, \
{-0.611800166783099, -0.20080452934052534`}, {-0.62047986943555, \
-0.17169969161330495`}, {-0.627010321896975, -0.14541577266566275`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6279770388851171, -0.14135622230791134`}, \
{-0.6337617871798428, -0.1124363085147232}, {-0.6383004288956017, \
-0.08241128112817675}, {-0.6413823023243179, -0.052213450964376226`}, \
{-0.6430199231435658, -0.02190816553664055}, {-0.6432258070309189, 
       0.008439227641711358}, {-0.6425844804264949, 0.02446748727629346}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.6424176105777628, 
       0.028637957115234078`}, {-0.6420124696639515, 
       0.03876338105736094}, {-0.6393924267202372, 
       0.06899894719698958}, {-0.6353781938773503, 
       0.09908057854727838}, {-0.6299822868128646, 
       0.12894292759490844`}, {-0.6231451281385418, 
       0.15852646301255366`}, {-0.6148333561264391, 
       0.18776953849616332`}, {-0.6132305114530715, 
       0.19251722530499626`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6118954429787209, 
       0.19647174884048374`}, {-0.6050988099445731, 
       0.2166036340673318}, {-0.5939933287609612, 
       0.2449602297476533}, {-0.5815687517436205, 
       0.2727708055587226}, {-0.5678769180605678, 
       0.2999668415221341}, {-0.5529696668798203, 
       0.32647981765948214`}, {-0.5403059974565737, 0.3467795667688351}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5380968547523939, 
       0.35032080281525985`}, {-0.536898837369395, 
       0.35224121399236125`}, {-0.5163819429152576, 
       0.3817046668592605}, {-0.494320751202072, 
       0.409888091516335}, {-0.4707152622298381, 
       0.43679148796358486`}, {-0.44556547599855584`, 
       0.46241485620101}, {-0.42982464135812426`, 0.4767642407398941}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.4267401332865812, 
       0.47957608607357005`}, {-0.41903176336804043`, 
       0.486603055523144}, {-0.39127449519810686`, 
       0.5092009452245201}, {-0.36229367148875524`, 
       0.5302085253051384}, {-0.3320892922399853, 
       0.5496257957649988}, {-0.30085210803525614`, 
       0.5673371600159356}, {-0.2890966290342689, 0.5731600205616934}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.28535650464781964`, 
       0.5750126224611355}, {-0.2687728694580265, 
       0.583227021469783}, {-0.23585157650829636`, 
       0.5972953801265408}, {-0.20208822918606573`, 
       0.6095422359862093}, {-0.17831651662272885`, 
       0.6169173517512061}, {-0.15427673411658094`, 
       0.6233654086903928}, {-0.1300051474492468, 
       0.6288769948954237}, {-0.12798004619953265`, 0.6292548902130215}}]}, 
     {Arrowheads[{{0.012184280152941113`, 1.}}], 
      ArrowBox[{{-0.12387706432279741`, 
       0.630020529777772}, {-0.10553802240236039`, 
       0.633442698457951}, {-0.06698969149037207, 
       0.6386718627853178}, {-0.028194988463505943`, 
       0.6415551577260401}, {-0.025572042301128146`, 
       0.6416704307522179}, {-0.02294863389585913, 0.6417749797156733}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.12207217935888633`, -0.19219866452878384`}, {
       0.09708090398634578, -0.2056631072803529}, {
       0.07065014771540931, -0.2160151157144628}, {
       0.04318630068624078, -0.22294896638162365`}, {
       0.015101874152692485`, -0.22630136125127315`}, \
{-0.013179908682428597`, -0.22615824677597246`}, {-0.03826697249022658, \
-0.22298151057453178`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.042379770876799505`, -0.22231106728677424`}, \
{-0.06856437381800137, -0.21556999789967352`}, {-0.09472667775904792, \
-0.2051056231624879}, {-0.11939344519043947`, -0.19148952489059662`}, \
{-0.14223538486316048`, -0.17499878277787043`}, {-0.16291673582341543`, \
-0.15565947491999865`}, {-0.1801375549974622, -0.13476864899397462`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.182491865182181, -0.13133027069054076`}, \
{-0.19602630685233027`, -0.10996186969900343`}, {-0.20813977255988073`, \
-0.08442067715758528}, {-0.2169031658320481, -0.05760977072283438}, \
{-0.22212323822360325`, -0.029933798041498816`}, {-0.22385784014203797`, \
-0.0018247401090587846`}, {-0.22216482199484403`, 
       0.02628542207900596}, {-0.22203533608344797`, 
       0.026968968813711223`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.22125849718649915`, 
       0.031069845006930982`}, {-0.2169345129603957, 
       0.05389584411991478}, {-0.2081912592003613, 
       0.08056077233672743}, {-0.19619393659717366`, 
       0.10593086182272475`}, {-0.18120142103326561`, 
       0.12965676767118717`}, {-0.1633614169491834, 
       0.1512488333526037}, {-0.14291056593898255`, 
       0.17032965163569658`}, {-0.14003334629139247`, 
       0.17240970526516375`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.13665087848618498`, 
       0.1748550223756147}, {-0.12024114961536002`, 
       0.18671825156109628`}, {-0.09574544959101239, 
       0.20023366216943336`}, {-0.07168261520345572, 
       0.20990931005796729`}, {-0.046654156250054556`, 
       0.21663145202859047`}, {-0.02101176517864767, 0.22040911732289903`}, {
       0.004892865562926004, 0.2212513351824893}, {0.01987563340824014, 
       0.21995951113512816`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.024034012253714685`, 0.21960097299010164`}, {
       0.03066284450351149, 0.2190294307360522}, {0.05593743939060675, 
       0.21372489240260287`}, {0.0804191966043521, 0.2055119943592239}, {
       0.10381066252488783`, 0.19456501078299782`}, {0.12573583540800323`, 
       0.18097197535337628`}, {0.14588155200896835`, 0.1648899141479156}, {
       0.16404461645714513`, 0.1465965899408555}, {0.16743609250378558`, 
       0.14230305164574483`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.17002323297979643`, 0.13902778549147346`}, {
       0.18002183288189552`, 0.12636976550643553`}, {0.1934761709065452, 
       0.10436875557886655`}, {0.20417766775924878`, 0.08084763332438245}, {
       0.2120837289766117, 0.05622629916525736}, {0.2171517600952392, 
       0.030924653523765448`}, {0.21917131485119334`, 0.008807902153245506}, {
       0.21893828687304256`, -0.013399922098725016`}, {
       0.21859210253493833`, -0.016490669331561042`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.21812751344326192`, -0.020638538808753465`}, {
       0.21646611100765772`, -0.0354716043616049}, {
       0.21176822210190957`, -0.05717992976485296}, {
       0.20490411625163346`, -0.07830627489780753}, {
       0.19593328955266462`, -0.09863201634980687}, {
       0.18492438675984785`, -0.11799798876356504`}, {
       0.17200594040716563`, -0.13614599167660768`}, {
       0.1504830949110644, -0.15961403656344478`}, {
       0.14969903899884296`, -0.16035323964021847`}, {
       0.14891135243051937`, -0.16108859085136726`}, {
       0.14343932214070731`, -0.16518219641594015`}}]}, 
     {Arrowheads[{{0.0013784175101823515`, 1.}}], 
      ArrowBox[{{0.14009722514345543`, -0.16768240678406707`}, {
       0.13088361509997576`, -0.17457507428519825`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.1721736907780923, -0.29582203008308705`}, {
       0.13663560066650954`, -0.3135087232634488}, {
       0.09933099229388867, -0.3270791048605913}, {
       0.06075482309596056, -0.33618545003488054`}, {
       0.021409824949332582`, -0.34064094633591924`}, {
       0.013082712391575524`, -0.3406197974221857}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{
       0.008908918930676604, -0.34060919696527653`}, {-0.018187664997853965`, \
-0.3405403779944743}, {-0.057521309597457736`, -0.33597852924131233`}, \
{-0.0959933352577609, -0.32686524092913694`}, {-0.1330711175419068, \
-0.3132583086131021}, {-0.15202350664571504`, -0.3037007487868472}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.15575025132874695`, -0.3018213770057931}, \
{-0.16833604303404603`, -0.2954744485776506}, {-0.20136949831832904`, \
-0.27383037710722513`}, {-0.23159695424286955`, -0.24851660436273615`}, \
{-0.25856861424461075`, -0.21982460540391985`}, {-0.2791812340421924, \
-0.1920869293798062}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.2816707581076152, -0.18873686458168515`}, \
{-0.2820529637909474, -0.18822254386345763`}, {-0.30181848834927405`, \
-0.1541785833740309}, {-0.3181632441941328, -0.11606708184623447`}, \
{-0.32957357177397134`, -0.07625414597954382}, {-0.3360690834895094, \
-0.035349579628637925`}, {-0.3361712561042203, -0.032707241204718795`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.33633252625489335`, -0.028536551074484814`}, \
{-0.3376693917414668, 0.006036813351804249}, {-0.33415850497441973`, 
       0.04722588447810272}, {-0.3255089147978592, 
       0.08759396096977837}, {-0.3120229583598775, 
       0.126614452526954}, {-0.3083369972672362, 0.13421267597230085`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.30651528602183953`, 
       0.13796794325470893`}, {-0.2940029728085667, 
       0.16376076884975255`}, {-0.2715755533382644, 
       0.19833585746084395`}, {-0.24500788870631207`, 
       0.2297790356248603}, {-0.21481320640530727`, 
       0.2577682676548678}, {-0.20289337074396438`, 
       0.26643326913502696`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.19951732771049044`, 
       0.26888744876579185`}, {-0.1815047339278475, 
       0.2819815178639326}, {-0.1455203252410066, 
       0.30186357346283765`}, {-0.10735813313227764`, 
       0.3170457633441922}, {-0.06762183332488698, 
       0.32748586434380195`}, {-0.04641023866915199, 0.3304330010332242}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.042276143899375465`, 
       0.3310073917177201}, {-0.026915101542061073`, 0.33314165329747225`}, {
       0.0088311198505105, 0.3339732775072569}, {0.04443439217434663, 
       0.33090185257913246`}, {0.079513587708776, 0.3240661114774548}, {
       0.11368757873312695`, 0.3136047871665798}, {0.12147498360407166`, 
       0.3102636124104}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.12531065456799828`, 0.30861792335094207`}, {
       0.14649004753343692`, 0.29953093554177346`}, {0.17752282839037614`, 
       0.2819581541535737}, {0.20650702157522224`, 0.26117598844924433`}, {
       0.23316372735925267`, 0.23747398387604934`}, {0.2571054402211638, 
       0.2110734219863386}, {0.2578504625381046, 0.2100472418577307}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.2603025987074645, 0.2066697142959118}, {0.2780315392737168,
        0.1822501954483931}, {0.2957934517392869, 0.1513757663833737}, {
       0.31024260484024924`, 0.1188215969124411}, {0.32106905203100844`, 
       0.08486766942546183}, {0.3269516091278325, 0.05555033091587439}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.32777272194646373`, 0.05145808972515643}, {
       0.3280919457803456, 0.0498671500973378}, {0.33135636183220046`, 
       0.01430127672678275}, {0.33090737593051267`, -0.0213487128874896}, {
       0.32789185436519674`, -0.04944420621145261}, {
       0.3224909972819306, -0.07718023325534487}, {
       0.31475232124884983`, -0.10435724850507733`}, {
       0.3114906272926138, -0.11294924272793833`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3100093122843288, -0.11685134089048613`}, {
       0.30472334283409014`, -0.13077570644656097`}, {
       0.2924851854744626, -0.15624788149385332`}, {
       0.2781189726067783, -0.1805860480610118}, {
       0.2617028351836741, -0.20365584390808375`}, {
       0.24337704659891998`, -0.2252398542366004}, {
       0.22692161227496954`, -0.2418112639458187}, {
       0.21521108626329244`, -0.2520486513465902}}]}, 
     {Arrowheads[{{0.004193579015408172, 1.}}], 
      ArrowBox[{{0.21206873700740744`, -0.2547957052918138}, {
       0.20933887613307503`, -0.257182160289043}, {
       0.20811425374371786`, -0.258178967861941}, {
       0.20688488639485664`, -0.25916994292400986`}, {
       0.18340109499008345`, -0.27482288780076475`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.352648868659846, -0.417956690474025}, \
{-0.3804006568773186, -0.39280871366268316`}, {-0.40313939844515334`, \
-0.36936727831916905`}, {-0.42444272813199047`, -0.3445797542070867}, \
{-0.4442307966967193, -0.3185514581113151}, {-0.46174371241947293`, \
-0.2924132632961014}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.46391854960578366`, -0.288852664493953}, \
{-0.47897547785213823`, -0.263196415944032}, {-0.4938061163173362, \
-0.23408290227809117`}, {-0.5068695454094421, -0.20415508143960087`}, \
{-0.5181196402440743, -0.17352086904925348`}, {-0.5275123953013455, \
-0.14225975935677176`}, {-0.5290277986855517, -0.135836310713858}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5299861636541044, -0.13177402061946786`}, \
{-0.5350129346384691, -0.11046668714358861`}, {-0.5405985750031865, \
-0.07827119318765272}, {-0.5442528846271881, -0.045800250979339735`}, \
{-0.5459656832261127, -0.013178266721454446`}, {-0.545733041999547, 
       0.019472920670769833`}, {-0.5447737156309421, 
       0.03382963435871089}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.5444954392859972, 
       0.03799415431901524}, {-0.5435572836310263, 
       0.05203403956967184}, {-0.5394469822880343, 
       0.08438838563516006}, {-0.533399088642858, 
       0.11644719752543785`}, {-0.5254260203965363, 
       0.14811119859764127`}, {-0.5155674994872719, 
       0.1792537925482926}, {-0.5075719046711438, 0.20009708325140688`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.5060770251817198, 
       0.20399400505406456`}, {-0.5038675926727735, 
       0.2097536571039642}, {-0.49037471153025636`, 
       0.23949474402127618`}, {-0.47514161245644154`, 
       0.26836627908689736`}, {-0.4582253966675563, 
       0.29626276211754515`}, {-0.4396875101993349, 
       0.3230839669599842}, {-0.42102156954020226`, 0.3468909583323171}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4183621592362558, 
       0.35010539790339223`}, {-0.39791981656113706`, 
       0.3731666358784601}, {-0.37484028575722317`, 
       0.3962515821754851}, {-0.3504227768446308, 
       0.41791546977287175`}, {-0.32476346636689885`, 
       0.43807884591739915`}, {-0.29795998537367774`, 
       0.4566687756081682}, {-0.2931796668168211, 0.4595783227324744}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.289614336749437, 
       0.46174836552802845`}, {-0.27011141942073047`, 
       0.47361884159660095`}, {-0.241318308569932, 
       0.48886914438644075`}, {-0.21165381567893254`, 
       0.502369208777173}, {-0.18120742245993426`, 
       0.5140735788359966}, {-0.15010402247898139`, 
       0.5239398931201814}, {-0.13682411384135681`, 0.5272948953653598}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.1327774500820589, 
       0.5283172341756933}, {-0.11846688842579424`, 
       0.5319326179706168}, {-0.08641767211376877, 
       0.5380230475118117}, {-0.05407640447997708, 
       0.542189303651895}, {-0.021561495585167845`, 0.544416336082615}, {
       0.011010265386234126`, 0.544695922279339}, {0.03277770541986884, 
       0.5435659951129997}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.03694590041580089, 0.543349628064177}, {
       0.04355456280258595, 0.54300657866781}, {0.07597279563981718, 
       0.5393440063669738}, {0.1081316461534641, 0.5337343944607734}, {
       0.1399027084275424, 0.5262086170078922}, {0.17116248837454756`, 
       0.5168022330417533}, {0.1991093226330267, 0.5065406650329874}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.20299816567427872`, 0.5050293015974916}, {
       0.2316787840797169, 0.49251330657709613`}, {0.2607128708052678, 
       0.47772530701912536`}, {0.28881415788325626`, 0.46121908217060836`}, {
       0.31589501766269107`, 0.4430406790152748}, {0.341845244110593, 
       0.42327228166480074`}, {0.34582241517303314`, 0.41984902899483445`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3489857988836215, 0.4171262238744644}, {0.3665620327019009,
        0.4019979107087085}, {0.38994998041947165`, 0.3793034232143659}, {
       0.41192108575408004`, 0.35527651272698674`}, {0.43239474870441846`, 
       0.33000670926963105`}, {0.4512977707770971, 0.30358537934320506`}, {
       0.45853615244752627`, 0.29206551119144886`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.46075674474062367`, 0.28853144355036364`}, {
       0.46859398529201063`, 0.27605849283619915`}, {0.48423935100842713`, 
       0.24749820739704}, {0.4981623302783232, 0.21803414723608594`}, {
       0.510301947527499, 0.18779273484524683`}, {0.5206077892555785, 
       0.15689719099798344`}, {0.5262858653224708, 0.13573312158286147`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5273674021293933, 0.13170187582513332`}, {
       0.5290400040360093, 0.12546753474930802`}, {0.5355693025160624, 
       0.09362058343578467}, {0.5401769574168325, 0.061469952675528995`}, {
       0.5425025818555044, 0.034706459593477075`}, {0.5434617911894717, 
       0.007870208437166681}, {0.5430770137315903, -0.018978844721815637`}, {
       0.5421294953201813, -0.033888177819852226`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5418647754545125, -0.03805358147575996}, {
       0.5413735991579516, -0.045782308355478925`}, {
       0.5383798185078822, -0.07248335547942752}, {
       0.5341268641839448, -0.09902672365286116}, {
       0.5286488499519372, -0.12535871497857543`}, {
       0.5214842316153628, -0.15116018066266326`}, {
       0.5133272293077806, -0.17673094447118576`}, {
       0.5045396091319408, -0.20007564480431508`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5029620377331386, -0.20393840881510875`}, {
       0.4931730564458297, -0.22643030539510728`}, {
       0.48125872023923444`, -0.2504593294340747}, {
       0.4681747737474083, -0.27387486714009185`}, {
       0.453962634144238, -0.2966271319749432}, {
       0.4386637186036103, -0.31866633740041284`}, {
       0.4223194442994119, -0.339942696878285}, {
       0.4169458394336686, -0.3462609119109158}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.41424176799452617`, -0.34944032410123393`}, {
       0.4049438835239563, -0.36037265628816584`}, {
       0.3865610521628567, -0.3798849406304536}, {
       0.36722728277994865`, -0.3984481820481205}, {
       0.34699890793906796`, -0.41603101268413856`}, {
       0.3259322602040502, -0.43260206468147977`}, {
       0.3040836721387312, -0.44812997018311634`}, {
       0.28843546144921717`, -0.45814891887840303`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.2849204008342874, -0.46039947727517894`}, {
       0.28150947630694656`, -0.4625833613320202}, {
       0.2582660052725321, -0.47593087027116354`}, {
       0.23437274248809611`, -0.48809500458303573`}, {
       0.2098625710830569, -0.4990150444175746}, {
       0.18481192313646516`, -0.5086847807689244}, {
       0.1592972307273715, -0.5170980046312296}, {
       0.13339492593482655`, -0.5242485069986345}, {
       0.13157483259575464`, -0.524656884966622}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.1275022788396482, -0.5255706519651248}, {
       0.10718144083788086`, -0.5301300788652836}, {
       0.08073320751558508, -0.5347365112253214}, {
       0.05412665804698989, -0.538061595072892}, {
       0.01529187146541867, -0.5405633934003573}, {-0.02362228715853338, \
-0.5402622806123132}, {-0.03821162171606904, -0.5390981609605936}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.04237220475989128, -0.5387661775884375}, \
{-0.06241450812330213, -0.5371669518582263}, {-0.10088348172732335`, \
-0.531286102287563}, {-0.1388316576292197, -0.5226576787851058}, \
{-0.17606148548761386`, -0.5113196282356369}, {-0.20414666032592926`, \
-0.500504393218334}}]}, 
     {Arrowheads[{{0.01869791455042596, 1.}}], 
      ArrowBox[{{-0.20804164891364946`, -0.49900448384591883`}, \
{-0.21242730693618087`, -0.4973156240651889}, {-0.24768966510478096`, \
-0.48072800530856424`}, {-0.2780758481632085, -0.46381539563770424`}, \
{-0.30731125319455505`, -0.4449825176975936}, {-0.3092446881310277, \
-0.44364726020787193`}, {-0.31117231609529916`, -0.44230360571394606`}, \
{-0.3407513723117126, -0.41818954054915625`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.7202290397449312, -0.2643876795173084}, {
       0.7046659872110792, -0.3029850186327385}, {
       0.6869902785737468, -0.3406524616125417}, {
       0.6672829489863812, -0.37730016661297267`}, {
       0.6456250336024288, -0.4128382917902877}, {
       0.645343082041294, -0.4132498044899967}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.6429839768893829, -0.4166929552427457}, {
       0.6220975675753357, -0.4471769953007424}, {
       0.5967815860585493, -0.4802264353005918}, {
       0.5697581242055164, -0.5118967699460908}, {
       0.5410523849104746, -0.5420203423488898}, {
       0.5373131761224538, -0.545524784052295}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.5342677953105156, -0.5483789599288325}, {
       0.5107098737073731, -0.5704577920004961}, {
       0.4788420797092279, -0.5971617216269489}, {
       0.4455604920290547, -0.6220847339542882}, {
       0.4109765997798678, -0.6451794317085553}, {
       0.40244202538809115`, -0.6502415279592286}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.3988521780969204, -0.6523707674126493}, {
       0.37520189207468296`, -0.6663984176157894}, {
       0.3383478580265161, -0.6856942944020311}, {
       0.30052598674838127`, -0.7030196647933206}, {
       0.26182989830837944`, -0.7182328142760486}, {
       0.24789123315962153`, -0.7228213965154247}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.24392672149262357`, -0.7241265062679613}, {
       0.22235971060912627`, -0.7312263255146605}, {
       0.18223665951540807`, -0.7420042470022774}, {
       0.1415819808920113, -0.7505706272320217}, {
       0.1005169106037237, -0.7569295146970145}, {
       0.08101572964707596, -0.7588890737876777}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.07686283607282055, -0.759306373661674}, {
       0.059162684515333006`, -0.7610849578903777}, {
       0.01764053849162563, -0.7630410053052324}, {-0.023928291602611996`, \
-0.7628017054347008}, {-0.06539891258922975, -0.7602778351682298}, \
{-0.08970832860071812, -0.7574105711998502}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.09385340219644563, -0.7569216651660033}, \
{-0.10663503394948198`, -0.7554140883420576}, {-0.14752832380768904`, \
-0.7482653888694915}, {-0.18797045028817136`, -0.738886660663839}, \
{-0.22785308151524789`, -0.727332827638408}, {-0.25573727257980655`, \
-0.7176097440768067}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.2596783558560515, -0.7162355072581936}, \
{-0.26706788561323785`, -0.7136588137065064}, {-0.30550653070646144`, \
-0.6979195427814416}, {-0.3430606849192391, -0.6801699387765209}, \
{-0.3795610463350687, -0.6603902192023771}, {-0.40894553641440107`, \
-0.6422410936687296}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4124966093790171, -0.6400477981975488}, \
{-0.4148604839613833, -0.6385877675342521}, {-0.4488839223084061, \
-0.6148582566323668}, {-0.4815562858863587, -0.5892973593569426}, \
{-0.512802499205463, -0.5620007485682014}, {-0.5412726518717994, \
-0.5343042877023267}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.5441731430240369, -0.5313049927512761}, \
{-0.5707161731080168, -0.5025830778916508}, {-0.5972334827119098, \
-0.47065336372428496`}, {-0.6219372794763355, -0.43732856882867566`}, \
{-0.6446970856978298, -0.402677601465891}, {-0.6464016478746846, \
-0.3997373274065796}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6484949900706208, -0.3961264296408374}, \
{-0.6654853134983457, -0.36681907558114074`}, {-0.6842743749998366, \
-0.3298716051196348}, {-0.7010366823242569, -0.29195380402658194`}, \
{-0.7157446475935599, -0.25318428624719064`}, {-0.7183941018213995, \
-0.24489503454129177`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.7196648253331099, -0.24091936780718093`}, \
{-0.7283706829296993, -0.21368166572667122`}, {-0.738887200454629, \
-0.17356455641023258`}, {-0.7471698157820479, -0.13295058327103182`}, \
{-0.7531293432559294, -0.0919577309084268}, {-0.7543680910057949, \
-0.07800185290584284}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.7547371144415186, -0.07384439142943491}, \
{-0.7567909930936393, -0.050705152706928}, {-0.7581799755125422, \
-0.009312002051045806}, {-0.7573215007300038, 
       0.03210256767470929}, {-0.7542407789633894, 
       0.07341940308582687}, {-0.7517634131144549, 0.09271160946694579}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.7512318080854402, 
       0.09685142351072305}, {-0.748963020430064, 
       0.11451935079779679`}, {-0.7415134353473932, 
       0.155283257426108}, {-0.7318289250627196, 
       0.19555210398994777`}, {-0.7198785032397574, 
       0.23518136808897705`}, {-0.7113719059096854, 0.2585739981597001}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.7099455087426119, 0.2624965044179098}, {-0.70573554857043,
        0.27407364120939526`}, {-0.6894734397466602, 
       0.31213151483740276`}, {-0.6711655554603717, 
       0.34925758045919975`}, {-0.6508852744034869, 
       0.38535442956098603`}, {-0.6345773530122705, 
       0.41106721974647475`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.6323418840778527, 
       0.4145918960248275}, {-0.6287059752679296, 
       0.4203246536289619}, {-0.6047010367456224, 
       0.4540708441493272}, {-0.5788803910316674, 
       0.486420831667183}, {-0.551277041774556, 
       0.5172296325243932}, {-0.5257964520294127, 0.5426518405823604}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.5228417418440372, 
       0.5455997808708275}, {-0.521998974846296, 
       0.5464406169023032}, {-0.4911541761188941, 
       0.5739971549822578}, {-0.45885063146435834`, 
       0.5998426169456024}, {-0.4251963267546959, 
       0.6239203729736816}, {-0.3902992478619139, 
       0.6461737932478412}, {-0.3900722011376501, 0.6463021656987895}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.38643892577538363`, 
       0.6483564233179494}, {-0.3542673806580204, 
       0.6665462479494254}, {-0.3226771090220691, 
       0.6823470993199153}, {-0.2903730890704289, 
       0.6966041833936202}, {-0.25743137895527385`, 
       0.7093085918334531}, {-0.23460471187122806`, 0.7169004775494098}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.23064420680513298`, 
       0.7182176957717877}, {-0.22392803682877901`, 
       0.720451416302327}, {-0.18993912084311926`, 
       0.7300237484631555}, {-0.1555406891504692, 
       0.7380166799788512}, {-0.12080879990300367`, 
       0.7444213025123274}, {-0.08581951125289744, 
       0.7492287077264972}, {-0.06728066848428879, 0.7508878343998}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.06312347643194549, 
       0.7512598807193127}, {-0.050652790984813, 
       0.7523759399641077}, {-0.015387185198871993`, 0.7538196971388753}, {
       0.019903380479562464`, 0.7535805512701675}, {0.05514498042512721, 
       0.7516790743773516}, {0.09026368901245879, 0.7481358384797949}, {
       0.10337644417825892`, 0.7461966590789495}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.10750534582600524`, 0.745586056583731}, {
       0.12518558061619398`, 0.7429714155968646}, {0.15983672961096942`, 
       0.7362063777479282}, {0.1941432103714217, 0.727861296952353}, {
       0.22800935176412485`, 0.717912537146765}, {0.26134739011313013`, 
       0.7063525379342412}, {0.2686662542062373, 0.7034188675730281}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.2725404176868909, 0.7018659601227597}, {0.2940952609792904,
        0.6932259848338264}, {0.32619089992345823`, 0.6785775633645648}, {
       0.3575722425064868, 0.6624519590455011}, {0.38817722428922863`, 
       0.6448938573956798}, {0.4179437808325367, 0.6259479439341453}, {
       0.4200704802283945, 0.6244531546097111}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.4234851885710383, 0.622053064786682}, {0.4468098476972639, 
       0.605658904179942}, {0.4746852731483345, 0.5839965496649877}, {
       0.5014901190128285, 0.5609579188256099}, {0.5271776411948326, 
       0.5366285375374678}, {0.5496303089673886, 0.5132501010142032}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.5524807676445049, 0.5102025005076692}, {0.5750137381277171,
        0.48443962711752653`}, {0.597068824686771, 0.45675114973704545`}, {
       0.6178196111796814, 0.428114025410436}, {0.637219353510535, 
       0.39861378001335734`}, {0.6507671540448181, 0.37565912359665227`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6528885981454616, 0.37206466408905253`}, {
       0.6571098198236727, 0.3649124556522009}, {0.6751714597137046, 
       0.33031620680299634`}, {0.6914042731806312, 0.2948250334657441}, {
       0.7058082602244523, 0.25843893564044385`}, {0.7183105988752241, 
       0.2213560659475323}, {0.7189379552130842, 0.21911658264205125`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.7200638393917403, 0.21509749704453268`}, {
       0.7288384671630024, 0.18377457700744604`}, {0.7373918650877873, 
       0.1456944688201851}, {0.7439707926495788, 0.10711574138574931`}, {
       0.748545015957859, 0.0682473054073843}, {0.7496589344400304, 
       0.05116128764606184}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.7499304682507529, 0.04699632262657323}, {
       0.7510843011221098, 0.029298071588335504`}, {
       0.7515886481423312, -0.009731960071397094}, {
       0.7500580570185231, -0.048842789571813504`}, {
       0.7479163424783016, -0.07480284685398833}, {
       0.7448761356413799, -0.10067308839062253`}, {
       0.7420142539044627, -0.1194015640161645}}]}, 
     {Arrowheads[{{0.014263399784954191`, 1.}}], 
      ArrowBox[{{0.7413837767149185, -0.1235274775801396}, {
       0.7409413991678478, -0.1264224459503297}, {
       0.7361160957177971, -0.1520198513017133}, {
       0.7264264639327487, -0.19308798848703768`}, {
       0.7144456769561844, -0.23354731794438344`}, {
       0.7135606329507614, -0.23625476035837384`}, {
       0.7126653325329394, -0.2389588378657995}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{
       0.0033305829191288736`, -0.11827435540431672`}, \
{-0.026857398349380723`, -0.11494246640159861`}, {-0.05518009025793643, \
-0.10406037986570629`}, {-0.08018551619333111, -0.08585587275202891}, \
{-0.09958396852226724, -0.0618042270946513}, {-0.11195976639106295`, \
-0.03361988739512408}, {-0.11401276869264584`, -0.020147215088832764`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.11464152655745535`, -0.016021039162945762`}, \
{-0.11659352408690377`, -0.003211203033355333}, {-0.1130999969161959, 
       0.027222050015486884`}, {-0.10181824842863955`, 
       0.05567513921003982}, {-0.08357626060161705, 
       0.08007836426785758}, {-0.05967279504373403, 
       0.09888204725627164}, {-0.03109015226505716, 
       0.11088856818108554`}, {-0.030226918667686405`, 
       0.111000652026137}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.026087855953447356`, 
       0.11153807557560737`}, {-0.0003373934733266037, 0.1148815631963583}, {
       0.03015870208992468, 0.11048279905819172`}, {0.058300861631623964`, 
       0.09810858921812585}, {0.0820946338121264, 0.07874719688861179}, {
       0.09999893728185161, 0.053832079151154726`}, {0.10615428354099628`, 
       0.03683793320505701}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.10757568710140517`, 0.03291361464734712}, {
       0.11045589056229033`, 0.024961730885158944`}, {
       0.11284795241291942`, -0.005705040887661246}, {
       0.10707229885397986`, -0.036146885400840253`}, {
       0.09323827739961064, -0.06388068897047092}, {
       0.0723710380466224, -0.08683026279612002}, {
       0.05970764751843084, -0.09599138766588332}, {
       0.04589936173084565, -0.10331387116469173`}, {
       0.042623563427189794`, -0.10448795597393631`}}]}, 
     {Arrowheads[{{0.002596896697492588, 1.}}], 
      ArrowBox[{{0.03869449622162252, -0.10589618007473314`}, {
       0.030177530799295645`, -0.10894876109355091`}, {
       0.029087182334493977`, -0.10924784173087274`}, {
       0.017729307501205844`, -0.11104887503889385`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.92128077030542, 0.3840269488077276}, {-0.9123550015678159,
        0.40477505884359977`}, {-0.9029570384468877, 
       0.42532633943409776`}, {-0.901657589752102, 
       0.42808503607852527`}, {-0.9003497188223459, 
       0.43083974986473583`}, {-0.8844607875270927, 
       0.4601670243942978}, {-0.8675817649588108, 
       0.48897887665417505`}, {-0.849764709586271, 
       0.5171754906800108}, {-0.8410125713416838, 0.5300500664983063}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.838666069676674, 0.533501818830099}, {-0.8309922685865501,
        0.5447901384599243}, {-0.8162089806386583, 
       0.5667038446371265}, {-0.8008834011872797, 
       0.5881731886009083}, {-0.785015530232414, 
       0.6091981703512691}, {-0.7686053677740614, 
       0.6297787898882092}, {-0.751652913812222, 
       0.6499150472117289}, {-0.7373696990009403, 0.6659920783669533}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{-0.7345975836247757, 
       0.6691123412669604}, {-0.7341581683468956, 
       0.6696069423218279}, {-0.7161211313780823, 
       0.6888544752185061}, {-0.697541802905782, 
       0.7076576459017636}, {-0.6784730825981582, 
       0.7259643108584026}, {-0.6589678701233741, 
       0.7437223265752255}, {-0.6390261654814297, 
       0.7609316930522319}, {-0.6186479686723249, 
       0.7775924102894219}, {-0.612318619208878, 0.7824917825092271}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6090180969477267, 
       0.7850466243883998}, {-0.5978332796960599, 
       0.7937044782867957}, {-0.5765820985526345, 
       0.8092678970443531}, {-0.5548944252420489, 
       0.8242826665620944}, {-0.532770259764303, 
       0.838748786840019}, {-0.5102723022650096, 
       0.8526264328306836}, {-0.48746325288978143`, 
       0.8658757794866443}, {-0.4691679763121762, 0.8758629828057338}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4655044800900596, 
       0.8778628477147881}, {-0.4643431116386186, 
       0.8784968268079009}, {-0.4409118785115209, 
       0.8904895747944535}, {-0.4171695535084886, 
       0.9018540234463023}, {-0.39311613662952155`, 
       0.9125901727634471}, {-0.3687516278746196, 
       0.9226980227458879}, {-0.34407602724378306`, 
       0.9321775733936246}, {-0.3234720495653815, 
       0.9395345931797363}, {-0.31213070680888855`, 0.9433141371431094}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.3081709912555082, 
       0.9446337268370092}, {-0.30269667725888844`, 
       0.946458062002939}, {-0.2817623146339115, 
       0.9529424645849766}, {-0.26068136600005837`, 
       0.9589822856475922}, {-0.23946623566693645`, 
       0.9645720099125301}, {-0.2181293279441532, 
       0.9697061221015333}, {-0.19668304714131632`, 
       0.9743791069363459}, {-0.17513979756803344`, 
       0.9785854491387111}, {-0.15351198353391218`, 
       0.9823196334303732}, {-0.14599137457162684`, 0.9834482498229814}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.14186378745973083`, 
       0.9840676760555864}, {-0.13181200934855974`, 
       0.9855761445330753}, {-0.1100522793215839, 
       0.988349467168561}, {-0.08824519776259224, 
       0.9906340860585741}, {-0.06640316898119236, 
       0.9924244859248583}, {-0.0445385972869919, 
       0.993715151489157}, {-0.022663886989598356`, 
       0.9945005674732141}, {-0.000791442398619043, 0.9947752185987732}, {
       0.02107433415442694, 0.9945569597929208}, {0.024550606424888998`, 
       0.9944472805074971}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.028722337478201555`, 0.9943156589182461}, {
       0.04293032065451472, 0.9938673852155987}, {0.06476603326677818, 
       0.9927065884378329}, {0.08657098815635123, 0.9910746630306494}, {
       0.1083347014883674, 0.9889717025650742}, {0.13004668942796022`, 
       0.986397800612133}, {0.1516964681402636, 0.9833530507428521}, {
       0.1732735537904114, 0.9798375465282572}, {0.19446344766727675`, 
       0.9759077627899776}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.1985508965708718, 0.9750634583241976}, {
       0.21616771056477457`, 0.9713946493472299}, {0.23746381401925734`, 
       0.9664674435228494}, {0.25864528907211937`, 0.9610698576372589}, {
       0.2797016518884943, 0.9552019852614845}, {0.3006224186335157, 
       0.9488639199665522}, {0.3213971054723173, 0.9420557553234878}, {
       0.3420152285700331, 0.9347775849033174}, {0.3586603731575336, 
       0.9284841851391095}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3625636496278228, 0.9270060427593911}, {0.3827516718415314,
        0.9188724008411019}, {0.4028530034547896, 0.9102660358207905}, {
       0.422763339450575, 0.901228623812019}, {0.4424728781270284, 
       0.8917637660680449}, {0.46197181778229074`, 0.8818750638421256}, {
       0.48125035671450267`, 0.8715661183875174}, {0.5002986932218051, 
       0.8608405309574781}, {0.5123499791879367, 0.8537035455822272}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.515941260218233, 0.8515767252359443}, {0.5191070256023388, 
       0.8497019028052646}, {0.5376655521542446, 0.8381538351841338}, {
       0.5559644711756633, 0.8261999293473431}, {0.573993980964736, 
       0.8138437865481496}, {0.5917442798196033, 0.80108900803981}, {
       0.6092055660384059, 0.787939195075582}, {0.6263680379192852, 
       0.774397948908722}, {0.6432218937603815, 0.7604688707924876}, {
       0.6511260143238958, 0.7539311537934911}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6543422156844525, 0.7512709445851237}, {0.6600091456802321,
        0.7465836698569838}, {0.6761818746424122, 0.7318310957828515}, {
       0.6920464481328276, 0.7167522680560088}, {0.7075933537522372, 
       0.7013512797721744}, {0.722813194822447, 0.6856324207640536}, {
       0.7376966903863097, 0.6696001776013364}, {0.7522346752077265, 
       0.6532592335906973}, {0.7664180997716444, 0.6366144687757963}, {
       0.7704890517109764, 0.6316234009767728}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.7731271508917829, 0.6283890390712097}, {0.7802380302840584,
        0.6196709599372785}, {0.7936856486720103, 0.6024339805927741}, {
       0.8067522525835892, 0.5849090009968981}, {0.8194292553879317, 
       0.5671016881412505}, {0.831708186175221, 0.5490179057544167}, {
       0.8435806897566879, 0.5306637143019669}, {0.8550385266646104, 
       0.5120453709864562}, {0.8660735731523137, 0.49316932974742517`}, {
       0.8673655676956791, 0.4908251454496149}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.8693802269762281, 0.4871697641826022}, {0.879465140590154, 
       0.46887177967489857`}, {0.892177781567599, 0.44420391652720115`}, {
       0.9042009410809991, 0.419183657637377}, {0.915524662472194, 
       0.3938296226935512}, {0.9261395874285117, 0.36816113373893017`}, {
       0.9360369559827699, 0.3421982151718013}, {0.9384191857494936, 
       0.3353835572940254}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.9397965105837596, 0.33144355215128213`}, {
       0.9452086065132753, 0.3159615937455329}, {0.9536469757438234, 
       0.2894726985685746}, {0.9613450987436991, 0.2627536611044562}, {
       0.9682966089276763, 0.23582731517178868`}, {0.9744957380560181, 
       0.20871719694426466`}, {0.9799373162344763, 0.18144754495065735`}, {
       0.9818761789790325, 0.17009300436559874`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.9825787154346355, 0.16597874784072356`}, {
       0.9846167719142922, 0.15404330007482098`}, {0.9885301318921959, 
       0.12653010555569116`}, {0.9916740213104067, 0.0989343069872837}, {
       0.9940456636566332, 0.07128295231869552}, {0.9956438930559826, 
       0.043584078034329066`}, {0.9964683911013946, 0.01584157145511944}, {
       0.9964973548855203, -0.00018548158935449352`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.9965048976973482, -0.004359281695962258}, {
       0.9965185667326577, -0.01192301553067815}, {
       0.9957944495445128, -0.03968786314407485}, {
       0.9942966897866534, -0.06743088371534783}, {
       0.9920265583637258, -0.09512972168404105}, {
       0.988985946835329, -0.12276175359896566`}, {
       0.9851773674160147, -0.1503040881181996}, {
       0.9818164183328424, -0.17046169241233414`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.9811299807565292, -0.17457866553317844`}, {
       0.9806039529752869, -0.17773356600908682`}, {
       0.9752694570376028, -0.20502676014823798`}, {
       0.9691782537823719, -0.232159975521531}, {
       0.9623353380439563, -0.25910924922411055`}, {
       0.954746325311671, -0.2858503504603873}, {
       0.9464174517297838, -0.312358780544039}, {
       0.9383420247058006, -0.33575216342384623`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.9369497387933095, -0.33968655914607454`}, {
       0.9275681698690369, -0.3645782930545109}, {
       0.9170615600302445, -0.39025526404507976`}, {
       0.9058422488766901, -0.41563533403580566`}, {
       0.8939188904355246, -0.4406989226128935}, {
       0.8813007202236018, -0.4654265390561688}, {
       0.8679975552474777, -0.4897987823390776}, {
       0.8672043667091711, -0.4911605589674582}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.86510364081115, -0.49476716608846716`}, {
       0.8540197940034101, -0.5137963411286866}, {
       0.8393784164773606, -0.5373999937856824}, {
       0.8240849841449912, -0.5605906083643744}, {
       0.8081516399716678, -0.5833491426126902}, {
       0.7915911084124589, -0.6056566439721787}, {
       0.7744166954121338, -0.6274942495780107}, {
       0.7705592762668274, -0.632127416639663}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.7678887223128695, -0.6353350334813274}, {
       0.7566422884051655, -0.6488431862589759}, {
       0.7382823563157289, -0.6696847705374854}, {
       0.7193519495577019, -0.6900004086295708}, {
       0.6998667000346643, -0.7097715964448839}, {
       0.6798428211398977, -0.7289799195866984}, {
       0.6592925849797866, -0.7476179534430323}, {
       0.6512596808563121, -0.754506161406237}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.6480912481684418, -0.7572230895477903}, {
       0.6382277321071405, -0.7656810455789234}, {
       0.6166644760627937, -0.7831552545704012}, {
       0.5946195122017677, -0.8000269689095084}, {
       0.5721100176932676, -0.8162829070043028}, {
       0.5491536515206841, -0.8319101171788567}, {
       0.5257685544815925, -0.8468959776732569}, {
       0.5128054194621916, -0.8547038737323989}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5092300669769412, -0.8568573636511454}, {
       0.5019733491877536, -0.8612281966436048}, {
       0.4777871400651131, -0.8748948121620164}, {
       0.45322951335380135`, -0.8878841922166222}, {
       0.4283205371081347, -0.900185034711567}, {
       0.4030807611966127, -0.911786367467011}, {
       0.37753121730192146`, -0.9226775482191282}, {
       0.35930624614263384`, -0.929851573279}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.3554225009387917, -0.931380359534682}, {
       0.35169341892093253`, -0.9328482646201068}, {
       0.32558936136470024`, -0.9422885342381508}, {
       0.299241521758466, -0.9509887045574779}, {
       0.2726643332746086, -0.9589474244018257}, {
       0.24587061273112515`, -0.9661656342570438}, {
       0.21888099452119342`, -0.9726377457336051}, {
       0.19520832403292937`, -0.9776232695384524}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.19112087269165298`, -0.9784669157976512}, {
       0.16439807226715297`, -0.9833238479664973}, {
       0.13694750660186233`, -0.9875291899176215}, {
       0.10938652002775573`, -0.9909711358796761}, {
       0.08173721653047353, -0.9936466254369816}, {
       0.05402199401414787, -0.9955531037686277}, {
       0.02626354430140357, -0.9966885216484742}, {
       0.02535866379023907, -0.9967003401726735}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{
       0.02118521281952488, -0.9967548490616188}, {-0.0015151468666421142`, \
-0.9970513354451499}, {-0.029290799830379396`, -0.9966405071220534}, \
{-0.057039841011705936`, -0.9954555042373526}, {-0.08473840291402694, \
-0.993496299943985}, {-0.11236232412225433`, -0.9907633729896578}, \
{-0.1398871493028096, -0.9872577077168472}, {-0.14524404079901926`, \
-0.9864120047969811}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.1493667871711185, -0.9857611387775332}, \
{-0.17114140668286515`, -0.982323537080152}, {-0.2022352548226784, \
-0.9764005073005962}, {-0.23313752011390748`, -0.9694944045388049}, \
{-0.26381690311673334`, -0.9616119797882485}, {-0.29424197855985706`, \
-0.9527609488752442}, {-0.31157503553492377`, -0.9471186699872061}}]}, 
     {Arrowheads[{{0.016308524139222333`, 1.}}], 
      ArrowBox[{{-0.31554385952674313`, -0.9458267333223931}, \
{-0.3243811953405006, -0.9429499924589555}, {-0.3542028765244069, \
-0.9321887560313921}, {-0.38367521934583976`, -0.92048784991741}, \
{-0.4127662952075838, -0.9078588492747115}, {-0.44144404968094464`, \
-0.8943142940938456}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.45652817850058103`, -0.863841395186078}, \
{-0.4763735351033428, -0.8530584993064856}, {-0.4959539177868307, \
-0.8418258353151623}, {-0.5152693265510451, -0.8301434032121089}, \
{-0.5343197613959856, -0.8180112029973248}, {-0.5368718295617942, \
-0.8163442081636072}, {-0.5394186851294808, -0.8146692590545437}, \
{-0.56253239088821, -0.797859870471783}, {-0.5851628362550186, \
-0.7803670897549551}, {-0.5954846469776327, -0.7718930360907339}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5987105586037078, -0.7692446104443011}, \
{-0.6072500224795652, -0.7622338371321}, {-0.6288139491452969, \
-0.743445805860538}, {-0.6503507307865555, -0.7246817772266674}, \
{-0.671309962820053, -0.7053109752194724}, {-0.6916916452457899, \
-0.6853333998389535}, {-0.7114957780637656, -0.6647490510851102}, \
{-0.7202945548160242, -0.6550507189010688}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.7230990379351963, -0.6519595154690365}, \
{-0.7306888202817176, -0.64359378095006}, {-0.7492372309073821, \
-0.6219034414259199}, {-0.7671410099407598, -0.59967803251269}, \
{-0.7844001573818503, -0.5769175542103702}, {-0.8009855811512698, \
-0.5536615628307717}, {-0.8168681891696341, -0.5299496146857058}, \
{-0.8237343132129806, -0.519017987291773}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.8259542927996264, -0.5154835347374436}, \
{-0.8320479814369433, -0.5057817097751723}, {-0.8465249579531973, \
-0.4811578480991712}, {-0.8668915428039204, -0.44346110178551396`}, \
{-0.8856350381834794, -0.40488900325876953`}, {-0.9020276635193607, \
-0.36709117324088497`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.9035893772332766, -0.36322157388960097`}, \
{-0.9180597046583102, -0.3254499622400705}, {-0.9316443478181844, \
-0.2847486260851413}, {-0.9434128456360996, -0.243503150391176}, \
{-0.9528171838780788, -0.20390082178495272`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.9536920538021008, -0.1998208383862796}, \
{-0.9613083493752571, -0.15971099306018738`}, {-0.9674154332202932, \
-0.11732583094663374`}, {-0.9716900986045546, -0.074718310859889}, \
{-0.973986873350756, -0.03430208494296101}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.9741439468073834, -0.030132205155719915`}, \
{-0.9746905443215412, 0.010840135445687404`}, {-0.9733905098196609, 
       0.05362922777077599}, {-0.9702064271877942, 
       0.09631701028156939}, {-0.9654158410161173, 0.13639278228205204`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.9648434597214266, 
       0.14052611938892526`}, {-0.9581344878648901, 
       0.18106497807278443`}, {-0.9492818138374708, 
       0.22296462955755114`}, {-0.9386342254682934, 
       0.2644423036668938}, {-0.9269626124156239, 0.3029261590567936}}]}, 
     {Arrowheads[{{0.004940704829287615, 1.}}], 
      ArrowBox[{{-0.9256864760153142, 
       0.30689912274919756`}, {-0.912015286801404, 0.3458104521529064}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.909442108887744, -0.21893821100356675`}, \
{-0.9148048431980909, -0.19478770844039628`}, {-0.919538258930328, \
-0.1705030874025456}, {-0.9236414582307213, -0.14610139603447614`}, \
{-0.9271135432455361, -0.12159968248065056`}, {-0.9299536161210378, \
-0.097014994885531}, {-0.9321607790034921, -0.07236438139357951}, \
{-0.9333358082089949, -0.053918053060111014`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.9336011415045131, -0.04975268843426868}, \
{-0.9337341340391648, -0.04766489014925885}, {-0.934645560872086, \
-0.02293779437865727}, {-0.9348716734945004, 
       0.001796367488941705}, {-0.934418675574996, 
       0.02652164950428231}, {-0.9332927707821607, 
       0.05122210571810946}, {-0.9315001627845827, 
       0.07588179018116809}, {-0.9290470552508496, 
       0.10048475694420243`}, {-0.9269764974247457, 
       0.11683004737789232`}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.9264519675688987, 
       0.12097076382003785`}, {-0.9259396518495495, 
       0.1250150600579581}, {-0.9221841562492701, 
       0.14945675357318078`}, {-0.9177867721185995, 
       0.1737938915406146}, {-0.9127537031261256, 
       0.19801052801100458`}, {-0.9070911529404363, 
       0.2220907170350956}, {-0.9008053252301196, 
       0.2460185126636319}, {-0.8939024236637636, 
       0.2697779689473591}, {-0.8895104529400233, 0.2835581933388308}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.8882430124734393, 
       0.28753490792345904`}, {-0.8863886519099556, 
       0.29335313993702283`}, {-0.8782702136372839, 
       0.31672807968336736`}, {-0.8695533125143363, 
       0.3398868422371375}, {-0.8602209974142319, 
       0.36279838124927455`}, {-0.850260344131041, 
       0.3854342765272066}, {-0.8396835967147779, 
       0.4077825213564107}, {-0.8285029992154569, 
       0.42983110902236366`}, {-0.822578683798575, 0.4407701309616171}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.8205910262227362, 
       0.44444026469012615`}, {-0.8167307956830929, 
       0.45156803281054136`}, {-0.8043792301677005, 
       0.47298128600642}, {-0.7914605467192946, 
       0.494058861895476}, {-0.7779869893878897, 
       0.5147887537631851}, {-0.7639708022235002, 
       0.5351589548950242}, {-0.7494242292761406, 
       0.5551574585764703}, {-0.7343595145958258, 
       0.574772258092999}, {-0.7277544344949766, 0.5829250280002929}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.7251270286721229, 
       0.5861680825582619}, {-0.7187889022325702, 
       0.5939913467300869}, {-0.7027246362363886, 
       0.61280271777321}, {-0.6861789606572959, 
       0.6311943645078446}, {-0.6691641195453065, 
       0.649154280219467}, {-0.6516923569504344, 
       0.6666704581935543}, {-0.6337609804551994, 
       0.6837075137284617}, {-0.6153698952886423, 
       0.7002341278594346}, {-0.6089184455923309, 0.705718137310648}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.605738325424645, 0.708421376098289}, {-0.5965352419705583,
        0.7162443924772857}, {-0.5772731610207433, 
       0.7317323994728279}, {-0.5575997929589936, 
       0.7466922407368726}, {-0.5375312783051052, 
       0.761118008160232}, {-0.5170837575788741, 
       0.7750037936337189}, {-0.4962733713000969, 
       0.7883436890481443}, {-0.475116259988569, 
       0.8011317862943212}, {-0.4694070257333707, 0.804381374693355}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{-0.4657796399300978, 
       0.8064460142401388}, {-0.45362856416408603`, 
       0.8133621772630624}, {-0.4318264243464443, 
       0.8250289538451794}, {-0.40972598105543995`, 
       0.8361262079314842}, {-0.3873433748108689, 
       0.8466480314127894}, {-0.3646947461325278, 
       0.8565885161799068}, {-0.34179623554021205`, 
       0.8659417541236488}, {-0.31866398355371706`, 
       0.8747018371348281}, {-0.314342277937086, 0.8762069648260822}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.31040067595692467`, 
       0.8775797131839094}, {-0.2953101762538013, 
       0.8828353069223228}, {-0.271747687449751, 
       0.8903134965310001}, {-0.2479936892541546, 
       0.8971376848556549}, {-0.22406535377960152`, 
       0.9033091507910818}, {-0.1999798531386796, 
       0.9088291732320759}, {-0.17575435944397672`, 
       0.9136990310734323}, {-0.15140604480808198`, 
       0.9179200032099457}, {-0.14874005083696126`, 0.9183095748403605}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.1446101041301016, 
       0.9189130683551793}, {-0.12695208134358452`, 
       0.9214933685364108}, {-0.10240964116307236`, 
       0.9244204059476225}, {-0.07779589637913378, 
       0.9267023943383759}, {-0.05312801910435807, 
       0.9283406126034657}, {-0.028423181451333407`, 
       0.9293363396376865}, {-0.0036985555326479874`, 0.9296908543358336}, {
       0.021028686539108908`, 0.9294054355927018}, {0.021796035903989847`, 
       0.9293767423519643}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.02596692794974847, 0.9292207815666473}, {
       0.045741372651349074`, 0.9284813623030859}, {0.0704223306914843, 
       0.9269199133617806}, {0.09504662006624211, 0.9246955526569904}, {
       0.11959065122246978`, 0.9217874075563269}, {0.14403927860775745`, 
       0.9182037521736952}, {0.168377356669694, 0.9139528606230009}, {
       0.19148410374662592`, 0.909267210946977}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.19555726090599782`, 0.9083575077856699}, {
       0.21666128261387402`, 0.903482465473046}, {0.24057683939129654`, 
       0.8972795101015966}, {0.2643212646357269, 0.890442415017706}, {
       0.2878794127947551, 0.8829794543352802}, {0.3112361383159704, 
       0.8748989021682241}, {0.33437629564696325`, 0.8662090326304436}, {
       0.35451451136822104`, 0.8580416333314306}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.35837039309586394`, 0.8564446199554762}, {
       0.379946323528638, 0.8470344378983304}, {0.40234590297449985`, 
       0.8365662609318085}, {0.4244683320204971, 0.8255218630501838}, {
       0.4462984651142198, 0.8139095183673617}, {0.4678025134661965, 
       0.8017161005076889}, {0.4889499305890536, 0.7889322049197831}, {
       0.5056082617576351, 0.7782219781576091}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{0.5091190537099329, 0.7759647665832081}, {0.5097304343835272,
        0.7755716884539562}, {0.5301337427503527, 0.7616484079605207}, {
       0.5501495735902668, 0.7471762202897883}, {0.5697676448040055, 
       0.732168982292071}, {0.5889776742923045, 0.7166405508176811}, {
       0.6077693799558999, 0.7006047827169308}, {0.626132479695528, 
       0.6840755348401316}, {0.6391986673103801, 0.6716766020145719}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.6422262880394902, 0.6688035936705896}, {0.6440566914119243,
        0.6670666640375962}, {0.6615317330058252, 0.649592027159636}, {
       0.678547322377967, 0.6316654810565634}, {0.6950931774290853, 
       0.6133008825786908}, {0.7111590160599162, 0.5945120885763298}, {
       0.7267345561711961, 0.5753129558997923}, {0.7418095156636604, 
       0.5557173413993908}, {0.7511681964948126, 0.5425998655542034}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.7535922949372155, 0.5392021588326823}, {0.7658540985570068,
        0.5220155578893484}, {0.7883223480979202, 0.4872549535971843}, {
       0.8091910502877049, 0.4515140117222023}, {0.8284369911276658, 
       0.4148712154637062}, {0.8376519371287543, 0.39525477303260165`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.8394265580755761, 0.39147702440160054`}, {
       0.8460369566191066, 0.3774050480210004}, {0.8619677327633316, 
       0.33919399259338934`}, {0.8762061055616452, 0.3003165323801768}, {
       0.8887288610153523, 0.26085115058066677`}, {0.8957790701939021, 
       0.23458204497752708`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.8968609664082206, 0.23055089566183898`}, {
       0.8994590916960925, 0.22087027118264654`}, {0.9083394150590207, 
       0.1804485215235462}, {0.9153759044307119, 0.1396676898271333}, {
       0.9205746331377427, 0.09860956431717549}, {0.9232407155052584, 
       0.06594421619124718}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.923580244521668, 0.061784242120300925`}, {
       0.923941674506688, 0.057355933217441195`}, {0.9254831018641232, 
       0.01598858475169817}, {0.9252049885366245, -0.025410692856285833`}, {
       0.923113407850767, -0.06676011138274252}, {
       0.9194582965854307, -0.10489604132609501`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.9190104315851315, -0.10904489782842323`}, {
       0.91333116938265, -0.1489367977406239}, {
       0.9056480840453508, -0.18959935361062824`}, {
       0.896148379406851, -0.22987808442072688`}, {
       0.8848655740428706, -0.26969801503045865`}, {
       0.8840769388213727, -0.2720753573040537}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.8827627838317059, -0.27603687985063385`}, {
       0.8718331865291293, -0.30898417029936254`}, {
       0.8570847354413474, -0.34766157508697737`}, {
       0.8406537393552445, -0.38565525425284203`}, {
       0.8224922853148954, -0.42287982951007214`}, {
       0.8186355117180478, -0.42992575118107723`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.8166314537433154, -0.43358695533515557`}, {
       0.8025820718304277, -0.4592537055341189}, {
       0.7810010346766407, -0.49470758162802486`}, {
       0.7578271096283331, -0.5291721570948327}, {
       0.7331382324603042, -0.5625781312375846}, {
       0.7248864291508834, -0.5727730859947817}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.7222605185571327, -0.5760173513627128}, {
       0.7070123389473527, -0.5948562033593235}, {
       0.679527364864278, -0.6259370727630917}, {
       0.6507612459858788, -0.6557514387519319}, {
       0.6344593377600556, -0.6715399630512828}, {
       0.617806258750721, -0.6868973574680811}, {
       0.6069476812052931, -0.6964289747333637}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6038109218883395, -0.699182409899013}, {
       0.6008020089578747, -0.7018236220023264}, {
       0.5834465883815169, -0.7163187566540188}, {
       0.5657399970216475, -0.7303827614231583}, {
       0.5476822348782664, -0.7440156363097449}, {
       0.5292733019513737, -0.7572173813137786}, {
       0.5105131982409694, -0.7699879964352594}, {
       0.49144726348387774`, -0.7822973980321899}, {
       0.4721208374169228, -0.7941155024625727}, {
       0.46830978554004354`, -0.7963193740188481}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.4646966249705384, -0.798408808134321}, {
       0.45253392004010473`, -0.8054423097264075}, {
       0.43268651135342323`, -0.8162778198236946}, {
       0.4125786113568787, -0.8266220327544342}, {
       0.39221022005047085`, -0.8364749485186259}, {
       0.37158133743419974`, -0.8458365671162699}, {
       0.35069196350806536`, -0.8547068885473659}, {
       0.3295924400075343, -0.8630652416439435}, {
       0.3136318104572266, -0.8689404647940813}}]}, 
     {Arrowheads[{{0.019999999999999997`, 1.}}], 
      ArrowBox[{{0.30971494887133744`, -0.8703822898670063}, {
       0.30833310866807295`, -0.870890955238032}, {
       0.2869139694896814, -0.8781840293296307}, {
       0.26533502247235957`, -0.88494446391874}, {
       0.24359626761610753`, -0.8911722590053603}, {
       0.22169770492092533`, -0.8968674145894914}, {
       0.19963933438681283`, -0.902029930671133}, {
       0.17742115601377006`, -0.9066598072502853}, {
       0.15357299535729174`, -0.9110027133987288}, {
       0.1482275100466339, -0.9118318811137345}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.14410302741640652`, -0.9124716523672946}, {
       0.1296190860755145, -0.9147183364096132}, {
       0.10557595097283551`, -0.9178043029250742}, {
       0.08146011285366275, -0.9202582395872468}, {
       0.059060896370788846`, -0.921967170864932}, {
       0.036640009864287934`, -0.9231303739691419}, {
       0.014197453334159999`, -0.923747848899877}, {-0.008266773219594934, \
-0.9238195956571372}, {-0.011294386111014094`, -0.9237925031654154}, \
{-0.014321896335947465`, -0.9237554885166744}, {-0.02223920568778473, \
-0.9233406189439808}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.02640729417669996, -0.9231222097580439}, \
{-0.036965571177151005`, -0.9225689526257403}, {-0.059584916362856497`, \
-0.9208258148943025}, {-0.08213886414497215, -0.9185284645139545}, \
{-0.10464110377286195`, -0.9156761050874989}, {-0.1266107042047587, \
-0.9128992272845717}, {-0.14846973437303954`, -0.9096032750461702}, \
{-0.17021819427770452`, -0.9057882483722947}, {-0.19179864127394422`, \
-0.901465653109158}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.19587055500785128`, -0.9005491143336968}, \
{-0.21338340329618688`, -0.8966009717181207}, {-0.23480015241000426`, \
-0.8912287217378224}, {-0.2561063312602057, -0.8853373973220496}, \
{-0.2773019398467913, -0.8789269984708028}, {-0.2983385215122871, \
-0.8720128080305788}, {-0.3191676195992193, -0.8646101088478745}, \
{-0.33978923410758766`, -0.8567189009226897}, {-0.35490629569953475`, \
-0.8505135575052433}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.35876745940243143`, -0.8489286035363968}, \
{-0.36020336503739236`, -0.848339184255025}, {-0.3804100123886334, \
-0.8394709588448799}, {-0.40040917616131083`, -0.8301142246922547}, \
{-0.42020085635542437`, -0.820268981797149}, {-0.43978505297097437`, \
-0.8099352301595631}, {-0.45911713027257256`, -0.7991372269305564}, \
{-0.47815245252483085`, -0.7878992292611879}, {-0.49689101972774935`, \
-0.7762212371514579}, {-0.5058138566460333, -0.770358103048151}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5093020096997944, -0.7680660619277812}, \
{-0.5153328318813281, -0.7641032506013662}, {-0.5334778889855669, \
-0.7515452696109128}, {-0.551326191040466, -0.7385472941800979}, \
{-0.568877738046025, -0.7251093243089212}, {-0.5861325300022445, \
-0.711231359997383}, {-0.617594683981003, -0.6841289740554864}, \
{-0.6393135057634942, -0.6637026184255362}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6423539119302737, -0.6608431438995195}, \
{-0.6478880675543596, -0.6556383205430244}, {-0.6769283154954093, \
-0.6258218476910182}, {-0.7046310625772483, -0.5947420037304896}, \
{-0.7309119435729714, -0.56246123689246}, {-0.751441908013254, \
-0.5347677740953979}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.7539275460878238, -0.5314148250074787}, \
{-0.7556865932556748, -0.5290419954079506}, {-0.7788706463984534, \
-0.4945467275079829}, {-0.8003797377744027, -0.45903788142357865`}, \
{-0.8202242342325288, -0.4225996182869445}, {-0.8375383258446003, \
-0.3871750708996254}}]}, 
     {Arrowheads[{{0.01962482904912058, 1.}}], 
      ArrowBox[{{-0.839286373029687, -0.3833860747587289}, \
{-0.8549973452051436, -0.34727983650165384`}, {-0.8698446742589709, \
-0.30854325699305774`}, {-0.8829449953840378, -0.2691855111672012}, \
{-0.8942576658500132, -0.229279068594114}}]}}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
  PlotRange->{{-1.0434517305537323`, 
   1.0434517305537323`}, {-1.0406555277349125`, 1.0406555277349125`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766116275699046*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"dc4b547c-3d88-4c1d-9255-44abb69976e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Curl", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"3", 
      SuperscriptBox["x", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661162879172297`*^9, 3.766116296952375*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"5fe71072-6607-4703-a22a-c5166c13dbe8"],

Cell[BoxData[
 RowBox[{"6", " ", "x"}]], "Output",
 CellChangeTimes->{3.7661162972700157`*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"90bb0f1a-60f3-4545-83e6-53e9126dcd98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"6", " ", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.025500000000000002`"}], ",", "0.025500000000000002`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[196]:=",ExpressionUUID->"7361f6cd-73da-4507-bac7-e3df142b7a0c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1Ps3lAkYwHGkGyonl3TCIl2oJh1djrW7zyy7aNHYKVO6U5YSKUS0maiM
2wwmwztJTblsq2aYSGQ8Y95kbSWmMkUXSpG05qw15jVqdvecfvie73/wcQw7
zAw3MjAwCPyv//++iKGpshXiaM1tLbuQxOQ4R58CGyGWWBO10QUkmjHGCpMs
hbgx5Vjsdh6JtBlF6340E+LlH9YMuWeSGB//Mv6ljsCtqgrVuxMkfg6KHjPv
JbB5Kv9mwH4SLU2y1QkEgTzfyHgbdxK/O3F3GKwJpL2wVEs6FUjz7jBroYow
TCpsD9K14BtNBc9WLUBXD1mU1doWZLx/ayb+UIi6mGuZilg5sprr6ld2ncNT
F/IsSA9EJzaLPNPOR3e5YbmfWIaZzpype1UF2LH+/mSNYRNWznRw8+PnY7Kp
m9/IzkbMUnHulObmIcP7wdKYx7fQ3HL6nNY3XDR7SLY/cq1HAVPINFTmoFo2
9ol9oQ6z5k7lXP0zC4dMZC76BbVYy0t1WlnEwbaqVwtDj0gxcrjs+L7Ms9gh
8TxvMliNTJORFQmM05gy73XL6kQx/l6pV/79VRqmpqR+M7K6CnPs6zyXWLNR
eZ33bIPjb+hbZ6PfJ0/B8Qym/qfOMszqMzEZvJiIkcs5vh/rReghoN+zXxaH
rP4+N3FjCXJy7Ud2no3GpcPWNa3OAmzb4u3HCA5HV/3+EY2eh42hLx1Zg9sw
oP0Xgn09DQ/fz2RHXKFjhbSDvmg8EqMqFR88FQB5n7rU17oiAMxtXnzmh8Bq
M+USPS0dXIJtQgaMw6E5tewMK4MHO3LtVHvU0WDsyur3jRfAcIRWbhUSB6/O
x4suTb8AFix7i4KYRODKWdyPBSLobDCQhDxPgZ3ZdG/vt2WQdPBiW/3nVOjh
1T+Zra8Epzymzn5GGrg/1SXRZleBsvxG/UyP03A7KZefHSwGbf9RqafPWUh2
6W69VlsNQ9vMmYWpHBB75XyS7JHCJo2p29f8LGjUziqL+usG+Fh7LowryYHa
oBEmK6EOZh3xq+zq4sLdLce+3WVXDw7UswZZbB5Uj98V2F69BY6qk0fLufkg
9WpeoQ1uhKhjMretlQVwaY1tu5HuNqiXr+DSrvMhUkZ/0pougx7tzGab9nPg
O25qV74KQd9rkbtcWQj6gY4DpbvkEM1uCDXqFgDTwb/9lEML0L06Zo2OFkF1
jdBnbKwFNi2YzzCcKIbk/EAdvUEBQXMkVJGuGKY2eutqmhSweVpAGc2AgJNG
HjonuQK2jZ6hdswmIC3OWWfcpoCwNurKzUUEZAXrJv94rICExH5tFJ2A4oVX
J4PUCihRVV/uziSgTmQ8uXcZCaUPAgOjuQSs3z5JdbmSICKHJ6bxCWiYr6a8
aCRUSJwD15QQ0JTeSzmvI0GSUTyRLSaADJdSQ14kKDawA75/RIDSZS8Vu5uE
O6vsJlQqAja/Dqb6Q0loW9woinlOwBOhP8UMJ+H+vH80598S8Mx0A7X2EAnd
gxEizQQBfR/nUNrjJDx9YRyQO0VAWMU06sCvJPQ+EmkWGwphYDel7WGT0Ie9
/j+bCGHo4YC2KYOE13VJmsG5QjjI6dGuyiZhoMpKdNJCCB/ondpSLgnvRFJ/
KxshHKJatfMKSPjiF3zxC/4F5U+UmA==
       "]]},
     Annotation[#, "Charting`Private`Tag$298583#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.025500000000000002`, 
   0.025500000000000002`}, {-0.15299999375510207`, 0.15299999375510207`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766116300370308*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"000abb14-c602-423a-8f63-6ec1843748fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Laplacian", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "-", 
        SuperscriptBox["y", "2"]}], ")"}]}]], 
    RowBox[{"2", " ", "\[Pi]"}]], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766116332771357*^9, 3.766116336788107*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"70f119db-abb2-4e63-a084-a4a8c1a82c7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "-", 
        SuperscriptBox["y", "2"]}], ")"}]}]], "\[Pi]"]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "-", 
        SuperscriptBox["y", "2"]}], ")"}]}]], " ", 
    SuperscriptBox["x", "2"]}], 
   RowBox[{"2", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "-", 
        SuperscriptBox["y", "2"]}], ")"}]}]], " ", 
    SuperscriptBox["y", "2"]}], 
   RowBox[{"2", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.7661163370813427`*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"d2b16723-fdb9-4c3c-8ef6-9da0f55884b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], "\[Pi]"]}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], " ", 
      SuperscriptBox["x", "2"]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], " ", 
      SuperscriptBox["y", "2"]}], 
     RowBox[{"2", " ", "\[Pi]"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.43892152126807016`"}], ",", "0.4389215210579016`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "0.4389215210579782`"}], ",", "0.43892152126799355`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[198]:=",ExpressionUUID->"c338432e-a6a5-4da0-bc5f-859d6047fb8f"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Sfvn6AyPvfLMqJ/hxV+cMupn+JC764z6Gf7lp1NG/QwvmGOmUT/DQwLnG/Wz
vr6fj1E/0+9tWDDOWA/C+4UOMdaDcI/Rm4z1IDzt/Z7GehA+tPrnR4nXg/Cb
aU4b60H45KWdjfVg0v45OsNPjOxirAfhJQ6fM9aD8El/pjTWg3CnAgON9SDc
pcl2Yz0ID8011lgPwn+YG78n8XqQfm+OQ6ONfhF8UI6yRl8I/sJphtH/gS+6
X9no88D3/vHuQ+J+DrzJib1G3wbeNqCG0Z9J2j9HZ3g5r1pGvwX+tOtBo6+i
++SfPn1I3D+Bh92sYfRJ4I285xv9EN3nz/GT0feAZ+01z+hv0K+Lnech+iHo
DB/q8zC1o6+Czro/3O246M+gM7zSroGiz4PO8McZh4t+ETrr/vmwG6LvhM7w
1Ll6GX2tpP1zdIa7nu8txqMz/Pdbt8T10Rk+rNRoEQ86w0PyjhXxozO82bkL
4n7RGe4d+Y/QBz0vrRd6292dUx++EW/1M7PedK99Jsdle0DbVVe7pLfmbdOi
HQ+4+ly2l33d1uevZ1Z/kj55ivfb4+q1tuat/ffWmzMuv2Lf87bQjy2XWHrS
p/VcOG5C20OWnpVLNPOOW37VPnhSp6zPjkf+Z1+R+M8P7LFx9hhr3hL/nfZV
Ntx2seatm4r/RFSfrBVPW3rOUPHfy9Bt5q0W1rwl/gEvDvdoOi5C60n8BVuE
+l0sY83PdD6jMjkvjrHvO+A9tNVgK9/+dFH8f/b4yq33N/3Zyrfjcw/9fGvx
Bfuhl20f9/nLygMHOw3yaJbtov3+Vtftc7638u2LVf0fByy5aG/9a/aJa4da
eaD01T49i2a/ZPdvuzdL5GorD/Qu0Ct23tJL9v73sw7z84/6z74r8c9os7aQ
fyMr3xL/3Kz32pZJYeXb31T8ayZ96rtpvZUHDqj4+8yZOHpMcSvfEv/EtC8/
tva28gDxN1f+VfIA8Y+ulnps5naWztXmze5waEGkveeXX/p1bWfVDyPPep0r
ninK3uz10GajXlg673AWf9/ebvOcuFWjrPfavRZTDn/IFG2vW29f5pbXLJ0L
e0+s1HtRtH2M2xwf9x+s+sE96je/c5nP23f6nrof1c16ry3N9muR6t7n7WsL
50/5ned/9zmJ389e9+Wb95bOxL989fXhdQ9YOm9X8R+/Vnyyfzurfrir4n+2
Yt4/i65YOhP/Z+UfRmfin9xgnX32Ouu9RvyTg0ePa3jEeq+Fp6qd8Bydsk/v
mSffpfOWzvW8qiU8L6ftnk/L3Qv1tOq0gHSVEp6LM/aowFGLJqe06uEyc0W8
9nj/a+VHj7LqtPXflnxXKM85e8jhQXWanbR0zrao6J03ecLtzePe5kybyqqH
Z2YtEHUyb4T9lxLv270t9N99TuKvem58WMeZVp32k4p/69h+fbM2surhgyr+
/TP/vVj1kaVzaRW/i/KvojPx74vu8do1ztKZ+EdcXl5vqqtVpxF/61WnTn7r
adVp5V4MSPjdj9o7nG2V+XJFa323eWTvhN/3mH18+NWiV69aOud62zXhd/zL
PunpoIWrh1o6z/XslDDf/rbff/v+Q/d7ls5fPoj7sy96N3We/Sdr3TFqfPOE
5zTM/uRJbqf1Uy2d7//bOOF5PGFflLOxfxVfS2f3ZPqcZVX8hc56TOnxwtJ5
k4r/cTHnybn3WzrnVPEHKf8qOs9R8X/K17lRt7uWzsRf6Lqc/+hM/Onu9v44
wN/Smfg9bv9R1/eZpXPBP0snxLPPbuu+fPihIZbOaYILJfzdA/b3/rVKfSxg
9SuehmZPuH6A3eluy4FpDlo6xxxPn6BDoL1y/YKlslS21tHBp/8tszFnkL38
ca9lPj6Wzr4RQg97i3IF9/S8auk8P+bB7Td5QuzbXE9dWZY65j/7nAVU/F7p
MneqXtHqV6RW8Q9U/lV0fqzi39D2+L2CvpbO0Sr+AqHeDzwqWeto4n9Q6f6W
21ssnYn/x2wy/6Mz8e9/njlby/rWOvrlpG+vtXCeYg/pke3e4OmWznnaXrne
wtnbPmpaLo831S2dA/rtah6ffaU9Q1Q914kXLZ1/qH30Rgvnjfaxy128S3S2
dP6n0Y7lm7P42k9WvDK4/TFL59OtfFrEZ//DPmffpRYhzlZfaFVnoZ+9ebrB
EwbWtHSukkyf866Kf4Pi6JxFxX9iV4fgyNxWX2iXiv/bIp0eVDlh6VxSxZ9+
u2eV1+6WzsRfeOP7DwOjLJ2J/+iEknPcyls6E3/MIFnnoPOxcuL+bL87tREc
nV9/17tVwnVsvx3PJ66DzsXzj1uZ8HdtqY49FX8XndtmXXQzIU5b4KmhIk50
TpvZrXXCfdnu/tJa3Bc6D/hnzK0EHWxNC7UROqDzsoj6dxJ0s2WyfML0OUP/
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
phV+I80frJS+owrOwu+lubPyfaXILfx2mndTvruIIqIfrXnmfLIv7T5f7NPo
PmGld3K/JluaHcJfBV+UQe6XjXol9ik1r5BD7lduOSz2iTWvV0TuFy9v7enY
p9d8cSG5X79jhPD96P7e/DvS/9NshvBdaV5S+a/izwjfm+YDlP8t7ILwHWo+
XvkPfdT5APBNyuc5c5bYF9T9usbn5f7gfQ+xL6v5m8pyf3Z+qNgX13x2T7k/
XrWv8CVofmm69CdcSin8ZLqftkD5yoLnCj+f5unVuZTzlwk/peaBylf5y3rh
W9W8ykvpX+0cL/aVdR8srpjcXx59XOzraz7QX+7vD6olfBWaN64j/RXTmgjf
oe5HFV4p/Ydt2grfp+bHlf+T8yvgIzJKn22X08JnoPtFFVJJv0GNRsLnofnA
/dLvkSeb8Jvq/kyxydJ3+jC/8PVafaFo6e/N0Er4SHSf5O+P0k+y64rwB+v+
w5EO0ifMfsfxJL4a8gA8j9rXIw/AL0TJfdV1Kg/Ae6p97X9VHoCXU74C8gA8
g/J13FV5QK9n1To0lcoD8FpVpX+sqMoD8I65pH/vqMoD8HYlpX+SPAA/VkT5
V1UegB98IP3D5AH4jcnSp12K74WT+GE6qfwAf7hB7kdnVfkBPkX5AUaq/AC/
pPwYv6v8AH+k/DDeKj/A1yo/0k6VH+BXn0p/Y3OVH+CDbkp/6XuVH+DxW6S/
l/wAL9he+qs5PwSe0Vv62Jeofc8MSXwpXipvwK+NkL6IeypvwKtxfp3KG/Ct
yhdUTuUNeJcu0pd1WeUNeMoj0k9L3oDfbir9zOQN+J1x0k/eReUNeJ946dv/
yHfHSfwe7iqfwNcpv80olU/gbQ9Jv1M/lU/gHU9Lvxn5BB5RX/qxySfwlX9I
Pzz5BB79QX53QD6h/lyh/FfkE/hx5X8jn8Bnv5Y+fPIJPG28/N4ho8on1F1d
w6S/jnwCD+0ov5vIf1/ss+r3eJupcr+VegOeto4834Px1CEd1D47dTJ8gfr+
hecRnqOK3Ef+uEHsN+v35rn5ct/54PfCX6jfa3Hjpc+w8i2xb63fR/Nqyf3r
3peEb0DzTa+kf+BefuFf1O+Xbhukj7HSQeEf1dxd+Uirqf30HUl87JxfxHuh
ZW65n74uj/AxaH5qhfQznMskfCSa/1NG+klyZhM+S/1+Gein/JZ7hM9V8/12
6Xf9e7DwGVv7Ncpv3Eft75dJ4vfe1lv4APT76KcM0g9wyV34MDRP31L6MdK1
Ej4YzTtnkn6YYfOFD8m6jrf0I03PIvyj+v21rLD0kfbYIfy7mndVPt5Wj4R/
WvOdykf98nNF4VuCX1E+ds5N4n3ntkL6HLKuEf4SzTM7S5/JT4uFv0fzRrWl
z+d2JuGv0nz0JOmzqveP8Ldpvm6P9Lk9+XzZ4ZfV71lP5Zsdt1X4lTVvoXzL
1/oJv7jmTsWlb3zCb8Kvr/k75dvPdEJ8L6F5njXyuwmeI/reHtOk36PpNeGz
0XzETOm3GR8tfE6ahyyQfqcOi4XPTPPdC6TfLGCi8Plpnkn5/VxihM9Sczfl
t1wW/Y3DT6z78GNVv3fJJuHn1nyJ8nUPuCv89Jr3VL769B9qCZ8ZfKf6riHG
S3xPonnrUPldie8i8T2P5p3byu96kuvnJ7cvkFw/P7m+felk+vPJ9eFjkum3
b0+mT/4umX64TzJ97+T628n1sZPrV39QeZX3/k85pB+JvArPul/6zyupvMr7
dGKM9DX1UnkVvve59JWRV+FjK0l/O3kVni1Mfl8wROVP3oP9lJ9qrcqf8JhG
0s92VuVP+Pkb0k9I/oS7rZB+ezeVP+E1G8jvHY6r/AkvGC+/NyFP8t58HS99
X+RJ+CDluyNPwj2U75E8Ce+nfKfzVJ6Ef1HfC/RSeVL3r+7J7zVaqzwJv/hM
fi/zSuVJeLsg+b0SeZL3+K5b0s9GntT9FuUnJE/CUw2Tfk7yJPy28tOSJ+G+
ys9MnoTPmS6/jyBPwmvvkt+nkCfhryLk90HkSXiu5/L7LPIkPPtb+X0c+ZD6
4Z3yT5IPdf9nuvSvkg/hr5V/mHwI36D82+RD3S9aJ/3za1U+hL/qKb8TWazy
IXxzD/mdDvkQfv+c/E6KfAiv1Vt+p0Y+hNdL0UX0Z8iH8D2B5nea1GOtfh+2
K2ttyy8KX1uyft7uZS2/KDzVltUF6myxfIzw7lvT/bjdyfKLwvN9nfVlqJvl
Y4QPHJUi94ZEPsakvjX8ivDsKce/K+Nm+ULhsemjdtR0snyh8N5bmoVt8bX8
ivBpad902OBi+ULhBXeGVGpS09KBujE8Iv8fTa9aOsAzPm9VdGsHyzcLrxn+
TaeLgZYO8P1eHoM3JPLNwmekHNU5a1nLN5vUb8b9widk3lErZ6B1v/Cff/s1
7dr2lg8Wvj7jKv/Pl637hf9S8FV8cCPLB6t9cUoH7pc6tk2jXwekemXdL/xL
K5eoDe0tPzb8Xa1mS8ptsO4XPvOHNOsOnbXuN6nvi/vSdXiRrnn3v7DuC97V
VuvYmxGWjxp+Ut0v9wWPUb878VP3urfZXbbYZSt++KrTkecqfWf59uEerhVW
+bexfPtJ/VTECT+n4idO+Dr1exEn/Kaat8RDfRu7K9WijAuteOBNelwc1eiI
FU9S3xF/F/5FzR/+LnxaBvkccX3qzKwLv8lS8Rvru5ukfhuuA3+onlPGJ/WN
JNd3Ii/BPx/KGfyvi/WdETx7m7rF/M5a37/AM2f8cdqGNtZ3RvDjbZq/qXXE
+v4F/nerI81/+Mb6ngve9mjfhf0TfTeX1M9AXoJvUPrwnMKdesrfhfkM71xV
zh/mCXyFi3wu+L3gh1LJ/IDO8FAPmT9LJ9OP0ufXKe551bfq2fWJzq9T/M6n
STvvFk90fp3iI53r34hakOj8OsW3r1/fypbou074G6Wn/q4zyb6/Po9O8WO7
5XzW59HhQzgjnzt9Hp3i5erIfKLPo1M82yyZV/V5dIqvTDFbvHeWJtOnQgd4
5tU7HvSItb7rgY+YuKZZ5UTfEcM3Kn3QAV68rZxv6JB0X577ha9oK/MP9wvv
2UbmVe4XfjRCvl+4X7jTH/L9+ymZ/pU+N0/x2up+9bl5itv+kfNBn5un+Gr1
fOlz85Lsg+tz7RS/1li+L/S5doofeCHfm/pcO8VPbZV1BfFQr35W85Z44CdV
HiCepPvF/F346ij5HufvwqeVlnUO16duvBwk8w/XT7pPynU03ybrKMYn3Qck
7/GejWgxWIznew24295i4u8ynvdXpxCbiJPnHf5jpnzivrgOPEVAU6EP+Ur7
nDPtE3r+mEyfir/L+yjnUB/xu/B34bncm4vfkecL3nWEp/jdiQcecKiemD/E
o33OM+eK+UY8uk/1JFDMz77J9KmIk/fXUp8UYv4TJ3yde1rxvBAnfOvyUuL5
4nmBdxu8UzyPxA/vW6m9eK6JH37yfDORB4hfj8+1TeQN4oe/UfdF/Lw3H2eZ
LPIV8cPvlxki8pv+bk7xDT6NRD4kfvi9V2dF/uR5h88KSiHyLfcFr+72l8jb
3Bd866ytIs/r790Uj1f3y33B49TvSB6Au2eW8437pR6o8ce7XInfX/B/7QPE
+477hfst+3ftoUTvffjAfmXE+5T7hd8dES3ev+QTeB/vDOJ9jQ7w4X8PFO99
dID3V/qgA/yYmg/oAK8bJOc5OsAPqOeRvAQvsc983unD/J/zPEOTOc8zNJnz
PEOTOc8zNJnzPEOTOc8zNPF5nonO7QxN5tzO0GTO7QxN5tzO0GTO7QxN5tzO
0GTO7Qz9f+d2Ug90fTZI1KX6HF3FX6v5wHjep7N72kU9jP7wk3tXi/qZ68A3
jZTzDR3gIw/L506fi6ved4Pn/ijqfH0uruI/L+8n1gX6XFzF565rJtYR+nxa
xVv1l/Nfn0+r+MfXMg/o82kVXzNE5jfi4T3Yf+0NsT4iHnj8X15iPUU8uh/V
qIxYfzHf4AFJ4oQH+sjnlzjhV5bLPEac8AwrZX5mnsDvj5TvF+Ln/Rs0b6lY
txI//Nmaa2KdS/zwIn/L+yJ++DqlP88L3G2f+bvDKx2V+Yr7gjdwkXmb+9J+
sF/k+4j70vtoneX7lPkPd8oi3+/cF3XFN/OXGv0K+CH1O3Jf+ntJNd+4L93v
6iXnOXkAXum5+bzAF/vJvM39wgdlk+8v7hdebYV8L3O/8OvDZF3B/cLrhso6
h+cdfr6NrJf+B6Nns/8=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
fRQcO19TXhTsk5TjvRfsk5TjvR/sUz+BZwf7fuVFk4JjxQuy8eD4MxZ+ITie
vAg/I/2JXivlY6onHocfYn4qXAGelzrWDYDvye1I71IP/jk4D0yQTfFd64Nz
wubKt4Jrq/bwbvhVuAP8CzxWuQr3GcWlwzi+Cx4Nj8j1ZAr8Onwn/BI8HG7C
teuCa5N7mH+F+VEc3wuPgZ+DO3HOHvknzrkO3hRc67WANwbXj83gDcE1RUfF
V/k2+MbMNv8yfDO8Fx4Ht838nq/A7eBd8Bi4s+I3PF65HM/wMs8wUr6kwLFT
caQnciTzQ4PXV+vcLf+m0r0n4B7wCPgp+Dy4E9wGXsf153NcGrmQcQJ8WDka
fBp8BLI7cjjnP5nbkeylY3D+NROeGpyXvQNPy3VbtjklOIeaA78DD4anw28E
51lT4XHBdc9c+N3gHF32OzM4R5eNfAgPgqfB4+Guyj+QE3jOPXnOpNypFWNr
cC5dMo9TDTm+nvntyBeYbwPvlJ1F606B1CpYX1T7Fwr+/lye/CO/nDkfPSf/
zoXl74N/pwhcLPibF4Ij8tfg2r8IcrP0GC4c/P2V55cI1l/1Jw7JP0b7Ja2r
csMr4IuCY/iVcIPg5y0Olw7WKYXvw4n1Xb2FDLmDcSR8dLDuqJ5NkdsYReHi
wWtQDD5K71Hg+kf1puqJ6sxXCa4zasAnwf3g1+HRua/rCN8AT8v9mOoexeLK
8PHI/syPg1+GD3Df3hzXRg5Ajmf+FfnDzM/6YrQPl895Kfh7VoHLBdeO8gll
g2ONeghHBtcrNeGT4UOMavCJwbXIaXDV4PrpZLhCcE5UFT4huL48CS4fbLvl
4JLB9lceLhVsZyfAxyBbZ16751UXZo7Ze5SzZ669F0f3G3pwfifdOzouqPfS
KdoWNiPLM7onrmcrRMcd9XwqRuft6ud0j7YR1R2qWQfC9+k9ouOOelPd8hpW
fmtt6jxHNeAN0X5sPbJydNxRL6hNtH1tQN6U17Na747RNrsJuYHjCxPXgKdF
xy/1pk6PjsvqL9WOjsvqI7XMrNPq5xwb7Qekt9My2+c25gZkzifkN/7g/38x
fkqcL+2V7iXOD7cm7sv1iLZ9XXt89Hqqrq8bHX/Vf1ufOpdTvTkic29FfYwt
uW4URZ4RHevVm7oZfhfegqwnPUvcv1L/QzXXENkpco9DSnJjtG/5HrkudU6o
Wvuz1Dojnzwwz2NVA25OneMpRi1MrYeKNQtS655iUItonV+rGi26r6Ia+RzV
Eonr689T66f8fJ3onpLqiAui+zaq++7ScySueS+M7u1I986P7i2oHj8vOodX
nX5mdD9HteFdmfPdA/BPqXNs9QH07j8n/gZb8jird5FTUn6o3LBfdO6t+ldx
4GatE4v1aOYYIz1tG+3PNyJXps6xVYNU128n7ls+BC9P7Mu35zmJehTF4cvh
+txzRercW/2f+6Lzf8WBValzdfVDekXHAsWWbXk+o37F1jz/UW+hVnSfTfWX
9E76tyXx+/6Zv7PqyI3I1cF9PtVlC4LzEOXyo7VWqlVyVl9T/YovOGde5ufW
eur59JzzmR8Nr4SX5L5xp34run79Hl7F/Gyu/U9xILoPpN7OwuD6dQO8Ur5O
+pX4+lmc/5v0NLovu4q5pXlM1Hp+CU9RzIDLBPdcVV8vks/P33lrvgayvx8Z
B3I7lA1Oz++zONgOdP623CZVp/zN2CUdzd9Fvd7V8Ff8/y14s9YcuT//jV8Y
BxO/w4rEdfwm5Jrgtf81t7VhuT7o9/fmz7OLsS+/drf0I3X8nZx6bl9+T9WG
65DLg/tn38FfKy5E15LqG3/NfMXE/Z+C6HpTvd9vUscpxatlqesU9YWicrjE
/eey0fm/eryFomso9YoLR9dWqhX0rvtzvfo9f2d9sy9S+yLFq9/ytd6Rr8sf
+foXja7d1JcuBt+YuF99U+a8Qd9a3/wU5isqnkfXd+rbP5A5byud52uyr+6c
UyraNrVfsDt/JumPekVrkMs4p2R07FYM35WvuXRdPZi1yG84p3R0TaE9iDLR
9Yh6rR+n1gfVc5+kruvVizsquh7UHkrZPF7LhkpE14zqmR8TXeupF1o8uq7U
/kvN6D65eil3Rtc76uNVis7/1W/5M89/tM9yIM/lVOO2jK411NcaEq0P0ouJ
mXN05Rv/Ihsn3q9RDqIe6QSesUN0vqE4+E/qGl97Cp2j6yz1W7pG11nqq9wS
XSup33JrHmcVfw+n7gNo7+BQ6tpc+xTto2sf9cTaRffx1DdrEB3TVQtWie7b
q3f0R2p/q7ptb+oaXP3DXfDViXuMIf928sl/M9ok7uvKTrfmNjIl911a/9G5
/5EfmpM6z1EO81Hq3EZ5VxfGhMS9soOpdVtr+1fqHo56sLLPH3MbVw/nx9xm
j46uL6RLraPrO/X9pmfO75UnT86cCyr/eS7zfsnX8qWZ9xu+0TfMvN+wXOuU
1xhr4N/zeKQ1GZu5bvlOv5O5V/VtdI0im20sH5jnl4r1ozLvtSyTz8y8F7JK
vivzHslq+KXMffkV8OjMeyQrZXep+xjaV5qUOfdVjvRaXl8pjvfNXFerPtqf
OlfX3t+VHA9J3C/9L3W/SHtSV0TXueqp/pq6t6O9tt2p+0XagysX3XNTn/wX
5usn7tdNyFx/Kra+kbn2U37SSuuYuJc7PnNNqxzv9cy17jp4Xx5bVSiMy1zf
Kj9ck7pvo77fntS9KfWuJ+X+/DvW83J9s8TfZWnqfFu151fw6Yn3dC6Lrqn1
HS+Nrj31fRtG15vS8x3ShcS97iOic0X5z4uja0n1wxflzyOfuSl1H0/9+Z9T
9xu1L7A8da4lv51G163av/g+dT9QffuNcK3E/fwijG6J9yC+TF3XqO7unrlm
UPydmzrnVz24OrW/VW6/OHXto7q+UXRPQPp2SXTtLL26KrqHIP35NHXNolq+
Rm7jyouu0zdL/C2qRe+dqQ98avSeoHrLVaP319Rz/iF1r0/7rSdG7/GpR10/
el9PPVvlDlrPWshvU/ddVf9eFL2Xp70G9VDkh1XbNo+uxWQ7zaLrONnX1dE9
BOn8NdE9DdlF09w3qmfQOLrvIduZn8dN+f+dqfuW6i0vSV1zqXehftaC3Of8
H0eh8w4=
           "]], Polygon3DBox[CompressedData["
1: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
FmDcCF8Nt5yfH74Bvqq1aFKn4OuZXgn/6//N748IvwevBS/S+c91SvzNzSW5
6m3Or64eM+6Db4dH5vUWhG+Br4MLfEvp+2+ad+A1OHcrPAL8LrwmvJA/g6+H
Kxeuwf93up8P113s/au5/4uVfN53wNtZr9r4x6Pg130eOT86v38k/JrPKzxa
vzxzf8FjNnkWj+b8G64P5mNw/gT4XfgK1z18Ivyen4frAn6jTdYyc33u2vO5
VI+aZLST+Nn7fp7qAtcfC78FXwqPCY/rc6geMYbys+M5/w7zy9WVftHAadpk
CrVRjZmozRpUe9SkqdpkDLVKzVUr1Ay1+Ps2XlIPohdRkyZtkwnVKtf0JG0y
oWvdZ+afJprrs+Q9KW00z3t1d5d3dudnh3LuOPht+DJ1ul80eeo2GUqttiZM
2yaTWSsO5/pXmJ9XkjfNWHO1yShmLzOSWUhPo7dRY2aE52yiPWbqBeDFm2Rt
M++CbTK0WdjMNXebDGAWO4L/71Xm51sn+iUTztPG45sVRyrJ2gObeMnf29Q+
a6Bezoy+ELxkk+xuxp+pTcY3+5upZ2mT6c3aZo4l2mQCs4iZa/E2HlYva6ZY
sk1GMGtMUJKd9Gh6NWvchPCUTWqfPYHlXUtNegVmijXaZCSzhhl+5jY9ALP9
FCVZWw+hlzCTrG6ta5JV9oZXaNNT+BFepqbebVpS3z9vU1usMXpT1/gIbWqa
a/9Lrn+Y+d1t+g96zJXaeBC9px5kkTYeWW8yomu8TU3Zv2a9XN1pvuvtXtdh
9+xfw/iN3z+rjWfYmOu/Uz991lzjNWvmYfjpJmvpM/W3jUbOCP9oDWxTc1aB
ly+5xnMz1WioWqrGzlxTY6w11pipa2qMtcYaMm2N5qv9av6kNTXEWmKNmrKm
BlgLrDGT19Qca89u8PQ1Gq6Wq/Gz1mi8Wm8Nmr2mBlmLrGlz1mSqDdvUbLPW
P9bXNhq8o94c3qdN5p2hZvj/LFdyTg81VhuPpLd6oFtPC3TP35Xw5fB18EY1
nmmcNp5LL6VnGq2Nh9NL6ZHGaOOB9E5qcq+NJ1Cr1fimjQdS+60pA3yGmtSa
C+Az4QvglWsy1uSdHpm9zFCztclgZisz0sjd76tXB8AbwJvDpSbjH90mU5v9
D4K36z7vMeHt4VnheeFXSvKvr9efsba11BrKfCk1t/NIL8JvNvFO11nD2ni0
HWo82kNtPJXezdczR/fv3t8+nF/RWgX/VOJJ9CbWpLlr8pP+c1CJX161xv9u
W+KH7Omtz/WbNen1zVDSaxzUNH2FfI4SL6GnMKtb06xt2zbplcxf8rz5vJot
7dHYqzFzzVaTmc5tk3HMUvuW1Hpr/qY1PSB7QUfAc8ADS7yUf7+11Rp7XpvM
ZO21B2Mvxpo/XU0PZL9ufbq+7BnaO7RGTFGTqYbCw5pkLTPjtW0yrFnSGmIt
sac1mV6iF6+kZ5oEPsR71qZnNlFNj8pe1WHwLDU9L3tf9qymqelZ2buyxzJV
t/7VD9eM62O7kuzhPfBemDGHwBc3yZ5m0lPbZCizqp7G3o0ZVa9jD8hekBnU
XqA9HHtZZlB7O2bmk9pkbLO0mdrer57FrG0mPaFNpjWrrl/ijQd3+maGtnd3
SpNsbWa2N2UmNkvbc7P3Zkafp6Yna2/WDD9XTU/RbGZGs9doz8vel5nbXqWZ
//w2Gd5egJn7jDYZ0Cxupj69TeY0a5sJL2uT6c2K+okBnT7oL8ykl7bJ2GZV
M6dZwkxhFrXnZ+/PHoK9S3sIZjHXhGvDzH5am0xrljfTXgIPbZJ1/Uz8bNYr
qQVmnPG7+mQvyHqlfxurq5fWGGvD6V3tOQB+Bj6jJM8cCD8Ln1mSP3aqySNH
lfhbNdZadWSJ9q5bk5d2KcmDviff264ledIapTbv1dWuTWr8894lefcg+Dn4
rBL/65pz7e1Tkn8Php+Hzy7x53vDj8Mnl/h576H3crWS/KDOq3fWPOuaNc5a
uU1J7Vu7Jn+5yWGe3dOaDJ9Y4p/3gh+DTyrJD7vU5INjSvz/zjV+/WgLNLx7
zf7ACSV+fR/4CXhwSb9y25r+5SEl+XGbmjxycEm+3LomrxxUkgf1V/ob/at+
zkyrX9W/6vfsyelX9a/26szAZmF7fvby7MnZu7eHZ6/OHp97N/o1e39mYv3L
lE38W18Po41/fL/ze/pJ/Zv+0R7QNW16bvaG7LndCT/QpBdnj+2uNj0+e2/H
lmQpPzM/OzO92f6FJr1Ae4T26vWv9g63rMkvB5bk43M4PtHmnnvv7fmZH8wf
+q2LGS+0ySBmEXtoN7XpAdpbO8Wa3uYeeC/saQ2H72zS6zq0pJfsPfHe2FOw
t/Bkk16iGVl93weet6aHMXGbPSx7G8NrvKkeVi97dU0t1ePqdW+CV2ziYfWy
t+khmnhSvel18MJNPLZe+5oaL67H1+tfW+O99eh69WE1XlmPrFe2Zk8H/92m
lg+t8S56GLPB7TVewJpp7by1xgvrcfW6N9d4Wz2z3tmabK2fuKvVp9V4FzON
2eb0Gm+rp9Hb3O4z0qRnrl84tSb76HH0OtfXZA0ziFnklBrvY2YyO11R82z5
jJldbqnxBnpuvXfpeKbO21xVkx308Hr5wTVapqaZTfUofv4DSrzLjTXvx0xi
NrmhJpuYgcxCPmP2YtQAnz3X4EWdHrs21QCztGtSbVAD7cW45tVGNcHegmtY
rVBD7I2ZEdQWPcuxXX1atfMTQzp/YX3/tdP3IZ3+W2+P6+qX9VUNHdzpv9p6
BmP8JhnDrKHm3dg9v3t3z/vw7vn3+VWTrur8i1plhvH9T9Rlm/FqvPSiJf0c
Ne3qzn+4XtWsYd16cf2o+fY21Gxrwd9d/RrarR81z16Fa3j3bv0P7fRi1269
XdLVP9efGmfvy5qh9qnx53T+Qu1fpZe1rwbYD1iul7Xsmrbf8GqNV+6rya6H
mtrcV5N78dB63607b/1yTa3uq6HwuzXe3ppt7X6x5l701Vz49RovpyfUG75W
c++8h3qhl2pqcZ8H6iUj+Pfs2WWHj2u0UI1UK3fo/r8jSrzzJ/BDTTSzTztr
vJ0eTi93Z42X0+Pp9cbs1vMCJV7+uRqvpEfSK71d89n6GesNXoDPbOKx9Frv
1dwL74le86Ma765mqp0f1jw7PkNq5fs13lPNV/s/UIObeFK96Ts1XkdPo7d5
o8Yr6YH1wm/VPBs+I3qds2qykZnJ7HROTZYyg5nFLqnphdijsVdzZU1Wt4dg
L+HSmt6OPRN7Jyv24lcebdP/WaEXP/NIm/7Ksr34g/vb9LOW6aWe39emn3Vm
jTfTo5nFVurF7zzWpn+1ci9+5PE2/avLanoz9pjsNV1cU4utyfaSLqjpDVkj
rBVL9+In7m3TT3mT85c38ZR6ywtrekv2lOwtXQ7P2qQHZC/ovJrarwew13F2
TVY1Y5o1Hy3Rg2/hQWpXTT2wZ2XvakjNfoOZ1ex6fk3tsidmb0zP5V7DRU28
2HUle5jvN+nF6QHtbev59IbuedovsT9ivjJvWUusKeYr91z9boB7Ju7Fusfq
dw3cI3Lv1T1Yv6vgHo97s+65+l0G+y/uxboH6nchBjXZG3VP1e9KuOfjXqt7
sH43wT0h92bd83Tv3z0b90LtaZr/zHvmMe/Z451/OLF7f/oP9xi+rnlGfFZ8
huzN9X2no809s/em/7iz8zP6FZ8xnzWfEXuP9nfsXX7G+Eqt0TM02QP29Yfz
+x812bO133luTe/yE8YXNc+Yz5rPmL1TNU6te6H7/N3zNN9u1iSv2gO3F24P
3r1ie+723u2Ru1fsnpV79e6xuZflnpXfBXEPzr0s98j8Lon9Nftd9r/0EnoK
+13mWfOyPeEJajy02qMG6a3tebm3pce2F2ZGNz+ZV8wn5jPzrXnTPOYend89
sF/n3p17eH4XxT1C9/bc4/O7Q+4Zu/fnHqLflXFP2b1F873eRI9i3je/62XU
QLXQPRr3arZssrfunoJ7C+5BTFiz5lx7rnl7m+7p2r9cvEn/0D1Kv5s0sMne
pXuUfhfDPXH3Lt2j9LsW7om7d+kepf1H+4v2G+xH6m30OPYb1Ri1xhplL92a
6l6J/Qhrbd+eQhu/fHD3PEzmuTb9PP2s/tP+if0Va5y1Tj+qv9Vj2Ztxzeu9
1DC1TI2zV68GTNZGAx7tMpR7Cfc3yVb/B5Hlt7o=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt13f8VWUZAPDLvRcQRFyMAoEEBGWqLNmyEwSSWchQZjGTnUxZIksTHCkr
UaByBoLJTBAXo9gylWUISKFigIDf53P44+F9n+953nPvPecdP27vPqjNwHQq
lfpQ5BTXZ1OpSqBrjlSqV1gmlcrDKrDOrAfLsAviRlafNWUn9POqq6jtwnqy
bCb+SaWKsZasnfQ7/Uq8oijp2oPyp7T5RGX9bup6q8vl+q2sJuvEHhb75IVF
PTZQPkxdQXVHxAS2iL3O+spzqCvOWrH27Hv9Aqy2th8bzG5RV5DVYf3ZEHZr
/C5WlfVk/Vk+lp9VYT1YP5aX3cDuZd1Z33h2bIW4nTVkzdkF/TLsDlFCfTP5
ZO3K+P36jdS1UHdR/zpePp381vjNo+WFRF02QD5UXQHjfojPZnVZnfgt8X5Y
+fhs/RauTdWWk98lfqHfnD2pzS3K6nc0rpv7XdXfr+Yx7bPsZfabGBPfV9ym
vrFrE7QH5IP1Z6ubq65TJvnO5VgL9qDYJl/Of85qyRupO6f/Liuirc0as2/1
X2Hn5DeJouxT9mf2P3l+UYR9woqzYqKoezeSP6EtEp8R99RvyMZrfybq6w8y
drixheJe4oq8kqgY7ymbzKta6vrKfyfGykurKyWK6zd1bZL2nPyq65VFdffb
zUvGM47v43oT+UTtF/JR+nPVvaquu/yweJy9zBaxR+NZxm+I721MA9fGaZfF
PNevGu9S3Sn9s+y8vEx8b7aNpdWW0LZmHdh5/YPqhmjnsHnsYfnN6qqz3mwg
yx+/IT47nbyfeE8jY36zKjEv9Vu7NkN7l3hE/xk1Lxrb1PVVmeT5fplN3kG8
izL6v4pnrm6quvvYukzy3I5nk7kec351JnlfR7LJXIo59ZF4iA02dpSxNeV3
i8rx/NW1dG1arCv5PaK0fis2Xbsxk1w/lU2uRc0W0YmNcr+J7tdAvlU8zEaz
SayhPGNMKdY29hL2o/423lk7hk1mjeRrM8l7PZZN5kPMi7L6v441pe5JMVt+
p+jGnpa/YGwzddvFo7FW2HT2gHxNJlk/R7PJvIn5s0N0j7mjboa65vL1mWRv
OBHrU/9OcYt+DdZH3SB1N7INmWTP/DqbPLN4dpsyyTs8w6rpVxebRQc2wtjx
xtaTfyLasqFsDKst/1S0Y8NiHbA6sY+4z2/Zi2wBa8U+E+3ZcDaO1ZW/n0nm
8RfZa2tR7BQ9Yv2om6muhfym+F6sFxvAbmCLxLfyW8Rt7DPX34n5q72X1WIn
9T9mbbRDYj9kteT/zCT72X+yyZ4Xe18l/d+zheqWqusYc4oNZ4vZa2KJ/INM
sj+ezCZnUJxF9+iPZEvVvGVs13iubARbwt5kXVhFNogtiHux9qwc68NeYM+L
+fIPM8mcPZ1N1listQr6cdDOV7PY2A5st+jFprCnWUv5QnFGnksUZptiDDsl
T4uCbCN7lX0nLyCKsc2xbtk++aU4o8Uy9ked/exychSnlrMHdBZpd/DtYlms
MbGU7ZUfVjfTuEuiAGscezs7o99M3YJYO2wPm6zml2wh+xfby6bEnsFeYB+x
rWxM7AXsxXincU6wsbGe2RK2hx1iM2J+s8VsNzvIpsc7Y6+xXewAm8Z+FAVZ
E9aSndZ/j92lbc7asrS8mrHj2dvsPdYn1gibHOcSWy7ekP8j5gJrE+evujzy
2eKgPEe8E7Yi7q32Ve1Otp89peZ+9hz7kG1mo1jO2AtZe9aFXdZvwJ7XbmJb
2Oh43+KreN+iBFvven11c7Qb2QbxTpzDYi7bLN+pboJxJ8SzbBlbzR7PJGNn
p5PfFb8vd87knb+STu4V97w5Z3I2XtYvHp8bz0bNUTYx5lc8E/frl0n+3siX
Ts7POEfXqvuKvcRWxfdT98S1Zzopnay1WHNX5Mf5dPZ6PGd1g6+ty2HpZL3E
uvkhm+yxHdlI+R/E2Wyytnqnkz039t5zceaKeWyLfJf7TYxzh81nW9luNol9
I85e+13x+x5Rs4v1VDdZPkvdg/JcvAzrwLqyK/rZ+HtA2451Zpf0L6stpG3K
WrFv9P/NusY5HucCa3Ltc7+R5xF54/m71xVWONaOvLW6s/GM2PfyQvH92JbY
99SO0b4R41iv2DvYOPYWW8l6s/+L/Kwea8KOxx7HLsiLiFJsO/s2NgHt3ayG
7h7959hheU5xHXuP/T3OGm0VVpt9HZ/H8mrLs6rsqP6bLI+2HKvCjqSTvy2K
ppO/Q+Pv0U2+79vselZBXk3dsVjfrG+c43F+sofkc8XJmCfxd7f4wPWXYk6z
W0V+tpbNY1/LU7HfaTbE+cymaf8W+xd7TL5AnJZn47nG/2niDGPH5DeKfGx1
7NXsqPwGcT1bFXORHYk83ht7n12Ms0t7P2vGvtL/Ezse6yfGszXsv7FG5GVF
ZbaVfclGx3ePs4f1kFfxbMbGc2QrWE+2V/RjM9gc1kb+usiw0qwC2x/P19hZ
2rXxjNkwNbXZTLYmR/L/tyGsFpvBVsc6Z0PjnIi9iFWLd8QOxdxR94x2PfuY
jVBTk02NPZStYwNZXfY0W8c+YsNZDTaFrWBrWH92H3uSrYz9gQ2I+R3ri1Vn
9dhB/WfZAfnVVPL/zXfZHHaIZWKvYivj3GUX5UVFabYjzuc4k+S3iTvYTvaX
OAfiDBRl2C52iA2Nuc7ms85xLooBbBZ7nrWTfy76s5nsOdZWfl7kZjVYfXZY
/68sh7YkK8c+j3nH0tpSrDzbF+uWZbV3sIrsQJyJrIt2LJvCGst/Aj5VznE=

           "]]},
         Annotation[#, "Charting`Private`Tag$299747#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jsrhmEYwPHH+XxKShH5AGxkYJSBSTKwkYGBkoHRIDYbn4CVxK7YnHmd
z0lyWpyP8bvL8H9/V713Pdfd85S19zb1xEVRNKxXhflRl5qNj6JcLrCU66zg
KWv5wEZ+s40ZCVHUzSIWa9BczVHWc4ItnGIn59nPJd7xmu/a1rPutWyhGFe4
w1Xuco17YSfuc4MH3OQht7itI3OMx9zhCXd5yj2ecZ/nnHaPG37oQi/hjhqz
2xaHuMg+zrGDk2zmOOs4wipWasBcyC6msZWfntEQ7ssaHrM83IslvHHuim/K
0VM4qwI7ZjOfWcxjZjjDDGYxPbwDpjGVKUo1J4WZCUwO75hJ/FWifsJ/+pI1
ohk/t//fwx/C10rt
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1000, 473, 689, 1103, 912, 691, 1104, 913, 692, 1105, 
       914, 693, 1106, 915, 694, 1107, 916, 695, 1108, 917, 696, 1109, 481, 
       697, 1110, 918, 698, 1111, 919, 699, 1112, 920, 700, 1113, 921, 701, 
       1114, 922, 702, 683, 923, 1001}], 
      Line3DBox[{704, 1005, 1204, 703, 488, 705, 1115, 924, 706, 1116, 925, 
       707, 1117, 926, 708, 1118, 927, 709, 1119, 928, 710, 1120, 1006, 1205, 
       711, 496, 712, 1121, 929, 713, 1122, 930, 714, 1123, 931, 715, 1124, 
       932, 716, 1125, 933, 717}], 
      Line3DBox[{719, 1007, 1206, 718, 1008, 1207, 720, 504, 721, 1126, 934, 
       722, 1127, 935, 723, 1128, 936, 724, 1129, 937, 725, 1130, 1009, 1208, 
       726, 1010, 1209, 727, 1011, 1210, 728, 1131, 938, 729, 1132, 939, 730, 
       1133, 940, 731, 1134, 941, 732}], 
      Line3DBox[{734, 1012, 1211, 733, 1013, 1212, 735, 1014, 1213, 736, 520, 
       737, 1135, 942, 738, 1136, 943, 739, 1137, 944, 740, 1138, 1015, 1214, 
       741, 1016, 1215, 742, 1017, 1216, 743, 1018, 1217, 744, 1139, 945, 745,
        1140, 946, 746, 1141, 947, 747}], 
      Line3DBox[{749, 1019, 1218, 748, 1020, 1219, 750, 1021, 1220, 751, 1022,
        1221, 752, 536, 753, 1142, 948, 754, 1143, 949, 755, 1144, 1023, 1222,
        756, 1024, 1223, 757, 1025, 1224, 758, 1026, 1225, 759, 544, 760, 
       1145, 950, 761, 1146, 951, 762}], 
      Line3DBox[{764, 1027, 1226, 763, 1028, 1227, 765, 1029, 1228, 766, 1030,
        1229, 767, 1031, 1230, 768, 552, 769, 1147, 952, 770, 1148, 1032, 
       1231, 771, 1033, 1232, 772, 1034, 1233, 773, 1035, 1234, 774, 1036, 
       1235, 775, 560, 776, 1149, 953, 777}], 
      Line3DBox[{779, 1037, 1236, 778, 1038, 1237, 780, 1039, 1238, 781, 1040,
        1239, 782, 1041, 1240, 783, 1042, 1241, 784, 568, 785, 1150, 1043, 
       1242, 786, 1044, 1243, 787, 1045, 1244, 788, 1046, 1245, 789, 1047, 
       1246, 790, 1048, 1247, 791, 576, 792}], 
      Line3DBox[{796, 1151, 954, 794, 1152, 955, 798, 1153, 956, 800, 1154, 
       957, 802, 1155, 958, 804, 1156, 959, 806, 1157, 960, 808, 1158, 585, 
       810, 1159, 961, 812, 1160, 962, 814, 1161, 963, 816, 1162, 964, 818, 
       1163, 965, 820, 1164, 966, 822}], 
      Line3DBox[{821, 1261, 1061, 819, 1260, 1060, 817, 1259, 1059, 815, 1258,
        1058, 813, 1257, 1057, 811, 1256, 1056, 809, 1255, 584, 807, 1254, 
       1055, 805, 1253, 1054, 803, 1252, 1053, 801, 1251, 1052, 799, 1250, 
       1051, 797, 1249, 1050, 793, 1248, 1049, 795}], 
      Line3DBox[{824, 1062, 1262, 823, 1165, 967, 825, 1166, 968, 826, 1167, 
       969, 827, 1168, 970, 828, 1169, 971, 829, 1170, 972, 830, 1171, 1063, 
       1263, 831, 601, 832, 1172, 973, 833, 1173, 974, 834, 1174, 975, 835, 
       1175, 976, 836, 1176, 977, 837}], 
      Line3DBox[{839, 1064, 1264, 838, 1065, 1265, 840, 1177, 978, 841, 1178, 
       979, 842, 1179, 980, 843, 1180, 981, 844, 1181, 982, 845, 1182, 1066, 
       1266, 846, 1067, 1267, 847, 617, 848, 1183, 983, 849, 1184, 984, 850, 
       1185, 985, 851, 1186, 986, 852}], 
      Line3DBox[{854, 1068, 1268, 853, 1069, 1269, 855, 1070, 1270, 856, 1187,
        987, 857, 1188, 988, 858, 1189, 989, 859, 1190, 990, 860, 1191, 1071, 
       1271, 861, 1072, 1272, 862, 1073, 1273, 863, 633, 864, 1192, 991, 865, 
       1193, 992, 866, 1194, 993, 867}], 
      Line3DBox[{869, 1074, 1274, 868, 1075, 1275, 870, 1076, 1276, 871, 1077,
        1277, 872, 641, 873, 1195, 994, 874, 1196, 995, 875, 1197, 1078, 1278,
        876, 1079, 1279, 877, 1080, 1280, 878, 1081, 1281, 879, 649, 880, 
       1198, 996, 881, 1199, 997, 882}], 
      Line3DBox[{884, 1082, 1282, 883, 1083, 1283, 885, 1084, 1284, 886, 1085,
        1285, 887, 1086, 1286, 888, 657, 889, 1200, 998, 890, 1201, 1087, 
       1287, 891, 1088, 1288, 892, 1089, 1289, 893, 1090, 1290, 894, 1091, 
       1291, 895, 665, 896, 1202, 999, 897}], 
      Line3DBox[{911, 1004, 685, 910, 1302, 1102, 909, 1301, 1101, 908, 1300, 
       1100, 907, 1299, 1099, 906, 1298, 1098, 905, 1297, 1097, 1203, 904, 
       673, 903, 1296, 1096, 902, 1295, 1095, 901, 1294, 1094, 900, 1293, 
       1093, 899, 1292, 1092, 898, 684, 1002, 1003}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1103, 252, 488, 280, 1207, 503, 295, 1212, 518, 
       310, 1219, 533, 325, 1227, 548, 340, 1237, 563, 355, 1249, 578, 1152, 
       370, 593, 1165, 385, 1265, 608, 400, 1269, 623, 415, 1275, 638, 430, 
       1283, 653, 445, 1292, 668, 460}], 
      Line3DBox[{253, 475, 1104, 254, 489, 1115, 281, 504, 296, 1213, 519, 
       311, 1220, 534, 326, 1228, 549, 341, 1238, 564, 356, 1250, 579, 1153, 
       371, 594, 1166, 386, 609, 1177, 401, 1270, 624, 416, 1276, 639, 431, 
       1284, 654, 446, 1293, 669, 461}], 
      Line3DBox[{255, 476, 1105, 256, 490, 1116, 282, 505, 1126, 297, 520, 
       312, 1221, 535, 327, 1229, 550, 342, 1239, 565, 357, 1251, 580, 1154, 
       372, 595, 1167, 387, 610, 1178, 402, 625, 1187, 417, 1277, 640, 432, 
       1285, 655, 447, 1294, 670, 462}], 
      Line3DBox[{257, 477, 1106, 258, 491, 1117, 283, 506, 1127, 298, 521, 
       1135, 313, 536, 328, 1230, 551, 343, 1240, 566, 358, 1252, 581, 1155, 
       373, 596, 1168, 388, 611, 1179, 403, 626, 1188, 418, 641, 433, 1286, 
       656, 448, 1295, 671, 463}], 
      Line3DBox[{259, 478, 1107, 260, 492, 1118, 284, 507, 1128, 299, 522, 
       1136, 314, 537, 1142, 329, 552, 344, 1241, 567, 359, 1253, 582, 1156, 
       374, 597, 1169, 389, 612, 1180, 404, 627, 1189, 419, 642, 1195, 434, 
       657, 449, 1296, 672, 464}], 
      Line3DBox[{261, 479, 1108, 262, 493, 1119, 285, 508, 1129, 300, 523, 
       1137, 315, 538, 1143, 330, 553, 1147, 345, 568, 360, 1254, 583, 1157, 
       375, 598, 1170, 390, 613, 1181, 405, 628, 1190, 420, 643, 1196, 435, 
       658, 1200, 450, 673, 465}], 
      Line3DBox[{263, 480, 1109, 265, 494, 1120, 286, 509, 1130, 301, 524, 
       1138, 316, 539, 1144, 331, 554, 1148, 346, 569, 1150, 361, 584, 1158, 
       376, 599, 1171, 391, 614, 1182, 406, 629, 1191, 421, 644, 1197, 436, 
       659, 1201, 451, 674, 1203, 466}], 
      Line3DBox[{267, 482, 1110, 268, 496, 288, 1209, 511, 303, 1215, 526, 
       318, 1223, 541, 333, 1232, 556, 348, 1243, 571, 363, 1256, 586, 1159, 
       378, 601, 393, 1267, 616, 408, 1272, 631, 423, 1279, 646, 438, 1288, 
       661, 453, 1298, 676, 468}], 
      Line3DBox[{269, 483, 1111, 270, 497, 1121, 289, 1210, 512, 304, 1216, 
       527, 319, 1224, 542, 334, 1233, 557, 349, 1244, 572, 364, 1257, 587, 
       1160, 379, 602, 1172, 394, 617, 409, 1273, 632, 424, 1280, 647, 439, 
       1289, 662, 454, 1299, 677, 469}], 
      Line3DBox[{271, 484, 1112, 272, 498, 1122, 290, 513, 1131, 305, 1217, 
       528, 320, 1225, 543, 335, 1234, 558, 350, 1245, 573, 365, 1258, 588, 
       1161, 380, 603, 1173, 395, 618, 1183, 410, 633, 425, 1281, 648, 440, 
       1290, 663, 455, 1300, 678, 470}], 
      Line3DBox[{273, 485, 1113, 274, 499, 1123, 291, 514, 1132, 306, 529, 
       1139, 321, 544, 336, 1235, 559, 351, 1246, 574, 366, 1259, 589, 1162, 
       381, 604, 1174, 396, 619, 1184, 411, 634, 1192, 426, 649, 441, 1291, 
       664, 456, 1301, 679, 471}], 
      Line3DBox[{275, 486, 1114, 276, 500, 1124, 292, 515, 1133, 307, 530, 
       1140, 322, 545, 1145, 337, 560, 352, 1247, 575, 367, 1260, 590, 1163, 
       382, 605, 1175, 397, 620, 1185, 412, 635, 1193, 427, 650, 1198, 442, 
       665, 457, 1302, 680, 472}], 
      Line3DBox[{277, 682, 683, 278, 501, 1125, 293, 516, 1134, 308, 531, 
       1141, 323, 546, 1146, 338, 561, 1149, 353, 576, 368, 1261, 591, 1164, 
       383, 606, 1176, 398, 621, 1186, 413, 636, 1194, 428, 651, 1199, 443, 
       666, 1202, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 444, 652, 1282, 429, 637, 1274, 414, 622, 
       1268, 399, 607, 1264, 384, 592, 1262, 369, 1151, 577, 1248, 354, 562, 
       1236, 339, 547, 1226, 324, 532, 1218, 309, 517, 1211, 294, 502, 1206, 
       279, 487, 1204, 250, 473, 681, 688}], 
      Line3DBox[{467, 675, 1297, 452, 660, 1287, 437, 645, 1278, 422, 630, 
       1271, 407, 615, 1266, 392, 600, 1263, 377, 585, 1255, 362, 570, 1242, 
       347, 555, 1231, 332, 540, 1222, 317, 525, 1214, 302, 510, 1208, 287, 
       495, 1205, 266, 481, 264}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJxsfHdcz+33f6SU0VDIiNAgIykzuqJBQ4NKNCktpVQaQqWMhFRI0h5G0d7j
au9SIWkQGjJ6N6RE+l3n4n0/Pt/7d9//XI/327mvznVe5zrnec55vt4rjtkd
OD6dhYVlARsLCytZBbfpymoGViPmekCooBulDqBt9vJb5nVUoC0X1a9ZJ9Sg
kyk3j3uVD6D7R2fYHMKlaPnIEoszcbVIcM3e9NVtA+gBrp97XKkIXXYp/rDR
vQ6d+DXIdmJgACVekRo7MJmNTp/7dc1PrB61vY84dI6FgQ7q/lwsM5SMNHsu
XBKLr0fHjo09KuBioFCjOSvOCEahAzq1U7dH6tF55+O6HQsZ6Gfy5fSpxRKF
wqe1quPmNvz9zECy+8WNiTwulkqk8sIiilRefHffdrI/Nv6mSPdXvpZF909+
sUfk4GQ2dhFxpfr8EOOj+gx82ylI9McGHWPtoP/DyndU/wQXPndyXtyvf9cc
zhunkZ4G5z3PkrmL2Acv38VG7fNt1U5qn0TjdEViR5z2bCa1p8w0Y2pP1fpg
Kjf0tnED2LVPtofKWzoFXDvbVonWzFW+BatFqx+r6ZsB5GpUVtgWVoaMapvf
2RRUIROp0jH38QH0an5nxMepIhTFfXOsw6Ma/VQ47JLHy0DaxdNKWAVz0Zzy
2mpWwRpUzff6LddqBrJ4ExRUnpGCkiaqnB7erEF7RV7ZB2xnoGulS/0nuqPQ
ogY2QddXNSjhhkVNvgIDeTzO3xW0DxWeqDfU0WLU/P3MQIqHBeuJPE5vaVsL
8r76rtUg/8lxrJjsj/m2fXaH/Stq59D9udUWNRF98J+1BtldU6D6HNz0+SnR
H0ca3P8N+r/95OoM+rNm+5aQ82L2oTR63rag+/S802blhxK7YM9WNWonFm4p
ah8W51/+xJ54fd0y6qd9RsbUnu/lH1rDczqw+4Ed+CnHXAZ9Xj2m/T2w7wUX
nTSw62A2xzjsv3VG56tWs3K0/2f0W1iZ/jPDBhluii9GbHv9vxVyVyApp0V8
o5vJ953ZSabL89DZ53ftVt+rQMvnTG611WSgq55xUn7mqUhotSXHBpZKZNgZ
0Ch4nIFiDqi2Bt2NRgGsT0azZSuRwFRpk7IDA80T3WbyzBkVfo839K47WPn3
MwMZ2mZtuXU3GqdNfvoK8sn9fVTeQfLJAbI/dnhQxw37WzoPP4P9v6pMNBB9
cMm2bAvQxz3vM9Un2OGGDdEf8+pupPrfWRU0D/Q/NmzZR86JV85d2Pi/592U
lAD2wbfFu3LBPm/d8qj9Xz/lO0nsia/3znUBewbvcKD2zHSOo/c84FooL9z7
vsBmel9uK3aydZLnemf4UCb4qffj1tPwfJl2ZNqVaU8pwYilmptL/lmTQ/0v
++gxUJTIuM/q33loi9FKU/tHJWjj2Spqn0OOtaZrplKRE3fSiTVTJai7sdnR
/gYDLTu253SZVAy6L8h7sUyqFDXHPfvpHMZAww5f88OjJQo3JLxW9FIs/fuZ
gRZHjj8n8jju+4APyIueCKby63tTAsn+OPf0KkfYX4Z/Md1/hqhIKdEHx3yL
Ogb6TP/JMAZ9EjdMrCV6Y6sv+6n+Ji2sVP8U2xW/yHmx7wg3PW+jVzm1v/si
d3ZiH/yl05He4+Kxu9T/73NNfSL2xIyrptSeISssqT1l9sdchDilW+pH42jx
obl6EK++1+yh9+pS6dNiuPfvuZzp/bqettoS/KAt8kok+KlUwOVt4A/N8tOp
HfOOe98Cu/boB1J7WqYySjel5f+zvnJfvv7YXQaStHsWquuehjLedb6etr0A
vfytseZqKgP5/Xgye0VqDJqTvqZY0q8ASfyKFVtTSuwwFRvWUSVR+PGUIc/n
+IK/n4n99Z9bE3l8+sZIEcjHlltTeYONibA/vrrvQj/sfzJ+Ad3/QVXeMNED
m20+RPUpv++yDvSREL/iQPTHXPku1C+Y92WLjiPcQ5w2XxrDeaUXV1P/f9uY
00rsg7PL9al9fnLyUfvU7YmFuI9nmH+cT/IAGuDZQ+M/Mw8x8xIzHzHjJjOO
MuPnlox+FriHj0JlhOHeL2qd2wT38fGQBvWbP2sqUvthSv3HJEn0B5zzytAV
alcO9c7VcF7/jpan0q/S0BKJwkJYxXIzBOIaGAipP3VO4I5FP66HX0rgTkev
61UdPbpIXhO1exneiwo3671ckLMy/e9nBnJWunCHyON89kAqH9KzlcpXOsu/
IfvipCYnuj+7oBzdX3pAGfTBCWsr/UCfsSus1P6rb/pdJfrjEO9F9J5F7Uxw
AP3DbrDwkPNiw5BTNM49V99O45v6V0k/Yh9sl9UXCPZhi3hgB/Z5NS59m9gT
2zt5UXtyjC6k9rzQ7TUOedrmscx0yPP9eb00/jDzEDMvMfNRp3IujZuODz5k
Qxw1+/aSxkMz7ZZrcG/XlV3QgXvPvL/fXA26wM/YOF+ogJ/yFnFSf9syP4Ha
hVO3TRfsuijTmNrnoHm6o4Ry7D9rDWeJ0ooRBlrCbTHs8wMV1qpWsIQYxP79
zEBXzI+MEDm8uujeQZAXNr5I5c8MqsWT/fF+ybP0uXWs++UA+88I9AR9sE3l
cXpvBPw3Un3aV9+8RfTH3Tt0qP57HNSo/r5W72bkyFZiZaF3r+C8S6156Hn/
5l38Nw//k39T+6Rm3hmpx2LCeBrY0/bCDGrPm86PGwEn9S5eQHASKvyzEvur
vDKAvH4pVYfm+T8rA4m5jV+FPIQGO0lckyj8szLQ/42bEoXM+Fl7N4kF7vkL
r7f03v9ZGSjCLEkU/NJTaC/10z8rAwW+SRUCO+LcA8SOEoV/VgZiof/JFf7f
dRAtn3HNhMjjWfPEqfyflYFOnTNVIvvjdfPHXoT3ShT+WUl+UZ0tRPTBF89Z
U33+rAz03PbWfqI/llsaTfRGhX/Wf86L/33eJIWaE8Q++HbJ5Z1B+yQK/6wM
NOnC2krsiZ/7xKYBDv2zEvvMu05x51uZfWGAQyufC1P7T2t4vRT8+WJs/RfA
Te1q0tSfmXmdmeeZ+Z2Zh5h5ienPPzhTGsGfF6wcB3/GYd/lqf94eFyk/pwo
q5sJ9/7w5CrqzyffXad+vEfR4jn4KdM/mXb8v3YleKNIjsoxV8/0fVSe5b0U
9eecFcJ0fwODF9SfzdtHGeDPRTwWNK6zrMwXBX16pp2k/tzlOjsd9L+zlZ/q
P8B9dA74s5uh+wI4L3tGYCOcVz15ixT4c0WI3uyfxD4ciYwqsI/hfMQF/nwn
o/Y+2FPt3h4dsGevuxiNz7e3GCoDrt8ZFUzjyc7+mWchPo/X2qYCDtW/uIHG
Z+e2UBqfq6f4DwJucgmKofHq9kJdihuMDPyjIc+XsCMan2ebBdM81z9xIA/y
EjMeMuMmM44y4yfznjPvPfO+tyxe/hL8kuOU7xbw0z+fGUiObza14581Hb/x
S6TyQxeSv8K+514GT8K6cuHZhbC/wdRqgekkPgdNleeCPofFltF8wZ8ZcAHi
8/4BPYpTFqlcovH5Ly7ETJzIxIdLdnh6Q3yOtZKm9rmnV03jc+/M8VsQn5WM
bWmdxFjW+hDsyayLmHUSsz6y3dNaDHijQO/WIOB63YAHNJ+qLp00Brwh6ln0
BnBokQEXxRv28hL6gDfC2tRjATc9Mo+l+XruUWGa181FdKZLkTyPHyCa3zsc
99C8OPOcHT33tjBrel4PJ/PPQiRuep7tnwK/u+D7jPrbn/uNCv/vvSfPa2wP
9UsTlSgq7/TZi8pbyvZTO16568MB+xd7HKL7nzFf9RzwRkAw4z2sTLxxOz7X
DfBG7GWzEtD/udtCGh9ETn9wBrzRqWVGcffy27IUb/A+N6d4o6plYxfYZz5b
8huwT/9F8VDAG0eMA4XBnqtlt+mCPf/iPfQX72Em3ntcZEHrous3rgF+xiua
tlF8mMMxpwfw8zXTrxTX63PIUPzc4ONMcedgnJow4FDOHGWKPxUub6U4aS2P
zBk4BxOv1v747gB5fcamQupH4hKN1H8UK3KcIA9N3ZO9D/d4Vd7ABNxfZtz8
v3GU5FMzt1twz/+spfjZqCi970tc3S+AX27jN6Y44uaho3R/jlMNMWBHS+7b
1qCPLw8/9Ydrc4Wp3sz16F/8bBGjzYoJfo7ykqDnbZL9zAvnvf6Ol+JnozuZ
tI6ULxOg9pGN+TgE+Hk4/5gQ2FNmls8MsOcCo8u0HmxhP+EIdXyCbg2tX1pf
XKP14HKfOKizsW7bLVrveMWq07roSWAb1IP48uBtGs+ZOJ6J65l4/myXLa0H
n57a4AJ+MeQaT/2BiZOYuImJl5y3L6D14PUteydJHsD3pK1p/LfK9TaGelBH
NSgQ8tKfzwwU75xM4+ZIRwXFBd4eX2j8VFJxo/d8cO7xhbB/V18Ive9Mv2T6
KdM/l04YUTvmny35CfpLSyKq//U6KXrO6NIfvbAa3Iih8dZjwpbWg486rWld
3rjjJLWPsea601AP/og7eB7seXJ6SSrY8289jv7W45hZj9ttdw+Cun3Q+lM0
1PGSZ72mQ/0ebxGRCXWmY1LqN/g7chmr6f5LWpQfQF0UPN4I9wBHzMihz1dO
vaIRcPy41k16z65cfkfvFxN3MnEoE3+Gmb5/AjjJwquf4ia3U74UL13PHdgJ
uCekUtMM8vyfz/9ffwMz8RVDTZX2N5LEtQNhf2/FzpOwP/OeM+89877/rXvx
3zoYM+vf76vXUzs6zn3/Bc6bf4WXnjduek042IW5VqaupvbpX59G+xsOBgG0
z2TTNIva0/vgrB3QVzqVt30/9JmShyRof4nZB2H2RZj2D+k2PgF1+zDreTda
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
dZHchpvS9LqC5O48w/sDJXdEY/H+kO2BJnX0/qgs7+jE+wlLVMq78X6Sc5f+
Ye4n7x/mVGU7Zx6inHfrhG0xPhfCv+Eh81wyDmaZUO6JlJO7h8+RNA/u2Uyf
oyPfDSt87uSDba0VPncC+mZ19Lm3qB5Y4I51+UVluQjGDxnsTGbip6V6tTbG
Gzyp2SyD8UaUNsUy8cauqN+K8Qlhf3V4YHySXatGmPj8016CaL75UpQ7/R+f
s8b4x37fmkDjP/OUjSHmC7kry56C+UICF94/T/Nl0/m2eMwvMnOfbhjmF4mW
UB+l+fX9vQ3BfCSun+LSMB+JZ76uB81HntlagHkNlrncPX3YT+p5+5m8nuWf
FoF1AOxm645VY72c8++6LFoHvOplL2LdgFYppxisG+T/vvPa0brhxNYbwzoD
wY/b9bHOEJ+NLKbOmAh3RmC9IsHnj2U8R17WiQo4SOtVTeO2lVjfyIhnrRLW
N6Kg1z9E65uGtOsJrIdE8qrxRayHROXcCFMPD60/Y4D1k0gfb16J9ZNEr9Up
oPWzbZeUHtZbclgrIgzrLblO7uyg9VZYockF6zYIfvbix7pN/sv4ztTtsbBj
t7HOg2+dnyjWeXLWOYap854L47djX4AXPuenYl8gL8qlmb6Q6NL0EfsImPYp
yWMfIaoTu4A+x0m8el7Yd2DAT3c99h1SxsXD9B1NSyt9yv3quakj19ADbG90
/EX713yjVwew35EH6e4LsN+R5EdRdrTfCZZlLsf+SG6v/rvrJfLjBj97d9of
Bw145mE/JbPK1m3Ffkq2S0qY0X7qae63FfsvmV04cAD7L7GsrWX6r174WD72
a1IiJDPSglyz69taGdqvr67ds4dgv5dJnWuNfZ90/Oj7IieKNZATQM8l7hJy
AmncK8lwAmd7XRNyBeQtKzmMXEFmeTkwXKHhn1eAHAI5l+M4+7FeHpu3guEQ
RQO3MuQWOGcsXaGDdcv1by6GW/I8vycj54BEaNAC5BwSWnVmJ833n/s8za/L
lI+3zzPrn7Zf9nmm/tjnWTh0Zx/d5+n+Y5/nph/7PIfkoxg+TfxtnydMurBw
vH2eIW2SUuPt8zSzmab8v/s8f57vnH5qZNy9nWviZ3ONt7czar3Q5f/d2+n7
o3/MDelm9nb2/ugj0T/2dmobHs6mezvLf9vbedJLtXG8vZ0dUu1l/7u3szls
tvAAza8qMx4t9EjXverulEtXdKyd8w65LeCd2AnkWxD0/E+QxoOT7N0c5GGi
F2DMx0K/nDl6LoPysOeeqi3Iz2RaxIIW5GfQ5XJi+HnbwxuS5sh5fY6tfyOH
Q6r4QUUab7WSA8XI7RA1N8QRuR10+JvUaN4N/Vs8DzmfLP0m5YqcDwWezQzn
zxJKn4BeQMznz+1HL4CVPh8ZL9B1PR6LHkGWPs7dgh4BY3xGjEdsShcVSkKO
7CmQ6EUfgdNCuxfS+OffKFuG/gKG3R5B6C+w0VfhHK0D/y3j2KHvwFmHJZ3o
O7B18WtzWt9C5nktQT8i+zboiqEfgX9snzv1IzJt4dAr9EZR79o96FNgrMdm
fMpXXcIQ/YvwSE2/h/4Fb26cZ/xL5/S30+hrhNtgzzH0NeDtjGN8LT9WqQ69
D8paVnHJYh6Yyssy3gex3/huIs9ZRguUoifCNPMrjdQTZzS+WIZeCR9Oqcuj
V8LbAJ4qWp9PDlgsRg8FDxuRq+ihMBpxM4v2F+lFQV3orSSPHViK3gplFhMY
bw1YeD8SPZcUvXhpgZ4Lu6MuMp77yVZVBr2Y5FuAKXoxPHbRZLxYOmHFf/PR
x+wPc9uhR0Pzf9KMR9fqB1Whd5OsC9vs0bshRi+X8W6lhE8W6O/gsdpnDP0d
dm58a0TrlXma+iox5FGRRQETRJBPkxP6amjdzj7HfSAGuW33UKiPEXLcxF0H
dtB+dMGeu0kUeWhuY/17ykdSyoFatJ929fPv9EdeSZCuTKT8slTqhhjt7301
/IYV6Of/fugYtkVfFythZdLrXSnUfDoC/dbXSzTNFH334JqvZ+hzzK52jilC
n1QoarfuRr+MM3/NzEOKqt0zitD3VGzNJXXR/4wmyzLzExmNyg1L0N+Uddau
H0SOPvnMm5m3iLoWaUajb9RGctqof/Qqv/lE5zY1DSuCW5GzR3yzlLnw88t6
hqxo/2Lv/xquhTya3eW7nfIpMVcNo3255LjLXlHkPJm+GEvKfYqK4U8oV+jX
Pj/xDDls8KxqBuUyS9ECfso5YcEXFSlXxeQo3KKcJRXCYXjp/wHDdBbt
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{328.06257229887126`, 144.06369994743824`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.43892152126807016`, 
   0.4389215210579016}, {-0.4389215210579782, 
   0.43892152126799355`}, {-0.3183098861837907, -0.21195475063561653`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.0389277162520483`, -3.1831335963797143`, 0.48814926815683457`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.766116357115745*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"8ed492e7-f1dc-40be-b4da-c4f6c465fe22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], "\[Pi]"]}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], " ", 
      SuperscriptBox["x", "2"]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], " ", 
      SuperscriptBox["y", "2"]}], 
     RowBox[{"2", " ", "\[Pi]"}]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "3"}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.7661163677808847`*^9, 3.766116376661305*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"a9b1ad15-9251-4860-9661-c8d8142edf7b"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJysvHk01V8X+H+vKVQ0SIOUoojQqBTtqwEVokGlJBVJEqVIZUhFIvOYmRuZ
KULqvGWWJFHmeZ7nefj2fbr33N+nns/6rWetb3+1XmuvffbZZ+999jnn7a67
dPO4DhOJRFrDRiIxk+j/2Cn0/xVExUrmnnkGS3v89S6+n0dxXi6VkupfDXk0
7r7p8yLOPjbKvXvtO9uOdsNXGj/15IylYyArpZiybI/z92HIp/GfU7ulr5Uy
Uy4tnYpZyjmF9Tik72mt9SJT4pztpKaOkyh0nt787YRxzwyk6GZ5uWYyUbJo
nOk/1o2DlfR+ieo8Fko2jRuOXHt47NkARG76XHT4NBvWs+mtXGT0+RbgimNi
GdGZhzmz97j2wcRCWCXKPvytl8Fzvf7DEZ3n0viq33oQN00PfV5Xf4+Lomjj
FtH4zNz//TeGrGl20v359ve8UBptXnR5+99+IBJpfqDL//jtN0LnD7+d+O1n
ovwPP7v9XhfiCW1d6PJLfq8jkfLHOtLWnbAJET6hElArQx+Xhyb/4Lc8ovvf
g6Zf77d+RF93dZo9Bb/tQXS/ldPsv/DbfkSfrxNtvtG/50vQ5XNo/nn72z8E
3R623+uOLH77k6Dbf4fm/9e//Y/5Ptp6Lfy9Xlj/Iu9/rC+Wt/f6RzwQdDtZ
afGziKaHLq9Li7do2rh0/4z+Xnd4RLOT7p84Wjx/pM2L+Oe6U97Q/IBovJSW
LwY0v9HHPU7Lr1qan+njutLyMYC2LgX/XHcKoq0jPU6Oae9IvbZyBMXk1L5l
1mxHeQvPpmofcQa1RWg/30cSUXVQdDpesROpLnGNTWkIhfoPPksFXo8hG+lS
5XlWE2hz0T6foPYwqI+HE8ELvsDUpJmIxvJxdJHrtx5fnfMUBaEW0Gd3XHVu
aAQW0bh7QdSpowuGUIi5JKehdi8k0sYViZmx3JjJTLj8dGxRYOtD0SHZLtlH
veHszZ1xtbeZCMkruYnhKiNoxSnRy9FdXlDfuFVRMJiZWJrKnvVMtgb5TI+P
3fMJgNLn5/OuvSETJnfe7NQUHEC1N96M5C0Mgi7HvkDVxBm0MKF/RshxBJUN
Zx9z2RgKFoOrst+OsxBJQl+HdkS0Ih326eCNAx6AvtrnGqSTCKUxSU+uB5No
Sw/XeosML1CSR+cibKeRlvM7fbZzk0gv58W8l6+DgHdld+bXgXF0c4nDuKAs
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
HiZWweXb6dXtaJv8vrVeA+kM+aTqlDK/ZpQne6hW7CSj3nLc3dM/p1CByCkl
C3cmNmPO9uKJmtHVHERQhCxOxbRh3t43MpnC1YTufTi/++LeWswLtsbM9GtW
oYxQJK+/maFn/rlPormUdiBcNuxS8adie4zeUQ8qLCTA64h6om4fQ/+iXVcJ
lzXm8D3j47uv+9sxt1Ia+boitgEuzb5KTe1mxH/AqeCMn/yN4FyrxfnkHoNv
Frjm7N1QDyv4+w2kbBowTzvHezUrIBcEPqbl3ESMcTX106ljrN/h0VYnk449
rZg/0jKkLtvQBJTYiiOK4TX/v/H/b/7/tzj8t7z4tzz6t3z5t3j+f5VH/xb/
/5Yv/2vc/q959G9x9W959G9592/r+29x9W9x+G/x9m9x9W9x+L/mxb/l6b/l
9b/l6b/l9b/V/3+rJ7/P10xE+VG7Zrb93WjPzaXRx18HAZ17pKo0jrT2I7sn
GiYaEwE0Pg4SzImla7UmQSD6yy09v1DMU8olAjaRR+H70W/lq/upND6LRie3
BLwaHEEtmeDS/escSucuNUtzK65MItKyjUZPzOn621FCzrsmDat04LFauCHo
JN3OdlTyWiLwegiZkjJ9jRr2IATLRw/XBZNfzUHAYhc/vaP0cVmJRJ0rKwfm
DyErtUaxBmdnzMtec0+ljfQgDTlhb69PbnT7UVDXysdHnCZQyd5Q11q/MMyb
3mcU7ukcR6Zzx7kcmal43B8ZXDxqviyUGN2lnN2SXpgbZ2zT8XvMQkk4mn4c
vLzwuCfnc9361DWMpLQDv3/IcqTLw5TsyYb4k6yE5179QMtSN8xVVJQeRRaz
EOKQ47dXm34fQiK92P30a3QEG5EWoPf5RJcL5tFVy86xirAQh94VNCYG+dPX
kVKVp6KnpjyGNu8LWih40gvzNwMaH5J3DiL3zl3PA6kMedt5y9eMvJhCJtbz
N71c4op5MJMnpfjwOLLsCXelnPPE8x1+YSzcsJXx3QKdH1fiWpC5iJXQf9t5
VuW2B153QY7n6leP9aODBfLCR7vCGPGww3nvowUDKNuP/YNvMcP/ex3n2RVY
DSJSpMrqtr1UzC2Ct18L6h5ABxRunSpWpfNyNKwgbEDWmEOv1u9yOxLB4Jds
H06aAxMhU+isnh5Mj59BaE0IU4wxYqbUM5OfVil4Yf5mquti+DpmSmLI8VV1
yd54XqZ7X0WH1zMT4b2mkOzpi7lSRPzb1UuYCN5mzgGZy8E4L0xo31fwRP9/
/TMOln98d0GPk6Yv13s3sNeg+uV8N8/7eWMurHPOf1a0BL1SmdcZnuWN/bZE
b9rcu3sMJnW/HXNaGox51tLXk1q/+mF1pRr/batCsJ7vvKrqYh9a0eZw1qLE
Ig/sT/uEo4TTjyJUb6xQ+076KeYHjOPYTkxEgmIqWUr3oT3W89Cj6O4G11bk
/Y5n1etyuh4mItFb80V1wSSY25sfdlrjhjmb6B674qA5KPjHfJmI3OehR/SJ
NrCKk9/FHxOM+Zc9BiIsBzqh1tuOs1Aacwr7bz0o4x96xtHshe3HQvVJxAEx
rvQHT/3o64gGL+woCX1OJgz37QrjCw3E8i2n3G1Erv9ar0jFLHK+O5bn0L02
oFlAJvQKg595xwfg+En+uNqrdZqFsji5+I7UJbr/SST6O3ID7b2VLp+6SHZT
1CsWiqmSyb5kbl8s/5Qm3/0P+XGkfFg+8PXpRrh7tfHwCz8fzBW05gmZC/3a
D3PvDIZr0Hk7tC07lPxoYQNyGnXcy3vwI71OQnbZ0nED0TZUPlz/hSMnCdHj
weqiLP8eWybKncNZOV2u9jhOeu+d9B1NY3zfRR83yUUkZOOZKSQV1NJ4njcU
+6dt/9m6mykkwnPb80AlSxznKGw4/ugkE4l4WBUnfGozY794vTuv6bMPmfBS
kkw9IOKN+ZkCK9mt+SSCl2mFdMemlzjvZgM+PGoxYSa03ub1v5Fj5KNLRvHC
nEJmoqVjjePNeA/s54X6rNpplqzE7ug67bDPDF7vaZUWnclGzDd573s1xhmP
+4D2nVtb1H/NR8qXf/BZZF4233z1qjmU16litNPGE3MyX3CGvM7cr/6JfyGa
xuNC7ylFfu5dTETT+/bvb76HYG637U3FmTZmIlnO9TDLS3q9bUdfUxe3jx6e
Qqs55urZUBjmj8jqrfuaJxGPVF3A96ww7P+kDHufLOFJ1KtoIL06moq56uIT
AVMlY8h7XoviYW7G/qt/dqyw+iyZmDPzUa9vo/uBiTDSzn0hZNGMQh5Z26qJ
hGBOy1OU90eePthrlciTPIkqpudMz+/BeU35Ya/xY5NBK7prNrqaqGTkqUjf
ajXLw41Iar6ajd1NrJ/yVu0l56u2brAdvZUjE4r7DYrExXPS23x7ocHu2ld0
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
ujZKzxrHefDBia0XD42h3StDbpbO3Mf2sBs3GLev6keDy5WLxnL8sf/JUc8S
PQZnUdeQ3sIdU4x+SdXz/bKa4yOoX+rCUpltZlievex6dGfBEGq2P86Vu9YT
83K2+x8OxEygC+R3lbY5/tjOvA18DpEhg6iJOsccU/yaUTcO3/LdZdSKHE6q
TA6QszAP0xq+OXCl9o88LYc77WaNxp9n0M/pJUGquM8sh4Sinqgpk2GkZyKM
dPe/wPKGAlqdCzVG0PD6lZzJ3iZ4/43ZF1mz2HIU3Z02GIy5i8+JcMzCxQzB
JFIl51lcXs7QH+F0ft+0Yy/ab8ZvqZWfjPVf5kpiSbrUi5LLTElCIu/o8Q8G
29eZSbuTiMVqs1ckLjP6txsRjTp7nzERa3eJ7rU5w7j3yxf/esD1GYnYtsRK
UqqVHg/toCv1RNxFcQTJGJRIDhW/YPQ/kaQB1dRJ9KkmWjvIn3Fe3nqm2IqU
MIPS+s9ZKeoz7Fc5eLjj4ooJdARECHNWxn3sS3er/lybPmR6v3NZ/6I0en2D
Gw8qFkhdHUYnnqVNTrLS++pxON05WD+waxRlHDJ8vkWO0a+e2ZZbuEV+GOUk
ZsUein2Medquxgl+0X50e3XK8wnhIOx/7s6uz9UL29CJue9l41dcMF/e/mix
c/sgil0+nnfiB+M+xCbh4hOeiX701tKwlE0V5xcsLksndg/1oA3o7U6ebVRs
v3roMwOjBd3I03HZDIqi5/ssVCmcfPNTdQTVDXwU+jSE6zBoDnaN6AQPom0H
bOD5IsY5xdmvk3Tm/k9Y/9qMZJX2Ccen6Vi97PebreCdf4XFZyIT8+7LlRcS
zHrBLW7z1td873Cc2CbLKiWx1P8VzyWiyQm7npX+uR+BRfxJ9QO/7Gd/cEPh
OdUKc3tH2bE64QG0I3rpBJUf91GgLK73eoi9CumfUawobMLvGjC6K7tK+3gr
UmT73h/9wQfHw+m9I8WyAsQf47ZD4eACs761dShnS5UlxzUC96UTCeKcHgd/
opkG5hOnEnFfAcdRp9f1wXeo9XrMgpIw3KdB/RWnB+yCP9C2Mre1OSddGFwm
1nfa7htSNV17+eVt3H9Stq5b63idtQ95cy0/eHi9G+bs7XLX35sMop4fj/eF
NDvjcS8IW3vt0OtFz/ZA5HYF3CdAWkAWiSr4HkRcjtpsPs04r+3N2i4cKTuG
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
D+mqyFXZGCqIdY7vCIwpY+xHI+TU8J9h4Nffs3JYn2H/dq2z+57YhsIPHdWW
x9qZ2J+bhRbBwpBQeLCPg9XpzCweNzt72vBNohfovBb+VPtgAPPQU4d2a/j9
0j84tXL1ThZcz8+dsHp4fq0fOCnvHU8UYcNcxOthxNN2N3AaNyN0Z1uBXq+S
yFI8laK+MOjwcKiupwHzRTx+Haq7vIEtQPLe84ZBXAfac67bBkX5QUrzxlGj
a6OYz4pbBFqFeAN14bYcruVlmG8zv9OesSUUDu27w9nE2YT5D0XIORcRDMdE
ZNg4RcYwb/S1nNoU5wXCvr5MLrtngZ5fp0OeCPAMe4EDCj1UKjmNefdk4bPQ
8JfwliPy6dkLX2ToehS8Lfnj5oXCRfHb/ifef8b6FQJ3bNprFArLDkSNZL8e
x33LEb6vrf3vPWD3QwuFh3wzmJfYPNW19HWGIzJEcoxwP873dQoewW+VqDBe
ifQq9/ZhrijIkrh/IRVmWN6Sb1ux4n3TNd13fdSv/nD0dx5he+h1sg6K18sV
zOHzy7aCqlv+nwIgRNdvuuspM+5Xr8c83wBNzuBJKJ6fSmXBnJ6P207HKgRn
zmJ7oqOG3A5u8wITn+YtR4pYCJffeQ09SxddVl7nCldo5x06p+vZzCXGozUy
ivvDJqqYS9mvfTM8vqduc+0YrodpNsm23ENhcFvkZuj5uG7st5D38r3D2UFg
cE3pU+TdXswHHfm7tQyD4OIIx7LJIBIed6fsvmerw4NhskVHUnjzHKLz2Dq3
kSvRobC5N6rQepoN17FtbpMvXLic6X0L8WffcnO66GnKKTLun9kXe92K/1UH
7P23uLU9Z8Xyex4OXrka7AFcAafn2xqSMP8c7yP7f3/fdV6BWfXQfTLm/foP
bVbmhELeVr7jext6cJ/muN1FsTohGNyeW5tX2U3gPjk/3TGCp9MfVKseFgS8
m8X7VI2Ll9HPK1QgqX9U+3JjBvOi3WtjDI6GgVZEw92n+6exHglnakZnYwis
E+Zhk/82jOt//ZJ13hPTtpDmnDGixMvYX9ruKtvbJL0AO6ldjTloGOvJPG+r
EHHqCRI1vDROka/56/xr7FTidVq7Aft/xquravmNUDR/vahwaW4L5kw8jtSo
ZG+UkZJ8Mlx5BO8X1PtHBR7uDYaB/d+etUEftudM2IXxTqtgNNxVETxHzCG6
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
AeOJu9R5ZAJyqP8BFq6sXQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
2GZT
           "]], Polygon3DBox[CompressedData["
1:eJw1mnngVtP2xs+wz7eIylQZS5F5DGW8RJeES4lrVopokBDlqjSJSmVWUWZu
ma85icxjJUMZytBAJUOD2e/59KzfH/v7ruesfc573j2s9axnf7ftfGH7XkWW
ZQP0J+nzNv1Zqc/NSuGaLGtVZdk04Sfkny37ZLWN8yz7TLi+/E+rfym8vfrX
CI/Q58vqP03+ueq7VeH711fbUva+8jdR/wZqW8h+UdfqyfeK2gzZnfW82vI9
JXuO7u8qvInwPuq7kZ5fT9daqO9qXbtCdlJ7XnimcG/ZV6tfXeE3dP9Hwt8L
byrcQniM8E163g/C3wmvFp4h/wXCP+n+/sKT5K9kN9f1Wvq+c/X5kvwbqnWT
713ho2XX0/3D1X+x+tZXm6Vre8s3XX02ym3X0/1deXf5dlXrIvtN+Rvq81nd
v6n8M5LHs636byN8vj73Vt8PdK2vnt9J+F3hc4XPFN5UbTvhZ9Vel+99tdGy
6+h5Q+VbpucdL9xX/TsLP6LPE4X/rfaw7N/Uv7XsA9X/FvlvFB4mfJDwrcLX
MJfCz6mNkP2L/OfIXiX7Zvlv0fPXCJ+s/n8I3yf/FsLPy3+p8EP6bJL5HabK
nib/4bJXyL5J/nZqa4UP1vWt9XtX8/uFr5e/m3xt1QrZteRfK7u7PtvJf4mu
dRK+V3i9zHP+o+7dSe9xH9+ltqPsB+WfIfs99b9Y/ScLHyn8qPAA4UXCi/g9
6rtM+GHWoPDOwqOFBwp3Fr5R/c8XXiL8pfAO8o8Snl96PF+V/1rhi4THCg8W
7iJ8d/Lvq63rvwg/oM+Thd+Svw/zwboSnis8krksvLZYY81kH6VrK2QX6vez
7ON17SJ+fzxzbcxfS12/Uf5cnydkXpOZ7INY77n3GHuy1LVmcj2DW/YEXbuQ
9SN/L90/Tu/bX7iDfMuFe+TeH6eqdZfdRv7G+vxZ+B3ZV6h9KHuR+n+l/p/r
eR2FtxYeITwz+jdhH2p+2+hzA+E/1Ges+hwp+z+yR6kdJfsY9V8q+0G1MbI/
Uv/PZDdU36v1vM0q/z5+5xDZQ9TnE+E1wiuEJwjPZPyEVwlfK/wd+1l4pfD4
5PVETLtV9j1qq9kv+p7fWYvCOwj3V58LhH9n/wp3UhuuPt+o1Zd9t/w3yH+F
cDfeVfg84X7C+wlfJ3yu8F36vFP4AbU72RPyN5R9reyuleed+a8d+3Fh7O/G
et9r5O8ivLlwT/nOFp4o/LrwZ8IfC2+h9pbwp7nXYw/5jxW+LPb7Er1/S+Hz
hc8S3l34FuGhev7T7L/Ca4k1dQLrTW0X2Vcz37K3U5+fmH/Z98heqvv3Eu4V
78McdiSm5J7bUxgT+Q+RvWWN9+PkzGNwjexaur+P7NNl36u+BwnfITxM+Hnh
K0uP9w2x/zeI+PIv+e8Sbi48XLi38MPC6wmPED6G7xFeJdwo3o/x31H4RuEr
5X9CeC/hmwI/Lvx3zN9hwhOJZ8J55jFmrDfUtY/JD7p4uezpunae8HLhfsJN
1foKt9X9k2TvrecfJNxA+H+sT33uznogJsj+Qf6nZQ+J+HBI4fHqrdZR9m66
drvsQbKflJ1VHu8usT831P2XxlzdXTnvkf9Yc+/I3k7+kbLPlP8h+Y8tva/Y
X5fw/BjvfrIfk7+h8DWMl/BU4drClxE/4vdsLnyY8GnEVd4neX2wTu7g+YXX
Uzt9xyn6rmaV19LxMV9Dda2n8Dfy3y78p3D3GO8Jwo3VesX+uS38fP8Rav+T
fUjy2mEfTY/5Ij/3UPtDdnv5F7C+9LyX5L+YvMXz6CP7DfU5UPbjuv9R+XdQ
GyR8k/D9leNZI9nj4CXCVzFe8t+ma92Fd5J/ovDl8j8nvL/wBPaH8DPCrYTH
CV8h/CzP1v3NhW+O+LFG/oHxfeSPcbnnqkXEgE66b0DmPq1kbxH9ufZzaf7y
amYOBZdiPFkrrJlhsueo/7HETbU6sk8gB8o3Sc+aoe/7QH3+lTknkZvgJ/CR
9dWWqNWtzEV+Dr7zcuS7/Qvn9zn6/FT4C7UPCucv+NjBxEDZbyRzN3LM27JP
rWyTdxpq/z+UvP/JxevDD3V9rvBS9blMfbdmz8dvJ3/Nz52v66jNk72N7h/C
WpD9YOXxOVO4c+H5IyYTm/csHI8PUzs94ud82V3l7yq8L/eQC5PH9uxYzy/p
WhfhA4L/1GdNCH9MXoL/yL+/8P3CVwr/GHyWOflJ9rN63gu8n+5fT7/vudL7
ZT/hcep/jvx7CO/AuNV4nbHezlJrr2uXyz9H/vd0/XPGQni28CfCn7Eehd8Q
niv8pfDhzKnw18IL4RPy/yl8uJ71t3BrtTp69pfyfyH77Nzf95f6dCIXlX7e
p8yr/FOF3xF+X75LKq9H5qN/jBF8cDfZT8nfszLvgn81zcwfLpf/DNnfRny8
XniwcLfC83VP6bXStDA/GivcKvIR/GsTvf+ewqdEfnlH/huEa0d+Z12yPs9n
T+Te8+z9fxSOF+QT9sMREY9mRnxZE/XAE6VjycqYzz9z7++t1X6VvV7lZ8PJ
a7M/2WOyz9Xz/is8W/ha4brCw8jnwW9eifqikdpTmbkt/L9h5f22QfDv7Svz
m46R7x4q/V1dg89/IXyS8EfB/8jj5PPTMud41ixrt1vkb3g8XLqJWv3C88L8
XBXv/E7kf2LeHLhq7rlizhbm5vXDZP+TPS18R2l+AF+/UM9fSfyRvYAYIXyf
PttmntOuxKfCXBvOvXlhzgR3gg9WyfXBfNmbqa0mViX/lhXBv1brc57wYrXX
2LPJtd7S4G/sr2WZueaPwncm899f5F9Tuf8S5k74J+HF6v+j8NrC9duZrEfi
htpesn8rzO+XxT3P6P5a8j1deD9ekMxtZwZfhB9+L5wH34ZXwi/PUlvC71X7
lnzEmpJ9RPDVibK/J35Rb+n54wvvR8ZklfzrB7/cOHmsGDPqJXLWGHJ15ly2
D5yGedG1V2WfodYh9x5/XP76av1k/1v+3+AKwnXlb6bnVfo9xya/3x9wDflP
I2aQi9R+ZX/Ln2SXpeNVF+Ea4RT1bU/hQ3R/VrreJ2eSO48jRunaQvnb5uYS
W9X4uTy/ae4a7nm1r2NuP6xc7xPLiemPxfqh9kcDoEY/qHK9T91Pfc48MB/U
HC8T8+CUsu9Q3w8q19zUR9ML6wkHCD9BfCbXgyv/nicL6wWnyN9e/vuE32R9
JNfKjwrPEp6r5z8ifK/w2xGPviEfFq5/XkiOpy1K6xuvCm8m/Exh/YE9SSxr
FfkFTgz3hIPC3alRL43xo3aFIx2dm6PBnajhzxM+NHNtv0DPbwMO/vyi8HT5
WpbWB56M+W4c9dRrybUdOsomNV4jrJWG1FnCAyK/7FxafzgueX01Kp2PpyXr
FXCBOjXmhHBDOOiuyZwZrgxn3rwyZwbDqRtU1lD2Ft4ks7YCpzu0MIeDy5ED
9y28JsiNcFa4KxyxbjJnh7ufK7xNZc4Jl26dmYvCyeGKxPQm5AdyFtxaeOPK
GgJaAjmb3H1dZS4AJ1hemnO2KZwj4E5jhSfn3kMrS2scxEQ4wrfJHAAtBA70
UuRU9jL1G7mWPcPeYY2R+9G4tiutEaF9MQfr5oI4nrxH2Cvw7+aVNZ12petf
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
wf8Kke84y0AjRiuGI82MfIc2z/lLD+H/A3lXNfc=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtl3d0FkUUxffb3S8RQm9BSgARQUAg9HJAqkCoB6VKkKMCSgvSq9J7ICCE
ICBdQJFeVYoKSgIEpCkqiCAovffm7563f9x8c+/cmd2defPepMi7Ca16u47j
7Adh8Al/toUcpyHt/GCv5zjFfcf5lPYR2mlgPxiJbwS+QuhbwE9oJfAl0x7I
hJEgFS0P2kS0PvCPQCnG5QYv0M4EWtB3FF9ZfMPgw8EctDLwBvhuwkvQvxNt
Glo67ea0M6BnBHnCpqu/K+9zHG0AfAa4TbsyqEPfi/AvGFuedj98qSCCsdXB
FjxFwA76tvu2ENvpPwAqQ4cw7kvP1ucQ2mEQCbmBdzTtBMZWp68kPAFgdc6h
/Q6GwlcjRKgf/i3ohhbj2xiNzQwO41mK1gutPnO2hD/kGS+hzUTriacXKIl2
yrN31Tvvx7sC3gjfHHgKWEJfY3iUb2upNa2L5wi8Bligb0KbDMoyX2W0cbTH
gzfpq6Rngn9od0C7CMb5tu/a/336HrTRjE3X9/IOMaAj+BNeF/2M9hpfbrS9
aGPBLe2b1hEs8u05et40vNNBLON+QiuL9gqel8EW+Bvod+h/BP6lbzTaiyxo
Oc+eq+e3xrMHXor+K/BRoA98K94w7aK0y3jmGw6uo10D90G2sM2puf/lGT+D
nvDLYBD9DjyOn4OMb4K2gvZitBtgKrwF43PRdwqeA/9utFFoG2nXwNsM5IT3
03qhHQTzwEN8WdBu0a7H2AR885hnGlosvIDOIny7NLCN/qLApy+dvkloyxV/
oCr65MCrMd+Ac2jf8psE1uFZD6oFvplgE3wzGIs2A15N78zc68FutFVoF8Eh
2qXRXgP58fQIzuCGkH3jM77jPFox+l8BN+m7AP9MsUp/JXgXkBEej3cr7fEa
F7K8sQwto2exoRhZorgFd2k/Y76noCFj5+ps4nkOv0YzBf5b2M7jAXhHx97v
a/S8+KLBU7TV8M2gsL6bsVnxb4In4a2oM4pnBHiElhntIv0zQQ60S4w5ifYN
vjbwM47ll8uKJ50f8Gvg2+VbvCvuu/Hbmd8xYCD9C+GLQvaMRLSmQQ4bgNZd
cQ56o/0DPw8y8cxdaA3QrsKngP6evbfeP9az+G8TtnXV+p5GHwmu63vpG4d2
Fn4OROHpiVZE3wB/HrKYTMVbxbMcG4m2TfGsnIXvC8dyyh580z2LHcWQ6sNz
PBvRfqX9G+hB3yb4D+AO/CZ4H+17+AawHgwA9dDW8buQ8T6/HvDxfq730N7x
vNVgs/K0Z9gcxMsEcAvfj56dFZ2ZuqAw45LRL+l7dYZ0NtFeBu1di6G7QVw1
QgvpPeVBm4VWESyn3Zz5m2sv8MzxrCam8DsbJIMH+D7DkwLm6JuVn0Ecc72l
vcSfGU8cWiR+F1xVrkArjzYDTyu0Tow9GuS1C/SfdOzsXFYuoH8vfLfqJ6gZ
tnPZXjVWZw7tF/hWfL/A0+GHQG20vsx5WP3gBH0fwWN9i7UveebH6KXx7UNr
B28LGjNPDnLpWX5r4etF3zugs/ZHORVPmrz09cUzDP008/ylmqXa4lttTKd9
AO0geJ1xfdBT0dJUo0AttKphe/+CoLX2g3E98O2B7wXZVDfRflf8K9e5liuV
Mwejd0ZLpD0V3GZcMebriEcXmEnyox3T98CzKxehjVQeot2SMS1Cts+L+V3J
2G6qYaqVjsXVQOUTtF3aH7RB8ALgfbQKIJfuNszXBW0bfDuIxttV+Q908uxc
Zg329z3lOsUyiNB5gA8GJ5UztGeqw/Azyh20j4csz9Tg3eqAE4FP+Vd5uItn
eV75vg+4yNhaujOhNYS/AWrpzGgd0P+DH6Ovv2ot861AWwnWobXx7cw8gT8G
p9CSglr2hHYm5QfmChEbN4KzfDOomaqdKcH50P7m1Xt6dmdQLN+FV9L58uws
3FFNBhHw+/C8ICv9a12rBaoJ83zL6crtO8CH8Hz4itP+A+yjbxTaJHBFHt01
0E6obqCNoZ0FvS8oFuSwBbQ/Bxl0rn27n+nO9YFre19Q9y3Gr0EbjGcIuIL2
n/SQ3RN1X/zQs/XSui1n3DKdd3hb3Slpr8K3gb528LW8c3e0RHgZx+5ruiO9
jacDiFNdYk1LKRbwDXLtfqd73gXFjOqi1h9fQXzNfMtn87Wf6E01F1ivM422
SLENn6jvQ4tWHgET4B3AKtd88reGnwOteUYSWhOecdy3c63zPU53AeVutFx6
jmvnTefujvID2lS0iWAuWk1xz75da7ASPPXtrvJVyHKOck9iUN/6027C2CT0
oTqnrM0mtIeqiyA7/B7jZ+nepNxO3318xdHfhb8X1Nr8eGIiLHcph7UJ2Xc8
9uwuoztNTbwxijXfckMn+DvKCWiF0SZrX13bq1fRokGUa5r6CuFZ6FmMKda+
AyE8ddG/QpuitQHlwrYOWo9k+GzlCrQcig/dGVzbz+zwMugT4CNdu4PrLt44
bOeiEMjCM+YH39E1qN1bwaeqQej3GffAtZqiupVV6xXUX90TdF9Yh54Tno92
ftAKz2LP8pny2k7goj1Cq+7a2a6vPfAsjymfFVeeAWnwJmGLRX3HPcWlb7Va
NTs3eh7QUmdc+442A0SrLqDvVEzy+zdjo9B3wLOBcvS/6drd67r2kPEV+K3o
2bvrG5apDoYsJhWbS3V3wHfWtTqTHuTnaBAPb+ra/5n6f3ODb/mrAWM6gviw
1ULVxPP4LoD6ykFoQ4K7WSu0LPAp+EehvebY3XpE2OJNcae7XnmtP54CERZP
U9Dj8J3ReQvb+Y4H7dH2oyXQjtF6hOz/5WtovdHWog2FDwNX0YZ5dn/QPaK2
Ykbnn/mq0G7s2h1Sd8kKeMfCmwXPLqecg34iZPVDdWQNvChjW+Bp59o36lv/
B5QjBo0=
           "]], Polygon3DBox[CompressedData["
1:eJwt0D0oxWEUx/Hnvsnsoix0R3UNys5wrYruYpC3ciUvMRquKJPNgsJgYLpZ
7kTKpWSxkM2uUAYLRfk8/e/w7Tnnd37n/M//FGZWxpbTIYQ2tKAvF8ImIY92
rKOYDSGNFAJKtGEUeKfkk5hGndaNl0wI3/KDVAh/qGur0R/4F3FEu6Udew/x
wzuvp4IFcSOdeLbkVUzwftF39farfdBm4548FbWqdwOfPCP0vHoRDfkFLvEa
v8FzgwaukeGd41sVr+Etm+wQd9nBGW0P+zjFb3NWnDmg98QuvXxl8TiGxKMo
8S7ZazvOpt/Jy/Jz7z1ytGe1zuaN46070EXvwaD4ne8qk9w83r4mfmruHv/h
Ea28/xAONtw=
           "]]},
         Annotation[#, "Charting`Private`Tag$300362#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkssrxUEUx+d3Z+5voS5RxHWvut7K+3HziOvVZeER8khKsWdh4/9gYykk
FMnaRsoSJZGykD/CI4/P6czi2/c7M2e+58yZk1pZn16LGGOGgAU7LL7gbfjI
qT6Df6PG5BFwiD4HCbQNjckExiRBL2gGKdACLoiJwwvcyzr1u0SPeE/xSeNR
QkwXfMC6A/0Ml1n1SVrNuUH8BPcLOdtEj+Fzh/5Ar1o9k5gM+on9Gu7mwFn2
Y+gReJmztGi4MlCfKjjOG2bZW8JzDm5nLwu/c78HfQO/gUZ0Bl7krB49AJdb
fXsKbvJvEf82eA//VrgB7KPr4HFyFHAeI+cUOhFob6t9PVLXFWsDX8On4JPl
MbwVUR/J2+/UX+qZlNzED8M9Vu/mwzNR7V9RqO+XPkjufrhU6gcxq/65Vmv7
Rp84vRv3fyj1NPiasz6v5Je+jbL/4PQvKoh/dToH0pO+QM+lJ2nfH/EXL5kr
qdGEOm8BMSWsu3398o7CUNcyP33ecxDcO/3n3ajOoczJrdN+ikdxqP8n/zhv
Nb4W/eh0VmRmLDoS6nyI7gy0tq5A5/DP9+FFeuHn/Ceq/ZLZ+wfmVkyv
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtkk0rxFEUxu9/7p1ZTA1jQd5GjfISiSgy1BhpbFh4i2yUD8BCyvfgC8hb
LHwDO2WlSSkkG/kQhrz8ns5dnP99nnOee+65z/0Xt3eXd1LOuVEiEOd86qw5
79xP2rkK6yl8KHFuE+wyzuVZv4CXaG/QHNLgBF6Fr1MbQPspDm4OhpV7As+R
GwaXiE5wllwfeAF8TK9J1nZ4BzEOvguGZ4gP8D5nHdCvF74RZ1RuL87eynxt
5BPqtWA51RrJ/aItB5t1jPo7eCFt/dRDvebRtVGbILbifZu0wq/QzwfzQ3fW
3RVHKfNDNWmkzRHXwUK4iiZFLx/9aPDG5UlPYjPIq+aMeaAZbuN9uuCd8KW0
9df75ONsLUR39GyFus+Yr/L3FW3Rm3+qS/dIbhq8pj1oc8QQ+Jt2i+x/ob5N
/Q9+FswznVWP/t6rJ/UR4i3YGwwm5rE81HkFeJlY9TZfwdse7dWe2cQ04nrz
srf92cj1L/RTfwjmUUM8X17W4vnyRN5k4/tqhudgnsn/kjcvL4K9TT6+/0ba
vJiMdc1QiN5oVv1vU4l5JK90h0r8H3W3f/9rUSY=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtjzFLQlEUx8/zXt0skhxMDR6uSSj0zFwU4tlQQQrR4GR7fRhdnEtEHEL8
BhE41uDs55Ac6nc4b/g93v93zj333HD42ntJicgxpOGWT9aJHMCOnPciMzgk
39P4juuSt/CIi5O+H/IC/rROXw5/xyyHi1PmtPaMb+OCQGSCG0NMXkEJd0q9
DH3dI2NzsniBT3o65DP+6/CGHulsXERuwh53Tv6g91fsjgL5gXkDaNBTgBvc
ScZ21jOXuAuYkjfe6hEUcWtve+v+Q3IlsPd+eZul91Wd7fedvO2aXIKlt130
bS3yEczJT+xy5cxpTd/v2KdPrpHDwM7+A50pKWE=
          "]], 
         Polygon3DBox[{{1238, 297, 164, 590, 831, 1233}, {1087, 302, 847, 836,
           257, 1088}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0bsvBFEUgPHDmvVmsR5rsZb1TpQqib+BUikS3So1Ei212ESh08gmEkqF
boNCoVTqJBKdR2j8JlGc+b7zuPfO3Clv7W5UmyJiR2xnIkZwH4fxCq/FEP/E
QdzDPL7jAC43R7zxfv7REnFssz7+y895jjfM9OJqEnHPe/gtdmMFu/DZbCcW
5R1YwHa8U0/SddgmbxVLeq/OzPIn9To3Emsej3qOjgMP5aiiUpxK0u+s4YlY
5Id6C7iO83hhcJPP8S+sWTDLV+xb15vhR2oVzKslatM8g1P4olfGnHwSL7GU
3qf6RHon6d1Y94Pj8jHxzRvep8hv+Bkf5VlzD/LC/3/5A8RzKA8=
       "]], 
      Line3DBox[{354, 291, 1246, 854, 308, 855, 298, 1239, 293, 292, 294, 856,
        299, 1240, 295, 844, 296, 1238, 297, 301, 858, 300, 306, 307, 1250, 
       302, 847, 303, 314, 1243, 851, 305, 304, 1245, 322, 318, 317, 319, 852,
        321, 320, 1252, 315, 316, 853, 1372, 311, 863, 310, 313, 312, 309, 
       1241, 354}], 
      Line3DBox[{327, 326, 1247, 325, 849, 324, 848, 1371, 323, 290, 1254, 
       355, 353, 352, 351, 850, 350, 1253, 862, 349, 348, 1244, 347, 346, 861,
        345, 344, 343, 342, 1251, 341, 340, 860, 1373, 339, 338, 859, 337, 
       1242, 336, 335, 334, 846, 333, 332, 1249, 331, 857, 330, 1248, 329, 
       845, 328, 327}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{868, 1376, 1256, 873, 1398, 941, 1288, 1289, 1434, 1290, 
       1263, 1379, 880, 964, 1030, 949, 1291, 1451, 1057, 1452, 1047, 1046, 
       1323, 1453, 1060, 1072, 1075, 1463, 1070, 1071, 1465, 1080, 1079, 1081,
        1464, 1326, 1083, 1327, 1475, 1084, 1467, 1078, 1077, 1329, 1473, 
       1106, 1098, 877, 1260, 1510, 1115, 1104, 1472, 1105}], 
      Line3DBox[{887, 886, 1052, 1508, 895, 1385, 1270, 1015, 1428, 1309, 899,
        1274, 1424, 1007, 1040, 1530, 1351, 1175, 1532, 1042, 1041, 1228, 
       1093, 1468, 1330, 1235, 1253}], 
      Line3DBox[{892, 1268, 1382, 889, 1280, 1390, 923, 1294, 1402, 960, 958, 
       1401, 957, 1025, 1024, 1438, 1031, 1445, 1317, 1059, 1048, 1318, 1564, 
       1248}], Line3DBox[{917, 920, 983, 1415, 982, 1161, 1514, 1168, 1174, 
       1520, 1101, 1100, 1167, 1097, 1096, 1476, 1103, 1102, 1546, 1197, 1196,
        1192, 1535, 1242}], 
      Line3DBox[{921, 922, 999, 1420, 1306, 1153, 1505, 1139, 1140, 1506, 
       1147, 1148, 1152, 1212, 1547, 1364, 1211, 1358, 1537, 1359, 1216, 1566,
        1237, 1251}], 
      Line3DBox[{925, 1391, 926, 928, 1406, 912, 906, 905, 1405, 907, 1276, 
       1320, 1450, 913, 914, 1449, 1054, 976, 1413, 977, 1055, 1303, 1412, 
       975, 1063, 971, 1410, 969, 1064, 1459, 1305, 981, 1460, 1074, 1113, 
       1481, 1111, 1112, 1483, 980, 896, 1386, 1271}], 
      Line3DBox[{939, 1396, 940, 1127, 991, 1417, 992, 1339, 1497, 1141, 1166,
        1349, 1513, 1165, 1122, 1490, 1338, 1209, 1545, 1121, 1119, 1133, 
       1540, 1177, 1176, 1178, 1523, 1352, 1172, 1173, 1525, 998, 997, 1515, 
       1350, 1154, 1132, 1493, 955, 953, 1422, 1004, 894, 893, 1384, 1269}], 
      Line3DBox[{946, 944, 956, 1429, 1296, 1404, 947, 948, 1021, 1435, 1022, 
       891, 1383, 890, 950, 1292, 1528, 1187, 1529, 1371}], 
      Line3DBox[{965, 1407, 1279, 911, 897, 1387, 1272, 1485, 1335, 883, 1266,
        1448, 1053, 1066, 1264, 1380, 881, 979, 1301, 1411, 972, 978, 970, 
       968, 1456, 974, 1302, 1458, 1073, 1324, 1487, 1118, 1488, 1277, 908, 
       1116, 1482, 1334}], 
      Line3DBox[{1000, 1421, 942, 943, 1419, 990, 987, 986, 1418, 932, 931, 
       936, 1394, 935, 989, 1416, 988, 1120, 994, 993, 1491, 1129, 1179, 1524,
        1130, 871, 1258, 1521, 1009, 1010, 1341, 1522, 1171, 1517, 1155, 1131,
        995, 996, 1427, 902, 1275}], 
      Line3DBox[{1003, 1002, 1293, 1400, 888, 1267, 1426, 1308, 952, 954, 
       1425, 1008, 1170, 1157, 1507, 1156, 1184, 1526, 1185, 1354, 1527, 1353,
        1180, 1181, 1541, 1360, 1182, 1183, 1543, 1124, 1123, 1544, 1208, 
       1225, 1556, 1215, 864, 1374, 865, 1498, 1345, 1001, 1307, 1496, 1287, 
       938, 1343}], 
      Line3DBox[{1006, 1423, 1005, 1051, 1319, 1447, 1050, 1011, 1012, 1044, 
       1446, 1049, 1169, 1516, 1043, 1444, 1316, 1186, 1188, 1531, 1029, 1028,
        1219, 1550, 1205, 1204, 1366, 1561, 1365, 1207, 1542, 1206, 1222, 
       1555, 1226, 1126, 1125, 1553, 1221, 1346, 1502, 1145, 1144, 1501, 1149,
        1500, 1142, 1143, 1347, 1504, 1151}], 
      Line3DBox[{1014, 1013, 1016, 1430, 962, 961, 1431, 1018, 1017, 1032, 
       1439, 1314, 1037, 1443, 1038, 1039, 1315, 1442, 1036, 1355, 1565, 
       1254}], Line3DBox[{1114, 1109, 1479, 1261, 878, 1478, 1108, 1110, 1333,
        1480, 1082, 1069, 1457, 1068, 1325, 1461, 984, 985, 1065, 1466, 1067, 
       1058, 1322, 1455, 1321, 1056, 1062, 1454, 1061, 1033, 1440, 1310, 1019,
        915, 1389, 916, 1432, 1257, 869, 866, 1375, 1255, 1283, 1397, 934, 
       1286}], Line3DBox[{1134, 1135, 1146, 1499, 929, 1282, 1399, 951, 1344, 
       1503, 1150, 1551, 1214, 1213, 1552, 1367, 1200, 1362, 1554, 1224, 1227,
        1370, 1559, 1230, 1244}], 
      Line3DBox[{1160, 1159, 1509, 1158, 927, 1281, 1511, 1163, 1512, 1164, 
       1099, 1471, 1328, 1090, 1474, 1331, 1085, 1086, 1470, 1089, 1076, 1462,
        1234, 1035, 1249}], 
      Line3DBox[{1247, 1563, 1369, 901, 900, 1437, 1313, 1026, 1311, 1433, 
       1020, 1023, 1436, 1312, 963, 1403, 1295, 959, 884, 1381, 885, 945}], 
      Line3DBox[{1285, 1393, 933, 1265, 882, 1284, 1392, 930, 1336, 1489, 
       1337, 937, 1395, 1273, 1388, 898, 872, 870, 1128, 1492, 904, 903, 1494,
        1340}], 
      Line3DBox[{1297, 1298, 1484, 879, 1262, 1408, 966, 1117, 1304, 1414, 
       973, 1259, 1378, 876, 1299, 1409, 1278, 875, 1377, 874, 909, 910, 1486,
        967, 1300}], 
      Line3DBox[{1373, 1202, 1548, 1217, 1210, 1332, 1477, 1107, 1091, 1092, 
       1518, 1348, 1137, 1138, 1162, 1519, 1136, 1342, 1495, 924, 919, 918}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{380, 381, 1408, 510, 390, 391, 1448, 615, 616, 1449, 436, 
       437, 573, 1440, 588, 605, 1452, 622, 604, 1445, 597, 574, 830, 1563, 
       832, 849}], 
      Line3DBox[{393, 392, 688, 1488, 424, 425, 678, 1481, 680, 679, 1480, 
       646, 645, 1467, 651, 653, 1471, 664, 663, 1476, 669, 670, 1477, 674, 
       809, 1547, 487, 486, 818, 1551, 810, 737, 1502, 736, 811, 359, 1374, 
       358, 725, 1497, 698, 469, 470, 1419, 468, 430, 431, 456}], 
      Line3DBox[{403, 1384, 402, 489, 1400, 490, 611, 610, 1447, 405, 1385, 
       404, 571, 1431, 570, 496, 495, 1404, 471, 472, 502, 1403, 501, 460, 
       441, 1390, 356, 357, 1398, 467, 449, 448, 1397, 443, 1391, 442}], 
      Line3DBox[{406, 1386, 378, 379, 1479, 376, 377, 1510, 722, 723, 750, 
       1511, 444, 445, 748, 1514, 754, 1519, 749, 720, 721, 740, 1505, 724, 
       488, 1399, 446, 447, 728, 1500, 556, 557, 1496, 464, 463, 1396, 465}], 
      Line3DBox[{420, 419, 1427, 560, 1422, 561, 1426, 396, 397, 603, 1446, 
       608, 609, 568, 1428, 567, 585, 1439, 586, 596, 576, 1435, 577, 1436, 
       578, 579, 498, 1402, 499, 382, 383, 479, 1434, 477, 466, 450, 360, 
       1375, 361, 1406, 432, 433, 440, 1407, 504}], 
      Line3DBox[{457, 371, 365, 1376, 366, 1382, 398, 401, 394, 1381, 395, 
       493, 1429, 503, 494, 497, 500, 1430, 569, 1508, 612, 563, 1423, 562, 
       559, 558}], 
      Line3DBox[{473, 474, 462, 1395, 412, 414, 1491, 701, 767, 768, 1540, 
       789, 790, 1541, 803, 814, 1561, 816, 817, 862}], 
      Line3DBox[{481, 480, 511, 1409, 435, 434, 1456, 518, 1410, 519, 630, 
       642, 643, 1466, 632, 631, 1465, 635, 636, 834, 1462, 846}], 
      Line3DBox[{506, 505, 509, 409, 1387, 407, 423, 1405, 421, 367, 368, 
       1432, 572, 478, 384, 1379, 385, 492, 1401, 491, 575, 1433, 399, 1383, 
       400, 587, 593, 1443, 594, 415, 416, 1424, 564, 595, 1516, 755, 566, 
       1425, 565, 757, 710, 1493, 711, 743, 758, 1517, 744, 708, 709}], 
      Line3DBox[{515, 514, 372, 1377, 373, 521, 522, 1458, 637, 1459, 533, 
       531, 641, 1461, 640, 647, 1464, 648, 652, 1470, 418, 417, 666, 1535, 
       835, 859}], 
      Line3DBox[{517, 516, 1486, 427, 426, 638, 1487, 639, 1460, 534, 532, 
       634, 1457, 633, 650, 1475, 662, 661, 1474, 649, 553, 552, 1546, 792, 
       791, 1548, 812, 787, 1537, 788, 733, 732, 1552, 819, 820, 1553, 696, 
       697, 1556, 823, 808, 753, 1513, 546, 1418, 453, 389, 388, 454, 1393, 
       455}], Line3DBox[{528, 374, 1378, 375, 512, 513, 1411, 520, 524, 1412, 
       523, 617, 618, 1455, 621, 620, 627, 1463, 644, 589, 857}], 
      Line3DBox[{537, 538, 451, 1392, 452, 458, 1394, 459, 545, 694, 1490, 
       693, 695, 1544, 807, 824, 1555, 821, 794, 795, 1554, 841, 1566, 843, 
       656, 837, 860}], 
      Line3DBox[{539, 540, 689, 691, 1489, 690, 541, 1416, 542, 692, 1545, 
       771, 772, 1543, 806, 804, 1542, 805, 828, 1559, 842, 861}], 
      Line3DBox[{548, 547, 461, 411, 1388, 413, 705, 1524, 707, 706, 769, 
       1523, 770, 775, 1527, 774, 799, 1550, 800, 658, 1468, 657, 850}], 
      Line3DBox[{683, 1482, 529, 530, 1483, 677, 676, 1478, 675, 654, 655, 
       1473, 673, 752, 1512, 751, 763, 764, 1520, 667, 668, 1518, 742, 741, 
       1506, 734, 735, 1503, 719, 718, 1501, 729, 727, 726, 1498, 543, 1417, 
       544, 699, 554, 1421, 555}], 
      Line3DBox[{686, 429, 428, 1414, 527, 687, 387, 1380, 386, 623, 525, 
       1413, 526, 626, 1454, 624, 625, 1453, 606, 607, 1564, 628, 845}], 
      Line3DBox[{702, 1492, 700, 369, 370, 1521, 363, 364, 746, 1525, 759, 
       760, 1526, 773, 777, 778, 1531, 779, 1532, 599, 598, 780, 1565, 829, 
       362, 1529, 848}], 
      Line3DBox[{712, 1494, 703, 704, 713, 1522, 761, 762, 756, 1515, 549, 
       550, 1507, 745, 602, 1444, 601, 766, 765, 1530, 600, 591, 1442, 592, 
       776, 1528, 485, 484, 1437, 581, 580, 1438, 584, 619, 1451, 483, 482, 
       439, 1389, 438, 614, 1450, 613, 422, 408, 410, 1485, 685, 684, 1484, 
       508, 507}], 
      Line3DBox[{717, 716, 738, 1504, 739, 730, 1499, 731, 551, 1420, 475, 
       476, 1495, 715, 714, 536, 1415, 535, 747, 1509, 671, 1472, 672, 682, 
       681}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
rqB5KN2Z6G92qQsazHZzthiUorVDupTB7fMQaFPdNkRZCEGp1nFm9wORxE/v
ud4JEvCzbTaxRdfBO99VPr83SWjHrI7OfCIJssnT+XYrNwFP0Fw6U1EaamYU
219kSwK2tmozvwMVMBq7mUsfkI2m3Q8VmtRj/ni5W0yafzPwd40OK0+1Io/y
WpWo5nmQijy/4XOzGTwrPbMfdjUj9biVX3kT89D5auoWGXkmCBd8aI4KSEFT
mtlddTOYn3uOp3DNMgLpit9Mq6H1ByrFolj6f9Ovkuy9GnObZhlEqPctVY42
Ay/RIemoDMZXk575nqxloH/2HA9TahOktHKc97xHgseUL3w2CuuA7UR6ltKR
LhimX+HqIMzDxU9kJRpGmN3wnfFBLZkhSvSdtv+I7YulmK38NSIRXb2SNvvg
exB4KhrHjmH6RY83aW24PQEtn/PUvHUgAD4Nt3IW4nXZWYd7zv5IQHZ5R3dW
aLgBXNZY4cH42TyF0ciP2Q1lqJ8RZGAmIpLJmx+HMHiwKr+IOqUR0LoP7PZJ
t4DbpVudQ9i8nNIvCn25LaFw/kR8kWYs3BOeiqjFzvt9C6J93DtH4MyjSXMQ
qAU9hQ7R2CLsPEoaeKeGlkHyZ3Fy7elKMOwCfgVsH8mvsdMJ5YQg9uXv+07Z
1kDWgr25Tjnm5x4sMPu43AxpKf7Jew+2QjeTSF89xifCrpaOXNIZ0CoW7D76
sB04F9h2eDCRwOuwd9/bgEQg0CYEHskvg/UfouSi3ZgfJyV/d2EyBkRsLNOD
ZxBs7rj0c0cVpscjGvum000Re8eF3RkWwbCs8KSGgJ13jk1OE7GTZqhXps7W
x8saDOP61jqx733Pd4yyX5eIjJuCdNO5KkFF+vV2RCsJ9gVmudoWv0SLja06
nxwTkCbNezVz3O+Q5efQPByGhvr3mEzeq4HGc1QDFyswPdg3+FXILxKdG/iR
GPOcCLLTjuxjmD3ZIPiIOTNXEu0apQptxcTkqaVfxnjc9ptWfdtppnhkpSj1
0mWzA77rcCnoUJLgXQDLpyi+dOQ//uCtmF4HBOrOVkXtw+SS3SRNWk40KBp3
ydcUdYKpjqVrw+Y8eJSrqSh/8APyniIxB3MiGsmt+eCA2y1DdJxG13wgaf87
HjPvYLTi2NBJidFB8eChKUfKIFgrpt4/ndsJtS2SGs3b80AZ8GbiHaER5bP3
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{302.38216009129553`, 119.81799866115414`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-3., 3.}, {-2.9916113915435405`, 
   2.9916113915435405`}, {-0.16837460816248204`, 0.04307806132305855}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.5837946183367094, -3.3269161815745547`, 0.20202119784437336`},
  
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.7661163771063833`*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"ee638f64-4b28-440c-86e0-7bfd6acd16de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], "\[Pi]"]}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], " ", 
      SuperscriptBox["x", "2"]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["x", "2"]}], "-", 
          SuperscriptBox["y", "2"]}], ")"}]}]], " ", 
      SuperscriptBox["y", "2"]}], 
     RowBox[{"2", " ", "\[Pi]"}]]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.7661163879570923`*^9, 3.766116388028657*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"c29ed6ec-45c5-4eed-8589-e1352066e632"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
yToLLmju6UPaWn1BdXHVcLU3e/b2VAFyYqGZoQ0qQwGDh3a25saidUeKjNpu
1KAhlot3U1L6UfTqmPpv5s3IUG0kxrE6B4265+5l5BxCft1lzD+nS1DHybWJ
frK56P5kkKzvch0uD+rxHdKaR8JWN3U9lvXXFHrGsvN9B5pdT/rl6dQIWSno
N0muBB0QSDlUJkNA+2QUBcV2VoD/s2J/K7Ovy33hUrqb8DDq5TTSrqyqg2Ge
i59W/clC2mSZpWHdcXRX9IXQnYZuaFBdYh3eEYiWIhTu0Y2QUByXSPKzc62Q
XtGx8bPMfbS1VGH9xuX5izgQK3hxXy2EVfLQ/oizB/VEwtviEyT00rL38/WG
TBDgmjvMZBmAehyr9u+xmETjubZL8lfT0F0rAwUFsbfIZqfJw/v8RORUubPy
i2wJUn5rTbDe+glJeqYxckiNo/mTiaFKqi0w7+5+a9gtDsUYlw033JlAzBIS
hbF8NeCe8GzRRSEEyQ1rxwlyjaPR9DYxda1YcHF2V0wyT0brXIdO2kaTQYT5
4n5e7S5gP3a6qC8yCN6I7Zc7sXYSnuSkt7L79QA9U038JXo76HTheWazhQyz
Tb4xdhrD8G5opFbAMwyG6eRV3/QQYTeDpv1BvwFQlqPb5ff0GiSrHYggq89C
p9gP/2NX+8GPnz2j4VwEsASv3/Hj9SxIapwsORQyCuczgo9t/xoJNDLRjw0G
puH1HjtFlWEC5Ci+c8sJjIC5oOYWwZNjSPWa79nTJQPo50CSSc+y/c+IR26h
LxxDPQ5xx7mvdSGHCDvXxYY4BE8n/vRoExGDPvfJU3X9SKC6/knE7UfoQ7VR
kr7qNAjL75QU8yUiu5W52xEl5Kesm4Gb6p2DHP3DKGdl7g6LZK14cG8cZpv7
VwdO9iPJlfm6/ns7Z/2tERBotViVYN+N9GvZzK4fSUQXPz7aGZ4wDme2ZVyf
LehE9c9VNYQEl+1/LqsfveoGg6yymBi/KcS0MrcyxRnU+bn1wY+NbtLPl+fW
eyvzePqIld7DhH4Q3Zf9pL2JiKTbnpTsuK2MRH7IcREnhmHtGYfD3bdm0OaV
OZ3O71hg38EhiDmceMFq8yiSZZXUz2YJRLTHhs03pXTD/spzt5lYR9Gntd6c
zu/jUUNydO213fPgUaqffmRLL57rVZIky/xD58DuYdneNeJN+D2k9FFOVcbL
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
+/o07r9rUu+aqyznb0Rz4dSrJgLmqpGRo4G6vrBq1e+C6eAZ3Ge9o1mLjhCX
7yF/73uYU+y2/4r/QqfdJObVFR+/TO4JgWtmWwMsCidxvaLP2VlybJMHTF9b
HyGjR+UCbTscyktcISjkwfbG2gGsD+n5ST9PjlegoDP+K7O4E9stgNwk5Wjj
C2+fDCR1JvVg/ukAWRSZ+kNjWNOM669hzG+J+2+dFAmjxCfupxT9//y95+P7
lesKF9K5cOB5GBH393lCgaBfejQKi144sct0Auc1t1Rbu79BJCwt3ll7eRcB
1xmF34+LdF/4wkMNpXO3wvNwfRs3vac/tysdSV/nETXelYH5rdbBoUdu6eiz
Fcft3MIELL+/6edQ80sbWHDWFU9ZnoMovJru5BagD4aQcTXZ0dYuvK+ByEUH
qYJHKHTaODaH+Sder8MnaXr25XuQfT3yKf6gG76HmPu/yH0iEQZy/Yq5T5bq
cd9XzmfkXXjyAS4d/i42y52P66TYN9ZpMns6ChZ50/VHJB+vv+//gffQUQcQ
GWdpihWqwvLD7tB+ZVkfDlmaj/12Svpge4rwKgmSGWoQh4fpQfofWbiP62ur
ut7I/4XWmx/wULdOxLylprvt3q9fSCVzRMGJmYDrpPKQvn7QYBDyDE9m4roz
gvmWai6HG84xyHTk8ceWc/W4bhf4WEkI8fkiNibDyFHhXszXSbgGD1iqgCWP
pQBpth1zu1f63rJ7X6OqlKzPSROVmEcoWZa85AtArjrmeq3x1PUhGdf59rLZ
o1d7pS2Dx4ewfW6tKZkzWAoF2/Bsp52MJVhP94bI0xlHC5GL53xF8wiVS9+o
IgTsLUR36DkXhc3rsf0lx2R2p6enIFfuig1N9K2Y62aL3qfxS0Knkl4fUn/W
gXmDzIm99aoJqPVBsYeGaheWrzUYwplzKhMtHmB47mY2hfW3fnmq3SM2AmST
rdXyn1D7nYOXa8BHSWdQ+HvfxueizH2bP+usavWrwfEss9Go72jDV7Qgkbhm
2qsc59eQB8+kG1sN0nR/ycWRWYN5dGDL5Y861UhqT+m3PTsS8Dz7aZNpIUdB
NXp8tlXbwRnh9UKJKVWc6TWI88/Ojceb0/H65Iqyn8Pvq9Fu3qv57NO9OH7Y
/MgPj7bkoK0Rc74mkoOYB23x1KhMzURNqZ4at78PYbspnD7FfPWgG+qQG247
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
sMYIS2XnBKL/AzEz3rc=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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

           "]], Polygon3DBox[CompressedData["
1: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
xjsIvIvAOyno8f8H+c43iA==
           "]], Polygon3DBox[CompressedData["
1:eJwtl3WYFlUUh79vZj664wGRcOlGhJV4JBZYlM6lW1q6kdoVllrpJaVjaQlB
umMJAQkFRUCkQeKhFlHR9/ec+eN95p7fPffOnZlzz7kT1qlv4z5OIBDYDyGI
CQYCabh+xXUMREMfKI/Wl2sX6AoLPXS0tNAOOy+D88Fu2r3QqsKXbiAwH+6h
3Yc3aPOw20B92tPRZsA05nqFthatPIvpCi+wV0JPtFf4tIZy2GPgPtox7MMw
GjsB3tH+D+bStxq7CXSlPR5tAnzNPZbAkaDdV/ePxmcgRNIejrYJZuOzHZKx
hlQwiL71+GxF+4v+lGhz0NahlYAXtKdBJPoSnn8z2nDsyfiOhUbY4+AE7bXQ
kL6x2F9AFtq9uPaGPrCHe2Rknmwwkr6NaD2Ysxf2efpOYJ/Ue4L+9P/DfLuC
9p4X0D8abQJsQwtj3Cy0BNpL4CN9P60NrTr2UQjX99Y38mxMJu4zFK2Za/fW
GtKixdEXhd1Y90Ebhx0LcYzriDaX9jxoQV8n7NlaJ+2ZXGdBvL6Fa2vQWpbC
TMaGs8bmGgdXYTVaHvxyQwS0xX8q18HoLRUb+FSAQdid0RfRXgyl6euCfVvP
ovWz5uZwGr+R0BCfSMUPfTXwKcN9S2PnwW4NY/D5AVoxpiaUQTuEX1X8HOyg
Y3E9QrEHrbGbwHL87mEPY+w+2psU9/iFGLdXsYpdCL/CcEjfAq7Qfw0+oS89
PivQzmCfg5f6fmi/oE3We4e3aCmx96DXop0bLQ8cQPsVLaViGbsuXMW+5toe
0F5ogHZK80Nb2p9DAn2Jih+04tqrUBBtDtokxYa/F0bAROxMPMso2qnQBwYs
ng+69o5KMF9JOIzfE9fm1j1awh3s9vr+jI2HOsoT2PvxzUF/LseeR8913LO4
DUMLh2PYF6A37WjYQ18a7PHQiXYSDGLODKztIeMz0G6PXwc4q3cMk2iPgo34
psN+jN8q2i3QOsIj7CToRru73h19r2XDMuZbDgXQqsiGorSfoT1VnmC+867t
+ZnKJ/RdwL6sWKddDf2GYgm/9XAHn2fY7+hb5Nr+Vx44jn4J/SE+SyER+yfs
e/T1w+eB3oP2vnzQKmFndm0ezfcCnqE9hee0f1cOpG8pPrGevaPbUMjPu9Fo
bbA34FsCLYPeie6BloCWiJbLsz2nvbcGbS3cRIuBDvhdhCP0ZdO+gr9pP8Ln
T2jg2T5XPlVeLa09DxP5TlvoP4F+FAriF482VXmd/g+ww+A2HHZsfdnoq4ad
E07reyvmoSx2ebilvKw9rvelvAFn0cIZtw4tN/ZGeKTchJ2da1aN037FbwDa
RLiMVhRWo+3FXgE5sEspJ6LFYk+AFP4atdYfPYubWJ5hEdRWXOD7HD7Ts8E6
5TR8/kCrrHHctxTtM3Cdvo9Dlif1PrbjNwVS45cdvlcNw94EBbAj4LJyCDxQ
jvHsOyX6flH69ooL2IEWj70ArvnvRbnmO+xtWo/qNhQIWjwrrqO0/2Ao9it8
kisnY29lvi3w0s+ryq8DVBsUQ1ATrT92R3y/UV1grIP9SnGm2MDej5+r2uLa
nJp7Oe12tNtDI+UYnQEU41BfdU7fHe0Jc0Yon/Cumnr2DfUtC3PN4lp8KE7u
oV2BGvpm+P6rvQYePq/RukMW/JJhp4A3imWutZX3VPO1h5WXXIuhxarl2sOe
nSO0fj3HPliENgptL+09EIP/SJ030IPaa6ptjM2MXQIOaM87Fv+FsIt5lueV
7zei5fMs7yj/7Mc+CXfR1ngWJ2ehKX2f4vMY7b5jZxqdbeopX6M3p90NLT9k
xK4MnZXXwYNK2K1gis5Bqt34t1Q8QgPVD+01tJKuxWkVjQtZHVY9bqg6Q//o
oNWCydw3Eq0n7ZKqyX5dLQ7ZaR9EO6DajN8q1XLti4DV68rMu1J7SHlEsas9
q7MVpNa3QUtSvcWvPnYuv+6fhGX4ZEWriFZEsQt9VXvhPcbkh7H07XbNLwft
PPgUg37y0dkC7cOg1f8BaEW4T+GQndFU+1QDdYbRWWaF8jFMwd4H+Zg/r2N1
XfV9J75psDM4dubT2W+F7qFaDi9gMz5xaJdot4VmOhv6Z4YIrd+xPau9e13v
GrsRNIZ2rKuia+fr9pAOvwrYN1w7e+gMUlk50K89zxQn2Fm1112rmaqdPbDn
qsZhH4SCtN9X/qPvW/wKQH7IC/XQ8nENV0wr9hRTaGWxExlbjnH1HDsH6jw4
1LMzz3C0dWiOZ+eX7bR3BqwOD+E5+sBQ2sOgMzxl7BD8KgXtf0L/FWn1A4KW
kfYQfAbDReVD186iOhfnhF3YB7Ru/5tHa+9g78Y3vWP/LPp3iWS+GWgLaafU
Psavl+qHa3Gn+LsLdVS3NBa/5PRNR0uPvSFk/w4OFAlY3W+l/arnkK59hH3O
tTyluh/vn3PqKlfiMxAOotVRTfWfLVnQcuPWkH1nfW/VHtWgfVyva81cmyrn
o2XRvtd9/LOAap9qYBPG72CuuIDFvc5hv8F8fJY5lo+Ul5IgrZ//XD8n1vLs
f++WaodjdWsbeI7lROXGTfiORovCfhu0fw79e2hPv8F+HbT/syHYs0N2lrmL
fSdg/1G5dAakfQq/08r7nsWb4m6l4lnf0l+LaudN1SedJVS34ZpyOlSHhcxf
3bOzkc5IP0MVz87Lyqd3sEsxZ3Y9I/oWNP3YxsgX+38uqN+Y
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt0b0vnlEcxvFz8+AP0IVOlm4ltCG1NDHhkSa1qIilNmkZRLylESJirzQN
hsbSkg5aiZfoRKinqY3F1EY6sHlJvETxObkN35zrd53r/M65f3fZ6+7mrrwQ
QikKUZUfQiWe4GUSQjPeZULoV/dhB88dqMAGvYhi+gF+yH1Tf0c7fc27wX/c
4pT3AQt6ZtWN8WLZM15VQQg5fmt8g/U3ZvmP7WfpejSgEUP8UXTQK3oso4Z+
KNvGv1Kf4wKXOOH9wza9iS2c4Zj3EYtJ+pb4pgbkeIXxDroz9tA3oy5AqXd+
kq/zzhfWQUzwp2WmME738g6da6LH5OfjvfJfrPv2Pt/3ij33MMyfxR96QI8l
mWVMZ9KZx9nP0Cu8RC4PRVji5ext4xdqec/i99Fz9v4m6WzijFZxwEswRPej
D4PY5U068x499FPnFviP6LcoU79CS/w/GOZV4+f9LONM11DOm9HjUOYIXzPp
TOJsSuj1kH7jiJm8kb/m3wH+h1bg
           "]]},
         Annotation[#, "Charting`Private`Tag$301098#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0Tsvg1EcwOE/irrV/X5raV0HJAx8hC4SizBoYhGpqMFsIBIDsxgZbXyG
Wo0mExKLSEwmiacMp8/vnPec8+ZNM9ultf2qiNgxUjURAywlImYs9utza32c
ZS+zzBk9+pjdPGUXi+zkqrNzukNfuuvevF3f6W/dpjfZygtrZzqlC2zhD5sZ
1RFNSLKRR9YbuGj+4NwSk+b1xoIue2edftN5z2v1B1/MEXt+bImNxN/VUeCW
Ufn+9co389qGae5yiu8eXulJfWvPq/mEPtFFndM3zPLT2peLx/Ujx1hmhs/2
pPnEUc5zhCs8dG6Zw+ZDxoHOe+egTlf9/y+/Dwcj0Q==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{782, 1274, 781, 816, 1288, 1148, 836, 837, 1295, 839, 1192, 
       1334, 800, 799, 910, 1249, 1417, 914, 915, 1139, 1281, 794, 1247, 1418,
        1064, 1065, 1420, 1070, 1078, 1461, 1045, 1197, 1338, 925, 1195, 1337,
        919, 838, 790, 1279, 1137, 918, 1336, 1194}], 
      Line3DBox[{805, 803, 806, 1318, 1183, 896, 1430, 1087, 1091, 1434, 1089,
        1088, 1432, 1166, 859, 1056, 1232, 1016, 1411, 1052, 1076, 1423, 1075,
        1051, 1410, 1050, 1066, 1049, 1020, 1385, 969, 966, 1361, 967, 1229, 
       1001, 1390, 1007, 1231, 1387, 1023, 1002, 1230, 1394, 1008, 1009, 1127,
        1460, 1270, 1271, 1465, 1123, 1120, 1454, 830, 829, 930, 1118}], 
      Line3DBox[{811, 812, 1182, 1326, 835, 785, 1276, 784, 1152, 1290, 824, 
       1099, 1440, 1082, 1081, 905, 1325, 1189, 1053, 992, 1375, 993, 1384, 
       1017, 1028, 1237, 1395, 1026, 1143, 1285, 1144, 1022, 1245, 1405, 1041,
        1038, 1240, 1398, 1241, 1033, 1444, 1102, 1105, 1447, 1235, 1024, 
       1110, 1453, 1181, 851, 1164, 1452, 1199, 929}], 
      Line3DBox[{815, 814, 1304, 1171, 879, 1311, 882, 881, 1312, 1176, 1225, 
       1370, 986, 987, 1371, 988, 965, 1360, 934, 935, 1373, 1209, 942, 1216, 
       1353, 958, 959, 1354, 960, 1218, 1363, 1179, 887, 973, 974, 1368, 981, 
       979, 978, 977, 1439, 813, 1147, 1437, 1096, 1097, 1260}], 
      Line3DBox[{842, 1156, 1322, 845, 846, 1185, 1330, 1186, 797, 1284, 798, 
       833, 834, 1333, 1191, 1412, 1054, 1055, 1250, 1419, 913, 912, 1335, 
       1193, 1251, 1425, 926, 927, 1449, 1263, 928, 1340, 1198, 871, 831, 832,
        1294, 1155}], 
      Line3DBox[{873, 872, 1442, 1261, 1101, 1443, 1100, 923, 924, 1446, 1104,
        1103, 1445, 1042, 1402, 1043, 1107, 1244, 1404, 843, 844, 1396, 1021, 
       1386, 1234, 1036, 1243, 1408, 1048, 1061, 1415, 1060, 1058, 1414, 1059,
        1067, 904, 1324, 1188, 1077, 1441, 907, 906, 1328, 909, 866, 865, 
       1327, 908}], 
      Line3DBox[{875, 878, 1321, 1161, 1160, 1306, 1170, 870, 818, 1149, 1307,
        884, 1455, 1268, 1174, 1308, 885, 1122, 1121, 1269, 1457, 984, 985, 
       994, 1389, 1226, 989, 1372, 1217, 956, 957, 1379, 892, 893, 1355, 961, 
       1228, 1378, 982, 949, 1350, 948, 983, 1094, 1436, 1259, 1435, 1093, 
       1095, 867, 1301, 1169, 1132}], 
      Line3DBox[{898, 801, 1286, 1145, 897, 1319, 1184, 880, 1305, 1172, 1086,
        1085, 1257, 1428, 1057, 1413, 1015, 1014, 1254, 1079, 1426, 1074, 
       1046, 1406, 990, 1374, 1212, 945, 1012, 1013, 1011, 1383, 1006, 997, 
       1377, 998, 999, 1000, 1381, 1004, 1010, 1388, 1200, 931, 1128, 1272, 
       1466, 1273, 1463, 1124, 1125, 847, 1297, 1159, 1112, 1119}], 
      Line3DBox[{901, 876, 877, 1320, 900, 899, 1258, 1429, 1173, 883, 817, 
       819, 1433, 1084, 1427, 1256, 1080, 1255, 1456, 1073, 1072, 1031, 1397, 
       1032, 1071, 1422, 1239, 995, 1376, 947, 946, 996, 1227, 1382, 1005, 
       1003, 1380, 991, 971, 1364, 972, 980, 1367, 863, 862, 975, 1369, 1224, 
       1115, 1266, 1464, 1131, 1130, 1129, 1462, 1114, 1113}], 
      Line3DBox[{921, 920, 1157, 1296, 1158, 922, 1196, 1339, 841, 840, 1450, 
       1264, 787, 1278, 788, 1108, 1451, 1265, 1253, 1242, 1400, 1037, 1027, 
       1238, 1421, 1069, 1063, 1416, 1062, 916, 917, 1035, 1399, 1034, 902, 
       1323, 1187, 903, 792, 1280, 791, 1283, 1142, 1293, 1136, 789, 1135}], 
      Line3DBox[{964, 1220, 1365, 855, 856, 1356, 1215, 955, 1214, 1178, 1313,
        1177, 854, 1299, 853, 941, 1211, 1348, 943, 1204, 1345, 936, 939, 
       1205, 1203, 1344, 891, 1315, 890, 937, 1150, 1146, 1287, 808, 822, 
       1289, 823, 932, 1341, 1201}], 
      Line3DBox[{1098, 1438, 976, 962, 861, 1300, 858, 857, 1366, 1219, 963, 
       888, 889, 1362, 951, 952, 954, 1213, 1351, 950, 953, 1352, 864, 1168, 
       1302, 874, 1358, 1163, 850, 1223, 1359, 938, 1202, 1343, 869, 868, 
       1342, 933, 886, 1309, 821, 820, 1310, 1175}], 
      Line3DBox[{1111, 1109, 1134, 1277, 786, 1116, 1458, 1117, 1267, 1459, 
       1126, 1039, 1401, 1040, 810, 809, 1393, 1025, 1236, 1392, 1018, 1019, 
       1391, 970, 968, 1233, 1409, 1248, 1029, 1030, 1403, 1044, 1246, 1407, 
       1047, 1153, 1291, 827, 1083, 1431, 1092, 1090, 1252, 1424, 895, 894, 
       1317, 860, 1167, 1316, 807, 802, 804}], 
      Line3DBox[{1140, 1141, 1329, 793, 1138, 1331, 1151, 1133, 1275, 783, 
       1190, 1332, 911, 1068, 796, 1282, 795, 1154, 1292, 828, 1106, 1448, 
       1262}], Line3DBox[{1165, 852, 1303, 825, 826, 1314, 1180, 1206, 1207, 
       1349, 1210, 1347, 940, 1346, 1208, 944, 849, 1298, 1162, 848, 1357, 
       1222, 1221}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{298, 297, 408, 407, 1327, 448, 447, 1326, 449, 1316, 401, 
       400, 451, 1318, 452, 323, 1286, 322, 425, 456, 1320, 1321, 380, 378, 
       334, 335}], 
      Line3DBox[{304, 305, 1331, 345, 343, 1333, 474, 680, 681, 1417, 690, 
       652, 1399, 653, 693, 686, 1415, 687, 679, 597, 1375, 596, 668, 1407, 
       627, 628, 703, 1423, 702, 713, 714, 1426, 646, 1397, 647, 645, 644, 
       770, 1457, 643, 590, 588, 1371, 589, 567, 1359, 507, 508, 441, 1315, 
       442, 513, 440, 1314, 350, 351}], 
      Line3DBox[{313, 312, 457, 1330, 459, 458, 365, 1295, 362, 302, 1280, 
       303, 741, 465, 1324, 464, 707, 742, 1440, 743, 728, 1431, 716, 717, 
       1432, 399, 398, 1428, 722, 721, 719, 1427, 720, 723, 1455, 768, 586, 
       435, 1312, 414, 413, 1342, 504, 502, 501, 347, 1289, 346}], 
      Line3DBox[{363, 1294, 364, 300, 1279, 301, 493, 1339, 490, 489, 1446, 
       750, 751, 1447, 629, 630, 1459, 767, 765, 1460, 771, 774, 776, 1466, 
       759, 762, 584, 1369, 577, 578, 735, 1436, 579, 328, 331, 1439, 581, 
       402, 1300, 397, 396, 1365, 562, 561}], 
      Line3DBox[{382, 381, 1298, 387, 394, 1299, 395, 525, 536, 1351, 537, 
       548, 549, 1354, 443, 444, 1355, 556, 555, 1380, 609, 600, 1377, 601, 
       611, 605, 606, 1390, 631, 634, 1392, 636, 659, 1405, 666, 660, 661, 
       1404, 665, 673, 672, 1451, 756, 710, 711, 1461, 361, 360, 1425, 697, 
       696, 355, 1292, 354, 718}], 
      Line3DBox[{392, 393, 1303, 421, 327, 1287, 326, 341, 506, 1343, 505, 
       521, 1370, 585, 587, 432, 1308, 433, 769, 1456, 715, 683, 1413, 615, 
       616, 1411, 677, 353, 1291, 352, 467, 1325, 466, 678, 1414, 685, 463, 
       461, 1323, 462, 478, 1334, 319, 1284, 318, 460, 306, 307, 1329, 315, 
       314}], Line3DBox[{418, 417, 494, 1340, 486, 1337, 485, 752, 755, 1450, 
       749, 1445, 748, 747, 1444, 746, 655, 1401, 656, 775, 607, 608, 1394, 
       638, 625, 1388, 499, 500, 404, 403, 1367, 534, 1350, 533, 583, 1368, 
       576, 575, 559, 560, 1366, 542, 543, 1356, 563, 544, 545, 565}], 
      Line3DBox[{434, 1310, 333, 332, 1304, 422, 415, 416, 1306, 379, 377, 
       431, 1429, 724, 454, 1319, 455, 725, 726, 1430, 453, 450, 1317, 291, 
       1276, 292, 359, 1328, 469, 419, 367, 357, 1293, 299, 287, 1274, 288}], 
      Line3DBox[{470, 342, 290, 1275, 289, 344, 475, 1412, 682, 309, 1281, 
       308, 688, 1416, 689, 669, 1408, 663, 617, 1384, 618, 642, 1403, 662, 
       704, 676, 1410, 675, 700, 593, 592, 1406, 667, 1422, 648, 626, 1389, 
       591, 511, 510, 1360, 388, 389, 1358, 522, 518, 515, 1344, 514, 519, 
       523, 1349, 383, 386, 509}], 
      Line3DBox[{476, 471, 1332, 472, 477, 691, 692, 1419, 670, 671, 1418, 
       694, 1421, 641, 622, 1386, 621, 640, 1395, 639, 674, 1409, 620, 1385, 
       619, 701, 594, 1374, 532, 531, 1376, 554, 553, 1372, 552, 551, 1373, 
       526, 420, 1302, 405, 406, 516, 1345, 517, 1347, 527, 384, 385, 512}], 
      Line3DBox[{483, 1336, 484, 372, 1296, 373, 745, 1443, 497, 498, 1453, 
       445, 446, 763, 1458, 764, 766, 772, 773, 1465, 780, 1463, 779, 760, 
       761, 1464, 778, 734, 1435, 733, 580, 329, 330, 1437, 736, 739, 1438, 
       740}], 
      Line3DBox[{503, 1341, 340, 339, 1309, 430, 423, 424, 1311, 429, 428, 
       1307, 338, 337, 1433, 729, 730, 427, 1305, 426, 731, 732, 1434, 727, 
       705, 1424, 706, 684, 348, 1290, 349, 468, 1441, 374, 366, 358, 317, 
       1283, 316, 1288, 336, 325, 324, 1322, 369, 368}], 
      Line3DBox[{520, 410, 409, 1346, 524, 528, 1348, 529, 535, 540, 1352, 
       539, 550, 1353, 546, 547, 1379, 604, 572, 571, 1382, 599, 598, 1383, 
       614, 568, 1361, 569, 570, 1391, 633, 320, 1285, 321, 623, 1396, 370, 
       371, 1400, 654, 712, 709, 699, 1420, 698, 482, 1335, 481, 695, 311, 
       1282, 310, 473, 708}], 
      Line3DBox[{738, 737, 411, 1301, 412, 777, 1462, 758, 376, 1297, 375, 
       757, 1454, 356, 294, 1277, 293, 496, 495, 1452, 391, 390, 744, 1442, 
       488, 487}], 
      Line3DBox[{753, 1448, 479, 480, 754, 1449, 492, 1338, 491, 664, 296, 
       1278, 295, 658, 1402, 657, 651, 650, 1398, 649, 637, 1393, 635, 632, 
       612, 613, 1387, 624, 610, 1381, 603, 595, 574, 1364, 573, 1378, 602, 
       582, 557, 558, 1363, 439, 438, 1362, 541, 538, 437, 1313, 436, 530, 
       1357, 566, 564}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJyMfHk4l13XNkrGTJEUJYSUUiIlVigaRJKKqJQpRSrzPGsyZJZ5nud53OZ5
VqYyRVL4XZQpkW/X8zz3/b33837H8fkjWcdl//a11rnOdZ7Xvmrv3UdXdCnI
yMhKKMnINpH95+ug9L//UvGvb3OgzW3sFg78/44zSf8nriLeP9hPKfDvn3f8
FR++WKGmGkv7n3X+iitKxN7fRc8lfSjjurawPv1fcUMOyzshPYtSZ9T4vm64
Uf0VHy0KVLVK5pC+t6nJxzJn91/xf6/rmKp4Y8q6YNc/4kzSortpaoVE9v4z
XvHjhF5oqgvfP9epmGtuaJym5/mvOGl96PJNhn9ev0Paxz5i/ECq0H/t5+j/
+rnc0rtEfc4mWv29fgZt9q+dsE2ar3+trdif46+48Z88UEqf/kcelP6dtwN/
8rZW/p/46SF7r+PVe/+rLoVy+5ikenn+K65A9n3TmUPc/6nXX/X913e+/6r7
fccZSr2zgv9V34L/sT6Z43/in4qUHO1Xef8rfuHf+xf9R90N/twvm/T5f9xv
/5+6/5CaTxOh+2nO+ld8ZePPl1T6/1p3MsdVmRecItd4/6tet1nGuMkjBP+/
6078r3Emac3/dR0maZfnr9pOxgj8134S/x/75P5f684mDf/IAykjx7nq2A5p
3n/VXeo/cZn/Ufe/83z1f/Tj33W/+z/69+/rtT81qyy+boEF1cbUZ2t1wLpT
5M1aNQmCXQ04N79oB6WXev2l0VWI1cPkT9zOoTG5nqoevjdQv1vmjIMlsz3+
ag4EbHzRFX7cWQwcUkEuDIF5sG3c5oR/KQGztSGPR0JzgXp4VwtxsxZ+Gl/5
c71kjWvZqbUGNOMfyfZmoAkmNp/5s/72MxLs+mbFQJQOMsamVqO5vd5/rhfs
TU1hDy4DnwiB9zLOWegu67M/65+k8XfSGKpBuVGeS308bcjOWfTPOnrsM5zz
D7Nh5JHHmSdd3vDWYLMsxQwBJfl7JhiZKmA4Ta99mtIZqb+1KtmoJyCq4+xy
i3ksbGO1Kr5IFwn+t37oKi8RYJJ7N6WPMwWEJyK513gyME/FLnN9JoC1vIT/
eXA21OjradlXxoDXesqf+OWCgleTHzNBfOrj2eCYdCjVjFK79pGAA3NIp3o6
ChyophXvvQoAYa+W+vwfBAi8eXP+BGUkGIQHFHvszAImhXWZ3/vs3VZKS/nj
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
OqFfrfYxCV1UJz0MxTg8GHXEfSCuALH/uqaNjjQhXoWF9dv3sR+P/uIx9CsV
nSS1ovdUbch5yVPIGPNM1CFvl49Z+UilY5kltawHhf3yYbfvJcOdJk/l0pQq
VDoWL/a+pQOZfPLlN1knA4vmO5Z4lQY0Sin/+E5EF7odJX1DCuNZOFk1eCkw
GkXaT8jKeCUhq6+UChdw/F1autJ5WDzRnuFEjwxyKBqf9P6uj/HZ3j/YyYR1
Xqbes7+aLG1oe5OoliZez/6Ri84rY/kwUdzfkvu+ETltGXoPYz3JGWx4NbEq
H2iuGH+oTe1BZ9Tkpj71kyE7MOXH0fE69P3UisXptnPoSI3sqhPO17OEvDOb
6UXI4qHafS1tEiriGhNsxvhhphDbcrhJQgQ3R9HFA03IhyzcdxvHzZByM9gy
rQu9eGlWsQ0a0AX2Wg0rrHMMaGqpaIpcUOx0qGHQlDuKe6VhGY7xc9bauedu
Vh7K46C0e/aoGFVMMFzegXmydLzsD0x2IOoIGdFisyoU6tmSPLRGhouqr2Sv
NFWjWqME7ecm1ei8W+XAXAgBs8KtT+l3N6Gml5+4GrwK0NarHKEF7E9/KM+N
VzWTwC3t0bGp0ka0pvuDxQnrEyU9JqBpr4KvK54R5xs7UKDc2Q46nJcXtqFV
v6w0YDJzo3Qhug8Nksp5vLHfmRErm2GK1EKst+Zn9Z73IvVZlcajTWRgesR5
PGj+PFqHRv+ZbfUoabs7xxyOz6c+aZnbnG2wh98qgIa/Daqb//yUTyYDzdop
89UflhDUqUuTdKsbed/TPFhAS8DD2zYZO9W60I/ldV/X3GrU/SnidsQYGZq3
n0lX2taCBjNl91J9akbUNiZtx0ewf1mMjmQILEVfc5fnBsd7keyNCFJfBF5P
aqIYs0obet7wuNGMvw0JuSwrHUgkQyqjIWdGSy/KbVDZ1ve7BCU4HdNbjsV+
53jIqT/D1ejTrZl70tCFfB502NzH982kZXQ3ZalDY+a/Ah5P1KKfJKHMOkPs
R4RtLS1camDMgCYl5zjm41zupWm8njvKVWasF5Qhb0CF+tVvYyQ/Yf5xA+f3
5aqn/ekhU3T9a8+tNI8+8FQ7Ya6dRIaiprkv/difjkp00nDYmiE/qvlfh7CP
e53k3/0svwfpm/tcSfPMR8kZ0Xe+9pHhSVI8M91qKYh9q2a0zupFpmrS5tpY
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
ZEI=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{301.72515692100427`, 182.67844711632506`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-2., 2.}, {-1.9944075943623605`, 
   1.9944075943623603`}, {-0.3163005459276927, 0.043078558603697276`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.5081739885864407, -3.2099460668233415`, 0.9423404084562561},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.7661163891544743`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"906f82c5-1035-4bdc-aae4-8722941ad4c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Laplacian", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\[Equal]", 
  RowBox[{"f", "[", 
   RowBox[{"x", ",", "y"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7661164014921*^9, 3.7661164115985117`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"6b5e83ba-8889-499f-8aae-d811894e8168"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], "+", 
   RowBox[{
    SuperscriptBox["f", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "\[Equal]", 
  RowBox[{"f", "[", 
   RowBox[{"x", ",", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{3.766116411971834*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"569ce755-fa87-4c29-80cd-e8943a735dd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "\[Equal]", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[202]:=",ExpressionUUID->"885d9c72-2efd-430f-90f8-19e5d9bd30d3"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["f", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "\[Equal]", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7661164151630383`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"0332d303-604f-48a9-85f0-b8beb0030593"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Laplacian", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", "x", "}"}]}], "]"}], "\[Equal]", 
  RowBox[{"f", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.766116458650066*^9, 3.766116461808363*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"12351251-1285-4ed2-bdd4-6bd4c65ec385"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["f", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "x", "]"}], "\[Equal]", 
  RowBox[{"f", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.766116462126006*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"1548d2d9-d593-462d-9d56-e07f952e8933"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["f", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "\[Equal]", 
    RowBox[{"f", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[204]:=",ExpressionUUID->"d050793b-da98-4b40-b823-011767eefa19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.766116464535965*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"13e6d2c0-6f43-4d96-a0fd-f5f005e6ef4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "1"], 
   RowBox[{"x", " ", 
    RowBox[{"Log", "[", "x", "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7661167941970577`*^9, 3.766116804723713*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"014d122c-d37f-4a11-9456-6b1b1843e7c5"],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellChangeTimes->{3.766116805237406*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"daad8f1c-95a8-4934-bae3-3d62a2c0cc77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Kurtosis", "[", 
  RowBox[{"NormalDistribution", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7661527462699823`*^9, 3.766152749196685*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"14aebe8b-d87a-4ba1-90bd-f1d0323f6412"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.766152750024672*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"17e2b274-9ce0-4af0-a633-9c26003a7f36"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
Magnification:>2. Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 266, 5, 59, "Input",ExpressionUUID->"d4464c36-7923-46fd-a6f8-19b521a8e17b"],
Cell[849, 29, 317, 9, 120, "Output",ExpressionUUID->"9c668930-2121-4dc7-8b89-214faa808f6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1203, 43, 867, 26, 140, "Input",ExpressionUUID->"e0afa75f-dcff-413f-8406-f2fb24448408"],
Cell[2073, 71, 327, 9, 89, "Output",ExpressionUUID->"fdb0da06-2d10-48ca-8a13-6124a1298749"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2437, 85, 337, 10, 89, "Input",ExpressionUUID->"c2c33896-ee8e-42ea-bf18-c3d9af4d1aa0"],
Cell[2777, 97, 166, 2, 67, "Output",ExpressionUUID->"8a2e67c8-b63c-4a1b-a712-f8cbb0817f15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2980, 104, 255, 5, 92, "Input",ExpressionUUID->"358200ca-07d3-4243-8e06-53f4f032c4be"],
Cell[3238, 111, 234, 5, 92, "Output",ExpressionUUID->"726bef0e-3733-48dd-ad5d-ab71961e42d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3509, 121, 245, 6, 92, "Input",ExpressionUUID->"2357ca36-1278-4282-aab3-b6ee6fce8d56"],
Cell[3757, 129, 513, 17, 88, "Output",ExpressionUUID->"fe22cdd6-82b2-44be-b16f-535161be469b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4307, 151, 327, 9, 88, "Input",ExpressionUUID->"5ba20efd-bc4f-4046-9e04-a077108c366e"],
Cell[4637, 162, 166, 2, 67, "Output",ExpressionUUID->"60d81993-9814-47f7-b3ff-8355182b0cf4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4840, 169, 389, 8, 65, "Input",ExpressionUUID->"34785c2c-ad74-4fd3-a3f6-730f1d57e14b"],
Cell[5232, 179, 152, 2, 67, "Output",ExpressionUUID->"14966181-a0e7-4f95-8396-e7e653b01def"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5421, 186, 382, 9, 65, "Input",ExpressionUUID->"561c882f-6c15-444f-a2f2-1d9d68dfaf7b"],
Cell[5806, 197, 176, 3, 67, "Output",ExpressionUUID->"04380ad4-7350-4217-8b23-15f47abe7ca6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6019, 205, 412, 9, 65, "Input",ExpressionUUID->"57fc0d9e-e402-463c-b779-5aec60ac8edd"],
Cell[6434, 216, 229, 5, 67, "Output",ExpressionUUID->"a22274b6-1b63-4588-b378-083ba3a64537"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6700, 226, 340, 9, 65, "Input",ExpressionUUID->"a43ff503-75eb-4c6e-8272-79bb0790ebad"],
Cell[7043, 237, 344, 10, 95, "Output",ExpressionUUID->"3019e906-5b6e-4d10-a9b1-4e88b0c54843"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7424, 252, 520, 16, 65, "Input",ExpressionUUID->"a11cfd90-dfe4-4f64-b779-081f75e348d2"],
Cell[7947, 270, 12170, 210, 920, "Output",ExpressionUUID->"24f8eb53-099c-483f-805e-0a4d6fb9d109"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20154, 485, 518, 13, 111, "Input",ExpressionUUID->"6e1791b7-2efc-4ad0-ae62-9bf395d5ee8e"],
Cell[20675, 500, 664, 21, 142, "Output",ExpressionUUID->"d582c169-d0e8-4dde-aceb-a22ce7eccc25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21376, 526, 840, 27, 124, "Input",ExpressionUUID->"d1857c19-6161-42d0-b3ab-62072e87230b"],
Cell[22219, 555, 9776, 171, 920, "Output",ExpressionUUID->"24d5dc54-527b-485c-9a8f-c749d14ad6ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32032, 731, 601, 16, 111, "Input",ExpressionUUID->"107e120e-aba0-4955-b204-ae4094c93240"],
Cell[32636, 749, 359, 10, 95, "Output",ExpressionUUID->"168c89e4-7f27-49e9-a53f-278ea7ad1bda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33032, 764, 387, 12, 65, "Input",ExpressionUUID->"e37fad49-a17f-49ed-bfc9-220dd082d7c3"],
Cell[33422, 778, 359, 10, 95, "Output",ExpressionUUID->"1fac680d-049b-4b7d-9720-ec2ee62204c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33818, 793, 341, 11, 65, "Input",ExpressionUUID->"233241aa-55b9-44da-bf18-d002178d1801"],
Cell[34162, 806, 314, 9, 95, "Output",ExpressionUUID->"afb1921a-dbc5-4119-bf1e-df5a2a1d1dde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34513, 820, 642, 16, 203, "Input",ExpressionUUID->"f58ddd81-4023-4abd-af7b-92760f7a1e2a"],
Cell[35158, 838, 356, 10, 95, "Output",ExpressionUUID->"ee4bb30c-6a59-4b03-8f35-f5231746b12a"]
}, Open  ]],
Cell[35529, 851, 249, 8, 65, "Input",ExpressionUUID->"66094693-d768-4684-b493-6ea92af93ac6"],
Cell[CellGroupData[{
Cell[35803, 863, 545, 14, 157, "Input",ExpressionUUID->"10fe2d12-41c6-45df-9e0a-bfee0362a1c2"],
Cell[36351, 879, 713, 23, 139, "Output",ExpressionUUID->"9da5c21b-0b28-4af7-8dec-57f4d5e6b807"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37101, 907, 619, 16, 203, "Input",ExpressionUUID->"6dbc4d8e-5fbb-42cd-9974-01d4609ee523"],
Cell[37723, 925, 687, 23, 139, "Output",ExpressionUUID->"15b4fcea-f28b-4734-8cec-b13ddf0b926b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38447, 953, 889, 29, 120, "Input",ExpressionUUID->"37eb847b-ec6b-4801-a2d1-b4ec11eaad13"],
Cell[39339, 984, 7764, 138, 137, "Output",ExpressionUUID->"4f00af39-f122-4aa2-a6a3-a3ffb54e171c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47140, 1127, 762, 19, 249, "Input",ExpressionUUID->"f427a911-581f-4e54-9b29-d7451e01b451"],
Cell[47905, 1148, 1027, 33, 149, "Output",ExpressionUUID->"c9461384-1ffc-4c5d-ae86-14de75ebc321"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48969, 1186, 248, 5, 59, "Input",ExpressionUUID->"686ac8cb-0ed1-4a32-a280-50a94de66ea9"],
Cell[49220, 1193, 219, 5, 95, "Output",ExpressionUUID->"61144488-ea36-4a5e-a56c-e70da2e2cb5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49476, 1203, 348, 10, 65, "Input",ExpressionUUID->"1a6cc015-b0ef-421d-87ea-04c07901c566"],
Cell[49827, 1215, 6710, 121, 920, "Output",ExpressionUUID->"ef211e0e-504b-4f7a-b198-264ce85f889f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56574, 1341, 286, 6, 59, "Input",ExpressionUUID->"77d0b66c-6421-4c53-9d86-4af29f6024db"],
Cell[56863, 1349, 256, 6, 89, "Output",ExpressionUUID->"46d91edf-f55e-4aa4-82ab-cdb421ae74bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57156, 1360, 426, 12, 59, "Input",ExpressionUUID->"45601495-dab6-44d5-b623-873a5ac7f147"],
Cell[57585, 1374, 51363, 853, 776, "Output",ExpressionUUID->"9a684797-9e07-412c-9ee0-e99a3bcaa0b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108985, 2232, 281, 6, 59, "Input",ExpressionUUID->"5f00c648-05db-417d-8d3b-4029a5df1456"],
Cell[109269, 2240, 256, 6, 89, "Output",ExpressionUUID->"5cc4d3d0-f6a2-496d-a8d6-9fb26dd5451b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109562, 2251, 513, 13, 59, "Input",ExpressionUUID->"7c7fe2de-a92a-49ae-944b-3c5119bc06bf"],
Cell[110078, 2266, 1020, 31, 149, "Output",ExpressionUUID->"bb412e4f-6e27-4c69-8c76-046c2ef72f7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111135, 2302, 612, 16, 101, "Input",ExpressionUUID->"f403b947-aec1-4b64-9450-71fbc73ce512"],
Cell[111750, 2320, 280, 6, 89, "Output",ExpressionUUID->"3eaeb485-b5e0-41b9-8974-4a67e15cb434"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112067, 2331, 333, 8, 59, "Input",ExpressionUUID->"d88d83e2-19fd-46f4-b3c5-a5bce5585a65"],
Cell[112403, 2341, 311, 8, 89, "Output",ExpressionUUID->"e667c86f-5fd1-4a89-8334-93bd2bd82724"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112751, 2354, 386, 11, 65, "Input",ExpressionUUID->"80b94240-2f1f-4b81-bb56-63c2231c45b3"],
Cell[113140, 2367, 410, 10, 78, "Message",ExpressionUUID->"4dd26aa8-3572-4853-af00-cfd290b898d6"],
Cell[113553, 2379, 407, 11, 94, "Output",ExpressionUUID->"5b42dc26-d130-4e1c-a055-629b238a4c03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113997, 2395, 241, 4, 83, "Input",ExpressionUUID->"2f0e60ce-c3b5-4c91-8b3b-20c25ed334dc"],
Cell[114241, 2401, 477, 17, 119, "Output",ExpressionUUID->"66797fe5-730a-4da8-9f62-e8357caebc6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114755, 2423, 697, 24, 100, "Input",ExpressionUUID->"76073de5-d723-4803-b795-dbc5bfd24904"],
Cell[115455, 2449, 654, 23, 120, "Output",ExpressionUUID->"47124adc-3448-48dc-bedc-1fa30628ef17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116146, 2477, 823, 28, 100, "Input",ExpressionUUID->"0bd0f343-dfa8-4fd0-a8b4-5a66002e84bf"],
Cell[116972, 2507, 58526, 970, 776, "Output",ExpressionUUID->"f0b8fff4-c382-4990-ba4d-491c8b9d9667"]
}, Open  ]],
Cell[175513, 3480, 156, 3, 59, "Input",ExpressionUUID->"7374a211-403f-4cd6-8b45-ee41bb2e78c7"],
Cell[CellGroupData[{
Cell[175694, 3487, 225, 4, 83, "Input",ExpressionUUID->"04ed0043-5922-42e1-b48b-f3854dacd543"],
Cell[175922, 3493, 195, 4, 110, "Output",ExpressionUUID->"4466550c-925c-4e70-b6db-5c4747d67c73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176154, 3502, 237, 5, 88, "Input",ExpressionUUID->"5f4845c7-a734-46ec-8f6b-64f0176ad62f"],
Cell[176394, 3509, 521, 19, 119, "Output",ExpressionUUID->"807c9cb5-9db2-4714-af37-8269bd5c5f97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176952, 3533, 721, 26, 100, "Input",ExpressionUUID->"80adf7ca-3c43-4239-abe7-9d6308183fc8"],
Cell[177676, 3561, 656, 23, 120, "Output",ExpressionUUID->"96b435bd-90b5-4fd3-a734-5838e0670141"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178369, 3589, 823, 28, 100, "Input",ExpressionUUID->"9f634252-071a-4c1c-806f-2e789fc32ef1"],
Cell[179195, 3619, 58516, 970, 776, "Output",ExpressionUUID->"1a38f0d4-0c33-4baa-b057-b0989547841b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237748, 4594, 769, 25, 100, "Input",ExpressionUUID->"076c06ae-d56f-4fad-875d-98efd891cfcf"],
Cell[238520, 4621, 662, 23, 121, "Output",ExpressionUUID->"7b677673-511e-466a-9ac1-489716db464b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239219, 4649, 741, 24, 101, "Input",ExpressionUUID->"16d13f7d-42bc-4ffc-98ea-c43e3f701f81"],
Cell[239963, 4675, 2185, 75, 339, "Output",ExpressionUUID->"dac51a0f-2436-4b82-980a-e029b4b4f991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242185, 4755, 910, 27, 160, "Input",ExpressionUUID->"59888342-9b9d-4a63-901e-6d9d9d31f8f8"],
Cell[243098, 4784, 943, 30, 135, "Output",ExpressionUUID->"ee1bf40e-6f6c-4395-ba2d-acf029cbe4c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244078, 4819, 1177, 36, 116, "Input",ExpressionUUID->"b9ce5867-2c08-4e00-906b-e5054b2509f5"],
Cell[245258, 4857, 59959, 994, 776, "Output",ExpressionUUID->"37f59a05-1fb7-4316-9b52-0377a4a5707f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305254, 5856, 1082, 32, 116, "Input",ExpressionUUID->"68351fea-b2d9-4630-b237-c00efecde478"],
Cell[306339, 5890, 1793, 53, 253, "Output",ExpressionUUID->"51325155-38e3-40a7-bd0e-29e6b9d9bc5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308169, 5948, 2062, 60, 384, "Input",ExpressionUUID->"9918b076-a901-4bbb-89a6-fd92204b8159"],
Cell[310234, 6010, 1836, 40, 776, "Output",ExpressionUUID->"efd18b10-84f5-49b8-8db1-c4bcf502a1df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312107, 6055, 586, 16, 94, "Input",ExpressionUUID->"508a5a8e-27b9-4564-9a69-45bbb2e0ebaa"],
Cell[312696, 6073, 38140, 649, 502, "Output",ExpressionUUID->"fccfe124-0669-4353-8112-09cd2d78d9d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350873, 6727, 251, 5, 65, "Input",ExpressionUUID->"101a9508-fcb6-4003-a054-26c44a78f545"],
Cell[351127, 6734, 219, 5, 95, "Output",ExpressionUUID->"6aa9f807-25ac-4bfd-9492-8ea5890c9b75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351383, 6744, 348, 10, 65, "Input",ExpressionUUID->"7255b028-24c8-41c2-b446-ff3f5400e81a"],
Cell[351734, 6756, 6711, 121, 920, "Output",ExpressionUUID->"2337e5fa-0ac0-4553-a2ee-80d04f1b4351"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358482, 6882, 298, 7, 65, "Input",ExpressionUUID->"9ddf5b3d-9d11-43ff-8b37-5a8eccf46ad1"],
Cell[358783, 6891, 220, 5, 89, "Output",ExpressionUUID->"22411ea4-9d76-4c3d-aaa9-bab1b6e2e852"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359040, 6901, 279, 6, 59, "Input",ExpressionUUID->"248ff5bc-e135-407c-9885-fa27da14a2ac"],
Cell[359322, 6909, 526, 17, 133, "Output",ExpressionUUID->"2a82a36c-d172-476d-8955-551bf354d631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359885, 6931, 413, 9, 101, "Input",ExpressionUUID->"bdec31c3-41b8-4024-b0e0-cca98a5186f5"],
Cell[360301, 6942, 455, 15, 133, "Output",ExpressionUUID->"07311140-3133-489d-b973-1f9ef6907feb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360793, 6962, 566, 18, 114, "Input",ExpressionUUID->"c0ecb9e5-b24f-4513-9ca9-aa1c39882cc9"],
Cell[361362, 6982, 446, 14, 112, "Output",ExpressionUUID->"e5f7689e-f032-40e4-9e2f-77db1189f196"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361845, 7001, 632, 20, 89, "Input",ExpressionUUID->"287a44ca-28a7-4a9f-8244-6645c6ca5602"],
Cell[362480, 7023, 6753, 122, 920, "Output",ExpressionUUID->"d1570634-ba5e-4ffa-99f3-6532bf9b9da9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369270, 7150, 841, 24, 192, "Input",ExpressionUUID->"f369ac09-0e2b-4012-9b1a-42a594ebd980"],
Cell[370114, 7176, 12739, 223, 920, "Output",ExpressionUUID->"e539f1c1-4c47-4237-84d3-72146877dcf6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382890, 7404, 207, 3, 59, "Input",ExpressionUUID->"229d946d-f66e-495a-bdd9-22e6422d284c"],
Cell[383100, 7409, 182, 3, 89, "Output",ExpressionUUID->"2cb8a3f4-e14f-4277-aefe-0df79c1899a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383319, 7417, 301, 8, 59, "Input",ExpressionUUID->"32564272-c4f7-4338-bc9e-69bcd0b3a25d"],
Cell[383623, 7427, 5269, 108, 502, "Output",ExpressionUUID->"a44b8e1a-a3af-4a5b-b245-4cacbc796f50"]
}, Open  ]],
Cell[388907, 7538, 307, 8, 128, "Input",ExpressionUUID->"0f3ef17b-f204-47af-9ec0-29e2b3725fa6"],
Cell[389217, 7548, 154, 3, 59, "Input",ExpressionUUID->"16ad5422-138f-4b6c-b7b4-434301029a88"],
Cell[CellGroupData[{
Cell[389396, 7555, 675, 18, 144, "Input",ExpressionUUID->"ff4b278f-8a01-487b-a0ee-75ef2da5349f"],
Cell[390074, 7575, 22844, 434, 544, "Output",ExpressionUUID->"ad76a13a-f1d4-4db8-9aaa-038e6a08e678"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412955, 8014, 728, 20, 131, "Input",ExpressionUUID->"99ef5a17-da5f-44ca-8f71-dd356f00f413"],
Cell[413686, 8036, 23697, 448, 544, "Output",ExpressionUUID->"0c41e560-0c1f-4d8c-b68a-c3b06ab88e7d"]
}, Open  ]],
Cell[437398, 8487, 144, 2, 101, "Input",ExpressionUUID->"c0465f2f-1aa3-48ae-ada8-34f3c87fb66f"],
Cell[437545, 8491, 81, 0, 59, "Input",ExpressionUUID->"f578709a-22a6-4973-ae4c-094ca3403bcd"],
Cell[CellGroupData[{
Cell[437651, 8495, 790, 21, 200, "Input",ExpressionUUID->"5898ed23-1a1b-421a-9346-73349c39b1f8"],
Cell[438444, 8518, 1781, 35, 717, "Output",ExpressionUUID->"f2e9f618-f6fb-48aa-8c6b-4ead06021620"]
}, Open  ]],
Cell[440240, 8556, 324, 9, 59, "Input",ExpressionUUID->"1e66a6f3-e6e5-4cca-8453-4960604f8f9e"],
Cell[440567, 8567, 359, 11, 86, "Input",ExpressionUUID->"d697fdb9-0712-4391-9c0f-5ea8e7eee0b4"],
Cell[CellGroupData[{
Cell[440951, 8582, 588, 15, 157, "Input",ExpressionUUID->"5e01a064-dff8-46d8-801b-00be126c42b6"],
Cell[441542, 8599, 446, 14, 112, "Output",ExpressionUUID->"f784dd64-12bb-42ed-a37a-61c21b4e19b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442025, 8618, 626, 16, 157, "Input",ExpressionUUID->"1d748b4c-74b3-4525-b1e8-112ff4073437"],
Cell[442654, 8636, 446, 14, 112, "Output",ExpressionUUID->"95a71e4d-344c-40f8-ac59-8ccdb9f031ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443137, 8655, 632, 20, 89, "Input",ExpressionUUID->"880faed1-8d31-4b92-98c9-326df43a0737"],
Cell[443772, 8677, 6799, 124, 920, "Output",ExpressionUUID->"d09aaec5-73f5-49ec-ada4-349f28e3fb21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450608, 8806, 380, 10, 86, "Input",ExpressionUUID->"e32a7ad9-f576-4341-83a1-1d7fbe7423a6"],
Cell[450991, 8818, 194, 4, 89, "Output",ExpressionUUID->"0282e004-2e21-4416-bf4d-4ab2c5585a78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451222, 8827, 533, 16, 89, "Input",ExpressionUUID->"4296a38c-8c26-45c5-a773-7554ce3b87fa"],
Cell[451758, 8845, 341, 10, 117, "Output",ExpressionUUID->"198b2678-8ff2-4d6b-9b06-213886bc2cdb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452136, 8860, 403, 11, 100, "Input",ExpressionUUID->"ca0d3aeb-bc71-41b7-8780-7b874137e479"],
Cell[452542, 8873, 232, 5, 89, "Output",ExpressionUUID->"1302aada-e7d1-41ab-bca9-193b8f2f2171"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452811, 8883, 917, 26, 203, "Input",ExpressionUUID->"3263ddb3-fb91-4023-b390-92a657abe4de"],
Cell[453731, 8911, 1824, 36, 946, "Output",ExpressionUUID->"66dcf4aa-abe0-4dbf-80f3-56507136e50d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455592, 8952, 1143, 32, 315, "Input",ExpressionUUID->"26b8c77b-d59b-4af7-abc6-d57f9064f2cd"],
Cell[456738, 8986, 1904, 38, 1076, "Output",ExpressionUUID->"ead3e126-7eba-47bb-b021-02fd8c72d878"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458679, 9029, 419, 9, 111, "Input",ExpressionUUID->"33b23cd8-d9e5-401e-994e-e24f5c6233b3"],
Cell[459101, 9040, 434, 14, 135, "Output",ExpressionUUID->"ab57caab-edc4-4f6a-8168-ce9dcbd62034"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459572, 9059, 618, 20, 116, "Input",ExpressionUUID->"963f37f3-b8e7-4e3a-aec9-51467068defc"],
Cell[460193, 9081, 6594, 119, 152, "Output",ExpressionUUID->"278c0cdc-8ba5-44b4-812c-f29be6129811"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466824, 9205, 314, 7, 59, "Input",ExpressionUUID->"4ce64e8c-6032-4684-a517-4a0b09456858"],
Cell[467141, 9214, 466, 14, 152, "Output",ExpressionUUID->"18dd1d2f-7dc8-4d00-a74f-239dea9183d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[467644, 9233, 1244, 36, 162, "Input",ExpressionUUID->"c4244365-2888-4c67-8c5b-d0c2dbd304e8"],
Cell[468891, 9271, 158, 2, 89, "Output",ExpressionUUID->"9647ccda-693a-461c-98da-294f8edfbd7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469086, 9278, 446, 11, 87, "Input",ExpressionUUID->"d4edd3e8-9657-416c-aac4-2629e5d80354"],
Cell[469535, 9291, 442, 12, 116, "Output",ExpressionUUID->"0e204faa-184d-4de5-895b-c36cc3609d87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470014, 9308, 262, 5, 59, "Input",ExpressionUUID->"4e7036f9-ee90-4830-841d-1c4e26c8d83a"],
Cell[470279, 9315, 177, 3, 89, "Output",ExpressionUUID->"5042b882-036a-4c68-bf50-28e3284d8ca9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470493, 9323, 272, 5, 59, "Input",ExpressionUUID->"3334002d-5036-4f7d-bb28-b3ba34b7d7f5"],
Cell[470768, 9330, 178, 3, 89, "Output",ExpressionUUID->"7db1acfe-e7d4-428c-a561-313574f11a30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470983, 9338, 292, 6, 59, "Input",ExpressionUUID->"847f3647-9994-4375-9531-6fb3df4d449d"],
Cell[471278, 9346, 180, 3, 89, "Output",ExpressionUUID->"30d21415-4594-4203-9032-54f0280003ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471495, 9354, 237, 4, 59, "Input",ExpressionUUID->"9e38a477-94e6-4244-87bb-83cf427ce4dc"],
Cell[471735, 9360, 181, 3, 89, "Output",ExpressionUUID->"87332279-ce08-4954-a900-a77fcebc527b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471953, 9368, 499, 13, 89, "Input",ExpressionUUID->"8e59e34c-e040-4635-9638-466696c88065"],
Cell[472455, 9383, 500, 14, 119, "Output",ExpressionUUID->"553074df-7a46-479c-b090-f1e4a3cb54db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472992, 9402, 564, 16, 89, "Input",ExpressionUUID->"2dce743e-91fb-4cd3-b2b7-a0eb76e75091"],
Cell[473559, 9420, 705, 20, 119, "Output",ExpressionUUID->"27c8c7a0-6d2d-4e41-9477-d54587cf8a04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474301, 9445, 860, 25, 89, "Input",ExpressionUUID->"896b427f-c1a3-444d-9bc6-329df44cbd9e"],
Cell[475164, 9472, 882, 25, 119, "Output",ExpressionUUID->"c38a7ed7-7049-4564-8eb5-335f7fed840c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476083, 9502, 265, 5, 59, "Input",ExpressionUUID->"fa7082f4-0370-49fd-b22a-1378b23e948a"],
Cell[476351, 9509, 573, 15, 154, "Output",ExpressionUUID->"3bde6fda-a221-48bf-aa96-eaadf391227b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476961, 9529, 322, 7, 59, "Input",ExpressionUUID->"7f1b0663-c142-42d4-bc42-3f53cd844624"],
Cell[477286, 9538, 2799, 77, 513, "Output",ExpressionUUID->"9e0feae9-ae9e-4574-8e89-0eece178528f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480122, 9620, 299, 7, 59, "Input",ExpressionUUID->"794954a2-e0fd-40fc-ba75-f843dfabeecf"],
Cell[480424, 9629, 7722, 223, 512, "Output",ExpressionUUID->"0b705f14-ae69-472f-a7b6-99906dc25ed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488183, 9857, 550, 13, 142, "Input",ExpressionUUID->"bf0a7b11-faa1-41d1-be74-5caf96784748"],
Cell[488736, 9872, 1761, 36, 649, "Output",ExpressionUUID->"3d3e64e3-7a15-49ae-8eae-5f5a0f97d417"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490534, 9913, 1257, 35, 142, "Input",ExpressionUUID->"784c98ed-d19c-430c-b1fa-8694ba9d5635"],
Cell[491794, 9950, 62145, 1041, 531, "Output",ExpressionUUID->"71fa8556-aac4-4a95-8b71-2d5c726c016f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553976, 10996, 403, 9, 59, "Input",ExpressionUUID->"0fabe44a-8ed8-4e1f-a3dc-088a2fb6f566"],
Cell[554382, 11007, 354, 9, 45, "Message",ExpressionUUID->"18d0308f-8b34-4831-91ef-2f60c8f97fa2"],
Cell[554739, 11018, 432, 10, 45, "Message",ExpressionUUID->"0fd34fb9-7be3-4f3c-adc1-34f407443b79"],
Cell[555174, 11030, 414, 10, 45, "Message",ExpressionUUID->"f4c2e9da-7984-460d-8f49-b40fecda0fad"],
Cell[555591, 11042, 615, 15, 172, "Output",ExpressionUUID->"2af084c8-d551-4b2d-8bb8-58fe08cfc4ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556243, 11062, 655, 17, 164, "Input",ExpressionUUID->"5e60bd7b-8de7-4ab0-88dc-e42b7a96ed35"],
Cell[556901, 11081, 170, 3, 89, "Output",ExpressionUUID->"acaa37aa-10e3-4105-9bc4-12c1e302fb75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557108, 11089, 644, 17, 164, "Input",ExpressionUUID->"0bcab2a1-3f4f-41ef-96ac-73fec579dcbc"],
Cell[557755, 11108, 169, 3, 89, "Output",ExpressionUUID->"22b22277-1faa-4f4c-b448-e5fb1943785f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557961, 11116, 638, 16, 142, "Input",ExpressionUUID->"638a816f-6e4b-443d-8a8f-59076d25f882"],
Cell[558602, 11134, 169, 2, 89, "Output",ExpressionUUID->"6a0e06c4-96d6-4af5-bcd3-bc400a36cfe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558808, 11141, 671, 17, 142, "Input",ExpressionUUID->"33f72edc-2bf5-42c4-8b8e-757676a22981"],
Cell[559482, 11160, 2709, 72, 206, "Output",ExpressionUUID->"c69577e1-8bbb-4b0c-a68d-51018293ba27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562228, 11237, 266, 8, 81, "Input",ExpressionUUID->"b7f60158-5ba3-42cc-9b0a-6d33be81bda8"],
Cell[562497, 11247, 9658, 180, 509, "Output",ExpressionUUID->"53faf7ea-1ab9-45f4-9ac1-20274df82f1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572192, 11432, 232, 5, 81, "Input",ExpressionUUID->"767b9ab6-3744-4446-a3e2-e6668408640f"],
Cell[572427, 11439, 275, 10, 89, "Output",ExpressionUUID->"6b23381b-fdbc-4ad7-9de6-f52d7a1841af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572739, 11454, 445, 11, 81, "Input",ExpressionUUID->"8929584d-f86a-4e8c-82fe-848099aabb33"],
Cell[573187, 11467, 416, 10, 45, "Message",ExpressionUUID->"362cdb27-e082-40fe-845e-a8d212aba668"],
Cell[573606, 11479, 182, 4, 89, "Output",ExpressionUUID->"b95158ea-002f-402d-8b5c-45463d684541"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573825, 11488, 200, 4, 81, "Input",ExpressionUUID->"e3e31169-d47f-4c88-a110-827c2a1ec83c"],
Cell[574028, 11494, 153, 3, 89, "Output",ExpressionUUID->"e9ec0bb6-43d7-4d0c-a559-451b54b38f82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574218, 11502, 315, 8, 108, "Input",ExpressionUUID->"e02de9e0-7fe5-45ad-aaf2-9a4daf113a5e"],
Cell[574536, 11512, 415, 15, 121, "Output",ExpressionUUID->"e095d735-7170-4eac-953b-6ddfbea153ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574988, 11532, 344, 9, 108, "Input",ExpressionUUID->"f88396d9-9e34-45c0-8de7-f405fba35835"],
Cell[575335, 11543, 588, 22, 121, "Output",ExpressionUUID->"a35fdc74-aabc-496c-9e04-0a40729f27ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575960, 11570, 350, 9, 81, "Input",ExpressionUUID->"9955ab6e-4cf6-46ac-95ca-ee76f826f54e"],
Cell[576313, 11581, 9602, 187, 1320, "Output",ExpressionUUID->"70e2de76-5f63-420f-a87d-95b223cea058"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585952, 11773, 230, 4, 81, "Input",ExpressionUUID->"2ea7bb15-2218-4d21-a134-1a4a9a966542"],
Cell[586185, 11779, 769, 21, 154, "Output",ExpressionUUID->"a2248d41-74f0-4ef3-8b00-bfc8b68674f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[586991, 11805, 669, 19, 123, "Input",ExpressionUUID->"58ab3b62-ffc9-4cc7-8ebb-c3183ee1bd95"],
Cell[587663, 11826, 566, 16, 89, "Output",ExpressionUUID->"a8585667-c8a1-4088-ba9d-639b9b85b315"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588266, 11847, 851, 23, 146, "Input",ExpressionUUID->"9c296c47-f7b2-484d-afb8-23980259a153"],
Cell[589120, 11872, 903, 27, 131, "Output",ExpressionUUID->"639b32c1-b7f0-4ff3-9006-1d90afda90b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[590060, 11904, 257, 6, 81, "Input",ExpressionUUID->"d3d7db5b-b21e-4ef8-9a0e-1cb1f342968d"],
Cell[590320, 11912, 610922, 15464, 65384, "Output",ExpressionUUID->"92a0f538-05da-4079-ae54-271e758f9339"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1201279, 27381, 268, 6, 81, "Input",ExpressionUUID->"426996c0-3901-46ef-b073-e360e3348782"],
Cell[1201550, 27389, 242, 6, 89, "Output",ExpressionUUID->"7d2ffa2a-087d-417d-b219-36d66ecf1534"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1201829, 27400, 221, 4, 81, "Input",ExpressionUUID->"ab156ef9-851f-4061-ab9a-88edf3802f58"],
Cell[1202053, 27406, 741, 21, 154, "Output",ExpressionUUID->"279cc390-fbdf-4ee7-bc62-bf08f6135c33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1202831, 27432, 641, 19, 123, "Input",ExpressionUUID->"88c371fb-0fb3-48e1-934f-1094eee7b679"],
Cell[1203475, 27453, 539, 16, 89, "Output",ExpressionUUID->"73b7e529-4e17-4923-b941-2c63bf48ebd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1204051, 27474, 302, 7, 81, "Input",ExpressionUUID->"02cbc789-8034-4db7-be20-54ece2357450"],
Cell[1204356, 27483, 1139, 31, 154, "Output",ExpressionUUID->"6583ed92-ec25-43b0-87dd-78a6424d51f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1205532, 27519, 1037, 29, 164, "Input",ExpressionUUID->"995e62b1-30a9-4c59-ac71-b5265855d88e"],
Cell[1206572, 27550, 915, 26, 131, "Output",ExpressionUUID->"4fa96740-7093-4e7e-9d33-5cbc7d5ac853"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1207524, 27581, 207, 4, 81, "Input",ExpressionUUID->"9eb35403-506c-453e-a90c-33bcf50f1aa2"],
Cell[1207734, 27587, 182, 4, 89, "Output",ExpressionUUID->"5522b858-79d2-4906-81f0-4f501e37e85c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1207953, 27596, 305, 7, 81, "Input",ExpressionUUID->"90a8feca-2cdf-4a51-bf08-319eb12271db"],
Cell[1208261, 27605, 506, 15, 89, "Output",ExpressionUUID->"afc166d6-0cd2-47ce-b19b-886010cdd51a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1208804, 27625, 658, 20, 81, "Input",ExpressionUUID->"be2975f4-3b93-4086-a5e0-d10e5671cf50"],
Cell[1209465, 27647, 671, 21, 766, "Output",ExpressionUUID->"7d860a45-ba25-4e74-91a9-4c5a53d050be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1210173, 27673, 352, 9, 105, "Input",ExpressionUUID->"1bd904c8-0782-4dbc-89b5-52e5748ba8c1"],
Cell[1210528, 27684, 464, 17, 121, "Output",ExpressionUUID->"f88bd3e2-240d-40bb-98d1-021837d1506d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1211029, 27706, 676, 24, 123, "Input",ExpressionUUID->"dc906d1e-e0bb-4cd9-b60d-961478e1aae7"],
Cell[1211708, 27732, 60237, 999, 776, "Output",ExpressionUUID->"e179efe6-23c0-44cd-8bd6-cf110d93f0e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1271982, 28736, 338, 7, 81, "Input",ExpressionUUID->"d9169f18-eba3-46c5-a6fb-a9efb82ad6c3"],
Cell[1272323, 28745, 1637, 45, 216, "Output",ExpressionUUID->"3fe9c8a0-a9fb-4fb4-807b-508804d94eac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273997, 28795, 1535, 43, 205, "Input",ExpressionUUID->"c138af90-05b6-4b53-8743-c708d1b2e4d8"],
Cell[1275535, 28840, 1385, 40, 131, "Output",ExpressionUUID->"7626aecd-645c-4a26-8503-ea0593e364bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1276957, 28885, 1436, 41, 123, "Input",ExpressionUUID->"08f939b2-dae8-4a58-8072-d3e759aa1042"],
Cell[1278396, 28928, 1784, 51, 152, "Output",ExpressionUUID->"04eeb115-414c-46e3-998d-3db750993b8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1280217, 28984, 371, 8, 81, "Input",ExpressionUUID->"b59e7458-adf2-4feb-8b2f-9493e15660b2"],
Cell[1280591, 28994, 908, 25, 154, "Output",ExpressionUUID->"8579b8af-0fb3-4444-9d3a-ff217f1b1905"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1281536, 29024, 374, 9, 81, "Input",ExpressionUUID->"71879490-6fdf-4178-9073-57993a515849"],
Cell[1281913, 29035, 951, 26, 154, "Output",ExpressionUUID->"cad1eeb8-045d-427d-90dd-e448103bd8d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1282901, 29066, 414, 10, 81, "Input",ExpressionUUID->"45f8e755-37fc-4804-810c-f5c38dbac425"],
Cell[1283318, 29078, 950, 26, 154, "Output",ExpressionUUID->"f656f93f-b5d9-4d30-82d7-f567316a37ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1284305, 29109, 471, 12, 81, "Input",ExpressionUUID->"90e3e769-c48b-4436-8937-4f94669f8dc4"],
Cell[1284779, 29123, 357, 9, 45, "Message",ExpressionUUID->"4406cf0e-4eaf-496d-b66f-a2903a866a17"],
Cell[1285139, 29134, 1091, 30, 154, "Output",ExpressionUUID->"7a1d7fe6-f155-47a7-b6fa-3aaab785ec28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1286267, 29169, 450, 11, 81, "Input",ExpressionUUID->"0d055fda-a986-4278-8e39-91f66c4bac75"],
Cell[1286720, 29182, 1093, 31, 187, "Output",ExpressionUUID->"64bb110b-ea2b-45e8-9055-f7eece7c6de7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1287850, 29218, 277, 7, 81, "Input",ExpressionUUID->"51392d1e-9bd6-485a-9f9e-f7f5176b1999"],
Cell[1288130, 29227, 198, 5, 89, "Output",ExpressionUUID->"24819021-30a2-4697-914e-a673f65b81a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1288365, 29237, 258, 6, 81, "Input",ExpressionUUID->"05effc5c-cc72-4d68-b102-bfcc5228bd28"],
Cell[1288626, 29245, 272, 9, 119, "Output",ExpressionUUID->"83fbcc76-f49e-452f-a899-21ea87eff179"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1288935, 29259, 365, 11, 121, "Input",ExpressionUUID->"7b26c4c6-3bbe-4ef5-9d7a-579666fa38ec"],
Cell[1289303, 29272, 270, 9, 119, "Output",ExpressionUUID->"8289be2c-6510-403e-aab4-61c50df89696"]
}, Open  ]],
Cell[1289588, 29284, 201, 7, 99, "Input",ExpressionUUID->"87671e58-0fbd-495a-9ac2-4531faf00e0b"],
Cell[CellGroupData[{
Cell[1289814, 29295, 410, 13, 128, "Input",ExpressionUUID->"2c32adac-a7d1-458b-8e79-7c2f57db1b84"],
Cell[1290227, 29310, 156, 3, 89, "Output",ExpressionUUID->"cbaafede-2f6b-43db-b6b6-d5f661de05d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1290420, 29318, 336, 9, 81, "Input",ExpressionUUID->"2229fb7b-6bc9-43a6-8b45-4f5474ded66c"],
Cell[1290759, 29329, 382, 11, 89, "Output",ExpressionUUID->"4ede789b-5bdf-44d5-8a1f-bad7edcc3fc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1291178, 29345, 381, 11, 81, "Input",ExpressionUUID->"4e880291-ba92-4d90-8ab8-516e367ea014"],
Cell[1291562, 29358, 1195, 38, 134, "Output",ExpressionUUID->"60b688b1-0ce2-4ddc-bac9-2578e8c22f3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1292794, 29401, 687, 21, 123, "Input",ExpressionUUID->"05f6c7e4-9b4c-47c5-91a2-650e412111c8"],
Cell[1293484, 29424, 1043, 34, 134, "Output",ExpressionUUID->"11d96911-78a5-4ca6-a5fe-ce2e632b4802"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1294564, 29463, 1181, 36, 137, "Input",ExpressionUUID->"a3244734-837d-4090-b400-67111f0e4823"],
Cell[1295748, 29501, 1080, 34, 125, "Output",ExpressionUUID->"4a3b9db4-d914-4293-8e9e-8ee805e43862"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1296865, 29540, 1245, 37, 137, "Input",ExpressionUUID->"e3749b3e-1a00-4006-9d50-633110517ab7"],
Cell[1298113, 29579, 1001, 32, 125, "Output",ExpressionUUID->"9e106f7f-a0cf-4f9f-b11c-e0f824f9c7e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1299151, 29616, 1308, 38, 137, "Input",ExpressionUUID->"9ad23b73-aa04-4f42-8b0c-360be0832480"],
Cell[1300462, 29656, 1062, 34, 125, "Output",ExpressionUUID->"b3d8a342-3b77-4f70-9fcf-74b59009755c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1301561, 29695, 1302, 41, 125, "Input",ExpressionUUID->"55ec4b00-5900-47fc-be43-ed9568b764f9"],
Cell[1302866, 29738, 378, 9, 45, "Message",ExpressionUUID->"bdae361d-e254-42c8-9b95-d4426c0e36bc"],
Cell[1303247, 29749, 1326, 41, 125, "Output",ExpressionUUID->"803c51c3-0b02-49bc-ae23-bd7a3e1f50d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1304610, 29795, 1151, 35, 125, "Input",ExpressionUUID->"48283e7e-9007-46f8-b238-b3e04834eaac"],
Cell[1305764, 29832, 1061, 34, 125, "Output",ExpressionUUID->"99c23bb1-a7c6-4485-b987-e3c63b31db2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306862, 29871, 777, 24, 125, "Input",ExpressionUUID->"f0a98955-44a6-4361-a1cc-1cdfd90726e9"],
Cell[1307642, 29897, 156, 3, 89, "Output",ExpressionUUID->"0cd1c10d-9a60-4d22-a213-7ae0e7b80e18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1307835, 29905, 1150, 35, 125, "Input",ExpressionUUID->"bbd632de-17c1-4bba-8cdd-b95a0a55133a"],
Cell[1308988, 29942, 156, 3, 89, "Output",ExpressionUUID->"edb4492c-7c68-473f-a454-49da62de02ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1309181, 29950, 210, 4, 81, "Input",ExpressionUUID->"02275549-aca2-4cdc-9e25-eacd21bfa280"],
Cell[1309394, 29956, 170, 4, 89, "Output",ExpressionUUID->"32ed5690-edd9-49f4-9d9e-5a6d1ecd1e1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1309601, 29965, 233, 5, 81, "Input",ExpressionUUID->"2d54c887-7c46-4280-ad82-89e832800340"],
Cell[1309837, 29972, 170, 4, 89, "Output",ExpressionUUID->"d8bcf527-a77a-4ef3-9344-c6224ce1d31b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1310044, 29981, 1215, 36, 125, "Input",ExpressionUUID->"0f793217-e7ef-454c-8f03-5d8088b53740"],
Cell[1311262, 30019, 1323, 41, 125, "Output",ExpressionUUID->"b4acff45-ad60-439a-82c4-915b1f43c075"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1312622, 30065, 340, 7, 81, "Input",ExpressionUUID->"e873da46-8d49-41e4-add0-a75a53491dcb"],
Cell[1312965, 30074, 1634, 45, 216, "Output",ExpressionUUID->"6eec3c42-12c1-4cf3-8d8a-1c75ec3e5cf3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1314636, 30124, 381, 9, 81, "Input",ExpressionUUID->"5229d78e-975e-434e-a246-e9877b3274f3"],
Cell[1315020, 30135, 906, 25, 154, "Output",ExpressionUUID->"2c9d07dc-b762-4ebb-b195-f3bb7b704dd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1315963, 30165, 806, 23, 164, "Input",ExpressionUUID->"bb131092-1d86-4a48-9fe2-787edd3d24b0"],
Cell[1316772, 30190, 696, 20, 89, "Output",ExpressionUUID->"ddce7065-98a0-4330-9927-344b20478d99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1317505, 30215, 732, 22, 81, "Input",ExpressionUUID->"9cdd0cb8-d572-42d7-922e-be7b2c010401"],
Cell[1318240, 30239, 1076, 31, 152, "Output",ExpressionUUID->"1a6bf8d0-c55c-4045-ab3a-1c7fc49fe30e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1319353, 30275, 517, 13, 162, "Input",ExpressionUUID->"fd577889-1efd-44c8-a932-4a0c5ef32344"],
Cell[1319873, 30290, 1018, 35, 184, "Output",ExpressionUUID->"e34708dd-375c-44bb-85ca-787d0c74fab2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1320928, 30330, 210, 4, 81, "Input",ExpressionUUID->"94fb9da0-54c0-437e-a860-165b5071f7d6"],
Cell[1321141, 30336, 924, 31, 184, "Output",ExpressionUUID->"b2f95523-aa89-479b-a9f0-2ae798af5d4b"]
}, Open  ]],
Cell[1322080, 30370, 178, 4, 59, "Input",ExpressionUUID->"5bb2551b-631a-4a72-9c3a-99dbbc86afca"],
Cell[CellGroupData[{
Cell[1322283, 30378, 584, 15, 162, "Input",ExpressionUUID->"c40014c2-02c9-4890-9bf9-5cd8522c8e36"],
Cell[1322870, 30395, 688, 22, 166, "Output",ExpressionUUID->"31ee0ed4-0df5-432d-9689-0ca31c6a1f06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1323595, 30422, 810, 26, 166, "Input",ExpressionUUID->"039e88b3-f6fc-4a92-8047-ac906d561556"],
Cell[1324408, 30450, 259, 8, 95, "Output",ExpressionUUID->"e1308f88-f700-403b-9514-2cbf9005f455"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1324704, 30463, 390, 13, 96, "Input",ExpressionUUID->"0138f1e1-9128-4680-8187-563d055f524c"],
Cell[1325097, 30478, 1627, 39, 920, "Output",ExpressionUUID->"7da36f80-2f5b-4500-8aba-9e565c89511c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1326761, 30522, 841, 27, 166, "Input",ExpressionUUID->"b5f5229a-6863-430b-b69f-6d4325ddd2d1"],
Cell[1327605, 30551, 498, 18, 95, "Output",ExpressionUUID->"58bb97f1-a3a4-4a6d-ba5c-7131b21707bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1328140, 30574, 710, 25, 96, "Input",ExpressionUUID->"72b725a2-d01f-430c-a9cf-a37a824aab20"],
Cell[1328853, 30601, 60249, 999, 768, "Output",ExpressionUUID->"cbd4428c-067b-40ed-80e0-1045826efda8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1389139, 31605, 246, 5, 105, "Input",ExpressionUUID->"0ac2e7fb-a656-4b1f-abbe-0bfed8789162"],
Cell[1389388, 31612, 778, 25, 182, "Output",ExpressionUUID->"fa375dd9-f1de-45b4-a679-4eae12a93d9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1390203, 31642, 939, 30, 186, "Input",ExpressionUUID->"d06d6b42-0b36-42e5-ad32-7b5ab145a3a1"],
Cell[1391145, 31674, 464, 17, 121, "Output",ExpressionUUID->"6a804bb4-db18-4034-a3cb-1e683fafdc02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1391646, 31696, 1278, 42, 297, "Input",ExpressionUUID->"370ac397-55d1-4686-95f1-2f3973b00149"],
Cell[1392927, 31740, 119743, 1976, 768, "Output",ExpressionUUID->"f1eb5298-9df6-4d0e-b22b-1ea702b71025"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1512707, 33721, 51667, 868, 231, "Input",ExpressionUUID->"1cad9238-a889-46e5-b7cd-a05bf905bc10"],
Cell[1564377, 34591, 48803, 810, 698, "Output",ExpressionUUID->"c6c95d5e-5e63-443b-a99c-d8337ef43dc9"]
}, Open  ]],
Cell[1613195, 35404, 470, 14, 81, "Input",ExpressionUUID->"f1d834b0-da5b-43b7-9a6b-7950548d0723"],
Cell[CellGroupData[{
Cell[1613690, 35422, 316, 7, 81, "Input",ExpressionUUID->"49c9305e-4d3d-49fe-a82f-882e8b35feab"],
Cell[1614009, 35431, 911, 18, 788, "Output",ExpressionUUID->"d02faf37-38d4-42a4-95af-557fb662be6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1614957, 35454, 342, 9, 81, "Input",ExpressionUUID->"9990ba5f-4548-4c76-8d4f-1982c967b50d"],
Cell[1615302, 35465, 553, 20, 89, "Output",ExpressionUUID->"773cd8e0-856b-4b5d-a86b-e4e9e0549436"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1615892, 35490, 435, 11, 81, "Input",ExpressionUUID->"faf96dfe-dfc6-4c8f-9aba-5be3a0bcbdd7"],
Cell[1616330, 35503, 93667, 1537, 479, "Output",ExpressionUUID->"c7db4b9d-2f37-4b18-90ca-77d5b8fb1f69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1710034, 37045, 219, 4, 81, "Input",ExpressionUUID->"c13ec830-b92e-43bf-8e64-1bfd2b5dabab"],
Cell[1710256, 37051, 511, 11, 45, "Message",ExpressionUUID->"5b1ae34c-bbaf-4091-bdd1-d99db35b89cd"],
Cell[1710770, 37064, 194, 4, 89, "Output",ExpressionUUID->"75ac8abc-96b4-4eac-9aeb-91c3fd81fed7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1711001, 37073, 217, 4, 81, "Input",ExpressionUUID->"e1934c21-852a-4e71-82fe-42da2e244028"],
Cell[1711221, 37079, 220, 5, 89, "Output",ExpressionUUID->"ed22bec4-06d2-483f-ab75-4327e05475ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1711478, 37089, 345, 9, 81, "Input",ExpressionUUID->"0f9cba08-2872-498e-9b7d-fb94540c56b4"],
Cell[1711826, 37100, 320, 9, 89, "Output",ExpressionUUID->"da42a6f5-7db7-4704-81ab-c296fe0fa668"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1712183, 37114, 463, 13, 81, "Input",ExpressionUUID->"526c3f95-0c0c-47b3-bfd5-1532a25bfa81"],
Cell[1712649, 37129, 751, 14, 78, "Message",ExpressionUUID->"de9cba85-e691-4ce8-8337-75158be89a63"],
Cell[1713403, 37145, 431, 13, 89, "Output",ExpressionUUID->"ab1636d9-b7cc-47b4-bbed-d870bec225dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1713871, 37163, 478, 13, 81, "Input",ExpressionUUID->"4d904ea4-3fed-43f7-95ff-5d837b84d493"],
Cell[1714352, 37178, 814, 15, 78, "Message",ExpressionUUID->"e1de950e-23c4-4800-91ab-c84c46343cb9"],
Cell[1715169, 37195, 443, 13, 89, "Output",ExpressionUUID->"ca25c281-d779-4f7c-a43d-ae3af7b752eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1715649, 37213, 778, 22, 123, "Input",ExpressionUUID->"500e333e-4ea7-43cf-b240-a7f894d8d52d"],
Cell[1716430, 37237, 1336, 41, 208, "Output",ExpressionUUID->"41d696a1-3770-4280-a619-989e58bc8c90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1717803, 37283, 605, 17, 81, "Input",ExpressionUUID->"c875b7b9-6e6b-4b05-bf88-a44530bc7c98"],
Cell[1718411, 37302, 1360, 41, 208, "Output",ExpressionUUID->"f20117ba-1143-4790-9bbc-07bfab925a12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1719808, 37348, 496, 14, 81, "Input",ExpressionUUID->"ef1dc464-21ac-4115-99a5-dc357102c1ad"],
Cell[1720307, 37364, 1100, 34, 199, "Output",ExpressionUUID->"9ecaec3c-f8ed-46e5-8ace-e4c01d1694c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1721444, 37403, 1143, 35, 209, "Input",ExpressionUUID->"8071a631-8c7a-4133-9ae1-9966622c9541"],
Cell[1722590, 37440, 1133, 34, 176, "Output",ExpressionUUID->"18cef4eb-497b-486c-9caf-eb8f3df05077"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1723760, 37479, 265, 6, 81, "Input",ExpressionUUID->"7c37da71-ec7a-443b-ac23-2d16410287b9"],
Cell[1724028, 37487, 636, 18, 147, "Output",ExpressionUUID->"5ca2151d-09d2-4a0a-b8e5-4be978b74bbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1724701, 37510, 668, 19, 151, "Input",ExpressionUUID->"c52ef181-b88e-40a1-8ccd-52851a0e252e"],
Cell[1725372, 37531, 643, 19, 147, "Output",ExpressionUUID->"2fd219f3-f283-48b0-92ee-ec6def112700"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1726052, 37555, 655, 19, 81, "Input",ExpressionUUID->"b0e8a745-a149-4cf7-9c08-290fbe6d27e4"],
Cell[1726710, 37576, 396, 10, 77, "Message",ExpressionUUID->"7db5bdb3-03b0-4f6f-9ec9-6d3beb16e891"],
Cell[1727109, 37588, 396, 10, 77, "Message",ExpressionUUID->"93b3aab3-b2c2-496f-a8b0-5185496c85db"],
Cell[1727508, 37600, 396, 10, 77, "Message",ExpressionUUID->"13da985d-9e2d-4624-be14-70d4d4f902d2"],
Cell[1727907, 37612, 445, 10, 45, "Message",ExpressionUUID->"f9924459-310a-49af-844b-139f3396a9a9"],
Cell[1728355, 37624, 448, 10, 45, "Message",ExpressionUUID->"a6275e64-7445-4707-800d-2ddc6f66a96b"],
Cell[1728806, 37636, 164, 3, 89, "Output",ExpressionUUID->"ff4df042-eea4-4c64-8d23-50cebb4ddfff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1729007, 37644, 431, 13, 81, "Input",ExpressionUUID->"ed5d60f3-257d-4798-81e3-9f795934d58b"],
Cell[1729441, 37659, 1100, 34, 199, "Output",ExpressionUUID->"adbaeeb9-2375-4160-85ab-672b5da2d44f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1730578, 37698, 651, 19, 81, "Input",ExpressionUUID->"9c4ead76-9167-41ce-ac72-c29f2191fda6"],
Cell[1731232, 37719, 620, 19, 176, "Output",ExpressionUUID->"825405fe-3dcc-45f5-9dbc-5dc8e82a0d64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1731889, 37743, 648, 20, 183, "Input",ExpressionUUID->"a48604ee-735e-4a96-bcd7-b1e602540954"],
Cell[1732540, 37765, 617, 19, 176, "Output",ExpressionUUID->"5d680f23-60c8-441d-9615-a47e94b285b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1733194, 37789, 695, 20, 81, "Input",ExpressionUUID->"5d3f18a7-6c78-40d7-ac38-6ca8914bb586"],
Cell[1733892, 37811, 415, 13, 129, "Output",ExpressionUUID->"322ed033-93b1-4904-bc1e-e9c94177bed6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1734344, 37829, 720, 23, 130, "Input",ExpressionUUID->"7ecf7506-1d09-4fe6-a7d9-c83e3958de09"],
Cell[1735067, 37854, 72731, 1195, 624, "Output",ExpressionUUID->"04e8ed5a-af12-4ab0-b384-c5aea2f55191"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1807835, 39054, 718, 23, 130, "Input",ExpressionUUID->"bca2b5d5-b32d-4989-b112-da6df0e5b4ce"],
Cell[1808556, 39079, 104735, 1719, 536, "Output",ExpressionUUID->"45fb538c-d170-4316-8a3c-238d3095a319"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1913328, 40803, 559, 17, 130, "Input",ExpressionUUID->"734291c4-8a66-49cd-a966-65460e9f1050"],
Cell[1913890, 40822, 888, 29, 129, "Output",ExpressionUUID->"2a110d30-1e64-431b-87a4-633f463526b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1914815, 40856, 1138, 35, 130, "Input",ExpressionUUID->"8d7d03b8-8fb7-4888-b66e-b2d3e1545546"],
Cell[1915956, 40893, 256959, 4387, 759, 127306, 2261, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"96ec0902-10d1-4b82-b6f5-e10e5dae85ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2172952, 45285, 563, 17, 130, "Input",ExpressionUUID->"0dd1229c-cb55-4121-a862-62061efa40f2"],
Cell[2173518, 45304, 660, 13, 94, "Message",ExpressionUUID->"d9f0a548-91b0-46ad-bcb9-13883d73b410"],
Cell[2174181, 45319, 521, 15, 129, "Output",ExpressionUUID->"f2c07908-a9e3-4e65-98d7-02b75e72688a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2174739, 45339, 560, 17, 130, "Input",ExpressionUUID->"eedb2ffe-f3fa-43d0-8a0c-c42214890ad4"],
Cell[2175302, 45358, 858, 28, 129, "Output",ExpressionUUID->"296b9fa6-7e03-4011-af48-754b3edb1354"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2176197, 45391, 1085, 34, 130, "Input",ExpressionUUID->"ac710869-0d5d-4d86-8980-c4e314b95c7c"],
Cell[2177285, 45427, 94416, 1679, 759, "Output",ExpressionUUID->"dc4b547c-3d88-4c1d-9255-44abb69976e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2271738, 47111, 378, 11, 87, "Input",ExpressionUUID->"5fe71072-6607-4703-a22a-c5166c13dbe8"],
Cell[2272119, 47124, 177, 4, 89, "Output",ExpressionUUID->"90bb0f1a-60f3-4545-83e6-53e9126dcd98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2272333, 47133, 333, 10, 81, "Input",ExpressionUUID->"7361f6cd-73da-4507-bac7-e3df142b7a0c"],
Cell[2272669, 47145, 3261, 72, 502, "Output",ExpressionUUID->"000abb14-c602-423a-8f63-6ec1843748fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2275967, 47222, 570, 17, 130, "Input",ExpressionUUID->"70f119db-abb2-4e63-a084-a4a8c1a82c7b"],
Cell[2276540, 47241, 1122, 38, 129, "Output",ExpressionUUID->"d2b16723-fdb9-4c3c-8ef6-9da0f55884b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2277699, 47284, 1477, 48, 190, "Input",ExpressionUUID->"c338432e-a6a5-4da0-bc5f-859d6047fb8f"],
Cell[2279179, 47334, 73838, 1216, 344, "Output",ExpressionUUID->"8ed492e7-f1dc-40be-b4da-c4f6c465fe22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2353054, 48555, 1470, 48, 130, "Input",ExpressionUUID->"a9b1ad15-9251-4860-9661-c8d8142edf7b"],
Cell[2354527, 48605, 106144, 1750, 296, "Output",ExpressionUUID->"ee638f64-4b28-440c-86e0-7bfd6acd16de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2460708, 50360, 1470, 48, 130, "Input",ExpressionUUID->"c29ed6ec-45c5-4eed-8589-e1352066e632"],
Cell[2462181, 50410, 105424, 1729, 421, "Output",ExpressionUUID->"906f82c5-1035-4bdc-aae4-8722941ad4c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2567642, 52144, 424, 12, 81, "Input",ExpressionUUID->"6b5e83ba-8889-499f-8aae-d811894e8168"],
Cell[2568069, 52158, 651, 23, 89, "Output",ExpressionUUID->"569ce755-fa87-4c29-80cd-e8943a735dd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2568757, 52186, 948, 33, 87, "Input",ExpressionUUID->"885d9c72-2efd-430f-90f8-19e5d9bd30d3"],
Cell[2569708, 52221, 972, 33, 94, "Output",ExpressionUUID->"0332d303-604f-48a9-85f0-b8beb0030593"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2570717, 52259, 348, 9, 81, "Input",ExpressionUUID->"12351251-1285-4ed2-bdd4-6bd4c65ec385"],
Cell[2571068, 52270, 307, 8, 89, "Output",ExpressionUUID->"1548d2d9-d593-462d-9d56-e07f952e8933"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2571412, 52283, 438, 13, 81, "Input",ExpressionUUID->"d050793b-da98-4b40-b823-011767eefa19"],
Cell[2571853, 52298, 506, 15, 95, "Output",ExpressionUUID->"13e6d2c0-6f43-4d96-a0fd-f5f005e6ef4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2572396, 52318, 352, 9, 111, "Input",ExpressionUUID->"014d122c-d37f-4a11-9456-6b1b1843e7c5"],
Cell[2572751, 52329, 173, 4, 110, "Output",ExpressionUUID->"daad8f1c-95a8-4934-bae3-3d62a2c0cc77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2572961, 52338, 252, 5, 81, "Input",ExpressionUUID->"14aebe8b-d87a-4ba1-90bd-f1d0323f6412"],
Cell[2573216, 52345, 153, 3, 123, "Output",ExpressionUUID->"17e2b274-9ce0-4af0-a633-9c26003a7f36"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

