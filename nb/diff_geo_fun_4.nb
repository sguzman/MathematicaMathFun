(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2757229,      52555]
NotebookOptionsPosition[   2739438,      52252]
NotebookOutlinePosition[   2739772,      52267]
CellTagsIndexPosition[   2739729,      52264]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<Plane\>\"", ",", "\"\<ParametricEquations\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771720032425523*^9, 3.771720037907319*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6ef904f7-dddc-42c9-bb94-1250d76a5a4d"],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]], "Output",
 CellChangeTimes->{3.771720039869681*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"36da33d6-77ce-498e-9e0e-6244e961050b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<Sphere\>\"", ",", "\"\<ParametricEquations\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.77172003914895*^9, 3.77172004479037*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"f7c477e4-2032-4d36-83df-d706d2381853"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalA]", ",", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
     RowBox[{"\[FormalA]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.771720045056713*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"9d5e63c5-a73b-43ac-8d11-18ef5f7669f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{"\[FormalA]", ",", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
         RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], "]"}],
   "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.771720050707264*^9, 3.771720050922945*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d4878a9d-19c6-42f5-a5ef-4110eb32b709"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
   RowBox[{"1", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[FormalU]$", "]"}], " ", 
       RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "\[FormalU]$", "]"}], " ", 
       RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}], ",", 
      RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], "}"}]}]}], "]"}]], "Output",\

 CellChangeTimes->{3.771720051193829*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"57ea61b9-2bfe-4bb2-a071-9686bf33b101"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
    RowBox[{"1", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[FormalU]$", "]"}], " ", 
        RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "\[FormalU]$", "]"}], " ", 
        RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}], ",", 
       RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], "}"}]}]}], "]"}], "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.77172005809121*^9, 3.771720059163027*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"015320e1-3a65-4f4e-a0cd-95470b396788"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "u", "]"}], " ", 
    RowBox[{"Sin", "[", "v", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Sin", "[", "u", "]"}], " ", 
    RowBox[{"Sin", "[", "v", "]"}]}], ",", 
   RowBox[{"Cos", "[", "v", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771720059447394*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"c30ce782-44e7-4c19-a4c7-5eddb4aad04c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
   RowBox[{"a", " ", "q"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v", ",", "0"}], "}"}]}], ",", 
    RowBox[{"q", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "u", "]"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], ",", 
       RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.77172007218747*^9, 3.771720092585785*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"dfcaa9fe-145b-42ea-ba96-6fdae19af5cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", "u"}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "u", "]"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", "v"}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Sin", "[", "u", "]"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
   RowBox[{"a", " ", 
    RowBox[{"Cos", "[", "v", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7717200946741457`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"cdd4fb34-c128-484f-a40d-987923d3e117"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", "u"}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", "v"}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
       RowBox[{"a", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77172010296723*^9, 3.771720133357312*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ef73c974-922c-4a7b-9a8e-204996d3af62"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.936, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {1141., {556., 562.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$5417$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$5417$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[{(
           1 - $CellContext`a$$) $CellContext`u + $CellContext`a$$ 
          Cos[$CellContext`u] 
          Sin[$CellContext`v], (
           1 - $CellContext`a$$) $CellContext`v + $CellContext`a$$ 
          Sin[$CellContext`u] Sin[$CellContext`v], $CellContext`a$$ 
         Cos[$CellContext`v]}, {$CellContext`u, 0, 2 Pi}, {$CellContext`v, 0, 
         2 Pi}], "Specifications" :> {{$CellContext`a$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1188., {600., 607.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.771720133763668*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"2acc06f9-e3b3-45b5-8fdf-b2b3986c405a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.771720231566401*^9, 3.771720232748591*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"3315b124-7d51-4f56-8d9e-289bcfaec0ac"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","timeout",
   "\"A network operation for \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) timed \
out. Please try again later.\"",2,7,1,25094795624261950479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7717202530753098`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"84ca872c-50e5-4fcf-a022-0a70b1f5186d"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","outdcache","\"Using potentially outdated cached values.\"",2,
   7,2,25094795624261950479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771720253182828*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"a143ff93-ac1a-4654-983c-7744bd690a42"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","timeout",
   "\"A network operation for \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) timed \
out. Please try again later.\"",2,7,3,25094795624261950479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771720273293433*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"0cbd71f2-4614-43a0-80f3-38ef60346537"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"Barth decic surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BarthDecic\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BarthDecic\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Barth sextic surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BarthSextic\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BarthSextic\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Berg surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BergSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BergSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"buggle surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BuggleSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BuggleSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"calypso surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CalypsoSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CalypsoSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"calyx surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CalyxSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CalyxSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"capsule\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Capsule\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Capsule\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cassini surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CassiniSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CassiniSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"Cayley cubic (Hunt parametrization)\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CayleyCubic1\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CayleyCubic1\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"Cayley cubic (Endra\[SZ] parametrization)\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CayleyCubic2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CayleyCubic2\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hessian of the Cayley cubic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CayleyCubicHessian\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CayleyCubicHessian\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{
    "\"Banchoff's Chmutov\[Hyphen]like surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ChmutovBanchoffSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ChmutovBanchoffSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"citrus surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CitrusSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CitrusSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Clebsch diagonal cubic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ClebschDiagonalCubic\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ClebschDiagonalCubic\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"columpius surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ColumpiusSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ColumpiusSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"closed cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ConeClosed\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ConeClosed\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"corner cushion surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CornerCushionSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CornerCushionSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"crixxi surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrixxiSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CrixxiSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cross surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrossSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CrossSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cube surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CubeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CubeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cuboid surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CuboidSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CuboidSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cushion surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CushionSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CushionSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"closed cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CylinderClosed\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CylinderClosed\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
       "]"}],"\"Entity[\\\"Surface\\\", \\\"CylindricalSegmentHorizontal\\\"]\
\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"daisy surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DaisySurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DaisySurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"dance surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DanceSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DanceSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"date surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DateSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DateSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"dervish surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DervishSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DervishSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"diabolo surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DiaboloSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DiaboloSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"dromedary surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DromedarySurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DromedarySurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticHyperboloid1Sheeted\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"two\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid2Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticHyperboloid2Sheeted\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"first Endra\[SZ] octic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EndrassOctic1\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EndrassOctic1\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"second Endra\[SZ] octic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EndrassOctic2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EndrassOctic2\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"eve surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EveSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EveSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"fanfare surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"FanfareSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"FanfareSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"flirt surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"FlirtSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"FlirtSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"second funnel surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"FunnelSurface2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"FunnelSurface2\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"geisha surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"GeishaSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"GeishaSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Goursat surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"GoursatSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"GoursatSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"harlequin surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HarlequinSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HarlequinSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Taubin's heart surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HeartSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HeartSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"heaven\[Hyphen]and\[Hyphen]hell surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HeavenAndHellSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HeavenAndHellSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"helix surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HelixSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HelixSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Herz surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HerzSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HerzSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hunt surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HuntSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HuntSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicCylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicCylinder\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Eist\[UDoubleDot]te surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"IceBagSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"IceBagSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",
     RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
     RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Klein quartic surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KleinQuarticSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KleinQuarticSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"kolibri surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KolibriSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KolibriSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Labs septic surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LabsSeptic\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LabsSeptic\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Leopold surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LeopoldSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LeopoldSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"lim\[ATilde]o surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LimaoSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LimaoSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"lip surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LipSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LipSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"meow surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MeowSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MeowSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Michelangelo surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MichelangeloSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MichelangeloSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"miter surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MiterSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MiterSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"mushroom surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MushroomSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MushroomSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nepali surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"NepaliSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"NepaliSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nordstrand weird surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"NordstrandWeirdSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"NordstrandWeirdSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"oloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Oloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Oloid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"peninsula surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PeninsulaSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PeninsulaSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"pigeon surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PigeonSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PigeonSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"pipe surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PipeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PipeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"piriform surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PiriformSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PiriformSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"plane\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Plane\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Plane\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"plop surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PlopSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PlopSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"saddle surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SaddleSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SaddleSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sarti dodecic surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SartiDodecic\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SartiDodecic\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"sea horse surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SeahorseSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SeahorseSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"see\[Hyphen]through surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SeeThroughSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SeeThroughSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"snowflake surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SnowflakeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SnowflakeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"solitude surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SolitudeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SolitudeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"spitz surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SpitzSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SpitzSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"square pyramid surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SquarePyramidSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SquarePyramidSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"star surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"StarSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"StarSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Steiner type\[Hyphen]2 surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SteinerSurfaceType2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SteinerSurfaceType2\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Steiner type\[Hyphen]4 surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SteinerSurfaceType4\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SteinerSurfaceType4\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"2\[Hyphen]cylinder Steinmetz configuration\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Steinmetz2Cylinders\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Steinmetz2Cylinders\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"3\[Hyphen]cylinder Steinmetz configuration\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Steinmetz3Cylinders\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Steinmetz3Cylinders\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"subway surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SubwaySurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SubwaySurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"superegg\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Superegg\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Superegg\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"superellipsoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Superellipsoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Superellipsoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"tanglecube\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Tanglecube\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Tanglecube\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"thistle surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ThistleSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ThistleSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"tobel surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"TobelSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"TobelSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Togliatti surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"TogliattiSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"TogliattiSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"tooth surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ToothSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ToothSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"torispherical dome\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"TorisphericalDome\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"TorisphericalDome\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"twilight surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"TwilightSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"TwilightSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"two\[Hyphen]holed surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"TwoHoledSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"TwoHoledSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"vis-\[AGrave]-vis surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"VisAVisSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"VisAVisSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"waggle surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WaggleSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WaggleSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"wigwam surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WigwamSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WigwamSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"wind tunnel surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WindTunnelSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WindTunnelSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"xano surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"XanoSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"XanoSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"zeppelin surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ZeppelinSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ZeppelinSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.771720366684997*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"21b16bb4-c27a-4331-aeed-97c95c902fb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<AstroidalEllipsoid\>\"", ",", "\"\<Image\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771720460244309*^9, 3.7717204713515587`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"dfed8ea7-5151-4657-8d38-61259894c299"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","timeout",
   "\"A network operation for \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) timed \
out. Please try again later.\"",2,8,4,25094795624261950479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77172049199619*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"a66a2e98-80f2-45f7-acca-642bd1e9a72c"],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"RetrievalFailure\"\>", "]"}]], "Output",
 CellChangeTimes->{3.771720492013291*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"4e5304e7-879d-486a-9441-20610b7cc47f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<AstroidalEllipsoid\>\"", ",", "\"\<ParametricEquations\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771720503532207*^9, 3.771720505871542*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"65953c82-2c25-4ab0-8e84-9a397a7445de"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","timeout",
   "\"A network operation for \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) timed \
out. Please try again later.\"",2,9,5,25094795624261950479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771720526207343*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"b2aa8411-6366-42e9-b350-5d02b5e0b9e8"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue","outdcache","\"Using potentially outdated cached values.\"",2,
   9,6,25094795624261950479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7717205262188387`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"b066cb4f-1cc1-474a-a9d6-12f781313bc1"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], ",", 
   
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      " ", 
      SuperscriptBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
          RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
          RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
         RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.771720526226508*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"561014d8-ca8c-4fa1-a8c6-3c4a256d0761"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "=", "p"}], ",", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
    RowBox[{"a", " ", "q"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7717205238282537`*^9, 3.7717205518451567`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"697912eb-92bf-4694-abb8-eab6d25ea77b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", "p"}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "u", "]"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", "p"}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Sin", "[", "u", "]"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", "p"}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "v", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771720554263792*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"2b86d142-c59e-4ff3-a805-1fb65e38ec9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], ",", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], "]"}]}],
    "]"}], "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717205631966476`*^9, 3.771720564180039*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"560cf91a-98d1-429a-b5ba-55ac981bdb58"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], " ", 
    SuperscriptBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[FormalU]$", "]"}], " ", 
        RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "\[FormalU]$", "]"}], " ", 
        RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], ",", 
       RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}], "}"}], "3"]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.7717205645315228`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"3e978886-62e8-411b-85da-a5e84c063794"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], " ", 
     SuperscriptBox[
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[FormalU]$", "]"}], " ", 
         RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "\[FormalU]$", "]"}], " ", 
         RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], ",", 
        RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}], "}"}], "3"]}]}], "]"}], 
  "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717205886364317`*^9, 3.7717205894838657`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"a81b5450-75fb-4f6e-ab29-7cf89677df18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "v", "]"}], "3"]}], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "u", "]"}], "3"]}], ",", 
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "v", "]"}], "3"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7717205897858353`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"a5387e4e-615f-46cf-9bdd-d8ac36432c86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], ",", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], "]"}]}],
    "]"}], "[", 
  RowBox[{"1", ",", "1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717205823960876`*^9, 3.771720583467752*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"996c0821-f24f-4a44-a2e6-22863ee71e27"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], " ", 
    SuperscriptBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[FormalU]$", "]"}], " ", 
        RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "\[FormalU]$", "]"}], " ", 
        RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], ",", 
       RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}], "}"}], "3"]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.771720583864296*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8c2871be-e0f8-464a-8860-c35236b826e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"]}], ",", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "u", "]"}], "3"]}], ",", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "3"]}]}], "}"}]}], ",", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
    RowBox[{"a", " ", "q"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.771720596021082*^9, 3.77172059619239*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"f2bb5b05-a2df-4fb0-92ad-156b139c0324"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "v", "]"}], "3"]}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "u", "]"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "u", "]"}], "3"]}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Sin", "[", "u", "]"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "v", "]"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "v", "]"}], "3"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771720601467499*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"7a91654a-8c0e-4df1-bdf3-5fb0f7ad53be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "u", "]"}], "3"]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "3"]}]}]}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77172060892418*^9, 3.771720640420274*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"9d2753c6-6372-439e-a1b8-48ce75a16a53"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.008, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {559., {773., 779.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$19333$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$19333$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[{(1 - $CellContext`a$$) Cos[$CellContext`u]^3 
          Cos[$CellContext`v]^3 + $CellContext`a$$ Cos[$CellContext`u] 
          Sin[$CellContext`v], 
         2 (1 - $CellContext`a$$) Cos[$CellContext`v]^3 
          Sin[$CellContext`u]^3 + $CellContext`a$$ Sin[$CellContext`u] 
          Sin[$CellContext`v], $CellContext`a$$ Cos[$CellContext`v] + 
         3 (1 - $CellContext`a$$) Sin[$CellContext`v]^3}, {$CellContext`u, 0, 
         2 Pi}, {$CellContext`v, 0, 2 Pi}], 
      "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{606., {817., 824.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771720634096491*^9, 3.771720640681026*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"4c9992f7-a151-4ab6-b9be-483334400fef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<AstroidalEllipsoid\>\"", ",", "\"\<Properties\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771720835076688*^9, 3.7717208385767736`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"33c699e8-9d68-446e-a663-c5944d81f7c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"algebraic degree\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"AlgebraicDegree\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"AlgebraicDegree\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"algebraic equation\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"AlgebraicEquation\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"AlgebraicEquation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"alternate names\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"AlternateNames\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"AlternateNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"area element\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"AreaElement\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"AreaElement\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"associated people\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"AssociatedPeople\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"AssociatedPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Cartesian equation\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"CartesianEquation\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"CartesianEquation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"centroid of solid\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"Centroid\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"Centroid\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"Christoffel symbol of the second kind\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"ChristoffelSymbolOfTheSecondKind\""}], 
       "]"}],"\"EntityProperty[\\\"Surface\\\", \
\\\"ChristoffelSymbolOfTheSecondKind\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"(map) chromatic number\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"ChromaticNumber\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"ChromaticNumber\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"classes\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"Classes\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"Classes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cross sections\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrossSections\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"CrossSections\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"entity classes\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"EntityClasses\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"EntityClasses\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Euler characteristic\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"EulerCharacteristic\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"EulerCharacteristic\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"filled region\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"FilledRegion\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"FilledRegion\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"coefficients of the first fundamental form\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"FirstFundamentalForm\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"FirstFundamentalForm\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Gaussian curvature\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"GaussianCurvature\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"GaussianCurvature\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"generalized diameter\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"GeneralizedDiameter\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"GeneralizedDiameter\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"genus\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"Genus\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"Genus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"3\[Hyphen]D graphics\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"Graphics3D\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"Image\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"Image\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"implicit Gaussian curvature\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"ImplicitGaussianCurvature\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"ImplicitGaussianCurvature\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"implicit mean curvature\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"ImplicitMeanCurvature\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"ImplicitMeanCurvature\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"implicit normal vector\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"ImplicitNormalVector\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"ImplicitNormalVector\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"moment of inertia tensor of solid\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"InertiaTensor\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"InertiaTensor\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"CDF of lengths\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"LineSegmentLengthCDF\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"LineSegmentLengthCDF\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"mean line segment length\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"LineSegmentLengthMean\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"LineSegmentLengthMean\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"PDF of lengths\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"LineSegmentLengthPDF\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"LineSegmentLengthPDF\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"mean curvature\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"MeanCurvature\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"MeanCurvature\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"metric tensor\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"MetricTensor\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"MetricTensor\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"name\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"Name\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"Name\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of nodes\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"NodeCount\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"NodeCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"normal vector\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"NormalVector\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"NormalVector\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"parameters\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"Parameters\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"Parameters\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"parametric equations\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"ParametricEquations\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"ParametricEquations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"principal curvatures\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"PrincipalCurvatures\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"PrincipalCurvatures\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of punctures\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"PunctureCount\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"PunctureCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"related Wolfram Language symbols\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"RelatedWolframLanguageSymbols\""}], 
       "]"}],"\"EntityProperty[\\\"Surface\\\", \
\\\"RelatedWolframLanguageSymbols\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Ricci tensor\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"RicciTensor\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"RicciTensor\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Riemann tensor\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"RiemannTensor\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"RiemannTensor\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"coefficients of the second fundamental form\"",
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"SecondFundamentalForm\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"SecondFundamentalForm\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"semialgebraic description\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"SemialgebraicDescription\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"SemialgebraicDescription\\\"]\""},
    
    "EntityProperty"], ",", 
   TemplateBox[{"\"singular points\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"SingularPoints\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"SingularPoints\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"sport objects\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"SportObjects\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"SportObjects\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"surface area\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"SurfaceArea\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"SurfaceArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"variable constraints\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"VariableConstraints\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"VariableConstraints\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"variable descriptions\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"VariableDescriptions\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"VariableDescriptions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"variables\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"Variables\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"Variables\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vector length\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"VectorLength\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"VectorLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"volume of solid\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"Volume\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"Volume\\\"]\""},
    "EntityProperty"]}], "}"}]], "Output",
 CellChangeTimes->{3.771720839070962*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"959ec176-981f-439f-bb2a-e683e34fa21a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SurfaceData", "[", 
     RowBox[{"\"\<AstroidalEllipsoid\>\"", ",", "#"}], "]"}], "&"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"SurfaceData", "[", 
    RowBox[{"\"\<AstroidalEllipsoid\>\"", ",", "\"\<Properties\>\""}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.771720853004497*^9, 3.771720876716748*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a964d754-ddd3-4596-8497-2d5db267380b"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.771720886198574*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"d20f4e91-a13c-4250-aa16-06f603ed3630"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "\[Rule]", 
     RowBox[{"SurfaceData", "[", 
      RowBox[{"\"\<AstroidalEllipsoid\>\"", ",", "#"}], "]"}]}], "&"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"SurfaceData", "[", 
    RowBox[{"\"\<AstroidalEllipsoid\>\"", ",", "\"\<Properties\>\""}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.771720890541073*^9, 3.771720891668858*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"f8abde05-0098-45d5-a5b8-3e74831cb52d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"algebraic degree\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"AlgebraicDegree\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"AlgebraicDegree\\\"]\""},
     "EntityProperty"], "\[Rule]", "18"}], ",", 
   RowBox[{
    TemplateBox[{"\"algebraic equation\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"AlgebraicEquation\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"AlgebraicEquation\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalX]", ",", "\[FormalY]", ",", "\[FormalZ]"}], "}"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[FormalA]", "18"]}], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "2"]}], "-", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "4"]}], "+", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "6"]}], "-", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "8"]}], "+", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "10"]}], "-", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "6"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "12"]}], "+", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "4"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "14"]}], "-", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "2"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "16"]}], "+", 
         RowBox[{
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "18"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalY]", "2"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "2"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "2"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "2"]}], "-", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "2"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "2"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "6"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "2"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "4"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "14"], " ", 
          SuperscriptBox["\[FormalY]", "2"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "2"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "16"], " ", 
          SuperscriptBox["\[FormalY]", "2"]}], "-", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalY]", "4"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "4"]}], "-", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "4"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "4"]}], "-", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "4"]}], "+", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "4"]}], "+", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "6"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "4"]}], "+", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "4"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "14"], " ", 
          SuperscriptBox["\[FormalY]", "4"]}], "+", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalY]", "6"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "6"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "6"]}], "+", 
         RowBox[{"12171", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "6"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "6"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "6"]}], "+", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "6"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "6"]}], "-", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalY]", "8"]}], "-", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "8"]}], "-", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "8"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "8"]}], "+", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "8"]}], "+", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "8"]}], "+", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalY]", "10"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "10"]}], "+", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "10"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "10"]}], "+", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "10"]}], "-", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "6"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalY]", "12"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "6"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "12"]}], "+", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "6"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "12"]}], "+", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "6"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "12"]}], "+", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "4"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalY]", "14"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "4"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "14"]}], "+", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "4"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "14"]}], "-", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "2"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalY]", "16"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "2"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "16"]}], "+", 
         RowBox[{
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "18"], " ", 
          SuperscriptBox["\[FormalY]", "18"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "6"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "12"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "4"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "14"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "2"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "16"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"3339", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"3339", " ", 
          SuperscriptBox["\[FormalA]", "6"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "4"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "14"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "6"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalY]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "6"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalY]", "12"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"3339", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "6"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "12"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "6"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "12"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "4"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalY]", "14"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "4"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "14"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "2"], " ", 
          SuperscriptBox["\[FormalC]", "16"], " ", 
          SuperscriptBox["\[FormalY]", "16"], " ", 
          SuperscriptBox["\[FormalZ]", "2"]}], "-", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "6"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "12"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "4"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "14"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "6"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"120312", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"120312", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"120312", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalY]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "6"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalY]", "12"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "6"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "12"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "4"], " ", 
          SuperscriptBox["\[FormalC]", "14"], " ", 
          SuperscriptBox["\[FormalY]", "14"], " ", 
          SuperscriptBox["\[FormalZ]", "4"]}], "+", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"12171", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "6"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "12"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "-", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "-", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "-", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"120312", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"12171", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "-", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"6867", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "-", 
         RowBox[{"12171", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "-", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "+", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "6"], " ", 
          SuperscriptBox["\[FormalC]", "12"], " ", 
          SuperscriptBox["\[FormalY]", "12"], " ", 
          SuperscriptBox["\[FormalZ]", "6"]}], "-", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "-", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "-", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "8"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "-", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "-", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "-", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "-", 
         RowBox[{"27837", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"12222", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"2961", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "-", 
         RowBox[{"990", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "8"], " ", 
          SuperscriptBox["\[FormalC]", "10"], " ", 
          SuperscriptBox["\[FormalY]", "10"], " ", 
          SuperscriptBox["\[FormalZ]", "8"]}], "+", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "+", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "+", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "10"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalX]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "+", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "-", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "-", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "+", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "-", 
         RowBox[{"1512", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "+", 
         RowBox[{"513", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "+", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "-", 
         RowBox[{"711", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "+", 
         RowBox[{"126", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "10"], " ", 
          SuperscriptBox["\[FormalC]", "8"], " ", 
          SuperscriptBox["\[FormalY]", "8"], " ", 
          SuperscriptBox["\[FormalZ]", "10"]}], "-", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "12"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "6"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "12"]}], "+", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "6"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "12"]}], "+", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "12"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "6"], " ", 
          SuperscriptBox["\[FormalX]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "12"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "12"]}], "-", 
         RowBox[{"3339", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "6"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "12"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "6"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "12"]}], "+", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "12"]}], "-", 
         RowBox[{"234", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "6"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "12"]}], "+", 
         RowBox[{"84", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "12"], " ", 
          SuperscriptBox["\[FormalC]", "6"], " ", 
          SuperscriptBox["\[FormalY]", "6"], " ", 
          SuperscriptBox["\[FormalZ]", "12"]}], "+", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "14"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "4"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "14"]}], "+", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "14"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "4"], " ", 
          SuperscriptBox["\[FormalX]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "14"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "14"]}], "-", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "4"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "14"]}], "+", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "14"], " ", 
          SuperscriptBox["\[FormalC]", "4"], " ", 
          SuperscriptBox["\[FormalY]", "4"], " ", 
          SuperscriptBox["\[FormalZ]", "14"]}], "-", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "16"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "16"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalC]", "2"], " ", 
          SuperscriptBox["\[FormalX]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "16"]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "16"], " ", 
          SuperscriptBox["\[FormalC]", "2"], " ", 
          SuperscriptBox["\[FormalY]", "2"], " ", 
          SuperscriptBox["\[FormalZ]", "16"]}], "+", 
         RowBox[{
          SuperscriptBox["\[FormalA]", "18"], " ", 
          SuperscriptBox["\[FormalB]", "18"], " ", 
          SuperscriptBox["\[FormalZ]", "18"]}]}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"AlternateNames\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"area element\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"AreaElement\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"AreaElement\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"9", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[FormalV]", "]"}], "4"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{
            SuperscriptBox["\[FormalB]", "2"], " ", 
            SuperscriptBox["\[FormalC]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["\[FormalA]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[FormalB]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox["\[FormalC]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}], 
             ")"}]}]}]]}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"associated people\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"AssociatedPeople\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"AssociatedPeople\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cartesian equation\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"CartesianEquation\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"CartesianEquation\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalX]", ",", "\[FormalY]", ",", "\[FormalZ]"}], "}"}], 
        ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             SuperscriptBox["\[FormalX]", "2"], 
             SuperscriptBox["\[FormalA]", "2"]], ")"}], 
           RowBox[{"1", "/", "3"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             SuperscriptBox["\[FormalY]", "2"], 
             SuperscriptBox["\[FormalB]", "2"]], ")"}], 
           RowBox[{"1", "/", "3"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             SuperscriptBox["\[FormalZ]", "2"], 
             SuperscriptBox["\[FormalC]", "2"]], ")"}], 
           RowBox[{"1", "/", "3"}]]}], "\[Equal]", "1"}]}], "]"}]}], "]"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"centroid of solid\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"Centroid\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"Centroid\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"Christoffel symbol of the second kind\"",
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"ChristoffelSymbolOfTheSecondKind\""}], 
        "]"}],"\"EntityProperty[\\\"Surface\\\", \
\\\"ChristoffelSymbolOfTheSecondKind\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[FormalB]", "2"]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], "-", 
                    SuperscriptBox["\[FormalB]", "2"]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Cot", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalA]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cot", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], 
                " ", 
                SuperscriptBox[
                 RowBox[{"Sec", "[", "\[FormalU]", "]"}], "2"], " ", 
                RowBox[{"Tan", "[", "\[FormalU]", "]"}]}], 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Csc", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sec", "[", "\[FormalU]", "]"}], "2"]}]}]], ",", 
              RowBox[{
               RowBox[{"-", "3"}], " ", 
               RowBox[{"Tan", "[", "\[FormalV]", "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", 
               RowBox[{"Tan", "[", "\[FormalV]", "]"}]}], ",", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["\[FormalB]", "2"], "-", 
                  RowBox[{
                   SuperscriptBox["\[FormalA]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cot", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], 
                " ", 
                RowBox[{"Tan", "[", "\[FormalU]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "2"]}]}], 
                 ")"}]}], 
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[FormalU]", "]"}], "2"]}]}]]}], 
             "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                RowBox[{"Cot", "[", "\[FormalV]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["\[FormalA]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[FormalA]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], 
                 ")"}]}], 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalC]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}]], ",", 
              FractionBox[
               RowBox[{"3", " ", 
                RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["\[FormalA]", "2"]}], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], 
                 ")"}]}], 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalC]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}]]}], "}"}],
             ",", 
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{"3", " ", 
                RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["\[FormalA]", "2"]}], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], 
                 ")"}]}], 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalC]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}]], ",", 
              FractionBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Sec", "[", "\[FormalV]", "]"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[FormalC]", "2"]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"Cot", "[", "\[FormalV]", "]"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[FormalC]", "2"], "-", 
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"Cot", "[", "\[FormalV]", "]"}], "4"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], 
                    ")"}]}]}], ")"}], " ", 
                RowBox[{"Tan", "[", "\[FormalV]", "]"}]}], 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], " ", 
                 SuperscriptBox[
                  RowBox[{"Csc", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalC]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sec", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Csc", "[", "\[FormalV]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}]]}], 
             "}"}]}], "}"}]}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"(map) chromatic number\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"ChromaticNumber\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"ChromaticNumber\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"Classes\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"algebraic surfaces\"",RowBox[{"EntityClass", "[", 
          RowBox[{"\"Surface\"", ",", "\"Algebraic\""}], "]"}],
        "\"EntityClass[\\\"Surface\\\", \\\"Algebraic\\\"]\"","\"surfaces\""},
       
       "EntityClass"], ",", 
      TemplateBox[{"\"closed surfaces\"",RowBox[{"EntityClass", "[", 
          RowBox[{"\"Surface\"", ",", "\"Closed\""}], "]"}],
        "\"EntityClass[\\\"Surface\\\", \\\"Closed\\\"]\"","\"surfaces\""},
       "EntityClass"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"cross sections\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"CrossSections\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"CrossSections\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"EntityClasses\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"algebraic surfaces\"",RowBox[{"EntityClass", "[", 
          RowBox[{"\"Surface\"", ",", "\"Algebraic\""}], "]"}],
        "\"EntityClass[\\\"Surface\\\", \\\"Algebraic\\\"]\"","\"surfaces\""},
       
       "EntityClass"], ",", 
      TemplateBox[{"\"closed surfaces\"",RowBox[{"EntityClass", "[", 
          RowBox[{"\"Surface\"", ",", "\"Closed\""}], "]"}],
        "\"EntityClass[\\\"Surface\\\", \\\"Closed\\\"]\"","\"surfaces\""},
       "EntityClass"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Euler characteristic\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"EulerCharacteristic\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"EulerCharacteristic\\\"]\""},
     "EntityProperty"], "\[Rule]", "2"}], ",", 
   RowBox[{
    TemplateBox[{"\"filled region\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"FilledRegion\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"FilledRegion\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"coefficients of the first fundamental form\"",
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"FirstFundamentalForm\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"FirstFundamentalForm\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"9", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[FormalA]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[FormalB]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}]}], 
          ",", 
          RowBox[{"9", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[FormalV]", "]"}], "5"], " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[FormalA]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "-", 
             RowBox[{
              SuperscriptBox["\[FormalB]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], " ", 
           
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"9", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[FormalV]", "]"}], "4"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[FormalA]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "+", 
              RowBox[{
               SuperscriptBox["\[FormalB]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox["\[FormalC]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalV]", "]"}], "4"]}]}]}], "}"}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Gaussian curvature\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"GaussianCurvature\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"GaussianCurvature\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[FormalA]", "2"], " ", 
          SuperscriptBox["\[FormalB]", "2"], " ", 
          SuperscriptBox["\[FormalC]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sec", "[", "\[FormalV]", "]"}], "4"]}], 
         RowBox[{"9", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[FormalB]", "2"], " ", 
              SuperscriptBox["\[FormalC]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[FormalA]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalC]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}], 
               ")"}]}]}], ")"}], "2"]}]]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"generalized diameter\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"GeneralizedDiameter\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"GeneralizedDiameter\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"2", " ", 
       RowBox[{"Max", "[", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
        "]"}]}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"genus\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"Genus\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"Genus\\\"]\""},
     "EntityProperty"], "\[Rule]", "0"}], ",", 
   RowBox[{
    TemplateBox[{"\"3\[Hyphen]D graphics\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"Graphics3D\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
+SXjjNDDiN9FnJhfChF/gIg/Mo5xkog/MLFS4y73Wpqz0rNOtP948hxMqTvn
165mBfUVA7+ucvAex6qEBZ2LqHQK8YZJRn6zt7qz4s0L7+xX4CDivVoOvqXf
vI5V6DllzuXH/ohHTnGy6l/Aj/Xr8DjCdasPE/ivPwO9rjxewS433OLLNu9G
XJl/st2gE89tlM2Xi1Qu6sgGHGnr/diniL7kftNzSbvLw+uDtuXn1Z2AuL/V
yz6VolrCyuorZpbLGoZ40f3nBjct0xnOm9wc2t2yJ+KDtxSenRDdB84XbHLP
51EbxB2Od93r4TQIVn2a3eBC+1KIp3+IOj0+aQhsbTFkQMj2vSECz3qUv1Xl
okMAKk0s2vtEqo3AT86v5jyv7gD4+fylR+JuUxD4zsQ57ctndYd/Gpu1rhjV
EfH4XdfO9LDUQb/lNv5NygxEvPz0c27rHpmC09o15+OjxyDu3XFnxpX2OTau
Zq9GezhNRDzbNWz03e0bbA7N6Lt3fJIj4o+7hL0pUyMEDg46edau3BvWaKL9
2krv49h1v/mrO1R7AGbDRk11+h2DePV6G4f3LBcNk49PLly6xj0Q+ObxJ/ZO
6+8PmSVrX+kd9xPafq4Q1g9msjr1MuOjWprDxlmXTmedPMfKTfg4Sh1HZXZ2
yHln73FQ4GV0kceVTiE+qUu+fxZudQcT9vXI4AIHEW+bkc/j9uZ18LjN5a/X
Hvsjbm06rPuQAn5ws+FDowVbfUDgvZvtM2GPV0D49k49bm3ejfiPqWvW2px4
HlLhjMnNwkUdwSTZ7KZqB2XqjBpronaXZ1kf9790rjsB8VPtJw0vGtWSbYk4
mJzzaRjiv8NqOdUs05mFf11RpLVlT8RdN5n2uRndh11NObPY/VEbxEcU2HfI
xWkQa93dPnBn+1KIvw9qHdo3aQh7sGV+/3Pb99oI/MQ/AzMKFx3CRp7oPsby
RGqIwHt4zm87ue4AdmLC82EPd5sygVf54ncmX1Z3Vr7IaWvjqI6Ib3B3H9vG
UseyrU4drlFmIOIvCrdp6PHIlCm1j68Njx6D+JonK933tc8JcQywsndxmoi4
0YG4USHbN4Tk73HmfN8kR8RrhA/rULpGCLOe4L2iR7k38Pny853V3sfBo30J
B9pXe8Da5ytp7vg7BvGh9ac3sysXzbra5htZssY9JnBJv7CPnhgv2Z9xPkrt
R3lifOX5gnok+6A84Q/yfEQ9kv1RnvAfeb6jHml8UZ7wNzmeoB7Jf1Ce8E85
XqEeyT+F3+oJf5bjIcZJSV74uawfcSneYlyV2i/8U+4v4lI8x3go2RPlifkl
rxeoRxpflCfmo7weoR7J31CemL/yeod6JP9HeWK+y+sp6pHmI8oT8UFer6n1
SPiVQqzvcvzB+EnMX4XgA3J8Qz3E/FUI/iDHT9RDzF+F4BtyfEY9xPxVCH4i
x3/UQ8xfheAz8vqCeoj5qxD8R16/cF0j5q+sH3EiPsjtF34l9xdxIj7I9kR5
go/J6zvqIeav7A+IE/FB9jeUJ/iezE9QDzF/5fmCOBEf5PmI8gSflPnV/+IJ
jOAJTOIJFM4IPYhLv4u4lF9Q+QiVvzAi32FEfoS4lE8hLvaJ7riteTGgrwOu
s/d0NZsYl+inu9ixRI07G57i+faw/ruK1q/hqusatGh8j5Oxeef//5tv67sN
sPKe3qR10NTUrsNK5OTxqKZ9Zg0M61xA98nqZpTJumf/ukfwwd+zweaH47A9
Cz94rlyXtkrnsz8msZlJNMpnlqzcZkmDrbqI6EBon/QQcYLn660uLrf07WkB
x6+NKJCZPTgv/7r6NKzi6YO6VrO+XO/yKQL1XDnV+JXLpjM6U8fs2Nq1biJO
5At4ftvnz/WfG3p2Rf3n8ne6VKfWRR27VWXgtE0M9di/Tz/W9VOwrtPJ4wsq
nA5EXMojUD+Rj+g7Vfi9bPPDftCrzY4xMSWa4e/WtRp9pn3Sdd2IIKeuHg2O
ov7+t2xtm5uE6y71apK9Jm0L4lJeg/rF+VVb/047J1nmQ/35Sq043ePkLV3v
nws7m9bwzLPbyep97my4o6uUbp6/YIlxiNertvu1ybp/dCFJJVoGdi5H4Xie
X/pdXMcl/SgvtQdxyT6oR7IDykt2Q1waX9QjjSPKS+OuI+wMhH/m9fdvP0Q9
kt8iLvkJ6ifyU3ne4e9K8wv1S/NRR8wL1C/FGdQvxRPUI8UfHTGvUb+4Zxq4
01B3z+N7UpzREfEK9Uh1BqougfUHqY5B1SWYqEsQOBB1DCDqJEDUSYBov4wD
oQdxol9AxCW5HkLVT4CotwBRn0GcGC/FZuf+YmMtM0Kmhgxr3kn1K7HuE+uX
QqxfClFvVCS/Qr5KrF/KnGntN18vUZO1KH7+12p1Hon2EOuXQqxfClHnVO66
3rq+pKcF21Q9NOKFGh+QT/73+qUQ65dC1EuVd7ZBvi+zu7CJAYVWLlbjm9BP
rF8KsX4pBM9RiHqs8rJz02FeD/ux3YvHRoeo8Vn8LrF+KcT6pRA8SnG60M2x
U9/BrO/uFikj1XVE6CfWL4VYvxRi/ZJxPKcq/S7yUmL9ktuDuGQf1EOsX7Ld
EJfGF/UQ65c87jrCzozwz7z+/vf6Jfst4gTvlf0KcWne4e8S65c8H3XEvED9
UpxB/cT6JccfHTGvUb/Ek1E/sX7J8Qr1EPmLXBfF+ieRp8DyrfrNp6/4wy67
agvXTvyF538SLhT9ZH7SnPUKq3pivZIDHa7G2Y5R17WNo9ND1isf2afHdnUr
nLSgcCbwiqN+ZTg8/chadDq97UtVSzzfKOlH+bgB9q+37tvIPL/2cRt9OQX3
tSUc96+bTbz/bObGOcz78u4aR4amIU6sFzJ/QH5LxHM9EYf1RPzUE/FNT8Ql
GWeEHkb8LiPaiTgxX/SEn8t5HOKxKwIPFB+1H4qHVYy1P/A+RPAoCbcR+Hqz
nDrb922E0Wv2dR2rjpfYj5Zw3KcW75t5xjWtfmxoGuJtHn0xS0pyhbdTW5xb
WvEP8isCB3/zkMb1T5qDscOhbINfCXmd361yfeJS4ZsubdTk/of+Fw5LctxK
blA+wsDKOSMN/izkCRycl6a/X1rxA/Te1dEmIckT96cIXJ53eK5Kaj/qIXC5
nYiL92E8ixrO8eXJE+Mi47j/TowLEPUEOb7h+kvk+wqRpytEfq0Q+a9C5K0y
DoQeIH4XiHYiTuRTCpEHyTwT8VfVlxoZj9rPBs+cU2u0Oo9EnJfwEIETcRKI
OAlEnAQizgMR52V5EbehWgXjSH81Xhk1qG767etXPG8v/S7G83t9cth6NV7F
T+vcrfPMBHxv3G9Q6Mp2Z/czu/LPe9hFP0J85HybZpkfL7DqUfMtMj6GI56y
0vO+XXQoWzgqxsLybAC++y3Gq2P/9Ye6zkzAd4kvvhx6vOurpbB56ZMzlyo+
Q/zP8RpbO5zdDyFT+43tFf0I8fcX9+7I+ngBOn55fuDTx3DE63/49rpXdCgE
rW3Zvf3ZACDkgdCPuDS/ME4K/2wYkFbj+9eveF5avM+5ddZXh6OqvDi3syHm
Zz/fIbch/75GZ9cYZ2K8EudFZ81K2babxaF8fdbJ9I3xM2juvqLRMb9XKC/e
WbVdV2bOpHFhKD+185DyHUu8gSojblktdImg5PEcUa8Gwf2+hL6DKQVSe32o
HwxEe1C+ePMT7XyME0H/ZmPkhiFPUF7qL8q7KiMqHPd7BMYl3Wu8Nn6P8uI8
qtfwkf0M77UK+c9lIpYucgmGpp7pG5QSX1CesLMc9zBOEn4FhP8A4T9A+A8Q
8wLa2dw8Y/tqKYv7mhARWPEZ4sR8AWK+ADFfZHlG6EecmNdUHAAY93TnHhbB
PleLiTLIi/ON7kdyz4Gzlx+1c+Di/KTRyRpRR4fGsbPVzhUy+ImQ/2ybe56c
rTXVzpML+UIzlwxR/ZB1z2xUxuCHQt70fu65dDbOSjuXTsjjecsr6y6WUf2W
zWQdC6l+i/FNag8j9ON9KKm/jGg/ykt2QNzXaM9udR0PupTTf4NhHRc8mbBb
MGFnZlvFpJwaH9i9CQ+Wq/EB9RD2DL4eVertMb9HrOW7ds+T1Pkl5IlxYYGb
cxJfGz9jj8vofh71e4XyhP2DPT72K6HOd9anyd71hvku5IlxZJ6R1xOUEm/Y
oJWTPy9wiUB5yZ9xXZDGEYh8BNvzwm34bpWnsZDtTUsaeJqQfz2l2eDQ+x/Y
uBbO+4M2OCIuyTOi/XiPjPAr2T6YH0n9ZYT9Ub9kT0aML+qXxgvlCb9lkj+g
PBE3ZP/E35X8EPUQcYZJ8QTvzaW6zncr41KPtSjavN/I29nMO9q6k9uJIPZn
sf/3qWOd2Mk60R1Nd33CfT0Jx306Kd7i794tm9DAuWU3Fpy/4wePeY/AruS0
43Pq/WZEHGYvE+Z2aDV7IztXw2z0oyd3UP59aY8KtxJ3sc0rGmy/m3ID8Uu1
ns4yfXCYze206W3hbwzxCxltGhp/O8MOv1k5sN6Di3nyt/UdI1ICWZ0u0e3D
E09ROCP0MOJ3GdFOxKV+McIOaLeM9plWSd2XstuTtt546ngP5SV7It6/3IdT
bWareUfLoX+iVf0eM58Wn63ixY7+OFL/wWEI73jRvpjaToFL6ybysQE1hh0u
/u0MLOpyZJW5ajchX/NeSLe7ibugePovr3uq/QUu8UDkY9L6jrhinVZpb/uR
EPuoxnbv029YifFFp839nsEKRpW7H+t1Dpodj3D38XmCuMRDGMFDkEftCvUO
eBQaCqesTSvPvPUP6pF4DsoPilzVca3PbTh36e2lGK/rKC/xKJSX+BilB4Qe
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
ACvyemBQk9792iz2A+/MA45Zh9qAkD+Qk7H+caVdUDt/UIaT9wwQ8qcDvfKl
9jRiD6qXmbmxoSfs0V94qPq/EszfsWyW8fc73t4PErZtbOjKHj89lPm2Z1m2
k8tP4u+dRknvaTtveTXpvu9QNrRo43NrHWMhffiqgTeLZkPBDtp+x1O+r9eJ
70cUnHjtzVrHW8zLYkyzf3ydWCKXfxj/aMAzxxDWcOMBh8TuG5mQTynmf/2D
/WxW0sP71WHrz7DO+mB8/aBoKPY4vk2zKfvYDvMz6Y0OfMC6aHvfAqWPWL9m
2z5G6t7bL2eLufzLOwUWNT6QwPyqpgxvMuUcS+DymTyOufE45sLreMViAoqq
84VdTl15VZ0vcC16w7SBgzrCCV63uaTVbSA/36d4t8n4z9jiH5hbrQ8D1PnC
hHwQP4+9gN+XFPIzJ3ZeOzwgJ6TtfsfLVTc0As/MpGXFk4roz1y1PXo+PkC3
uXmLqID4UHxv0PdB3JJqG6qylivd5wwNKAXLufzKF87WXTZUhfv983f2CijF
fA5udjDgZfh4jefv0xYX72DzuHeGv3M7iMe9LQ81/QtX5epnoj3uLQcdMbTH
7TA8UtuD79E1tNfa33xfbvuZaM+OeXdHrAnIsWk459NsW7Vfoj1J8zW8+dxc
XLRTKRFpdtyg/0XHMtH/r78K0S+FsINC9Esh7KB4vdT0Vx6Yq1+0U2k3pOIJ
Q3uK3s0f8//6qxD9Ugg7KI6tb5/sahzOMkaYObfdmwnjW0zv6fLSh5n039S3
54NLrPrhskuTPydBg+Qhw1pvf0XyhA/cP53//l4qM1nd8EPbvYksytW2Rxfj
aNjP9f/iPOGzxhMghPOER69PVXr3OYr1NSt+rceDW9Ca/67prCbbriy5x+6W
taj8qVUo9HN3md3bKY0Fc7914vcIZot7ypyfNNH4CUzm/CSWzy9PbX6B0RWt
ntyJ84d+Gn/AfSWC1wUTvC6YmL/MmNshXrMDq83t8Jz311HrL6vJ+yu+o9qf
86WC3M5EHGDj+DhmaePIhJ0F3zPT+B47we38q582vlW18WXCzq3dontmtQpg
tuuzAy4vSWDCzpnRf8UZ1jImN26ww01nFvOp+YT94x9p83PqCRz3K5yntdZ4
GvI6Iu6xyb1v+Fo+j2NtG1kWv1FmEb4rdYDrf6bpR9ykbYd+8S82seipHy3v
HdGDxbx3L+pXyqffwr+nnPn396n14T/3Xrh35CyLD++eL+7FAWjH5fc4hvye
77GXtXj6frz36U1Q9ePTASbpRno9j/PltTiP+whrOd9bpfE9mMT5Xr7CWp44
TMsTsd44hPPGXRpvhBDOGw/zfHOPlm+iPLHusDs8b30zLjdvRXliPWJ/erZb
fGnDSlZzydCoqiZhF4T8E26HHM0OrBW3wxFut9Lvte9QD+d2+9pGs3OkZmcm
7FZv//bTa04vY0l626XzPc4yYTdnno+f0PJxrIu25vl7Iy1/R/zM3/k+4kPy
Tz21d+Rw3fl5QwYXapL3TvIq/r6ct/RecUC+jBfrTy+DF3ahBRep7fmUfmNf
UbU9Hfn34idr34tnbfh3oCyLWS1d5LEXsjJg07rTm9gHLt+VjRrz8MhZcDzr
1+SFap+AcUUqGfo7yD9pbaEmd3QW1v4ldox0xt99yvlMa43PsLL8PPklzqur
aLyaLee8WnzH/HWAbb38ywq3Enpecb7kp/El9lnjS/qcKRpvj1iRy9tZTc7b
B/D2DNfag+sdwbvwPd5r0nu8BB/T1+D2eaHZBz5z+7Ti9nTW7AkW3J43uf2/
a/YHYc9qg1e6v3yxCSyrn3j5QJ2n57k9lb/HF9vjPMr9QO9FZ+Fq/BjXbOaJ
3wVr3VZXcdTV8xD50a7MkRcDERffSUzL2bB/78HMtgJvxeXfafL4/S8nrj9c
04/4p3ttgz63CgCjklerBqlx7/W7BYft1LhH8H/2lvPkVhpPZs48fyHyAlam
YFq+4CX3oMuAzauyWoWyZ1x/uwVeQ1M+R0GxKlc69FTj/8DiNY1bqnH4Lefn
jTR+zoz5vmQqz6c+DczNp1gHnk9N4HnESy2PYK68nbvG3m9psTcRDiq/txnW
neEHRvQaq64L1Xm+VkfL19gAnq8V53nKGi1PYV35PnVfnk+N5/edx/J8isgv
GJFfsJ8FNDt00uwAGdwORH7EiPyIEXkKI/ImlsXHt6w2vhDFf/fdaCWy14NL
ULLVB/07leeM4vZfwsd9sjbuMIH/7rLCS3+r6yysbHH3pIEveXF7Evkj8+Hy
KzR51kSTBwfezl/cT+LFebD/Hi8gxheIcQFiHKFRX+XO+x+pYLw4/+jIZj54
Tm8H/91T2u/Cr/3a747n7TTi9rzH20nYAQi7gR23j6lmH+jD7UPg8JWPSxlt
XFh/bVxA1A0s+bwbwfNTYh4BMe+gMbdDokeuHfAcAjG/gJiPIL7za2PbPadI
oYYWQg9hZyDqIaDj7a+utR9spf5KdRIg/BYIP4f4PunX1tZ8AltGPW3yW+VR
4tzIKD5/32nzlx3n9QGingO2M/y3t38eByEZCZVullmE7xM+4/qPavoRt+Dx
v4sW/9lpLf4ro/g6spyvyy34eRVi/VWI9Voh1lkg1mUlhu9HNNL2I3Bfg1h/
FQ++r3FW29dAeaKeBt34/shobX8E5Yk6G6R+dGun37ASXFodal7XJKytkB/I
7bBUswOc5HYYw+3mz9ff5txuxDqrEOuysoLv+zzS9n1w/2U93yd6rO0TIf5h
2F/7SogTPE0heJpSmvPGuxpvhJoab1QI3q4Q/Fwh+LxC8DSF4O0KwfOB4GkK
weeVj/Yabx+g8XasLxE8TSHqyQrB0xSizqws4vYpp9mH1eX2mc/t+UqzJxvD
7UnwdoXg+QrB0xTb80V22y06yxY/eWX0TeVRYrySbifMG3b1PBuiVJl2QOVd
Ap/SubpT4ZRA9upJjuOug5kXBJ7I5Wdq8vgdzM5cv7emH3GRn7bV8lMYpeWn
QOxrAFGXAKKOAUSdAYi6BBB1AyDqDEDUPYCok0Arni/P0fJl2MXrhER9A4h6
CBD7JkDsm0Axbodbmh3YJG4HYt8HiH0fIPZfgNgPAqL+AES9Aoj6BhD1ECDO
j1kR58esGnYp0F5dx5n33fN3I1SeIPyEqIcAcV7Lith/DD7C9zEraPuYeP6t
Mf9de+13sc7Wk++H5tf2Q1FefOd6kHcPD5WHXBTyRPtZJb4/m6ztz+J5s6m8
DlNCq8NgPUd8N/zp46UTVtyrclHgRBzQE3FAT8QBPREH9EQc0BPruJ5Yr/XE
uqwn1l89sT7qifVRT6yPeoJ3sZv8HEt+7RwLniPqyvmVv8avUD7fMO08jJF2
Hgblx5a19v3inwBLVtm3XnWvioWQJ3gaI3gaW8PP7Tho53bwfNHC+Nx9avia
pe1Ti3NBBH9mU/g5olHSOxgET2asTO4+O1xZo+2zC3nCPkDYAYj2A2FPIOwG
RP1BIeoPClF/UIj6g0LUHxSifqgQdUKFqAcqRN1PIepyClGXU4i6nELUe4GI
Y0DEEyDiGBBxBoj6MBD1YSDiGxBxFYj4Ca9SswreyA5kvSwtMl75JWI8pPY7
Nnx6PTvJ7yF75DVof2j2DcTXcvyphmMdO4Xrmc7XR4E/57/bV/tdxKds9oo+
8qIzq3Xep9ewq/h9c73993pGP5grs7NN6me3SI94t4zDs9ed8WGZb942qW9y
GXGqTp7ac8Cr+iZHmfGvG+t9zuxE/C3Hy2o4xuENXM8PzjMFbs1/94v2u4iP
4O3spbUzD/+7X4gfKh88/8SLztC/UkrKyKv4PXp9z5F7Z/5irtDrxdAhvVU9
Ai9fu+XFTWd8YMRFT7/G6u8KvB/Pm+bxfFPgvtYfejQxOQq/H/V5uFHtl8DX
crxIVC6OdcIeXM8Snn8JvBj/3THa7yLeibezj9ZOxP3+7hfiyvWXHuHZgTCy
THqT1+q4i/j8jtcB2vC6h8C/Ru8499rvIei6dqx+Q/UrgX/ieGcNxzj/muvp
wOsJAm/Pf3eM9ruIm3+FXVHN3MFpnKP3+x8/Mc6X/BvHOhIhD4Q8EP0For9A
9BeI/gLRXyD6C4S/KYS/KYS/KYS/KYS/KYS/KYS/KYS/KYS/KYS/KUQ8UYh4
ohDxhMzfiXiiEPFEIeKJQsQThYgnChFPFCKek3kiEc+BiOdAxHMg4jkYf9++
bW4XHYsc1eJg57JBoh6ib87PobXm3ylz5PuMRP1EX9fihvONyGls4vcHqfmz
t+J5NirOn+TnV43u/30/gqgn6MvP73PUKHs1ezT618zQyEVM7GMSdQa9nus3
0/SzPlz/22NDnkR8uWBTI2ujp29EWzwH8nifdi7uMP++szjvQZzH0DuVPNju
2SQ7WDTxyIWoOnPxfB1xTkNvzs8bm0r3KXTWa877RpjB+I7Tftz6Em4j9M/g
5zSC+HeHRXuI8xh6WHtq1OM6jtDmnG7Bk0kjYB1vD3FOQ1+Yt6cCP/9syttD
1L3ZoDkr4xa5XIOai45HNDz+Ds/jEfVwdpmfh0/h5+3HcT5P1JlZgEvkykbH
n4BD+aKpC10iQewHjU6NmuTeRQf32y6d1KNskNhXVdbzc1+1+XdgRX2V2IdV
ltXa6R0ZOQ0qvW3sWzR7K54fI/ZnlZHcPiP4eNXi9UZiX1JZvvdYH5Ps1fDu
ZJTv3chFIOq3xH6lMp3rX8TtL/SfTZ449PiXCyEm1Z06zYhoK847Ka35ObSL
2veU8XwOcT5KeZ7jszRikh1LH2RtebvOXDzPRpybUuby+RLBz6sP4Hzbosq4
WTMizFhf82XzDn0JDxHndkrx80LT+Dk30R7ifJTy0bxzwu06jmyBt1nYP5NG
MNEe4tyUMpS3J5ifbxftIc4FgXl2xWnuLtfY9xIhWxscf4fn36i4Sp0DJ87D
wPyvLwc0PP6ELTi3beECl0gm6mDEuUE9MY564jyhnhhfPTGOemK89EPra3ZO
1uwM/Fyi/hCPD7u1+MDE+d7JfBxv/f19dn0Ejz8V4/76zru+Az/36Kyde8T2
lK2q+UmJ+rl+YiP6e4qfK66inStmIi5VstHiXq1OuXEvRMSxVJ4/luT5o+hX
v7iqHXLr4ccK1/n/5xaIc5h6wm/1T3i9ZYxUbxnuNQUM+pOCPM3+v37iPKee
8H894ed6wp/1TfKtzR1fq8G544vtv8zXlwhtfcHz2HO5vx3R/A31t3in+dtO
zd/wXOIpfg485W3uOXBcF5yOa+vgGW0dxHWEODeuEOumQpwnV4j1VCHWTYVY
HxXCbxXCzxXCbxXCzxXCPxXCPxXC/xXC/xXC3xTC3xTiHL5C8ASFmC8KMV8U
4jy/QvANheAVCsEfFMJvFcLPFcI/FcI/FcL/FcL/FWJdIO99e/E4767FeRDn
A4n4z+px/flL5urH84TP5ml81V3jqyDuazxvq/HkNhpPxnscw/l9kK3afRDk
t0+/afz8osbPkQ+PDa+0p+vzNzZT2ykVbALwe3x64py8nuBR+sp8/r46+Pd9
EOJcvZ7gXfpRP95sKtJ7v249s9nhcvIe8l6Cd+lfdG57zLDuB12u/fj/8+SS
nlc9p58M0VUKXTumcO8AxAk+ph/I9ytPS9+7t+N8zFfjY+w7/90qo/50sQkY
DGtcSt/s+PxLiOhvZY4f03AbgZ/k8yKfdP+lCG9nTa2dyKsJHqh/zvur1/qL
8kO43fw0uyFO8EO9Nbdnyptce4LoV6+//QHb6cj9oejjXH/A9jTj/nBZ8wc8
X8c4D5+g8XAm7tEI/t9I4//QQsKlvAAI/g+EfiD4PxC/C8T4KoR9FMIOCmEH
JWp2z6Vtn78J2W+7uVLTgLzvjxP3thQij1bmcl6X8fHv+yPEPS+FyLsVYn4p
RN6tEPNLIeaXQuTjCjG/FCK+KfU6DereNGAwe5nS7WgLdR7h9745/kfDQwTe
g6/LZ6X7MsT8Uog6gELML4WYXwpRH1CI+Kzo//YHbCcRtxUibivE+gLEOgLy
+yEpyzeeNuzbTuf7BUP4foE4n0/c92FGHN+j4fhu9i5+z/GVds8x773B+xEe
/5SZxnQWGf0tn+d9Z5mYF3rCz/WEP+gJf9AT/qAn7K//w/mVB+dXIk4G832x
F3xfTJwTJu6pse4cb6DhIM67hvH7hle1+4bQhp933W0yxzuizDRYMej68PbP
875fPK76xO7LTBeB0ZdNXyLSf4nzltS9QiDk4UzERovI9DQoMO3IQ3fTtSDO
zRL3DSl5vp+Zwf9ubJH7lzLRQt4Pjeb1cOJ+JRB2AMJuQNgHCN6iEDxEIdZr
hVivFWK9Voj1USnTS+PPzaT9ypH8nEA0Pycgzi8R94KBmEdAzDsg5hcUffAX
jvt35fj7DxO19x/wXZGLf9sZ919CHHv9+DrkBhR/PGn7rmKZuG9CnAdm31M/
Ttr7JBym2h+wfdDnE957lc8J4/db9xSrtrtYIgy5s2jflyGPESfOFbOF/D23
kk20e+VphnCW0+3inS++I3UTkqFEt8Nvnm6+inpucryGhv/rO7Ou/F6tOAdu
zNszWmvP/zpXzHopkfce9HkFC8Yc/7b7STRc4/2VzxsLPZe5PUtp9kScOJ/M
5vL+ltf6C1p/3S5WHHvsatzm4/Bwd9MPHSZ8Qz3EOMJI/j5DX+19BnwPgfAT
2L7dZYPaTta/9qpOhnaKfWTqvNnVdw3DdhVLZDUL7m1nsJvA284pkNRhQjLz
SFg/ymB/gRPvYlm15vLrNPl/fV91Hr/XKc6DXeS/a679Lsqn8Hb24+eyBO7H
+zVI61feO5b//c4V9X5CMGEfltWvfW/V/5l9vHNT1f9B3C8j3lsIpu4hEvb8
lx6xjm+5sumS6oesU3jW81w/1O7DMsL+7CN/N2Oh9m4GvosVwu3szM/d8fuz
7D2/b9tHu2+L/RoxzvtWRHoaq17z3njDeiHuAxL3c9lgLt9Rk8f7fcS4M+I+
LyP8gRHvUQQTfsI2cbv10OyG9wGJ9yuCCb9ihF/9S48Yrw/cT5w0P2F23D7E
PGXL/363BM+5Efe12cbYrsfWLJ7BytS95ug7LgPvvUZxeRNNHusPXly+kiaP
9zeTq/z1Dgy2h7iHzvYNP30/wqsn83kdtK7KkLt4n/Hj1Jm3hxbYxya9eX7t
2bIIlB/E32kpzd+HGcD1t1ldwv/5smA2+Ff80SEFzkEyl6/N8YEazoSevlxP
Bf7ei9CTzX93tfa7eA9xO3/Hppv2jg32qyvvV3etX+wrl9/B+7Vb6xfeN3zH
3zVy0t41wnfAUj+WeTu8gMp/9Md6JKj9Lc7vuzXl7zJt195lwvW3/9/vOCFO
vJPAOncxy1hs6QzT+2+Z0sA4Be95TStpXr1y9jFY/73c7/zh0Shfj68X97T1
AtfHrL/fX2J2/HeXHBm9zyg8HL7Fl3ComH2FiftQ/fh656qtd0y8U9Gfr6cT
+f0d8U7FKq6nZEKuHuD3Mthw3k4vrZ1wheNZnD/M1PgDXLmo6R/B7fBYswPq
qcftMFGzA97Devb3e194DpB4N4PdqB+2uv2vBVD9QlDZDXey8X4cYTcgeBEQ
/Odf96Twu5b/zX+A4DkWhP2B4D9AjAsQvAiI90aA4EtA8CUgeNG/7mEJeYIX
AcF/LAg/AYIXQUk+7t21cYd5fNxP8HGvoo07bObjTvgPEPMd3Hk+5a7lU0z0
N5DnUwlTc/MpJu6jETwciPdqoGPrwHM+i2fAgZIdpm1S47O4R/YlSJMP1uRh
EJdvz+WPafJ4D4uIM0C8wwMWK9q2fejVE2LyGaXVUOOeuPeUxOPbPi2+oXwK
jycdeDzpK7534/G89otlwbB8pMfNYWrcFveMynLcQ8OhKsfjuZ72/F24gVwP
EVeBiKtgy/uVoPUL+L1jaMn79U7rF5zg/SJ4ERDrCBDrCBDrJhDvRMHjhKpZ
iyyd2ZLN3V3N1Tgm7oNM3LJ6TYXsY+xF3P2YnBvRKD+Jr3f1+Lppy/X7Lqyy
MF94OOvoO+NxOTXeOnB5gh8CwfdgM9czRNPDxO925e15oLUH718QfAZu8P42
1frLhnP5y7y/87X+4r0MgucAwT+B4J9A8EyqDmZF1MGAyOv1RF6vJ+IAI+IA
I+oqF4m6Csvi717m0969xHPp/6lH/XPw73oRPOftseP1okJavQjSeHsIeSDk
gaibKUTdTBHf9fvaMvyHi0eji/J3BiWc2fL39HZp7+nh/tq5Iv3Pd3FKZovG
9Lpfl9W7KPCzHHfn+CuOr+bnsZP4eWzx3oh4v/31P+8eZdjXvijqmVP4O4ST
tXcIMT86DfW96xW+z4JqbPzVtKnJRYHv4/hZjgv+uZD7SQb3E/Eehfh+RGbt
ZtVOds53Uf6uX/Oz4davar9oK77rd4m/t+mvvbeJPLNUrbTv5oXvQ9sORV61
aGpiIfDqHFc43p3jw/h9gQX8voC47y/eyV/RoFfZlZXKWYj3w7vw98rq8PfK
pnFeR7xjBoQ83OT3Iy5q9yPQb2WeI/BA/p5qN+09VbwnUs42+VxXp2SYUafa
4XqsnoXAK3F8Fsc7crwRn0c6Po/+8HkkvofyaU33CTMDzS3EO/Zu/J7IH+2e
SN53SCUeInDxXYP2nq2tp3s0ssDvEv53+4FoP5TmuAvHHTnuyMdrJR8vcU9c
fK+h3eM1QZn2tS3E++2EnwDhJ1CI4004LtbZ53z+/uDzV9zPFd/ruXw10f50
53wW8nfoKiZ0nfis9osL4l4nMY+AmEdwjeO3OC7Wtbl8/j7m81fcvxPfxTD+
Ymy/vFK5i/gd5P+OG0DEDbjIcU+On+b4ZL4u9OfrgrjfJ74PEl/i0ekZgeYX
xfvzxHtlbFrdT8WimrmzE0MbZqf8yPvuW8Rw86ftfi1gd7ZOmrhe5Z/iHUuC
DzDi3igjeAJ5v4PgD4y4L8kIPsAIfqhvyt9vDOPvN4p3Y4h79HqCTzLifr2e
4JmMuG+uJ3gmI+6h6wn+yQgeTuWPQOTpQLzTAkT+DsQ7LUDk70C8TwJEPg5E
3Ub5yL+jdJ6/KziA3ysn3q1SiDoPUOfqifoPEO87KUT9B4h3nxSiLgREfQyI
d+SAqOuS9XCiTmtFvJ8GRB0SiPfTgKgrWhHfuYD0ZN+Wal7MZtbePcdQxxDt
zOb4dA3HuETkEYz47gYj9DMiX2CD/46HKL+OvwO8XnsHmFXl7/QG8Dh5U4uT
+B4vkV8wIr9gxDuZjPBzRuStjMgrGZFX6ol1lhHrrJ5YZxmR7zMi32cw/4Fy
0yscisb98A0q/gm/T0e878rWJKb02XDnPay/tsKn9S9vmMHrIUT9BIj6CRD1
Q3Djv7tc+122iOvx5r/rpP0u28D1ELwOCF4HBK8Dol9A1CGBqDcCUW8E4r1i
INZBIOrbQNSfgag/K0TeAUTeoRB5BxDvbFPxAYh9BCD2EYDgP0C8+w0ELwLi
HW84H7Z57/o779naiilxrVT/Ee9REN/NsSLiDxDxB4j4A3d4e+5o7QERr07x
9ozT2gMiXhE8kxE8kxE8kxH9ZQR/ZgR/ZgR/ZgSf1xN5CiPyFEbkKYyIA4yI
A4zIs5jb398NwbyMyH+ByH+ByH+ByMcVos4ARJ0BiDoD5T9A+M+/3kkW+5X3
A72feJouYvu8fFYa6jPi/Vvi3RVW0nz1Gt9xL1nxDovzrV68BMR+H/H+D0u7
axZRZUgQS25lEnjTaySI/S/i3S3WLi7qQAPjp+CS0H/YAsv5TOzLEO/1QWr5
Qr6bxr2EciPTjL0WL2GiXl2Av0/1gL8bKerD2ZlTGtYcEgT3J26octdrJBPv
ShHvtUJ89RXHzY2fsvfvuo2cZzkfRL2R+G4C9R0rmLdw0uJmJuFB1hYHxhvk
xXcKQloUzzkXHxC0soRhPr3Fd/43tMleOVjlpTUDek0wnA8ncHznv1109DSv
tFVBk3b1ebrzXDDei9zP3+vYbFZzbtzmq/jO5yB+Tza70PjYbr8CEe/B6+EN
xx+qkzP1BOIeY09UzjdtB6xpW9t/68MdiLfm35cpVPPVFcN7EQJvwfdT9ha8
9DRZN4jCgdADxO8C0U4g+oW4ZAfEffk7XdOaG8YzGPGu/PyzdbE9Twz7buI8
3mCe95lMr/HEcK5Y4Jk8n3KdWyvEkGcJPE28X+f3caIhzxL4NX4++cbSKdMG
q3mHwJ35Plfs1KQQr5TFFA6EHiB+F4h2AtEvxCU7IP6Kn3fdZWeIf28RX8Lf
nwHLnrV0Kp8X8XkKf/djwa0fbQ3fSxJ4df7dn8vWZ1771HyH+Av+Tkun8PSV
hdyeIG7E3z+Z8vt67V6L9Ijf5fuSA7vtXDHl7kbEXfh7LCK+E/JA6AeiPUC0
H4j+Ii7ZB/Eh/JzzYGtDe38gLt7n8bwQssfsyG8mzk/24fK9NHkmvrMg3mNJ
N9/ZqqvTN5QXdbxrkXqPz/4fEBfvwDw55tXRrPALxEW98VWLFf2NU24gLvYX
kmJjnwdt2Iz43/sI/M+/5YHQD0R7EJfaj7jUX8QluyEu3rUb+jt3QxjxWO7P
GzR/ZuJ7ELZ8XuTn853A8fsRrjyedNXiCRPn+a84rJqVrLNlrVtXjohR4494
d27e0hqzvjNXptv1eUxnNV4JvKRDsVZ+D9ew6/r8dj/U+CZwN+8iHbOn7mA2
7iWP+qrxUOCmCZUfdlbXneh9Y4O+qvFT4K3HHCgdq/Jwo+1dvJPUeEvgjNDD
iN9lRDsZ0S/EJTsgPpSvX2u19QvxvaeaVFmbMp1dNPn1J0SNP6JOu4uvg2Z8
fRR4Z8tKJw11m+clNkfvUOObwM1aTthqqGf+bu44x1AvEniydd9gN58HDN66
PBygxk+B13Au2pZ9e8xWryjyYaUabwmcEXoY8buMaCcj+oW4ZAfEb3H+sEHj
D4jrvI71VeMM+7Z6ia0h/xL80Hlc66JqXGJW+3t6Gb5XJfDZgZ6/CrndZttX
GxUwxDGBP9ioxBneF+rctdD+gmrcE3iV5qfSDe8X+ZSav7KnGicF3rfL7SWG
83jWVWu8mKzGVYGPamfgPSn4vWNCnhH6GdEeRrSfEf1FXLIP4os4T+us8TTE
vZpt75DleYIVNp655V2LLORvDWfVmjPgk8rjwk16+IakID7WI1a/0DOGrZi2
tL5TteeI7yncd1e/gER2/+jr7sYrwhCffWJWVpGUt2yHGuGCGm1DfPGwjYun
tUlh2YPrHkq3NkJ8+zyX7+9aJDGfu62WZ3gGMYHvK5hQb1PIUzb58fXG/T9F
I95NX8Z3UrW7rGaThu8XeL5FPOfLgayiK86zwzNLWPQLyETct/SJavpGXuze
mMCzRVK+It7g87RBJjafQhbv9XOb1uYH4s9CkjvFeJ1jKWNsB3j7PEG+Wv6J
3uRhaChb39gqyOXWP4ibzr8WZTr0HrMYduHiD/dAxMe3PrrkQLnH7ECRjHbj
r6xD3Jd/37w6/+65wANm5FRc43ObmQdfbRztdR358I66p0vMuHWV7T44sfeD
0EeIW/9yGP7T/SAruWB4RdOhCYgfdpqR7nDFg033GgQHyr1G/NaCyPC1Q0qz
kvezm/Vf8RbxLt0vph4avJ/1OGy6ple1dci3O00In93r4VG2ck31k1EXnREf
fnTz3T7VPNiREetnHhocwAQ+ybafLvbicDZsvku1Xg8vIz7dPLPscNf8bFps
jTIp9sGIt+T1NGt+Dk2s+5ebFbT67HkCMqrm75nSIgvxqv+4dRr4KRzylUhr
vykkBfES52ZvcveMATe/umaTqj1H/OnApE79AxJh7JNVOap/It589IM7xilv
4YGt5ZXgRtsQzyjjOMWlTQoYZz7o+8HaKE//+j8nUlokwfCAnSsyPYPwO1DJ
A1l5v5Cn0L9W1R+qfyI+93PAeudqdyFryM3ghZ5vETdr2+24yYrzUDVo33PV
PxEvaGNW5HojL6hasswq45SviC/cUSNH9U+bw8Od7V3a/EC8K78nUp3fuxHr
df6ocvdjvc5Bg+MR7j4+TxDfHuod8Cj0/xq78rAc0+9vX7LLEsbYsu9kaR71
vCJDpBE1jBhbRoxBiMFYBlMYGXtpKlvWUkIhPFT2tVJRyk52EWEsv96ez33e
OjP39f399V7X5zrXee/l3PdZ7/PEqpttLC2mnD5H+N4SFguafn9JXV974eJ/
5uwnvL53i14h5lfVBQFvno8+5Eu4H74v3wDfnRe4w0Xv7sv/PKPuiX4QnbLk
BNkP3s7rxnuePqxOntvmTUJsIuFr7nZs9mnOVvVuzr64Jt9nEq65e20Zd2iu
Oj41pUSI+T3CQ91vdF7hWllNnBHZcuDiB4QffbIqaafLZvX2wo85znV8yT55
l9L62ICEHWp4k/FNrkd5EB5XZFInlzpz1Vr3JgzZ6RJJ7xPDNgUduBE1RC2d
njJmQMJBwrMajTrn5llU3fJ+aN0Xo48QbtO56Yq5rToq36bbnGjfJo3eyYbU
b+oXEDtXCbe08AiblEL4xrCpXX+uulF5qKSOdexwhfCy6G9zh/W3OT3jzHXH
DseVYr1W1JxQNYLwIcFxJ8ImnVJuLHeIXh/rS/ite7532rc5p8wr2bLCjFY9
/oWP1HF6DzsUfM7qfAg/g//9Yp//v4SzPjyKZF6KZB0IZ+tGeOLVPn8a8W2z
Bh0tsJ6Gbmt8Vxv5TP5w1L3Aehouvizf2fi/x2ImjCmwnrz/CeFLc91SjfMa
vaRZ9QLraTCb7nHMuA5fFYuMLLCehm8WhWQa121MiKNZgfU0dAPeRMfp/WN5
8PlcNJ8P4cvxv0P0/yV8EcY5mfVpScG8YvR5ET4C6/Czvg6EmycXWjfCmR4k
Pcv0Bekdpk+JnukdmV4jPcLsAdKnTD8SPbMriJ7pKfrfW7BLO8C+JT7fvbnu
sydZW+3VNnid9QTCzWHfzoJ9K+FDONNTpO9cvwnsdzOomjbLemjzJ01NONN3
hFdtHN167NIR2ofpI+zNGxyU6U3Cw09F/3O79wItqtKqDy2M3xEA/rnjkpvT
A1Zpc4qMe1ih5DbCny+vObKhwxotJvf57AYOWwkvYfu9x3X37dqoZ/FVfRKn
Ef4mqK1XywmbtMe3Sp281Xsl4allK8z6IX23VtTsaeatylaEz407stW8wQ5t
9fCkmmOWTiY8+VTzVo9Gh2pfJVx95eRZhfT4j8ltHZ80DdUOOG6wTg2ylNkP
MnrCmR2iScajSeZF+P5P3okVS67T7PfYFp0esFmTrJsmWX/CX4ZnzFqaOEbL
7DqjxHX3aE2yv4Q7vOxm+bCypVau8mbHH9JjNIn8EG531dpl5pVRShe7jLHd
D10z9Tez1PXOWV3vULyxeZM/xj+pbKmWqn+224g8/gJ/FNvPu/2klcqc2ePb
uixMIj4vodea6nqN6JVLYx/7Jo5RxzWZWiQzb14Cn7n697WPMnYqkfdW7hs2
/yzxyYbebKfrTaLX0B/sFfqDURzypJ3/8PmHlKaOLZpmZRwiPo5F7VN+DVil
Zvl386tachvR9179p7/Lwjjl3CCP520nbSL6ROj32ot0/S7oU3v5b+t+6Ixy
q3nXyGlXPIm+fPeB7pnu29VffRx//zNxGtHXStXtgcewBwRec3hNW2P8RIR4
BJ9ejaw8RqTvVh896tj4fmUros95/lPXF6NDVYeMHrsG5sm/ZDyk1xi9KR5b
mL8qWQfiw8ZP9Gy+qmT9Fcl6Ej37HocqkQfi0+ms20LzkuvUbv0+5M4M2KxK
5FCRyA/RM/kneiafRM/kmXBX//U2SbbbutwcatxPk13BzgvRs/Mli5/T/j6D
/Zmp258Ux25u87TmRuuhamZi3Q1L99wnfAfs22zdviX8G9j/X+n2P8V1g2En
e+l2MtEvgx/xVvcjiP4o7PYw2O00Htjt+2G3CzwTftAk+EGCzzyHQ3FL9ySr
s1u3KOVvPYHoQ2Dnz4GdL8EpTi74zNP5qJLxEM6+v2OK/xeelyoZP8WTN8Kv
Oaj7NURfCf6gt+4PEj3bF1WyL0TP9pfomTwQ3g5+XAPdj6N1Zv6dJvETZX6r
KvFzCWf/S+NnfpYm8csIj0MeoR/yDoI/w+l/mZ+oSvxKmR9H/7sPeZ99yB8J
fCrkKhDyKfBhyB+dRP5Iwodw5seRP1gKfRK2aQnNspuacOYPEv4L+jWN32/r
YdHgoMyvJLwF6l5azp0d0SbPrhB4G+jBy9CDAv8Gfn2nSh6XGufZJwJ/YtDv
+fHQawI/hj4SnVw3T72XZ/8IvD70y1voL4Hb4vtcHWPTAo3fURL4Reipdzd0
PSXw1qhjr/qpXlB6np0m8a9l9IQzP12VjEeVzIvwutA7X0PvSNZNlaw/4VbQ
L/bQL5L9JVyFHsmsp+sRifwQfrnDeGejXmuyoeXoAnadIQz+xSr4FyIv4Ai7
sYNuNxL+9tHeRUZ9eqD+/FYF7DrDTvgdXvA7BP0X2KsfdXuV8D/bh6w06vGU
ObHhBew6w1L4I0fgjwh69l0hwtcMm7rWaFdMedKvUQG7zlDHSvdTVsFPEfRT
um5eZ7Rnqs259KSAXWfYir7EHdl3oIbA/p+DOKTAjwQ93Gy0r975jAsvYO8Z
LOHvTIa/I+h/hN+hIW4pcNHHj9l7hs/wg16V1f0gQf8B/s5E3d+RjYf8bkZP
eR/B/4nOX5OsD/Fh4zflszBfT32+mmRfiA9bT6LfhvVvj77QEjkhPufgT42C
PyWRT0UiV0TPzoUpXlFYbomeyTnhm2J6fmO09yzSjPtpinuwc0T07NzJ8nS0
vyVn6/EHC8QfRB6qP+InFoifCLzcWz3esgPxFpFniUD8ZCviJ4LeBfGWBoi3
CPrWiJPYI48g6H9CvOUk8ggC34R4SzryL5QnQjzES4+HaBI+hIvvXrngu1EC
Z+PRJP9LeaVRiOesQjxH4GzdiA9bZ8LXreg/O2PsMc1yyukuLbc8p3jUlKF1
K+XZjVqx9mvts1NvE95hpFWVVlsytTOdUganj71EuAPycV2RvxP4Q79mHYzf
vbq8Iezq5ZphMnpNQq9J/leTjJNwNi/CWZyK4lesnoriVGWR1z6K/LiIJ1RB
HjzLX8+PC/x8sFG+QylfKaGnuATjTziryyJcFg9vCP14AfaV8KdkcfJF0L/L
YF8Jeln8vDv0ux3sK0FfThJXd4GdMAD2laA/XTjuTfQpsEMcYV8JehGHT2Rx
+B9hzzjAvhL0Ig4/hcXnB8JeagP7SkKvSOhVyXgUyXhUyXwVyXxVyXoqkvVU
JfulSPZLlciDIpEHopflEZi8ET2r7yJ/9gq+4/kqdrKrsT+b8Jvuwj+tsWLJ
U+P5FfgrfO+1bJe+02/knXeBV8D3eWvH3L13Je9+kOCqhI8q+V/C2TgJDwza
+EO9L65q3JJvD04e+4Xql0S97qTWakJC1gfCxXuKQW//KvPu59eEi7rfKgXf
n+bhom75tJ3d8MO9kggX7wtW992T5uAZSbioT87e4DmkxpexMlyV8FEl/6tK
xqlK5kU4WwfC2boRfhLr/BDyIPzcG9iXypAHyv9iHz931uVB4OL715UgDxJc
lfBRJf9LOBsn4cwvJn+Z1YORX1wTdapP6ur1rsJ/KY+61sWodxX4zvb5dcJU
FyehJz+I8Sec1ZUR/kqSB5yC+HkQ8i/CTuuPvNhElh9sivh8LS89/yLok5Bf
O8ryhicR/7+A/Iugn4s83XSWTyzjq+cRkpF/EfTLkO8bzvKM5YL1PEWR23r+
RdCL/GMlln8MQr5jB/Ivgl7kJXuxvORC5FOuIP8ioVck9JpkPIpkPJpkvopk
vppkPRXJemqS/VIk+6VJ5EGRyAPRM3lTJPJG9Kw+zVS/B7uuFexVYfdOhx1Y
CvaqwK1hN16BvSrwp7AzU2CXSnBNwkeT/C/hbJwmPqjfS0CdobAzv0K932vU
GUpwsksZH1NeGHWSVVAvKuzGEairrI96UYE/HqPXYQahXlTgg1C3WRv1ohJc
k/DRJP9LOBsn4bNQ59wFdeDivmU43cP3UJfujvp5cd/eEt9BQ/28BKf7mfEx
1dWg/t8T7yDE/angvUAG3kEIvBHeF5TAOwiBD8F7BHe8g5DgqoSPKvlfwtk4
CWd5UlWSbyVc2WTInZfjo7VNaWhTuleYKsnzEp59/M7Qn/38tZqxC2LDEoMI
jx75plOZXoFaz1lH5s/N8aP9ZXl2wsO2nhwenuirjVl56qcJfjv/p78j82tE
Hm0fy6v+hTxdS5YnPSPxR0R+8BLLk7J6HsKTkZd8yPKkrC6IcMqH5v8+3iup
LyJ7m9UjEb4W82rE8o+zsQ5hLJ8o8xeykU+cxfKJMn9Blk+U+Quruu6z/a+8
IYv30rlwRn/7k/jugySeTHg48uOpyI8L/PWJZr0X5/ioFpZ//lqhV5gmiW8T
/tA56vIUP391fu3xA/cnBhG+5d5wz4q9AtUufbcmLMzxo/PF8guEPxq058WB
RF918Av/9Ml+OwlndURkV7C6I8K9ESdMZfFkVtdE+ErEJ39lcWNWH0X4JMRF
67C4MauzIvww4rGllhSOD7N6LcJFHNg6/7d2pKTui+wBVidG+HrMy4PFXVdj
fRJYHJXVrRH+CXHUfSyOyurfCL+JOGojFkdNlNgzGT+MUP4rXsrkP0ZyjmIk
5zFGcq4JZ/cA4Q64x06xe4zdV3Qe2b1HOLs/CWf3LeG3Mf657D5h6xMjWecY
yX7FSPY9RiInhE+FnFdkcs7kmfaLnQvC2fkinJ1Twp9h/NFM3pi+k+lNmZ7V
JPqa8PHxm0Im9J6klQqzvDQq8QDhobcetypT4TsltNPAr8/+dZ3koUjPRWZN
63oqpX13j+oTmkp4wNNxg+J6FFfSLlokm/ma5HZHzj5vo18ZeefOnTZmyYSP
rtKv0/xmforXfT+D9d0EwvuPuR1fY89W5dqCsXH2ry4Q/tbu2N1fVocrhinV
rtevd4rw+rH6vd0F97aIL10r73awQb0oJcstdNDE1RrRV38/fHevV0eUlq6R
s6vv2U94URf9Hl6g38PEp/JA/Z4PxD0v8MS+3SOs755Q9h0N+HZusx2mc1d6
gL3x3Vy887B/Cn6v5zj0gruuF4hP/O3I8D6hp5Wfno3qaVn3d6KP3DjK6exf
Z5XjK18XLVFhhKmeKvTlfTPfc8qEBcU77O9hLsMVCR/C2f8qkvGb6pQKz1eR
rCfhbP0VyTpQPJDtryKRB8LZvhAfto+EM3lTJPKpSOSK+DD5J3p2XgjfUDXY
ybP3JLVx3TbTfko8QHzYeSF60bdwHnuPORZxM08WP2T0qoSecGZvyOwWmZ2j
SuwlwkdivmaYr8CrvFrUwrg+Z4YsqF3gPjH0nni5tHE946o3/LHAfWJwquIz
wLg+Deo0SChwnxjq3am/yLhf3Rseu1ngPjGUN4tob9zfGVFPbQrcJ4ZRY8+d
MMrPPRdzrcB9YlAXlrpplLenTqeSC9wnhtG4Jx3h14g4w6gnFQ4Y5XliYI5T
gfvE8OVCue1G+Z88OGBmgfvEcB739jLc24JPrRP6/WwFP0jgsV+tDTOer21R
X3oUuE8MH3u1sjOex78N53ILfp8oFff/FNz/gs90j+ahxnNtUXNP9wL3ieFU
/F99jfdA/JblX4qb7hPDd+/f3TbeG6N2NGxb4D7huCLhQzj7X0UyfsLZfBXJ
ehLO1l+RrAPFhdj+KhJ5IJztC/Fh+0g4kzdFIp+KRK6ID5N/omfnhfBQ6Ot6
0NeCDzsvRL/I7/i6PYfWqoEOdWYvH/OR7g32Hs30Dg7vQEPxDlTgrJ6T9M7O
ZNst73aEqqUfXO9b91j8MXG/CTznfj5uK/APeE80XX9PRHkf9p0dGU51fYwP
4fGS/Ivoy/SCvSsvgXzHnyxvokfTqW9tFM+bXJXkU8oHFM6nsPUnXPj1/J24
lyQPwv6XcPY+i+JXVuir0B59FQTO6jTovJdN7OvzakeoZrZr9y2LvP0SciXw
dzvz8WMCZ98DorjrPsjVDLxzFHi9SxO1GQ2dtc3DlvYx9p+kd6CF5Y3ksG+T
x08T7AzaxKwFO0pbmd6bjNkwcnas3W6t8fuOSvLMdMJjHdas+/xF005HNmv9
6ctlE96ixefkmee12v8MX3ncLobkuUh/xS3JzqBeHlUhqKyVKf94scRol8E1
lqo2nxq+a1D6LuGJc1rejbfbrSb2j9ueOjOd8I1pB/YXKXJcHZm/j5cJ37Ly
0PhrM8+rfSObvY+1i1El9KqEP+ER+N7T0mHW7d/EvqM85k7gC4CLOCfbd5KH
XEd9vrGYr8Bj8b+xmJfA12Oc/TEveieIeSmYl8CdsV8zsF9i328NrlPGtcZS
bYWZs0P90ncJn4x9bI99FHgC9jEF+yjwy9jHJthHCb0m4U94I8jhDsihiLf/
gvfda/A+XcjnObwHt8H7dIFXw/txH7xPFziTN9M75cL0moQ/4Ww8hDM51yTn
gnB27ohPjffXulwIt9VyBjyKiMo14ezcEZ+r2Mc/sI8SnOiZ/MvOF8k5O4+E
j5XU85fHu9rOeFdL9fCoP9+Ld7UCH4z3sAf197AyXJXwUSX/Kxun7PxSnQDr
W0jnumOPdqcCQ0aqNpXSvg+eZzrvH/HuOFx/d0z47GnvXC+G26rHcxdviM41
0bujP8w09MMR94M5+slEoB+OwEX/E431bzEHfpDhrO804anoY2ONvjqCvxv6
rmSwPjDzwKcc4zMa9FcZ/cfv9f457ujPQ/NCv5dHrJ/MBtQtxLJ6ieqgT2f0
VniH/kZ/h077NWxEm8bDk+6rtpeDV1gHbiOcjYfyTaKOwp/VUbBxqpJxqpL1
JP5sfYierbMqWWfTeArLA/Fn+/6vPjkaw5m8EZ9k9M95wvrn3EB9iAurD2Hy
r0r0HfFndpRJPiV2INNfpNdcsL/99P0luWJ2HfFh/QpoPIwP4cz+pPky+5Nw
pn9Vib4m/D3ugWj9HqD/ZXqf6I/hHu4AO0eCEz3TvzL9TnqW2QMy/Uv57m3o
+7FY7/tBevn6O11PfdD1FOEz0M/koN7PhPh47s0dPCzpvpb5S5kjXfP2UeAT
gD/WcVlfFNKDjJ5w9t6W4q73EnQ7+SjsZ46H6vgxeq/q4HO8dJ2m6tj0Mzfc
r5vkk50XTXJeCD847V0ZnxeJ6vPeD806+zwm/NP5rKLXh95WT7j/dmDdxWuy
+02T3G+Ej0N/s7FO+x8G7z1i6tP1qHaHbTufq2d+7uajGhYSvmvsx5fu11+o
GX32+L+p3YXkOb7x3NTlY56qRZzNeuw+FEJ40IPgrVbT7qsRm4JuLH5/gfBq
FffV6OKTpj6z317L+8UdwpdkOxr8Lp5RR++94HVtaDbhsVi3l+yemYM42EQW
B4uX+Fns3Q3FwX6HPxsDP5fju3TcVuBMPlWJfBLO+t6oEjuN8B5NK3jkxGZp
lZr/HTK54SgZTnK7uHtcfGmrFO2BV5bvebvvyH5jONlvV1hdmfDfE+BvejH/
3f1Y/8NlrVLUMxWtP1/I48/fJ7Zg7xMZTnyEnhL/K/CPC5959zRMVd1n9MgN
2flZk+wv4fsxfjub/P6ZhDP5IZzJG+FMPgln8ky4M75H1nZVH6cpeesvzhHD
Sa+9R3+beL2/DeEBrZ0io3Oz1CevijscDe//L/qT6IcjoSecnUfZ+SX5Z+ed
cHafEM7uH8IfnjjSyuf9ETVr/v6vraa9IZzZsarEjiWc3ZPEh/XhIX3N9CDh
fbD+zbEvEpz05mDIs6bLM+lHhpN+fMnq+UWcZAXO13OcL6EH++CcmuP8inuA
4aS/FqNP13jX/D5dhOf+EXkmKjdLc69wv8WRvH3n9LN0elVCr0r0rybRv4Sz
/l10/3RB37Ns9IUTeNiFqg3y7DrtaI1NnkHzTPfY+AcvIwKth2rjbwyJ8Mnz
m8T9cwn9vrJZv69K6Pe1gfX7Oog+XXVZn66isCe7wJ8S+1sL/loC/Eqxj58S
df+uBevXtBb+4E7Wr+k7+I/bWJ+lHVifJPQ3E+vmjn5xXdAfT6wD6zMmm5es
75kmWR/C2f/K+qppkvUnnO2vJtlfwllfYsK3F9534j9egrP+pXS/sX7ddG/k
tHs8N3helnrG5Sc7v5AphDN5MPkphft20j3J+mjJ9p3wJ/jfIP1/Sd5W437+
9rV+P0v6m6kSesLdWb9ZgbP/JXrWZ0yVyDPhrF+Zyb/AuWjNcNYnlv7XtfD5
IvpaEpydF7qXWN97ws9C3uJwn0j6K5ro0c/8KPrzC7xCl73+QfOytE9VHQLX
5+2XhD/hpUF/W6en85uNe3Ur7lXeX/GJ3l9Rk9AT7sr6WAqc/a+pjyL6Fi5l
fQtZP0ON40sZPg799sX/CpzpcToX7HzReWR2l0nvF7bfTO9KYAdOZf3rWF87
leNTGe7J7EaBs/0leah39PC8pJqB2uFhfTON35UQ6/nOkHTui2+oNnHyt/bJ
0Tnkxwl7dSCzV/d+ebnias1A9eyH1K2ju76hc729o3qr5IpQ9bfK9cOvR+eQ
v1AF71JD0A+T9PXyL3MazTqs1YypOPN8vZeEt0IfDAv0JxH8GyXGTLOcdVgt
n/C04oU8eoGLvh87WP8QZp8T3gTroOnrQP/rhX6klfR+pIQXCX3aL8tps3b+
7yovD6/OITwO5+syzpfknv9XfzBvvIcVuOh/9R7vsnkfLXe8s6Y+ThI9LvpU
+KP/CfVRLNyHgeoTWD8Hwlm/U5ITP/RHXaH3RyW8K97tDtDf7dJ8WR9XWp9l
ePddH+/uxbwq473/ef29P82X9fmhOiLWx4nqTFg/KMJL4563ZvHzmujnWQX9
PCV9XYie9XUh+uHQjxEs3v4G/Tmd9f6cRF8D/Txd9X6eMj7kPwr6gej/KegZ
f8JZPx/iw/r5EH1xrI/C4vxsfYg+FP1R36M/qsBZP1JZ/1JZP1XSp4w//S/r
y0r0aXin1lLv50Pnoi76St3U+0rJ6qJJ/lmfAaozYf0lqA6hGeT8NPoVS96h
Ex6K8zUR50vgwYX7D/8LX4K+xBI+hLP3/prkvT/Rs/ETzuok6ZwuL3x+/2cf
OVbvSrjsPbXoY3aN1d+yel3CWZ9SwstK3guzei2SB03SL4XVqRLO+mQSLvpy
PGJ9OVidLeGsL6ipzqfwOvzrfcTo6NGWRRemtP9f7w7YeGicmqQPRpl3G/y9
7BXtolu7rT2qmvoHrsS7g4d4dyDuVVbvRzijp3uYvV+gczcc//tc/186d6z+
h3BGT+cxCHUa1/Q6DdKz1yTffRDfU0hmeQrW35j06QPEpQewuPQ65LMuSt4p
+7N6G5aPUyV8THUy//Xd2zycjYdw/p04cX+y+dJ4rkm+78DizET/G+ylsrCX
hH5n3xEjnPXZpnubff+O9MJC8K+A/vDiXoqF3ZWG7zQJ/pfee5VPL5ah7Sqx
qfpXTgmEv3jS4UTPB3e19xWLmAdujCK8uk2nb+o6ndAinv3RPq3YMxrnX8n/
zA7euE1z9Kw9pucD07xyN7h18yl+Tmvn0qGCv5lGdo4C++dbZv/sPX2/VoBZ
uFa+X7mZ3sXTSA7XQD7TmXyuwL1al9lFZrCLLjG76GPJR3VuFMtQcyzWRufN
l9atedbo2fYP7qql8uUkivDKbs1v5M1Xzcx+Z0gv9syUpyu7z2njxm1q/Ql9
v7Z/YNKnOYv+8V5a/Jx61nvUuQAzjfSpeA9ej+nZtc1qpAaahatRlrvilhRP
o/PSDefoa3aOGkAvX2N6eSv08g2mlweDT3/WN2MQ8EGs/8NejOeEPh6yxzYj
z+jG6pc+Yb4P9PmS/RMEendWv2SDdWusr5vp+ztY57v6OhN+H+tWjfVzaI39
+krfLzqnRUrp+1u0Vv7+En4bfCxYf4YOGE9T7CPFmf/ru95557cc3jsnsvfj
pYCnsnfQZyDP5ro8Uz40GfU5Cax+6RPOSx/9vJAdcgn0aax+aSPOnZN+7kx+
K85ppH5OCZ+J98Ul2LvmbJz38pXyzzvZM5dxPxzQ7wfTdy7Apyx7p7zcKXzP
xqFDlOyf1ruWbGV6D7If9fPh7H3HmkWWK0q2Oqv0WXatYsBQj3+9LzjH3hc8
GHN/l5F/pw1XnQvwN7REPa3K6r0vR41cZuT/66aK5Qrwp3rjzaze2HZrtwzz
IcmaW4ful39ZMJ3uGe8Dy8/uPeyhPc65aR6QJ2/iPnmYUfR2j6q7tdsl6y2f
bN/X1H/YK+a3gLx9+fLyU7nww78SLvw4S2YH2kMOze7U9d6fR091sHHOIX2q
7lYdw13dvPL4C7xMtz09ow97qJGTU+8H541H4CNgJzxm9sM78PHU+Zj6uOJ/
a+n/S7gX9EsIi5e2U7206kOS1WojzQ5MXjCd7qVsRR/PSn08dC8lFR4/3UuW
+N+3t/X/pXsM69OZ9ZerPENfzyrZ+etJeLlMff0z9fUn/G/sl9mb/P2i81gN
9s9LZv+YgU+JUvo+CrwC/reB/r+mfgLQp49ZnLA2zt1unDuqH8B5KcL6Xz3F
uSuNcyfwMzh3ETh3Ap8MPiVZfyoVcmuryy3p09eQw5e6HJLcPoLcxmDdeL+p
JNcfvr/RKeuAwEvhXv0AvUnygHu4IvSmwLtBTupDTsT9fw/3cGfWP7Ym7v8s
6Fm6hzOqOhV1v6O+fZ09oNbrZLqHJyC+7cbqDbQqufG1X59UDy3rHl/E/RXZ
YzXA/zr0i9DXNzGeCqw/TBPMqxr0i8Dfliy0DoSng09V1u+lPdbh7Yj8dSC9
3wTy/1CXfzovyTgvzXDeef+Wh7W2zbvdKasT0UNO9sB+E3L4GnL1GfabwL+F
nIzF/Sb0iAH2mBvrI1cL8hwNe0/waSipS8xGn/aDrL/9U+BHWf922bvsXbBn
rrP318Iu6sj6rHYF3pX1EZ2Pd82e7F1z43XdF00KPaZE1JjxYynHSNJHv0Hv
xLB3eZ8dL68p7bhZCU46+fcvoZdIH2UOCZ1n5HPPIsatAB/DZ+iXNew9Tonv
zFcZ+cxe386vAB/DbNxXz3T9QuuTnfvffuWMwvc86YVq0AsRuIcFXqK/Pv4N
+vhpXiexzi9YH/i10MtNdL0s8aNLdRD411jPKH09aX2sYK9+YP3JRZzhPosz
yOKQMwrbFUR/H3pnDfQg9bWQ+MstC9//pC92Yv3L6PrC1OcH++Wl7xftY3P4
F7dYn9UE2Buuur1B9NcgJ090OaF93wh9Z8P6eSYUtnOIPkl1WzN1gbvWJ7FX
mPkQU97TGfLf5P/5LmZl4e8O0/2Z/Xf0L+fbPVdb+Nj8neHhS/dn37TGs6Yv
cFe/jJu/ovoQUz5uO/yyW+x9hwfoy3vk09N4auPeMLDvRr3AvJz1eRGf47B7
L7A69mKLdb8jDX6W4L8d/stJ+FMC/77weAiX+fuivmUiq29ZC7/GmdVbyr7r
VCxAt+dt4f+KeR2DX2ABP1fgGYXXgfDX2Jci+r7Qfon6qzK1db0gzouoj1qG
70GL+caCXmX1TqegN6N0vUm4+G7p4mH+1rsdGnemfDr08mddL//PeIuoe3kF
u0LIufgen2/0SM9dDo2jhH55UFjOyZ45jHUrA3+Kvo8GOYlj73qy4U91gz8l
8GGF5Zn2KxjyEwn/V+D+2HcH9s7lOfzfq/B/Be4jieeULCz/ZCdMgr09m8Vz
RB7/N6y/wDdL8t0ivxbP4jwiX7wE60zvREB/n+XjKM+L76qLdfvP75Xn7a/I
q86HvIl1CIB/2hf+qeDfCfbP14gDiHnZwF4qrtuNdK77wG7pDftWnIu14O+M
uJNYh/8D/riO0g==
      "], {{
        {Opacity[0.6], EdgeForm[None], 
         StyleBox[GraphicsGroup3DBox[
           TagBox[{Polygon3DBox[CompressedData["
1:eJxNnXXcFcX7/s9zdvec3bNn92B3gIENYoCBikGpqNiFioqY2GIHdmBgKwY2
NtgFJiYKBiomFgIWdqC/6/1c83l9f3/ss/czZ3Z2dnZ25r6vuzoOHjbwsGql
UtmtWalEOn+UVSp7NyqVPkmlktYrlaVE795WqeyhY2sdO6jOLjpvqGMr0QfF
lcoINdBL/5+h88bUU/meOm+jY0fRy6l8L9G7iz4xVz21OUB0rPa/0LG9fvtS
5+N1z3NV91C1ebbO26n8K5Uvofrn6f+Gyt9WJ/fQtQeLPlNlm6nOb7VK5TPV
20L0+SobrPMg1flH5XWV99P/J6r+/DoOFX2/ym7Qc66nuker7Cgd+6j8SLU9
UmXHin5f9DE6H6VjhPo1UnVOFX2yzgvqGCb6XrVzvdrprmsWEV0RPVTlf+q+
Nf3fR3QnnesqP0J0B9EzdewneiGdb9dxgOgFdZ6XVipDRB+rtps69hV9p8q3
1bOvwrOrjR9UvqiOe1U2vqxULtctP1TfPtBxpsqP1zu8VON7gsrPLiqVy0Sf
xJir/CrRF4jurDb3VFsnqP2VdN15Oh+to4fKV1G7F4u+WOU3q71LRP+g8hVU
fqn6sJva3FzHeWrnHpVdqTbPF3236OtFnyv6cv0+incseh1du5J+u0jtrCx6
b933JNHfiR4j+mK1ubbouTouVPlNuu46HZfq2kvUh8v1+yiVb6Tff9Vxueju
Om+sY6TobzVmXdT+13pXN+q6a3VcomsLtX2ujs56hodVd2fV2VptnapxuEV1
rladPir/i3egdrZQ+f0qv1HlvUU/KPom0Y/xu9rZTteepvLbVH6Nyu9TezeL
vkr0qvrtILWxr+jVRB8sej/Rh6tPF+r/w/T/85oPb6itSPSzol8X3SZ6iugu
an8+3oXOq+joqz6/qfLVRLeY23rGdUX/q/aO0JgcrmMBlU/Q/wszj3Scpv4c
p/5sqfteIPpC0buIXlD3X0+/ry56iNo9Tf+vw5xWG8N0aApVpqvtQtf01v8T
dd/F9X9FdZ4TvZToquheunYTHbHoltrorPPyqva16lynZ1lN/88SPU10V9Gz
Rb8vei3RM0VfL3oN0a+zpuiYT238oefqn/mb7qD/V9LvK6jNpuhU9MKi71Ld
d/V7VWWLqizheZljaq+zrk1U/pTGIda5rt9O17m7zqvxXei+03ke/X+qnu9o
jUl/lZ8i+gjR/URX1c6MuteZuzQYm7Y0J9WvX3Tdp3WvLWNVvpnKL1P53rrX
H7rHtqyHon8VPUD0/qL/Fj1Q9H+6dk/V3Ur0oSpv07GT6Md13+m67zjdd1m1
PVvH4SqfX+dbdewv+mNdt6zqvatrntT5c9V/SPWfEP2J6PGiD9Rv/+peO6j+
1frWLlf5CJXP1X231PUbqbyv6nyhOpuKPkvXnqo626nO4rrPt3XP0aV0nlX3
/Cx0/qbudTPX+Wu+VdGfq/3t9fwtvYfN1eZnanMTlZ+tNk9TmwPV5k+6bz/d
dwPWfdX5WnU2F72d6G9F9xY9XPUHqf6mqj9P9Xfl3at8e9WZozp9RR+vOvuo
zmaq05U+6v2erfI1RA8Vfabo29SXrfQu9tf193N91WtFqev68H2K/lVt7q7y
e0VP1LUr6/999P8ZuubZusfwKZ2H6f/dqKd2Bla9bkzWfd7U0U3P20/9fFJ1
dmE+8g51vkN1xqmsd810ovIdVX676M11/7cLrxWfsgbo/JLKv1Df9tNvD4ue
oPueyjzSb1urjRdF7yV6pOocp2uP1HWn6BmX1TN2VN33VGeKzguyN2l8HtBv
q6qdw9S/4bpufpX3V53ROu5T+ZOqe6ja3FW/baWy50QPEn2kzk/rt3tUZ7jo
Z+oen/3rvp5rl9Kz7Fk1fYDKt1T5/czVyG1ALxe5vw8w5pHH5i7RD6vNPqp/
p+i+Oj+m/3fWby+qn8/rOEj0K2rzNZUfLvon9fsInaeq/pqRn2Vx0d/qGQ/X
WK0i+njVf1HHK6JnqnyYylcW/aWuHar6r4p+R+/qXfZx3eN7jeHzqvcM7fDt
qc7rrOFqf5joyaJnqRxm5w3Rc1T/OdV/WvTzus+r6tsB+m2Kzgur/Dld103H
8SpbQnWO1P1HafxP1P9/aU36B/5AdM6c1W+jeddqf0jVff6cdUH0JNF55PFg
fL5Q24eqfifRHVXnBJUvK/oDPceHOjbWs/wBT6LyD1R+hOp2SF2vi9o5TucF
GQe1c5h+W67ifeVYlS8g+jdd+5fqHan//xT9t+ijRX+i9/Iue3mb21xf/e6i
+kepnR6i1xD9ku79e7j3q6rzq44/RV+o6zZRvT907aWieze8Jr+iNjuqzzWV
v6Nr1w/v+g39Piv3ODwr+lvRT4o+U9eWepbvWKtFF6nfyZGiG6m/m6NF56nH
b6Kunalrn9C1L+peS2feg0apTt+G1/2D9d10VZ3FVOcQ0d1yz6V31ZdNEj/7
P3qm/1T2r47NEr+3v9XOa3q+P3T8w1zhrOM/0e+q7YX0rqeofg/R6+m4Tte9
r2Oojh/hCdWHhdSfOaIfVNm02PvRAerD6rnfxcJ8r6LnF90QnemYT/QZunYB
XTub9Vn0wqK/F32M6JboGezRjJXoz+C1df+NdNyo+7ykPn6t4xvmls6zOPjW
dP5Cx5eib9F9emsN2VHj+LLKftLxs8o/0xi+V/f+/QplOn6jHZVPrnt/ZW6u
kXt+dtd5TR0rib5Kv2+lPhSsLXrGNQvP2yNUtprqdBS9LnNKR2fRr8ED1LyX
8+1sqPKuKr9Vfeujvu2uvj2v8k841GZL7XRomC95R9d1zcznTFJZf93rOV37
sui5fOfMVdE/iX5W9PyiF2yYr3lB7X3OoTY/0nkT3au7voHD9ftaqr+M6j+n
8k91TFeda/Vc12bmSaoq66066/JNie4rurvo79SfD+rmne5U/3upzQvV/6NU
5zwdJ+naj1XnHdVZTnUmi/5IR8kepXrv6JitOueqvR0L778HwqerT1uo/SVV
97SaZSXKF25a1npEz7N4Yhlhef1+Zs285dmqc05uvnMBzbsN1fYholdkjWL+
sXbomXtULY+cqbqfqvxA0cupjRE186uvqc4vVfMqB8N7N83PHCJ60ablt9dV
5/fA57wh+q/A/2yvOsN19KxY7tq1zTzG4erPzqJ3E32y+n5iYvlxWY3BdToe
1fXnMUealsVeVZs/Vc0PULeZWF7rqLrX63iM9Vf9PbVm2XOIrl1Q126pOoPh
5ZvmH27U2P9dM/9wmMqvb7qfyGC7tZlX6Vo1z3WA6BVV9ywdQyrmWVZW+Vqs
zyo7L/X/meitRa8o+hP162MdiY5nNJZb6B6rqPx7vcPNcvOvbar/ec288Xcq
75X7W9tFbTRqnle5zsNrnld1tVVLzD/DK62q89oqn6Hfv6q5P3upjSub5qNu
0DP+UTMfdYrKl2taTuxctUy5t8rn0/ivW7UseRLfcdOy7We6z6dhfI/THF5K
c3hhtXe+6uxUmA9ENt++MO93Ac/UtJy7g67JY8vwvNtB4f2uXDXfuo/oY9Xm
kmpzAbW5uPo4X93z4WS1s0Nh3pJ5dSKyBvs7PGnhNo8VvWzTbR8jekzTPPMw
3XNH5hZ8o+7Vg/Gu+FtaHdki7O93Vr2nTIN3KMzzvSd6RdErir5K9HxN17+K
dZh1UvQVOrdYS0Vfp/LFRM+peD6uqfZmib5GZQvo+Fb09+zBbaZHqaxgLWav
YR8uzB/doXZ20jiM0Du/QfWf4Tumn3qWG/X/RGQB0TeJfk707aq/veofpfpT
1c6iamdBtXMOe4HKflCdPUXHol8QPUV1FlSd+VRntOgldHyn9t/iGQvzZZNF
NwvzrdN0zZNt5j/fUXnHwjzd26KXKcz37QP2ovYn8Y3zXIV52zcZn8L8C2vA
2m0en2tVvlDT43Ot+r+I6NnIU3rvR9a8/p+nNhfJvFfmeudNHQdoHr2iZ18z
9n53keps2vBezFq5hI5Fde3Fai/RMUP0Yqq7cdX4yVGaG0s3PScOF31D0zLX
5MjzA3p73SOLjSkdiRzftKw0DL6gaVlvXz3rtLTSDnhdoz5+qz6vo38/Uhud
9PsXoiepjS6x9/dT1M/5VO8b0b8i66jPf+raT1V/+TbPpRlVrxNfVbymdmvz
mLyqa6/IAj+nY5k2P9cl6ku96Xs9p/usHHvfv039nxKb13pN116dmYeBp/tZ
ZXPbzAfAj7yja0frfH1iPuFE1e+g+l+1eb05Lqw5c8L3wjN+qbJval5n6rmx
JHCkAapzveqcwztV2RX6bSjzH/wm95q5gu7TS/XO4d2BFeVeBx5W31bV8a7K
79V82EbzebzG6VaVLaPjDfZNnTsxp6ij8wo6psA76bwS81H0dWAakefh93qW
z9TGJYyx6N30XMNVvoLoPUQfz7qg85OZsa9V2Hsbxugmq59LJcb3wIa+0nG2
+nmOyj6MjEetB/aYGuO6UNdfEBsTG6LyE1X+mujPVfZZbHyvVPk/qdfbpUXX
Mq+NS4LrZN7LlgDXybwXLwe/lBlLbIr+M/U6fJn6eHrutfo+jdW2GqtH9Nvu
tJN6TTiQ9kW/JXq07v2Izleo/g6iHxN9peiH1K/r9f9D7C/giKr/BM+i52vo
mMC3qvJdMmOal6is0PEsdeBpC6+rU1Vng8zyxVuaF28yh1Rnqui36pYxZzUs
fyJ7Ihc9q2Mp+AeNZ5SYJyx1LMXYqHyrqvG5U0XvqjYORP6EP2CPrlt2/401
R/e9UnWvUXsL6HhR5fup/DjVf0X0Q7rna7nl1vGiXxZ9t+i3dc+1EsvaA3kv
Osap/tY6P67jbtHbIq/rPFL1t1HZE3XL+r/rvKbaugqcgv0ULFLlW/COwGJE
b1M1LngRe4T61UHH8/r/bf2+aMMy4FTdf43EuGIv1jEd16jOi2FdAIdZgvml
40H9v5P6njaNj+8Cxtk0lvJ85HUH/KRn5DWiJ8/C2MbG2V+KvL5Qfw9d22wa
m9pd9GVN4zwvq87MqrGXPVV+edP0rqIbTePzA9RmHLsPh8Tm29ijq7FxO/j8
/upvvWZe/T+1uXSbeeZz1MZ6uf/vqzq1muXHyzWH++e+fq3Ia+CarDnMmcJz
YhLfYNX93FX32ikOc0XHsqH9PVVWic0/p2p7q9Rr614qa4stt56rPmyQW27e
I/YZGYT5umSbZUD40lrT47a42rhIxwO69x6peS/4rmt17TWxMaWjI2PbYE0f
Rca/T2HPYt3VsYTqfa7yK7i/jtX41lQ+QvQOoufV/Q2uCoan8jNE/9cwPg42
voHKf9Zxmco31PmXujHt9cEXdVwqupvOP+m4gLHT+Uf4MtGD1d5+Oi5RH65q
M0Z+CrKkxnVrrRunql8/6j7b5MY9m3q+Qan3nn11zcDYGOw6kffuHhXjkevT
F9GF6u+V+rcfwMhzyzj36J0OUPsP6LfvVed8MGjWJbW3W2xM+Yea5Sp4sqEq
OyB2H/4NfNoG8FFqc7vc9S9QGz/WXA5WSnvri94XDFLHy/yv5/pCxzS+idg6
mG6qO6ZuubwjfK7auaVuLHdBtXeD/l+6ymamNaRm3hKZljJo8ItldPQRfbPq
7APGqv8XUt2bU//WpvkyobAMiPy8KN+a6j+osR+XmU9nPv+bG0ufT9delboe
PPl2ohcXvUNqOQQZZIr6vgTfo+jdVH5T3TS40T9t5nke0T17aqzfiL3n/6Wy
6apzvupepPv+qv+r+j3WsRG4g46z1NZ/bZY7Kk3v4z+g/1H5v3wv7Mu6niEZ
rfM2Kl+savl/qarlzX/V//lrpjfU7xN0vKnf7tE97wXzT8ybjWQPhm9U397S
8Web5Zr/cssmfPMLVL1uvK2yhxvGD6/V9Vez1+r391T+SMP44Uv6/4M2Y0Hv
6fxxm2X50+Fzdayisdlb162oe03lWcAUa+Zztud91YzX9VTdieyPuvcPrFGR
9+sd9PuYmjFA+rOrxud17iN6H9HviH469hk84VPwg6b5ls9E79t0v5i3cdPf
CNjEwqznFWMKi+jYmDVH97k89f+X6tyquXyk6LLm+ug85q+aHwZrWKhqebmN
fV9HT2TJ2PdkHD5SHyY0zQvB67/fZuzrKZXPyI0z36xrJsfmBcckxvd+F325
3tsFdWOG4DhMAHQlt6vO2+Hd7c4cR05Dp6L2Rufe4zKdHyjM/60OpiF6HfAi
tb1p4PcW1zVX6ny86l+mNm+LvSbCQ95XWDfHGnddm3V/d8CfxG5znn7fSvft
qutm6Phcx6rIvvCVWmeu1Hj9qjFfQfRFon8RvTwYi+g1wM5Ly7Sz1E6/0pjI
qTpGxNbRdlGdR0rjHQvAG1TNd52m+mN0nK56G6jOHaJ767ddde5Q+plYf6/V
cbr6vAo6hMJrzi46n1lY7v1ax3TWTZX/pr6t3zSvuJrOz6vO2nxfrPfq8wXq
86ro0gv3472whqFHXh1ZPzGfsD7zp2a9w/Gq06/qfQHs6LfEexnYWVS1Luw+
ld2TGPN8Q3PsTr3vp3XddN33t9x1ftfv57B/q877AY9EnfdBbH1hg/nL3qZz
B5U/rj6+1TBO/pCuHRd4OXRubdX2JbWdD/wjMQaOHiJT+ZKiv9Z183Lr7N7S
eWc986tt/u67J17PL9T5/MR76mZV72knqv7mVe916KY3UPtX1KzH6a42phSe
c32rnk/MpbPUxujYumr0GIODLuMW1b2/8Dz7Xf25OjfPOU6/r1v3XvmVxuNF
MFU9/92qeyt8icr7VP3uee9PaS6MQfdQ8Xdxe+G99nvW8Mi86Lvg0E3LMj+q
rGOQa9iLz2qaF19Y9Dh0w4w780fl1zGOos8QfY3oVPQI0deybop+TPVvQcYR
/ajoMaLnF/1gwxjBX6p7suhzqsYzj2taj/ulzsc2bAPxGxhkwzYTM6kj+izR
Nea+/r9a9HTq6ziVvVFj8pXo8VVj/Ivl3ifBYjvkXvPAUOfLveaBK8+fe28E
D1gmNyYA3rBsbswBPLWVe507nmds2BbjO7AClX9XNQ69SO69COx50dx7Nbj7
Ern3eLCHpXLjD2AYS+fGMf5TnSVFV0X/IHph0T+q/knYIzSsaz+BMRd9geiJ
mhPPiL69at0asir6NXApdJfgVp/qvZ9aWlY7o/A3z/c+VWVnltZDHltYVnpH
911TZfeKvgWMs7CeHTxx5aZlZDCKsmldJ7x1h6Z1mmCQxxTWw4LTraB2Zuv/
JTSvJ+m8QtNY2vJNy4Zgd+DWA3LzWOuWXp/v1H1vz22HgMwyLrfdAnLN+Nx2
C8hWL6neCw3jYs/y7Yu+Q/Q6avNW3WM1MGm1eVZpe4pbc9tF3ITsUARbEdEP
BnuPL9WHMbltHkarfFBhOw2+T75d7C74lgaovX/RDSTea7AJYc/Yowi2IqK/
VX8+VnsbqD8fguPm5k9XV51VRK8WWUcI7vWWvsc91P7tNevsLlP7a+oZzq2b
Z0KPiA7xQN1vndhYE3q973LrAHfXdbfVvL59w7g2jbFg+IDOsIeOgeCxde+z
XzEvmsZS0AWiz0OH9bXKBxfWSQ3hm9WxErYlOr8eew//UXUObhrXGoR+GFka
HljPs3zAPT5QnT2blus/FP100xjIXP3eOeAh8Eu7q3wy+7/oJ5u+Fj0q/MLX
bdYp76V7fyL6S3ibwrozdKD7FtapHajrniisB+0aeEv0TT+gN2ga19pPv7+M
bIX9U+Jnok30j/Ce4F0XaazW0JifrDH6WnW+Cut7qbI1dP149fsg/bYqazH6
8NJ68F/URqo61+v/1VPji6/nxnZaKr9f5a8gq+gYq/68xJ7VtE4FfUo7jpsb
y10CbFX0IuAOopcHy4uMX66QG8ME11wxN7YJFts5Nx7LHDtGxymh/Y1yy6kf
iD6atVXlrzPnsZdSny+Obe8FjvR5alwJ+kKeQ/0+Qf/vh+wfG2c7sGqdNPro
FwrzTufot9d0vgf+Q3Tf0nzCx6KfLcxjsJ+9qvNmhfemN/imdFyh8v6q/5bo
H0VvWXpP/Fn0K6wBOm5CXi/MYxyla5+IbLsGv/G3vvWV1M9LwfiabnMjld+o
drZTeY/UGEy3YEOB3v76oLtHLnqyatsY5jzr52PwHmqnVDuvVG37cF2wf7hX
5TlzqGqbi8lV2xU8pvKlC8sUj7BuF/7tcd1zfR0/V4zZrJ0at0EvvWBqGR88
4T8dC6e2IVo0tQyLbm3+1PgA/PXxgceG7z4h8N7INCcGuQaMem7T+iMw/B+b
1j2Bmf/d9HNi//FG1bwE+AZ69rFV488fN40bgIUcG/AQ1tHnY6+l71e9vmJX
wFrLd8T/L4p+VfRdVWMkxwScBNn0pCCfjmMfZO2o2laDM7gWdkp3l7Z1BOPm
DEb3TNV7KTaNE6re3/YSPTAxX7BzxXZNlcL2k9sHO0pswNgPTyx8zZOlsV1w
3bkN2wtiK/hs1bZ4x1W8l55ceD+dWPV5/4r1OOzp21T83VwQvp33qt5jJ6l8
WtVj87LoTjo/XbVNGvZEK6bWK4GxdU2Ns2FztFJq3dCNau9fHU/pmpt1bit8
/UOiFy/8npD/+R3Zn/7S77N07S1N72vP6f+NkM1rtvH7NHIdngucb43U++bG
/F6zLR/2UKuk1smiA+qvb2T51HqNvqI7pZbjH6lafm/XvTasi3wssY4W+0x0
u+c2rMPFpuuOujFedLToY9G3bqjn+LYwBv2seNLndCyp6xu6dlN4yIr5zi2q
5l3BUJFX4GnBi9asmR/uovNdqfnobqLvTs0vM44rhHkCn7Fi1X24TdfenlpP
CN+zUtU6u4f0jIeji1c/Hk9sC4ss86X6+BV6KJXdzbOk1p3CP62p84EV65fB
xeGZwbXWQj/NWiF628yy2Cex7VmRJZ9KLEOByTPWa1T/z06yS5hjT+u6QZnr
3wN2kVnuu0R9mVkYp39W7UwIuCtya6+m8fBXVPfVzDIWmCF7SKeKcUXw2o60
n9iGdhP9n6i9TQrjfzfr/GthXBBZkefkGX+KLQOj8wBDeahq3Su6m8+axnXR
LX7f9PwAA3q4avwHPePmGtslNXZXpIHnrlhv+G3TbaF/nNP0NZfoWUY2bNu8
qfryR2Hc8QGNw/aZdWBzYtsx9xT9Ffqi2DIpPNaWVcvmkdrZpGncG5m8P98I
c1X9OVL9GaK2ntE4zI0tZ63B2p9aPpsd284Ze4LHVf8o1T9Q9b+LbffMPrIR
+1JhrHSmyr6MzcttrLKf4EnASnWeq+NS/Xa+nukU0RdVLcfMa3rNQl75s2mZ
5Tn1eeumdaOz4PuD/uIFeNqmdRYvit6maf3IBNFbNq1bfRaet+n6L4ke3zRW
P0dtzB9w+1fApprWL0wSvV3T+MoReu45OhaKzJs82jR/gn3gXnWvybP1Wyvo
TVhnxgQe+GSVjdf5ZtV5MLZMwF52W9P8NLw0tmH35NZD3A3mHXv9GZp6DWL9
6Y9eAnle5WNjX4d99ROx+whfyv1ubLN99Sa67iAwUGRp9eE28Av2YtVfOva6
2kt1Dk79G2vL2Nz6jPVU3rduzGdI6rWSdXJ3zYeOscfzW7WZRdbXbKHfT079
nJfBmzS8jq3ZNN/Ce0eO+S7IMt2a5nmYP//o3KU03vG36FVLYz5gT6PDs3Rt
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
sU6y97XrvhPHiAUrwG+UvRs7AfISD8wcpwObC/LpgKPeHTn+Kxja2eg4eMaW
7SReSo1DkauCcnKrbZy4/0vXbNuyka69PPc3uLd+P7ZlPTo5yogphE03ucI+
zz3Hfs6d5531jVgxxI7DV+PvzHa8xNyFVyTW/YTAZ2JLTNxlct6RdwqfV/hh
YtETdx/eGztk4gT/l9nemPi1xNYmzjJ+hPMy2y0Tl5cY6eTKIvYOcebJiUXs
L9Yo1jTWr3cz25ihmyInBzHwn69abiI+IbEHkPvQE6E/JOYl+DPxKtsalXZb
ZeLawr/0DjwMc52YV4dFzo1OLFz4GWQZ9ODowNHLkIsLu1TwL3RU2AGDBU7P
jQciO4Mn3lN1rrZPcq8n6N2wX8debDvkx9LfFHIl8RuJnYDeGTttfCn2L5wX
Hn9Y9mHyxf8UeEJyStwXZEnstMl5Aq5OThd84cbrPDO3HyLY6re58VX28P5h
H8cH4ZugQ4QnbLfTSOzfBv78csVrFP7sxHLDxpDcgmBLfVLHWSV3xA4qvzT3
+on+Ff9w/FnBons0HY+d8SC/PGNCvDj8uPEdx4cb3cGQimPK4QuPT3uv1Dot
9Fkbp/YtILYHel98y/ErJ28ecQLxQUAHjB87PrXobojZTbzuB3TP9VrO1UFu
wNE15/LoqfJRufcg9K0bNp1Ha5UyxPhOnJeMuBzYrYOJEWOqS2SceMOAFZPD
c/3cdtHkFO2R2+5ucsD+4G3IDUPclUcix+EmRwmxuJmHO9Xsn0ccL+K/EPsF
/QExVYidsp76dVnuvewf+JTS6yJrKfnvdkqMu+7asl86OAlxa4kfgy4Svo13
PT6zXzy+8OjmyGeKXSCxhdCLEV8IXIU4tMTI4Tsl3hCxhojNSJxVYrCyhuD/
1S9xnDB0Q8QKIy8ZvDV89QbIJjXHo0K3TYwS4pOgMyZGEoZ95OUkLjdyKPm8
0HOtG3mNJSYRNn3EZELPRVwmfEDRg0wCB1P74+vOB0DeYWJ9I+eyVhPDiDhE
6O7JjYe/C3mciRmO7M/6TNwibCGRB4lrStwX4gcS34DYS+TKwY8eO1zWJeIU
4FuJ/g8/feKWkFeC3HjEonsrc/wQ4oRsljq2MLlEWDOJa4CP5hapYxSTVwRb
DuJvbxNZBsCvFd8LYkKgi9w/4H7EHgA/JL83cTlQ0JJDC/mLmCHE9kAe71dx
DiB0jmtHjlGBnmg/lb+TOtYusXHhB4hXQCxJsFDiznWLjB11bzmXCflv++bO
h7kN63BuOyt8LhYqLWcgp6MPJvYbeU7IS04sQGzWyPGNjRpxztDrEd8MXILc
EcSnJF8Nuc6JO7hMad9I7CDBANHLo29Ht0iuUPC/X9TO6rlxS3LPocc8KXLO
GfIjEPeLb3yBwrHTyFFMDh3yWZAvl9w65L55LHMMT+J/ko9lTNMxC8F0dw+4
7sul9YmthnEMcqcQd5lcHPhKkI+DdWnrmmNNgVGQU4X4x2Bi5AsjHyK589CT
jopsdzG06dxK6FAOaTonGPjA2i3nBAJfXavlvEHkhyG/AzHe8K/B9+SQxHhd
j5bzDGEbtWawj3ozs40lcc3J04f+9xT2a41Zt9xYPXYB5N5iLcV/c63ctsq/
qOy6pvs/Pqw/xKntVDg/YPt6q/P1TY/DX8yL3Lg3cuKfuf0I0YHiB4gP4ADW
3dy2fHynxIUjbjpr+FYat0FVx74lNygxsYiZB55DDLpXS+sgXlO9jUr7N2LL
gb3Qanr22zPnXyK3BTmYiMFM3jHih4FBEeeZWEHg8V1yY/LEb27Pi6o62zJu
uW0Fr0udX4k8SuxleyLXiL4+dW4jci1hP4D+tJbYLgQM7ZaKbV3IdwtOMAd9
VsvxLMBy1205Nw/xqNBlE5MKuZi4qcRShWebUHec4A6F830QV2/7pvOD46NK
DhfyIhBDFb3pCjrOTBzDEr6dOJbkfCGHBP4r5ElE179l5P6Qw4JcPORwIL8V
eRyIvYcOndhZM5rO2T0uYGusR6xFYLnYeJG/bD2d+6p8Z9FPi36y7vxOYKH0
lX7uon7t3LD9ANgp8TmJQ08OmaubziND/hdyYW4a2iEm31WRcVTiJSHLsDbu
pnvtH7BH8iuRJ4rcMuT+Jj4ueU7ImU4eEfpG7i/GjfV2VzD+qvNAkkOcdYn1
gHwrrAnE68UOgXi85Ki5sul45wfoPCs3hvldaR19Dz3P/wO92TzO
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtnXngFeMXxufOXebemblzUSlLKkVJlAqFlKUQhSIqRCSSJVvWFpWlRRRS
yE6FrEko+/6jrFmzy5rsO7/n03P/mO93zrzLvDN35n3Pec5zzrQYenK/k8Ig
CD6KgqCg/z2rQXBYLQi2jYPgSskvlYPgBZUt1/6SfBCskXyOthskfy/5/EoQ
HKjyu3NB0Ewd/FgMgpY6tof2S6qzUnWP1naQyper/t6q21UFl6rsdh2br/0j
tb0h+Rq1TVV3tOosVt3bNbBBGs85Gs8P6nMT9fl4FgRjJHeW3FRtXlT9p1T/
+cBtNtfxXbUdpbotday5rqOZtuO0/6bKx6n+99p+0v4tOjZVdc9V+881lm3V
po/K7tJ4PlfZljq2XRIEB2gMocra6Ni2kveXnJO8ueRXVb+L+hgouanqD5F8
v9p/q7LOtNf+Tur/cu3vpeupqfyiyPdyvuSr1N9h6q+p2k9Wm69Vfqy2q7W/
WnXa6XrH63q31jVM0f3ZJg2CL3RsC/Vxtvr8RnWP0zZb9b9S/WvU3xFV/xaX
69gK1XtNY9hE+2frfE3UT2NtLSSfK3kblX2h9p+p7Qr1P0/726nNZPW9h8q/
lTxK2zOSv1OdjXTujbX1U/9bqY9rdb7BOt+mki+W/If66Kj7cZBkDTXYW+fa
R9tCHS+ovytV/3O1b13yb9I29rVNVfl0nWOWyg9Xf5up/RSVd1K9XTSemSrb
R+23U9lpPKMqb67ynVTeR+V3cK/Vxx0a686SZ0jeW/XnS+4oeYrkPbke7a/S
sbd0Lafp2O46957a5qntX5Knav8Y3e+DK35eOqj/3dRmtsraqc7fOvc2mX+L
cdwT9XWmtus1ljV5P1vjtb2e8zN2kvr7WfLv2v9KbZZr/6+in90ndOwP9fen
to11PWfr2DyuV22uL/qdGKv7cYbKR6r8QMndNK5VqrNFzs9gV5Wdqe1k7Q9U
+XTVHy35FMmDJBe030PbhzrXaMk76kfZXfLHki9WH1149jWmT/K+nmNV1lXX
d4PO/6PkkOdDWzvtl3RsB41tR21ztP+ujt2k8dxYcd/TdX9vVt1Q5a11/md0
bBOVPc5EoLo76tg2kpdLrknuXfD731X1r1V/b6rax5JzXJ/229BGY/lOW5fY
80MDtW+orYPafqPyH3S9wzTmLSU/oTa36Pq21+83S308qfGMlHyI2r+ttmtV
f6Ku9QnOof1/tU1Qv2er/alqvz+/oeq9ojqP6368oP1ddK4PVL9lLlg3QW4n
+VXJ60vuK3kS84/kvOT/tLXX+XZRf++q/XmSfy/6/dtA+2WNp4vGcoHGt2vs
e/wL91HlG/N7av8i9bdC8nqSI9W/SPtLdM7TdK6RGkIP7X+jY51yfge76HwD
1ec7anuWjv3K+FWe8Xup/X7q707Jn6ltK+ZotX+S30j7O6l9d8lfS+6Q8xw3
Sn29p23fiu/JNP0fo2dktcp/oY7KdtF2s87zq+Rb1PbQkn/r33TN++h8PzDn
af9d3lddZ4fYc9ssyZeqr2mR37W/tV2m/i+J/Ntsr/P1lNyX50n7B6jNQfp9
d9f9el91dlGdS9TXeawJKh9QX5+YT79X2Snqv7PKO2l7UmW3Su6hsU6seQ66
S2P+QW0HS/5E7VZpjB/p/xq1P13tV0r+VOWDVP5h2fKbardHfY64Xe1PU3/v
a+ujMZ6hMeyo+oeq/gW65tdV/x3Ju6p8gepGjJd7rbobqO5pvAYVyw34PVV+
hM5zn+p8o7KOktvq99yp6nMzph/UT3PV7676Rd4njWPj2O/6Jbq+m9T2IG1L
Jf+P51t1T2DOz/mduFR1O2p8h+j4YapzouT3tN9Lna3W9qr2j2b95F0rej1l
/f1U8nD1P1H1z6n6Wvk9zlb9s/jNtH+Vyu8o+X1sr/L3deznyPP1RO1fqfJ3
1Xa3zPc+znnef1/neCPv+f8slX2g7cCKf9O39P88tf9CdbupzTOsc9o+k3y8
+htatk6BLrEzz5z2+/GMqu0h3EON93DVf1r1H9axndX3Brr+HrGf2dmSf9X2
n8axn+rczNzBM1L0fHio5AvYCl4fxld9/w6t+Nivkn/TNl77x+t8c1nr1Pej
at9V4xuo8byp7UWNrzdrQOT16CzJV6j8VbXdV+dbpvq7S75H47ha9fuq/Mv6
etVex85X32fqWD/uFTqY9jvr2DLtn8o7rf2r817vOqr+hMDneFj7j+rYVdrf
QNvfGl9e8o3q+3CdcxOdv7+u5wiNaY7Km0o+W+VHSb5W8kNq/7Dky7Vf03Y4
a6W2l/K+XxupfqL2hXqfJ+j/YrX5ifdN5StU3lvXt1Tn6qHyESp/UOU/qvxm
lT8ieR/JCyTPZI6U/KjkPyTfq/JWan+w+j9O47lN5fuylqJ/aH9Xlc9Bl9S2
h+ofoGPb6n25TG2m6vc4R+U9de4L1b6PfpP7NYZDNH/sIfkD9ddd5e+rbq/M
Zcy5O1asvz2Z95pc01guV/+7S95Q479C++vpWA+V9cr79/1H8gDWepV/ovPv
qf5n6vie9fH+SH3tf6Dyp3S+vXW+JTpfZ8kzNY6XVWdp3u/Dvyrvq/LHi9Yx
mD9fY03h+Zb8vfrfS/3/yXuuYx0lX6k2l+t6x6N/SO6l8t9U3k/ls9R2fXQW
jXdfyXuqvJ3KBzIncj/0/1BtT2i/j8bzuco3U5srte2t+nn13UHbw9rvpPI+
GtvFNbdhjAvV91X8hir/XOX/S/z8nIXerHP+yfyGfaCyw1S/g9pvx3qh8c5Q
+SHYCiofp/ZL0InV3yLJkyUPwBDReUqSb9b+ELX/V/0VJd8k+QjJJ0Werx5R
1XfU/gmNv73Gu4i5WvISjaevxvuf6jyEzqe2Sdm2xEpti9T/eiofpvKF6mNr
tR2h/ah+zo/UvqbyF3hu1efj6P+Sc5KXYSOofia5LPkW1d9K5W11bCHvmvrb
XuO5UfIcXe9E5nOVbyP5PpX/o/LhaneozneB5IK2paq/lcrv0v6rqr8U+0L9
B6r3CNenezdW8km6Dxfq8PE6PlDtL1b9SNtj2n9Wx+7W/r3M75KP1Paw9t9W
+166v/epfKLKD9Z4z4xsY3E/nmJN0f2oqe+ttX+07u9dKuutOteo/Xlqc4nO
/6W2Z3T8DsltNL7uGs/T6LGB7Sl+U37LtirfRdezQNdzY/35fETyFpLnqWy5
5HOxb1T/RsmbopNKPkbyXGyLvOv24Pkvu82T+r+fruGewPPB5io/SOd/gvvP
fKXxt6l6bFz/ZzpfT5X/VPL7+hDPtfbnq+xSdHD0dV3v7RrftRrPg2q/vuoP
57lUnYUqP1j7N2l/DO+DyjPV30r1h+r+LNb191H9f1XnQdaY1GNiLC9jT6h9
rO023d+3tC2OPacxdq6hv9r9w/1V2f3qs7X6a6nyW1X+p8o30H4/9T8o8njX
k3yg5MXqc6rkvyS35Z3UWMbofMtK/i3mq6wV77vK79W2oOA1+j6df8Oq51rm
3C91vvurXht5Rsbo2vrpXPfl/I5un9n+b692M1kTJa/OPG/TxyOqu1T7s+r9
3aDz76+thdoOVv3N1f+uNa9Bv6j8rqrf/8uKtuES7R+n+t9J/offTPevgepc
pv0nVN5C7bvVvAb9rPananxjK75XMyUvUv2NVX923jbpXPX1OPNN3r/fFmrf
TOXXS/5d8mBdx2HantH5RnDP1b6xyq9U+VNqX0H3yKzrr6/6j3H/Jf8PWfXP
V/8bot+DDXDPtd9YW0FyX8kTdL7+qv+y9oerv5PRX7TdrfKp6m8H7W9fcd//
8gyo/x0y31uev/u1/5a2capzhershz2n619VcX3W3sO07Rh4De7E86c6/2m/
WWDdoL+2XjnrCCtV9nbV93Y9dELuo861LO81h7logPofGXlOek7lF4BZqO49
4A3Mn1XbOmAE6DKHatshsE7DWtxbW4fAazJr1d7oLIHXrI5qe4j6b6R73g6M
Qde2SttmJetnU9X/IapTUf+HSr5ex/tqa469qnGO1/73uva4YH31UfVzpPq7
SMcelLye+hoiuV3JNnMGlqTz76JzN9LvtY/6PrxmuwR7hHXgArVdXPB6sLP6
20nbq2AV6NjYVuiegfGl3mr/gLalBdsQN+p8f2aes15S+x81/kUqX6byp1T+
n56n/XS+ospH8Aymfmd5Vx/DppO8icr76pyLeF50rikVz71L0ImY/7in2j9O
bX5V/X1Yb9TfEZI30/lS9TdB+z+g76q8t8qvV5sjdWyu/jfUte4VuH5z1V9f
9aflrZOtjYznnCF5hu5PM9Y3lV+St042V9f2e+Y1ZSl4kv431zZK5dOwH2Pr
Ug9o7FXJt+l8t6p8iNqejM6q/fUi709R+b2x5zDmLubcazW2B7DRJM9DZ1P5
gdoeUn9tVf+HyPgMuu7M0PjTtmpzXuAxN9V4q+rvQu2v1bHbWYdU/9jAY7xQ
Y1+Zed1ivZqg+1NW/fO1f6PqXKey3zKvuQ/r+lLd++naXgRLVHmksjLvr+TX
Aj9/zbQlkg/SGK/T/mPq+7q89YXxGvsR2JPqow82dWIdGt35N8ktE+vY6Na/
St5ScgvJN+Wt496gc/2Rec17AZtafc9QX//T+X6QvFjj31T1r+HdlPyz5L11
vuuYB/Jeh/uUvNax5t0ouZHkvSUfLXm86pfU/lztz9GxB1R2A/o964vu7wUq
j6q+V6zx92scd6r8nLxttkkqj1U+VvLNgfV/bKWBPC/gEWApmddJ1sfX0dcl
v657daDKL9f1HpQZS+Sduoaxqu541b1d8kT1X6m6LWvsPcy12nZHB5HcFOwU
TLlo+/5c7ffUGG/JGRPcr2I8pIHKz8zZLgPTw1bDPrtJfQ/T/RpQsY2W6vdK
tH3I+6U292a279voPCfo2GEVY6mXgF9q21rj+0x9NFTd0erzzch425EqO1/X
94rk5ySPpDw0DrBRybYxNvKDkh/Stp7K++vYIO23UpsLwYq0Vev2ty4/GKE6
Y6vGGw/SsXEqv0P/79JWUFlj7j/vtu7f25xb8kDJe5StWzwXGJ/6r2gs+gi1
30DXd676+1HHDykaKx2lNv8WjZmCHxUlt1X9YyRHkjfX+MZqf8OC7XB+A+49
9vg/zC/Yr8y12mbxvKDj1+2nt1k7mK8l78n1qm3PsnXt5yUHKmuMDa+26xWM
KzUpGWsDX3o7Mp7FWMaGxqMKJWPLQwvGv7bS1qjo33y07t+XqW0bbJzL07oN
JrkH+m7FmABrzUnotGDPXLPafgDGqP03KtYFdpb8BVgp+oqObSj5HtbuirHO
SFuL2L8f2No4yZ+DtaKfVPyMtFH59jw/RetkJ4HFZbbDGCO62jjVbx27HF22
u8peDa0PforfJfJYLwqtazC3jCpY57hK7X/ObFNi/4L/4lhpGfiZbKiy89X/
r/gg1P/KyHge926M+mug8vNU/rPKDy36Odu7YnyY5219va8f6/7tljdGeI7a
XqbxdZfcnfla7Q+PjcuAx9yq8sGMRftfajzrqf0qtd9Z9T/Ffpb8oeRdJX8C
BqT2P2XGBLFnJzB2/BFqf3zO9/s+bRXJWwbGJzetGOvqVrA/pQpGLPl3XU83
3f+1+DdUYVRgPRL96tCCdR7WRfwv1GV9vEJjH6Xrf1J1NitaH/tVdRrn3Kat
5DbaUmxvfA7qe7W2xvyWgfEBfE0DCvbxrGEuKHsuZUz/k7ylyvdSWaI+ro+M
T3yn8k203S35Ca5J/Z2P/qH913RsM+0PVpubI6//IbaN6m+he/eczv+Ryo7D
51DHy/sw99Xx86216TavO3YUOEzk+f9v7Fvd6xa63jt1bAfJb0TGr5kbzpP8
Mu9TxddaBZ8Gr1b9RSW3716yPwnb8kbwS43laW2rsA1UvmvJ/ils17kq30N9
ddU2CDyM30DXuVPF14aOGpesP4KVtFf9GzSeQZLXSt5U23T1/aW2Jmp3Mu8D
+mDZ2EJHyVVdz2jwWPXZm/VYdX/W1lL7Z6h8tvZ/0ra55NMlZ6p/lup/rPr7
Fu1/2Khi32ZX/XlX++9oO13976byG9T2F22tWE9Yf+r4OM/eLtqO1PMzRBvQ
xF6qM0fjv7fiuQGfyEVVzyHMHSeqzrLM8wNzFng9a/VuYDqh1+xxdfxwC7B+
ta+p/tmq/6n63K9oPDhVmy6q+4varFHd7/EPqWyojh2o8rkaw+7a/1rlScn2
AWvzdjxfqvuVto1U/xTV2bhi/wvX3qVgPQK8mb7RJxaj2+JfLBmffrI+Xz2L
3YX9mBkvb6vyU9FXdS8+A49TeVudY2DV/qs2RePVu2n/d22t8Ueo/oNqv7na
L9SYu6Cf4ztUH8sqvqYGepB3qhlT+iIwdj5Bcs/YGDq+pu3BVwP7nHpp/3L8
fUWXv1Zx+Wztd6n7p05W+Ys5H7uwYn/ArKJ1dvwDFdbPnI9hD6CDoXvNLdr2
H1O2LY1+ck1qHYx71Vd1ztR48xrfrapzEu+I7kv/ks/NOf/TtZ+Ov7ps/9jL
6HYV+yY7on+o/wUqG503xgset6juXwRf412+SeXD836nb9K5c+rzRPAx1dlE
5/9bx46VvCawLr1/7GcDnXojlf+i8sPz9kHvX8fvBqjO9MDY80X4N2Nj0Nei
b4Cnaf+Tgv0VPAstivZR7KC+ilwTurbOv1z1X6lY1+tcNPZ9XcVzMRj4yer/
3cx6KfrozIrtLe4tOva56vsaMBaV9eT5TDz/oKN+F/i5wh+JL5jn6zzVvxYb
VPV7qfxVjfUtnsWi/dlXaXzfajswbxsYvxr+U3yX+NcaJcZIwUa/xB5JbUOx
NhygOheX/Gw3Rz/QseGxn/2tJX+s7XntP1ex73cbbe11bZeW7Bfm2Pmq/2fq
a+X3mqv9v7QNk9wv57nqNPCyiuesq1W2Rlt/6uPTUPuXVNZBZZ/yDGn/hYqx
2faST4jto8E383nRfoyp6MNF+zNer/gd4Pnrqu2F2P7FbrF9cvi38bd9FNh/
1UT34yedf1DePqfzYtuc2I7YkI1V/gM+U8lfS94wMQYN9vyV5Kt1/b9kxsDX
+Tfwnep8T1U8Bz+CHlKx7ox+9FjFz+fiotf83ev+uL1i67e/aGy7wo8o2l80
Ft1AW1Xyvjn7D39T+Q3av4J7pGehK9hY0f479O1FFdfPitb74XuMKVr/x0+B
P+jKov0VG8bmbMDVOLNonAtMECwGTOYTXc9J4G0V26fwJV5X+xYqH100n+QD
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
              "]], 
             Polygon3DBox[CompressedData["
1:eJwl13m4j3Uax/HHdo7DOT/LkfWgQwuTrVCUolEpVEaMcQhR1k6KCm3KPo6d
dI7QQrI7aFGyTE2X0XJVM2YwarjUpGbqumZKTZSa1309f3yu3/d+P5/7/i7P
83yf769w+Pi+91RMkuQNqkKF1ZOkT26SDASLqybJa1lJsj2TJCurJcki7AR2
nB7G5mLzsX9lJ0lj2iB3M22skCS9xTfRFXlJ0pcqV06Semr9Xe4f5D6kj8Vy
L1TjAmomry9WhI3n2c27Dd/Cu1O8g140vsk867F54hK6CtshXhvj0++n2Enq
qN4x/VYxqa05SXJUvZnYcSwPaySub3wNsUZqnq/fO+S9jNfBamANsd9g27FF
+nhbHxuwDDZDbrl4K/5K5NF6Y5klbzNWLt5Ga7E3xaVqzje+FnIupiJxNd56
6i3j+1YfD+AbeZeIF1NXuS34hvAN45uK7eNbjZ0zj3bm8a65dTOWe+R9wTeT
77j4NF8xX32sCbZabgV8LFYXa4zl8yTYJmxr3Dvju0Xci+6Puaq5UN4CuoZ1
FE8duQVya8v9maaIv+Gdq/2fnPQZ6S5vKN2NfWeMFahUfJf8/pWS5Gn1zqep
5rAAm6DfT8T95c/EvlWvRO5A8QzPTan4MfmFxpWN1cVm8Z3G5/EVRR62DDuD
LcSGx1iw9+MZlfuo3FpYa2yB+CO8rXY+Ns21bti1mXSsG7Eerl8vvoGysG1Y
L2yKeLnf2nIrYI1irbDFWAb7yTwy2Fxj+S76NpbBfHNcq8V3Z9xfrCMVYHPF
7/K11M7wTZQ7AVuE5WJn1MvFSrD3sEuwGnwPYCf0McP6jbF+68Wv4kt4JvHW
FSfimvxF4ml8o/jW4SN5ymg63lZcja8+X654GN1rbOfM+Rf3aq37u4ZWyf2e
t5XxDFVrDV9/7RXUh68Vz0vYILUK1X5c/kLxn7UvVfs8fLr8r+V+RXsMr59+
Hsce4nuKrw5fJb4C7DH1sviW85wWP+m5utF8P8TeMZbx2H/1PUH8Qjxb2mto
tLGU8p2N/UDuXeotVfcg3zq+iTx7qbRSes8exPLVOlc1vX8r5f6IL5Y7Su5y
7GO5L/JN5zlA5XI78o3EexlLVflH8Ucy6bMaz2eW3Cb4zdgtdKn1eA/7bex3
4gupEdZcP82wGvH+xnNgXSpjn/HmWIOn8AK1G1dN94py8QS+Ar4PsA+pNpYY
S4mfK+R+K3cFz+54B7WLaaHc57E34v6K78tJ96PXxR31M0O7dewPeD3xCryZ
2s2rpvvHNvHr8nfq40/YQcrDPo29G/vFXE7Eu4kdxsYYR57fsfgGv3vwNa6v
zUn3/Yz4M7y53IT3JN7THJbFsxtzpcuMaad4C99MtlPYF7RZ/Astlfd5fItc
WxrrYtzttB/Ea+ET4zvjPpXo75S55dEr8czzPRJ7sfgO/dbBquh7idwucv+H
rcQe5yvDSrHW8U3BLqf17u8knjbGcJW4C11jnoP4umKXidtTa+0J8fypUaTW
8+GLfZ2GGFMLcUu6iG883zy+VpFHrdQ7gLV07WVxG/kPGfNFxjwUfwt7x7WV
fJ39dqLePM/gndTvTAP08Rd8CTZHXj157Sun+8i8WBusZk66p3QSd6YW2gPM
42qeTeKpfnsa11r1XqDZ1mkW9cMK+Bqo0UC/T/Ne4PqF1DS+m9gBvsGu76ma
nifuxb5U7355H+JTsMnyHnGP5ml/Gd9jKhYfjzXha2t8fYypgK8x1cLbY7/S
/754h+J5tgY14x2iwnhuqUhOZ77zsMriSnREfDgnvVczxM/op4xvHNZOv7cZ
3zvGPFT7jez0LDItk+4JsQ+MjnuO9+d7n294zI0G8e3naxL7i9p19Jkfe2Am
/Q7E3n+73It5PxbfEc+quVXMSr8tC9SbT/Wt0xGeqerV46lPmXi/ctL35FSs
Ew0R74n3NOYdZwNj+SHOBdnpmaU2NgL7EXsGa4T9LO8u9ZZhV2al+9HX2Fe0
X619Oel+tEXeIWydeFecDTxzO+LbIXeFvO5UjhWLj+WmYz0a+zr+a77rqbXr
p2IPoyf5+mKd7Znzza8hdRN3p0v4/hnvPi2P7wnWlW8RTyMqw0Zjv8NWigsp
X5yn3wb6vTXOWHKf4FsQ77l1HhbvjPHcjR3le5Tvb/Gt5LtO7n6+FbE/xrdM
/6/yvVAtPSvciY+gzfI2UQf1f+J7Wo0/8n0vv6L2DXE2oHLxSLws5k5b1XtR
3jpqI/cHuaX8G+LMGnsTdgYrw2bKWyX/KTld45xM47GzfLNdPymuGGdonhH4
ZPWrx33jHyvuEGc77SPYuzQGG2Nu3cyj0BwOYqNj/bAuWBPsbew+bAo2Vx+f
q189vr9qTcZ68vwQ33d138Juzk33kF1YEV8H8WvRD18r8XS+B+V1omM8PfDx
+lrNs1f+bPftJfwKGpdJ3+t4l9vxHTKWqXG+tI4Tsd7xjMd94/kHdo/rrbDe
ro3CjsS3BGuIdcIWZ9K9LfazunH+kzuO7xOsmK8FdqNrT2DTqLp2U3wAvlfu
6mrp2XK3+PWcdJ2OYuN4Gueka9Yj3nHeSVi12IvMt7012IWNjH1Tn9Oww3yD
ctM9/c04g+C/j71UzTVYFjYGe1j8AF5D+4vs9Lv0GPYo1lT87+z0/9RzcW5S
81nrt1/u1TRcvDbOV3Ev6Dr7QYk+51Id8V+z02f9WZ4PeFfJ3Yd3oY/EA/gG
u94zzkS8s/iy89Jn8ay4R5yBeO6NvVL70+z0OZwT32O+57QrqTUoxqleEt8Z
+8VtcR/DK87JS9+Vc+J+lC8uV/PK+B9Ji4zpJmwYFVrfW+V+g6+Su1vNJ1zf
Lr6cDokHyr1dvV5xFot6cT6vnn4nO8V/C/fg//RVyds=
              "]]},
            Annotation[#, "Charting`Private`Tag$4159987#1"]& ]],
          Lighting->"Neutral"]}, {}, {}, {}, {}}, {{}, {}, {}, 
        {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzz8oxHEcxvGP8p/uhEVJznAmCyblNpThrsyuq9sUbqOwKSUGkzIYGeRP
Nn8ycURhUIyuLFaKQSkvw9P7+Tyfp8/v+0sVSxOzVRFRoI+aiO6GiKvaiC4s
YzkRsVEXsVIfcW1+4G/wVp5ojOjRy9Cr7Nmugvd2q/pvfBYPcROHkhFHfI7f
1t3CL3OF/8YO90bcylJRNyl/pxba1d3BTnkb/prbMae7jyl5gU/zeezFR+84
xj3dAfykQXqSp32rpLdEo7IfGqMXuwP9cX4aT7zrDIfdP+Vn+HO7C5zEJnk1
n+f73Vx2b42m5HOyZrt5vMNL7JMv/P+TziKuYyv9ARwdNAM=
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzj8vg1EAhfHTQZEIqYGQGMqiBmNFJKyaiFS/gD+7dq2BDyCxmEwmiU0w
GOgkqVCLwWAl8QVMbH4dnjwn57zvvbe812o0C0k28TOQzA0nz8WkzC/8NJqc
DiY9+QOv6OkK/Ikz29RY8iV/oz6UXPd7XtHfyFvyue9+5eiK8p88jZJ8gXFc
YsY+wXH/JNf5imf1u/K8vMMVfvOOW65iDUt41y07d12+w4L/aryBpnfc2zq8
qn+QW3LHto0R3X7/fDRsbX7EAbpYtB9yyf1HfMLH/A9RGif7
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwNzj8oxHEYx/HnBg4lk5JN0ZHZbnGLMvx+bFz5nf+uc8dqUMazKJQ/dZsy
MF3d5CYZmJSUXVlsBgOD1/Du+Xzez7en70i2k1RzEbGI766I0d6IMRznI4p9
ETM4HIi44ZblDGd2Q9x7d8QdX+ZWcM4P8x/8J5KeiFek+NGLdgvyBebR9P6X
z/F5+U9uubfqVoNbM6/5QXT4RE9xq1/pl2ii4m3NrGPKbtybAg74R25d3kDL
boKbNp/5TW4LbX2SnzXnUPO3L9RR0lO7PbmDXdxzGfr5qlnGi3vbbh1xFfOB
28cbv6SX8KSf6idoyP+bGjIe
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwV0bkvpWEcxfGfwtr4A8ZIlJaW0aqM2C4RF1cz0w+ZhIRSIqJXWBJyG0ss
uZZYKlsymzFMLLHUFDoSlcrnFt+ck3PO8z5v3rfsa397X05EDOM1N+K0IGKp
MOIfnciP+FwU0YDR4oh6uqxbwRpWMWnTJG/GmE0jzcjXsYkNzNjM0A/6Fv00
/5QX0emOJN74el2K70Ha/pZu2X2T3/EFso/OlqIE27od7KHPZpcu2SR0bWjF
gewQ3/XH9AgZmznaoZ+laTx4/g/6SGv1FbpKjDhXTn/pfuMEf7Btk5R3Ydym
k55mvxnOcZZ9L5sFWqXv1s/zCdmAOwbxhR+mQ9jnn+l/mwH7F75fVuPcJ1Tj
QneJa1zhpz4l70UPbmS3GHT+nt7hr80UXcz+J9TZvQN7z0o0
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzrsvg3EYxfFHXIqIxsRGmSsuq0ssFlvL7LbIKyHxB+gilIXFjsVARIJV
FyHSRNJQYTa6bCIGiU+Hk+95zznvL09mYTW3UhcRs/TbGDHUEvHYFDGAT3jX
HrGfiig2R1R9V/hnLMs7WiOG7SboQ/aq+8QH3Y79Fz+Hl3iAI+mIK36eP7Q9
wilZPf9GDTTprR95Dhd13bJ36qFj+UnNyzOYsunFPJ5jnzzhs/wS9mPFLRd4
6t9R/KYxqsqz7l+zK1Be9kfT9KI7s5/h1/HazTc47v0SX+BLultManfgMm54
p412KbHdlKV1W1jGexyUF7HTZhv3sIv+AT1FNME=
          "],
          VertexColors->None], 
         Line3DBox[{1530, 1516, 2576, 2575, 3784, 1531, 2255, 2256, 3788, 
          2370, 1128, 2010, 3904, 823, 1775, 765, 870, 3324, 767, 1954, 875, 
          3842, 2020, 1401, 2375, 2267, 3929, 2268, 1575, 3813, 1839, 2314, 
          1263, 1469, 3658, 1264, 2411, 1840, 3794, 1588, 2279, 2280, 3798, 
          2432, 1206, 2046, 3917, 895, 1878, 807, 942, 3370, 809, 1984, 947, 
          3854, 2056, 1430, 2437, 2291, 2292, 2670, 3981, 1514, 2572, 2571, 
          1639},
          VertexColors->None], Line3DBox[CompressedData["
1:eJwV0Dsvg2EYBuBHpKilidPAgISVQROnCR0MYhB0MVU7oSZsaCUMDgl+Aa2Z
v2DCaOogRoNBarFJuDpcud/3ft7vGb7B3PZSsSkiCvwmImotER3tEV10sp+K
SCcjxpngtS2iR5/Vd8tJ3RwZ3lojZvRn3pzybVdO1lgnYb5gXnCukG+krirv
aDb7cO+zt5d5O5fJ61fkuzcD+n5W3Qv6TbnFl+9u5Q0r5idmFecqdbNh3RAH
+qJuh10+7RzVr+lH5J6uRJk/3y3qH7y5J+t+KOuU2HRfNT9yfqLMo+5ZvpAy
S8q0vWMc23nJhv5K/phN66e4bvxHmWGWc3su+AdaBTNk
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwV0Lsvg2EUx/FDom5RJoNFbIZOkhpcOhhEDSSWNgYVicuExCVIDAyIhCYW
g8FgseI/MVMWi7hGUl0kPu/wzTnn+3vP8+Z5euZWppbrImIepVTENYZaInLY
b48YVgvcFer1bc0RR5iVHaoT/CVq+miKmOTv1FuM8he40ffjNx1RbIxY1L9i
ATn5ObL2MuaqfNtZW8jyZ9iRfZtbsY41ZPgSf6x+mT/sPdt/wjTfyx+gYn6T
FX3TxxfUbn4Pn/qafFydkeXVTn4XL/oHeyN82TenSPPbONF34cd9vs15/T3G
kDJvoCNx9gedM4C/hohVftN5FXM1eZPkjniXLckek38mb+udSyjb/wcUNzcw

          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzi1LA2AUxfG7MLcJOkwbWBSTYaDFl2QwCDpQBGELgpi2oMNiMCysiLP4
UhYMBotdBfU7WNY2xGYZGoaggog/w597zrnPvfcZ366t7yYiYgNbAxHXmB+M
mMPbcESJv8JmNqKfjlilL/GdiUjwa/I79RZL8gvc0LP4Ml9ORVTpHipY0G+h
QKfNfupPuzWFGXlFdq6+6hfUJn+slt17xANqsknZIe75IibseXFvTNZAyZuO
HTm6/r/Pm2dvFuVn8lNk5Qc4oUfxYb7Pr9BtLCPF72OE/tFv25H31xx+kxF7
ek967/SR3VV+SK/r3o76B7KdLtk=
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwNzrsvQ2EcxvGfe5WU6OI6nKRhq1hcEoNQiYSBbmrB2AFhkLBaJDb+CIMZ
g4HdaBOXyWVBdKEd+AxPvuf9Ps95z0nWN4sbdRGxKmvNEY3piAbJtEbstER8
ZCKW+ZlUxLSkZZt/5w9tFnU1rEq9rtgRUdJfep7TTeC4LPEXeM6VcQqHcZTP
4493CrLnnjFdBfd13/jFj8ipXV6X44+wpMvxif9d8bzFX2HNriq/0q5/9q+J
/ZDzoLxwbXLPz9t3697wVR75WfdUuBPbThzAfinwx3jGLWAKs9gld957cJ50
x1+Tb+Ku/RPe6m50B3afuixfdu7VXWMf9sg/rDMxTw==
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/G3dMeRuxTDlR9RV0x+DcfJoNxguIERUbdesVCK1aKM8jcY
zJIszEaDEp3B5RbUGdT58TA8e37er9f78/l+h8pby5stEbGBcjIi2RGRQCYV
sdMW8ZaOWJEX2yMW0IlteV1+aGdJ981NtOpWdTXdpfOibpZnMhEFvsC5rMLz
PMF53Th/uVfEnnemdZ+8r2vwh3wSp/bGdDn5Ea/pcvIX31t3vsKvnR80kdZV
dcN2R80jqMm68CAv2c/q6vyKJ3nDfK87sdvtPMgDOMaZucQp7uUp/9HDd+49
yua8EfzMu7oq3+puZAf23hP25RVzv+76/33uwx+OdjIm
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwV0KtLA2AUhvEz0d2CypIgDN1AYQhaFcG5OLBoUFnz0kTF4IJhQQYGMQ1B
hsFg0P/AZFyxWjSpYDMujDHxZ3g4533Od+Ob3jlaP0xExCZ2kxGPuM5EXKYi
ytmI3FjEilrj79Hh57mGuiHf4Vg/zu2rVfkWz+mIZfRGI/b4uv4Hp6iY3yBj
z5PZGpbkFlJcRV7FgnyFOfcvyl/2fqJmTYm/wIdcMitak+QLapE/xwOf5ybU
Sbnxf6d+mPvV53CGtjOm0PXWgbytf8UWsnIdA7O2vd/6IZygz72rb+iORByo
TWdXvaFl7ax/nMEL/wc1fCt4
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzq8vxHEYB/D3sfNzY3YEY7PbzPwoVCZdFGw38ZRzOwkzxRBupkiSYjdB
EPgPJFEhSpIkmXRBwEt47Xnez+f7fD+fcn2vultIUqXRk9wz2p+UOO1NvoaS
mtktT/LicNJSN+Qb9vUjZtvqmnzNY1+yyrfdpvmx/pMjKs6vGLDz4GydFfmS
in6ZJf2M8wu17h0NtmiaLZid0yUXmPD9u3umzc64k6d8N65Oyq3/u/RFs6gl
+YS2t5Tp2P2VN/Wv1BiUD/lx1rbzoe/mgDde6BSTMf/c0c96xzxzPMt/rp4n
HQ==
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzz0vQ2EYxvG7oVriZfGSCAMiEmVhJCziJbFUdEQiqZgqsUl0EINNfAG+
gM1swQdgMxmkFmoRiQ4S9XuGf/7nXNd9P885I7sHG5VMROyg3BaR74jIoa89
4jQX8dUdsSVfyUcsowsn8rr83ExJ1+Q/ZHWlnoh9/b3ndd0iL2BTfse3smNe
4lmewa/5IqrOmJc3uGr+h7/lc7hOs7oJ+QWXdQX5Hh/KHtL9aEULhnQ13zhu
tmB3Eu+yQbzIi2aGdZ9cx6t8zTkZvjLbqxvjUazKL/lGts2dPMD9aDrr2c5H
+td0P7/xkZ0aP+qeZGdmG1k78or3qdTxdPoP/ANsti9a
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzj0vg2EUgOFTSV99m6jJ16BJE8QgRFqJgaQGi6RLB90IQ6WLDqxM+gMs
XcXkB5hNdMckBoMYhDKIwWBwGe7cz3Of836Udtv1/UxENNBMIvL5iBSjaURn
MOKrELGlX6CQizjR+tqme8ZeINFb+qvec66ZrXEV17hyP+J1XuLl4YgK/3qm
jmPfWjXb07v8ra2g7Dyrnf7P7MxpLT7QbjhFDgmKZi++P2O3gzf3STxpRfdP
Ox941gbwqJ/7hxGzaZ7Chvee8aW2zUM8wRV9nB88965VvSfLO/oh3+r3/JON
GNPazgt27niR5/EHFGIpHw==
          "],
          VertexColors->None]}, 
        {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNzM8ywmEUxvHTxowaLCILM2JtzBgXQGlpEzdgpo1fE8oN2MjCNdGwoNyB
yr9yC0Jo4bP4znOe73nPu1qp75+kIqKMejricSaii11kZiOSqYi0nMYeLue8
8S5nXstEfCDLdblDN+v6CPNcj0u4xNt7fPJ9rspV9Ta+uSv9if8y33Hnbrdk
j9+Wz3Y7sskXZBF9u5I8wAU/dnvNtfBjXuBe3NX0Df0XOe6VO+I29T8scm/c
MVfzVwcTfsAtmW/wgKG+LG9x5iYvG25O8W63ov8Dsz4xPA==
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzjtOQmEUReFjQ6E8StFIgbXR4HMCoI2CsbFVSxLvRTAqE3A8TIPHDKRT
FMEZEA2fxcq5e+1z8t/yXXqVrEREHa3ViIO1iItcRDYfcYOnQsS5XEEHDxnY
27FXl5/1OXvv3H02Ypdv8C98nv/gE37ddxF9NPUT/tBuUx7gU/6Vi+6OzDc7
Vf6LPzNf+Zp5irHu1lzg2O4eOv7rxKzgUt+1X9BP3afe3/C9ieT/VvfNt/gt
roQhUt2Mb6Mnj/DIzeV989pdmdtGW/7h/7y3BJ3xKCo=
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVz0kyg2EUheH7Y6C0qcwwsgYGQRCib4JU2UBMNUUQO9CbsAirEBtgrMkW
dPNIPAZv3e+8535/M1jaK+4mEbGJckdEpjNiBKddEan2iH1zVB7DmXO9J+IW
B85Zbhxpe+dyGS+Y4CYx1BtxIV/iEK/YdvcJU/oP72uaffZyZh6fXNjr56bl
WTx0RxTdqZqJbkD36Dyjm0dJ94sW3Zy8iC25gVZuQV7CndzEFXeENyzzKxj2
zGv5Bsd4x47dZ6zqv3xXhashZ7fAreGbP+Hu//+JX+c28MO38X/6FyxF
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVz9sqBFAUxvHPadIYQ5IkiXfgBciF3DlGklNExpBhxtnr4Ikod4pyTVHK
by5W/2/919rtvce2qnNHLUkW1X0xqXclo6XkHNt6kqdycsfX9CP8Kbby6U5u
+RP9MD/LHdv9k2/4X6zqX9RQM9v7wWuzb5yxX+EG5UO84ju4A3mA28dLrp3b
k/u5XZxwb4V7xXG1w/WZbWMLf+HMptzLbWC4Brcul7mvQvKJde4Dj7zvWZXk
NTvvzb+bveG0s6tcUV7BM/7R7hS/rO/kl7DGP/CT/IK+wM9jQ/0DMl4nxQ==

          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzEtOAlEUhOHDyER8hA1g2ATqMmzwSeIAGWOMaQXaFgQFBNQFqoiuxI9B
par+W+dWmtdJuxARCb1tRnwUI+63I955n7d2Ixb4oXxHB3SOzbGFzal+pec7
EY/yDM/kJZ2su03OX/EH3sG/6Vieepvie+4n8pgmell/kX9snvmKt7E//ks1
9yO8wYf8gs+9j90O9NKGe7kvp/ZNb6lNtv4P7/Fb/Yvqcm43wrvyDfZJNTnD
h/iZ+309oSot6Qm/xDtyz+6Id3llK+IfKCctRw==
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwNzb0uw2EYhvGni6GlPQEStPWxOguTpFNniZVoREOa8ldL06D6germNOwc
Bi0WH7XV6jdced/7up88z9L2Xmk3FRFbGKYjpnMRfzjFA3ZyEY/ZiHtdPxPx
4d/AQL6Q12cjFs3UuTuu5n3HGt/S33LH8htWuSZ3wx3JY6xwXXc66PMzdhX4
Ir64H3xjn+/pJ/6/+MSmmRLXxZP8jKJ9C2arug6fuFfg5rlD7po78I6Q5+v6
NleRX7HM1bgr7kR+QVu+lDfsSNw4QxnnaCBv5h8Xly84
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzbkuhGEUBuBXo7DfgoQh1kZhdw1EYSqJC6CmMSMoppgEU5AQhUJoXAM3
YLkU+yzEo3hz/vOcc76/f2NrZbMtybJcdCT17qQhRenrSdZ7k1e+3ZUcdSar
rMLe2IGdNX1Rps0H+Ds/5Md2Z9gg+2AVVrL3KLP8k1VZWf8kc+xa/8VP3T6w
ktsRtclH1W+zCbXMx9RxaZlNqtX25Mzdjf5W5r1XsFd3U9OfmC2wIdb4/wer
sUU2zJrsnO1561mWeItdsn39i/zod/i97103BfXK/E5+zab0f1q0Mpg=
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwV0DlPlFEAheHLYkIIy29ACxJEdiGRHRsjHSV0FlSEIdDTggGCFEDYR3R0
FBqIAhohYUvYhd+AgnRsJpY+X/Hm3HPPe5P5Ju9VrKUzJYTQi8+ZITRmh/AP
TajKCuFMNueE0Jcbwrr8xEl314AHqOScype2nzJpj8u/eIun9u+2R96f6LP4
yJmR9+hx/81ewZvSjzGJD5wJeYduzhqnnDOuH2EMCc6q+3b7rT6KMs6iPMQC
3nOWOW2cG70epZzn8gC/MkJ4x6l1vkYdSuxJuY8O7354P8+p1q9Qg2LOivuH
9j19JPpezrD8gzco4nzl5HF29SHEOQPyEoO4sD/hvXbeQT/mOH3Rhi5vv3AK
Odv6C+et6H/kbDjH7L+j78BjTlr0+5GKac4Sp5Vzrj9DASchN6P/Bvn2/6ac
TWg=
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwNz8kug3EYhfFTQ2sWww3Y6c4Q1iS1QxNLykIIK91raydxA0iMXdlQMVyK
4W4Mv8WT9z3Pef9f8k3t1jeOCkmqeBxIbgaTreFkbCTZw/FosilX8IpD+c/d
Ey7c1rgGN+42cmMouTS3+SY/wRfkJj9tL+MDD/ou/han8ie67Uvuyt7d2X/c
rPI99qp5xq+Z6/jV7Zsl7l5/hfNi0javsaNv6Sbd9Mot352xz6KjO9AV+RN+
jpvHF551Jb7j/97lb7xxfdyKWfNugVvEi9zPL/vGP56oJi0=
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzztOQlEUheFNI3B5OAZbpDJBrH1WWpjoACywkyEoqDgJG+UhKKL41mGo
CQ7H7xZ/zl7/OjsnZ+GguXuUiYh9TJKIq0LENbrFiB5q8xHHzi7XQ9+c4y7L
ESfmPjfAMjeQb9DCXMnMD1HXDbkR2sjqOvZnuNUnWOUr7o3MYxSwxi1yd+YJ
vu3t2flxruuqul/zve4RDV2e29A9yE845BJuk5vKz1jKeVc+Tf9i/4V7xUr6
FjfGGfK6C/t/eNMXcc4n/La77/IHSuike+7t8J/yF8rY4v8BOAIu+A==
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzs0qhHEUB+BjpeYTRVkqNVNTbgNJGL1Jkoadxdi4CC5mjO/xmWkkIiIi
TYQNd8Fjcfqd85z/eXsHFlfK1Y6ISNRxKuIzHbGUifiQ+XxEPRdxxN/NFf4m
c3woG3HI2+YFvtwZUWIHrCjX3f2oebtXbwqsYTcoE/cvbM7uWe7zbvakn2WP
co91sQf9DLuXI25X2a8cVncssbuVWb7r5kY/za5lhu2wK/0Uu5Rp1u92m/fJ
Nf/4rSbsL+x72ZZdjyx7e87G7Vpyk294O8mb5jF+Juu89v8Nfmoe5SfyS/0B
08EzFw==
          "],
          VertexColors->None], 
         Line3DBox[{2760, 3058, 3509, 1228, 3947, 2759, 3402, 3508, 2291, 
          2758, 3057, 3429, 3946, 1226, 2757, 3728, 3820, 3428, 1224, 2756, 
          1222, 3819, 3427, 3054, 2755, 3888, 3053, 3052, 2754, 3887, 3051, 
          3584, 1337, 2517, 1339, 1338, 1510, 1509, 3980, 2753, 3049, 1912, 
          2752, 3048, 3507, 3945, 1219, 2751, 1217, 3818, 3426, 3046, 2750, 
          1216, 3817, 3425, 3044, 2749, 3933, 3401, 3424, 1334, 2748, 3936, 
          1215, 3423, 3043, 3172},
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzksug3EUhvHTosQ1kViABZAYaamRDVQHTNRA4t7UyAYMaQmL0TLtyKUu
pd2BSCS0tQK/Dp6c8z7n+5/zzW4f50uJiFhDezRieDJiBDcTESvqKtfCjH4T
W6hMRRTUD35d3UBxPGKBv9a/81fqH4747lhEk7uUezjkOtwbdyF3ccDduXmL
V37armU+iyQGMYAT/sV8SJ9CAjkUuOf+v3rfxr59876tmDX4b/f2uDmuzD1x
52oHu/yX+SN3Jv9ih/vkHri6/INF3MundqT1mf5bt2qoYkn+B0FcMGE=
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwV0ckqgFEYxvFjIWSeZ3INdlgKyUopJSmllELK1i2Y53m6EfN0C+YoMs9F
+H2Lf8/wvud8p76y9p7G7pgQwgD6E0NYSQohJjmEZVqKIt0fbUgNYT0lhD55
Sf7FIopRqPuhR+jlF+g35qMZCnRVzn/xh+iW5+gn6vWz7s3n8/Xv9ABd/Cx9
Q52dGTu5fJ7+le6jk5/Wf+BFnkE2cvXPdA8d/JT5O57kaWQiR/9Ia929ZtYe
7ckPmER6dJfuntbYWbXTJk/IdxhHKrJ0lea3/C5a5TF6g1EkR9/TVdi55nfQ
Io/QK5TEh5BIM3SXdBvN/DC9QLVzk76dEL1Jf0630BS9Rf+GM3kIcUjTn9BN
NPLj5q84lgcRG71bf0o3UO5f/wPiFUnm
          "],
          VertexColors->None], Line3DBox[CompressedData["
1:eJwVzskrxGEAxvHXTRkzRJF97ETODpaTJMmWJEnzB3B28KdYD5zs+05JKYyd
pPwZlpPPHJ6e5/t95/29E09M9k+khRCm5SsjhItICE2ZIZzrhNRzjXgoFsJy
NIRPfMY3cKd6XOq4evxmf9gnKYeP9ZjUcm3uV3Ov+B0f6Srcnh7CqF3DVeAX
+8U+1OV40L1F747gaj7OPduP9gL/J2XcATec+iZfip/spD3v/FdKuH1uSCr5
Yjzl7Rt7jyvCu3pQKrhCPODtJXev8Q5fwG3r/tR/41qd53OP+Apv6Ty8qXsl
zrX4TS73gC/xhs7B67rZWY8u47O5e/vCXtNZuM/5nPe7cSkf45L2qT3L/0iU
W+W6pISP4Dv7yJ5x/i0Z3ArXKcV8Jr61O/Q/+PFBTQ==
          "],
          VertexColors->None]}}},
      VertexColors->CompressedData["
1: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
Fr9j9UmweBzLb2DvKGH3rLE8D3a+Gsv/YPWdsPwPVvcJywth+S6sjhyW18Xy
t1ieFqufhuUhsfppWF4R8z9LgiQGHyR0ad/tw4O1efBmpKnE84V/psdROjbf
sXc3MP5YvID5Q6wOcEc/KUr9JNv4AquTidk5FreyjSs7a51lG+/n6ywU9yDz
/fK35uKt+ythvJ1nyEEDLlrfterixLEqv+GiVQEGD/oermCdP8Hyh6Ydviv+
D77bWbgO44/5W7b5Rmy9w+hYfptt/rmz4g6szjbmH9juI/xX53sbLsLqeA/3
3GwZ31wCNzdldlk3IA1czoVt2DMxEY33O8v/iFF5zKk8ulQeNSpPOJVnHZWn
s3Am1t/Ows8Ynu+sOIWtH8DiLOzdkM6Kf7F4vLPyDGztB6vXwbM2Wm1I6NlO
G8br5PMgfcyS2hUaHLTuSta+zzvEP1fA8e1fHkTIFsD2Y2KZP6tS0Po/w9dY
3dxP/FXPkGfS25eWg2aKkLry7Gy07lbEghLZyN/OYX6NEC7YLVGI1uvb59Sw
ZudvdeEWn3TaHhtQjNaNPJhfptJE1uXNGYOVn52vAI97KxKkbfLQeq2x6tHh
rnVV4JO0drDioyJIissZOGp+GvpuAvYeBNvzgVNnmvzCpe+MZn1jcGmJrO01
BpdidLS+JVKvA7sni+XDoxfZDPxE9B88r+XEYycSZ00Z8/BdCv4ODrafgtEx
Pth3MTmxfmF6YHv+GbtPh8VT/+h+Ysf3gLD9PoyO8UHr5iFysr0niOkNqz+D
1f3A3gnqWKfFltZpweqfdNyX/Ej3JTvWY7Gl9Viw9hh/TB5Mfqy/mH4wfbK9
v4PVY8HyeFgdGCzfiO0vtP3f8S/WHuOPyYPJj/WXrd4wOjYvMDrGR3xz+q86
M3IvlvyqM/P6RboUU2dmVcq3X/f3fSpP/7q/v2HSm1/39596X/i1P/hjvNZl
Zn+wiufWPaMvB/bqRD+MIP7/6UiNPe5nedDdvKCn6+ccSJbJnc6sO2vODhjO
rDsJt9dNY9adiwMXDWJweMUT0bkMDleV1JjG4HCMjvHBvovJifUL0wOmN6PJ
rb/OyauWnLRmzsnb54ZxmHPy2Droc6D8V97mg7yaC5O30X0jPZrJ25RZ9v6V
z7Q/majE5DM/RgzKZPKZnyJDgph7WO8F9Z+Ze1hbDg3YztzDuldadZnJn0h9
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
Fln709MO54Otm9h7BBifJycf7FhLcMu9OV2Wn5zOh4upnz+8DsHbY+s71t54
eM0HlyKm/skk5eOhfJg1dci+/lrteECT4oEqigcwPpNu1J3/QPBnj2mxqtIJ
fPCxsMs/YZML3KMXNR8y77Arj+wjm8SHQL1pw2444Hyw9hh/jA8mP9ZftvrE
3uNA6wbsz1mlQcZxg6SL1Ir5fNj2fZ1ojyfs7Qdrj9knZs8YH2y+sMV1GP5s
ahj6I4DQP4FyslA3Phx41OPpBGvOH/jWmeLbwxTftuH/ART/v6D4vw0nJ1Cc
HE5xclsc4UHjCAUaR3TE7bc74HZNituVKG7vGAcZ0DhI736gbvHndvozqS9v
Emr+jPNDKM7H6BgfTB7s/R2sX5j8HjSuGUnjGmka12DxINtxwcYXswcsjsPo
WJyIxa1YvzD+WJyFxWUd9xHeIPfH2+hYnIjFlZjesPo2He3qIbUr7P4Uxgeb
71idBMzPYPWa0LgSOfeCrYNYXN/m53Wonzeifh6rI9G2vojQ9eUEXV/a3udK
ou9zWdP3ufLpOsWh61QAXafazrFz6Tl2M3qOHYuvsfbYuoPJg/ULW3cwvWH6
x9YXbHyxdQSzH2wdweILDDdifLC4A8OrGB8sHsHeFcL4dIxTJGmcgrXH3oHq
iP9HUPyP8WmLd6bQeOcSjXfa4o4UGndI0LgD49MWB8XSOEiSxkFt8U4TjXfC
aLyD8cHaY/wxPpj8WH8xPpg+Mf1jfDrGU/40nmJrV1h7zG4xO8f4YPMIm3cY
Hyz/gOVP2vItb2i+ZTHNt7TlTzbS/IkmzZ+05VsCab4FaL6lLU+yg+ZJpnfY
R7Ci+ZbTNN9yjuZbttF8yzKab4mg+ZDlNB+STPMhGB/s3StMHuy7p2k+Z1GH
fA6mN0zPW7am3Gbecfs2++pK5h23RbvnaTHvuPlf1djMyCk2JHE5I+d19YsO
jJyr0+5sY97nsksvXc+8z+XivlqaeZ/LiO7HRdH9uDt0P67qx+lW5t0r163p
koGBHGjZWDyDefeKbXvsu5icWL+wPBVmn2372i50X/tzh/3xSroPrkb3waV7
7QpmzndxKua+Z853JQ99asqc78LaY/zZ5iHZro9s62Fi6zu6j4zgBKw9hkOw
9tj7p1j7NrxUQPHSAoqXOqs9W3nY9petPtmOF1t7YGtv2Due/6/vNQN977Xj
+7w36fu8GB3jg30XkzNs6I1Y5v7FA8VHG7qSOGXHvn5OtZYc9Lwudp8CO/eL
nVvG7hdg55MxOsYH+y4mJ9YvTA+Y3v6RPXR8/7rjOE5C7OEaYg/XEHuY1MEe
On4XkxOLizH7bzunmkbPqfp1OO96k55rDaPnWnXXKauEMvnMIdwlS1P44Gv9
7Ji3E94e4892HWGbP8fy8+j5ZCT/j/rJDvsIV+k+Ata+bZ9CnO5TnKb7FOi4
0P0OcbrfoUD3O9C60HQ/hUv3U3rR/ZTOas9WHrb9ZatPtuPF1h7Y2lsbrvtK
cZ1FB7zam+LAaxQHOlPcaEtx42qKG/kUZ7pQnPmT4kyMjvHBvovJ2fH83oQO
5wwd6Hm/T/S8H0bH+Pyz50VrkfOiz+i5TRF6bhOjY3zYnufEzjljdOzedNs5
dkd6jp1Lz7FjdIxPZ9+DuEnvIwyk9xEwemfdU8DidCwPcOJQn4yrZLxCdee/
u/uJB466NU4h0n/OS7Tt8zZrv157ktCj7cZNtrvEA3BesWlERg78CPZekELo
w+/vSPM+zgO/s8tHX3+Tg+6z32h8pZ1BvqvYR+th8Cvy3WVPksN7/ued9/ib
3rl0LN+L1bfH8snY+1mDBFPrmHr7o7WL9Q6M5EPIyq9zfY7h+e2A9ZZLq8h8
9PnikZhuy4f75xOMJT5yYNOT/TtvE/qgsNF6oav58F32yJlzHHx/4bv8Pt+b
hD601nbeMR0+NBxV4h72+8/T/9/0v+l/0//9dGy9w9ZNbJ3F1uuZL2+L9CD0
9/YHpUoreXA5SyNl51/c+/hPo2N+my0fzA939POR1M+z5d9xXfhB14X/NH3+
q+mdpQdsXDprPe0su/pU+vrdNkKXcvxSMq83H7q+65oSswxvj90r7Jg3k6Z5
M7btMf1guAXDOZh+2Pb3P43e0U8upX7yv+q3l1K/jflntvw7+n9f6v//0/T5
r6Z3lh6wccHG8b/Lrtiu1zbrh8Rpk3m6LKOLn/E8PkwPv5J85TEHvY/G9h7o
Yg2rpWFMvQWDBdoKKXww3be+SccpF6W33Sfi0vtEvel9IrbvFmF8sH0ErC7T
0w77HSJ0v6Pt/45/2e6nYPrH9InJj/HH7mexrasw+MistUl8AXgUx3+TGs4D
Fcf6gm7TclA69h4QZle3rnU9wLx7lTAuuTvz7tUi1wmFzLtXmL3VbYkd/p60
z29KyLnXyAM5ldT99+ZzQPxLl0NXiDwvjnTf6afBA/7F1aJW83JAadLG6vRq
AcS+89G0GFwOwpkjehtUZ0G3Qc3KS+oEECJx1H76q1I40egn2qqXCTmHntyK
Ivz7K56S299C8LDapaHeCzmg4XTldhIZr8TGYwODRvPhicPUJ9N9OFC0R8WI
S+xZvr+Rj+97PkDak7v5FrlQrTYt92auAKqOyNVwORXgeTkvoe5+HtwXGnZr
WIYAOBJnCmp0quB1cZemy5FctD3Gn+17pti4Y/39R/2qpHJ6dOhXNu1XLO0X
Nl4nd8UrhZHx5X9qKj4RzwPb3lur6iT/8Ti+ouPYrcM43qLjeIyOI9Ye44/Z
Ydv97g30fvdCer97AL0P7kHvg+fQ++D19P74XHp/3IPeH8fsDWuP8cfkweyc
bX/Vy6cEvCN0nUnD3D6R8Tpu3vv/VHftQVkdV7yG8FBAQzAjYH2k9QEGBJIJ
CEi2GB7BF8YHBQEp1CBiEik4BpCIgkmNGolRHpoKlliwQhBpQlsiRlGiogkR
5CUIaBA+vg/4BOUhCPSSni3MOr/B22lnzL9ndnb3nj3Pvef8NuaGB9Y7dI6I
juQf6ReST1Tvzftq66mvVov6ann9ublQf877YVXUDxtO/bCIjuZB66J9Ij1F
fdb7jQyvJEl0Y71FC5ueVbEY2+M3Un1x33HlISfLv0t0l6RZscES35ZnOs8O
Wj02Hs5mwpOZQngyT4rXzenov7+IY+NNODYId0Wc5zuaRxz/Mo0X8XOqCT8H
4lcLdQs2VLeA8BvFPvQc6kNf2dsUWqcYoS9pCMkueq0F7gfWUcjc55Pyk/NH
Lp/Hkgfx3JGcIHlD+Dm8PqRSqA9B8i/3nWIURyH/JZ6vK50virsQXgGaR278
ifwv8tfIDsiNcxAd+V9k/5EfQf4I4X4gP3WQ8EwmC3gm/fYz5/zpQgtTBEeF
BpfUsv2fGunrDZayIaJ3Ev0ToiNcFDQe9dvyODmO4mRTIX4W6Z5vuaQOv9f8
z6/6z7wxoGQOkfO2P1yJ8bWQvrzilbTHTrIPxTW3bQo3q5mp5QrX76NusyWa
Btl5o94/8u/4MDTB7XGcjbHsm4hvtpbwzR4mXM3qejRCD2yutMz7pZo5TA1x
PDE0QveM1XTyl+RJf5vzp9d6RuiWj1ojVUfamK3Pl1O0Rq1baJDRnTSkYHsi
tbOCy0foxoGebf3xPzLf8JShdMleddnuGJfV1Masfq2XcW5nA3zXQ269Geq7
4flsBuWzHkKeK9Llyqdc+U9bOHn/8Ps4005suNZUVsUWO6/6cvh9HEQvKjA+
+u15Nbvo4XY154u77NHWRt2XfqiAdLGu7DOqK0P5ptY3e3uiR/mXobqihTNm
4v5EREd+yrrIyj9YWrfULeX9v01UsTv6WZG6G3FdJaqLQ/KD5A3JJ5Jn9K4Z
oov4NhGEb5O2LW2qxih6cOLSrMur5Y9H+oj0F+k7sifI/kQwg+64ejU7VhM7
PiBH0seP7Ls9ouplx7HITsqdR+R/LjgXThfluZ/kGdF5PX8t1fOXUj1/IelX
IelXH+lXKunpC6Snb5CeIvprhNMVTThddwiny/+CacP0ZxTs5fTDtWv2VbH+
RPejEfXyx8u1Pwi/C+GenWCbtIbx8KNinQo8HijZ+jO9JUfcbrG9Jn436yT6
fLu0Oa92K1m4llIxbvHjeF8hAt6XPuF9bSK8L47TlUw4XdqE08XjSSOKJ7dT
PDlWXvmkeE0IZwnxh+PFqQkvrpDw4hDOGPouhHuG+IPWRbhqiP9yzxfF5/zc
Lejcw+jckTygeRBed9dn+ww720foRnFR4fqaKigPaH50vogurmtI64r2+ffA
nv8B2HM+XrTPvyX7jNZFcovoSP4RHfEN6ReiI31BuPdy5Q3hma/7+m6Yg4uC
HU15fZmjZTWzDil2XDShFM4fQOPTafwrND6Q7Ko92dUBsqsIXxGNf4lwLGcT
jmUG4ViidRFuoVz6OcLb7yC8fVPC20d+HOkXirtQ/Ibw6+TSxbjxMsWN6Hzd
s+fqXm9RszTbKwdsJXtReFpz1Y5LtWyB5YaC7yU//ue2CMNqKV/7Tdma2f1S
vobi1YBi54vZUvxp5Pj2psGNKpZf5+KZX3uLLV3tYHBa4sP6k9GGfmUqNn39
rX+wwLrH+lI9qS/1I2XNLFcpDrnQE+Ly1rstrO/saYtd3jUQn1Bnu99JuwY1
8673KvxhTyuLt+rbnbe4HuJ+oPgc8YHjkTYTHqkb4ZGa3e9/drh/eVLktNCm
MCWL2BL2Xsrntew50q+1pF92pF/IziN8MIR/hXC0kD1BOBUIhwHhOSC8U3PC
R/UifNTxhI/K+3YrqW+3j/p2EY4r6vvm/f5rhX5/VI+K6ksRHhSy5wjPUy6u
C/ePreQft5B/FPE5QwifU8TzrCA8TzQPGo/ml4vnI5c/Ij7qccJHRXikCL9U
7vwIlxX2xxGuVCjhSjUTrhSqi0Y4AwhfAsk56kO/QvqVQfp1hPTLlPRrFemX
FukXoqN55Pb7o/2jugu5uA1PG/3nXq/1/6b3Ti3KuCTR/7iz/cYv+pVMI0k7
8YUVI30HVtR34Eh9B4ifaDzqX0DrIjlE41GdBqobhO87gzocfi9dTffSk+he
Wm6fMvof99/2HYv7Qf9b0ffKfT9ajJc4fjvKX9B+0Pt3aH4ed/lS3GVPcVfW
4AyvkpttLNtr59bMdT+yqtbl9bmHy5lPtHejmRRPDCy2+avr2/XMc8v1T/K/
KGMag7nBiR1qtk75vGbXfQV77mTNFb+zN1mCw7GBbsm+/arUzDh8pZLlHvsu
OyZKkh+393p3d0v73/eB5Yz2ZnbPeNP1g2HV/4l/Kij+eUjxj1Ztp76ZdL4z
OuwCLQyVLPDA8aiV83Adkdy4yL30HSP7qhG+fZNprcgIbGQHVOFB7zeO0JuY
j82GnmbWdzE0qEWKZ57fPU/bSbONze/c1ll7t54VbD9/fbc0fqaNc1Nhuoop
QpYP5JvVsRX78su7pfl7L309cYpuO9txaE5CWXID9LOb3zQ77ynJ7dKGQ5k6
TSq27S+nXldE1kE9kuuX5dbL8f0so/1E0374f0Y1/WfcRf8Z+fc+FL4X1S8h
vol8tiI+I1wF8bwUdF7i+Z6j8+XzVAr8R/tB73qjfmdE5/I8neQ5gOSZ1+ec
p/qcZ6g+h+uLNumLmvQF1S9xvXuR9O406R3XUz/S00mkp7y/eAL1F6dRf/Fa
0vc+Qd8zgX1AfcpPm1+WS9f7qtr8waAUr34bpbrXc5ct+/CqjXlPBTuVGBLU
J40P2mviHndPybqU5h8XL7rFss8MfJ4s2duz9yPm6lgrmcmD5FlzV9Sy1L6J
P53L5AnWtsPn4nv05o3hc0H2isvhiySHLSSHxsty5jVL+vjuGZMBi8uSf9mY
kGe4uo51FOps/EDaz+G67NxcHRVz9XrTJDQAxwloHrSueF+qR/4lNW+h4a5R
+XKau256aOVtuB++7ju07jRhXVHvEH84Pw2Jnz7ET87/AuK/MfEfnReKf9A8
aF198qdryJ8uIH8q+kdR70R98SO9G7fk33rnRXrH/XIO0DsRnwrJLZJDJLcI
b0q0q4XAbyrJDotykk5yguw58rNKV91Yg1F1U1UphjGpPU2P3W/70P22hWO8
5XBe7PVq8fxKKS/WWnB5vL+UF6P5kV8Qv6sR+JcCwb+I/h3pC5J/pC/ovvQk
yUkWyUkFyYk3yVUP2fM1JFcTSE5sSU6WkpzweKyc4rFeisdQvIfiUoTTjujI
Xv2v4pmnzb8gulx7hfiG7DBaVy4OvFy6XHxyufuR6wcRPxH/0bpycVYRXe69
0MF4x2v3JHqWp+/WmE4lOzVdI2a5i3y9QO8Ol6T+Tnmnf9T/xB6nq5HX2lmy
2lEjXhp/vL0gLk9LxXpLvOa0rsP3Bmg8shuHhO/Kpu9Cdew87+ijvGMn5R0o
f5G7H1TfguotEZ/FeL6d4nkxL+B5LjxfcC6o/grVR6Hx3G96k9/UJr+J3i0V
/XI5+WV034LqXtB7fIgPiG8oP0L3D0gexsp/xXwW5fty73PEeFuH4m30Hx/N
j/6vof/F6F4I/edFdgP9V0X5KYp/xHgpg+IlHrfYUNyyhOIWdO/0LyawUko=

       "],
      VertexNormals->CompressedData["
1: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
uNl/07kZBRCwfGmTJg+K4UpT+wCPEDco++qj1+90CeQH7jjXbmA+DD639lmz
2LsC/5f065HvCc8h+u/61621f/G8Yl3R/oxd11tMG3QatzVds0i0/8eR7FTR
/ttRuX3XqbtgaJz9ddF+WDrssGh/aZl91amdt/58r74R8139d/1/Gon2Z97U
qbX/eY5tl1QlZ1QunbZRtF/r06NGov17Wn5+5RXihq4DdgwR7d/hEGYv2n/1
fph+y9i7GEX01yffw9cn+lUW3F4lxlVg9O05YlyZHT+3eJLpPezyrJGGGFcW
txdniXH1deGzQdbTAtBneJWbGFfR33drinGl3naQj6bff/6Ow5b5Ow43l72H
xTgJ1Y/8cU2Iq3NP6w5vuCQUOw++HCHGldPZw8fEuPo5pOEg04X+eJesD5bW
gxNZ32f62K5iXM0q0k0V4+ri1y5VRQYReJE814a8h6NNnpv9bv1WEa80xnW/
JOLV1H3xR/rWDcbkm60TxbybA0OnCnmHl5ZnXTyS+hrTTrhvEvHq2Oqehe0E
vNo03OfNk5z/fLffjfluf09dtygRT3ZWmoeLeOLQtWvJ0fRY/PVExVzEk2+J
uzaKeNLwdItP8+uk4Wqvy3NFPPF/4+ok4kn0Lt849ScZWE703yTfLU8k+qmd
MyU74Tyx01s53yBf6PsaBH+beaU84A/PpPxwKLnfaUDud5ot3rLpkCIV4i36
77C5XwEfLDdqWCafNUwk9x0tyH3HjB0H1abWOxXA8RuoOWgZijgf9/JCsIjz
gcatC10FnOf4DTh+A47fgOM34PgNOH4Djt+AE+fAiXPgxDlw4hw4cQ6cOAdO
nAMnzoET5zz8AQ7+AAd/gIM/wMEf4OAPcPAHOPjDw3/k4D9y8B85+I8c/EcO
/iMH/5GD/8ipy8ipy8ipy8ipy8ipy8ipy8ipy8ipy8ipy8jhe0h5i6XEW3C9
xFuQw/eQw/eQw8eQw8eQw8eQw8cw/588Sk54FCZYx/fQVo+TdZc3beN60V3e
42Mtb8RHhL+1lvibnPC3P39PpEv+fmc8+XsiLcI/IyT+KSP8E28TvvozqZav
yghfxU6E34ZJ/FZG+C3OJ/q1yd+PUP0pxM5ukp0yaufWN3sXTtgp8GLNrtE+
TQNQfaV85cVnofDhSvWBknEVYKtst9tz0wuMnnjF0PtFCkwZUffIwh0lsCSg
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
iiuLEmFb4eiIK9vLSHSgm7mW5VNSMjNsqTSe4QHrX0vjeVNMwg+I49Hq1tBb
Gs/5k24XpPE8Gd1pQT9xPGU5g/62FMcz6ujQFdJ4xs+zWRoujsf78ywraTwn
t5aMkMbzs2RzbIA4noe+pS7SeE6mO8RI43m9pafranE8LVq2+CqN5/eWI7HS
eJ5EzDbtLI7nM/7H6jL9j1UI+48V+/+XJf3/F5TQ/3+RfpgP33wy/Z/m5Q5j
Pue+sNW7g+UnsPzadLuOS5236Flm7owY97gc3nT4umuiSxRRLZ2ZdPPBc+DK
gZU/x3auYDunExLcfSIW6t0pdT07VcRhxJWsOWY1HxN7zbk27nZu5HHzXuXX
moj6aoB1bc+iKGIYus18RuO7pLbd45YPL4txxPo5py9dTiTvnJ4Pm+7sTw7N
aWKg+7cYJnS89WNoWSZxrnB9cNhG9BPc2qpt1syHgLhFQWpf84lD1rv4bcPu
k3t7PtgV2b6HK0EPPdY2LSMTrxtq5SV58eXAyrl2gLXD9QusX26cwMbJzQvY
vDg5AJMDJzc9p8Ehjf0iFoakvfi9oK5/BXg/GH/lYWUwqZiwzGT9JD9yOKkr
keT/alsLS2ldMjvFat5+8JzcdK6V/6tnGei4JXh10k8kc7IzDx6KeUW6bda6
/nNjMfhsPBx0/XQmsRquN3bu0Eii0f2lUXlAHlx4+L7WmWP5JHacrq+bz2vy
K92jyMn0PewYe9i2RkIpydPe+CzD9ilfDqycawdYO1y/wPrlxglsnNy8gM2L
kwMwOTDc2qHclve9bbHMeUvI3uVJzs+GVkBX1bzSTXuDSallmyMhq16RHYED
j5jrlMHgUTVuPewSSfwcG7wUquLJkcy0n3puxdC2xhL7nyPjSbeo6MPLtqcS
/8i30x66FEBSt8HezhfSiPO67utubc8gy4ljuxOnc+D7pWufZpjlEvL21BaX
HukkKOvkACv1ZMi8N1910rYSUndpdvNvYnupy1vdvnKnEA7a1/rl/f6c8Ham
46BaC3L5+sDqc+0Da58bD7DxcOMHNn5uvsDmy8kHmHyYfmiF8pwz/HDrghe2
IclpaT5lYaJ+mNfhzNLeIUT7Rabm/PVPBK5+yGRaX+/hfpuvddtWwKiaU3R6
9XtDOvp7DW9hGy0EBB0fvD6wDIraJ9TRDEkklSctp/6ZFSfMinV5OLxjCbxO
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
2wo7WI/Lv0o6dlhhT1fhOmbhefLwmPWK8+QxXD6b+c53Cvv+CvFQhOfGUz17
KM6NHyHOG2BelrWfi8J/CEaclyPObyV/V5yLMpyvRZwPaL5P4Z/kIc5TEOdD
1fYpzmMZbp/QfC1yB/O1GM7PHzQQcV4ZfPu+u+IcmNVPXkdxPhDzvlh+lx3i
/JvKfkW/3jivZnjuuvlOvOLclZ2j/sZzVOvepdqSfHI5nIeV/lL4MwznYxHn
oy86KM5Rt3N5X73bzFPIn+E8HXH+RX2z4hw14Hn1fLD4V30V68jOS9PxvNQ3
cUSUdF7KyiNpORlfMy5aLOf3Eflw2l2xj/j7iHe/LRX7kc33B+q3sRctFPqN
nUs3Rf1WMqufQr+F4frm4vo+7PNeoceycR1T8Vz91OS1Cn31qPo9AtTZaqDI
i3jF5Tms6LxNoWdWcXkLNw+5KvQMf17948psxfiZHvCgeoBcumIh5Q/wciZN
m1M5s3YMUQ63Lp5XrBfTbwW4L7Q8DBT7IgzHWYb4Hz5IS4H/BzivjyiHYeMb
K+5HflTX2/Cx3hoFnl9X1/+wKOyMYl/4VrcjcKxLigKHzO58RRxeMGutOM+v
xPGPQjk8MIlWjJ+zd4TZO85uEmY3OTsLzM5y9hqYvR5wIxQe962Alp7dD9ws
iYDgttFjgnZ6Qf2xwxLePcsSVpqEbJvc1ZPxuBHSeGDE+utZgufWwjvuZv7K
8p5rPnnviskS1CbUDvJRtVeW9+rotaP2liyhMtG2Q1pxsLJ8zbjAtOd9s4RF
vXTOdPjzTFkeljgk/HlEpjB5tNpBn/iXSv64+4M1xg0dlyn4eByaZt0iSlnO
9HYj1NvuVG+T0yZNf09vlyF863p7TMnyGGX9oJnHflZ1ThNCBrl1t7WJU5Zr
oB6eSPUwaUX1MFFFPT8L9Xx3qufJX6crEz6uey+o6nR/ULco8X/jjGjQMC84
QVhzNXfyxk0pynIttAv51C6QAGoXyJw+77vfjogRVC+VfT2ana6sn2pisc/y
Q5jw6omr58zMTGV5w5CtFybFewvG6A/IlLP3coRrR1nO9assD6g+fmV5VfX5
KssfoDwfU3kqy5n8v1L5K8s5OQCTA1vfe3R9lfU5PCjLuXUBti7cOgJbRw5v
yveEHD6V5RyugOGKw7+yPrdflOV/9B/pSvsr5sL4fdL+2n636cVHO734/aKs
z94VOuB7zAOnn4yZn5CpPDdLx/PDyDu7zlstyRG4+iBTHzZ8bZBk45gqcP4G
Yf4G57cQ5rdwfg4wP4fzl4D5S2y+4TjfxXS+MGvuGFE+lcKDp29E+TxQ7veH
a4xFeVYKo581vutu9kJZvjj8syifSoEcrCPK57KyXKVGobhelcI4tVJxvSKV
5f0PqKc/71spVNa4KK7vO2X5vYy7In4+CO3XBov4+d8+vTXproi3D8Lz48em
W7dIU5brop48hXHNIqonybyfxn+mt6sQzNsvMChZ/r99Z3wq7FdV5zLhWb29
PWxtcpXly1BvN0W9vZzqbTIN9bMXxkFOVD+T43t9Jn5cVyysH9Y+qG5RgbKd
zo8ixP2YL3S3iZqycVPJ//pF/b8Y9X8x1f/EeoRej9sRWcLisS7fjmaXK+vD
gzOiHkgQZui9FPXAB2W5+Yp9ot4gggv6XTLlyn2nh+2Y0XaU5Yew30W0X2V5
Jxx/Nzp+ZfkxnO9aOl9l+TSU5xMqz//pK5T/LCp/ZTknB2ByYOv7jK6vsr43
4kGD4uF//VZfF2Drwq0jsHXk8KbcvzUQn4YUn8pyDlfAcPUI8a9P8a+sb477
JYjuF2V5f7TX7dFeR1N7ze8XZX3NNcMzbnpVQI2Vp61bDntGRqat9ly7MVPg
3qMR9h6NvQNVx3egZ+k7UGB+qRf6pUfdFPf7ITErU8wHOhWAQ0fP88+N88jn
jKlaJ1wfkzQst6blUCOTlt+yfZXte6wCmm49dche+xkpWNtt4Y8Jgcr/E53D
91O63H+LsBxYOXuXZIjvkgLpuyRyA+8RGuH9y9W0MGP72klCJr4Tr8R35XfN
jmhlbswTFuB9R228N7Gb8NTw8sU8pfzquv7KH+efF8z+K6SK9yYxeJ/Sca3N
vH4No4UW3H2K6eCewz4YZQuc/IHJn70T74vvxBuZVBb4kqfKexAVvAdRPbbS
IyPqiVCjer9gNnLvyjUh0QL3Pouw91mMV+Eu8ioUUF4FYH71OfSrZ9C8XL39
rjZLpPVaub75BWkdV6gYVBwT1+s4ls+h5bAdy9n/gNbhf4KG4f+AGK4a4jtH
X4orEt7gxpG9ERXgOqlfUoynF3FJ3de/QdcgHm+E4c17xtwtTcvEuHJG4oQW
L71Ihr2qjfuJa7Ck/8TMCy3KoUb23OcX898R8zWJzWqkhEIr59Elpj9LYKHx
GTOznynkYPvAFPW/r8G2p3G3vWsLYbt3o+ClG3JgrcG4e8XDIqG3cG2z1L7D
koGK9uuYnPT3OHGNqO0sqaxtVgFqW7vu9SwNJd5WnfanTQgmfhov30n9jq2b
8VDqt3jFbXPVlFByUaN9ktTvpThLfalfj++7Vrb4+5qUdlNvLvVbSmzuSP22
/lZjSumwSL4+sPpc+8DaF2bE75Xktu9VlxhJblOHPrnZqGvQP+W6tJxfd8LW
nc3XHudbZayYL7B+x+G8smm/4MrNy5WOE8pwXmU4LzU6L+V6rcH1yqPrRQaX
xXyT5NnPetxBSZ65zVrEpIjyXIzrqILraEHXkbTk1vEoXUdiw63jZrqOfH1g
9bn2gbX/CnF4EXHoTnFITuD77u34Pj2Mvu8GTXwP7o/v08vpe3AIx/fjAr5P
N6Dvx3m8EYY3rj6w+lz7wNrnxgNsPBzOgeGc2xfA9gW374Dtu6XahY0mFIh4
mLe5s9rRG7Bl23vb+373+H0HbN+xdeyL65hC15EvB1bO4Z8w/HP7C9j+4vYj
sP3I8r2PYT7/YMz3Nube1b6l72rJeO5dLcs/n1b9PSzpR9/D8uXAyrl2lHns
XL/A+uXGCWyc3D4Ftn/74zvr+vjO+hD+9yFh3MSLC/xEvdrk/PSueT7k0nLN
TboqIYS9O35K3x2TCvrumCw2qd1AWsfwfjM7iutIRuy0KA70u0d2IT/MUOTD
uUH5YeAY8sm0Rz6cVpRPBnj+lg/eEeWpBoWCf3VeFJLbPHv8yKJC/t6fLN2j
FXggNl8IQh6bNOTVOUp5bMCc44EZl+d6v6tRocDzbP99mJu3qF+BkqclAuvr
3JqUlbWqUFiN/Dm/kJ/Hh/LnAOOTuYp8MjYr4zMT9AuVeQtfMF+if5zTn4/3
C3h+GKLycH3OteACIQrfoR+j79BhM32HTtytX6c2eJYBQwqH3/MuKYQtF72C
wk8lEW48wMazGP0KVcyjqPeyq6qLZYHAjRPEbd9OTbuAHycMOGN+qXb3Al6e
wOTJyQdWHmxs6mJfIHByhq2PF/ZM31ggcPkk0Olw7Y5DDAsFDg/A8MCtO0xo
s/aGX9M8nucHTP1nTJ65Jlfg8AYMb4w/R0D+nI8t5sVNr52nzA/pg/khWoUl
ub4x+QKHf2D45/cRs3ecH0Va7Sp8UaH7jx9FOhlsrP28/zOBs19Eab9wfQfR
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
fPWO/B9wSShe
       "]],
     Axes->None,
     AxesStyle->Directive[
       AbsoluteThickness[0.2]],
     BaseStyle->Automatic,
     Boxed->False,
     DisplayFunction->Identity,
     FaceGridsStyle->Automatic,
     ImageSize->{421.25253777993123`, 725.},
     Lighting->"Neutral",
     Method->{},
     PlotRange->{All, All, All},
     PlotRangePadding->{Automatic, Automatic, Automatic},
     Ticks->{Automatic, Automatic, Automatic},
     ViewPoint->{0.17035133696340177`, -1.8390793202839937`, 
      2.835272063788331},
     ViewVertical->{-0.5292110744898946, 0.3878924880880133, 
      0.7546357110037544}]}], ",", 
   RowBox[{
    TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"Image\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"Image\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
/d2Fboyw4lapm/HW8jbaYMPPoQ6NxVixcu4Kf/szniB14W13dxnnvK8jh5ls
3nK+Jm8bns9Gv8PIdStjQeQm6qZ31HfqjnX5W5SvTkfbtarL62iVFYZPjkBF
MxbdIHT11cPt/HLbBtcWMGp4a+riEXqLk6JfWjG9wNuBp/09zLvvDb1199JH
yw0+DALPGR3ZhOGD132idKpue+QtBuSM8jaZo13aPzDwiG1moLEstHQVx2Qc
WU+Nd3feBW83rZ2SuvQWx6JfVzHtsC0kkZt+BoQzGd6mn3Tm/uUd63L3/Rjr
wfHDNx4P1U3tPTiZvfAWPRbSHnxhJcbRF1fDVeuxFVcPt5cfnGPelsvzuvfc
wwQ2b3E0b63lmrpc5n3o4cVFv6hiJrCbhCSR6zM2UTf91BI3/Lt1mLoYXMUN
1F1fQ114i6TFH0Vp93bc6la6zNLQ2yPrbeA5UBdtIVfd7DoDq4Lytklg5Jb8
jcotcl1b+Hif97P6Q6jHetynk3iBvbrtk6nrMtYv3rIkUFqMZHk2I22ibnle
qC6+xOjYcjuOUJfecnDBIfQWg5eAi35FxQxhmxaqPi5qoNVfemiNPzzd7xsf
fWcHP0La32XR2QtRU3WDxpuRttx6E6O1p/POE4fXVsbL38agqzwJ1aW90HXz
xvn0lnV33bqF0dKu1G0qkglaz1JuKecn+frV2tbwY9Nt8C293Mp4bvgJGEt1
WQmYwPCW0rYu+1ooLUV9pDznhd0LQ2ltoB7YuXlrwWuRC3WzVQEVF48X/XKK
GcLaQiVv/U31vbqrcj9E0vbcnh/Z7lN3/T+ed97CWMy/eJHCkhbGImNPHGpz
I81Y/KpTt1paDliN49o1FWkhM47IW1OXtSF7NU0Vt6lIJmhouam3/nMk2Ray
6vaauohc1oaPTu/CXAzeQtr+Z91HAf7k+VXWEJyKgbRXVZeLtzjhdgV2Bngb
qctrE6G3nZ0rVRWah0u/3srPneR6gq0kWOTyukP0iQ+puuudt+92sDMgb60e
2FyM0q5b/fWpqEtp6W0UvLs774q8xQmvCPOisLxtNixy3c/dr98ycieu9ISR
6+2tuptoKd1wC3tNWoQt6gFiNknaNGxrqPv6sfUYZiyOfCRSt3NnlboY5i23
kKkqNBvJmhimZqm3E592O2mdulVh6z+ut/LpJFSX0nZvX/DDjjvYDZC3kbcY
j665JVpMwJPdgy9/G0cMuhqqS5O5IBYWXRwjbx944GZ522y4HWJsC/T2027v
bWvi7ZWe6DNK7LN6fZ1Yz4kYYpbS0tsTg2XnZODtm//XqYsjR6gupX3zlXXU
lcZG6tJbSpuNXHirqtCEpNd2K3lbFblXJvsoqAFbPYCiOEcf4BHeYmxs+wbV
NV2h6PChZTwffvlRfEl1IW3obaiu68lpZwgnaNzPoKrQzOCHjtRN5mVeWhjr
vjRvr8Te+jvkl+mtzb9gI1xFZ8bRSQt7D7XhX3nzlk/gkYP2uud4dXNTF/8v
NmuL2oJN0BS5TUjJ39kmqQqpt7G68Z1ve01adANIiwEJOeDhkecW4ciWG6mL
LzHsyRj4o0J1aW//s4vNYVM3XBYLI5cVV942G9zcWIncrLdXqsKWi13WXUNp
I3VzB+3NVfet19abva5UeIeZvVHkUl1FbpOTRG7gbapub7qwkKg7OrIpWaFN
peW/+BDv7VfWvX30UQ7ehpfrFUjdLe1VqZtVl0rDWw6qS5knUzeK3L+872Z5
22yMjWx1b5w8cL9Tt9pbDH+T/GRNLJQWvkFaaDaSDvjp7E0FZvDiway6dDWb
uqYu7TV18atXVVeR24TkRi57gjuOuf02Ji0GTQMjgbexva+sg7cYDF7oavbi
t7/9E5e60Jvews8a6nLFzNTlhbPyg3MwzFu+n6LoF1LMKJdP+sjta0n3NK5K
32jmNo3bxpswaSEhRT2Vp66dM3J5NHUhbTJ8LOPIJ2fVxQjVpbTbNsznom7J
7+916u5pUeQ2J4PdS9wcra/F8taHbdvElYOQ+YXdd5dbb+I6LaRl0p762YbK
8AKHY1tqL4KX6uIRjkTdtA8zot2TD7dEXTdU19oCvN3bcaup69qC9xYOy9tm
w7XcnqXO20pVoLe98Jb/0Lt/371g+JIG4uSq9vKk4u2G+RiWt7G6U05dqPtI
eU7SFva0KHKblnh2hrnYFTcX405FSEuvIl13tM/DqGFvrK73Fv8VJPam6rov
q9Udqaku2wLmaElbUOQ2K2OndlbNzsYr0zF22lDa936+KRy098mN38R5Rd3A
YWjGk5/+tZus0d5rUhdNhpO1UF0XueV50HV/13JFbtPi3nrGa2fMW//pZpG3
Ju3o8c0cocBQlyObwKYuvTV7r6ruSLW6LLqwt6Ju0BaSTReimUDkuqqQVNze
zy48DeugwVt+lQDKIVQjaaOBX3rtwGKe4zcm8RsMmHbmp+sxjvcvwXnJ36+m
hrq2OmFtwTpDWHSRt1AXMitymxP3/p2k4vZ+fu4pW6dl0lJFOHn2F49xTGYv
ItfUjexF0sJbPIgTPA1dF0+rqPvKuimqW9UWfLMtpXd6lLfNhnuvupuduUkZ
SwJXsVhf8eV3N7u7eXz/8dtM3XBEAmftDRtF2CuS4A3UtZXhGupy403J7wG2
tiB1mxD37rMD97t3qac3woW0PIGroa780kaOxqm9bA5mb1ZdC14crTDwitup
jLoj3lgO67qsHK4ttN6kltucuIVcv2ZLGIYUFSfnf/lY7tiz5fZJBfajhr2h
uq4zpN5G6tp/QZa3tjiGwds6mbqty74mdZuK4UPL6O023w1MvAu/erx7+4KL
bz3B8eGbW/BIrsB4Wq7A6Bg44k/OXYX46V/np651BnYJS91IXRbdcDkX6hb9
WooZhXsSTNraTzaHbZjADOHIXj4S2Ys0DhsvpmmJva+s4xqaDaRupK67nBeo
a0VXkdtsDHYvGdq3GHZByGv6jVmHMY73L7GCUcNeU5edAeqyM5zySeuud6Tr
wFl1w9S1tqDIbTYgz5dMqrBLcOzbtgDxGwkc2cuwNYdtqcFdyAiuXETqmrdU
Nyy6+BLH6/WyiNnPdfwXNhIY9loZhrRnjq5gIJ9Nl87gLZow1WXSMnWnqC7b
AguD1haajWn6WZvDkb0WvDCWq2emrnWGKapbVXRbb1LLbSqm+2dd296zqbo4
h73w81rVtbaAc6krri+0F9U3spcrxmf9ei+DF0cuMtBYO+GsLVSXG4GgKze6
I3U1QRPTQdZeuwzH7DV1K/vNaqr71mvrTV1XGHxbgMBF/0VFA0J7ueDA/hDW
Bqob2ltbXbSFjW3f4D2duLagyBXTh9kLYK9thOCmHUh7vH8JjrQ3Uje8mmbq
hiu6K+75atF/P9HIwF7IZs2hUnqDzvD20Udz1T2VUdfaQsl/mHXRfznR4HRv
X4DBzhAGb5i6YW2wwlBDXa0tiJkB2TtZ8IadoYa6GHz7PNoCTtQWxMxw8a0n
ELxmr23XwTEK3jM/jdXd4t/LaeryItrav/rvRf+dRLOA4DV7IS13O0Bd1t1w
snYVdVtvgrdqC2Imob1Wem1Pu6mLyOVb2CJ1uXMsuQTs1xakrphJsrWBwcvO
gHNIa8EbqctFXVO36L+KaDpoL7epR53B1OV73rPqhitjRf89RDMCdeEet+jY
dQorDDZTC9XlbUz4LmCcFP03EE1KbvCavTXUVVsQhQN1ezrvZPBG6nKaFhYG
Li9AabsYUfS3L5oXBO/woWXWGaLV3Vx1LXVVdEWx8PoajKW9mKmFjdfU3dY+
D4UB6tocrehvXDQ71nijzmAztVx1VXTFbIDBO0V1+VZKFV0xG0DwUl1rvGHd
zaqrtiBmCZyswV5uREfv5Y6ySN2S/8gVqStmFVT3/C8fs85g6iY3FfGpS3VV
dMXsAcF75LlFVDfsDFFhoLpaFhOzCgav1V2brFHdLV5dLi8U/Z0KUQUna6G9
3PpIdUv+HtHcplv0dypEFewMvC8ZZ2qhura8oLYgZiFh8LIwhOqq6IpZi21B
D+uu1BV1AWI2rLuvHVgcqquiK2Yt7AzhEhnOd6TLC4pcMWthZ+BkzVKX6urm
z2KW88OOOxi8pfSTp6iuiq6Y5XBxjBvJeM9zpa6oF/iOy1BdvptS6opZDu8J
yTdNSF1RR/R03klRuchg6hb9fQlxFUoppq5WxkS9EC3tSl1RL/CKsKWuiq6o
F1B37b2WRtHflBBXh65SXb4xrejvSIgpAVd5D16qu2fFnxX9HQkxJagus1ep
K+oLS90tUlfUFVxk0BxN1B12XxGpK+oL7mSQuqIe4UxNl9JE3UF1dacmUXfY
+ljR34gQ10bfUwulrqhHhg8tk7qiHtHygqhTuNu86O9CiGtG6oo6ReqK+kXq
ijpF6oo6RcsLok6RuqJOkbqiTpG6QgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCPHl
+f9q2kt/
       "], {{0, 432}, {233, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{233, 432},
     PlotRange->{{0, 233}, {0, 432}}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"implicit Gaussian curvature\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"ImplicitGaussianCurvature\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \
\\\"ImplicitGaussianCurvature\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"implicit mean curvature\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"ImplicitMeanCurvature\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"ImplicitMeanCurvature\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"implicit normal vector\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"ImplicitNormalVector\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"ImplicitNormalVector\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"moment of inertia tensor of solid\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"InertiaTensor\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"InertiaTensor\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"CDF of lengths\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"LineSegmentLengthCDF\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"LineSegmentLengthCDF\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"mean line segment length\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"LineSegmentLengthMean\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"LineSegmentLengthMean\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"PDF of lengths\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"LineSegmentLengthPDF\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"LineSegmentLengthPDF\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"mean curvature\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"MeanCurvature\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"MeanCurvature\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        FractionBox[
         RowBox[{"\[FormalA]", " ", "\[FormalB]", " ", "\[FormalC]", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[FormalV]", "]"}], "9"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[FormalA]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}]}], 
            "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[FormalA]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "+", 
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], ")"}], 
             " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["\[FormalC]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[FormalV]", "]"}], "4"]}]}], ")"}]}], 
         RowBox[{"6", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[FormalA]", "2"], " ", 
              SuperscriptBox["\[FormalB]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "10"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[FormalC]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "8"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], 
              " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "4"]}]}], ")"}], 
           RowBox[{"3", "/", "2"}]]}]]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"metric tensor\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"MetricTensor\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"MetricTensor\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"9", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[FormalA]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}]}], 
            ",", 
            RowBox[{"9", " ", 
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "5"], " ", 
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[FormalA]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "-", 
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], 
             " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"9", " ", 
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "5"], " ", 
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[FormalA]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "-", 
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], 
             " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"9", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "4"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], ")"}], 
              " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[FormalC]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "4"]}]}]}], "}"}]}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"Name\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"astroidal ellipsoid\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"number of nodes\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"NodeCount\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"NodeCount\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"normal vector\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"NormalVector\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"NormalVector\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[FormalB]", " ", "\[FormalC]", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox["\[FormalC]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[FormalC]", "2"], "+", 
                   RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cot", "[", "\[FormalV]", "]"}], "2"]}]}], 
                  ")"}]}]}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "4"]}]]]}], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[FormalA]", " ", "\[FormalC]", " ", 
             RowBox[{"Abs", "[", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], "]"}], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], " ", 
                SuperscriptBox["\[FormalC]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[FormalA]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalC]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}], 
                 ")"}]}]}]]}]]}], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[FormalA]", " ", "\[FormalB]", " ", 
             RowBox[{"Abs", "[", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}], "]"}], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], " ", 
                SuperscriptBox["\[FormalC]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[FormalA]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalC]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}], 
                 ")"}]}]}]]}]]}]}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"parameters\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"Parameters\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"Parameters\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"parametric equations\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"ParametricEquations\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"ParametricEquations\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}],
          " ", 
         SuperscriptBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"principal curvatures\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"PrincipalCurvatures\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"PrincipalCurvatures\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["1", "6"], " ", "\[FormalA]", " ", "\[FormalB]", " ", 
           "\[FormalC]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"Csc", "[", "\[FormalU]", "]"}], " ", 
                 RowBox[{"Csc", "[", "\[FormalV]", "]"}], " ", 
                 RowBox[{"Sec", "[", "\[FormalU]", "]"}]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                  RowBox[{"Sec", "[", "\[FormalV]", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], 
                   ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], ")"}], 
                  " ", 
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], " ", 
                  RowBox[{"Tan", "[", "\[FormalV]", "]"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["\[FormalC]", "2"], " ", 
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Tan", "[", "\[FormalV]", "]"}], "3"]}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["\[FormalB]", "2"], " ", 
                  SuperscriptBox["\[FormalC]", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                 RowBox[{
                  SuperscriptBox["\[FormalA]", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}], 
                   ")"}]}]}], ")"}], 
               RowBox[{"3", "/", "2"}]]], "+", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[FormalA]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], "-", 
                    SuperscriptBox["\[FormalB]", "2"], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Csc", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalA]", "2"], " ", 
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"12", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"4", " ", "\[FormalV]"}], "]"}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Csc", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[FormalB]", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sec", "[", "\[FormalV]", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "8"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sec", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], 
                   " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox["\[FormalC]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalU]", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "4"]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[FormalC]", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"Csc", "[", 
                    RowBox[{"2", " ", "\[FormalU]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "6"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalA]", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "8"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"Sec", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Cot", "[", "\[FormalU]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "2"]}]}], 
                    ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[FormalA]", "2"]}], "+", 
                    SuperscriptBox["\[FormalB]", "2"], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Csc", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sec", "[", "\[FormalV]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cot", "[", "\[FormalU]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "4"]}]}], 
                    ")"}]}]}], ")"}], "/", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                   RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}], 
                    ")"}]}]}], ")"}], "3"]}], ")"}]}]}], ")"}]}], ",", 
          RowBox[{
           FractionBox["1", "6"], " ", "\[FormalA]", " ", "\[FormalB]", " ", 
           "\[FormalC]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{
                 RowBox[{"Csc", "[", "\[FormalU]", "]"}], " ", 
                 RowBox[{"Csc", "[", "\[FormalV]", "]"}], " ", 
                 RowBox[{"Sec", "[", "\[FormalU]", "]"}]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                  RowBox[{"Sec", "[", "\[FormalV]", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], 
                   ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], ")"}], 
                  " ", 
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], " ", 
                  RowBox[{"Tan", "[", "\[FormalV]", "]"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["\[FormalC]", "2"], " ", 
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Tan", "[", "\[FormalV]", "]"}], "3"]}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["\[FormalB]", "2"], " ", 
                  SuperscriptBox["\[FormalC]", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                 RowBox[{
                  SuperscriptBox["\[FormalA]", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}], 
                   ")"}]}]}], ")"}], 
               RowBox[{"3", "/", "2"}]]], "-", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[FormalA]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], "-", 
                    SuperscriptBox["\[FormalB]", "2"], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Csc", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalA]", "2"], " ", 
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"12", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"4", " ", "\[FormalV]"}], "]"}]}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Csc", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[FormalB]", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sec", "[", "\[FormalV]", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "8"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sec", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"], " ", 
                    SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], 
                   " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[FormalB]", "2"], " ", 
                   SuperscriptBox["\[FormalC]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalU]", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "4"]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[FormalC]", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"Csc", "[", 
                    RowBox[{"2", " ", "\[FormalU]"}], "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "6"]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[FormalA]", "4"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "8"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox[
                    RowBox[{"Sec", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Cot", "[", "\[FormalU]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "2"]}]}], 
                    ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[FormalA]", "2"]}], "+", 
                    SuperscriptBox["\[FormalB]", "2"], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"Csc", "[", 
                    RowBox[{"2", " ", "\[FormalV]"}], "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sec", "[", "\[FormalV]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cot", "[", "\[FormalU]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Tan", "[", "\[FormalV]", "]"}], "4"]}]}], 
                    ")"}]}]}], ")"}], "/", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                   RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}], 
                    ")"}]}]}], ")"}], "3"]}], ")"}]}]}], ")"}]}]}], "}"}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"number of punctures\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"PunctureCount\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"PunctureCount\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"related Wolfram Language symbols\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"RelatedWolframLanguageSymbols\""}], 
        "]"}],"\"EntityProperty[\\\"Surface\\\", \
\\\"RelatedWolframLanguageSymbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Ricci tensor\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"RicciTensor\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"RicciTensor\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"9", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[FormalA]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}]}], 
            ",", 
            RowBox[{"9", " ", 
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "5"], " ", 
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[FormalA]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "-", 
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], 
             " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"9", " ", 
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "5"], " ", 
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[FormalA]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "-", 
               RowBox[{
                SuperscriptBox["\[FormalB]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], 
             " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"9", " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "4"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], ")"}], 
              " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox["\[FormalC]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "4"]}]}]}], "}"}]}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Riemann tensor\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"RiemannTensor\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"RiemannTensor\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"9", " ", 
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "5"], " ", 
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "-", 
                   RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], 
                 " ", 
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"9", " ", 
                   RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "5"], " ", 
                   RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], 
                   " ", 
                   RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ")"}]}], ",", 
                "0"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"9", " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[FormalV]", "]"}], "4"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], ")"}], 
                  " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                 RowBox[{"9", " ", 
                  SuperscriptBox["\[FormalC]", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[FormalV]", "]"}], "4"]}]}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"9", " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}]}], ")"}], 
                    " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
                   RowBox[{"9", " ", 
                    SuperscriptBox["\[FormalC]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "4"]}]}], 
                  ")"}]}], ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"9", " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], 
                    ")"}]}], ")"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"9", " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                   RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], 
                  ")"}]}], ",", "0"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"9", " ", 
                   RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "5"], " ", 
                   RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], 
                   " ", 
                   RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ")"}]}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"9", " ", 
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "5"], " ", 
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["\[FormalA]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"]}], "-", 
                   RowBox[{
                    SuperscriptBox["\[FormalB]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"]}]}], ")"}], 
                 " ", 
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", "0"}], 
               "}"}]}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"coefficients of the second fundamental form\"",
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"SecondFundamentalForm\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"SecondFundamentalForm\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{
           "3", " ", "\[FormalA]", " ", "\[FormalB]", " ", "\[FormalC]", " ", 
            
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[FormalV]", "]"}], "7"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{
              SuperscriptBox["\[FormalA]", "2"], " ", 
              SuperscriptBox["\[FormalB]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "10"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[FormalC]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "8"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], 
              " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "4"]}]}]]], ",", "0", 
          ",", 
          FractionBox[
           RowBox[{
           "3", " ", "\[FormalA]", " ", "\[FormalB]", " ", "\[FormalC]", " ", 
            
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[FormalV]", "]"}], "5"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{
              SuperscriptBox["\[FormalA]", "2"], " ", 
              SuperscriptBox["\[FormalB]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "10"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[FormalC]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "8"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[FormalA]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["\[FormalB]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], 
              " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "4"]}]}]]]}], "}"}]}],
        "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"semialgebraic description\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"SemialgebraicDescription\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"SemialgebraicDescription\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"singular points\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"SingularPoints\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"SingularPoints\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"sport objects\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"SportObjects\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"SportObjects\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"surface area\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"SurfaceArea\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"SurfaceArea\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"variable constraints\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"VariableConstraints\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"VariableConstraints\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{
       RowBox[{"\[FormalA]", ">", "0"}], "&&", 
       RowBox[{"\[FormalB]", ">", "0"}], "&&", 
       RowBox[{"\[FormalC]", ">", "0"}]}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"variable descriptions\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"VariableDescriptions\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"VariableDescriptions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"scale along the x-axis\"\>", 
      ",", "\<\"scale along the y-axis\"\>", 
      ",", "\<\"scale along the z-axis\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"variables\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"Variables\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"Variables\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"vector length\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"VectorLength\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"VectorLength\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        SqrtBox[
         RowBox[{
          RowBox[{
           SuperscriptBox["\[FormalA]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"]}], "+", 
          RowBox[{
           SuperscriptBox["\[FormalB]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"]}], "+", 
          RowBox[{
           SuperscriptBox["\[FormalC]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[FormalV]", "]"}], "6"]}]}]]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"volume of solid\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Surface\"", ",", "\"Volume\""}], "]"}],
      "\"EntityProperty[\\\"Surface\\\", \\\"Volume\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771720905164114*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"3c6bf437-53d4-4632-965c-afac73fd3ab1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], ",", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], "]"}]}],
    "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.771721222901334*^9, 3.77172122339684*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"244d2436-09ef-4b18-8b89-013dc3eaa55a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771721223732332*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"a5efeb46-d119-40cb-aaf2-de680484d124"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
     ",", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
        " ", 
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
      "]"}]}], "]"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.771721228517479*^9, 3.7717212335653067`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"c8af1758-e6ff-4d52-8891-84ea779f2bc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7717212339095507`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"8b9b0535-7cad-47ba-b497-062a457ecc11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Extract", "[", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}],
          " ", 
         SuperscriptBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
       "]"}]}], "]"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.771721239012641*^9, 3.77172124112531*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"911a026d-b604-47aa-9567-3cf38f2deadb"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.771721241369225*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"02b3d073-fcb6-49e1-8c6c-5526afc99386"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantArray", "[", 
  RowBox[{"1", ",", "\[IndentingNewLine]", 
   RowBox[{"Length", "[", 
    RowBox[{"Extract", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
        ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
            "}"}], " ", 
           SuperscriptBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
               RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
              RowBox[{
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
               RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
         "]"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771721245823016*^9, 3.771721261140727*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"b387d452-89ff-4d61-bbd6-1ed9aeb747b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.771721261575429*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"06a2f615-cd02-4501-b8f2-9367fd7785cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
     ",", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
        " ", 
        SuperscriptBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
      "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", "\[IndentingNewLine]", 
     RowBox[{"Length", "[", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
           "}"}], ",", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
              "}"}], " ", 
             SuperscriptBox[
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                 RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
                 RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
                RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
           "]"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7717212744766903`*^9, 3.771721314460657*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"1495a66e-ebaf-4818-af9d-3ebcbbbddeb6"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], " ", 
    SuperscriptBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[FormalU]$", "]"}], " ", 
        RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "\[FormalU]$", "]"}], " ", 
        RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], ",", 
       RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}], "}"}], "3"]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.771721308900887*^9, 3.771721315330282*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"bf168529-2f95-4b98-b8d3-84de41305fee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Apply", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}],
          " ", 
         SuperscriptBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
       "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"1", ",", "\[IndentingNewLine]", 
      RowBox[{"Length", "[", 
       RowBox[{"Extract", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
            "}"}], ",", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], 
               "}"}], " ", 
              SuperscriptBox[
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
            "]"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.771721319877906*^9, 3.771721321244616*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"679aad6c-402e-4e0e-850d-5a45cb8b6851"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "v", "]"}], "3"]}], ",", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "u", "]"}], "3"]}], ",", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "v", "]"}], "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.7717213215231657`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"bb552b5b-4792-47b2-aaff-f28cab1e7a68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<Torus\>\"", ",", "\"\<ParametricEquations\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.77172134620643*^9, 3.7717213509567003`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"f3ce7226-e5e1-49a0-abf7-a6cfcc30d7ac"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalA]", ",", "\[FormalC]"}], "}"}], ",", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[FormalC]", "+", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[FormalC]", "+", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", 
       RowBox[{"\[FormalA]", " ", 
        RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.771721351169289*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"bab58183-c92e-4dca-8939-68c84185b4ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalA]", ",", "\[FormalC]"}], "}"}], ",", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[FormalC]", "+", 
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[FormalC]", "+", 
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], "]"}],
   "[", 
  RowBox[{".5", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717213544372063`*^9, 3.77172135725254*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"c329a322-9964-4099-9c6f-24df6dfd6346"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"0.5`", " ", 
         RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[FormalU]$", "]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"0.5`", " ", 
         RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[FormalU]$", "]"}]}], ",", 
     RowBox[{"0.5`", " ", 
      RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}]}], "}"}]}], "]"}]], "Output",\

 CellChangeTimes->{3.771721357839381*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"1a994ed4-83e5-4468-becb-ac879e7484bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"0.5`", " ", 
          RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[FormalU]$", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"0.5`", " ", 
          RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[FormalU]$", "]"}]}], ",", 
      RowBox[{"0.5`", " ", 
       RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}]}], "}"}]}], "]"}], "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717213608211527`*^9, 3.771721361500725*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"77604d45-4cb2-4ebc-ae7d-39b427ce2333"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "u", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"0.5`", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"0.5`", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "u", "]"}]}], ",", 
   RowBox[{"0.5`", " ", 
    RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771721361738304*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"51ca0b10-dc8c-4de5-835e-638a5e63fd1c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "u", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"0.5`", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"0.5`", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "u", "]"}]}], ",", 
   RowBox[{"0.5`", " ", 
    RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]], "Input",
 CellChangeTimes->{
  3.771721383149328*^9},ExpressionUUID->"b257b95d-7ca2-4fed-97eb-\
f7d52470ae45"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "u", "]"}], "3"]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "3"]}]}]}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",ExpressionUUID\
->"e0672c6f-88b8-4c5b-bcaf-3f80bbb9f483"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], ",", 
        RowBox[{"0.5`", " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
    RowBox[{"a", " ", "q"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.771721407768838*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"176283bf-3f30-4526-b3e1-bd4757381765"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     RowBox[{"Cos", "[", "u", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"0.5`", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "u", "]"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"0.5`", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "u", "]"}]}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Sin", "[", "u", "]"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "v", "]"}]}], "+", 
    RowBox[{"0.5`", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771721409123296*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"d0bea99c-7602-43ac-b088-4edd45d6f65f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], "+", 
        RowBox[{"0.5`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}]}], "}"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.771721415734597*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"51e8ea39-a3f4-438c-8dd4-439e0b987c25"],

Cell[BoxData[
 RowBox[{
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`a$$ = 0., Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {379., {172., 179.}}, 
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
     True, $CellContext`a$42953$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
       "ControllerVariables" :> {
         Hold[$CellContext`a$$, $CellContext`a$42953$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       ParametricPlot3D[{(1 - $CellContext`a$$) 
           Cos[$CellContext`u] (1 + 
            0.5 Cos[$CellContext`v]) + $CellContext`a$$ Cos[$CellContext`u] 
           Sin[$CellContext`v], (1 - $CellContext`a$$) (1 + 
            0.5 Cos[$CellContext`v]) Sin[$CellContext`u] + $CellContext`a$$ 
           Sin[$CellContext`u] Sin[$CellContext`v], $CellContext`a$$ 
           Cos[$CellContext`v] + 
          0.5 (1 - $CellContext`a$$) Sin[$CellContext`v]}, {$CellContext`u, 0,
           2 Pi}, {$CellContext`v, 0, 2 Pi}], 
       "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{426., {217., 224.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]], "0.908"}]], "Input",
 CellChangeTimes->{{3.771721685089179*^9, 
  3.7717216851032143`*^9}},ExpressionUUID->"5d609c24-8d92-4fa0-9381-\
8cdb9706c225"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], ",", 
        RowBox[{"0.5`", " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], ",", 
        RowBox[{"0.5`", " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
    RowBox[{"a", " ", "q"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.771721439298483*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"62b7c27b-d452-418e-993b-5ae45ee45bd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     RowBox[{"Cos", "[", "u", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"0.5`", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "u", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"0.5`", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"0.5`", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "u", "]"}]}], "+", 
    RowBox[{"a", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"0.5`", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "u", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     RowBox[{"Sin", "[", "v", "]"}]}], "+", 
    RowBox[{"0.5`", " ", "a", " ", 
     RowBox[{"Sin", "[", "v", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771721439887752*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"1f7a05db-6eaf-40bc-a268-f20e4bf32240"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"0.5`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], "+", 
        RowBox[{"0.5`", " ", "a", " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}]}], "}"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.771721446993436*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"ad51fe3e-0f8c-4d7c-963f-00f1a55aa359"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {703., {260., 267.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$44993$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$44993$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[{(1 - $CellContext`a$$) 
          Cos[$CellContext`u] (1 + 
           0.5 Cos[$CellContext`v]) + $CellContext`a$$ 
          Cos[$CellContext`u] (1 + 0.5 Cos[$CellContext`v]), (
           1 - $CellContext`a$$) (1 + 0.5 Cos[$CellContext`v]) 
          Sin[$CellContext`u] + $CellContext`a$$ (1 + 0.5 Cos[$CellContext`v])
            Sin[$CellContext`u], 
         0.5 (1 - $CellContext`a$$) Sin[$CellContext`v] + 
         0.5 $CellContext`a$$ Sin[$CellContext`v]}, {$CellContext`u, 0, 2 
         Pi}, {$CellContext`v, 0, 2 Pi}], 
      "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{750., {305., 312.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.771721447400584*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"0cdb1d5d-1430-40ed-a17c-8aa155e9e8fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"]}], ",", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "u", "]"}], "3"]}], ",", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "3"]}]}], "}"}]}], ",", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], ",", 
        RowBox[{"0.5`", " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
    RowBox[{"a", " ", "q"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.771721580007378*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"8b099d4a-f894-4605-96d4-857b6c9b3030"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "u", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"0.5`", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "v", "]"}], "3"]}]}], ",", 
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"0.5`", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "u", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "u", "]"}], "3"]}]}], ",", 
   RowBox[{
    RowBox[{"0.5`", " ", "a", " ", 
     RowBox[{"Sin", "[", "v", "]"}]}], "+", 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "v", "]"}], "3"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.77172158308978*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"38d6ec5b-2c19-412f-82f9-e9d7f691ae71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"]}]}], ",", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "u", "]"}], "3"]}]}], ",", 
       RowBox[{
        RowBox[{"0.5`", " ", "a", " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "3"]}]}]}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.771721590739203*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"bf2392d7-99c6-4c0d-9ff6-14c980da90c1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {821., {211., 217.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$47339$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$47339$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[{$CellContext`a$$ 
          Cos[$CellContext`u] (1 + 0.5 Cos[$CellContext`v]) + (
           1 - $CellContext`a$$) Cos[$CellContext`u]^3 
          Cos[$CellContext`v]^3, $CellContext`a$$ (1 + 
           0.5 Cos[$CellContext`v]) Sin[$CellContext`u] + 
         2 (1 - $CellContext`a$$) Cos[$CellContext`v]^3 Sin[$CellContext`u]^3,
          0.5 $CellContext`a$$ Sin[$CellContext`v] + 
         3 (1 - $CellContext`a$$) Sin[$CellContext`v]^3}, {$CellContext`u, 0, 
         2 Pi}, {$CellContext`v, 0, 2 Pi}], 
      "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{868., {266., 273.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771721591113872*^9, 3.7717216142364683`*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"2abda6e8-1300-4bcc-89e7-69856d07a76b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<BarthDecic\>\"", ",", "\"\<Image\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.771721675620953*^9, 3.771721682348274*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"154f81f3-88b3-4536-9acb-abecd2a5bf73"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
WA4oLxqmjQ+ud9dKsWV/UlP5ox+9EEyWZDZi2dfP5WLJVExKY1ryWzan36P2
rHp9tihimZyQPzxrdgQfWex1DcGNbGoka+Yxq1WjD+64R8Bi4K4EODDJXYjr
YbKW6uaOifoz3/5ff8lXA/PIlwUmib7dSLv5ya/oUkJsGeDUmHx1oevpFh4H
SEZhHE6Tye0qwqP02kMnwXl4qMwSj5pFli0y/61k8irBUsXDJJbZsXR6Rc6n
Jc/c/wXCfIGMCpbuA3Uqm6EWWhqBnMxbusotOdUJyXxggm4yevWdsxUmVdPY
ZNKpy4othUnDHKsNxHsYHbo3mOTK+Jll/2KHZv6EPHzvFksCH6eYLF0FomJJ
7COcacoo190VS9doSiYbsez+gzACMsMn9l9fXCmZjIK9/Quu047Fer46x7OK
2qpmaDvbZozTmIejxDx5kxnyE086ZWQJX3CyQH1TIN/cn+oFJedwyR2rl93g
KnkKi+rPrG28zUymIhhHt5TFyTm2DL6VqWAsrKX7wcXSv8v8ydRGp1bvYoH9
Ey0pAJOR9oOFtFqFOxO5qSlqOYQ/N473EEuzKWKu23ye7i/bjRjpGID3yTxG
l8/JPOvOj7oEMhnb5FVONk0MUxhhK6N2BUjOJ9KW3oiRbAQypsoBibHY3vFp
SidnBUOpoY37y5zVdDnSygPl/m5MJefzNtg5ZdEVmdTuWRXNhDR4CyDNtGTI
xtKa8GOyurOUxC9i6QKiNrNSI8hqk2B55syh7j+g0dGNu3ZtB0sTKmLx8WLB
CQOWjwabHnqPjs6lQmNal8m1WONGm56+/fwSYakJYNMhezJXx20NJBby2L7l
bkKMLh4xBZTcSGB7a4lAcjXunor8LEv5GxtW5cS2oqyQNKZYCZcyrxtWiu3r
EkTXuQqTmkqABKG0D6KByeXLPu+yOFi6FB6VeKO2z6ZN860zYJ5wWbcqj+M1
i9r95/XUU6uwlvWdhrU8ikiPhM/ub9G+mNPbw6vNys1KVHdPqFE1pUxcJ3ao
FKxLqUHNejHsG72vspIYQGoe+RXW1X00sCSQTgHV4poMpLM9MMmBPR0SkCtu
2LTmpnIHLrBZB8OUiVrixOGhwJIf8TZ1Nd1OW9anKpl0rbDO5KKsC/Im6zU2
E7FolSWqKkzGn8/zx8bWWubCGhdmm/vMXn18rlmX22BV4XRk79W9WksPp/Rj
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
pbTuih0S+8HM6OgwphLHkkHZobznt7iUhc/0qbs+c268bmiACGDt7PbyUjuf
vpUhGyBrTWO7XriZ6kazcu3WcsxqOiHfpcDk81u/aluHyq+cGLTjds/Lqmgq
neq5RKqUz6T4sQ4vvr55i5C8678dIzmZNyESaFuxB7U9d7/ffwhMVpoqdi+j
qSHOfYzgjcO3hdTEEmvZGZYtdjRoKn/xyx8KJI9Q2sEtLl+RzFNvLakU5cN4
tmkksScfnNiYdv3nfnaQiUvZfXRzcSU1aRq6d8/u9IdUTKXlfWDS4buzXQlm
U0yFZVTOj54OV1V+xblZsmLUBsh39jzazst1806f3GKzQjtvprI/U9Tbv1wE
Jod1KXNnh/JXVp7EVMJkYwHz9sUBuumvMJXRASeYrJTsu+JlZOmNgSVGss2V
F17yk38fEenaDOEfnnUDQvm0XRumnVB00QUjufnJr6SNFXsfL9e+tW8M35hK
mFTtndTZjaaK36M+eVmE/Eqd+ZlK+GM3rblJT3KqdMfGl9hQzD5iMtnYRyxt
t+nRSvSMCUwObfgvMGkFtmDSLsaWIjff27SczpiU8KbWMqpHair57+XJdpbv
6g+73MSv4TtjCy/81Prz663Eam2b7IRYSUK7YDGKS1BkkseXX1hUYdLlRev0
GumgnQXINnO3KmCT91CvHongXpaVJK8qmdbo0MgkYc7lSGCjOHaHSxmTQtrJ
wNLcWpjMeRSdGDEvZaZu9T3kC1qVCOYt/NKbP++KllnnGuWguxn9y6nyf9h4
y8Ed97SzZbszgZZX9vZlIlQ7CZYlk2gUO3Xn4IYN94uNs9wd+3tT7UOMqzXW
yR9IC5mV+3cDpE2T4zwj+LF9y4nBp5VP3r5Ai5V4+3Hx4TqTuJTR6FNTGUxK
IM6kkQ7xSGdbDxY/NDtXz0h+YyWE1/xehW5k95Lio6dvL62ES+SV7iE9l++9
uLhPV4bJRxd+7tprP3nbLZ/mYMOqm3Lb0Ps2rrnZsTs5zzlr0Uxvo+8HHri7
MybNvpgq9WIAZPcCkG+OLWDUZuxus2TfpSbXXvOxb39ndR6pU7OwX/zy+dyH
N/VN06+z+VFgqUvZ2b3s/xWJalfV9PjMCEBa3fTMW6svUyAns2mSSUZt+yAH
k5m9iZLJKK3f8e0ibzwmyXv4twxk32gqkgaQeHovjzTpTdMTcdNrny6uiBnj
tRtnYHJ065w6exNufunVJPbo6MrYu33Vbtbuk0TjBoAsW3z2XA4dXK326foh
jQso/VhPgUlNpaVXBqUteiXWJMdI2hanfxOVNia2y/ae3Uv6dJdSHL77eguZ
RInoXRvatWs7rmZfb3rFi6M25jFaNfXjLru2LcTHg8azp7aePplaZvfjLhWZ
mNj761/v7uu9YFIsbbUTE+b9u+MVL1ajAkg9yaOHlr68rnmT5S4Fw0ggfObU
8xNnt584vuntt7fv3NnLnThNBSCtztfXu8Dk4odm33bLpwl2BkB2I/zXrZ13
3XPLbyCi0ZPsn5GczEy6KQwsUzXdw0Mz4FXmVap9v/1w10/+faR/d7n22k9e
wdu+ZlL8PwTLkaU3CmQqld9ePvB0hYE7ZUS8vuHID1alYvjHxxhPK6VHey4W
14XJfpvKAY09lFqqwIldm9bchMLk4/Ovu/DLpi/WmIpquo7d/Y4+IskktwQd
6+u9BtJbkUyYbLNoxnRleOhemGS8hkYrRadWOMfH+s/krnqSyb7jx8f7Wttq
ID2XfszdhWzbVmsaopHkAAeP6GP/q/3NjssVyHcHk33qtT2Qy1EwkhhGULT9
zQcnNrrw19cpGoJ6yM8LizUmG/sxDeTqFLt9ffibv01FsXKbMMfulELWiyLP
U8n4+BrsZDB55swhmOxVP6aBXL4yq6gz0FT6d2vsJHY4mNRUwmRfJ4UGcumL
4MEDAQ7mEWXg/umR1XiS69bc1W8sbaEokJpKe8f3744DuSwkTOLo1vvsbgyT
M2AnJ1Nsldo02OITFNGroQbpQNqUn7+xvjJqz0DBDezk8NC9MFm2DhkAORDk
0GvJtUsr3WlmZneaNjy7vR+dlUq57ZZPL1/2eVN5Z8YsD+QykkMHV9d7KtWY
dMm7rzcdcDiQqeTlFxa9c3Rt6u8wsau0k32thD+QgbSQfXsfP/n+MzaeS0Bm
azkDdnIgA2kqRdA9h7gbjbF7ZnJ6BzKQ1lLOC7lv62K/o4EMZCADGchAzsn/
D+4jLrw=
    "], {{0, 220}, {220, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{220, 220},
  PlotRange->{{0, 220}, {0, 220}}]], "Output",
 CellChangeTimes->{3.7717216959640827`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"6ab36598-f20e-4c08-8ec7-327a59ea6b42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<BarthDecic\>\"", ",", "\"\<3-D Graphics\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.771721716588252*^9, 3.7717217215633907`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"44b736bc-ee9c-4001-8e38-1c97091b01ee"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"UnknownProperty\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Surface\"\>", ",", "\<\"3-D Graphics\"\>"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.771721722522717*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"84d256a7-17c0-423a-97cd-e98abb1fdb96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"3\[Hyphen]D graphics\"",RowBox[{"EntityProperty", "[", 
     RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}],
   "\"EntityProperty[\\\"Surface\\\", \\\"Graphics3D\\\"]\""},
  "EntityProperty"]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"d1292fb2-383d-4547-bddb-cddf634fc321"],

Cell[BoxData[
 TemplateBox[{"\"3\[Hyphen]D graphics\"",RowBox[{"EntityProperty", "[", 
     RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}],
   "\"EntityProperty[\\\"Surface\\\", \\\"Graphics3D\\\"]\""},
  "EntityProperty"]], "Output",
 CellChangeTimes->{3.7717217340212803`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"1e5b5d71-f629-4850-8a72-31d9922b4e9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<BarthDecic\>\"", ",", 
   TemplateBox[{"\"3\[Hyphen]D graphics\"",RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Surface\"", ",", "\"Graphics3D\""}], "]"}],
     "\"EntityProperty[\\\"Surface\\\", \\\"Graphics3D\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{3.771721740745884*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"e93d864b-3809-4f3e-b711-e19b913feeee"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
P6RbtL6XqX6IsK/kXqbw0C+tnjQK1Tj6HoIediPnUfK8IB8ZOOJ+mV7yfZTf
GHLiXoNzFvIAP2Idsq9AVi3ntVbbel9b8VHoMV+gxzg3KJC9dpPGehyYP3Ce
L/QpBh/ED6DfGfrLu916MvfZnFMGDnrwR9950DPu3K/kPrfLRyzo24t+Z+AD
/E7LAaVaOWv8UkZ3e5dCmh78Qb/4eY0albz/c4+/YalwJeSyyInzKDjTgWLX
u14XeYQP/FEsv8LTu1ryTDyr6QNvfNh8YLS/nIOwB9yeP3jeeNBFkQffZf7e
Iypmnuj0yupQMsOOWgOPW3pXruzXJNNnLY/nhduTt58Q/vy/oO8y6mez7HZ6
XkCPccC4gd659OW0Oe6vBAc95LGbV73w1zKnhR7y+0b0WXI++JzQA99fbt37
8xf8ZT+iXx78Y3tbX1ibtUm47N/4jZ1yp6U+lf0u+1qNJ3Dw8ehY/e+RVf0M
vQT+wHGO+MbN/tX11RPhg358XerWmJJn7SPBYV8xf9B7b4luE5l4x9CTExJL
jPjd/6ahxzC/oMd5BDmb5WhwyP7fCOED+lO/V5sSHq75NMixNPuSe36yrzEO
dglLc9So81hwyAn+wB8MabEyqorG4c+R/q3qu5D/3MPL2V5V/c/4Pxh6q//r
Z7JfWH8CL1KtUsqQK4lix2KdvPV7Wzzg+HuxY4HHW2buu9zwvdDLeht67Ncz
BTSO/YL+7PiuLRx8/niy6+iUcklil4IefQ+ZT/vB2cqt2JQkeKdOvz3P2iHe
Jn1Ly5HAX9focUjqv+/8yGkJxvicmvFq1eVZicLHYdmAdaMn35d5gX7g+cK9
g9cP+iODnnHQF5/0rObmwnp+QQ8c3xU/ttI/LA/w/gEVk+qNCrV2qVir7L4T
twVHf0mfUc9WLPzltsgP3KGJ97Wog0+N/4W+Bc76Fnjy6JfTtz9+JniH7AeX
f60eZZOe9RXWs611fqXUyrTKxUJFT+I9hel/Scv+ok3m93p8rFmOhCVcN/QG
z+O57weWzq35THCc19CTPM44XxzqlPOq3+iJrDd8F/sdOMYZfNDXnudxbniW
2oOHanqf6X6hMUkPZf+C3tnV5XV2z7uC8zziu/y/oH+yrOriAjtCDHxk6pdC
3T1eCp4a3qFFUr54mUfU4YQdxe9QyF8DDjsB/Cf0dB4dVPWGFX3egTtk8vyU
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
ld9p8VKt2ha/mir44t3tVmeqk+z84vDKUq9n/TseRr4ITQ+O/QF6HcfkFzWj
m+Ntkz84fIj7gz98dFwSOPk3wDsu+jC4jH+qTfsbb6j5JGV742Sb9u8F1/6o
1zdNKri3b7JN+69CD77u2ZbuiUlJghOHBf2Qbj6Hr6eY9MjZad7BR3dLm/oH
hw/47OGpt76f8C8f7+oBG0skW/Rmnz364LLgJEt/Z5a4FONaJMkyvuhNx0nl
7OrUo9G6f9/Zxv6sz8fbm0pdeFXYiuN/LnGLxvnO/qnvb+D6/ka7+tzX+e5e
hDW64pU7xab9nPW44OcMrv2xHV8VXDjvUlK6fLR/L7hrnSafgm+8EX2+HLYz
bmtNc1yg73S50NM+XxNNPCJpTK+d8YKT5xx6xkX7e+vxwr9dz5MGfhPWrLmT
IOtI+vX8u7h/As11qv3/4a/9yRmXLlu+1Zw96aOMO/jSc1MLDS7zUcbd3u2B
fZ6pqTbtTw5/7TeOPPxjPpteIHuO/iYOn7gSGX4NO5Rk1afRL3Dtz+/43O9j
+UyJNs4R18e5ilQu9MYGPfi+lZvLvl4aIDjnZkzhbIu7Br6x2bd0PV7oSoLg
XQaPX91srYmPaNjo9xUFTf7ct/X8534u89/QJ/dw7iHo06tvgaTyVU0++n4O
vb6fT411+31VJZO/b6UDC+qGmPT6vgrOuoMP9yVNnzjiVt+/Ik0+9lk88jn9
lGiZ/7OKzOybdVCCTfvVozftnw+u/e2PXMt5oMu9xP/JJ3VEc/fxFRME137+
Dc74jGvmYfYX/QwvOHFlm4cmjp6ZD16VvRZVjEiS8YU//5jgsac+jM4xxZwn
4P/k2fR3kVsmPnX4uj2NHF7YNsQE3+v9KdHGPxq4nofjWtbr/Sr3c2kXenDo
P6Q9vRz4vckHev5twYfePn026Hi8pV09z28371+shcsLS7tbigZ7hnr42zYO
9Xo2df9nm7aDze4Z5bq50RebtoPVe1uzQc/UTyZu2OvAdf0U+Gi7Ge1quxn0
2m4Gf11vBVzXL7th77BqeE+TP+8mTU9+P3Bd97nz+KPTBzf7bNP2VeTUdlT4
gPPuAIcPOHzI/w//Vy9chrtWNdvlvgcf6o5pnLoA8Km773otr1LxNm1//ufB
/iV+M+Nt2u4Kru2E4NpOqPVJXWxwXU8Qe4v8/yp7i1/f7L+fyh8tOOuLfV6v
L3kHrfIqWzvGT+JJ4a/tMDo/ldPcIeUndX5r479b9vO+v14qOClQcPK0gJ/5
PYPr4niTPryke1xpj8B0+Qy6MTZPvSzp8yefRv+6oxqkfAiwLajd869cC+PN
9/tL31eVPrwW3CHn0eNrqn4QHH+S9Oh9Z5SanGdxiHODBh7et1tkcuHfU/LY
P9vYyqeqf7rtFgx2+u7EgC8WfPTxJg3/av5F8lHHpH50KffeT3DyWUHfq3x5
n0aZPttcbxQLrN3pndCDY2/ELoGc2EUlbjezb41lA/7la8xD+4cFixa/arYr
ef4N/n+NWDP7YEcTPzgvfuGKqKfSrpyPN2IP5nMNtPBB/oWb57SOqRhv2lsO
v78XNDbAwscuMXvKyk1bRZ/Y91zqdD3d+cF+4Q9OHRnoxz0auebH4/cEh576
Fy49JuU+OfystCtx36X69+i89LTgt6uM6PPgg4/gRQ4saDvp2H/oo1tvjzpw
UuQB98xwePuzTseFD3KCI6fk3zD6Cz3/Dsh/qGrQ9dFb/4PPnL08a8U1Nm0f
sHsas3Ht5l02bfeY2/rNkAcd9tm0v4pdkbKuSzduEBx5HG47NRntEGzDviH2
unbe9ts+mzh1bcCbBSw+1KbfVzMf49TVk44O8xD9SJz+0AzXq4aekv6Kn4zW
v2HP0ePo+Xrr0DlJLy3ykLcQfOiUsDJe91JEnvCyb5fMGh5sy+IaXHJulm+S
NwZ68DPb+h6dktXkU8bnzrkeC78KPfOQ/UfGvcwNu8cdD9m0/48ed9G/0S/o
XTdU77+67SvLfAafuafPpVUJSZb7Fe8guV+5HD7w457Xgh8slm19nXzm/Yfz
An9m/vuIHwcnrh96/KU516AH555zfHXl08u+/8/+o/IPCL1xboJDr/kTR6Dt
riKPyleg5YdecOM/FP2wjrhPan2Glthcp2AXP9HbpK75co+ICRR5yCcAzrmg
3ynaXl00Y6XnpfpFOWv7M/T6PyjzjLyjLxaJFHra1f0CRz/kPdDnO/Z29Ebc
KP2iXadlTZuu2GG+dxx/mXqh+9tEWXf6XQnerHm1YpF+AbbJefK57HcKse1L
zu/hH2znKXli74994uUdYnOom23GweZ2nqyvffWa9yz6x3uhp24X6xH6LYEz
/b+zixb6mjWXTr+11+QDffLkunVvbLG2C3/yfcEH/iujC8/vWibW0i51saFf
9m2jx5WFJh9v14mj1l0ItRX9kLwitFWauc94Hx/uuOy9Zf+BD/TkdwWHnvop
Vcuf+3PXl1BbnQ2r/ROnmvzBu+0bk3uno9lf+HgVieoRNzhN8p5BT7+6zI9Y
V3OhiaOfnFvnjQ+o+1HmT2rcqJBqC6PknQj962HTW/h4mvoH39vh3sW/fO08
m0W+3Rm5O9bSL+oFgD/4c92bmanmfvuq156dNbt9spzXccOm5/vxcpzg4yqd
C9nV5pngIR36Hfy5rUk/O7dte3L9OAuffef+XBG95V265x3jUqbS1NY/3Y62
nBfkuQVP/SN/Qt47aZbzpXBosftbC5jjouUnvrvqoR5j7vmEWdaFHq/7P3Wb
f31zlPOIGVXGjDkfYTtVMWzur+9N/ud/rBjrODnC1imgyL3nvlac8WUd9Wt/
oMyleWa7ev6Az+yyOMulsdZ5Sz071zWpr14UNPcx/c8Ozr1X6xn+7Cfbcl2d
VzLE3Ge4V7RoWa/ztBsZPeXeaNx/LsyrXLhlmf/gxnkKPfdncOilXoBxD/G+
0PvprrqZhM++U4PjNwYEW/TzuPu5o4vcgi3r3e1MTueoB89lfOX/Tt3ziR8B
z9Cv0PZWJa308OG97Nuh3vzHJQIs/PV7QeIvDJx1IfSGHj59XHu8fob/6E29
U4bndi1z9UGQ3Ccf2bdYeGxwJk+pB2rc68CF/y8jHdrf3yPjJf6Bxv0ZXPIh
GPqHz8qILY3Xvjb5MF7SrnG/Atf5lI52fLUhcH2kxW7P+SvvMuNeLfMZfz/j
fs560XoDFzkNnPNI6A0+zB/hb9CDU88XHHnwt+eeWfWq47s8CzNY5AHHvwi9
gUu7xnpBfvl/NPKNcK/Q+T3AJY+Kgd/e16yvwxqT3vW7t++T7iZZ+Rj5cMB1
3hvi/sDJv6fp8bcR/oY9HJw4Qej5pyZeUudjAdf5fLaUaF31c+pzoSdvD/Ra
/jbTz775K+dzZ53HBjl1HpuZL85v/rzElNOxR/0yKeUS5B3BvR07Erj7sLKZ
xzu9FPvkpj4tRq8vnmihJ74GnHw76ckPzn8KuMf+/lv6NX4h44j84NJfI+4D
Pjr/Dzj/OOKXaOhN01foU+LyjOP+6fMx8ghp/Xivdne9b3tmQ07oyTPJPAHn
nxd65NF5fkJv+M1qFuXnrPNSMk/4x0Qe7Evonzw/tAu9Xl91bszOm5rLnIdT
0zxy3N31WtrFzwF6cL1+5b94pP+STxEpFrsB/1PgbpeOXgzze+7cKc3+u12t
k206fkf+GQ2c+Cnwv4vOmJT/spVex9fYL+38pl/WJIs8+h2B34i2W9Kuview
j+l+ST30iCfZ7rxMFP1LXiMjH5Get/grgpO/CHzulmo3Vlx+JnzIy6T5Q3+7
yuSMN2e9FNyj4I4p/2zyEnt1hV0t7uZaFWhzvTc9wMnrH8HXFU/Z8snOxKln
DX2XJ4nZQ+rcEnu15gPu9HSdW8augbY8oxrWz+Z3X/gX/TnjkkW5QoSeOibg
yCn1jIz7GPTgmZ+lVXlYL0Bw/BmgD7g2svfQv+9Iu27fClToWNDX0l+H1nnX
T3hr4k0K//Cqc44gCz16AF/94kpM+OYAscOP6+Eywr/SDRt2Y6lve2ZH7RY1
LwlOfm/o9x0vO6BRhSDL/w73VcH/zNt5UOBhweEj/sCGnRw7v5YH3H3mJa+6
Fz1tXYI//9bO4aGMF/qfu6hVgQa3Hwg+eUjRO/OSggUn7x/0rUbM/9zvdpBN
8oEr+cHn1rrcpNDVHSZuxO9A797gnP/Vjdcs4+WSr26n7g+PWOTk/ga+rWmP
oO7ZggXHPx967o3818u8MujBPY692FSzqYlTTzY9ev7vAk6OzWT37LqVv5q3
js0WBh0d90pw6qrLvHV8kFA3/LJlvbgfyucTf+iSZf3azfml7a4vntb1mL1x
/3bHfGX+gPuVyLa/5LsngjstrffH2HlvBafurdD/5DWk6vcvZByRk3s7OHoD
Jz4Oet3u1WKrU8oXCrLxrwEfzi/NB9zt8vLf3Zu8Ej6aXuoaPJl+PsHuteDk
w9fyQ5844sW03Y+eWvrFvxXyewe9LlDhzR3RT4z9Ubuaud9Y9KNxLSd1HwR/
k2/8wt1vZd9wqVj310uVH1r2kzZjVkU/GONj2U80Pf+wGmcfcAqefzexyF1b
/4ZHHnV3D7LsY+xLej8B13KyP6DPuGGD9oR4BAhO3Rz05li/7JwDCXeFj8b1
vIWP1Blp4j1qts9bS7tHT8SOabI2yHZw2tQ+fjMfW/hrPjmTfplSrWmQ4NTd
ht7BofnZLc9TLfd57mncl7iX8t9BvJver8DbDV02tGNgkODEG0KPHix82DcM
nHUkOPnnDfrNW0quCjlh3gOrHx78LLFCqvPwjLaamxv5yH6ix1H2mXXdnyX3
fyx45tRNX37vG5Qu/bgupy4UuHxXcOp6QC/9NfzEZD2+uRg6tsIZy7nPO5T9
jXnIu1Ly9GZa/zG56xmba40+h8/+ftHSL33ue1wJPFir3z3B8ZuCflbBxl7H
Dn+xvI+gxx8A+tVJt+c9yJLRU+fLDZj8aMvjEibOvwO4zpPc+NKE707NyeCp
8xuDkycE/vNrVK78yfafdg0+4DrfMrjOq4w8Gt+W9uOEtW/tPHWeYXCdTxg5
df7hsh+X2vK5ZhJ6/i/Adf5kcJ0/ufBfHXbnbJxJ+gufwX4nsrd1+2rTcQQz
D/m9cxn+1abjaAZvTRv72zeTnn8Q/OJ0/BT0Ol4Geh0/dc1xXc75B7/JfQD9
HM5zYZN7kzTBiXcDH9dqWeakT2Y80WDfcX9EP0+xyE+7Op6rcIkxzosPmuMF
H8ZLj0ti8wtvxjn/BzfGF5x1oeXXecKhJ18HeKZOLQev9rbz1PE7befn7rvS
y85Tx8XAB/px2R9PTOwfJriO+6BfOp4IXMeDwKe686TgfJNiLPQ30sY6BB6M
sZ0Y/rT2n4UinBfsHbfgUpgpTzn3gxO6H4lw7pDD68bhcWk2HQe03+vUrZHl
THrdr8sZ5zq0yW/G6dSo1vrssLwmPeMIvY67YXx1vBXy6/isyEv3S89dbuep
44Zcf65XZ+Eua7vw0fFfWv/UbwJ/02x+4dlvzXVXfEjtaQPsv9m0nHrdYZ9n
XlFvHT7gOs5onV2Ao803zbLekQc+kkdib/Xnxxea9IwL/MEDrj2zf7LJHC8d
rwS9jgOiXzreB3odz6X9ilmP2v9W/yNTb5f1Bb3GtT8z+wy43me0/z847bpc
W/Xcd8BTwbVfKPHI4DqO+Hr+px3+mJNk+rMp+XW8sN6HPXaH9Ws8+Z3z9W2n
j6bkM+Ma4HP0wuqZO/uY/n7YefDfI2+Y9sdLXHc74MV8P4t/o47L1v6B5EfS
/oR+E4tHrUl8KnY5HWeNfkQPxvkOvY4nRR4df0q7Mr7G+S7+nIoP9PjrguO/
reNwkVPHz4LreFtw6munx4f/BfyWdZzO0SsPfkjIm2CRB/3ouGBwHRcMruN9
NB/iehy7Jq/eM+aLRR70qeOD0CdxQJqeeD0933ZdzZ9z5j4T13Z4cG1nJp8V
eMX9Xyp162nSa39jiatSfsXkm9L2fN2uzpel5SG/k74nQ6/9tKUOnfJ/djtX
PHuZEW8E1/mstJ828wdc57nS8QLg+JP8L/3QL+7JOu5S30+kTo1xf9bxm3Wq
BlTcPzbZ4i+n/X+IE9T+VNp+ruMHNR/s2NDruD/oUxdHlWvX2RwX4p70eKHn
PRsHZT86w2o/l3gNw94e33ilm2N3027PvkG7Or5S2+2JZ6xz1OW3aeuTbDr+
Udvt2Qe03f5G7THBHf8IcK57MMPdEq8SLPrX81Db+fHz1/Q6TlPHv4ieDb9o
nY9L2/mJy+DepePfeU/ViFla67vWMbapc86vaZVq4rfcZrQcNy3a1qpw/PEJ
699b7jP4g12ekfvAy9YBgot/IPYuA5e8fwbeam7mzKM2RaRLT141hyNfz5Wy
vZbzWvLUdew8Ou/Y1zbytEg9F8OuCC7xoYYfguSlMeJJwUcUHDYn7Ltw4QOO
PMzDqdHupTOWMOWUul1Gu/CXOFODD/JInRoDJ6+FyG/YAzU9+L7agYMfnTX7
Ozmn7+EOU4OkXfGDNezhoreg8gVbDvcVfGqBF663jkda6POGVzuQZ7aph6lv
9z3c3viZec4qOeVco26Ogc890avQsvvvLPqsM29dqdVRoabfbN5LS78WM/Us
dYsMPjKvqLNm4Mwf6D07BdytmMtX9Kb1jx6oZwofGS+jXpjWv9Q/NfgMXHMt
vv+Y9MeX9Q6fMy0rTw4JeS/9BUcPMn+UPlkvWk6ps6b0w/mi563dnzsfj/wx
0Nlp6odUzzev5F2p/XPA8ZMB590B/dQPpZI6HX9hYz/R/jbg5EcFb7/8zdqm
drGWdvOMGny0bxcrH+RhvwVHHq03fW6C8x5Pjz/5srQeqGMI/YgsqzufmhNt
2U/yvug55UVCtGUfQw/k14IenPuhlp92wZNDOjT7lDvGMn80H+z8zB/89rHP
g9utWFs3fNRNwZmH0D/uMqVgZT+THr/9iwtW+aw6HyzvEc0fPODQ3dFdP94X
fLD7tnKbPr8TPuDcqyX/ibH/0C71i7X85E2CnnZdF1bssKrqQzmPwGk346fb
D4osDZR1qttlfQX0X1rpzphHgkOPfyP43F2zw7q2irDwgd7No8YvxyvfEBw9
Iw/5wfAb13kDwPF/k/xU3w3seuR8kFn/0fhv1eta/keMfYD1CP766ZrOdvX+
sw+Enu45tIO3zCtwx/UL6mYb/cSy3uFDu+yf4zze/BVa975lP+ffXOipQ2fw
YR+Qfhn+APqc1e2SnwRcr0f3PscXr+j9SOTXfPT+Kf8d2G+N9QjO/iPnl6KH
z9zR9zc5Tv7Hci/iHwF5pO6k8T9Lv3RcD/RSx9bAxR5Ifckti4tPq3RV2tV8
LP01/BjhL3EfzT/0qxn2t62pe+5hvtfjLHzApb6k8Q8OruNlwFkvmo97bO+G
Rx4+lPgm5NH0j5dtnu/RPc4SVwUfiTMy/svgI3Vjjf8d9CZ1Yw1/AOjho/Wv
47PwU3VLmbSjztFrgiNPQJsNw7oVOC/5fCRvv/KfdP0hPuWQS5zIg18ocmp5
wD2WvL526cEdoZf7tqKXcTfo+cdETn3vApe6nwY+2/H0xx0OcZbzF3reBeDR
W7r/8WflONk3wEtVq/j4W4tPNu1fipzoYe79KnXiDp6T/jLu4NCDX1y/rNzn
reFiB6Pd5bF1x2UON3Hspf06v7+Qv0GE/NtCj5+51Bk37NXgTmkNbXfePhR6
/NvznO6fKXPg43Rx2q188smW2c2ibLqOOfzzLF/x58WZN005fy7beUxcpPl/
bdiNW2Te0eTPeJMP8aQiJ/4MPfL/PffNe6H37Ot11Lbztpkvy9AD9Foe+d83
8hWAu/aO6dbNx6zPTn+7+PiFhrk9tuDwDwm7mjH53/MNPCbjpPrdGt0QvYVX
LF7sueM7+c+K7zrox5ffPgmOfVLyYhlxEODQi18TfPq+fvKnf5zg5HuBz8rA
hkV22YeYdlEjLkbo6/VxqjDxheDLv0z+rv/eSMt8Q8/gO6p39P754zvBxw1v
OHiYnY/oueqxDZnKLjf1jN6IPxK7rpbHwO3vTnNdNdjsV0yR1CWLx/tKv8Bv
L9yaM1vGZ6If9E+deuQp4Fd5/ZOkMJlXOo4DnHgHPd+KZi3+7Y4tyjLuxFlA
P9drzpjF/jeEP7j4dah5Dp8d2YY8qzwlXPAu57tsO9v3uvzHwcez4rncvWqe
F9x78KkMkePDTT8cNT/ByaMITj5k6PW4w1+PO3pAHuLiNT3rSOvBM9eD02dj
fAQ/fLN9o8MLki35KLS/aJff05rY2/kJjt0Seulv5dZbt7v7iDzfsjfvWPul
OY60S7wP/er5V0v/DSvjnI/FeEY+mREruO/6LXUHL40V+oOLz7bt6OEt8xZ6
9k/wesVDfJ1Xf7LM89lr+w8tX+CTJZ9DyVv+W6+VjLXMT/iDh15u0ztXhWjn
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
frWe18vwwfKOgx4c+4+l3e1b20YseSy4fpetDLvQsuu0D5Z1Bz15TiTexNC/
fh+Jf6mBE2ch+5txDmp6HT+i9cN80PyJK4Fe4/z7pzdPsIdoXM5fY/7gV5Ce
PQr+0IMTLw/9+8a/ZN18Mcoyjnu9dgf0mB5pWXcFAg5fWTwiyvJ+ZF8Ve4hR
ZxycfxxNT71pvT/Dh7oknHfy3jfuIeD8mzN/9l4teW5vtjCLfQZ6+Sed8njg
1c0+lvsA54KlXcM/X+8P3B/AOZdpN7T2K//gtuGWfUPLg/0T/3MdVwW9xG2p
+yp5D6DHP1PHeUFPvJXGZf4Y8U3kadfxXNjP8S8l/yo48ezg1C0C79Y+peIs
z1SxA8Pnzc5xP48aauJ27V1G5t5u0vNfAJ+H1Xy95r9JlfedX/TyI/ffpki7
1F1qMSFvw4d9k4UP9Wep66rrm4NTb0jqnoc0zvNbJpMePy78aWmXeFWNO437
/XGuMX7SX/K5xSSeOHK/ynOLPukXfLKfTKhRq4GJY6eVvM2GH5rmz7+YHhf0
Ke0a9RnhD33G6YdGOU826ckPIPIb9MSta/llfE8O9k4rmWzByzX7aD/nbqro
gXY1f8Hd//7pUbEkkQf95A1tmVThW7JlnjRLue8X45Mk9QGlPothXyKPutSL
MfwqyaMuuJGfCnryeEveUYOevNxivzLmT3fHfZftc5r1UC4/2d3mwpSvlnm4
L+OU0dd2f7XUc2QcyXeBfuRf0sAH/vPDH07lzPEiP7PWp8/Uq92mPbTyoX4Z
4+hXs4Vb4Gx/4S/5BlW71PGEPzh5p8F3BYV9KXYuXvg4bs8w8PLrZxb+0GfO
vf6E7/tEm86Ljt7Ik6bbnT0zpsXeKv/y/3POyrGdXkp9IvIeQw8eV/PLi5lD
TLzV2VPFWlZNSJf+aliJWp4PTPk1f+qOMc/Zf/iP1vsh/KnnCO52w37Dzyfe
WMbdtdTfrwelvbGsF8YFvWn+/jfOlbhz8ovIqeN3Zs5K9TjQI0juY+DYVbj/
gJOHAZw60dBzbyReRt9LwbH7STzU2qN/bvR9bbmf0y7vDvEjNepQ6/sA/JGH
/oJT11viqox2pb9G3A302GG4t1DPVPPHjx0ceveoOmtXrHsufJCT/3F9bwFH
P8LHkId6kRK3FVG4e+sQf+HPOY7e4E/8jh5fLb+Ml6EHnW9Z++Hzj6njfbDz
y3uc/MzGvirxPoZfK/x1/J2+R4HzngJ3O+PgWCXtvtC7zrgWW2j2F4v9s4Bv
1NdpTc14JdrVcUy8m8BD91WrVtPV26KHuYfqVgnpt9fCR/yWDX9+cJfuzVfe
OWuz8CHfL/KvfDfdI8HznWUcdTyRy6oxtlm9rlrWNfrRcQquY2ovK/DsnHOL
2VfeFB1o0tMu9iWdP411R34z7of4+TNv9TtO/FIMOxj4mZ7f7S8yMtD89zfq
WGn/E9olX7rGZT8JydDNv675LsZvJD157Fw6fx4QdcuyL/Gu0fy13UzrAf3T
L1l3/iMrVDkVIf3S6wt59L4h+cmN+gXg1PvW9PAhv4Ter+Tdbcwr+qX1I/Vz
DXu43ofxX9JxiPrdh1+EtiORh1zHkZH3T8dVQa/jm4hb1HFkxBlJPGbS2W1/
9zHjd/BD03FA+Cvq+DWX4J4Fdz6KtMRtkS8UHPl1HB/+XeCaHj3U3/LdHxeS
TP7QFwgJ6xZQKtrML23IqePC8EvHzqn9/8XeaMS1gU+osMpmm//REqfDP13O
/GvLzqz/zvI/Xmb7wTUh08x9VdaREXdjOfcNXM7ZPc+bOwx4b6lHYJfSKvFh
Ysj/zvNvnCPwJ16SeSj2MSO+Uu9Xul3oictG/lZjri07N9eMu+G/Rsez5Fk7
K/S3w28tcTHQY79Kjw9xr+D6PIqplaHV/FUmPfLzz0XcBzh8xE/JOB81Dj33
CurT6f2KdXf5zeGq+zMGWHDy9DK+4KkTY0e9/cf6bwXO/GHdlcrRPbRfTbP+
NfTUxQDPHn/66p22sZZzBz7iP2nYN2T9GvHamp58wto+Dz0464X9U9u1wLs0
zzTCbeU/ln0D+w+408lmXrYaZl5QvW+nh9MufOjvuMLHH++scsfZ/WGxHNki
oi37vOYDfnN28ual2WIs93Z9vmCPArcvHNCu2T8vRB7+j3R+VPY3XT8d+cG3
ZBjQ8WjYK8HJfw4f2fcMv0H9H6TrpEOPv66eV9BTp2xTwIfJcT/EWe7nn/ZX
Ov6tY5zlvNb0ej7LOjLiCvX8JJ+VxO0a+sfvF5x3FvNBy8/9R7eb5/2rlROz
mv9E3ilDhvTLZ+ZlhV7nfQVPr125Jxj2Ujk3yYeg9lWdd07/I/B/xD+jzrvL
OG5q3eZ0hfWBlvnMvqH/79AD/2v6fqX/K8nTq+/nrBetN9HD165l7m66KP9o
8Jdzx3j3aZx7I7jTwEbuCbnuCR4a+SLjlAVBFnrt7635YD+XexTnphFPKvcB
cOOdIvRGfQetf7t94e5JtukWXL8vwPW7RuL9OX8Nf1rZD9W7cu911/ap18It
+y391fuP2PmNe6PGeefK/2NU4svD1cMs91htN2A/1/Hs+n1KvLnWD+NF/hz0
kJhtY/0qG/wt+yHrFFzv5+w/75tu2REzIdpir2CdSn0otZ94XG/9+eucRyI/
+6fex/Q5qP1wODc1Lu0a/1P4seh7HfLIuBvvbnDydeh1N65KhnM3rt4T+dmf
td2AfMjUG4IP/xTY8fLaezb/uuq9zeFG7MF8roFSJ5T6JtjZoD/1uP353VtN
XOidv88e1/W94Ev7Pl5x9o8vwh88PnfJh/GN49Plf3BJtj8KFv4gdYu0nNre
C06+O/JQaf7gMc4zDlyp/87Gvwn2RvjwLwN+f1Cz1eEVTXzQjbF56mWx0pcN
2vt+ZfbEdPm0abJnVLkRH6SOmG5X6zN5+ZXwlhf+fferOrPllnfpON0nWOip
Ayv1kgz6Cb4XS3asbeJaP1LfSuknIMkrf0oFk89fI9bMPtjRnA/Ye/U8wZ9Q
69+zZ/8v/rOeW9rV9XCpZ6f7y3hp+jc+bwr7nnxn03VdpV+qruuYZtfnOMb+
Bz9SMcPDcyY9/sPUVxU+qu6q1NNRdVcFV/VhBVd1aQVXdWOp66Trxrr5uM9y
rf7WpuvtSt0lo56v1Eemvo+qq6v7BZ5eXWZZR0a/oBdc1aulThx45SNBsY1y
mPQOt52ajHYIFn/Ob+MbXolcHWHW3TPw4XGxKx5nNHH+PTX9md4VnDqP+5ou
n3E/dnhaM0eULbzs2yWzhpv1vj+XS5o2OPdHoQffELvwY5YikYJvajuycb8t
X4UePfMfgd8pfuy6nhF6AKc+HfNH5y9Cz/CXOn3G/ISPrt/HPinyGOMODj3y
gM9dERm+0/GVzE/+GaUekzHfWI/wob/g1Gli/kg9dFWXCnzpq8tvIr5/LPjK
EmW9p1/7bMpp6AE54aPlj6n0w5ZuqfcERx7Pn4dWa9nXS/hIfXnqWxn0RQ4s
aDvpmIkjP3zQA3ExkueQ+pW6X8+qVi3n7meRJ8C3+6fV3i9Fn9DDH39O9oEv
o/sW+dg6Ruzq4A4uhScnTIuxFcjz6Orf34fZluR8XibiqZ1ndHSbbuc2/Ptu
UfXi4aPrxU+tt7/4xnzRwh98R/63dYeX/mjj34R2mf/Qwx9c16+nXV1XXa87
8Mzz9iy7+Crash6X7292ZPb2jzZdtx3+0IPfHtwpObqria9wtXVzr5Q+fYVf
X+5dFWHKM+bj2VmFXqcv5/f3g+836xtlyz7152XxZeMs84H7m5xrfva/Xxn7
TPAeN79W7fOrSY/dSfOh3eTJdeve2GLKr/m7pi246ZD22KbrtkudSlWHvfiw
+EyF7pi494XeT3fVzST7s64Lr88p9v/8Rc94urU193/OC5cirUvfHPDO5u06
cdS6C6GWceddDD5t2fzZoRVjBG9StNaQBXm+WegZrx7H2g75sXCszEM9vuKn
tGG1f+LUNJteR+Aynw17rD4XnHZuOX71YIhl/sOf9dLg3uRqUyaa+Khovyt3
j1rpr198/8lztZ3n2DYXkyoujbXx7wMfcP4XwKVfRl5HfW7q/aH/gRNt2i2I
suiNeav1P39B6IBi6yOl7id1D5+u3NC1x50EC973VO2JhZbFy32M9zL04OTz
gV7irQw+95p2+/5B22Sp+wk+IuPgG39NSRI+c+v8cKrc+d026ME9/x6a4ezr
fbYuwz5VW5styeTzrfuA4DMbBXctXP+0x2pTfnDP/v4l3D6+FDzg+bMNr9t8
MeVPq7A+xMPDBi5xTEa79Ffquqr+kmce/q2Knoy0X55i6s3A7f/K6lwyZ6rZ
38D4801Pu9mg513GO3fI1ynn9th/lvcFeGBgl58PlDNx6kxBr/WAPt3O5HSO
evDcIqf353l5b2++Zxl34je13ojnos4m9ODkjdT6dF3s8rVD7EkTL3I3z+3K
j+W9jPwyvgZefvFD+4vLP5vtxpTqlhhwXOi1f7iuN438jyae8bqy67NZL9uQ
Hz4xdlWfzdllzhPByZNmyA+O/1t68pO3So8j8+37xCfRn25m9JS8AcY/Ozj0
9Ndn+T67Z2Wt9ODQo//1xf744fyiDCa9sb7Ahb+hh54eLUtte2dnoQfnPo9+
4HN5TqdGteyCBIde/B4N/MvIwkmr9tl55n9c4Xbn8EDR28DoPxbvnJZJ6Fu4
xz327H7aVtfzz9Qx8zJ56n+xod+d7JajuYlrfUq+ekN+9CN8DHkiKnWb9Cij
VZ8dhmR6+8PQTJ7Ey8s/izFvqQsgdmwDl3wLBv3SR3V+ONLg33mysfDCHPVM
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
C3mV9bxl3ck8UXV5JP5L1eUB1/V38N/D75d3H3EZ2r/3mG3QgR+yxFr8cjtM
Ttnl2NPEid9HD/DBrwD++OXCh3HBzqbflbrOHe9KxgU+FbZdX9SxlTm++p3I
vAKX+CnD3xucOBcdj0DcFjh2Wh1XJXmlutU6/2mIGZ/V5kS5ZTMWmvOwzcUN
I5cuMecJ8x+/a60Hmf9GXgKNS365JQebd+0TZ9P1rSQeU9V70vNN8icbfq26
Xo/HqWGtk06Y9xnqLMNf11/W55T2B9Z1rOCj615JHKWSX/Y9dR/D/9NSB+1c
kSvlOz+x6fq5nPvogfedvs9I/nbDz1nrh/g14mXYb3V8Ojjvd3D8rqE/uGzS
iSb9X8h+q/MAgHNPxo4Efx13Py/ku5oDB8da+qX/E8EXHew9pbyH+V8pdjnj
P1TkNOy6+n4u8UEGvq54ypZPdqYe4CP3OgMXv52l9f4YO++t8JFz2bAzQE/d
It3u42Wb53t0N3HsjfDR+gQnLwF1ozS99i/ingme8+APwzdlTp/+THLNU155
Amy67pJ+p1B3CT1Pzul7uMPUIMv6ZR/Q61fizY36AtDrceFeBM7/u17X1MsA
l7hy458a/uRn0Pc0iZvA3+PJ9PMJdq8Fp/5aevTY6/T831I02DPUw1/kB8f+
o9ed+7Cymcc7vbSsF+7DEkem3qe6blfikPZ3Xrj6W9YRfGi3Q4J3P9uBaEv8
NfsJ//J6X+IfX9cHz+4zfpb93fc2Xe877+d7Xr8/DjXjYY36FJoP9SloV7+P
zj+4kvVlpQibrlMPH13HPD05p7uudri8PNym64xLu0p+4nB1vTD8UnSdcS0/
7eL3peswuj7a3Gx8cqjlXQMf3h2sI+mXejeR/wSc+a/1QN12cF3fHP83LT95
HoS/8a6EnrgkeRdIfPT//0/JO8vA9x1+fy9obIDger/9teOff4d8Nvcr7mPM
Z6FXdeTRG+9lLQ92GH1+xYSe7jm0g7dFTuqH6nPTvc/xxSt6P7LIj93sfEKN
WS/rBjiT/5x9Xr9PWe9S38S4D4B3sD+8Mr5K+H/uG///jpC6k8Z9g/2NecV9
m/sh9F2mZe2archNm66fyz0cnHqg8AdvtfZ1zT+Lvhf++KnqexHyYycB5x6l
x1HXQ2e/0vXWNb0+FzQf7DzgnBc6T474SxvxXPy76fuqHi/ev+DY66Ann4/F
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
yL70uF+t5/UyfLD8C2CPYl/S9jrJ22DEc+l9jLw30GMHho/8yxt5aNOTf1yX
UxcKXL5r3tvJQ6ves/i1wof3pv7fAdf/I5o//ZL/VsMfUusBXMvPO0LzB9f0
Io/L4QM/7nltOS+oF8Z/sWVcDvUYc88nzHLehdZ+5R/cNlz46zpf+t9Bjy/x
j8jJ/4u2h/A/ou0D9FfbbaDX9greHenKqeqCybw1/M+1PsGh1/KvjEp8ebh6
mOU+wDzR/xHIc6bnd/uLjLTi/FNonH8c0ZtRx0qPi343Yd/Q/78uLS54J3y6
KvT6P1HrWf+/4IdAXlCxS4Ab9yupr2Tcu/BzlnbBe3vneDXgmOVfvp9v2U91
fg+S/Ur/94Hr/xdtr4C/2NmUnNTl4b4kcdPKDwdc3yfJm6H9fMhvKevd8NfV
/PFb0PyRh7ha7Y/k3cR71Gyft+K/pOMm9D0T/TA/dX+h574Kzv+72FWM+aDH
C7uurCPDH0zsaYY/Bu3q+QYe0K7k5e41zpn/m4afm25X6I3/8fTGXfuTYMdD
n3rd7b0Y5Ni26wfLf6XU9Tb+DSWOwKh/reMptB1J4gXeTfdI8Hxn+T8VfyHO
R/XfFDp/1qMbP79Kl566eHaBrc9XC17pXGHGzsozO6ZJ3ki7I9E/7Jm4xbn4
vD7t41rZuYBvKWrL1L9usOTJLFok74xfZ0Q4z22/qcLQ34Kd83xedD1frm/O
+b0f1X2aEuW8ZVf/h8vzhQi929VS6/clRAoO/ZltfY9OyWriHSZVbOc/8Kvw
B3caMqpX2PKvwn9u617rcx4IlDzntU5uyjBm+nvnnB4Rc+3Xm/jwD1Mqbe75
QfBOizJOzxdm0lOPCTm5R/G/I3V5DLsreMiCKh1c36ekS09+Bq2Hpdtvt20e
HS79gg/95Z0FTp5n/EXJXwpOHgPyeeq81uA6L3pkjie+4bNMevyEye9KHnLo
we+3v39/U3kzHzt5UDUf2tX5qJGffNTSXwMnDzb+z/Chv/iFWvpr0COn1gO4
zmP/ef3UX//4MUn4s78x/21V7GqlrIqRdQSOfQP63h9tb9+XtnOROAWD3vvE
mvhFI9PEf9XbdeKodRdCbaw78c836MGnLZs/O7RijPBvUaH6rJVzTHr2E+TR
ecbgQ9wBOPS8a8C1/JK3Lfvfm/c/MtvlX5X1q9sFx/5Pvzp4PPuuYEErPfJg
v+V/Bxx50EPP8TMrP3hm5+JcfNubfZtjZf/sXmn09pJ+Jn3wzZNeHTwibIdb
DJ1b7sO/+lnvuLB4uxihB0cP8AfHPsZ9WOsZ+qJjivYu/tCKQ9//wIk27RZE
iT0f/nqegPMuC1iRnBaRJdB59Z3ElnuWx8t+5VRx/qkeq95a9j27BbFDc5Z9
I/QOOY8eX1P1g+D7T9XvFjnOuk8GeJ+u+9jRxPU4bohd+DFLkUjL/Jy/IHRA
sfWRlvlGf/V6we8XfEL9Sqvze5h60/v2yn88mo8Y+u/+bNCvbvNhbtb/I+y9
g6JqgvXhNaOiYlZMmDFjfDHOmjEjJlREzDknTIgZM2bMmDEjJhR1EVBRUTKi
gCw5w4JIENSPW7/z9LnV56PuX1v11FN9eif0zPT0dDuo1HR/jbre5U19qhz7
X+NWmhdoT/ARrzXX48OqgMq5gtdrBm4Srrfo1YowOc5H+9csaZzMx3evRVX7
kXXxj2I8e6Z/DIhd/0fw+xTIxz21XQ3Nud+9cxT69AtvdNruaxytv7u8hm1q
M0BH6wVwlxMVQruslHGMQ/C7HRu4/tCnHAH9A8x9rnbWBSvkmFV8aPP3a6bo
FzmtY/iRBMX6PvHWkNXrH8TRPoGv78DXVhji3U2XRbjtDsum9+KUfODQE/VW
YJ9R74CvR6ifAtzgak/zhRkFxOf7ioL2CfF5DzIVepqse7H/0fAMsXBP+2qb
XZMV/6vVocBG1U4kyvuijppmh7elEw47xvlozy3meyp6rMgQrpuHLDpSJ4Vw
vw4WO7xOy/hj56Byx4/L33X9Na9yZftE5T7K6K/Tsyy5v4CjHg3aB+sXcL5u
4t0HcF4f5/z8gbvPH5LbH/md+H4D761gZ3gdEOC8/ojFiEmvw3vkEx9yMN95
HRbgurYVEhf9J9cfQb+Dj3c3+F+8Xgby0nMc/BMZZW8PCymm96e8PfFOkI9P
8KEnr1/D/xfGLXBevwZ4/siZXT4Jeb8Eu833M7fXHzz18GVeqfJ5PRHPP1dV
hn/yBa8/8kN/1k/9UFk+6trw/4W8YaXtr9DvqBeD+jKljZNky6meVu6/CHdN
cRlRPDlG2A6KiTAd+Uv0Kw4fklcYR+sX8IU1bFq9/hxLuN3CGV7avrlUp1K7
3t8pqFlZT6Ogjd2z6/0Q6npD8iq1vSJQz5Tj4CPPqupSwXXrW/eJT7i9ZkV+
25vicKHv9s8Vy3ourNBokGG1eKHSTm436MgEDeQAt8+saz9w1EmS45KUtOSt
XhzxQ1Kvmjm4qWT5Eo76gNDT3kt/jdGYS1RPk3DLo4Umo88K8CEH3wUf70m5
/LXja9dYrJO/a3h99CX9/uVIf6PRZlH2Tx6J1pkOmto25Ui+9keDzNl1H4kd
3Tp2/KmR282+/IsabUMfEk7tI7Un5OC7XD71y6cyj7bdvEZyOI5+d+zQInmn
SR6NE/B15UO67ZuVQP/rmEprpAn5p2kw4OuxGQaZxEf9ROAFU6YfiTsp443L
tv/awiqD+OjfyK0vfY2ay/3ey/1P0z0v/2qgJ3DIof7adbaixUhHku98qvbe
4dUjiY/+4jj4lgvHOo7uEk048iv20Fv9ZNreMmrKHyvl8wEOPxjyrnt+2pp6
uG1ZBR845fGT6gUApzyo9hMPv9VZC8hHfn7g3X5199pTXebrrlf1q9TqG81f
10spVv3XJyjmNfZ7RraH195d4KoZeWRfM+/3shybrOHnMm4+JJzy/w//Me/z
6GuEk/5b7PZXaneE9qX8f2E9JVzSH3zKHyvh4CMeG3Kwz6T2lPjAlw/y2maU
HUP5t4Hz72I/TPlJGu6ZkXUnXGEPkUc9zOLkxPwF5RTtAJzy2knt32JD8PVB
C2U5yLMBPvyQhJe7fT25T7lS+3FI97ZV017FCeDVdR59v7eV7TDGM+ZXqymZ
2fXvxxOO+YVzB8a5n5XT3pAl6YSXGzt07uEAWY7x/ImvE34nK+Rbne+ZVP1r
CuHFOUvju+zKIH7TeT03ztL7S/Odfxe49k2YXvCpZOF5pevX+7tkHHJQD5fs
SXL8+9kDEgkvv7nWsheN0uV2nmDaa9dFlWeLNju7nzbTEQ49gZ+o/nNPToKM
T4sNXn/WQubz77psOVI7cpnML1j8fvr1dKV9MzOYeudnZJZCjrnT3+52a2V+
+u8trxc1VuqJOtff6zatarcoi9oN+3as75RfS8rfjv0DcOxDwHfZW3ldfUP5
HTr4eN9H+eEtaz38pK+Ug3qIwJHnkH+X3suvH7rXqGaBAgcf+XC4nnhfj7w9
OK/x/D+YFzxfNPg6sfnmq94JhIO/2PD77sKN8ndPZK3tOGLLL8X/xXoH+SbN
yztcaRyp8A8gXz33ZyJfBO8v7MegD4/3cPvbtVm/ifL/Ao7/hff1iJPh7YP9
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
P+Jg0e/Y76FfkOcQ/QIceR35eCCcjQdT4xrNag8p0ZuNB46j36lOjdTvvB24
/UG7cRzt4Dy+68DfX4ME2t/gkXW58jFBGm5nuD6wSxyH/eFyuH0mO8DsIeYp
t4cUj8TWC9gHvi5APl9HyJ6wdYrqZbP1gvSU7CfGFeynrf3gLh+rBAtuT5BP
ks9TtBu3D2hnbk/IzjM7gPWX221u5xGnx9dfxOnxdRDnSr7eAefrI/x4KofQ
u9fXXqD2wXd5+2AeQX+ad9L5jtsHtd4H08rGwbQuY5zTdyX9gUNP/N+dPSdf
r7YrT4P/i/+FeQE++ovPL7Q/n+/A+XxH//L5zvXk+w3g2G9w/akeAdMfcsIP
uy0w6BIvjO7sFw/dvIXu4Mq4xfVShKtXUTOfN5HCaql3XLOEIjGghc51Zdsi
ob2z+Zz52mhx8NWxswtMi8SNC4ucV3UsEleuDC8KfZEtdN8293hkGSVs1nu3
6Or6Q7i4rzh7wyRS5N54aj7icIHobLfxvuWfImHWf+WhrD86MfH+vPcT22hF
j3H3rnvU1gqvs9nvnXyzhfsXMehy8xI5uzd5RhdHigbbKpY5NTJeJD/o+T5w
e4gwXb+ve9TsbLHWqcerUW7pQtXu06Zr9z+ItVW2X6k/M0s4b1131e5uhmhQ
ZcbCnIQQEb571JzCOSnCoM40hzEmWUJXfeneX1GBwuxW+XgTbZKY2CG+39UD
8WLlhqo7RaVo8dfhYcQXr5/Cp+GmRbd3ZoqABS2ODV3oJQp6zLzqeShDNK7V
bqy1U6qwPzXQ52nzl8JpXzXRZEOSaOy9xbp663jhWrHlhisl7V7Q40VRy73Z
QrvsQ7/yvhnCNa/vnxWpXqLY9/azOSMyxbXHN2s/+ZwinAwr9LjaQKWee8M6
JP/x/+Qxyk+sXitFqE1ahOY0+iFM/fof7/IrWFgt31o+3Cdb6KWYtr1hEiV8
W+rOlSuZJ9bjHZzaG+UImz15bpdzXgtVX9tNqn+XRbqhw7jRB7IF4o0xHsxS
75sm7QwXzuWsgyxePBRG4/M2VK//S6zcsXbR8ytfhfpB/rhpi++K+1Mv3O87
M194fp3RY8K/h+LU+ItfOrT4JWzHGHRWjQ8XkYdCA/0OZYv2du/87PZki4Kp
gT4dE4OFY3e3SYMKM0U38/hthvWzxcouP713PgsVJqmB9ZcWRQvVws2Blftd
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
bfjyk/RrLdZirO+X4qxySnvI/Rf6mXKj/gZzAw9nfDLOjYloJvtZbLRW+unJ
XnxYzVzv1a4WbFO+/Mj6xwyWpsKQ8LBPH9k/a8igPD+QwXJsv7x046g+sv+E
Fqnf14UMllO8feqH771YYnuUnFZOF9l/4Pd7l50f9OBLd2q5aVs6SXvszu7S
FY08fGAE54wen//71TPqfyVrutZ8etiCp31XkllgwGDVqp37M8GBhzWv6e7x
YnVgS7vahRbfGCyJ4l+y+q59WGayuVm2QwfuWXNdqayOwYp30iiQ2sPDcK/T
DG7jp4JrDPI9JB66uyrfu5NsD/ZPTtpRPeFduA0PfXx1u4e8p0x30o7NJYuI
9zhSP5scaee9o7wN3bMq2JZTz2Dlzng4/UtrD3k/GrSHe6l8zfx4BhHNpH1P
5A55qV+92FLBeOfhihZkOf9cudJFMdYGu4Erv7bzcOQC33J1wq+rhg67pLcy
WH81qj7fMuLh7oVJRUHXulBH1J/vy7gMsv/+nWoJOhc7kXGrY6N6CIOVs3XF
gzrPPiz9qVH+084OZCTXbNPzhcGCOn14rlO9J5hzfBmsvMHxnDvmPPJ8SLsf
V/eHsxgsqNOB5314fdy0x/GU3VNjnGTswxa0UD/v2IJ0Bktymf3uzBoeBpwM
7wfax7U+VEy8ScQxjmr2Y3TFWHAfoot6dySLmKewLwSraRo3bG/ByXqO3urE
fIF9oWDUgqj8sGayPewLBsdeBOR4N5Ptwf/DPXEHdq8/ElfNYDmrRoxeYMdD
baffSc8No+zQT2NJ+muTtC6s0V1TmSpisAr9V/Xy2b0k/tRrt6osI9bZdlXZ
7pp3PehEtMu7umWd5P/CPhK4qF2y51wnvneqYJt/INV/ls0bRtPWDny71eD7
+68MFnt9kUMSsb9A/xcV5NIu+zFYSdfe/DIS60Ob8rSbU9Z04JkXrYz79anx
dzwVetpkt5H/C/uRrc/3sL64Fhz1OpFxh1hPsH9B+1XnvxtNSqTsFT0fBv8r
6sHfkkLN1bZ2kt9rvHWjRRGnF+Ov33Oc87uQvyp/tWCYGNeD8nlSxjxUvaDu
wHj3ThzOPvVqXAiDzVf+imTseag4sZQfv7QDw71+d2sXf14k0UfGBdqb/nwe
G8Bgm3QFhVQRuCOncbpSg2UHbnprOhj3herny5gD5x18uvCKUxMLpnEZbPjf
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
qEsHbwjKrg0mcOz288b0HWqJesWO+K9iggtceDUg7+srIwFAdRKyHhfSObE0
XLJfr5KoY58Rd7OWn8WE65surXtazoNSywLsVqfwAMInk/W7kL4KuQ4vlLpS
kq0yAFF9G8XzZLskf7GiI+nVMET253OjzxcXcSrjjKTe/efSIxDp/6D6kkLT
/N2V4ljcPsU3LDbZduSdD/bdPCmWqM/G3geJtziotKRtZIgJEb8S1dOcLV8e
lLg2AhH+Tcz+6AITrwIoZCz+xMuPxiDj31DdCeF/+l7HXDNPJXR7sgdL7jVj
f1+BaOq+qq0DcOWBnzUNdRTGixWpy+v7hiFZz0dk7UZNT3MO3CYi8jP/KVGH
/Do/VUYLi0MtxC1MHgWPwsTW4Gn8zQNQRn9EyfwbhUFfaTM9yIjQfSLz4BAO
TcHFdbWkKJVBrlerNK6ss8S+911iz00yLDjQdF1ypn4kdp0p3DKqY8tIbcl5
V0rwdLbXull4SnKgQGL93X2HemFeyURP6BBRB0hzAlxnzU48jhKO2bFOoYYP
UDzseNBt9eUnXCA2Mcdr1ToCr4v2S+uYu+0/JgAWxq7Lje+1Apbs1sLh+5OA
jAceHFn0ZPV9Ltg2LuNwJJjAFaed8GxQleKCoeBrahoTfPAq+UbWhZcsgPQE
UP0E/S6yDyqZjtlhywldL7KeCfIjZZL7POU5fLjAr3LydykLDsg391yWIfCW
iAeN8uK4r7yNeZcJHvS2kfaejkQuJPOgUd6NcKrW+41S624TfRZ0feMjjWK1
Ds0Q4UglHcfkJ4uJuMv+wtmOBlk+JPPTUZ0B8XTIenEvD2s88EggeOUIvxob
5ug5msiCqF/2O5v5VL2Qj/MgYsyOOEQU/Y8u0JR9y1QyCBIOnoSIN0HmRSK+
BpnPiPNr9K/58RY3Q9Q3xHVgso4rHR5swa+Dro/srdptV0XXp1xo8bdb6Iic
AErZhVorTGuBXyddCysMCN4NqvcOxc6prF7Hh4jnQq57vEu3cKU9mwRMflno
ujuE/gnCgTtl2aje/p+6CsqXyXWYqhyfTee+TYJn9VqH057ywB2F6etFRZmg
OL5a780rHiDXYVCcQNan4pl329x6hZ0Dkj4Vej7kejiq0yJ7i+owb9/sNow1
GsXtLeI7yIV4ajRJjUDNpFmO+sVsiHCSW3o2GUHM3pL11hAPFNlVxINw7XNe
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
dcH+NRbXG6bh/rv+HL4+mlumgcUHN6Lkiy5iz6O4pWTb1kv5UO7pwy/n9+EJ
7w0fekTdosCHrtekdOsj4Tjt7xvSKjxhrH5v4OBOMiR9yMyZZpTChGNJglqW
eMKk3tkTYIIGFTQOVoGbVFhXePzwCiwOYI1UPF2xhg615vuye+JDH1ypwhEE
XHsfeofQIOq/fnpKX4D2HkdA5wHNv0B9TwgXtR3wOt0pyoao76laRqr/y24W
Vy667oP7MhqJe67eH9b+kGvOhqeVlILPGvXB5J7E/QuYDKj97e2+q5h9xYmw
dl2AfdC8U+3RpAcvv8w8c1PT9XovjBPnBNMuMKBwnXPU9kUcSNxlJUZtIsFs
PLUoMZ8BKbdXO+U5cmBJ/A77Bt8+ePgi7nJqDC8fndx0pH6jDYnbj4DuUT9+
zJQ9YkYDqH8B8Q9Lvaebsw1pAOWDDAKn37hL8+qxUd6nub/duHoZr+4a5Ync
z9sqdzXy6rT573Pgzwfx14Hz3+eA1otFf1X4dZoGUf05yr8w579v6dND7kYf
RgDKE93vtNKsG6FBtrHf75PhVIDyQbj5797w35VtGa1UgPJHBfP6gvwyqsMv
CkrVHvoyDvnr+fnvhUD/E+n1TVJEb3gBGaD8Gv+9ECgfh84Jf78Ysj/8/WWR
y2TqCemYP5zPX2hcyF+xxKUXPr6vraqYx4C4/RNJwi4c0PErqXmlax9UFNo/
RrvIgBKnl2h8EMfiiPnzg84zfx8f+j/8fX9IXiBi2f/0BBug80xR8+luUsPi
ncFju6Ul2ECVkvUCRydBu7rukrQyJiRRdlQLreeASblDS+O+tsMjTB0d8TkG
RHkKBeu4tB3xHVBjy/SyLsyutl4fqV5znwNyLdb1D490wlk9JR0nLK4pX7Oj
yCiOA2xetne9KuyCJGoNlZXEgMrFj5cK2XKA9LKT9llruiGaS8vfr23sLO5W
mcXrO0N5/12iLsF4u3aQ3XTwzOY5FiiANd8rh1lgzYuX182K28Gn5t66pRVM
EPbDV1VDmgMmZH4fqaF0gEsM9dBMwAT3BlJoni68e6I0F2t26eCZ4Pz8PVHo
HqqsjKYnA2MMwH8P1Vyh2H6FJAZA91DF6W6fzptmwQQ7ubuNdBZI+V7x4J5N
OxyTVLfY19gNqE9mKjW3Yeeh3SQg4TwL/Ax4K6V8rxuY77it/Qk7J6q29I1L
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
YQFywmtk3f8fTKK+KA==
   "], {{
     {Opacity[0.6], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxMnXmcz9X3xz+zj1kwxmBm7NvYB4MZxjAzhhZrhRIJoVBRWZIkiSJrUvY1
S6WsZQuRnWyVJGQtKVlDpfo9X53T4/v74/U455577rnnnvd933vf972V6db3
/qeDA4HAF5UDgRDoS1mBwCiwqkYg8F3tQGBiVCAwM8r4b1IDgTXwx+CnSub8
e9C3nJdM6aPwadGBQO1okyt/suuIqvy3rrMz1fj68JtcLpnS4jdGmZ545W90
+1nIdqN3Fr5QTCBQOMbkkqm8eNUvvaNuU3a+gf8cfjINPwIfQ8O7g6/lP7I/
XR6H7IzzwfAFQywOisd0j4nisdZ5UcVL+rLXE5yG/5k6L4G9xHRpXiAwkvh+
hbwD+Q+FmL50g51XPXHuj3yJdz4f9Hiw8ZEhlhav/Ejnla82qI3Lo6yd4tXW
5e6b2qQ2K25liFlwjPGlYix9SbGlL/wQFAhchi+CftFg40VnIP/V5VEul2w8
uAKfiqymyyWLDTa5ZLWCrWxksJWXPKQw7S1s+rFu8yL8hoRAYD34EX42dvqA
/JUCgVAQAD8gP0KbpkUZL/q28+egX0aZzSivSzY/xd4TQcbLttI6Rmej7DjJ
H/mS4b4NRHdQkMXkMvSq851woUPA+H/j5HLJOrp8U4jp/QLfC/qoy2Xj0xDj
RaWnulSnYvcz/Gh0TwcZX0kyj+2AIPPpV2+X4ig7qlPHTPoqdybI6n0kYHVL
Llklty97o903+SW9Uzq+xCB/tPG50ZYWL5nSL6bhL32qb5lAYEiaUaUlXwUd
UMr4reUsLX59qqWlPyf5f2VVTukX3Y70hsGfgy4PCwRegF/sx2Uw/EzkRWqY
/i+JxCPReNGQJONFZVdldUxVXrxsKC0708m/N9X4OWXNrnjJVrsPKdjZCP9y
mtGJ4fRdYtQIFAKrOU+eAwOp+wfSORzDn6Cj0N+LfoMIznP4bSgPjTf+pXhL
hxH779D9C7yCvAk2GiUa3xvaC7Qirz1oDR5AvwNoC3aQ/g3sBcXABEB3/ddP
+Tg+3Hz4oZj5IV6+KD0Cvdc1xgtFA4Ex4A3q+pR0JLY3QseQHgtGJ9p5pPNJ
55JiUinJ4iK+e3HO5yQb9zQWam44AR9EnP+JMr6p9xnxkil93M9TzQEfZQYC
j+ViK8Pkk/38Pe71TnM7slEAfMXYWaBpINAD/TPItyD7K9jO30t+fJdh80ls
Po5OUfpUHIgtY/ozo62MxjqNeQVjTC4bM10uWZyPh6KaV9RetVXtlz/yRe18
AF+6UVc36hqKTiIx/rmo9UOdB+qjL8H/ERcITPJ+pb6kYyRefXyP9zHJNrqO
+HPOK1+xPql5ys9N1aV6filq9mX7R9fJ7+es+CKKT5Txkik9Cl9HgszYQGA+
/s0Dc91P2ZCvsi/bao90FoJFiTYOawx+Epz3uSMoxvggn0cOwS+iniXRxq+J
tvQB+GeJ8yHOk/3wLeDfDDZedFKw6aucykjeO9j0xLeG3ue8qPI0h/bFXoEg
4/uEWPqw1gCqE3wJ30hzZZDxotcDxosq7yuX/8e3DzFb4mW7oNuPDjI92S8T
4nXANw62th2Eb458HfLP4DPhG4YYL/1yYJdsEqfYGJMPRncP2AzfDvqEl5Vs
p/P9o01PvGSypXoVy6bBJpftTLcfie1KMaaTHWz+yTf5lRpi/G/B5qv4G8GW
Fq98pXf5sdPxEB+GvVC3qTqzvV61r78fLx1DHSfFp2yI+blPc3ooMQRfaN7U
cQs2/mvoGuc7Blue9G9jr42XVbk4sNflrVw+JNjs7vG1jdY5kqvcS8GmL12l
Uxhzy4GKhUznOnZ+jzZeus97vZLddrnqvO688oe4TdmTjnzeE2x+q731kNcN
MX/GIRsLdrsP0t/t/t9yXvSO21E8vvY4KB57fO2hdYfWRrKp9k3wulRPWe/n
6uOqWzaneHykr/rfch9Uz+g04/+BH+8+RMRYWrz6i9I61jrO6kOST4w2u7Ip
e4q1ePkyzu3LnvQ0f2keawy2IB+O7Eiq8eq/r4Bt6qvYDsTYOaVzK9rPL62F
2/t5p3NR6+Of4OeSPy/Iyv4VbWON5JJpXSj+sSBbG12obWvOGa6velRmO/yj
0C7gc/gHoQ85Xz7G0uLHRlta/GvwE9xn1Vk6xuwkxJgtySUr53LZTvCyst3B
55TkGFtbyzf5NS7IxtKjGtt9LA32tfc5r+s/vozXe87rUp7Kagw+6tc+iTFW
h3hdAyV6XeN8TS797h6ri86r7E/OP+YxVH5357VOTws2vm6wHQOV1dq5p+so
v66vq2VP63XxPd3O1tp2/FekWkwUS8V3q49vyvtU8WFdFB5v/DnO0fh4Gw87
RtuYuBH+02i7ztkEnx96h3o3wF9E/05+k0+Ltjzxyp/mZXUNpfKyH4nts4WM
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
Kq339EUlm5Jq35Z4JdO+BSE61G3pvaXXM+0dqNcy7b2n/95/Uvo915eu6lqY
Ze836T0n5Uv3dk3zeabHsyd0COnUasbr2kjphk1tna/vLiiWapu+t6D2KU9t
7O2x1/v43XLsWwx6z182ZEvXXLquimvq11bIpoO9VSxm8kPfedC1XFZTu76L
yrK4d6nAnC+bGu90PajjCB+UYfSK52lduEH3sLUuRTYdWYz2gZCdVpxJX4Ou
J/03dm5pna6xKcPKXs2x8megh7UeR+cC/Drdr9V7ZJSfp2tK+sAyZDtz7Dza
D11B+lS6XQtlNrXr0Om6B6M+ij+ToSvR+Vj3iHMs7/66RpWWno6Rjk+fCPNF
Pmm9+z18FWy+CX9SxwHdX9KNrlE/rmW2j5P3iVOlz6Ub/cTr1bcw93m/nZ5j
8f0rz6jSirVipTjJpuyrPtXxlfon6R90vZZnetKRTHkfZxkvOkTvNuLvIeSr
soxf5fKPPS3+YI7F5Xy60YPut/q13s1blGq8+rrS+qbFyEz7rsVhjakaR/R+
BnxpjsMc5ojmxKxtrslElf6ojlHJpPOg5z+k7+9l2j8GrkSZzQdyza7+OaC8
gvh6UOts0l9m2Xjws48JSn+IztepZk925Yd0VaYt9g9priO9NNOo0u0yLF/l
VVZ5qlttUf5Sb1cnr/NB91M+ydfXoMeRD0d+TOcI6TWZxouWZK7+Fn4lfIk0
e3/rEx1TvQ8EfyTP3g0Kbmjvet2k7UORL8+099CGwbel3S/Af5dlZfUOlN4J
U5nCTU3+utuVL2u9XtGjef/zYWSu+SGqtN4jk77aIF3Zk90TXo981Ttnsq06
Xs6wd23fV772bXL9Pw0ZFotv6tux0zdy5mbZd3JER+iaqqbRL/KMb9zUvquj
7+u8mml739r3lr7Kj/B+p++nLHCdETmmtx8b87SmqWky5c1Pt/74rsuzm9q7
qRpXp/r5tCzdqOYNjWMHsJMPnRb1bAxWmdvum/ySnyO9r7/r+XrXVXa/pmxA
a5865uO/50i6+aXvHc33PqV+o36p+4v6J0dmtP2XQ+n/7jsqrbzuufYfDv2D
4+ssuyet+9G9va897nFWWrFWnYqNzs1a2Lkb+XuZ9t+MXchrZJg/8z0mo/Dr
IvZj02081rh8D236w2k0+h9iZyP6XZOZB3PNj44ZZq+bH2/JlCf/1BfUJ/Qe
9gKnem/4v7Tede5K/2vNONo8wnjRR0EX+MeoZ3Ky8aJjnBdV3qNp9s+ZuclW
VuVkS3L930Z53dLsPyz6J8tj8BOJ2fBUez7ziL9fKf5n/8ajdDJdX3J9l/uI
85tLsYYvZfymUpaW/jjyx7uO8lc4L3vS66H7AdAPXV/1qw7xFRMCgRTQPs3+
J/JnHH0OPpL1587KxAP+F/pjuN6Dhz9Y2d5pEv9cpL2HJf2PUq2M5MrXu0/i
RaXXzdulWEj+JjqPFrWyqucjb3vlBPNJvPwa53LFQ3ndnJct+fwy/AvVzKbe
C5NdPQd7xb/JLJ2DqabXSs/r0pYBFcymYqbj0V3yRPuuZWf3X+18RPdCFNtq
xpfIZ2nxs/Tdx0jjl6RannjJlO6oZ+0i7V0z8aLTnK8caXnSl+0fqhh/BnoW
dNIxivyffclUXye3/x8vKj218cv81k7py55sqa5JkVafeNWvtNqrb4WqzQ9J
zjFfAB5Ms//AqA908OOyq7LFpH2kxaWz9wGl1c/V99XX1cfUv34pZWV3+TFV
XYqr6pOO8tUXVdef/n+cDt5/VN/DHv/23q7O1UxH/CPVLC1ex1zpB73fym+1
Re14N87stHafJZdsmstlW3k/+7pd3/JV31C/GFrB+pL65iuac7PsWzATS9u3
tSYyNh1KN7m+D6O8tTm236297t3wy7W20rv/2L0Bribat8WWkpfLmPOhU30/
TPZkV9/uEr81x+zfl2bfQ9V3UdvAly/GdRHp++Gr0O5i1Uwunc7FTC5Zu2rG
i0pPtnZoL7SU2ZQ96YsXVfk2zu9Kte+KyRd9Q0y+fKT5BP4NXY+QHuNUaX3f
YYbL9M0GPSOrb0CMzbQ1sNa/KyuYXLKvK9i6WHmaoxf6GKxvTUzSmpEYnill
NlRGz93qedjxmfZMrNbRWk9/l25Ua+rqHJc3yd9O3mCnSh9LN9+3+jGboz3m
LPsGhWzqOxrj/Zjo2OgbEzrur/i5r5jo3yvLPf7Louyff/eqfzKuHA4zfgf0
mPOiytN90wPQH8Pse/D6Xry+CS8dldsFWvs5PsvHJfU7jU2Sf13F8nRP+z2/
r60x7TvojTDzU+OuxjuNz+cq2BgtXuO00neo73egl3dVVnucsqP9zvV+/11y
fev6C7cvqjrUXrVbbW6nuU/jfXXjF/o4L/4kcXqL9ANp9q+Ej0ONF9X/Elr7
GKX2yKb6r2Kqsvsq278nJVdc/+uH6oPq69JRnQtdX7qqr72PG/uQt4WPxZe6
VY0XTXBeNNb9lI+T3Y58/8jHE9nQuNnOxx/5JP/lu9pzhFgNJFb76xsvWp64
P6M1Tp69nzopy+5B6ltBuhe2J8/ur0UwJoaDsGR77k33x57LNKq07q9NyLJ7
l/qWjPZldS/uzSzLl26nJJNLpj3bidBndK1a03jdA1Va9y+fzbJ7qQNI30W6
f6bdixPV/Tjp7c6zsvK5n9uRDdnSN0zkj3wZnWp+Ka37qrKtOgZpHah80qGU
jaJt+UBksn1jRt/x0fc/4pLtHk8Bp0rHg1IgGSSCFE+LL+g6BTw/yeUlQQlQ
PNnuB+p7WLon+Ddx+Qf85feV9Gz0TfAH+FP3udHPQTcb/FTCyr2Oz6NoVyx5
+UEMCALBIJBs5VT+d3AVXNE9MZfdcfkdT8v+85m2/6K9F/HtfV+mF/wuXSvX
tPtm9bPs3pli1jPT4qZ7ceL1nS7RMR7P3plWXmUVZ90PVTndt3s80+5jSqY8
fctLx0r3+57KtHuq47Lse1m6jydb+s5YRlO7F6jvfj2NbLzW7jWt7FN+rFO9
D+q+4TjXk4542VVa97Cv5tl9ebVVbR7o/qs9asMbWXZPUN8qG5hp3yRalmj3
kEc3tPvI9+bYt7r0na7JDU1POuLb5Fi6ldNnve+p302qYf1a/Vvf9irDMagI
Kif/r4zqU/t0/1vfKpMv8kn3KEXl14vaT4av6HmiSv+aZ1Qy6cgX+XQ9z+zJ
rr4hJvqkx0cxVqx1zPR+gO5v3vT+mOD8vkaMXeAX3QdpYvdRjpC+oesZ0ufh
10B3c72Viv9r6thz5794uf1eVs+e3wK3M4zWQPcTPV8NdlGmegPTzcbn+ciK
k07Sfm08/Zxxaw+yko2JJ/kldG9H+8jIrkP76v4l+Et1kv6dOtaRd6eR7aPr
2fFD8B3irQ136d4Htn/XM0rk/8Z4vVfPzCNLUZ3kP1vUnh35Cnkt6gsmjmXx
Y1pje4Zd97TKk14GXaG9XT0bq31p4raO8u8j+wBU1D035EOQv97A3jMII72I
vF+QRWiPqaHd67vk9/v+bmL7wgPRfwEMBic5FpG6J0FeXT27T7lQypXE/zF6
xwGUIn8idBIoXd/eY5jo/E3K9cbmfMochY+DHwJ/W8/Mwi9saM8c3Z1szx2F
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
LcA+4uritrRu5SH5FORS3S5qowywv/YAa1+y+QAw0G3UjHT/aK9iSbRLvue0
Qb7v1XdbavP+bvcrte8ZXKG5EVwGFoC16Hi9OPYk5yGXWxLfT11K3DztpfSe
bu3tXoB7C+7N4LasOFtFZ6xsKI5nU3p+pfBP8H8LNhaHrNJcb33SOycr8lTe
TxbH3mftgb7b+4K1P1h7y/Xtg77lebk4ns/o2YvseT4r/nH8eFbs5XzYMmqL
ZFAffIZ/PWhCWSbgHw/Ggi6ga1ZcF1Q3A1w/AzxOxMeQz+F6zoPMMV7nT/VY
6evxku42SgOZWeEXT/E4kg1tQGfQyn1BfaKtbRlne/ZRp1m4ezw+PmsYY0Rj
6ymPryz3DcnouyftP9f3TdrfNd5jfKzva4aDA7z3Rv/Xvoq541JwJTirPPb5
aL9PXeaQRD37T49na+WeZ76jPb8F36TFWRE6M+Jrh33v8Jae9zXnH45/MHg5
Lc6Z0HkTbZzuVqfNQS4XNC6P9cPhvtbrmx69n9C7iSTcTJBt2TzL67rQz+uH
fcjVIywR3Fsa62atmXsQ11/XAdAVdAOjQGfQG3QCX2DH5+BT8HFa+MXboast
qAT1QSOQVB6yn1hmI/gMrLcOpf0QfADeA+9a5ivwpWU3muuaUOa6zff1pRnY
YHnpVP6yo5PjKywjt9Bc/+fUfzp/QP4I8CMYkhb/29R/Nz+yvZ/btq9sw3rz
DbanCF0FoHl5XNt1jW+itRZxx6ut8O8oj3cxdVhz/lUefvG89OgDuVqHVsSz
4mGW3WsZhSlOz40vT4uDzi7DbV4Rz2qbeT1b12vaUV4//Ltucft1SY/nz9Iz
zPqSrfMmdG1hjn8ed5LWmuWxL+0g3ANBakWE9XF4BbrKQUl69MM3fM+SR1wO
aFQR/fQ299WjkJvo9Yb4ZHCcr/O63uvdgcaTxtUl5bEXbSnoDG4oj+eKeq4+
Grmx7ocnek2iNcDLxGWT54sqt/OqTY9nk2+Vx/NJ7bWbZPv1T0X9W7FhRbiz
zXV/OcD3mOXuY3qeMLY86kL1IJuneX2ichzpssj2q23/Jx4P6uf6h63+qfpT
Wrw/eTU93qFojX+q113ngHO1fgEPIPsHeAmZ79Q3wA/grfR4v/iGw78GX4EN
GofgS7UFeWSBfenxPHae622+5yvZ9i5xrZB5Jz2exW0CDdUfVDcg2eumXl47
PYXc0+CZ9Hgf+5ZtqNaazGP8Wn1nD44gPBP/rtJ4f3pQWtgke/ZQpr/AP/Cd
6bGu1ZpWNsrWG93ON5gvBkvAdXavMdcZbD+mxzlsKve3Lvs1lrtCbZYW+f3j
evrOdTjP+lUnsqVRWsho7GoMz3Abqi2vdJ3NN5fNrZFPTgsd82xnPfpKEqgL
Njo/5aU23+R2/942/Nde34DPweKyuKfV/ewX4DvwmZ6Hke4X0t2J+xvuNtwv
wa/uT9Kp5wZ1y/1cKy3y0n97f7Dc985fXPJp5LcE9yqwuyz2qGqv6tS0OE8j
hfg/cHeC39OiP9T3vJ0KUtw39pbFNUPXiwzSNASpYC/XyJ9AnfLIJ83h37iN
VN4awqvBZpdJZfsd95P0eEer97AvgPqE13P7bnBa1etG1+G37vMK/9Rp9c5U
9fGJn6WoX3/uvq0y7XC5dE880tdK5fuZ025Li/JLRmcBbk+L87jUDmqPb8BG
26y2OD897kHOtI5PbP/H5tK5rySuwbr+av/qQWAQ+KUba8yerP3S45/e+h+k
/hmU05XrM3i8mnLWsD7V2rwkuNwztT8LfnMzxmSz4HKfbBYyit/fMmsJu9Yy
ipf/hh60eW8uH+SxsSb2gX5ZElzu07pvhw9HdlKz4HKnmMtV3Hb4c9j4LPgJ
/gTuxPzQIx3Sq/BxhI3ND654+esXUScgBaRhRypYZjuvlo3gC/jHrDM/Al/C
08tiv4XCPy+OOIXrGajixBWvdY9kiktCTuH6vjm7NLjc810/qhvltwH+m75n
Kg7+XAv6AjwT+xrqWX5RpFU6fa8uLvdac7myQ/nK3vKS0PMm/WRVdXDpUx6S
UbzsUx0uaxL1+EIvbO/D9aZrhKteb1c/UZtiz6/Ngv/rgp/hzyCTyD3Y76pz
ZE9oEnya905LXrJKvxNeBC8EObXYRH/7Mi/CCwhrCyr17QRoVRT6pbsuGI1/
LBjhcIXVaR58Oe15m84f6Mz6BdvnwLORawGKLK942SqudMvdH9TH1W9kw/PV
YZ+4bJRNf8AHuB+qTlQft4Ftavf6UW/iNzUJ/zb3yWWWkbuySejp3yx0SY90
/Cej+JssM7ZZyP3hPj8R/Ok+P9i2tWsWtoqrztpZXrJKr/6gPqg+96fHkdL/
BT8Y9yDz45qFXzJDcIeZD/P42lmIHGhMHX5D+I2E3Qk2wU+n/k4BybTjS9hS
1pQxBG+THd/MiS/U92aEp9XGmcqL60a4wqpACrwM2daW1zkwLzYM3r7p/4cr
TLpSHF7mcOWj+/0M+MuaB1KDP4U7pmlwuYqTDX81CTvE/4DvbBI6lU972y+u
MkhG8UqjcOXzgm2T7ZLPdL6vVEd/XpcXfVr8etzrzOXeYa7+fr25wpQmi/r9
k3rOx80mfGzTsLsRfBlluSw1whWmsrUvinGiMVILOoEOoA24gL59fvOwTXa9
UB1cdfOyua598kv/JHTeYa58Xq0OPrFpxIkrfpllFK+4LfSBz6ib45uETuUj
varzJ5B9EmxGZgl95Kj84Efnh19cYfL/qLkFdzb4AT4T9zzwNHPR31wjshnP
3xJ+D/3usWbBNU/fZn5Ts/DPYuw36hrzvPRckR+61FdPzo95X3ktzo/8xC/B
vdxc7mJz2XKJ02puON1cOuQXV9+XXtnwLPm/aHtubxa2istG+dOpk0O4x++b
FVxuj6YxdvY0ifGj/vZPk+iX4hor8kt+P2S7Z0Xdql7VBxQuHYoTV7zy2EW+
a3K5zuYGL24WftXJWdh7NmhGPykoiv4mO1WvKkOG+4naT/KSVT1+b77YfLHD
NYdoLtE88r3rXHJb4eux/XPwLO2YyjWlBW3zHDzlkISElvCBtfGuRu/wB6j/
5MT7d/HRhH1qvtnvjcQVJv/B8JX6zqVZhCv+BctIR//c0H+odOeGvGTPBQfA
T07iPjIpuNwBoHdt/Ct2hsMVdrLD9f9YxR2oMYjbKy90PtY07FC4/mU8xjK9
/G9j2fOvLbanb27YJK79BingEPiD6HioafAXcdfqWyX4hfq2xvy8puHvp3DK
MbNZyD/TNNL39reHU8FRYAroDHr628SuRSH/BLLPOS+5Si971A59bZvsyjCX
q3dr+8NnUg/TkyJc9aoy1NKWnXXNdVuorKNdLpVJ5VFdqe4lo7KoTCpPr9r4
j5T+IbW/6/xM0BI+nPobClqofdH3VW5w/bf6B3N9b3qRZeRudrhkFdcB/jpj
67mk4M/iTitg/e/wh5zXsLz4x1mR+hhz/xH020L4pXlhh8IV1rtJ8GG4h5or
bJj59uxIL654+aWnsEnoKnS55D+oNv5hnpAXvCv9tnNOcO0XUZz4BOwaDvrA
pyaFXB/LD3P/VJ+91XU43f1WdT6b+n6kaYSf7H4ufkZStOV+vnb0LQp5tc/F
zYIrnfq3bBjmfNVeOgdTbaZw2X60dardzrCdkp9qGe17UXnEVb79XEaVaZhl
pEPlbAjvxjVkXXXk1d/jVO11Z1K0Y1ePL4018Z4ej109NuW/siPXMrCfvz9W
vL5B7lYb/0PUfxHF9b/07eYKk787fFFe/COwi8e10veAj/J/lcVr/W/lnvBT
nW8vzycHJwWX2zcpZMbmxf/PlVb/QB/ltAo71Vz2j7UNp+XFf9LFr8gLm8QV
Jr/m2PfoR9+Apoy//K4x3+bSlv1ADpgAxoOJRbEmf7dJrNGV9kXcl8Fw7Qdj
7TEUtwQdxV1j3S8Zxa/3el5r+XedVvmc2CTs+To3bBXXvxXlF1f9yd/TbaSy
5cLX4D6YF/cjui/RfY7CV+o/1davMr1o/nGTKKfqU+evqv+pDvtrDnZ9LsmL
OlV7Xei5dz/NA9w3lyUF17+wRzhc7hDzGv8nW1z/kleazrXxj0T9K1F8FfXz
RGHwpwlba5367/wcp1U+B+WFzPKkSK9whR1iGbnjLXNfUsipXOojsy0vuwZb
Rvmvcr7KX3nXqp71PKBe8CzCGjhcruJUD/r2/nzXycy8qBdxhc10vR3s+U1c
dqlOO7reNtSL8Pl5Ub89PB/Ot4zKK7lOnk+WJQWf6XlAY1bz6ypzuXeaaxxr
/u3h+VB6Zf+WelEelVd1fJ/LpbJucV7LPHfJhg1u3yx4BXNVadPgWscuSg0u
9/tEbIG/T56XNQ5eVcF9E7hferIiTuHziJ9vGcnOM1eY0qxSnVfEc15xuXru
Ky73I90za05A500ZwbWnVXtbL4fnNIwzWxapHnAfc/h1mREnvjQz/OKSbdEw
9EiH9Crty5mRXjKKV5qHNW/o38BgNfyD6rBH/CVs+xC+En498TeAB+G34C4D
H7I2G846bXTXCL+WsJstI1dySqt0dzpc6W4Ex9A3jwZTwVFgMphUGPcouldp
VxRp70D2zMZh54rqsEdc9q4wV5jKoDKqblRO1b/aSm00FvvGdI02eKAH/Rab
hx4S+mXXHbZT+aic07Bjir5RA5fVxpmSOk9SXPurtc96vtviZfPZxE9vGFzu
cw4/Az7N4ZKV/xJ4WsM4p3FhbezL1pmL4nd5n7by0pk+pU4rHcpjXm2cBalz
IC+tjXPvZlmn9J1tmbq49czlppgf2TDiJC9Z2TFX17hGcQaMZKRbclfCV9N3
7s8KrnPQVpvrPDT5r6iNvdwXZAaX+05W2C/bm7veshpGPYqrLrVXenFtnLWV
4vIq7B7ze7yXXTKKTzWXexK4Cv4Xae+0PWuz4kwdcZ1TtdZcYbJVOmVLlsul
MklONsveGdb/ZlbYJP27MiIPhStPxanOVd/HNowxovGrcSKucSP/HZq3Sds7
I7j2YB7ica3xvcjh5+Keba5vtc41V7o+2rdZG3vyR2UGl9vTfDbx8ywvHWdZ
XvG9tC9f7Vgd89S/XPsutI/d/Lus4HKvNS/KDBnpPOu/vaPwzoQt6Bhcujvb
Bu2DnG2Zud4XKS679B3BffArM+NsoBWaT+hjMxvH/Klx+d9cup78P84K/mlW
2Cx5yT7fKLhcpZeMZCW3HJ6kceO85C4w13c2+t5GZX8/K8osrvKpXmTnWH/z
oLKXZUb57/5vbrd+6aybGVxukvVLd5Z5lmVWey7SHHrXf3m5bvfh/q1+Cd+b
GWfQPumx/La5zneVX1xh8j8Oz6QeGjWOtH9nRvpHPG+/TX9ryDxVC8aCR2vj
mwqFPwH/KjPGtnhhw/A/4fEuv/Q3bBx5iOvfLXsbBdc/XPaYJzQOv7hskV/z
9nHg2MIIV7oHGoUNyl/2yc4TGv8/13tN+e/U/KDvMlxXqpvdWRGu9lHdiSte
frV724roKxpHGkO6RkqmODN03ek6l1/y6l9K86jrSm1TD1v3A3VdVwrT+JVt
et96ku2U/fLLNo0PtZ/k9a2K6ldc6eSf7GuY6mEC15nxXaMu1qhcuHUbxz2j
7k1136g5RPPHVM//FQ3j7Lb68E6sR2rIKwnejHmrSXaEb/dzHnHF92waMo2J
z7FMy6aRvgH8xep4RqRwPS9q6XDx3dYjfXvNpU95/F0T77j0XG4P/ETCT2oa
XG5T8yl6FgvqqD9kxbwjPdKnPOpqvGBXnezgcnOzwwblf0Xd4LJR8uIKk931
amMfp/Zwip+Fe4q59radZX5iVvjFj8sKv+pE9aG60zMHPYfQMyPJSMdplpdu
pUmsjbMNdcah7NR5i3Vts85dlF8687KjrsXVJvKrrjb5naD0JGWHLqWdDD8y
O8KlO8k6VQeTzRWvPA6tjWcpslN1qzqe4npWHZ/oNaqeo2qdmuy2Vr2J6zl6
i6bx7E7P8PT87h+3XSp4iXVaIWue1vTLfXpvQp5HZwXXfkHtFZS8ZBuBCuRa
dY2y6Rmynh2+lBr32rrP1jNhcT1b1r23uMLG2E7ZI1vFtb6WX3qk4xWvsbW+
rnC4wsb62abKobLJnkYu+154Mz3HahrPIPUssgnYbRnZLZ6EW9+8vsuygzH5
K9hTGO+IKr223O3ypul5E/XThPop7xp5/dwk8hNXnvIn1EadFbjeiv6HH5MV
9SguGfnVNzSG9Ixb4apjpdF40XW8kXlPX9+lv5vbRVy65df8oLlBa0H1k4/9
/HMpvD39pxLcAH8G2Rezgp+UHWcLir+UFX5xxct/I7y5x4jCJav0N8EHZ8eZ
hDd6/umXHeEn4k50uMKU/mb4pV7b3AY/KDO+dxXX9xNzzOf4WwnxWf52Qrxr
ZqSRnkO83hCXe6llumWG3E3Ot7/taf4/tsnek8GC2lgjT/O8qnX6vV5XX+Z1
grjCLjPX9fwur6U1H09xWq3HK8wX+rovGZ0dqjW31oe7M2KNqHCdJ6q4JZpn
kP3J9Sm7TrSdE11vKtet/sZEenZmhS7pUf6TrF9rW8WpXNO85lzga4fKqT7Q
Njv6gXTe8t+3OpozseEo3RPC70LH61nBWyE7LTu43OnZoacQt8BcbgvL6Pxa
nWN7ja5T6CvPDBnFK+7q2tB9l/VLtshpO+C2s07109bmU7Ijv+tr45xdrbcV
XpEdceJ6X1dhPbLxP/3St7BjcOXbwTYo/pqs4Ne4vGoLtcO0zBg7ml81fm6t
jbWDvgkQ13ekC80VJr/q8PzMqEfZKRsnOFz1er7DFfazbVO5W7mudmXFuaDi
WtfsMlf9aa0prvjttlM2qt+oHe/w91aqB9WZ6uJa9/9m1q90ao9rPU5zLJPj
caF1qdbCWn9r7aHzIctBCfw21QFI7MBYZH66uDr4HOa6efA68AWpEZ5g/mvT
4Fub/r+8ZOda5jfNtZZRvNKIK53i6sOrKqm3yuA6Z0r++bo29eZa3SV0Kq3y
SLK85JIsrzOpFiJfgfwRXUKP9J1unRdb/ukC1qPgTbBPzzKSExIeTo5yzcE/
PzXyUj4qcyb8UoVXB1+Ae7f25pH+YnBWQexf0/6x5wpCRt9QXGp5ycqf0SG+
r1iqvUXwvdKRHvmqXHMsr3yURwPX+eymISO7VG91XW//cf0/caG5wi41V9j2
pqFHbTHHXPpOaRoyipeufs2ZO8F9BXHOx5sui+q2vdtiGf5Pwe0Fwe8A68Fv
oA7Xz324jchnBjgH/O44hV+A/2xwFvjc8p/h9mP9PbM6vvE/HfdUcGF1nAOp
cx3PrI6zM3/Lj/MzH2yfkDCSsAfax3mGP4FNYChhg8E4u0PMJ1exjgJjnb/s
SAdHgdmEzwKD4IdpfVIdtsimF1sF7+LzB7rYToVnWpf0NKyOMqu8Opeyq21W
fKbL+3t1nCfcBRTr/DjwfUGEK2x6anC5ktvpc+d2F0SdnAFOqo6wvxyucx5P
BFPBueBkpQfNQR7IrY4+pv61Lj1kj7f8X9av8+1U9tHgUHCE+Ri7g8yz0VOA
Xfnag9kh9gpqj6W49lvKv1f2MIZOTQ5+X4PwiytsdnXwScwxk5sEl7sE/KN8
kJ+ZHFzuaqed7TR/414EavQOGrdjfXj94N1w+4Md8J98BsR2eN06rOXrRLjC
Hnb4K2mx/1xce7Hllx7pmFUd4Ql1Ir34B96z/Y/nCtmqeeMW6uDQ5ODaJyr/
HvgNjZhncoPLXtkt+zuTrkeDCL8cmaWNIlxhkpENs1w2hX/HuOzYILj0yL9b
/bpB2LDb9owzV9hq2yO7jredcseZj7OMyqW6qV8n6lntoDaTDarXWtug/Dvb
ZpWpxuWSvVdi/yjc/RlDPatCp+pV/zHbBh+GO1z7LzvEmYFnVwYv81yt+XCp
58nX6IuvgnUFMY++7fknGZmbW8c5f7pe6BqiefmkHuhknh/ZJcql+XtpcshL
9tbWkZfyUd7qq+94f7DGhcbEXs/Jyv+/+Vmu5mjNk6f4eied0nezdaoc5S6L
XJVH5dX4OEzjF/4J80TXiuDVuBeUM96qYxypTsS1H19+9U/1zZ/cP/X/twT3
PdWl/H+qfyTRJ+tHXvqOYpjrebjH5l/w/Uj6bp3gco83l6s41ZXqSf1VtnWo
CPvEZaPslk6V43DbOdzfDsiG3Ulhx/koG0Ddj6yIPqP+onEoGdkoudGeUzS3
aD7WvHy43aHmd/haomtKEtefndybrobfAG4CD4AW7bj/AmXgFvwXgZmgXvNI
I/kBxPUDfe32N5d7qLn6lK5t6lc98bcGFeAgcDA4EMwibgaYDT7T2ayEfYL7
qfk3ei5E3BPgEeupBTXtIl5pvrGs0iitzlvVOaOTCHsR9wUwBj6wfpyLqjNR
ZeMA23mo7R4CBoNCyYJhYCg4wvbK7sMdL7kCl6mn7RnpNEdY96HWKfki6+zv
+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
AFfJfrBI9dc+/kWmf5LpffLv+fFOWXU73+P3IOJvxMYb2oXuv61fstssf4vn
dM3nA/SMG/QtiPlA80LXqrg30T8g9f9H5b/QNkj2YMvvD3qBnqA3OBAcUhBt
0cRl7235Awpiz4b2EWu/0T16/pAZe0LuhZ+GOx3cVxP/1KkqDC63hcYWfHlb
7hnaBh/cNvziCpP/nprY+9oZ3A0/B/dsc+2Hlf8u+DxkR1hesl0Lgx+IO8vy
muOSHa74Ax3ewHtrxRUv/4PwjzTuLS8d+1nmbM+V4nKl96GauEfXvfGdNfE+
XX1F/APcjwvCTv1X8ai2UQ+6D652nag+zmgXXK7+RbcSXkz4ay6j/seo9A/A
vyVsY2Fw3Yt/63zVR5s7L/2vUWnE9d9G+SWjeNm0rCbs+sRcbrltlu355pL5
3jpVx8OtR2FFDleZ1AaqB9XBTNfJTD+7WAtvy1xSBp6Gj8Edp/981sT3mX0d
Ps7ngIhX+FyLZ9R/cKscrjMyxji8nu+rxeVWm+s8kXqWL/KZGtPgS/Usm7nx
Efhu5rC/sW11Tdyf695cXOcUJJsrTP6H4b3dr6RT+mTH4/BG/g5RXGdx6EyO
Z2tiDt1bGPaUFoVN4i2Lwv8kvNzleso6ixyuuip3eAvb/5TL0sL1dpS/fVbd
lll+rXW2tYzi9zNXHeea5+Gmu36Ki6KuZVuV9TxjPbJVfewdynG+y672KbGd
Vc5L4Qortn7lk2eufI6ynncLQ5f4+4XhVz9XH38JvAd/iznpzfzgcr81l7tR
ayR4JXN8eknwitLwS2YTc+2nyHxWE+dHPw8+hk8oif+BK/xxn+cs+X9ltcaC
b8bdpLkXvj/6/ioOGa0HZdMN2Peo7qUKQ/7H5pFGXP9X/r55yH/mNWT9rlw7
ukYekpFuyX1aE+cGdSkJ3sVnj4rL1Vmksln26t/l4nIzzeXmmb9dEufsi+sf
c/rX3Hr1GewfUBrhip9gGcW/7bwG+byjz2vi3NMTzeW2dV2pnh4sC/68z8NW
2iE++0h1pXraXRzhsn2Q9UhHG+uRDrWHwhXW2jJy9T9fja9uhTHGPhTXv3hK
g+9C9x6wQnMsc8wRuk54LvqPyx3meTWrXcyt4vqvZ0PPq5pT5V9uPSMsr3il
kf7Bvh6pf2p+fd/9c3RhzMXiE3BHuQ+/WRjzr8IVNtrXDqX7yLyf9UheY+hN
y79QGLrE1fflv78mniPq/cAKl+vwthGuMD1rVJ2rvtVHP4AnlMSZz6qr3qVR
d+Kqs3oOl9vb8u/ofVdxhEuP6lfjSOOpwjKKf6k4uM6UVhpxhSk/2Xaq61xc
dXaq7ZSNKoP0qw13u+0O9zVdc6PmRa0vxeVqrpR+lUP5PVcT+27qtIi5+un8
mK/VTzQHq6+sgo/HfRu0hU+vpB9XBpf7SJvgD+OuMVeY/JXwochMtbziHwOX
9+B635u5jXu/p8DToKacforM9bgXgod1zVC7FYaeJ0h3AnoeQnYNWF0e9w26
f7jbMoo/pjK48jzCfHxlpJcNyv852zasMuwTVzr5W8GvLY//B4ufjnuGuVzF
5aifpyYkzEgNnpzCvU9K8JmE7WoQXGGSa6F5r038LywbPiCZMZIcMtuR3WZ5
6Ztp+c/LI434hvLwq350PmG1+cXl/19v7cuj7mSnbL8cFMMf4FpcXsF8oDmB
sNry+Ba8MXioMNJKX3vrkb4O5mqHWS5vRkqUUzpbo69EqInvbd9EJgHeCdtH
6DsOzQ+U744GwX9uEH7x/RuEvxS+TPuAqiOt0nUBZfDb1bblweXeVx71oH+u
bXBeklV+deCF2FUA/ulA3RLWPzW43K+Sg/chvi3YBx+COy41eK3yTAk9ffTO
tDrCpbvW+qW7OCVslm2yW/y28vDLTtn4NGhZE98fP2eb1eYbHf4C7utul9IK
16PlVY+SUfz91REuHYqTfEZFtKVkFL/CXDIvWKfaWXovY3zdwvh6tEvY9rRt
LnOd3255taH0LkD+ZuRXd4lyaWypbPf1ou4OZix2CXvUzu+VB5ervHW903VS
10X1E/Vl9ZVcj4Xd+JvBvyLsx5Tg36aEX2vFFqwTi1sG15qxhbnCrsfW5jXx
rV8Fdj4G78tclVYUPLUozrITV5j8km9VEWmU19/kswc0hefrPbb5tpTwiytM
/ibwj7D3Gdspe/9JCZ3KX3rz4Sm4h5SHjHSrPI/WxH285lmtUbU+1Zr1Uc+9
2wtjjtVaWPOs5tXDfS0W7/0/8+0I3DHmcscVhp7fdS/TIsIVNt4ySjfCMoqX
HWs0RuAtWgSXW9wi6kp1NsH1dkhR1KnSykbloXKp3K+mhIxkJ3rtrTX4kU6r
sEOcl3QrP8kc6fWz+oDaf5f7gPSpPVSHqr+pmovgDRijickxN6Ymx/worjlS
fsm8lBJyjTUPw89LiXCl69IgwhV2ekrwi1PjX53ic1LDL3nJdrW8ZBWndt8E
/wvkwd9wX81z+BvmCtvkvq0yzbRO6XvJ87/C//F8Lne78/qndULCmbZNdu1t
HVyu4orgB1Af48CljMcbGI8PMu5SmafTwFOFITO+POTE9Z8G+VWfqkv1ywJ4
//L4d4Nk9B+HwebSLX+hw/cvD3m53cujHj5tEGNAXPXxqe2X7Wd4jDzjOmni
ulKdSOfh/6N/f9sg/dLd1fxw5/tJTaxptb7SWrq0NNbTCq/wfce1GhfMK52a
B39az3fM5ZaD66ir36irfdTVk8xX9Q6hPuHXawyytskoiP8L1xTGP4YHdaYP
En8iadci/ztp63YNeT2/VJob4G1wp4OlNfH+rtr5VjUPm65T2zGO/8kPLndt
YXC59xeGnkMLQpe49MmvvDL8vPRq9Qf0zbN+lUl5KFxhp4LbamKftPbEimu/
tPy318SzhE/Mv7HNt9bEHtrrHF7hZw531MT5PDqnR3wu/LLCkJGNFZafbpvF
pVt6r4FfpGeBzYPL3d82q33UNlfBH9G+XMsoXmlurIm1udb6KpfKNNfhG72G
F//Ia3jZJhuHFUX9d2gebaC6Vb0+Dk6vif9H6T+3p6k/lMV/aBWu/0sp7gz4
6JbxH1xx/WP3yJYho3RdyiJc8XXM5SZbz17/q0r69W/bzg5vglug/ybBJ+NO
AtNr4j8xvVoGl/sgOFl1S3yl0yrPbuaLOoYucelTfuKK7+58VaYq8yLcwrLQ
KX36t6/C9e/TrpaR28pcOhR3Mfw6Pb8Ec+AbSPe506pM0qt6Vh9XXav+tb+i
fUHINCe+GTi1Jva09nda2aK4U1zGc1oG13+L21h+qvfBqu3Ubhozsl+2T3D9
HNUy5MUVJr/SKp+p1ind7Vzn48riH6uyU32kh/t254Lo01fCz9a/TZoHn4q7
0Hyhx9oVHnenmss9TXLwC9F5V1HIS/Zsyyj+DOuRbum9jvyWgsVgHuHP0YYv
lAZ/kLI+A78E3oy+UVgc4Qp7zuEKS3T4yvxIo/c46eBG63xS67384HIll1UQ
+yGV72LCl2k+8xjU+HuqOspyH+W4FlwGn487y3w27qXg8sKYEzQP7GRe/KNL
yCmt0l1o+em4J4FF8HNxL3D4OUUhL35vUciJS7f8sk12yR7xu5uHrYttp/xz
4T/Tvt+0jHDJKm4GNp0HLiyM+l/geUP6VY7ZtvO0oiin+sBlLo/6ufr4qe7z
p+Eelx9zo+ZRzY+31MT7zas9Z96Le4/52wUxz4or7G3LS3aJudyvLPOq52fV
/8rmMQ/erHYnrED5wcuax37b22zDf/o1T99rmfzmIae0Sqc9T+It/VxCMtKR
b5mvCiMPccXLf5Xr8K76UXaVW2N+PjxV/2ApjneIjUEpmA4uBicWRp/M1X9U
ioPLbeb+qX6tvnip5grC2hRH233ZMtpPXG0o/6/0o22gY3HkKzfZPL847BCX
LZ3M5f4nn4LbvDjsVxuq/VQulUn1K9taEV9pO+XmOq3SKY9WlKdM97iFcU+n
+zzd+2kOmVAW84j4iLL4R/Zb8DydTd02+FbcvwuCK0z+N+A76GsPEv46/C3c
PUUhs7cg9lq/Bj8GPT3Aq5rPcbuad/E6XPK7CiKNdErfk+BN+C/oS2kRXG49
88ktIk782aLwK63S7bANOS2iDOKNW4Rf8tKhNK/atm62R7ZMN5erOI0jzf0d
wLmac3CXF8SZcTo77jT4Rtr2K3BNYVw3dV2d1DLSKp3m4rM1LpphZ/M4iyYL
ZBbGe5Byv69RHa5VHZjLfct12M32iPf4H5u7+l5DZVR9q5xKq3b4rSi46uNJ
65S71nxbUcSJS1b+8+CPVsf7+nXwE9HXuUXwDrgFzkt9QW32EnwR7uXmC9rG
XolX1D/1Psdc7lWW0VyxyOGv4O4uCi5XaZRXd/eZl90fVhUEl/3ya52s582l
XicfUBprZXGtow8w19o5rSS4XK2zpWeV+5ie++mZn76peltzCO3zicuusnZ3
2Y9uEXWxzvUv/4vwKynvQtK+AF+Me2FBhCtsvsP1rdbeouByd5r/oeuqZZTu
InOFSdfzNfGN1Yu281avdcVl762uzy89D4urHdQGqk/V9yuuT7VhB9ssu2S3
9P9ZFHkoX9klm6Rf+ayzDcpfcpoftNbQHKF+soZ+8lh1nBekPRidCmN9pbWV
rs0nwIchex9tcSL8ftwHzO8oDb9k6peEnMaOxs2glhGerf8rlES4wkY7XGFK
cyb8MMIGgpnwdbi/af1UGPOd5roZmt+wZXp+yGwj/m3wGPc7G7jf+aVL3A+1
8z2RZBT/snVKn9Jk7se8juwbLcP+Udh7RFlwlWmUucJUtmPV53HvNh9OeI+y
4Aobbq6wnp57Ne9OdvgtpZFe4VpTa44+XvWAO8Yyt5WGnLh0yC+Zw8pC7iR4
H9zHSmMdrjW41uUKX6H/t5RF/WhtoLZUuGTXlAZXfB/rUdgK61f+ykNtobZV
O6k/jMoPPdKp65T0znC42uAs+Mv0u9eaBX8dd2OzmBt/pO5Tmke45tGfKiM8
ufn/NXXmcT5W7/8fsu8zlhmDmcGYMWPeM2OdsTdCRUVUWklFSquKkj2lEvVB
ChVCEa1akbSXiFIJSYsoJUp9WrT8Xs9eV7/v54/rca5znetc5zrXuc51n/u+
z31ux03GmnHum2Ue6vVONw/1qkRdaHObmB/eptnGSbOyfWYhZxde2cQ6E+fQ
DxxfJvYhkzh9V8jf18T6IQcZ+Fw7zYlbRCts7Hbp08boF+3Th3ExR7DDuLAz
Z54zR65o6vsQcOYKawlw0itVNiV8tZzwSRGT3wt+yqmPbfFrbI18ZHOOOnWp
hx9Pij4+E/R3w58nCy/Pu5jAN0dbyEHGv+NIin3g+SvLfMjcFnu6oCPjr5CD
jPKhM/rCx3rj9HhGDX5OPBvnWTTPpHkefQV7ZZO1hhaMFr6mpuZGBdOnijYx
2Tjl5K9k/7DSUUGn/IGgj1c6Ltn/Z79a45DUyPRrkl0GTjn1L2EPbV3FFsFk
9nLX0pqylnHSDwSThL8vfS6taZz08sD5rzT/l0YH2l8U+qP7Qa0RxlBXMl5h
nwr7rlPUfopx0msCH670HMFI4SfzXrXI58aNauIz03jPx/u+M1ibhv60d1m0
S18ubePzRDmvEzkZkjMk3TyTwiZXqf754f/0/TzxtqtrHBuQH9nEZ49y7ii6
nZ1ivS+P9TFrY/qODej/sOC/tIl1WBLnmjLPrvqftnJFO6uueZbG+ajoiY70
GZtj7+/C5udI9sec+Sh8q+xxc22Nv/AXVH5K4KT9BBPa+F/UW2sa55/UW6Iu
5wlQ/6Y2PtuvSfDvUfmxNU1vLNoPtcx/U22fPwBOmzdFW1Nr/58O/Ws7z/gy
tjcHTjvbahknZezhR8f+URfeV4K+ppb7M0V4muiHAp9Xy3lwaIdrWWf6tyd8
D9vglxOF94zzoMBJbw+clH91I2eJZDxYy3RoI4KHtGfwUP6AYGobn3/4Y4px
0p21bCvs9Gng2LJx6ImOS2LsmBPnhEzkzQuZWeJtWtt1kbEn6NCa1TZOmhG2
wk5rYu4wVybEfBmW4jnTVXHmRa1r1mcaf0r2f0p4F+Kq0kcDJ30/eOCFD/yZ
TNfvLvxSxa2RTU1fnemyivLd6k28v/Qf+Zkug79EvB0FZa19P/hqc+Okn7Gf
gBiu68XhbOOri5wvC5w6yBnW1G2XBT9l4MggD8+ApuYDp83+gZNSdrzwe8X/
SHPj85TODZyUshOE98o2z4nCv1H6paB3a//HtGHQjyg9EPjG5s7DQ/mK6NdV
ssGoTMtHXq/oI30dxD2C1krbS2xP9CTtJDg2+vivfZBxXcg5kX0yotdv4n25
9ZqYjmzKwCmnb/gAvoAfIJP/l/EfM/DvxHsw23GYGDyutnHm3/qaxkm5xlwn
/AnOkpWPXSt8pfC3gmdczNktWiv26CEdSs1zgmgrxHM1MVDtT06xHGR0r2Wc
9KTA/yv+32obJ/002n2yptsG31XTeXDKydMWumwMOvKQBZ32V4YOZ6r9s1KM
kw4JfFKK9WPfC3termzmbySXEwur2Fa/yE5Hso1js6phQ2xZo4XPk+ffWfzv
ivFirPBPeKjHWJ4iu5xc6vnIM4b8WHuv6CxbyW79Sv1eriTezfXkPyWlvj6h
J/pOinHELxg/6Nh1aIrl5YVM+o49GINrhF+s8ktSvH7PiTX8CeGTrGWJ4W3j
TJuxbXyGHvFxaFxbOU97mOjTld7O2hB9dF3qW9d4C6UX1TXPO7Uc06+KNeTg
kDE0rtHww0v9bupfWamvecNFz1HaXnBBG1/bud6dJ/zLNJ9pBc7ZV9+lGf8h
zWXg0H4IHF74aAsdO4fMzaK9K7hWeozmnUCk5K8L3TqJtzT6RfpP34TP1L3d
7cnu46Yi22JYXL/Iw9Nf+p6Rbpz09gzzvF3Ldjm7jf9Pclp981CO3ItCN+pf
KPwOtXNnkXWGtjlwdMcuyGxVyXLBGRPy5wrfLhvsTgv5ya6LTOT9i0OnDWRi
43/bpZwy9Nxez7oODptPE3TWWHUSHEjzXuLravlcO/DLajkPzv7ikbV8HjjX
KK5/N8d1kOsl+5M5y7mH2hoS+mCHqcEPz5Cw+YwM8x+X7LOYwalHnr3NI2r5
DD1wzr4bETj7nS8OnPILAye9IPREx0sDJ70scPrEPml0oP07Q8/bkv/PPowh
NsI+X6fZ/8CxDXnGYmeax4M16oUxj85p4+84+Z6zs/Jdmvi8ZejQcusbJ4Xv
fOFvNLG/gf+Z7PxQ4fOFz0s2HR88mmwd0IUxQ2d0R2/0wS/QCX54/4i6yKY+
ODTaQP7SZLcBTjvkiQ8946xO1qtZmh+ZglOFr0ZfwUDh9yh9t57xB+o7f7rw
ykpfqme8dn3nz2CuKZ3D3GjjelfXM/3u+i6Dn3obgg7v3cEP7zUh81A9yz2L
WKQ+7Usz3la0ekGH1jbwvPrmGyR8D2cRN7RM5P2r/xal9zUwzycxprT1muj3
h26kh0IHdKRsHPNddhokGM+cUnpBrL1PrOn1N3j3ms6Ds9YmT92LlX4WdS+s
6frgyLgweCinDcbltlij3sh4KZ1f03OKNSlrSsaLscqNexnuaRg/7FC3vm1B
3bF1XB/56D4hcFJ0Yt3O+px1PPy0Qx18YLhkTKhvW2FL7HWm8GrCqwsGCB9H
O/WNcybAlYGTXiXoR1xSWj3wV+s5D8+NcYbAycRGvhWtZ56fla7hm0/8s77P
54QfebSHbvjmeYGj40RB/9DnqvAHfKRu0CdG3f4hZ2LURcbQwEmHB045cwAd
PlD720IfdPkgcGinxBzBp5gbZ0as2B22wk7kD7dLSuqgePtHmu8dR8b948CY
I/jloIj5O9KMk+LH9H18nL1wSsRz/mEGviNiOzbcW892BMeWe0NPdOwZuqFX
5Ya2M2NSI8aF9OeQeWbEQ+gv1POYgTMm5Otm+ayllCyvPZ6N9XAv7heEzxBU
Fl6Ul5TUWlCltd+98A4GPCfexYBDI19V+Cm61vev5rq9Va9qnuntRetQzfgZ
1cwH3iH2DVYTnswezzzXpV5FwWnCr5det2YbX5Dt/MDW3nf9gqBA+KB8+Uu+
142sGdmrjRx07x0ykVcp8H/S0K1PNesHju59Qn/K6X8l4ZlKcwJvrrQgcNIm
gTfLcxk4vOQrcs/SUvLz3Md6ee4nbdFvbAF/Y9HSgx/epoF/3tL1waF91tL8
8GZGW7TfOGyFnbAR/PBSv4Lw49ROr2rGC6s5D86eSfZGgn9XxWU9eiUlrSpT
3NS90Omi3y15+7KNk+7gWS33RPKRtwSnCl8k2v3ZxkkvDXxptsvOYE2ua/e7
Ga77tuqtbW76r9le04NT/mvgM5RuDf79zd3eycLn8/xZ49untWUgq0/IXBf4
upDfN/SkPnL2BY6cUc0sC/pbIQc6silDh5otrAc49xbkwd/IcH8GCJ+i8ley
jT8RPgn+Urbz4JSvC/zFbJeBw3tT+DO8+PSdbbXWEkwMHuq9GPafk+3xAGcc
Zkfb6DA66NDmhM7YD10HRlu0MYh5rf4lmhnHBkWBQ8sPnHRe8JPC1zfGgnvt
WoxX7DerLfwhpcsq+36Ns224ZwPnvm1KFeOknHfzi/Bnq/hsHHBSzsr5Jc7M
eS3f+zLYn7FS8FvwPFfF+AOS/XCR+eF9RvTfi32O2RrBn8KHSZfhlY1fVdl5
cGjjxP+H8EZVvf8YPLOq88hE3rMhk3ZWFBl/qMht/Bb050Mf9EIn5E+v4vaO
IT5U8/lv4JzT1iVw0mMD71nNfODM0Z6BU29agfcws68ZPcsLv020mUFn7vYI
/pvjLDh4ulfzWXnQkUEZz67ZQ80ea/TEBtPDDidWdf/LR0zoHnJot0fgtEke
nLP40AOcdsjjA4x/18qWyfjjB+Af5bsN9pDnqDw3fOaw7pOSpENN+sJ5V1WN
k+4KfCf7GKMu9diDXp1rh2JehTzjXZV2CbxNnsvgZw/7/dEW7eCj+C0+y95I
YjLXHOIydGj4NO3SJjpR99dK1hWZyMsJmR0ruwycfncM3dDrhNCnT571A4dG
/qhsMl76XB62wk7Y6GiMC2Xgl4evEp/LqnkswPEd8vgkvvlQ+Ce+j19WCN/o
GbGdlPheQ/inkrk3+oiNsS/0+0RbGfpjS+yIbvgdYwkP5Y9WNr6ksuuAl1V2
HhzZZYHDS3s8i+M5HM/siCEHIp6fErGR2NVR+DFauz5eZHx+pvPg0O5lHwZj
qjXLw1mmz8s0Hzjl84Ln1izz9VHs6MZzUEEn0Rdnmu99XdveEywU3k70g+wb
ERRhH/V7la6bxcIryZ7ftTBO+k3gpJTBP6fIdfhen+/2T2ximYfiXEh4kAcf
OtAmenSKfj0RdPQizz0o96KdeP4k+sCmktvU+AilnQOHRv7EsCfPRj9uL19S
v2Zmmf6TaIfjuSjPTcmzV53vevlGCFuNF+/ELMsc3NTtdRB+sdJzBFskc6Nk
/hC2hRf7tkam7LCnhZ8pXRL31O1F/zbOxQTnXEzyjEP3GAvoP8WZmecJ75fl
czxv66Brsdo6kOdnqvz/qBnP31p7r+OBbOOkGYGTUnYc1z7177dmxmc2dx6c
9Sz5zsJfzvS/JnnGzvN1nrlD5x+UlLEGPprtdTB1f5W8v5qZjpyj0Rbt/Bpt
Uf5n4OVkjz+Ch/RfftIZ8QyZ5808j4ZOPeq0Eb5R/d6UZ/wx6fNW4LvyXIbN
v8uz3cGx/fd5fubPN9l8m13Y2t+sUFYYPPC3Ff6W2vxG8LJs/FqJv7Piu2r2
knFmbNsYu80xLxijnwMnZZ6gD3rtybPdsCW2gw4NXQvDNz4LPffmWe+24Q9v
hhz6Sj+R/274DDzfhM+wNmMdx7oNP+G8V3zlXOGnsI9VMFT4eqUPCC6Iub+Y
fajEKKXTgv5g+C10yik7n36xDg36LKVzAqferMDnhEz4B2RZj/NDn16CJ7pq
naU18ycl/l6Rbxj5vuOi1v4WpnmW8W7xXQx1qUfb4LQ/IPpCPxYFTro+9F8c
Me1M4ZPYz5Jt/IqIn6y3WXdfEjjptYGvzvZaHBwa+f7Cp/LcOnDSUdmOycOV
Xhb4sGzn4aGcOv2Ej4n7MvBb474MnHRM1EWva7Idf4hDvJuZ1Vn+rnuMnSXm
oXxY9OX6uH+Bvlbp+sDRZW3g62PNiz/0jrHgmyPsyrfr2Bl7dxYMFt4y23uP
8ZkeWfYb8LIs58GvynL+LGzLnrpmrtsi2/XRDb3uC5z08sBHx/ob/qGMdeC0
eX2MF7xXhA747Nhol3Rk6HkDey4Cp94NgSOvRci8OsttgMN7dcgfG/YHRxf8
g75MzHR/hgn/m+tplnHSCoHXVPp02A0bNg1fxX7dgqd2lvnA4f07ZCKDsiH4
A/tcAp/U1HlwaOTPjn7lhR3o91Vhc+yNrmPlEztKPI7niJ6q8oXNjJM2yDJO
ShkykXdh4KS0MUbr0dGC6wQtymndKPi4fFJSw2L/1+BUwZ4uik+CbawlWAOn
a70g2J+alPS14ECq6dB4Xn+N/LaH5viwEtOh8dx+Y0+tZQTDgw7tDt1zlXLf
UUHjXcH4/Iq6HgmulZzjJedi8ZeIfrFowysaP1DP+X/kZFgn6iJjTwPjpMgC
Rx5tdBY+QLwD2ZPAPUihzxXm34IHaikmC94V/RHF2xV5xkkfCrwj3zcFDm1p
4KSUgZ8svK9gi/C+ok0SPkX4Z7nSSbBZ+BDR+7Q0z8A8873WXWtszfe17c0D
jbLNwTMA0NgMqqMxLO+2Bol2evBQPiR0QEfKPtS4fSW5j3XSdZz/C9TV/aWg
K/+UkU1yZZPWwgeLdpqgDX2XDz4gKBa+l1ja1DyUf55mHspXNTX+nnhWBA7t
Q+Wf1Jjs5AwJQVGxz8H9MMUyJ4jngHjaCx9R0ePYVvhE6TKsgXkWNzUfMpG9
PHSgfXSFB70WBw/ljwRO+x8JOvCvBJ5BNjDesILzncNX8YPGyk+T/zZKs32w
zZh6xudVtL2w1ZUVbC9wbEa+m/D/qH9np5t/TkXXOSh56zgzr77bwtfuKrLf
4r/4bj21V5f/v0W7d1d0ffAbGjgPji7kGVN86rQ8y2RO0QdwZJPfl+o5yXyE
H7/AF+/T+D8uP5gsv3pP9DfkI0WCrcJvUfnxwh+SHksED6aZPi3PZeAX5DkP
fn6e88vSXOdffmTcJvr7wrcIf0mwNM188HwQc2RZnvG2LZ2Hf5bweS2t/8ni
/SrVPFN0PzVesE34iypf39J0aDdWdV+mtXR/wOnT6y0tc0dLy10v/LhWumYJ
7pLs/wjuTDO9rWg9Wxknhe8t4dWUVgl671bmA0cGeey0NPoF/2t5rgO+M895
9LlF7U8NfbDHjsDp6+7ASbeE/uh+S/RxpWQcU9Uyt+dZLjzIo8/MnbEVPX+w
GXH4X7tRD9sx5jdr3p/fKCnpHdFvl4x+qvu28B7St1iwSfh5ok3JM8/oPPOB
w3uKYJXkLJAP3dLJdGjnh5y+rSwLHHkFrdwuPkfbryje5ymmTZXv/Sr9+itu
9SvveEX8I8ahw+CW1gM5yCgM3dCLMtodk2f9wM/Mc/5utbNS7U1obz/EByfm
2Wfwl/dbGid9JvBnW9qfsFV7pe0Cx6faBw4NH+2imPW99O6c4rrIeCpsgj2G
NHL76EE/0Q3bnBnxn9g/MOYOejF/1hT7GRjPwtpI7iHJbx3yn2tp/cBph/w+
yS6U7K/aO44RJxtVcGwnri9TrHtbMt4U7GXupzoPviny4MRhYjDnvR+HLwmf
lmKc9KxyxidU0v2X4CK1O0ttdFG7s7Ru76Zr8QW6Fn8mWV9y3q+gsfgbqB+p
gibCU3Ufc18N04cmuQz6I6KtrGGcNE1821T/c8H7qaZTDz50+Et1J0mH7sWO
l8RN2vw02u1Z7H0f/NNomGwwTLrO6WL62AKXQYfWQHGyh+iZsllGBeOkH6WZ
HxnU6SW8k+iPVzBO+noF61OunHXCHthlaCfT0RF7IRN5tIEutN2jvXmwJbam
j/QbG0EfWM5ywbE9+TKuKdJ9cIFtiF1vTDJOeoEgk+ts2DCj2P9SA88MfHqR
6dj50RqmQ6MO9sbu76SaZ1kN/78ti74onRj8yENW/zq6txR0591cHefB66FP
C/9T53jRjhV0Cjr/26GMNeTWPP/j6ibZbZpgXkPTWVcOqGIdaJ+20IH2x4U+
c5TOFjRiXMrZlxqFv71dzn6Nf7+Rajo0+NKFtxbPIOF3q817BYPSTW9YzmXY
E1vio9DhpSwj+r4ydKB97NJK43m0m+JZO9PHi/aSYHeq5wM+CR0aetPuyO5u
G5mMw7KQSf+of69kvkqMzrAMZO0RHCueq+VHlwtGar5dKtgt/U8UfS3fPApe
l+yFxNf2pkN7VfCm6K8q5r4u+glcO0TbkW5e6mxWe0N0/3ABz5MyXZd6mwTH
4zNq/ypBb+Kk2q9cyXhf4ScxH1T2iuDj4IEGHzi8z1SyHGRcHTzQqM9cHqu1
zA31vHY6P93rJ+ISMYk14texhuFaxjXuEOdRB/59A+fBWTN+W8/9ok+fZTo2
EhdZ54Gz7iNWwo+MsbHOnFTBdHDWm+TbFVsectsHTnvtoi1i0Jvhb8TSdhGX
4KO/9BXb0S/Wg+fH/dG+6Atjmq922lR0bGHvIvvI++Dnug+aley5v7+x5z/4
B02cBycenFtg/K4mLkPOtxUtC5xYRZ62ciq4vU/Drz4JHVpUcBl424r2M3B8
jbLdEWPxQ9qiTdpj7PbUc5/BiceMJXXpE7KgM7bwbY44Q2xHN/raKfrbUjEg
X9BX+EyVz0k1fkeq8+Dt05wHp3xu4Ncrztwg2KH8y4INQYdGHfx6cPg2bSXX
dHtvx3WQWAH9ZPlk1ZrGq9Q0Hzi0KoHflWw+cMaHPPOFudK1ken0g/HbKLlv
CbakOgYSF4mDi6XT/YJ7SXUNHa1r6D0lXjuzNn5F8AX+X03XCcXKz4X3jzXD
l1wXRK9R2ThpJcFXwq9U+cjgZ41BnULNg6qaD4NTLHOOaN2qGu9XzW18Kny+
6DNDPvJoAx544dsinSYKbgwdl/6PnuiI3AnKvy14IM0yn25pueiGXie09Dr5
oai7QvCo4DnBzx2TkppK19bsExL/A+JflOf1+VzBLPZ6CXoJerAvBP9U+dV5
bgvdH4v7iyUh/8loA/nYBPthF+b2E8x9pQsVvz9XbByiGL5SfKsFLwv2ir97
Vfdrb9jtFOUXRh/HBw80+NCB9h8XZMt+n6m8eaTkjxN8Uux9B9mCHcIXiPc+
1v3CP1K6XfCx8C+UZolne7Hvh1hzfsS8ztW1P3iS8swHvVjpoVzLQcaCsAm6
MAY7wj4LAqdN8vDDS9u7QrcaedYTHXMCJ6VsV9DBaRddikMH2j+Qa5wUXdGT
fjTMM06aFnh5peUEWbofzmDfmuy0C78RfJxmnkYqr5LnfVe7Y6/adxqnzwVX
xzgsDH+DH97yYTdsxrMX8I5xX3my/Kuf4KG65qf9pKB/3c1l+NWJLe1b8KAv
enyj8uZaby9vZ54rYn6BT85znT0x78jPFr5DcfLDAuMfKP0scGjkuYfgXuIE
wRThZzDHiGvieSOhOJYw/1bxPl1g+mrRtgT9qGi/hsz/FpjvLc3VQZLzptL/
iH6jxuF2wSziUqFsV2D69bkugw7tkwLj1RLmu4v4rPLegheEf52v65ZgvvC9
BT7XmP/T85/6DtXlU1F3l+j3F/vM4/0FpkOrqrKLFI/PVZ0hdcxTV7S0QuOk
X0bdgwUuWyB8d9RdEHLIo8O3Sg8UmF412p0fODwnqZ3L1c7QOrYr9h2Xah7q
7Q07YBtsMT/a+jbsvF5ynko4dhG3bs6zfbDTrrA5tsfuxKsn8xyzuI97W3Z6
Kd/0fqKdzXOTVD9X4pnSCPY0Cy5O8zPAN3L9HBA7s08AW88R/ofwX0I+z3hO
yjO+PM/PIvfEdWFS4MTCK4IH3n6B0/4TgRNTlwcODb3xF/zmgWpu92O1ub3A
OD5Lfrh4+glOSbN93kzYR+8W/rfS5xOm47Prg16l0GXYCv+tE3jthOcGPNSD
j7b4N8Ef0e4XBf5PwbOadxV1/RrTznTs8XOMEfMAPaBDOxrjQju1g04/vgjf
ZtzwUeQht2kv89AObe8s9r4vYtbOiF1fRGysEXGba/ccwey4hi8OfE7gXNNf
Fv9Kzpnjv5fCF7PHoIXxpUqXFhmHtjToi4rM91qxn+0sE/6m8GeCH/rHeS6D
Do260Me1dBnPhaj3/3lU/kIL46TIgofnWPDx3OuuuLai8xqVr29hnJQ+cO29
J3hejb5wjh44Kefr8WyEZ3g8n7pPfAsE8wUfEuel2yUtjZP+nWudaf/khPFT
lPYJnJT+zA3d7oznc/cE/kr0HXvdE2uDO0M37I1+bxT7uR3PnqC/GGOBfNqk
vW+Ft9c8S8s3f3E8s3pdeE2ltVt5PfCIYHmsC1YGvo65I395incEjKPSxwWf
dFA80Tru5XzHAZ7lvCn8FtFuZb9EkenEBp71IOfZQsvaELb9pw+6/1kkWJhh
OuPwsOAB5edzLlTQV7WwD22IvsNXqGtpkWBRmumUL4520YXYhGzaWBLykLsg
w+PerJX9AJv0iOefL4d8yg6pj/PVl15hq/atbC9wbEZ+qtbCeZJ3Y7rXd8/E
Ggxbrgsboht9og/YYVOhbTFTsmeUOA99deH/4R8ofTBwbE/+mVjnIf+cdN9n
cf8ID7yLC92/+6KPjHsz2aBmvvEO+fYD/jfHfjT2/4C/le+9dODQ1gT+Sr7L
fuT6WOD/fv7AdVbruyGVzQMvfN8L78I6XfAT9mEPXSXz963sOshhTxx7kCbF
emZ8xJa7I57AQzvwHRH+H9XrEDKRl1HZdSfEWugQMVn0vypZhz8qWQ/wjNDh
MD4v/NjKxn+vZP3AoZHfV+y9Nw/H/GXuMp+JjcRFYiXXR66Nt+a5bpPKlns4
+ksefdClR+jwFf/WDhzbfBU4tIzA0RG9j9WarL7idYe6tgN26hw2x959Qz6y
6fM9ES+IV9gKO5WErZCNTvPC7/GHI23VP/nbNaIf5Dqr9HTBCfKj0wUrdK/9
jeilsn2nfI/J/RHz71b9aYJbMszTLt98yEEG+8/wsTqi1Q9/OyHfPofdsBn3
bEt0D3ib7gGXSY/7JWsM54SEr1KvWdQlViFrkfiWlJi+v9jvNO5q6fFaEXul
wEkZP2TeKbhOUEu2fEn3OxX4hxnzWjJqs95Q2b2CWRF7Hon4Q1/YT3dZ2Ic+
kae/dfPdZ/A++c6j+/3RFjpMVPvLW9qvJ4V/Qoe2InTGv+CjL3fFex/GjnHD
1ydn2NbYGZ558R6HtSXrPa7p9YVPUCwZK6hb7P+cbxNcIPzaIv+T5SLh6TwD
5tuxYv9P5pKgg2cETpolOKOHxlFwai/TGxVF/WL/n4//01yk8gsFeVqfnCf6
T6JV53s90YYLLih1Wy2K3Ab8w6IOMoeFDqOVv05QsZ35obUIfS6JupeqfKTg
kh7Wgf/L8I9AdETX00L2P22o3cHF/l9N9yLjpC8njJO+FDgp/7cBJ6XO6SHv
sXZuq3KR/2UzWLQhglqyyRDRX0/4/yjwUI5O6Iz9sBe81Dmn1GPB/3EYj7NE
O1OwTPKHij4i+gsPYwXfScK36946Odn9pv8XlzrFBqmqu1DzZlGZz/wlJc+Z
vX/Lx5cKnyP8Xp6vCE7Rtauq6lURNCk1fV6UkZLn3NEFSu8r8/m/yFlWZllr
BWsEO9vLd5Uuhyb+s6RnuYZJSdPl26M7a00u+qig8wzwCpU9KdoTgsnS4Rml
TwvebW8ZyHo4dKcfI8RzpuqO5lyIhsarpzuPT+FbtWX/s4v9Xx/+6QPOf4HI
0y663M69hng/VB8ahH9WE2+DIuOkDdmbKp7qgoxSy0FehZDJP2X4twwy6Qf9
BF8Zz3KxE/bi/OR7JeMewedtbeN/bN3Lvj0m/Ju66EV95Lcschsp4pug8vNK
7Ff41JBC46T42UCVD8AvpWd/5iXfGgtuE9wqmCT6yeK/TbJvFQyIcfklzTg2
IQ8P5R2DTjll/Yr9TP2TdOM7lb6Qbj/8qKp9EfwanmNWtZzVqW4P+pg6fhYJ
/YdUl9VVv26Rbhs11lOU3iSYzHwVzwP15Hf13A/6c0ap6U20fmtc3/hBnq0G
Tto18Pn1XHa68HNEO5vvsMJP8JmGkpcmOKmXea6vZ75Bwveo/NOGxkk/aGiZ
99WzTuDfplkP6rK/4t0045vSXAYOjTz86Et9+kc/x5WaB73YmwEPfUXvufKX
LfLJkzqYF3tMKLWtpvWwvQaF/+8JPdFxRbrnAv2jn/2F3xjPgcFfquz8HNWf
jU+Umj6Le6nKHtM1qvcaz+Ij5txYZLxpxJ+hEasvCTrlmYGTwneHZM8QTO9h
fnhHBE+LwGeqbIf6mNHO+q+I+YsO+NSawEc3s8/dEfIatjMdH9wZPOjbtbn9
Cp/9IfwNH/wgfJL0o8CJl/jiqcW2Dc/K0Zc2ppSaPiTVdsE+b8g2Gyobx05v
BA7tpcDnBv+pYU/yzNmJPTxvodPO4FTjpLQxR2N9t2B2pORXaY5PU3qLoKbw
2pm6ngjqcE6HrvE12GOuNCXT/3AfI0hVW0vVzhLBQsEiwQORkv+P+vWg0sWM
falplN8lvJHkHG7i88e7yy5dBCWy49jGbgP56Ur/auL/RnRV2S/S/SdBtugt
Bc3Zj67Y/mBHjVkFxUTlswQZgm2indFNa2aVL1CbOzXun7S1zug7VzrM6+H4
OEP4Lq4hgmry/91lPpdsr+wwUrIuFVwr+EC0bYKvS7zf+fTY8wz/p1HnGuWv
DP426lMb6V2sdJ3aWcu1tdQp+TX4lvR5jrx0e1T2rah6qzJMf76Hy6rx3zLR
K2f6f9DfCTaKp36mz1bkTEX0Qr/3yzzPmG/1JaOtbPCqbLGvrVPy38omWzL8
LVV11W2o9fwM0Rt1MU46Q+u0I+LrJfpPSg+p7h3Cv1PaU3XKOC9E8DBnTmvu
/9nQ5fCd0M72x/bbq5lGvdtDJvIaa716Au9+BP0yfTZe60yfj9dNkCZIxYZB
b5dpf+gW9N5qayNttLU9fg+bXCd6ZenfTDpUVfqFeDpVl/8Kv4b3Ch09JozN
cXVsb+y+QVCN/eBKvxesFNwgH7yzsd9ZNa3j91acZcWZVpUy7Tvz4vr62TFq
U+VfKE3mmbX8rbiG9eJ/0uhG++iRaOcUXbpU9zxjvtXMtM7XdrPe9IP+7BZ+
fvmkpN+Yv+Xt19i3ZjvXTY55ehqxQjrMTPNYM86X6/7rPfnEVsFX8tv/KL1L
8EiJ1xusi1l/nFPsfyny37tZZeZbWWJ6xVh/sjbgf/GsaSifFbKIG7dG7Jgp
uFMwI9Zm62J9dk6se2njiPI/lvlc9JnB+6PGMUn++rLwDYJzi/2fSf6/Dc7/
tzMS5qH8gxLTKT8SPN8o3R94uSLnj2ocJol/omCq4CbBgyWmQ7u4g/mRXS76
uI/n3oXGWXO1DDo0+j9e9SYIxkVKfkHo07zIes+J+PpQ0NELubeGvZaG/Vnr
/RQ6859A6n+v8kNlPjseOms9ym6KPvzR0/Odub6/xLzU4cz58qrzbZnPlJ8q
n5giuEXwmWh7GDOted4s897+7e1N/zzKJohvnGC0oKLkJMmv6ype3aH8bYLp
gpsFNwkmZ9qn8K0tgi+Js/K5V8olJb1V5jZ2lTh9K9rbGrzE1esz3R5tbRTt
7TJ/a0BKnv30tDU19EcXdPq7zO1PCR1uFNzA9UKwRnPsRc7IzLR/4Wc/RP/o
58ES06ENbe+9xN/W8n5ibHZAMOBfeoryKW6XNg+o7tfc62Y4Fk0J3SaHzcZG
X8qLv5xgZnv3j36OF1Tq5bL6sudO2eoTwWsV3S5jRtvjwibjQw51kMV9NPfQ
7NVh/cg6MrWH15ZbFXdXCZoLn6J482wN47OULhe0EN6L88YETyiGncA6UWuR
Zvi85KW3MH5dC+d7q7yOoH6aeanzWB3LuZfzHyQnl3WmZMzEL4WfJ/qQmqZz
xgj/l4f/VtHmBn1zsuuAUw++bpKfJ8hNM5168CHzw5qWi27oiH5NhT+o68aG
6OOpSk8LnHSqIDvqJtWyL6wPf2DvwXWpvhdoxTpK7XwsGKpxPb/Ee5fZ08Ie
Tfbl8l6lf7xbmdhJ48K+7EZuC7vSNrzsG4GfdmlzeYp5GIdZoRt6TQndKEc/
7IMtGZs+ktNXcGKa+z5N5eVqmQf7Yfdr1P6U7lpb6ZpwOfdH+WqvlenQlqWb
Do1/v14h/DjZ+IaE8VOV9hdcJvz5eHd5JTqIpxf3/5IzWfJHdbIcZNDGqIil
xMerhM8Ofnipc0F7y4HOsy3aop2Tol140YN2eRf6fOiGXjcmXJdnTuhxZfDP
Dr/CBtgUHP/CLjlhZ2z4Tvgz/tlS9J1ZWo80td2eqWP/A8f3yfMdAd8QnF/k
etRnLvSNtTT+0U60toLWadaTfvSKfo1P2I7g6E6etT0+xf1nAfNO43tniveY
sNfkNcGZKh+o6/bg8uah/K4U++H6ZPtinvC3lf5XujbAnvLzRVU8P5gnrdJM
7yA/GihIFd5H5U9WMX5SFefTil1vcdApp4y9fO/meZ8f8+gWybi5hmWWKW1f
w3Tm1i2BI4P5Bg9tzqliOvUoK+IevbbGpbZ5aLcsZCIPXWmX/YO0Dc4eQ75X
+VF2OSwolYwU0d+PZ4PgPyrtXd341houKxNfquDYND9LhPf1Go6NxMW2OeZ/
tYbrnB17Pzu2Nx1+nj/2VP3j0rxfJS36vijstvh/9KevjAHykT0v1zgpzzTz
sYnuoQfUtXz0pW10ez3aYn4wnx7U3LxU6SWC89Jdt22K9xInhL+kcd+VbJx0
R7JjDzHotDTT14i2LnhIqYP/bAr8Idbs6vO4TsZJP0s3/5Fk1wdH9pGoSz38
D7ti3wZpjv/H8EwmzTz4M3Ebv8Vnid0FEf8pK4h4Tn6A6gwUnBrXkN7/I4dy
dKXvm9P8/AKcb1WwI/4/XOm20G1hiuXDU5hie4EXpzgPju3JU5d5Q/3LutvW
J7Y3HXnvC87VHDxPMCTkE/tpA5thr1HtLZMx2Ri6kW4OHH1PCz2Rx1ylHdpj
XEslu0RwIbFAPAnZpGfCOP8VJ8/zPJ7rVeNZraCmIFPrgdFcs3hvJriB+KY4
dqL4xwpPE15OMJEYJVp2lnko71Nk+r1FLkMOMl4tNP5JoeVeK7yVyjsUGSfl
f+f1WN+hh/p+nehXindy1F1R6Pq5vIcR3FVonqsLzUe76FKQ5X7Qn6par8zt
qjjHWkZ16vdwG83Vx0n4ierdLkgWLUVQRzC+2N923Sa4UXiJ5HXKct9/1XV7
ftgBG5BHzuxCywJH3rlFxkmJ7cicG9+LoSc63h22Ir03eCifHnKoNztsxT/s
+X/95KBPD53Rt0Z769NAtHrBDy/2xT7YDxvxnG1wfIfFfRnPM/+MZ3S76/nZ
H3RoSQ39rJ53F2PjXQZp5cB5n8C7jeuF56gvLbIsh+eO3QRZ+JGgVanXhDyL
Y13YSLR0wfvt3NZ1DX1/CE+1dD+vg077lCETebtDt1/TrDft0ibjDc74oMep
Go8Bgv6Z9knG5xfBXq25TlP6VYbXq6xVP5QO1eQfzYQ3Db+oH/6HjNNCzpgY
r1fCz5GXFDj+jj+Ak9Ie9seX+Y/9mBhf6oMj4+XQmfkxsMg4KX2gLv+9Z7zR
Db0Speahr9TBDtxPYwvGnTFPKjSODvhBDdXtpLq9VHe46PVFTy0yPrzI+YuF
N1c8uFowQnhn9tskTF+vNdGYhOV07mFZ8JSIVpqwnJqSMYo5rLL2guNKzfOe
yt8POchGFvx1xVsndECXuhF/iD3vtDOdcuRWV7tFohdGu5kJt53PsytByzTT
0QW9rxbeS+m5Ca8PWRtmxvqwb8L7OVjLsR5kbUcM7Cy8bZFx6pEfFW2xvqQu
a62+IYc110mBI2922LBFwnYEx2bkRwr/D/ufC4zPL3CeNefTsQcP/bH3e6E/
sblX4OhDnjFlbIm58KMX+l0a8uexr1s2Opb3PbJhb8ac5/mljl341MCIsfgj
vnWiyvv08Bms9B0bcD2ARln/8BnGFl8pYB4Ljkr+uPBV/BD5pVmOj+CnFTkP
D984d8tyTCOOTis0nXqUgXcL3W4MmdS/hDiT8Fq8f7y3GVBqOt+4jUoY51s3
8vgJPtK/xHTq9SiyfUqV3llg/M6wPzg2uyfGhfFhbKhLPeR2lbwu2Cf8uXyR
7Q4P7aNfd65Rartb+GdSkfmgUdYvUsovb+d2aROd4Gd+JIXv9Qy/ZW8h+yUX
F3j/C3uJ2ANzuuBFxb+tgkVaC3zdIClpgdLG7LNorjZ0D/gf6gt+FPyua/+3
PTXmHRSvVX5ItKpKB2f5PxrnC9qqb+0EJ7RRLFD+U8WtTwQXC79EMFxwRGvM
nwVfqf42vsVTX9qozhdqf6/gG8FGld0pmBFzHl/emvD386dk+Z8IRzQ2Pwlu
b617Lcn7VOWPKx2W5X+XXUNMlKxXBBsEh0v8byT+czS3s5+V8JxkrOqsVN1n
c/zfpCMhc0SW9UbnY+Rn5QUVBJfHt+98Aw+NsnKF/n/XLyX+T9cLWhvsK/N/
va7MsizkLJAe9ws+bmB7XBn0Uer/VYLkttJFZWsEKwSPqGylYJXgMcGjguVZ
Ll8fPGOJ4zy70rgfVB++FexVf7owHnwHLTgs2k+CQ1F+IHguVb2RguxKbufR
aAv+HwTbE6Y9FvS57K0UrBGMVr0K8sHOVdwXbHVplt8N846YPQC0eTjkXBk+
AM91KruGd27q77WlzoNvlz9co7pXK/9uR7+7ZU/Ck6qzWvBElt/j8j6X9lmD
sxY/R7BObbwteCd8Bx+aJ/hacECwT/C06j8Vcr4vsU/wT639wQdPHflHXUGK
IFlQW1BTcDn2oh8Jz1fiRCF7CvFF1mxZ/t8F/6TYzLol7qEvi3ojo+4hlX0t
2CfYL/gu8OtUdi3raMFrGtetnGkp+Enz8QrRjua6HvUPZtnXfg1/263854Iv
BS8JpggmBz5DMFWwAf8TzBcsjDz4teH/o5T+onyS9P9vlmnMDeh/CP4UtGrp
cvj+FMwMW2PnlxVfNgg2FVjP/dGv30Mm/FPEN0kwMeF+H/ofO3wd/bpWcIXg
MsFz+LrgBcEm2eIdYkMDPy8+FM/VH1T+LcGbgiT5RLlS//duhdp4WHBQMC3h
WEYc+6HEY8+436X8rYJviDPyvb1ljhGPKF9Jse35Zo4rxJdHc6zXtRFbXkl4
vzH7kIdznRZcIEgXTBA0THhMrwgfoN+T/6fv+6O/1yv/kmy2rcD2+C7o5TTe
SYJ8vr1V37YINgs+1Lr8a+75svwcnD7Pbm3fGRf+gz/+FD75uuosEiwRlFOf
0iWzjH8aquxFwc0xJ5gbzwj2qP5uwSfoFXFmHTbWGvdtwZuC5zp73wN7Hp7t
7P0PE4V/qrg3i3fowi9ooVinPl2s9EnVf0rwhGB40IdGCh/49HivfVOp6fBR
9+OOfnfMu+n2pb7GcH15Pc6k5CzH1Rl+d8t722cFzwiejmfkPCt/Lp6Pvhj4
k5L/hODxAr8Teyzei90s2dMEeYpFU9Xmzdy3lfodM++aibXsD2CfwGThNwhO
lF4za8jXJGu54BFkyyaTerh8dWfvS2BPwsKI//MZS7W3SfAO5zyqzquCVwr8
Du37eMdXHj9k3ZjwvxCXxT/ajpWsrqU+671uqui6l6nG92Sqv0WwWfB3R6/h
WL+xlmHdW6o6JaU+D/f3NJ9B/n07n7Vdh3fqgtqCEZ29BmL907OT12qs02qq
rJaghuA5tfGOYLXgoPrzneCA4Dfp/avgD/bBqmyj4IUC7zn7Z39Yqd8vfMMe
PcYkxuK9At9PrcvwGR2cZ9+DtZL6uKyz7xm47+CegXuH3sL/El+S1hd/K93c
1Wss1lebNFffEcySzD05zoNv6uo12PExFosixu6SfT8XfCa4T+X3816DNUlX
v+Pn/f6vscefvf6XK3+Z4AhnD0dcvT+unyvjGs138Jxzsr+9v+vg+46dPIsu
9fXtrBqud1/E4Y8Uf67q4evxdK61gruJhaVuj7Y4p3su0MAx/L5ol28k+Fbi
n+96CvzNAd/VXKL+jBAME9TUvP9QaY1c719jT9twyX0+4iwxdgRrYsGPnLuc
cCz4JGLbhRHf4KXOs1nmvTT4n45rNDFke0fvk2OPHOuaK2NtsztkbkuY98ng
54wuzsdazPVK43mrYCb7ETSuI3mvwR5S9fkOwYwGfg/N++g7Sv3unz0AzNvP
xLdLsENwW6njUOea8g2N/9Jczwv+Ucq/VweI5+8K8gvJ+6uC/XRD+Orvgh8F
PzGfVW9lrr8NWd/Z+zzY47Gvq/d73C18iuRNFXyCP6pvf4v3r5CBrMMF1mtn
6Daqs/evsN+MM9dna0wv51mEaOMjzlDvt6iLvKSIAw8VONYQZzZ09Lt59ryd
Krm7BSdkWJdpoc/0UtsiXzyz1ddbBdMEt5e6DPraAs9D5mB52X2X6j7bxGP0
dKyXuN6tFbwoeIJ3L4IF7PsXnCG4QDAv1d823iP4Tf79u+A53tmrnVqCvbpO
3a78fwR3ZZpWO+hT450r7xlXSdajguWce6LyqoKt4nlUch8XrBI8LL7lgofY
L1JqPnimxbtS3pM2EO0+5p+ud0cb+z+SL6C37P+nrvXJKr831Xqj82cq28O/
RgWfCHYIPhakiK+e4OxG/saX7835zvdpwQuCNYL7O/u9Le+RGwrSBLtEXydY
yz5MQWqUHWztdjZHW5tauW3wiio/ptT/h1wnH/tZelYq9XvXcfHOlPuqXXFv
tV11vhbs5zuIrn5GxvOx55R/SvAi/2fs6uc+PPM5VMNjw7isVdlqwZOCywWX
Cdbx7Yr4WguOb+NnRTzLKlB+kPpwnuD0VMt+OuQXlboO/As7+xldnvL7u3of
EnuQGgka0776dbfaniuYk+nxry5Y0tDjTF93NLJP4VsnC2ZlOi4QE06UvF/L
XIc+Pi94RlBD+ZrEbMlPL7WtsfN6lY0TjBFUKzUfPM8qP0UwWfCc+vO84Fn2
lEr/v8o85vCsDfuwl4o9YHNYn7BvQHFlgdImmkuNBXmMr6ClIBdccylTUE+w
ItP+iq/mq6wV79AE9VN93eWam9HAspADT13hKYK2vDsStIl6lEH/QDptE7wv
SI92G6Qabxg6fKiyLYJ3W7k8NXiaS6dmgixBseZ2G0HrLJ+7dk2Bz167TNC7
alJSn6qmUTYq0jGB7+/us2A4B+YmtZGhmFG1iXXPjz4WCxKCIsEb3X3mA2dE
VGviOvBjv5zoO/KQy7WzUPnWUfe9Vu4PfWkdcqETAx4J27J37J89ZIKMipon
iqsbmniebYr59aNiwF+CkZyPxDlBgjcFXwr2Cr4QzJfcBYI5lTy3tsX8OvVY
rYkEF3XQPafSswWXCZ9byXXgP1PpGYIZgiz16fVk3c8l2w9fFrwU82xNzLWt
rdw3+oUNMsIOHym/MXR7RfX7ifZysvX9KOjEp50Ro7aErHej3lvB0106dhP0
6+D2N4QO0Cjb39P2WxE2LCkvu+patPgY+3iF8PP74r6Rtcpu5T8SbMu03Q4I
vmnlvSzsaeF8yI2h53dhvw/Chg938l4Z9uS81N5ny22UnN2q8yn7ZVp7D81b
sU/md9X5U/CX4GfGT3BEcFSQxDVS6XkRB6YLhggmCM5hXst3y4lnTVXX+yHq
ch3gn9JcC27QfH+9zOcXbotYypxaK53WCV4VPKk4tqnM/17+KHyGfvEf5t2h
80HlvxJ828rnIGKD4aJP0LiNT/X3v/yj7GNBt9a22Zfhb9A+CvqHau+DsO3e
4PkmbPB32OGP6P9v0Sf6dliQp3vF0bo+5yr9rcTPn/hH/Ix4FsAzAe7XZ8az
taMl5pvZ2mvRDbGe5L6Q+8N7BXeI7xbBbQk/Y1kbz3/aqay9YG2Wnw89kuVn
RNxPc189Ne6DuR9OJCx7YcgfGf9F5//oe7L8/IJnF2cJzhYMivv+52Kd+WOM
/eGIY+kR3yZGDCf+J/OsuLpiSXW/F2mV5fciGzp5zyv7XXmu8kbcR/9e4v7T
9yeD/qrgT9FOkk9eku59rux35b+9+MX28A3GZ3eMEWO+L8b97Zh338UYVZTv
VSjw+7SUeD/IdXtnXLubKp/F/Vhrvx/iPVG28r2lcwPhFTgzp5PfyfE+bmdc
93ewb4r1qdr4JdpJirZ2xfoAnumsSzSXFwiOUdmzmgdrBf9t5frU/VRQjXqR
kv9c0F91TxEMSPX7Tt57omtq7MtqEWsEnt1O1bW7bSe/h+Md3MuaL7VZN5T6
PUyNeP/L9xh8l8E6YC/3rIrR6xSfizv5nQ3va3aHHp+Hj2PHCtG/o4GzPqoQ
a6Tt6ufHgq2CGiqrIqgkeLqr9w6yb/CZrt4zzH5m5lDNAs8j7PZHzKPVXb3H
j72jdbhfk16Tm7jdihFnzhZMEgwSjJVdbheMFnyl+4svBLMLHDNei7hxfC//
y/lolseB8Viu9Kmu3iPI/kB0+T3m9efKf1Hif79fkOprCdeRLyVrmWCJYJ9g
P35H7C1xTOL/vysE1SWrodIMpU0EjQss78uQ+V6m7YWtsDG2Ztx/iD2E5Uut
Dzb6VXBrZc17voNLtV2xb60C78fEnvtK/ByiezyLmBPPh2cJCjO9f52968t4
X697qOcFD/MuW+WbEqavznUZ+Ik5znMWAec9cB7BUuE3iXaOym7ivZvw6cgq
9nfMfM8MT1eVvy/6QyGnT47p0Kh/u/AhovXOMQ/twMcZCJuFfyIokE4tBXkJ
06HtznVsaVTd8YU9ML/W8N6d25AjGc/kWP9eOZYJ3jPHefjZI0Md2u0TfUQ+
st+Ivg8Q/fqoS0r9R4Qv4pmE+lmVMRBUYp0q+tmyzZkFxu/UWC1rZf4HEq4D
fl8z51fQx4TP78D+2H568CwSz/3NjHNOL3nsjI3PEEwV/pDS5YKKavsPxcij
gu1ai1RQ/ti61pmxpQ/Y5GSl54X9GbduOW6XNhn75cU+d4HzFxjHDfn+bh2c
8STP96B8F/pwhnVDR/rzKO9FiN+Cy7voPkvrxI6dXJdv3PGJp4u9xmV920Rt
NBWkCbpLVmfBRXw7W+zzNziHpJ3K2vMMWPy3in6K9O2fY56NKn8n1/g7cZ4J
PMtUflaOZWeFfMbi4VYeG57JLY3ncrUSPhOCsyGeC92aFvi7cL4P55v6W4p9
Fi/t8b3s6PiOFX548wqsw+sq35ZrO2PjiTnmoTxR4O9VbxJMFAwTjBCcEf3d
FvLhLymwHsep7HhBD0EnQR/B8Az7J/p8KsiW3jmCZvgNzxSS/T+82TFGfLfL
WDAOW9PkoxqTbMW+He18/W8UawBkIo/5dr34pgmuTXNfbszxXKId2itM2AZj
wg74Ic9hHgqfxB+/FP/N9F14R8FP8okjgh8bmOfTHMdm/BlfJnbwnPJg8DBe
zBvGrK3aayMoTljOz4L/Co5RjLtZUFzgefRkwnMJ+T8UWKflMb8oe7DYz9l4
3sbZbJzRxhlf0D9KuAx8kvS6Pcdn7nL27hVppj9ITMIWwrdoHnwoWCz8e95d
JIzz7pX8EuFHW+ja1CLme5Hn8J34WK2kpEtzLQcZ9xdZPm1+FHJeEW+V5sZJ
qzU3D7rXzTVOmoLdtVZbKljSyHRo6EpbOUoXSP5M4afij9Hu5nz3gX2I7Ee8
UjAjYi9xkHarxrvkZ4p9T9pRMFV8NwmmpJmeFfer4JQ3CrxhzHHOCzpSR/6b
azrllKHbmFzrBz4i13nGndhJ3Fwp/Du1/61gjNq7TjAuzXRo94etliRsL/qF
Lb/Mt0xsPCJsxbhNin5hy6ph2wcTrv8AdubdUKFjVNOYg8hE3lchE1syfiPT
fPYNe7Px85a59nX44cW+yHywwHKf4jooPL/AvoFfdJE+T+PHXDcamA4Nvxmg
OduC/Zqp9ufPczxnFgkfr3RcjuP9nxHzH4n3OL/H/GL+UWd8fCNyb4npzLkj
BcZJmSfndfF5lZxbuTzmUfdC46RVAuea8EJcI16Iuca8Wx3zi2sK1xOu9/jS
U7n2J+T/IzvVfaXPqxu4L+vFOyH69VKO8+ADc5zHb9fi44GvyXUe2y4ssH2h
U742eDbk2NdnxDUdPaCvy3EZdSsmXP8f+Tku49qxJMfXD3hWFJgPHL9YVeAz
WydrzNMr2E+y4nqBzozJmByf8/hdnAmJTK5FXLcWEtNCJvz0e3z0l3oDg2dJ
gfnKs76UjM8amE69JXEd5BqIrqPTHK+J1VxHuGZyHeK91fkJv/N9TXBiwu+w
2HPyAPcjyl+S5jOnOG9qSFxHiO334s/qb1PBY8Ifx/cF80I39BjJWb8a0/dV
91HiknjrCIZqvXk+z//auC32ttAe7dDehWle7w3N8ZqPtngvQnt3xFhj/xPU
xvGC3gnPL64hQ3Ld1tKE2wNfnPAcXhUxlvXVofhGhr1/E+T347nPyDc/OsLD
dY21Yd8cr92qx/rtoNYFzZXO5H2G7tWPFe8dSi9UnwoFbxd5TzRzn33RTxC3
JXs1/3zhuZIgOzXOdxDskR1+kB4vN5ZvN7Y9n863TbEDa15swbd+G1V+XWP7
G762UjAs7MYYcc7i2DSftXhY/L8IXm3sdRbX+IPt/L6bcR8W49hc/W1W6PFq
2N1jhh2wAbbjmw++/bg0zTZkLyF2nC783ByvEdEZ+6H3f/luXrBa7X6h9vcI
vhUMkqwBgn4J88/H3vlxHoTuHwfLFveI/hjXhULrhl6MPf2lr8y341S/q6BL
wn40JHwJ/gYJ94c2P4120RMdJ+f6/fK6eHfJe+R2sW6kXd7XPhb+j+9zPghn
hT0Va2/6nlro/vMP876CUW3sk//Ellzz4D/wsadiaMLvqbFHhXTbZHXo9niG
x21Y+PyqsDn10QcboFOafCU51e9tL9YYlWp81oi/iuJHJcFfDeyr+Clrd/pL
Xxkb3vemRd1zS23jZ0Nn5hB6Y7/zBH+meNwPc2+X8FxmHmNzznThbBfOfeKf
3n3T/d9uzvng/JAzS72WnB1rfnwcX89I9VgTG+YKVnb2WQycw8D1jmvd6YJV
nX2WAecYcO3mus11PUt9HST6Kv4Bm/A6jzVeM8ltLGgkeKSz9wWyJ7CGyqoz
9xPuC/1YGmtY1rINw/dW5dtfWdvXCP76ghRBcsLr+Y2xVj9efZ2r+/LeSmem
+6wozokaU+bzV7lugl8f+Y1dpWMPv59nbXMRa5ha3rdIH08v9f+0WYuzDr9R
dTb1lK92kE/Qd+JovnHShYKqGu9qgsvSfL/OP+P5fzF9wa7MJXRGX9b92Ba7
sp4YE/cjnAu0ravPwRhU6msC14ZbYn1C7Dw/1+3S5h35jnPf13esG886nniZ
4fnXLeZgrmCw4IyE+8s6jvMf2ZfB/gy+E0fmzfnuW8N4Bsi7DPa3EFd5dsf8
5XrSKuI262V8kXFmvJviT518/gtnv/BPkCdiHuH/3EtxH4KvPpjhM4guiusX
8wsdblP70/LdFu00CD/Hx7luEV+Js3xPzXmSnEN5MNaojCHr1NdUdpfg5wzv
l2WPbL9S2xD7sc57UD7ZOvZsoMsjMXf4XmZkrAmxJTYdG/bB3uh3quqcwjOZ
FLfLOZr4ELL49zz/oGc/LnzXtPF92PUxjv8Pc75Y6A==
           "]], 
          Polygon3DBox[CompressedData["
1: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
gU8S7b5E9yatE2wfOLWM6ZCuPuE2B+jcpvPaYcwfwuw9A71f8GugPfNNpW+l
aW+I3wjoAG/DTPrOLNiOfXeIrW0f+Hlfa5z2+fGw3/fbKksV3PXLWJnyiPOj
+h/xN3m5Vf5Q6iMERmtPCm/AyDB7dlcRrkXbMzw9u9Pzz7Qoe4anM5rOaoOo
n4PYC7NHLAIt2cu3iLdz8AI/K2p86fxTOMzmYc2/eXruW8bqXfV93OfSs5qb
w2zPqjVZ5/Lq/o5BP39nQO8OfOpnEZ37dpe1ejmjevT6uYc8ttXz7xh7Vn2O
ctyr5496Lq73CdD9FLRRX4eDZa3udI810c9wOsudg4Vl7R5S85HmJd1H6hy+
VecqP49rD6l9z+9hdr4v4vN7I2joZajqdwsN4NFwu1tp5+krnVMQFG3pSZf2
Uhdcp/Kt/MdCWZgHS2AxfA1Xy9r5U+fQYO0nw22N09q2N9z2ac+H2hjY5ns2
+cm+I8ze3Zjmc8UMnwc0H4z1OUT7au3nta/X/roovBdiZ2ydqTUXaz1fE2J3
ImPR2RVeg6HaK8fbnbru0h+Jt/dEZnlaer6iOBtC7N5E9yla97Sf175e6986
yrhcaz/rzTLdDcebTul6PN72Xk/6mqe1bwVxD4bYOq01t4vnZ6yPJ42zFK27
Pt5m6dkZfbmynj1g3+zPDVRGlXUT5tIQ85dbdwmb3K7yt/L3p4b6+1HDfPyO
8fL/Bf+oXyBbONzuDXV/GO/ni0M+v6zz/e1BOBBmd0c/hlk+ld8syCxq9149
YJTff7X2+3Ddi98fb31GfUdzjuYevQf0VAm759P93oPxFuc2c2XReLtH0n3S
VbgSZuesQl73Om/txO97jS3Pz604u3uXHsWvqjvnEpaG0nrUn508DY/F23th
TWPs7kTvYwxnLX4VhrN/bR9v/WZxiPUB9QW13aEQ22Nd87JoPKhdb3g+t8Df
nt/HvS88DO3gAP3kewglrWfrU2cp1DekQAY8mIwfZCXbs/6q5Wl7qA01oDSk
QxoUh0QIhXhIgGgoBeFQFnaQ5nbYCbv0/gJ+1cubXuk7U465ALMpnMI+nzw0
gPowJ8X8FNYLMxKqYa8HzeAeyIWakASpEOt5UNoxLteJensWGns6r2HvHmY6
lfaL4eanMMk08nyFYXbDvAX/wN1sZMlTT+gBL0AmMtmQBRnQHr9n4AFoAU/D
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
cT+F6T0Gvc/wFDwB4/T8HCbBuzlWx6rHZ328PVnO3q9o4fLSu8vnsp9c7w/u
pzCltd/9FPYfr2/lvR/8gt9hX3MOeR9QXxip/NWyMknvwRz7TWJ/L3sfj68y
7vV0VDb1xdvZ1ofVJ/VeXja0hBY6sybRBvA5fAHT/N7vNZiqu95Q+w2V3lnQ
uwtHQu330vrd9EE39dv8/e5uozUQKsEDyfbbJb3fOgVWhtjvnM7Ad6H2e6fv
3K3fYen3V82JUx6SdJZOtndBfgu1fCj9XaF2v697/p2h9jtD/X5Kv6NaHmpp
/BRi7znqncaB+A2C2fBNqI2LZbDEx8ca16G4q2EiTIYFLn8WHYfhFzgDN+E6
XIMb0J48doAKUC7Z7mVXQDfsz2teCLH3y/We+XR4I8S+KaHfbOm3W3Pha/gK
voT57if7PNgC38EqWOJyH8I0l7lIHi/Bn/BHqL1bO9zT0Tu2+lbHWPgc3gqx
vK73u2Pl+TnoAvW0Viebbn1b7CNP4zic8Do463r0fbcvXN9bbtd3K0aGmF7V
gcpeEUrSR0uF2e/K1MbfE7YZHtXe2pH9EXhMe3H1WfUDdN0PLbE/CL01l8Ec
+CzUfhP/hYe1gT4u8wK8GGp5VF57e9iLHtbr/5PrCV3hWegMXULt23hDYlkH
9I4Y9k89PaX7NUTjHxNr33qJxUyEJPdTWJybCosX/n6D3nNIgQSP8z/ZMPJY
NMTSkf4S+JWE0lAq1t7d1fvReida7/DqPfPnPd/Kr95TeQNGhNr7KgnUcyLE
h9lvEWXq98tJ7lY/uQG3vb/ot4kJHpbibaXf8pf2NosMs+8r6juLIWH2G6oy
LpcWZvWm+msP98I/rvsW/At/hVof/cfdr3teNU+Ncrvy/6b7qS+of+g54lPJ
9p0o9YdXQ+17Uf0wX4IB0DfUvjOh702Eev4GeBv39PANXnd6r1zvwK+GRbAA
vnVT7jEh9m2bXhmkAS9Bzwz7Dpq+hxZCXoJ1/4VfN3gOusAoGA0vwxswDF6D
wTAIhrtb/q/Dx7AAPoNZsC0tIKAI+nekmn876AwloYSn8zx09fQG6Hcf8AI8
C18rDB3PwlzsVRLs/XV9t0Hfa/iTPtSdfL8Af2Nvypx+SO9NuF4h+4uexizP
26cwx/1f8Hwr7FfYBQfQcxrzIvwBF+BPR/ZjhB+FS6T5BwSytw2CPfgdIfwX
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
rOdZ8YNcLtv92kTZexlp/rxafbZcgT231v2I7kW+0zyUyhyvMw95Oc+e/qkI
cw+A/gXm/1879IF+Bf/3jmau57eG5z8H6sB/CqyOChP3pTxbw7WWl42yOuqc
Z23TCbnKel6RZ3XSp8DS6Kb2ggM1mHsK7J0Fvbugdymn+DPyyf4MXO9vTvTx
qXGqdzo+ibJ3JEf6fDAEXa+j51XMXxhDw7AP1txD/gbm2XuiegdkcZS9LzqO
8BXMv+Mx36NOnsR/PSyDJzTXEOd9wkZr/JPH7p7nnppLMMfDDOzjMI9VMfmR
8AZMKLA+oL6QCYeDrE7Ker9T/3lRYx29K0m7IvuvHtKdZ7p7F1i4/HoVmNwr
BVaO/8AgGANvacxSvkl6zuh+EwssD9Oj7L2HaV6fY/GbRthhlYX0xtMHJsAS
WOzI/jr0h0XuJ3s/2MTYeF7PREmvDOvR49iX6P5A+8tos8tvM+HXWb/y8N+M
X23MFawXkegoqjQ5140vat+6GID83Zr2zYuXsR/Q+UzPAOm/99Y1t/wfjLU4
bxS1c6LOh+fD7Xyoc+KXmLuRbaYzAnHLoeOCzo/wKWGz4QntXZCpgsx+8ltV
97C4c/Q+D+7V6JwBn8MaeAr5xYRf1V0wedyN3x74EX6Ahz1cci8SP4u0fsP/
rM7nRS0tpfkdcW/kWzpK7yb29TVN7gPkLjJvpOteJNzyq3yfwP4QcRci/6ju
UKKtrvT9E30HRXVWmPhFIAjuEOfBuvZ7kKH17X2VVjpX6L4IczDuM8hsR+8e
2F/U5CSv35FEU2f9cP+Auz9mMeQTCjE3FbJ4kr+PdJpH2D2R7nsK0LtL95V6
tlLT4il+ht57rWlpKw8x6C5oaGFK4zZhmTpDMfZeyrdntPnoXwFFGCchsAn7
bvK5NtDyofSrEG8/fbgCZm5R6xvqI0XRXxN955Btg39b9S14yXVK18swkLQP
Eqc5cTrH2l5ee/ph+I+MtXr6Cffg+lZfklWcSPTnNrS6yNB7G+FWJ9qHaT+m
vZn2aOo378Na7z/l0LdA7YXZl/brgvwq3UcjfxD5ju6Wf7EY2/dp//eW7knq
my6NT43T96CmxhHynQgrHmPjSuNLY1FjUv4Kv0ud7sUdST1O8T6ZjLlKewPW
sfmh1tdX6i5KYxfZQqq/CPueur6r/ie0oV0eYb6YR/jkUjYvdPczp+aEJwps
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
5bLg/wCJ6hAA
           "]], Polygon3DBox[CompressedData["
1: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
/hFNcDYe5YxGzLfUuSNj3ZrMN0QIRqaw44OOCfX4fImxejzq9j/GFbeYT8Qy
L+KMYf+MRur0di/mO+ED+K45muFGlPnKen6sfybKwuQlfBQeE8cr5GM+ATYz
v1bnZ8zHwV7axwvC1yauX5nO4XMJlpdEBCqhHJqzThmmHo4LXsivYx390xcU
YHma9HavJgPTUGREeqTDHfKUkLx9I4+3me9KWrVZ3hBd0Q1dcJT0D+Iwjuk4
hnYujMJ2Rw90YP1kCEQndHTTWKRAyv9vWRCeE8/TFPZ9StZPhW86V2AMnSK9
lb/qoQ7TUuiMYeiGe+S3C9OhKS38yjR2j0z1oXX7q53FsbHxLIxQ3ljejzL6
W/eKmE+iuqO9fYWHMN+ZfkNRlhdJb+WXFoXTW/5U3zGu/AqqLGk/QQjEWB0n
SSMamZLSryIn89lRGiVRBjsJ9xYf1D9ofIL3+AcxfF+JuMqhCPNFEapt9WHf
QSbm0yGVKzuVYVIkV1vmcytcxymcwwqWr8ImbMSGlFaHh3ADN3EthdWX6i0u
4rg472v8jQs4j4uuHDUWHc33Y1NamSrubdiOrS6diujHNnREJebLYyn1s9zV
k+rrP+p5AMuv4Q7OoT9eEX8GxnO/M38KeZJZuJ64i+tuHS/O273hg0e6xpDF
1jmtfRxn3PpDkJ52cIXpZe3PaEW+CiMbCqEFHtCekrIvfGdf+JP5PYRLy/I8
TPO58CFJLP2r2r9x0+Xlk6vPHHzfwZu+Bp1pH1VQCu3d/hEnhfXf92hjp9mu
2ED6ZfWJ7NuvmT7HWwwkDxNL2n0W3TfR/ZP9LN+NXdiHvcntuoGuSZRWH4Am
WMfybdiCrViLNixvjbbumoWu5ei+xETd2yGdMoXsHsVCwi7AbCzFEqwg7BRM
RyedZ6AyKqI92qEDZro+V33vNExWeowrC5e0dP6XHmmsTm55VL7WYJXSIuxy
DEN/nTtwHA2nf8+E/IhCLvzOuOYO4jOfQONI5oOYJsNBxhGHdb1F4x2WT8ph
5yxz3Niov4t/CEain7aBMUx5jGV+PH5JZ9dXUyID0ue0a61dqJ9OKEq7zI8Z
5HkK02LBtkzfdcQklk/FZJ1T0eb+i2PnfzqvTEw8iTTWQBx3zqNzn3gIcNug
bQnUuILwSd02ap0k2JrDba/2V8SDL5LpHIZy3sa4by2GMb8pN2NRrOPzHxzf
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
vMLsmwXYhgjGuUybxdrzc/VdWaot1UU510epTiuhrPob4n2jd0ORxlLmp9NG
pqB1oD33eAptA+1ZcN1DXUXeaoZbOzlPGe6njA/gAvPn9Ow+cZwmvrrEl4j5
6/HsXXmzMQeL4tl78zKSdgY9E4YUSK17G8nt3Tl6h86vGKXxFWHDvew3M6eZ
P4m0pJ0OCZEIKV3/qH6yDmqjERaR78VYivnoH2jfKUzdcLuvr760OIqGWz9Y
133fAPVdPA0RhBMcj89jssbuut6RmLapOnHbom3KjCO6phdo6Q/Q/qz+3qWv
fMxDP5c3hVHYLuiJQJeW0myM5Orj9SxUqLU9tcGmeOj6zqd4hse4xH59BZdx
Br/rGgPrdEFndEJH9EQPtEJ3952eKbum61jYh0tJLe/Kdy8MdNvRjrAXyEtp
0mvDfGs0Zwz4k65VoCme5OPYRtpL3fUJXaeYrmsPOv/ABeLJzDRC54eU4TuO
fadI7ySOa1xEnKuVP9L5CWtUDjp/QQ5kR7Zgex+z3ss8EsMwws/OVRMiAP5I
ovMrJHXrK55g9CHOfuiPvuiN1CwviMLB9j5gvRdY8Z125RnXxZ0ZES5OxZ1F
4+0gS0tpJtY5YJC91ysSOXVeGWzv+OpGOr/iZwzE8HA7lun4Fc33MXgRZMem
M66cVF5HsZywv9Evb9JzVeqrwu25udlMZ2FmuN1TTkk5pEAupEYq5GT/yUNc
uXUc1vHByz4HBtk1t4Tuu7Euf3MxB+PxnfDXcdqNA7+5sZ2Om7+5Y46OMxqD
ZHDXe3Xd91tcuyeue+Nt2ZfzMObLjSxBtl3avrMIYr4T+R6s91alt+0oxOeN
2kexFhuwHl+J84uuzfvZvQydK+2hzezCTuzFbt23YnleP3s/i97TUhT5SacQ
CqMIooLsGqKuJYYgDdLp2hlpt0YjtAm19LOyPJtrs8q7tiGSOHMjrStnlbfC
ap222OTy/UeQ7ZvaH0/iIkpRz+VQFmVQGnVQ0y3X9yV0DYOwW9z1MV0nWx9k
197mYy4euOtwJ138p3Acv+FHyrYlmqMFmqK+i2uLuw43wMW5AeuwBg2xEasV
R5CNJzS+H8G2bHP9SVfXdjcFWR7Xu/V0DXQ7y3eEW3i18QHhdq/hijtH0bnK
ZV33ctcidE0iByrjNn1HJMeOQ/qtP/Pt49o+pf05Hg6oznQdguU3cDWuvRPj
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
tZr62sDUhzrMSV1ei7H/HtF/kIzX++aoszIohZzIEs/+J0v/Faz/B/ZDAjSn
HDujqY69aIIdxOsXbf2O+p8dpFWTuqqF/tovs9j/zPVjvge6uP2ur97BT//7
ibwUIy/ezD8kLzfUtnAV13EljvUBr0njPWnsdv2Bpvr8iuVbmG+dwvqmx7ij
fs/1U9MwNY79N/pYTEF30u6Grq59qZ2tVxmhiOsn1F/oP20b8l199Mxq/2/7
N8eCd/gHr/HIY3E1cG23k4vXj+2JZru8Ym07tW3vCfsRH3TcxXO00T23AHvW
T+MqjaWGsz0Ho+03wMOYj0u/kZy29Yn29hEp9Fw9xrL+eEzn2JSM5YFowmcf
pnHwgeWNPfbfyfoP5VIogxKZ7R1VF8lbb/L4pYC9r+oHF0Zhy6MchmW29bXO
UAzBAPRTH4T+6IODeq8I6QUgPvzRm+Vt0BY90QvFUQxFUQTZ3DJN37rnuqMy
2zvY+pG3G+QxXkF7R1scprdibbm+17vaHpDuJ9K6h2/4k8+zI2xblH/9V6T+
M9JD+D6sd4X1P3CMys669fkuH/KjGqpktjAKm4Pvv1Mul2OtzlR3fhoDMP1X
dY6u6IQu6IxfKPPKqIIxGKHf2VBPqRDhnqHWs9TXiee2xja4g4uor3fOleA4
VNjeWax3F+s5Iz1b1BldsQQL6IvmYC4WYixesvw5XqCYxlEe+05hFmESxqM7
29fD1UU3dM1saSnNwqTd2L0rOVZtRmN2EKWHXdQzl5lZmIFxmIN87rOWz0YO
1T9t/68s9t8a+o8NXx2TWf43HuAn4mqPAqQVQJqjCtt/0eo/aRvwuZ/73wD9
f4D+WyCIPAYjKZIhUO2Q9b8S12imwzAYT6ir07E2ttMYT+PBNwVsvHqK5a+Z
r8Cyu66dTPGyfedX7S+km5X0luSy/6/V/9gqjMJ+xEOPtat/iSeNe/e63sGu
99Evzmz/Z7gIS7AATQn7o/ZtDMJAj/3nuP5nvAZqYjw+EV964plKfBmZDlG6
LPuXwp+by957rvefdyLsiMz2ewr9rqIj85/Znr9j7Z1zevdc89S2H/6S2f5D
dKTbXxMSxz3C9S9s7zPUew2fsD88Rkq+D0VGpENyPI+w77VM2/om1t5Fn8Jt
tx/TARobsDwp8wWIrzlhB2G461+a4UYBS/Mu4RIQbj/tL423XQOa6WXtKRXz
01xZqEz0P/K/ujIqhMyoheqoRBnWQC3URnVUZnnVzLava5+fGWF5GOD6pKGu
31Jf+N3ta9rn1C/q/+pro15m6we073sTzsvb+s/WxN8KHL49FK2nosfyUNJj
/1W6ne3qxPZdKGD/W9qV+T+ZD6GN3Wd6gO/fMj0Wa+dXOs/6IbttZ3WXdl23
zTWJ09vta9rnqnmsnHTNLIvbt1RmZVz6ldz2K5zSVNqHSOcO8ylIY3M+O/b7
cgzZxPwqjmVfWD+ha8tq0+/VR5NGBmRESiTHKMpwARZiKeZE2DZqW7eRxnnm
57O93dhnprr/itB/Ruh/Jzj989AcdLnAw2bp1Xie33Bc+yeeub5zGnl6wfn1
OvI4nfmDXvYsSJjLSzAiWZZBy73sGeUwpEdyRHjZ7xczIdjL3sVzHL/p3TzY
msnuqT4NJ81wu0+r+6sJPf97jZB+bve/8tZrhVKwLSlREMVQNJv99rQJGuve
Z5j9DlXr6DHvxEiiPgNFdZ7KtBQoDk9hPudy/aDqLRtyIrebz657MF62bemQ
wuU/LUJ0vCTtyGz2f9b6D2f9b3O42079PlPvENR90RYsr4Wa7vxS55nn6KT3
57f3Peq9j3qXZEnWa4DKqOKuvzRz1ztqRdj/tP8YYXHVQ120RA2Nf0knt+oB
OTSG12+oitv7DfVOw5n5rP70bl1duzhN+qfy27t3WxHnT+gUYdcwdN1C5a7X
qcd15ajyfEQ/9xvrHWa9u3pfbJH/HXo9DHk8xV39q84DEYQErg0n9bL8KF+6
z6V7W3+o3Ml3f+RCZmTJZu/YvBRj777UOzD1vk0dJx/ikdf//r7rf8fMGMLG
IhrFUUL9FZUc4mPvdNO73fQerwQl7P/O9R/nBQva8Uv/3dQebdHM2/7Habw7
To7BSIxFDOHH6JhWwvoI9RU7Wb4BqzW2wCn8Utj+j0H/y1CZaTjh97P8HM7i
NM54WVkdZ3oC51HAY8f5CdiAjViva0+YgZmYhdnZ7NrzFEzGdHd++8H1C+of
2nps7DiZsFMxRetgItqxfdXdtmqbS3pbX6Fr2suxDEsibNwx2a0zwY1BtP2x
ZPwE5VeMaTK2LYb1i6AnOqOTrm+y/lzX/yx18WWg/MOQEaE+Vj9699lgd21U
10iHaIxMOt/xXza7bvk+m/1Hu/6rvTfjkl/xL/N7dP7Pd12wl/ndWe2dnXp3
5xva+hSd61IWUcjvZdfSaEKefBoPEvYj3uINXme1OlPdZWKbqrn/09iTzd4f
vENpYLfmiWcztmA7tuEqy6+5a8G6JnwHJ13dHnf9n36bsdnV69Zs9t9NW3AC
RxQex3FM37v4lc5abMIuL1u+ybU5tb3ibFAQeW6i69fMx9U7sj127X0HtmKz
9l1d5+C8sDKKBtjzgroucQ5n3XUdXaPol9/+m2QS8fVlfg/x9eV8fICvPTep
59X1jLqeb5nK8ekmZV0typ51ucF8BeZ/1XuUONiN5/uxxNOTeB4TTw+m6Qvb
e/kUdgLfV4qyd/TdDGWbdA9Z9/hwA6dpC+vc74X1G+Hz3vbbdv0GfrOeFcIO
RLE9+ZEXuZENudwYfwWWuuPaVSo+K2nu1/Mz+ez3cUPYlsEY42vnraOZJiNP
DaPtXWN6l5beqaVnY5qy7BzLgqPsOZm6TKdH2zM/tZnPndDeVaB3FuzHPtxC
atprQiRAa6TKYueyega1DEr52nmtylHlOZk4qzIfpufb2L45mIXpaINxdBR9
OZY3oSzHMv+CttuW8PdZdxXrto+y3xK2YHqXZUtY1pz57izrUsCeP2rB+j2Y
j9IxhO+WRlvYlsx3Jdwe8h2P46a/nilkfjl+w/FQe2+0L06G2nMAhUPtvQJ6
h7neZR5AvN6xdv6sd6g8zcA2UicZUC7A/htd/5Heme3u6La/tH4P42vboG0Z
pd9tMV0Zbb+JfMDyDcy3irLfR+pzG7ed2t710fac7TH85p7v1jO3Z8jXKZd3
5fea8kz5x+p6FDqgC2aS9ixMxng9G4zrtJEI4t1XyH5Pqd9Qxo+2aya6TqJr
abqmVsVdQ6yMWMRgCHEOwgosw9Isdk03cbRdB93nru9WoA8sj391vo8fmI9i
3+lF+TWm/H6h/J5Rv8tZv5uuw2CMi0/XB5u7a8d1+DyU6WT2sQUx9v9Y+u8t
/QfXDL6bjtmYizlY4M59dQ5MN+dZhIPkKY3Kkfyd0DiBMghgm98z/Yr/4M/n
M7oWjNXEsxZ3str9lHhxrb9Tv9fMY/v9cvKSibzMcn3Amiy2nta/hdtZbV/U
PpmZtG8w/yPxjGC7H/HdHcaCT5k+zmrLGhJXV8pmmPt+mdvHdf7eE3M0Lsln
zyPkJb6HzN8hvvnkfYGvPQuuvmweDup/B1x6SjdntL13KxoN0QgNIqzu1QbC
o60PUb+hdjIFs92z0Wozo3W+St4akcdRzD8hf0cIH8R6O1n/MPPHfe1+3SEc
xomsdu9OZXFF19Yom+5ZrFx0D2pzVrsXoXsSuh/ly3evOfYlYdoGP+Esy89l
td+E6bdh5xV/PkszWbTVq+pyHWWz1mP3ZHX/Rvds3nnbezyu47a3/c5+KO3X
C3EwED9jJEahPqpjBNKy33WKtndfRug+RDy7N7WBNrxe99OxDsnoQxIhMZIi
SZi1yVu4idOYhj7uPVJ6T1Ik+ia2ONb62L2lSl4WX1/Kti5l3Iay7sN88wh7
X8UWvPay6yl6d4XerdMxzN5Ro3fV6B08i9j/F2M+5mFhqOV1o49dH1rFdAW2
s3w39oZaX7jFfdbybaH2P+X6b3K9C1fvR3nnyk7vKtB15Wfe9i43vdPtibfF
r3RUNo287H78NNafFGrPHE/FFLykHJ7p3g2e4DmGsJ3z2M4iGgcybcq2HyTO
fd52HqLnOfVc509h9t89+g+f1mgVZu/i0fvJmoXZe3r0XqgPlOtHfMJ7/Ivm
YfZ+nTAXTuEvs/wKbuIlPuMwDuEYDuAImtIWmqMNWmEctrH8KH7Dcb2TCVHE
2Q0dwuy9VXofsdJtiiPMHwu19/ssZv0FAfaO8iVYFGDvTuri6rGDi0fvbH+F
N3ibxd7ffpt07rj3MOl9TE/c+5l2YSe2uHc1PcNrPcuIt3qvUmJ7t5Pe8fQz
5mEx2pNOPXQKszwo3Z8S2zvU9FvY3u6dWPddnanu/sbTLDYGOBBq74k75MYD
+j8J/a/ECizHNt2zZ3l1DMNw9EQJ9qdr7Fcj2L8KMl+cMVJL4myl4xbl0QHN
dAwItfe36D0uendPD/RlnTucm0XH55yVdS8XsnAjMVTtl7Bb0IO0u2ARFmMJ
vvD9e3zDR3zQ8Z04rhLHYOKNYj6SvLSLtneR6v2jeo+r3ufaOtrex6p3sOrd
pHpHqdYr4vKv7RgYbb8/q4fj2ID1aITGOOJtbfswsup/10LtP0D0XyBZ9J8P
sdbPqm/VsVHHyNGEKYUKKI8xodbfq4/vg4Fu29JxXO0dbeWhd7Lr3eyTqbuF
WKT6x3g3XYkVmOiW5fW1d56MYpoICbCV5esxD3MxNbGNXde6PkZ9zfpQe6fh
OvTj+/6oh5bUXwus1b6iez0B1n7Uju7hzyz2/wTdXZ2qbiND7T2LeldStGsn
+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
AjPcj4vmWqxCMYsvembxOQJ/AfMOyQU=
           "]], Polygon3DBox[CompressedData["

1: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
wsLaqY3FOl3krStNacXX8vgNu+OcZEutdI7HufYvJ9nHflRlIpM4kSmcwmRO
bp3Wi/lTuYAL+Vu9HCC8qHXK19e5bS/M+4h9RR5a0JoavCMvX7GzVirbjpyv
yN922muP53MeHZmnX2srHKKNXsF0LuXKuLZEP2b5gZa3oHW05X3S+o0s2ypc
ILyXu7mLM8xrLyxLOSZzIY+YvziuC/rxpdJ8WNteZLq7PPeiN33oSbe4ltlm
AFO4jBk5b20sa0fbUqkPr57L/rayfcB7PMcz0Wcz3762uIY80SWVNco8v2sa
R7SN+qM1bfK4ooprzU/Gtxdb52fhdmPcN5qnvvg3abzj2jNDvFy31Gefra88
ky3ysJm/OCv6XstOoie9mMQa4/aFzp/zpP2RtLdJ+yD1sVH7am+Q2Y42dM1j
nrbi/xamsXF54Rb+4W828Rd/8jMb+J0F8vaZPP4pr58L55seZt9XWnYFl3MV
lzGT55RtDKO4hOksY3thuneLMXnkYSdbC9O9+Wg+5UNWcz6rXIfWsM41aBtT
7PNkGihDE1pQm1pUpzJb455YWI2qVKGMfVQsTOVdme8NSor3iHqpk+okxoRD
hUdQ2rJX831E3E+8xsv0yWN71VAwkO7W61qY0oi0utAt0qIzTynzs7nsM3mG
JTymDE+zhOU8xzJ+ZgPr+Do/Y/mGDtLqREcK5bNzrXRMn5fWqZzSPJ2XcX4u
F79Vnm7ham6jPe14WTt5Xd/fUiFWCF8y/d4B2prxywmM5yROZ2qJ9JwjnncM
YVi+t4l7nIrxPILyDJdupXguwRX5nmXfImmdKpThfu1xhHI05iCVN7ldQUE/
4av5mdJLvBL3mLwcz2bsuwY1aUZzmtCYevSmD23oxUX2OY0LuJATmcBlTM/3
UJG3K5mRy3QgTuGCURyey/i5c+kzPmE5L/BapbQ81huR70vi/uS4XB/Dcjzm
Dcht4x/1+pf67aqeNwv/Nv2OHb7NUhv9Z/or195VplfyhTr8jI/5lnX8UJie
Hf0k/DGfi3FORp73xs29cv8h/I3f496Wq50rn/EJX1vlGOtfKf6M+h4lY5/a
+DHTuxlterd89JDHbfJYqN/4QZ4+kZ/ZjsEcbm6ZniXGM8DrGeDc6s7I2ukZ
SDyzimcGcR7/m/uQ3VSONsFDjvso+5rIEPs7Uz4Oiz7T/FOrqwP2N/2nhlY7
8qMMO9jCVnayi/X6180x7tFX/yr8nXVxvYmxQFzn6a6PPUt4Ct3E3xC+zSrO
bJWW1bN9fRqy0/bbOTCuK/rXf9XnrhJpTL/XdHnGu/4fn8eQrfJYNJ4dfaZu
D1O+gQygXxy7XN9R718WpOdA8TxoKE86B56Ie798bOIYzaqc9h/52MVe9vAf
6+17Jzt4K+6r2co/tvlOP/gNP4tv4G/GKMNoRnE0x3JM3FM4Nvd1TPdspdhg
+idusc2jPMJ9LGYOf9jHr5xROl2D4pozhrkt0rOSeDayrpE8cHOL9Mwqnk0N
aJnu6boaU3SLcYnrw4eO5zidRcX+yuZ4/yWdKuaPMe8Dy8YKK5v+0vxfHZsi
titoncZ3h+dnApPz9b4nPZjIJIqzJd8D7tgnPTwpyhO2WUQrx/9B4SM8zq64
llPCGGalcEWu24XK/DC/ysNGBqrXRaYP0rf2o2+ddA3tmvvzF23f2Hb12JfK
/GTewHytGVAn9dXt8rZDHPsxjOId2RwtPDTPO4Qd5u1ibF7nSNscxSAG52tJ
XFMe1Kc/wHzmcAuL2JzP/+gHNsWzB/7iccse5qG41nA/C/lMXazlc55lGZ+2
Sn3mRvufXpieCcQzjVrxHDZfsy5lGi/zCuc79mdzJudRhhJ8qO6+4MoK+qzy
6dr9Dk0cj30OMl9fU0zYzvS99ttSeLl5e11YW4hP0z89ZP4WtsZybWp/1on/
1ipdn4/h6FxPR+brdX95Pjifh3E+9uWgwpTHA/I9+3jxs3KeGxZPz+LimVxT
YRPqst0+9uRnUHG/cTD/sVJazxSmdT+2zWsxPihMY+nNOW+/8xd/UqiPmMTJ
RVMfMjI/wz9DH3uSsh6nzCcKzzXd1rm0QRl+4edoY/zIT9GOYtzlXLnQudI2
xof65xZl1akLw1vMqqevph1HsNy857hB/Dqur5fWede5v4p3eI8VLGNlOf0k
QxyrX9hQPh272XnbaziEQbTlMq5gvX18zjJmmn7Odit5kiW8xlkVUt7by3dz
eV6vzG3EL1KWUzlQvIj7rrrCU0yvieuCcIzpRvJ0tPBu09+av0R4uumR2tJU
4ZOmfzT/RGEV/UsR9bLV+VvDstXmnypcbNk68UeFU0xf5TreV3iN6bXmXy3s
bbq/vH1huo94H/F9pdVD/HLLFzFR/GzbniR8wPT31p2gzB9EvbKK93mP27id
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
wqmczGT+D5AP75A=
           "]], Polygon3DBox[CompressedData["
1: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
soYLKa+jANfU/w/kQSUb
           "]], Polygon3DBox[CompressedData["
1:eJwt1nlw0MUZxvEtBJDLC0oVShScYCFIuBISDg805RABrYhAYRTakVtIrDoS
JYkKAQPY4axQz3AJ4gFtkalBIBwFRDGJJ5cQU+QQKFALgbafnfDHM+/73X33
3d1393e0GPn4AxNrhBB+T1fROx1DWNUthAfTQ/isRwjlKSGU0iC8F09rE0IB
JYnZkRZCT20v4LvY7TiXn08b+S3E5PHv1LcF34ITO4XwNzZXvm+1fyN3xU3i
8D5cckMI6yj/xhBuSA1hQNcQpvDzqAl+3djNxmyjtsa8gRtZ81Zjk3Fr+QvY
g7hhwxCadw+hf+cQTmeE0ACPuD6EmnJO1tZW33A8mLLwbXi5fJ/KvYd+Lc8y
PEH+T+TrjYu6hNCtrXb9b2lbil8Uc6J9CG/i5uZfi3Pi/lKq97cOP4u/1p8t
1xjzdTTXs+a8ylrG45ViBojJZ4uM+UtSCEvkft2YnXK/xi7GC2JbSnXMn7Ut
xLnGbBSzBBd0q17byih90/F/9K3QtxpPoUX65tMCbTn4GTHPiZmPO7YKoTP9
XPukOOY269LfBE+O+705hDXW/E9nsYxfRJ/by3d4tfapHeQVf1L83mb2YZ6/
GncCz9fe1SXLoHTqRglq0Iy9oG43snO7XRlDlcbMw1PkXCvH93iO+WZRHj1H
hfSVuWezX7Nb3ZPNVGhNnfEW/kYqpjQ8MTGEx6mIP5mdRHOteymewC++1Xzu
6kNqMIjGOIextEh7jvaMzBAeFv+ruF85V9Hb1BrPMGeVe3azmFb8R+xt8nXm
oCQ8AufLlUeH5bg/Pi/8qZRFD+Cd9vGBvnPyfWPMNvwlewaX8MfVdl9oLO1T
s0r1GcMvNu9+XMuzs9c8jxrTkN9Jrs9xA34N+uIXaoSH6C/jl9M2XMzupdxG
zo+KtPURs4ifGOuDF/KX0FLqr+89bS31LcMD8Pv45XbeEfQ05dAcauXclrC3
soPFtPccptNP1jwE32JsB9ySfcU+j7s3S9gX2KmURy/SNPpvPedsXHPjLvMv
0EVKxAnGzzfukLgjdJgW4O/Yg/Eu6j+qzkda66MZ6n2MnckeZSv1PSou15ih
7BB6hNYYNzWuJ76L8Ez2Jfye9hz8BE3HBdofdhcGUn3cC/fn92Yb4MH8jxPU
mjbSJlrvzD5iP4zvRXaUmD7irxH/jPz34SfZ2rgfv6ypM6SV2qZoyxXb3fwr
8NP4XC3vHdpHu+Q8w56ltWq2G7/qXfsabRN7mH3T+O38PcYfxBvFTXSfDlCl
+C14Av+oe3YAb5dra5wDF+N39Jfg/XgLrsFWqmVLz+ssdT3JP0Q3xe8EzqL0
K89WfMaews30ZfCbsuutp9Q9r7Ceuvp+iO8XOoAvWucaZ/QuraWR+j9gTxkz
it/Y+A3ueBdc6T6MNuYjvJ4qcJr2Lu5qBi3ETXAa/3Zxf8SNcap3expd565O
iO9H/nj2WnyvvaU08F4Re7Ux7fkV9p+Kr8HJOJPuiLlxT/6dUfge9m7qZ719
aYD11pf3Xn5tNhMfMH86zqAR1E9bXX19+Ans3biD9XSkthSsKZmtybZn21Gh
2B/kGSL2Jf5MOoaH4mvlOGm9s6xjDs2mPtZWyDa13l5xH2IT1KQHno0b4URc
h/I6V9/blfS+s14h1yr+avbvnarv87/cof1URkfpNH3q3M6wn7FPiSkSu1st
n+S/YexS/AlOxQ18hybxh8Z3vfXO8B1YaH3D8Mu4vv7x+gfhgpTq/gn4ITxL
/zj+NG2TnPlvtI3F9Ywp1PcgLjXfl94Xl+N/g/2U4324jBrG/atTrRbqQXWp
MS5Rgzr8BEqmVrFf+w7tSfxTapWId+H98pylJnIF7eXxHRXXgEv5GeK7UJL4
c/pT+WkxZ3wu2P7xfyKleg8F1twX/874BHuY2aO6nrGuO2i9ei425z/4b7F7
8Ltq+bY6LqNS49bg5fa4HJfFb4V3Rz9x49mxNI5G0yi6T3tKsj1SG+pNP1pX
H/YUm8mOriMHbZPzhNyn5XwMb8cncdf4vVH7UjpGP9r3Xna8vR7nN/eNT6Tz
xl2K98C4X+JzuAr/2xp2e94v0090nqro6lhf9nnf0jzKppHxG2D8QN/b/7GP
4YbekfdYQxX/onkvUD1tl3B2fM79Yx1S24N0SD1n4w3xuTb34fge8r+aRr3p
FXO20daLn0mLcbvk6hrFWhzHv9V/u/l7xH/A+HzKU8yfK2+FviPmOUzz8Pe4
u77uxval0+KHa7uDP4w9hp8wz9r4n4H/wG8qfh3O5mfRUFziWzqMTXM3NvNX
UK74VLydPzzOwd/B30ojcA+cL+Z+ZzWZzlpnNnuOHcVm0cA61TU7rVaX2DNs
FTudpl2p5VfOYIP6XnJOX/DL4/9JPC9cxiaodU26K/7DGD9JzWvhnvg83vQz
/xTOap55S+K/PP4Tno8/5nfQtss+99nzJvZD2kkDrP1bbf8HCMk1jw==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt1Xt0z3Ucx/EPsTVsCDGdsO1MLqVptmHWTciQ4zJpSK3rKUdNU6aL0lFy
uitTCcklW+hy6mSl5BKVoc7K6mizslTn5NjWiW7q8T2//nie9+v1/tzen8v3
90spumPi7JYhhOFIQPb5IWTilrwQWueEMIhORRpyEC+3tW8I0/uFsD47hLNy
QyikZyDLmC1y72lP6hRCezw6KITBw0LoQLdDx6EhLJZLpEcZk2D8cmP6GDuS
b8O/wPflR/DT0Elug1xGXmydaL0B9Fq5DtpOtAnh0JAQupq3mf4OtWjCN+gi
f4Ux81BpzH3iucZ9QJfQc3A5EtvaH+LUm2JMS7o9ktAO6XKpZ4bQE6czQ6iy
Zg/6XPzLp4i9cGePEIrxsXkqskJYZs8l/Ha+nH+e350cwnXiYP4p+V38E2IW
P1N+B9/QS410K3V+r62Gr8Y2udZyP8h9a3/L8QK+xplqrBYPR159nfmv9f87
xTmmumDnlmtsXpo1u5sL2fxElz8Z01GIUmxEMRbbW4G4yRm9iJU4aMz5znAj
XYHR5q2Wu9/+b44PoQhx1j6ghifkbuWPm2eWuEzu/Rb2hhX0S/J7zFXJ7xCf
yYy1l2l7lv6I/hDbsJTfmRsbe9RZbXAea/AcluJHuWrnspZej376lqtvlPq+
VN8FubF6o7pHyh2Qu7Sd+8dP1rtYzV2Mv4TvLObxx+QzertXfQeJF+GUMy3m
B9KZuBD56SGMRbx5R2kbR4/HVbgSl8k9JC5Eoj6T+QbzDBzhjfFT+GN8DZrd
1z/Wz5E7NDR2d9EdnpYbLDenYwgPYgFKcLM6T6vzTroYN/LZ+mdhn/GpxjQa
m2GtKj6Nb+LH0PO9tfvoTs5uHP8Qf2+EXMes2Hcbfb9D+SXmPUuftnwO/wjf
gd9uvoXOdAFSnfEOvpS+EBl4GPe3sg5eVedG93hAv+7qWcuX8wf5a53NEIzC
TEzAOHNdJ9Zb56rs2BzRXOuN22TcTfSNeAAV/Dr53e5+P6rwKZrs403j99K7
cIJPT/S7gyb9J9pHb/o8pGE83yg/xT7PMW4lP5aeiquxih9h/wX0Et/QVPMt
Fh/DbP2v4efS92ARUu0zWX6FccOHxeaNxnaXezn6fZI71NU3xe/hC/mv+Gpc
ENUtN03ufXv8ApX2WeO8XqfL8Tb/mrgVO6PfDPcej1+MOduZfSIXxx+L7pn/
0+/DHziFv3AS3azxu1hj38n0W2JT6xDeEfeb/3vrNfONqKc/kzvczbzeyu/6
F5u7Jd0KJ/l48TvtaweEMEn/Pv47XqHX4FX05Uu9+9X0rDjvGHdgJo6Y+y5x
u7Xr6dvoe84J4W4scrYlYiketa9H+Hn0XKzsGUIddsit0naE3knXi3vFNeI6
601WTz/rz8+L1RfVUCDXX+5euRZ0vf+xX/G48zou1nmDtWigF8oVuddP7XF3
f2fJX2/cJ/QuXG78n3Jd6VpxgrbudDIytdXJdaPPxmZz9FPbFvEaNfeny+kK
vIFN+Dn6ndL3smhujEGjXL6Yh8K82NzRGtnmP6qtQK4Hn8M38FP+r280n2Sf
t/Gl/tPz+fb87Xmx2p9UQ52zrMfTdJl63nW3tfzb4lI+X01JYil/Az0WCfx4
sQijk2PfVvSNNbvDSd5DT31T+d/4yXwvfrVv4CkswIMow2ZtY7Stoivo4A3F
4yDdVmyDBPzr29gnN1CNVe51P/ZhmzpWyH1Of4ZKfo+41B0vxzKk2O9zYhnm
2Xc6/2z0Lq35Ip7HFnOnmGcdvQIb+JfE6fY2FVcjMXp70e8ofQY9MrpD1Hmz
M7zZudG7RR0a5GrF2fjZmf8H842FPg==
           "]], Polygon3DBox[CompressedData["

1:eJwVkT0sQ1EYhl8dSLQpuig1MAhtSTq0Ev0Ri0QkFlOJtM3tRusvBompbYIQ
wWAmolgoGwPxs2BqVKMkIjFXbGbPHZ487/ed75yTe0+HMTs2Y5Fkh3qwtmKI
BKRaPIjr8E5YCpHvWqQv+O2X1m3SkF/awCN4G2/BJriYH6ZX6ZOuPdJoRHon
+0LSM/UVXMIHvRs8jd86JSdzKfJfUHqlfoJHSNOr4CkHszABc5xvYW6SvEQ2
sI97l8nnzBbgDKrMxNjv4OwL6jj5FCdwo1OqAQvYoMzeJGc0kA1coraTU3i1
SVqBLGQgB2n6HubWyG6cb5b24AS83HvPepT+MfUt+Qg/4BfODLP+Q06zXqSu
kufxJ17AJXPGKvkhAF76A7gHB/E3b9BLtrH/0HwjiPFGuziJ83ifNYO8yF0H
1HEX30DO0CuwlqAehyhk6Rk4h93t/H/swW3QDUXzf5jnsr+Lukz+Bw4NWhQ=

           "]], Polygon3DBox[CompressedData["
1:eJwNkD1vgWEUhu9YiJo0ESqCuTbfVZZ3UDYWE0FfHQz8CIndJpH6E42krI1N
4g9Y28RnkwqRaso13DnXdc7zPCd5gvV2sWWRZCU3JPMgHd1S61H6jkhp/IAb
1F/c5pHO+A/cpFe+kwrER4yo9ELPBefhErXPOznYf8/bKe7FpCc4S/ZwJS0F
4BL1C09wxiC3IalB70IvBCeIPc5dZk7YZPbP7C8gzciBHW/s/oAX7DzhI3yO
f+IOzg7odb1Sh7zCY/pbuMe5IT7BN/g79ZkPWYWZs8+Ep0lpje/wGr6hLvEq
fAVPIjp5
           "]]},
         Annotation[#, "Charting`Private`Tag$4926221#1"]& ]],
       Lighting->"Neutral"]}, {}, {}, {}, {}}, 
    {GrayLevel[0], 
     Line3DBox[{14755, 1148, 17213, 14513, 15870, 15307, 14752, 13219, 17073, 
      14496, 17072, 17627, 17070, 14491, 17071, 13217, 15306, 15304, 17206, 
      15860, 17207, 13213, 17208, 13215, 17088, 15863, 17209, 14754, 15310, 
      15866, 15864, 17210, 13222, 15872, 14514, 15871, 15313, 17212, 13226, 
      14756, 17690, 15311, 13225, 14755},
      VertexColors->None], 
     Line3DBox[{14759, 1191, 17215, 15874, 17216, 13232, 15317, 1195, 14764, 
      17689, 17080, 14500, 17078, 14499, 17077, 17691, 15881, 15882, 17219, 
      15319, 17218, 15880, 17090, 14763, 17221, 15888, 17091, 15321, 15885, 
      14518, 17220, 14762, 15318, 13236, 14761, 1190, 15315, 13230, 14759},
      VertexColors->None], 
     Line3DBox[{14770, 1522, 14773, 13262, 17095, 14775, 15902, 15903, 14768, 
      15328, 17082, 17083, 14501, 17081, 14502, 17085, 14506, 17086, 13261, 
      14772, 1486, 17227, 15894, 17226, 13252, 17092, 13247, 17223, 15889, 
      17222, 15322, 15324, 15893, 15891, 17224, 13248, 15899, 14522, 15898, 
      13257, 17093, 15897, 14770},
      VertexColors->None], 
     Line3DBox[{14779, 1580, 17232, 15907, 17231, 13267, 17230, 13265, 17229, 
      15904, 17096, 15331, 14747, 15854, 15855, 15856, 13209, 15858, 14510, 
      15859, 15302, 17205, 13211, 15303, 442, 15298, 13201, 14742, 15297, 
      15852, 15850, 15301, 15333, 13270, 17005, 14441, 17006, 17622, 17008, 
      14445, 17007, 13269, 14779},
      VertexColors->None], 
     Line3DBox[{14785, 1641, 15334, 17626, 17051, 14476, 17049, 14477, 17050, 
      17686, 15918, 15916, 17236, 14781, 17234, 15912, 17098, 14780, 17233, 
      15909, 17097, 13273, 15914, 14527, 17235, 15335, 14783, 13278, 15336, 
      1645, 15339, 15923, 17628, 14786, 17239, 15921, 17238, 13283, 14785},
      VertexColors->None], 
     Line3DBox[{14789, 1892, 17243, 15932, 15933, 13301, 16779, 14247, 16780, 
      14248, 16783, 16782, 15781, 1899, 15345, 13295, 17242, 15929, 15343, 
      1895, 15344, 13292, 14790, 1897, 15352, 13319, 14800, 15351, 17251, 
      14538, 15952, 14788, 17240, 15926, 17099, 1889, 15342, 13291, 14789},
      VertexColors->None], 
     Line3DBox[{14796, 2076, 15347, 15941, 15942, 14794, 17247, 15945, 17248, 
      13312, 15350, 2084, 15830, 17014, 17015, 14454, 17016, 14455, 17017, 
      17692, 15938, 15937, 17245, 15346, 17100, 15935, 17244, 14793, 17249, 
      15948, 17250, 13309, 15943, 14535, 17246, 14795, 15349, 13308, 14796},
      VertexColors->None], 
     Line3DBox[{14801, 2773, 15360, 17621, 17000, 14438, 17003, 14439, 17004, 
      17680, 15967, 15969, 17258, 14804, 17101, 15961, 17255, 15355, 17102, 
      15964, 17256, 15356, 15966, 14542, 17257, 15358, 14805, 13331, 15357, 
      2775, 15354, 15958, 17629, 14802, 17254, 15955, 17253, 13323, 14801},
      VertexColors->None], 
     Line3DBox[{14811, 2827, 15368, 13347, 14812, 14810, 17264, 14547, 15980, 
      15365, 17262, 15977, 17263, 15363, 17260, 15974, 17261, 15361, 17259, 
      15971, 15972, 17684, 17034, 14466, 17037, 14467, 17038, 17625, 15364, 
      2814, 14814, 13351, 17266, 15984, 17103, 14813, 15367, 13346, 14811},
      VertexColors->None], 
     Line3DBox[{14836, 3362, 15391, 13395, 17282, 15390, 16019, 14555, 16020, 
      13393, 17107, 16024, 16023, 15393, 14837, 17284, 16025, 17285, 13403, 
      17286, 13389, 17279, 16017, 17280, 3341, 14838, 17043, 17685, 14471, 
      17042, 15838, 17045, 14475, 17046, 13404, 15396, 14841, 16029, 14558, 
      17287, 3368, 15392, 13396, 14836},
      VertexColors->None], 
     Line3DBox[{14843, 17696, 15398, 17632, 16031, 17633, 17108, 16034, 17289,
       13409, 15399, 17744, 14847, 16961, 16960, 17743, 17677, 16958, 15822, 
      14849, 16042, 14562, 17294, 15400, 17292, 16039, 17293, 14848, 17295, 
      16045, 17296, 13413, 16037, 14560, 17291, 14844, 15397, 13406, 14843},
      VertexColors->None], 
     Line3DBox[{14852, 4700, 17298, 14564, 17297, 4699, 14858, 16965, 16966, 
      14411, 16967, 14414, 16971, 14416, 16969, 16968, 15409, 4716, 17302, 
      16058, 17110, 13436, 17305, 13438, 17303, 16059, 17304, 14857, 15406, 
      16051, 16053, 16052, 13429, 16055, 14566, 16057, 14854, 17301, 13431, 
      14853, 17697, 13430, 14852},
      VertexColors->None], 
     Line3DBox[{14866, 4875, 15415, 13446, 17308, 15414, 16070, 14570, 16071, 
      13444, 16064, 16065, 16066, 14862, 17599, 17312, 16072, 17311, 13453, 
      17113, 13440, 17307, 16062, 17306, 4867, 15419, 13451, 16993, 14432, 
      16992, 14429, 16989, 14430, 17678, 16990, 14859, 15412, 17112, 14569, 
      17309, 4880, 15418, 13450, 14866},
      VertexColors->None], 
     Line3DBox[{14873, 17698, 15428, 13469, 14874, 14876, 17116, 14575, 17319,
       4953, 14877, 16949, 16950, 14402, 16948, 14398, 16946, 14397, 16947, 
      13464, 15425, 4924, 17115, 16080, 17315, 13466, 17316, 13458, 17114, 
      16075, 17313, 14869, 15424, 16078, 16077, 16076, 13462, 16085, 14574, 
      16083, 15430, 17317, 13468, 14873},
      VertexColors->None], 
     Line3DBox[{14878, 5016, 15434, 13481, 17322, 16093, 17321, 17699, 16105, 
      16104, 15437, 5030, 14882, 13488, 15438, 15436, 17325, 14580, 16102, 
      13473, 17320, 16089, 17117, 15432, 17324, 16099, 17119, 14879, 17323, 
      16096, 16097, 13484, 16983, 14424, 16982, 17745, 16984, 16985, 14878},
      VertexColors->None], 
     Line3DBox[{14889, 6055, 15448, 13506, 16123, 15453, 17120, 16122, 17336, 
      13515, 16906, 15807, 16909, 17673, 15808, 15809, 17596, 17061, 17595, 
      15292, 17054, 17056, 17749, 15841, 17053, 17052, 14479, 17067, 14488, 
      17068, 17750, 17069, 17688, 16184, 14601, 16183, 17702, 16185, 13503, 
      16114, 13502, 14889},
      VertexColors->None], 
     Line3DBox[{14892, 6103, 15451, 13512, 17332, 14894, 16119, 16117, 15444, 
      14886, 16904, 17672, 14364, 16903, 14360, 16901, 14359, 16902, 13500, 
      15445, 14887, 17330, 16113, 17331, 13496, 17328, 13495, 14885, 15442, 
      17326, 16106, 17327, 13494, 16109, 16110, 16112, 13499, 16116, 14583, 
      16115, 13513, 17335, 16121, 14892},
      VertexColors->None], 
     Line3DBox[{14899, 6157, 15461, 13527, 17121, 16133, 17341, 17700, 16134, 
      13526, 15460, 6152, 15456, 13519, 14898, 15454, 17337, 14585, 16125, 
      15455, 17122, 16137, 17342, 15462, 17344, 16139, 17343, 14901, 17339, 
      16128, 16126, 14900, 15811, 14373, 16921, 17740, 16922, 16923, 14899},
      VertexColors->None], 
     Line3DBox[{14909, 6389, 17355, 16159, 17356, 15474, 16157, 14593, 17354, 
      14912, 17353, 13555, 14911, 6403, 14913, 13556, 15472, 6405, 17357, 
      16163, 17358, 13565, 15476, 6413, 14916, 16940, 16939, 14391, 16941, 
      14390, 16938, 17701, 16155, 16154, 17352, 6390, 15470, 13551, 14909},
      VertexColors->None], 
     Line3DBox[{14923, 6522, 15484, 16186, 17124, 13588, 16189, 14603, 16190, 
      13539, 16145, 16146, 16147, 15463, 14904, 17349, 16149, 17348, 13543, 
      17125, 13589, 17126, 16195, 17371, 15488, 15490, 13595, 16934, 14384, 
      16935, 17619, 16937, 14387, 16936, 13593, 14928, 14926, 16191, 16193, 
      14924, 17368, 13585, 14923},
      VertexColors->None], 
     Line3DBox[{14948, 17721, 15497, 17611, 16716, 14193, 16719, 14194, 16720,
       17651, 16226, 14613, 17133, 14940, 17378, 16208, 17129, 14939, 17377, 
      16204, 17376, 15499, 16220, 14611, 17131, 14946, 14947, 13628, 15506, 
      14945, 16218, 17635, 15504, 17383, 16223, 17132, 13631, 14948},
      VertexColors->None], 
     Line3DBox[{14957, 6791, 15516, 13653, 16247, 15515, 17393, 16249, 17392, 
      13658, 14959, 6776, 15255, 16874, 17666, 14332, 16877, 14333, 16876, 
      17667, 16244, 16246, 17391, 14956, 17390, 16242, 17389, 14955, 17134, 
      16240, 17388, 15513, 16252, 14619, 17394, 14960, 17395, 13655, 14957},
      VertexColors->None], 
     Line3DBox[{14978, 6980, 17137, 16275, 17406, 13671, 17397, 13672, 17136, 
      16274, 17405, 14975, 14974, 16271, 16272, 16273, 13689, 16425, 14664, 
      16423, 15611, 17162, 13880, 15064, 8691, 15613, 13879, 15063, 15612, 
      16429, 16427, 15065, 15615, 13881, 16715, 14190, 16714, 15763, 16712, 
      14188, 16713, 13693, 14978},
      VertexColors->None], 
     Line3DBox[{14985, 17738, 15538, 16897, 17670, 14357, 16900, 14358, 16899,
       17671, 16299, 16298, 17415, 7148, 15546, 13726, 14993, 7149, 17417, 
      16301, 17416, 14989, 16282, 14626, 17410, 14988, 17139, 13708, 14987, 
      7036, 15536, 13707, 14986, 7035, 17409, 16279, 17138, 13706, 14985},
      VertexColors->None], 
     Line3DBox[{14998, 7796, 15552, 13738, 17419, 15551, 16307, 16309, 15554, 
      15558, 13745, 16873, 14331, 16872, 15801, 16870, 14327, 16871, 13737, 
      14996, 15550, 17144, 16311, 17422, 13743, 17145, 13746, 17425, 16317, 
      17424, 15000, 15555, 13742, 16314, 16315, 17423, 15548, 17418, 16303, 
      16305, 13735, 17143, 16306, 14998},
      VertexColors->None], 
     Line3DBox[{15005, 8143, 15564, 13761, 15006, 15563, 17147, 14637, 16322, 
      15562, 17432, 16334, 17431, 15567, 17150, 16341, 17433, 15012, 17149, 
      16338, 16337, 17708, 16822, 14282, 16823, 14281, 16820, 16821, 15011, 
      8137, 15561, 13756, 17427, 16320, 17426, 17707, 16324, 13760, 15005},
      VertexColors->None], 
     Line3DBox[{15013, 8231, 15023, 13801, 16360, 13800, 16361, 13802, 16364, 
      14647, 16363, 16362, 17654, 16725, 14196, 16727, 14198, 16726, 14197, 
      16734, 16735, 15767, 17724, 16733, 16731, 17723, 17584, 16729, 17585, 
      15225, 15250, 17665, 16841, 15792, 16838, 13783, 17434, 16342, 15014, 
      8232, 15568, 13779, 15013},
      VertexColors->None], 
     Line3DBox[{15020, 8357, 15573, 16357, 16358, 17710, 17439, 16354, 17152, 
      13794, 15571, 8336, 15788, 16827, 16828, 14287, 16829, 14288, 16830, 
      17709, 16344, 16345, 17151, 15017, 17435, 16347, 17436, 15018, 17437, 
      16350, 17438, 15019, 16355, 14646, 17153, 15021, 15570, 13793, 15020},
      VertexColors->None], 
     Line3DBox[{15024, 8390, 15578, 13812, 15026, 8394, 15579, 13815, 17441, 
      15577, 17155, 14649, 16368, 15576, 17448, 16388, 17447, 8399, 15029, 
      13816, 15580, 8387, 17156, 16372, 16371, 17711, 16856, 14315, 16857, 
      17735, 16858, 16859, 15040, 17736, 15574, 13805, 17440, 13804, 15024},
      VertexColors->None], 
     Line3DBox[{15030, 8400, 17450, 16390, 17449, 13822, 17443, 13819, 17442, 
      16373, 17157, 15583, 15584, 16384, 16383, 16385, 13827, 16377, 14652, 
      16376, 13825, 17446, 16382, 15587, 8421, 15036, 13828, 15586, 15039, 
      16381, 16379, 15031, 15581, 16702, 16703, 14179, 16705, 14177, 16701, 
      14174, 16700, 13817, 15030},
      VertexColors->None], 
     Line3DBox[{15046, 8454, 15591, 16394, 17451, 13840, 16391, 16392, 16393, 
      13841, 17454, 16400, 16401, 15595, 17604, 17458, 16404, 17457, 13853, 
      17459, 13852, 17456, 16403, 17160, 15597, 15600, 13855, 16867, 14318, 
      16866, 17618, 16868, 14323, 16869, 13847, 15047, 15045, 16397, 16398, 
      15593, 17453, 13846, 15046},
      VertexColors->None], 
     Line3DBox[{15053, 17712, 15601, 13858, 17460, 15054, 16409, 16411, 15055,
       15056, 13866, 16836, 14296, 16835, 17616, 16824, 14284, 16825, 13874, 
      15610, 8540, 17464, 16415, 17465, 13868, 17468, 13877, 15061, 15608, 
      17466, 16420, 17467, 13871, 16419, 16418, 16417, 13864, 16412, 16414, 
      16413, 13860, 17461, 16407, 15053},
      VertexColors->None], 
     Line3DBox[{15069, 9545, 15625, 17615, 16790, 14254, 16793, 14255, 16794, 
      17661, 16442, 16440, 17478, 15072, 17477, 16437, 17476, 15624, 17479, 
      16444, 17165, 15071, 16435, 14667, 17475, 15621, 15070, 13893, 15622, 
      9547, 15627, 16446, 17639, 13888, 17164, 16434, 17474, 13892, 15069},
      VertexColors->None], 
     Line3DBox[{15077, 17713, 15630, 13910, 17482, 15075, 16449, 16448, 15628,
       15633, 16807, 16808, 14267, 16806, 14268, 16810, 14270, 16811, 13884, 
      15067, 15617, 17472, 16430, 17163, 13886, 17485, 13915, 17484, 16456, 
      17483, 15080, 15631, 16461, 16462, 17167, 13911, 16453, 16454, 16455, 
      13909, 17481, 16452, 15077},
      VertexColors->None], 
     Line3DBox[{15095, 9710, 17501, 16499, 17171, 15645, 16496, 14682, 17500, 
      15103, 17499, 13951, 15102, 10720, 15647, 13956, 15106, 10726, 15646, 
      16506, 17505, 13966, 15651, 17731, 15104, 16817, 16816, 14279, 16819, 
      14280, 16818, 17716, 16502, 16503, 17503, 15649, 15641, 13934, 15095},
      VertexColors->None], 
     Line3DBox[{15097, 9785, 15643, 16667, 17645, 14153, 16665, 17719, 16666, 
      17644, 16492, 16493, 17170, 15101, 17498, 16489, 17497, 15100, 17496, 
      16486, 17495, 13942, 16484, 14678, 17169, 15099, 15729, 14102, 15183, 
      11692, 15182, 16622, 17643, 15098, 17494, 16482, 17493, 13939, 15097},
      VertexColors->None], 
     Line3DBox[{15114, 10822, 15656, 13976, 17511, 15660, 16519, 16518, 15652,
       15107, 16771, 17660, 14241, 16773, 14240, 16770, 14238, 16769, 13967, 
      15653, 15108, 17506, 16508, 17172, 13968, 17173, 13974, 15112, 15117, 
      17509, 16515, 17174, 13982, 16520, 16522, 17512, 15116, 17507, 16512, 
      16511, 13980, 17508, 16514, 15114},
      VertexColors->None], 
     Line3DBox[{15120, 10843, 15123, 16535, 17518, 15126, 16531, 16533, 16534,
       15668, 17176, 16529, 16528, 17641, 15667, 15125, 17516, 16527, 17515, 
      13992, 17177, 15128, 16539, 16538, 17519, 15127, 15670, 14000, 16813, 
      17730, 15247, 16814, 14277, 16815, 13986, 15119, 15661, 16523, 16525, 
      15121, 15662, 13988, 15120},
      VertexColors->None], 
     Line3DBox[{15131, 10874, 17523, 16545, 17522, 15677, 16552, 14699, 17180,
       15678, 15134, 14013, 15679, 10880, 15139, 14019, 15680, 10881, 15135, 
      16548, 17524, 14014, 15136, 10869, 15673, 17607, 16682, 14162, 16681, 
      14161, 16678, 17646, 16542, 16543, 17178, 15132, 15674, 14007, 15131},
      VertexColors->None], 
     Line3DBox[{15146, 10922, 15687, 14034, 15149, 15688, 16569, 16570, 15690,
       15691, 14037, 16739, 14209, 16738, 15768, 16736, 14207, 16737, 14029, 
      15144, 15684, 17532, 16561, 17531, 14027, 17528, 14028, 17530, 16560, 
      17529, 15142, 15140, 16557, 16555, 17526, 14020, 16566, 16564, 16563, 
      15147, 17533, 16562, 15146},
      VertexColors->None], 
     Line3DBox[{15157, 11037, 17195, 16655, 17574, 14136, 17573, 14137, 17576,
       16656, 17575, 15199, 15747, 16657, 16659, 17578, 15699, 16575, 14705, 
      16576, 15700, 17183, 14052, 15701, 11038, 15159, 14053, 15702, 11033, 
      17182, 14704, 17538, 15698, 11035, 15203, 17718, 16664, 15751, 16662, 
      14150, 16663, 14051, 15157},
      VertexColors->None], 
     Line3DBox[{15160, 11039, 17541, 16582, 16580, 17658, 16761, 14233, 16762,
       14234, 16763, 17612, 15708, 17726, 15167, 14069, 17543, 16585, 15162, 
      11071, 15707, 14058, 15164, 11068, 15704, 14055, 15161, 15705, 17540, 
      14706, 16579, 15163, 17545, 16589, 17184, 11040, 15703, 14054, 15160},
      VertexColors->None], 
     Line3DBox[{15171, 11283, 17550, 16596, 16598, 17655, 16740, 14212, 16743,
       14213, 17656, 16741, 15227, 11311, 15180, 14098, 17556, 16610, 17557, 
      11388, 15724, 14096, 15179, 11317, 15720, 14086, 17552, 15173, 17551, 
      14713, 16599, 15172, 17186, 16603, 17554, 11282, 15716, 14078, 15171},
      VertexColors->None], 
     Line3DBox[{15178, 11385, 15722, 14094, 15177, 15181, 16616, 16615, 15696,
       15154, 14045, 16843, 14301, 16844, 15793, 16846, 14306, 16845, 14077, 
      15715, 11281, 17553, 16601, 17185, 14071, 17548, 14070, 17546, 16590, 
      17547, 15168, 15169, 14072, 16593, 16595, 17549, 15714, 17190, 16621, 
      16620, 15727, 17189, 16617, 15178},
      VertexColors->None], 
     Line3DBox[{15185, 11921, 15223, 16722, 17652, 14195, 16721, 17722, 16724,
       17653, 16638, 16637, 17566, 15184, 17191, 16626, 17560, 15731, 17562, 
      16628, 17561, 14109, 16635, 14722, 17565, 15735, 15186, 14116, 15734, 
      11925, 15733, 14112, 16630, 15732, 17564, 16632, 17563, 14115, 15185},
      VertexColors->None], 
     Line3DBox[{15188, 11941, 15739, 14123, 17567, 15191, 16642, 14725, 16641,
       14129, 17572, 16651, 16650, 14132, 15743, 15193, 17194, 16648, 17570, 
      14124, 17192, 14127, 17579, 16661, 17580, 11979, 15201, 14145, 16748, 
      14220, 16749, 15771, 16751, 14224, 16750, 14147, 15750, 15742, 16647, 
      16646, 15741, 15738, 14122, 15188},
      VertexColors->None], 
     Line3DBox[{17720, 12298, 17608, 15209, 16684, 17647, 13535, 17346, 16142,
       17345, 13534, 16144, 13537, 16151, 17600, 13546, 15466, 14905, 16152, 
      16153, 15467, 17350, 16150, 17351, 14907, 15267, 14393, 15817, 15818, 
      15266, 16943, 17675, 15208, 17582, 16675, 17581, 15207, 16672, 14156, 
      15206, 15753, 16671, 16670, 14155, 16685, 16686, 17720},
      VertexColors->None], 
     Line3DBox[{17727, 12490, 17613, 15235, 16768, 17659, 13927, 17488, 16467,
       17487, 13925, 16464, 16465, 15088, 15085, 13921, 15635, 15086, 16471, 
      16470, 15091, 17168, 16472, 17491, 15092, 16801, 14262, 15786, 15787, 
      17729, 16805, 17663, 15230, 17587, 16753, 17586, 17725, 16755, 14229, 
      15231, 15774, 16760, 16759, 14232, 16764, 16766, 17727},
      VertexColors->None], Line3DBox[{13198, 13199, 9343, 13198},
      VertexColors->None], 
     Line3DBox[{17739, 6478, 15479, 13578, 17365, 16178, 17364, 13573, 16172, 
      17634, 15478, 6477, 15482, 13583, 14921, 14922, 17367, 14600, 16182, 
      13575, 17363, 16175, 17123, 14917, 17361, 16166, 17360, 15477, 17362, 
      16170, 16171, 13572, 16918, 14372, 16917, 14371, 16914, 16913, 17739},
      VertexColors->None], Line3DBox[{13196, 13200, 5686, 13196},
      VertexColors->None], 
     Line3DBox[{15376, 13366, 17010, 14448, 17009, 17623, 17011, 14453, 17012,
       13379, 14827, 14826, 16007, 16006, 14825, 17105, 13374, 15381, 3135, 
      15380, 16002, 17275, 13372, 16004, 16003, 16005, 13367, 17271, 15997, 
      15999, 13368, 15377, 17631, 17104, 15996, 17270, 13360, 17269, 13361, 
      17274, 16001, 17273, 14821, 15376},
      VertexColors->None], 
     Line3DBox[{15384, 13380, 16010, 13382, 16016, 17695, 16014, 14554, 16015,
       13388, 17648, 16694, 15217, 17609, 12300, 15761, 16696, 16695, 14168, 
      16688, 16689, 15214, 15758, 14167, 16690, 17649, 17196, 16698, 17583, 
      15218, 17682, 17023, 17748, 15280, 15281, 14459, 15831, 14830, 17278, 
      16011, 17277, 15385, 16013, 16012, 14828, 15384},
      VertexColors->None], 
     Line3DBox[{15494, 13602, 16891, 14350, 16890, 17737, 15258, 16889, 13607,
       14935, 15496, 17375, 16202, 16203, 15493, 17373, 13597, 17127, 16196, 
      17372, 15491, 15495, 13603, 16199, 16200, 17374, 14934, 17130, 16215, 
      16214, 13623, 17382, 16217, 15503, 6596, 15501, 13621, 17381, 14942, 
      16213, 16211, 14933, 15494},
      VertexColors->None], 
     Line3DBox[{15527, 13686, 16886, 14344, 16887, 15804, 16885, 14339, 16884,
       13676, 14970, 14969, 17399, 16262, 17398, 13674, 14967, 17402, 13682, 
      16269, 14972, 17401, 16263, 17400, 13679, 16266, 16267, 17403, 13685, 
      17413, 16295, 16293, 13720, 17414, 16296, 15542, 7134, 15539, 13715, 
      17141, 15540, 16291, 16292, 14973, 15527},
      VertexColors->None], 
     Line3DBox[{15531, 13694, 14979, 15532, 16283, 16284, 14981, 17408, 16276,
       17407, 15533, 16892, 14353, 15259, 15260, 15261, 17669, 16895, 17734, 
      17588, 16855, 17197, 15796, 16851, 14312, 15797, 17733, 16849, 16847, 
      14308, 16861, 16862, 15799, 12671, 17617, 15800, 16865, 16863, 17706, 
      17411, 16288, 17140, 13712, 16285, 17602, 17705, 15531},
      VertexColors->None], 
     Line3DBox[{15692, 14039, 15151, 17717, 17606, 16609, 14092, 17555, 16605,
       16606, 17187, 17642, 16774, 16776, 15777, 17614, 12524, 15780, 16778, 
      16777, 14246, 16787, 16789, 17728, 15783, 14251, 16785, 15782, 17593, 
      17019, 17200, 17681, 16744, 17657, 15769, 15229, 15228, 14217, 15770, 
      15694, 17536, 16572, 17537, 17605, 15152, 14041, 15693, 10941, 15692},
      VertexColors->None], 
     Line3DBox[{15790, 14293, 15249, 17638, 17148, 16328, 17428, 17637, 16326,
       16325, 15565, 15009, 13764, 16327, 17603, 13765, 16329, 13769, 17429, 
      16330, 17430, 13770, 17683, 17031, 15288, 17624, 13086, 15834, 17033, 
      17032, 14463, 17028, 17029, 15282, 15832, 17027, 17025, 15285, 17594, 
      17041, 17201, 15789, 17664, 16833, 17732, 15248, 15790},
      VertexColors->None], 
     Line3DBox[{15986, 13352, 14815, 15369, 15988, 15987, 14817, 17268, 15985,
       17267, 13353, 16996, 17620, 17679, 16998, 17747, 15816, 17589, 16933, 
      17198, 15814, 17674, 16930, 15815, 17741, 16928, 16927, 14377, 16925, 
      14376, 16926, 14375, 16924, 17694, 15991, 15992, 15993, 17630, 15990, 
      17693, 15986},
      VertexColors->None], 
     Line3DBox[{16229, 13634, 16230, 16231, 16233, 13637, 16964, 14410, 16963,
       14409, 16962, 14407, 16956, 16957, 17742, 15819, 16955, 17676, 15269, 
      17590, 16952, 17199, 15221, 15220, 16709, 17650, 17610, 16707, 13639, 
      17386, 16234, 17387, 14953, 16236, 16235, 15509, 14951, 13638, 16237, 
      13633, 16229},
      VertexColors->None], 
     Line3DBox[{16254, 17636, 16255, 13663, 17601, 16259, 13668, 14965, 14963,
       16258, 16257, 14962, 17396, 16256, 17135, 13665, 16882, 15802, 17668, 
      16878, 15256, 15257, 17597, 17065, 17598, 15847, 17687, 17060, 15293, 
      15843, 17058, 17057, 14485, 17076, 17751, 17074, 14498, 17075, 17703, 
      16253, 17704, 14620, 16254},
      VertexColors->None], 
     Line3DBox[{16473, 13930, 15093, 15639, 16475, 16474, 15090, 17490, 16469,
       17489, 13928, 16799, 15785, 17662, 16795, 15242, 15243, 17591, 16972, 
      17592, 15274, 16976, 14422, 15276, 15826, 16979, 16978, 14423, 16988, 
      17746, 16986, 14425, 16987, 17715, 16477, 16476, 16478, 17640, 16479, 
      17714, 16473},
      VertexColors->None]}},
   VertexColors->CompressedData["
1:eJzkvXk0198TP669pKgkpA1pI0shKqMorVKWpE2UNgktWrUQbUKipBBKqWxF
2hAqLZKyZN958dpsWSr1vef3j+c/8z3nfs/zdd6fc3790zmPpnnOa+69c+fO
nbkzxW7/uh39xcTE1i8RExtA/p6rYp7q91UItnPv3A94L4QX/EBl18Rq+KKg
n5NKcLH/708LjA9Nq7WeUwO09PHNALu+9eHdVZJ6QXE1oK4Tu2giA19fsKbs
V3ANfE1//3zk9z5c8XfahzlVNSh/WnoMdzLQWDE+rw+/+yhu3EZTnD+Gq12d
bPkltw9fe2RN5yR+NbXeMPrHSxPXyTLoWz0kzV/2x7/rVCCxxptBbx+ovkVZ
CedPKyemh9i4gtWPGPRzQ3wl2tTw72J89kebL4ljjEt9pnqe/1H8u7N/G5nZ
Mb57zTc3zkqW/vd2n+3uiSrp47NZ1UXCblw9HA1/3Ha2tA83WJOgONe6Hooe
OZ/6W9yHzxn95nhWQx0Um/3da1rWh8/b/2ZbWEA9imN8CobWXo0t6sPVktID
m/RwnJb/M5AQ4zHwFZL+UZurcf6dFXtGWP7ow61ynVW89+D0tPrXUVw/ZCRD
nl08syuXwusged/bYVmM72ZX+Wm2XKxDfxeG0/KR6ycuO7FACFPrTmvEFApA
faxb2Re5atD9WBVTReyYw8nXB7RXC2Hw6GPbmrezh1sEPFsYSfQTLfMrOT1T
CGUjTzYMiq+GwrNPVB8Qep/CxGWx1kIIi80ar+5IcDk/zbEEX5XFLVjiJoTL
dy9J+J+i/y42Lmzx0XNyuq5B9On0rtig6JsA1ulsCbUbJ3qcdl+4tu/0gmyC
zyt9+F3+lRCmrF25R+0hvR4CQvSWhhP7/DR5gmB5jxD+GBSvbM3D5cHsHq0d
xvBilUVyPflCuDYpd4xZhQCav923jp6Iy4/p8/qokTNkCX9Qzg59tUgI+w6p
R9/djNPT8sfmf9D9ZjVPwqd3VD9VC1sh2Dh2Xh/igs83DJ8z9t6kmYV9+ply
5KvgaHYtHHqTJO3GsGMHH2lIJc2og+/bLe9tKejDp1unx430qUXx9eG7pnoT
/bS6lHd8nCmEBQtuaimsoZ8/bPljmH2g1dtc9w/yqQy92fma3Y9vr4WnWhtl
hzL0NiBEatCqYXUw59FZ5SCGfqpszbSNbtdS72sJU2M0lPP78Jcqfjv0NWvB
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
u9hG8t22k7rdYV2N0LDQxzfUnb37RLbs5Dy/uxJNZP2u/rqkWN6YA15Szkbn
K+nHF7uHwu6RqfNjWcp3xc4v2HfZqgPF8pfYytvEcI1vSWZ5RJ4nX+2ubm9p
ggOj5wQb/C0F50fuazoJbhQoHZfKaYI/QbnhPh2l0Ka13mgX4cNZPPiL0a0m
2JjF40UGlKL6wfg8N9YVn0Pmm9OGB6Nz53IgWO7BOpXPuN+L4di+htFj8SJa
vWH8NaP+LO0h81D3Z4ub9pMmSNMZV5gcX4ri1O9R7HszV5nss4+PblQ5adgE
Ob8WL7OexN48Zytug+XhYHqgvfenPb+wle9NHZdAzgu0fGjtts1juRF7C4Wg
n5OuVeAvgJDdz9y1BFUoPVv5Bmzl7dDmLWC4qPcXrRGTF/uQeXJkSErz7WtN
UL/sQkfbBfo6CNr39zC/Bct7EXUeGva7MHrsd2H5bBgfrE6ErXgOLR/sfoQt
/rT02P7I1v6L4VheCu28mj93Ts884mdayNlFvfrQCBM3zHt9xBg/H2H7FOaH
0O7LGH8sjx171wLjg9XvYHLS2lWszoIWp637YOueiNZuY/UObL3TheHY+yS0
/LE6F1p9ivocET9B2dybjNdVk3/W8f+awHbYrwvho/B3umjrrdiq86I9l7F1
LsBw2vsULA6MxZHY2t+xeRW3snzTVq4QRiq5HKhc0AzS9WNXT99K/P/2165v
iV1qMGt1uvCuGXYHSGcFjyB+YFzeEQmCSx87UvmO1wwv/gwKHWlAXx9H+34X
W/ekmB2m5YPVW2E4to9g9aGYf0gbL8Lyr05ULRacI/ju/hH3Gj0bob3f836G
fNHfj2P2E4un0cYnMRy7N8Hk1LPj9R9F5Mnr+J7KHcyBb3MtTotdxeVB+VDe
J2L1bhj9n2v53FwyjhcvDaoKOdQIg4e3SVUUsxc3Pu42qb2V6HNaS8mcU5GN
kCNcWjtAmn7cRR0vpZWHtg6drXM97T0OFg/H9mu29lms3hOzb9g5mq39GrOT
tPbqz6yElvlkvSw7arBvzrVGqOo+1XZHjH5eYXJWGEZy0kvIeikM9N3+iA/3
1Wpbvm+qQnHavu0YHpbbW6deKoRipYf1roF8cOtYfWKFaRVUPnhXa0HwPZxN
/XN8+PBKR0HMdTn9e49s9c9tyRpq4MOoa3vfsL/R/kUNxDcD7GLg3VWSekFx
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
qaZ+zxDL66Ctq5XbozYmkfi9OztNIkenCGDxxHiu42D6cz0WP5yVYn5mGPnu
ZPlbMmaKXOjelLqr/gwuD+bny95oULhIzk11ec9fL/opgAkSBjkaauz1Y6Xl
U2CyfD7/qxCywza3HHxK/j1ATmBxD6en7edOKw9b84F2P9ozo8fzJrEPTp+9
0hfpccEml7O2O/S/qyunnW9YfIa27zNb/jBb/XwxPoP8A8ZeIPSPHeLFZnwQ
Qn/9VZ2uT+j7CGN9fLC+GLTyY+sd6xNN208q/1D/JW9zhWB8PFc8qpWsmzPR
ubI5uDzY7zpkdzX1GwM32JaWOUtP9H0w/9fosf4p0mafjJqJnvPhzLS/ZN8+
l3nI3DCbvq/KPscm83ZGnyxF97gofhf9eNHOw/+qnx1b/aFo+4Jh9GzpDevT
jfXRLpTz0xxL6FdlcQuWuBE/6+4lCf9Tou+H/l/1K6TtJ47W+SL1vFh9AW3/
Plr/BPtdtONI6wfS6hPDafstovtyx+1ebUY/U5782n49nf9df1XaeD7aF4xb
OG0hmT+5nKMvZfSFkPisd2aONb1/y9Y7M7TzE+uPyVb/SmwfxNZdscoiuR4y
z69Nyh1jViGA5m/3raMnsmffsP0Fs0vBq47I5xN5Bm6c0PWzXgD3/EryTymx
d/6i1ef/mv+D0WPzExsXzC9lq+8wdh+H9e9mqz84hmP2edy7MBU7omfbx/+H
uS+PpvL7/hfRLNGggQYqpUJEVHYTaRaF0iiVJpFKqTRT0iQlDSqNiqg0qSip
VMg8k/FOuFeSkPg937+6/+zPWvu3zl29//Ra277n2c95ztlnn733SzfXbawE
Gpq+PKi3ZXdepu5TrHg8Zc1rTMWp9qTOB+p6hZ3vWL13VvMEwwM375+YyD3X
+IL7Gf1eSWDwgtkbRt/n9pdle3RTOHnNS85rOi7g/JfagKt269jxL5+Hj2Nr
ufXhVZvpiypvCVitfn10/eFS1N9m9b4weer+JWt/nhXvOav9ghX/uKz5TDFc
L9nP0k9qP+od+3VIgit+Tmf1HrH1hxWvtKz5slmt2xLHyqlNUvY/+lUyevQp
XJ5VX2Usj5Sa743Js7rXpvZLpPZBwn73X60n9tdchvpy+Hf3ovrPIyUwceLF
sQPms1vPWc1bLA+N1fmUVZ4eNe8OGyeW7/fwlc+401L22dNdJVxBCdc/jl/d
y0ZK/83bqav4mhXw5JK32mUpfPqj07EHjfC8O2q/MrS/KPG+m9qHBMtLxOzs
4TNb66XU8z5cG1Wucpcd/zsmj9kZk8fWNyzuQd1fIiwf2ahL4d8Pdbd9KY/L
R4kAXKTWq8aS7qbnI8tgjPO62Q1S8lm3568/MU32+xr1O6Wub9i+41722nij
1HjudYr6M+43ffzU+V87epTpYCk9nVsl1y5Wyt5uY6etGCEvhYfMTN3ddWs5
WT8WN2Dld8lannrexL5fLE+J6qdhOPY9YvLUfZMqv+taRN1BqTxt8/kPhxg5
4HnaWJ8BrB811r/6+V293/uk4uf+w3osD+yKx72peEPxhm6LpPYdu69uw3w3
0P0TzA95Bl3lqqXsM6v7mZvLSnE9rPpyY322sf2C1T0gFvfAvkc3Fc/J06T2
I52CSL/Em//juyDGo6j7KRbPkXUcg5U89V6DGmfD7MYqXs3Kr2CV74HJy7oP
D7WvDvV3Mf5EanyAFa8xVQ8rHitq3z9W/WQw3jGs/oWaV4bFf6jf+7ewD+UL
uX1/g2CpfPKJGnhlPEBu68wSuPr1T4Ueh+dp3a/ceq4GPOvn7pk1j86jislT
5yfWp5dVHSs1rsWKr8Ew/KD2eSk/vGSl9bhpV8oheqyjekcp/0HhkorinE74
uZVan8jqPLJVQ0dnuBTuOl9/ZP4e+rmDKu8+u9SgTUq+epD+s03DytFzHzU+
8KR9qLK+lN/o+0ll54sVdL+Rld+O+bdYvAjrw09dx7A4lZH3p36xUv6w0ynr
u1E/6HE5anymzuX8yCKp+ZwyzS3ZfB2Ok78XJI5X17ZVb6aUfv9RtWodJ9L1
YPLk/ByivPEQ+w7KUvIu1dYnj1+rgKeb33dKkJrniSWnDWr96PlLGE7Vv9PE
75dY6jz4x8Rg/Z9R7M6D1O+OilPnOVUPdV6x+i5YjZ8aD2e1rlK/lwvlCwdO
5uwWb2V3+ER7zr/2vf6+1BjP78L8BIdO/oP6c3rGHr65zrAr5y9YZEyJmUD3
T6h58qzyK6jnO1nnYwT1UB6hztkftBNDXk2RwObtenduLWOXZ4Lh1PwlVvud
rL9TVvsLs7zT/5g8tm9iz4vJs+oXivV9pcYVWfUpxcaD1oEi48T4cFnZDcPv
NKhcLuDG83TcoqtnPlfB8KZZb/vZs6vzxX4X66eK9U3F+qOyilew4rXH6vKw
vs2y5svGxoPV/2LjwXjDqePB+MqpPOayxqm88xhO7XPLiocFw1n1x6bGUWXN
M7VcSywp4/AEs43lM/JroOu1bvm8XXifH3I/H2K/C6wPD/V5sf5pVD3UvoJY
vzUqPwJWt0WdtxjvABZnZtUHg9V6Qt1fWPVBxfoRUZ8X42PCeI6o9qHypcr6
fopVfJvKl8qKp5WaR8qK11vW3xdmByrfNCv/GcN1B3vuucL5XU6jVh97rlAF
mlv0fQc70vVg+Y2s/Afqe6TaE+MHx/I3sPwZqt+C5dtgOKYHWweo9qT258T8
GWpfDuw7wnjoWO13rPZfDKfug9i5kppXj40HOx9h5yxW5wvqvkmtC8BwKl8z
dh9H5QdEeb0RPmvsebH8ZKz/AKv7RFbzHztXUutNWPGeY8+L6cHONVj/Iuz8
Qu1fRD2HsuJ9YHXOxZ4L66OO2ROLR2F9a9F1DJGn8oKx6ptNXT+p+yyGs+I1
oO4LrPgmMPnrnV2yqzj5q0vkzMNNayCqe1OYdk+6fgzH9FP1UPvtU/vhU/sG
Y3EnrK8gdb5h85bVd0RdH6i/i9kf8yvQ9dazuPkct94+XKBbOmCgGEJnJ5sc
ukX/HjEc47/A+GJC1uYLL3HyF3pUbO0cXQPOVT03h6/Cvxcqvwyr/ENWvD+Y
fsz+rNZJDMf8NMxvoep33LdS4Sw3D19/n6d+e6EY3uweccX1IzteV4yXh3p+
xN4XNn5WvFQYrweWr4v5gZg8q3lOjXtT+UrQ94vwi6F+ICNeV6pfSt03WeUb
Y7xssuaTpfbTpp4rqec77FxGjaOyOrdS/XnMf2C1HrK6B6HqYRVvkXV8AIuH
YHkUGE7le6XmV2DxJWocVdb5ANj3iN1/YfJYvAt7XswfZnUfRH2/t4Qron9x
8pvy3Vf5rq4GlxCVEWJ1fPzY/cXQDr0isrj5lrL9creb46oh9MVLu8Ridv0W
ZH0PhekJS7QPUODsZrqk/LDTiSrYqqHXGtCpmNk9FPa8n1bsct4oxZuw89fZ
TCMrOm8ChlP5Kag8Dhj/CCaPrcPYPo69x5v7J75YzcmPTLwn1jxYDdP9Qzo/
AlwetQ/SHx7DN7zJOqbE4aNj4ubm2VeB8esdhq/eFzH7rqnzeWPAgP1j+BKI
Kp5reK9fFRwoXeJmtBMfD1U/tg5g985Yvoes8zpY7des1hPsnvTOiZprM7jx
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
j3Yv2k2uofv51Dj5Vr5g8iPuvXRKWt+h0V8IrslDW6bsLwAbr8Nvr3L4W6FK
0+fTQhh53H5nvyM4vmfmWmFfzi+933N9X+u1fOjbU3fQng/08W/JN1mcUsWd
3918PtUMFUHU1qrVvaYWwuilpZsXc+vM8NXPS7/fEcGpWz5lWTx6HJUaD6Ti
tSc/2alz86SkSSgf2lsECbu1PR6Poc8rvaDZK3pxdqgJ7mamO0cE7QoLJ/lt
5fzMVwdX1nLr/9IsR400WxF42k82nrCHk5fbsiSMk9cLzww/O1oEw8Xzln6Y
XQg/oaPuHM4vHRsi7DJPQQh9Bw4/kpqWDws1VR9IaiWQOHZ0wqbeQojPGFjX
WYTjnnrt+9lwfqz68tArEy4IIGT5U8mQWfh9AYZj+qn3GuOHH+yxiJPvEuu9
9pGTAFa2/tGeo0QfD6vx78o4oxTKyQ+8E+tSpCGAcXe816tF5qE4ek/R21vO
kft+6/aaNF79xQfepBOnQrzp6wkVn7jliqieW3/6WT9r+bmZD6dOnVQfnZqL
rksYTl03DG62WDZx67PJz1rPcY+FEGfcJ/tpFI5T9RtZ+RnO5N6XuXm3aTnj
hWC/79v8O73oejqbTV19Wsofs/rz46C8Le7/Y/cd1PUEswN1PYn5bpyzWcpv
dF6XVbGO02f4be34JxIJtOhaprraC0F/82aDjRPp9qHi2PO6Xk1ep8qNs9nU
wD36gAjMJ57ruOopft+BnSsflL1Y9YXTk6RyT87TUQTi9Btjqo/Q1+GKCW43
N2tWw5qI+KGLppXCwnuFvVd5Z+LrtorVdtNzlaCkI798bFg6PJl1Uu6KbSqE
T1kVste7EvwXmhxR2JoOgd06HdK0wPEjIYuDWrrz4KxJb3u9jAz4/XHZ7dLr
OJ5V4XKrtboCjro7PM5RSYOlt13inqZ+JePYeJb9XnB693UeBPf7qeNolAVO
Bx99utmK49g4//i6he9zrAAljR/x9iu+wkmDuJ36fb6S8dmFvK22uyvA9lqC
OL/pK/SbZpT7Hr5CqnvqoBZfAUSvevrAIi0P7qVlzUgzSocNeyVtuhcF0Mu8
Tmfjnzz45TI5fP3kdKjsMWF34yIB3Ht3JqTYPg+CHkYZinvieXFU+YBBv5Qi
OgpAxVHNHi7nwukHVUdvl6dBtydTD+5K4MPNkkdJjxpyQP+Xo4rucxzf+X3o
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
cOrUSfXRqezuTah5lVSclR3G9Usb4c6tM2+dLunc/S2A0Bvv/Acmyj5/GOu/
yioPE9ODPS/Gs4bF7X+Vn+tzmcNN+Yo5kqMCeLhO0vrGmG4HWfdBwsbJah5i
51/sXhUbv0ns8t5vOf2f7z/7MfOAAMyqjyupjMb52qj2Z7VvYnEqbH/E+v9g
+yM1vof2tUPuOzA91PUW208xPZjfu70+WOc8N06b4XMt5OsFMEpnZaBrLP37
YuX/YH471kcaW2dY8auyur/GvkdZ3zeR/UykHyCrOCFVHqtHwPYF9HeR9Y36
flnlFVBxzF/C+gqy4oeiymP9Jah9Krz7R3ybwo1fz/RX66ARfFgzvvuy+p14
n1WqPCv+u0Sdze9dOX97f/2h+1BSCRVWWmoxInpfNVnzwv8rfkC5bUmfCjjc
voungudVHqj4qfAOfmbHF4/1e6GOn8oHKmtc27KyMMea+36PKzpf066EnKnB
r0cezYbaL9uSJIsl0HIwMD5MrxL2nkyRNJyQPQ8pxs9I1b94mdYlk+0SsHSZ
UvzeuhLc3F19HK+y66+IzZ9T21YtDgrm5sn0vQ5Veyqh87Vp8/2fshsnq/Fj
fK8YXxLWVwpblzCeU+pzseLbwvqlU/VQ+z3KWh7r84bxyrHqK4jhWL8vjC+J
FS8Y1seeVV+7/xoPGlWeOh8wPkFWfTKx/oesvncMp/IJsuLvw74LVvOQFd8l
tb/iZNXD+d+NxfDr6pPavSnlENl3aJhbJt7XVNbnAqo8xnuL+flUPxPDqX35
UL/dUu2NAocX6CkKZzjxYOmD+iG/99DtQPWHnXbXHjk0qwYO+erb+UWWQeKG
l6ceT8pC7Yb5z9j5kWpPqp74dIWmgs41kPd+xhsrpzKYsNhSX7NXFgQFjJle
7loD5as3pUYWlIFT8GmHioXseEK3SIZNcpITw9osxxcW/uWQaFu5+87DLNgf
Z5Z0hhun8UG1z/EPePBnf052RRF+zmJ1bmJ1LmPF+4P1+WR17qgec0dz5ygJ
HI78JPRqrIBJPRPqm9zw/quy9sMxPdh7YdXfdeT+/eM/3pdAzthLvVoDKsHe
5MFj7Xi6HqwPPHaOYNWHnDo/sf7JrPrHUvs5Y/2Eo70uPbqWL4Z7bfHnh52r
gNUbK/STJuL819T9HftdVv4D5g/cVFrz+622GD48DDLc+LwcnA7GTM9NZMdH
wOq7AzXdnOmcPzAkOONj0A8eDM+1C9AYh/dlpb4Xqj2xfWSTzeJTovQaqGl3
pqT3onI4mpe//14gO3+VilPPjz3THwxtuiiGdub5cpUzKiB78ZY04564PPZc
prkCb/nCGlBqGgiDVpaD3lCVxzsuZqH3v+i9D5KX9a/qibC8IOwejcpvRcUx
+1D1YPan9iX4r+XfsspTpcpT8zmp4/xXOLaPY/ezGM9I61fzouPcuj0/fsn4
rL582DnFalPAGvr5gtU9C1U/q7o/7LvD1g1qfi8Vx+qPsPxq/fQn1mnVEnic
6hTgXCsED1XDYPNWvB4Zy4Nllf/8+GzjuDZOj8aTsE5aVkKYvuP25E4j8P42
mB7Xjt+dboskMGFOY/mA1SJwntdh+JVTeD5zZLScw48qzv8fN543Q1MEZr98
NzqPx3FqvrSs3ztaP47YjVXePlpfgLxH6vocpaFt+3/9MQJmtDlEtQlhZafm
Y9d6FKJ1E9S+MazOa5PnnUuU+yMB/ledQWlBPAhWjqhJe0O//2UVf2N1j4md
NzGcVbyC1fip98Xvbkc/usjhKqF3tYcr82D6ygc7VqrmgLOR/80Q7j1GlV13
sWmoBIOSE542DfTzMqv7XKo8Nh5Wvxs/6cwzJc5uKadKH8aO4oHmvIkO2qb4
PGG171N5rFjd+8iaX4kaX8JwapwN4+X5V/cIrPKXMD3U+Yndv1PXJSwfg1Vc
lCqP2fOt/PAPs7h1r9Ni/8VHjvIgog+vZUsEnf8a+13YMy89lztfON+/aCaX
xYN5osSoxcrs+Ljvb6r0tuVLYPKNtvnt1aqg89pfnodci0D3ue2BThw+qN/l
3tZDqqBxaaxL5YEiuKgZp9KSJYGj++4XfrgrhqTQOT9etpTAkukNPXI4vDGm
KW5TlBh8V3pvCWxXCqaurkH6HO76Ic88J10MNsbLQ5z6sMP73wpq75ojgVGj
r/yevVQMu00d+85IKoEJqi2H9nP4ju4NnXY5iCFkydSC/E84jvExscpvpD4X
NV+UVR8DWfedpurH8p+xvFBWfexlvQ7LRxq/DOLkNaYmOUZN48HBN2unmNjR
9WPriazzdVndq2Ly2P0O1W90M3tpbxTOnbt5nXwOnq2EsqcdLTf8j/ML1R+m
+mPU++4Byi/b2uVKYAs4u0ZPEsPJqYE6lc9LQKOkXcOIPAnUra6zPSInhuiF
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
SE0EP2DXbsYy+n/4Ab2HXNEHCPhyN44SchX+vJVjxmKZEIJfklH+5PBWpw/u
0o4+tkU4V4T0CrMpFpzgCtu1Rq4HDENfDE4Q5pVE6cYW9VQqtj3K/DYXagnf
DQq7a5UngG8Prv3zXadw+GUHqmMbwX41Rjftv5I7BLH117UWEOzxbIz/RMAF
JjD3PPzjTuClltU0q4kANtaOHDZEu7wg9E/HAa1MlWd4u8OdL/O8bVzHTqfC
H7MNL0b3t4P2jx0Dzafnf19618DS1nYVGrhP8zh/8+2ApK+z8sWJ9XAzJlfD
9z0VlHWM70hsbYdvvg172zTx+nF+D+fHrnRnvRojxB3HsjM9cud46/+1ni76
33o633X8/7deZ/1vvQ7833pdJmlXbI/s6P6fR0lAHoB+DbF1X+nNkLDntswQ
Wi9SrKeKvJC9Sdnz3HdaRML6n8wjs7WGNTR4SGaoUxmdsNZZ/6z3kgZoKFLO
XaJFh2R9mq6QQBdsSAm8Yq7fgPVvsiIfZbhbKZDzMfFlRVYTHNf4PWa3BX/+
6KK4x+LVkf1w46bCZssTtbCr/P7Kx1drsPXqFSp7xP4/1r48murv+7siMyGZ
miTJkHkq1JYpU1JoIPMQSZRCKdEgNGhSGmQMlSZFlGQqpUzXPHa513Xvxb0l
iZDnWOvzPM97fX/rfH7LWt+/LK911nmfe4a9X3ufvfdZ6ceEY/Qlz4tde+DW
Qu4Wlm8j/Pinf8l/+lf7X/Kb/q/+Ff5H/+74X/TvXPX7+Auu80VovWKDB65W
cdNAQI5r2obvX+qx2M1kzEPn5U6JYL3NGzTfd3J0Jf92YfcPbp/g9hWOT2rm
vuqkVrCAleiilHCMCiaqbi+3qrYAxz98Neofvqr0D18NVSxP2u7Mgt0nfuzP
+ENB6/vnUNpgM2iPPs0aGmHBt0m/lIw8Kpxt4KuytGkB8erxzf5oPKk3RU8I
D9Eghdnkcl25DXrPH1A/30IDHp5jNcvzm+HJ2023Q2Ua4LmPp4LrVho4QWqj
il8TpMSYTXB8xq8jTs6IGxkOXSTIJSf+D3dCruLl0n/K+TX/yHncvqIVHcwr
zKHD1PnYXcUyHaC9ZMrzuSUJK3+GrFtaBp7T4bLIu/l3tDtAIuuDIt0Wn2+L
24c43vjtbc3h77Nxnq7+ZteN6XDwarlIUnc7+Fvu2d6E9u3EqFmQYR4d1OsM
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
4BMBv5Kya5uAbh/QI3kTie/Fc6b85eLV6QMvDgsHc8I+IW+I4ZeLRfvh/pPc
Q4T1Nai/EGExw4Db3A3ZxPc3Twzw65xSQvsq1HsPcZ/n5DytSEL7/IMz6/x8
wr6yeU0h1ZbMfR8G+NSyhwn78FzEXeH6NgZcEaGKDhLuX16l/ExZ9YwNHyYL
bcmE8Szuq1629F/8ilLn2leLEH6v8Oa4TxIUvF/xwyrDu8mE9rKtyW+WCeD9
k8cPvFyxlDAe8cVd9ecimLAj8ovyHcK9UqTusiiTPsRr93Wd3UnAb0ZRJqNr
2Vg7N1HO8OxrAp6zZKdOpAgF8u9GLr5HsHNN866UnNamYu1ZHI6zi6eowu/C
Ce1PnN07P+gbBW58GEv6RcClk8gq/RxUCDAzON1J6OdjgGnX2RcUmLS0t0gg
tOfiSdnFScP7H14Ux+hcIfze44uEczm4KPDj5jbtfGIc7JJgpwZhCgQY2Rwf
IeBDK4CjQJYC6QJPGOMEv4SSxXrhPUF4f8XmvXuDVQi4uoJCw7AWBY5k3Dv4
GuF9iYsdKIMsoBZI62xG8sGEonVuto7EztT2ASt+NlyvWPxT3qAXnIXWJH5H
49mzpG3irxiy/0Sz6m0290JDv3r4bL78jcfMofutLBiwmR70l+4FT54/NtME
/vD0VkqhaR4dFjB+B+oT+InV5tLrKyrpsOxjwqc6Al5OX89+y6bDrhD7PfsI
OMeZzAeGDXT4HTLw+imBb6zq3c3fos6Aj50zgxeQXhacVlLVWMUCzvVXjzUh
u9sx9uE8CzROkukCs3m1LDAu/piyXawXa1//uXdUeLbOSe790pajzix4++lD
wPsvZPw+nKN/phuWyBUT1tdLXHawVRTvFwo9Q6VPEev2kzr6ytbg9w9uv+H2
83xH+sxd4n7mu8L/loE/F7hzNFd//lxxXJ477l5g59Hjh18Q7JeEoUsfI/7F
bsJ9d672QrPYz8yNhP7zngndf9Q5BNplnk8vEPAxg95jR0aGID/78hplYt28
3J6PJi1D8GpTgNItgl0Wm+gqKPh4CGvX4OyyEP9YjWSC3lmVZRHu9X9oe/No
Ktv3fZjIlAakzEWFMoQiCacpRGVIURkaDJUQSVJSogylAdFImo2FMibJVIbN
Nm5s47btvdl7R5LZe3nX5/397vV71/1db2t93uf541nrWNdzufd1nedxHud5
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

    "],
   VertexNormals->CompressedData["
1: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
vTQY2LmvirV6BpynXCNHPvnhxbS4LX6S/fA+YXHvF/8B2H3busk+hAVluoIq
Gnrl6PS7ZKKmcQD+6S4nnXVggbc1FN7VrMK3TeeY5len4cj3l5F/H5/CzpP/
hHXXk0GFx3zvs/c0uHh0Qkk6pRsdHlj8l51KA8mNavcz7rKws142IKRuEAhf
X/almbzF8n8Lq8WQClzBlbcJO/pQXN1d3HmWBn//fPZtucPENL3Qm6c1XuMe
ctnK7SqjeNfw7BnJyUHUV9ju0OPJwrZbC3RW4hM8ZqciphhBxsfhE36pp6mw
U2y4KtuciNdKFpdrg0i4K9J/S031BIrfNjP12knA9NEfhxLtyDj82bqAMkkG
pWS/i+eUyLjN0Yz8mkLCK8+/Kx9dNYESm1aKSMSP4oW91quP3ZuGZ/56q77/
JqFijvYv7f+CIFxAT0f3bB5kWvVJ99Z8AZqFz6OILjYmW63JUy9kQoo4IZLr
AAEbtGVZLkZRKLv2zGD0OzIWDex/+m4dDUSGWqRnro3hht+nMiSSSSi8vz4y
eCUJzyZo9J95QUVR375TP7XbseS12a5QuXFMdjgmupo5jUTD0Ln3q4ZxY8kJ
kDlCwruH97gkc/L3lZD/jkt/rMMMf5ZH4Ak21GiZ5tz7WQEb5mYPWpeSUVTQ
IMnxGAnfGTl9SzlLgWmPbPH1GiQ89v1UV3/jJIY5vPDNCRvCWOulbT3VBPj0
lb3v49kxEHF+3TKrOwXfgvZueR02jJYUx+zxDDpYZrwYpiWNwLYNv7x+VLbi
oqVD7RXiFBQES6vJtJFBI+cOl+AaOuYwzwx22oyDT+8LccqjQSxq8YHzj8l4
9oHreao0GT6gS+ivdjJuZo03S9Gp+GPzTaqWNAUCjyj7CzeP4s8fP04EWdBQ
7HaI/4TjJEwc4y7QbKhG3l+1Dsf5aLjjxofEkH0UGDszsnLlplHMCzv510xz
EKPGt6slvmZCf790mv2mdvg5G7olaz+HL9oio0QyB8EqhTdX0qILoyhk2+3/
hhH6xfebLzHxedCsdpLnW0AL540mVwh443L+Bd8EJh57Rl01rJgP23T+eDRt
msazrSGhZ5fS4Wj61uMSHmRQbp69LvaIhlofVe6nqNFAyN8og9emD89tumfa
Y02GQ4te186mTEJ+4uu6gM5+OFYX5HGkgoStHfkyK1mTMDRFuMPk8Cbfp4pN
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
J5OzT3zWW4U4ucu8909nzpZRYJ8zFHa6S4PDIzFw/TwZ8javNJq+TYSE0+bC
gfepsD2unu+EARmqw9m3le2GQfxgWxC/CA14KqO6lz0p0G5xfc+NO0S4z8jI
cafRoMLskMzvICJI6XrtntEigZbRdLIKp99sO3qln+iTwGMuj9kqTwTzZbtM
I07O8iD56wntI8O3Mvt3qwzTsCz8BtqpduPw5qZFY382EtUVbR4If0Sh9+ti
a3Z1oOwC/0l3NhsbXnLZ/vlRhDPaTnPfnnP8QbnU5PQdNm441alS1ZyP/szr
JO8zHbhb8c173y42kmZv0M05vh6Sf2C35G4GJPOGXV9nMwzlx7QPPHjGwL/w
I9TicS+ab8cL6V1k6Jto/aGu3gn31r/7pVhJgeTuoLfJ6QwYGNo+ZqY/jCfU
O1QJ6WXg2pZ74te9KSBJkNzrXvejzWY5mcjAauCajOI+IsOC7ynWa/wK6ZjT
7sH9tLYL7Xcfjgj1p8KxEJ37QS9oiNNO7osRnei0gyJi/50G76fY1aLPOmCb
4/O5I0UUaD6bLBfbxoAtnjorpZoJUGJ6cRdycXhupKlsCzcNNtzfs205iI4l
HdNTSQX9mFJLW5OxngKzEopVcy/zMW6r610l6w7cbnc682knG+tOXfDZalaL
Nk1K3XxZnbj/KelA+XE2ttr9txSq9A1tO/7d8tToxJUbYvuW/NjodaHhvK50
B5qWkM2d83rxS412VjsXC537pE7zJzLwz9ixpZGhIUxuHyhZeECER5r+Nkaj
BOhtHj+wiUyFma/ioUoSNCiNmo+XmEtE34By6RWJPZjJJVJexcnvgU8M2cf8
KcjN117UyeE3Y1qTsjZHL+XueB/9TChCus1Jq8ty3XiLPG9ymsMzVe/lZi8N
jECLHUmh+Q4dvp5plSnTJIEvPWaZP5IMGV8ZNLuoCbhmc5hlL1eDZeuK3g1s
GIPer7103ng6HLjOqnP0I4K7+3ePYicyhLbtudxXOQFzQVL6x6nf8G+0aee6
+yPw43iJqYszHUoic88be5EgK7ypY7CeDJc/M5oLWyagmCpNv8afi3s/R6hu
0x6Gw1tL28UP0kE8m+r/djcZimX8o4cCe0BIgaq0vZbK0aN1Mt+E6UC4t1L3
Sn4D+Jgrj7x7S4YY1gXu3qMTsD7JWjBhTQmafuhYdZx3EFgRn9bFrWXBl+gN
9/n2DoBbYuJMyzANvob7plAyKUD7HkFc94QMaVo5Gbbik6CbK0LsufoSHu6I
Oqu7xOlTUd/0vfwM+Pjc7LJYDxE21ay4pDxDRIWjf8U2H5xEezux506dzbgo
Es8Wae0AXvonno8hDLzp/TxkcJ6CKTN7qlfty0UuuYqJ5ndMLNZ0GrtFHcMf
+uanPE/Q4Gmp1BPRrZxc9PKs0/ckKhb1nB9dt4eB18bv3LAZoWH87VUeb8oL
0ayv0MmkjYBCvKxWUccp/Pe7q4P/fiduXqv+49TsBCoJJZqk5ZCxfP0q073T
8XhxS7QRtZCCK7c/qg0QoGLz2lCVlrBRsOuSXTzaQUKl0h1/zcc4fHHK8NMX
zVGIfeMlkGlIQqmfS3wfmmjIn92quZA6BiG9D0SSzpLBQfTO9QcTI/B6F+HQ
dBgNvScWbOTVKLCZ8PcH+fYwyBmuTr5xgoa3DZYOKZ+ggmBQoaWu/gDoj77x
oxrS8EXlvK3hdRYGTeq9Pt/dhsNSjKEGSjdUv7trcTu2HXPXGMj9mJtAuX6J
vtw5InhBoktlUQvyLbgO5F3rxhP2ZNyXwsK16xeLzKQjoa34WMPY5o944XVa
gObvaTzQmP2YuL4Sx9cfDf64vRl3pEQEpa+cxpLbRkc3zZegWs07NeNDrXiJ
zSNl/4eNu/u0ukU5/OvRx/CXftGNpz7wr3b0Z2Fae+HjvDISHLS8Qfc7NgGv
8o4mPW/pwBnNQ18MVFuhzs3LL2VXByxMKT5bFmPjtZ3vbV7PvMKIVZ+CBhW+
oRdzhn708zS+1uDJmW0lQYlTg5df1wTcdJy1jLVuRLbD3cRmx3asvTMiSTft
wa2GhN41piy83rjovS+5Ho5MXtjV4VYH/SsnQzbMsHFr0B7NyaNkyDc+cG6v
5CQwhskXDAgFMLR7x4auOAbmq2X9igolIXIb/6WqD+Cbl+pf+Q8UwP4kP4kw
jv8cEto7sc+UCX+zMxb/O8DhtJbJvrQ343C95Mn5GvtBqDqwpu1uwAQe/zLY
qJhPwroJSt8MtmE6YWE+TGsSJa19ohp3DmC63xUVqZxBMNA67vW6gYg/+957
qJvdBmtFYxrqMWFCc/Q0Q5qJ8R+733tdH8OgKRvz83GNcGepRutaNwHFT9S3
6Fzrx/V7uo8vCTOxJ/6w/IsnBNx9taTcG/ox7o2/ErcyE1MdpTGTw/8iwuMr
T10cxaqt+i+T19BR9oD2+GhnL5BnZI/vNKFBFGm4fO4gDe4Ni9aaniWjkcQ2
hiL5K+6xSrb5pzgJO4S150KcqqBQOPNVeAQJavUta/wvT8I6dZfMwk4SSs9S
9p7sf4u2PxSOOT6fhEPEd6xzZ0kYt7Ttd/TOUWwaPbLPxoiOp+UG68QNmXjo
ecatcLsxLK0lficcqgc3/6EbbX2DwNshUnw3cRwvG8msYg6OQvefJ04sTn6a
OnxYv8qBgX3nci79LODorJ5Qzr8tRKhz3nRgYZmBH30iKkrvDIHKHb9GQzEy
8G898qt7LwVb7BqOXJPi5Bk1ZWvFzWTgi0uXytShYJud8RExETJs1VCngyQb
6YLZqc+OlKPK9W31O2x7IN5j4q6PBREezu1+5Eah45TxxYP3gkbhg3rfYyW7
Sry/Xsid7xENFr0fxHmYM0BbZGRrnOJLjP4h/fkl9yRM6RzYZMzR0aJF9V0N
N2rh+Ghzpf+uabDRSjv86XU15PG1Xn7Ak4uzyX1HnpwcB9sMT/vEr1Ro0CFY
HOgnQmd7axahnwYrjjHNLDSJeOteDp/xsxqcuGUVY5PQjJ8IE2XXOfmho/Sf
qRvnPPQn+/1elk2AfPa3j/4KrfDnVMXr8gwSGGkYbmytmoDPlSF/rhQ3Q75i
6zPH0iokgZusy1QTbkvcY8v8zUYpWhDPvWA2Rjtar1WwyMbcqicjJ+O7YInF
PSakxUZTGcW1NblFaNX9jJwo1QOVUxbm/+wp2H5He/zQzhEUVMp3yxmj4kmt
UgNTfQZGa6YZvf08grlJKVpBWkQgpnONf7lLxyv9UpIU+zH8OR+kWfyQ00+b
Zxg78sbxUP/X1476Y+iTtf3cJP8g+GhZnxVwnsTOsr+Ml3IkXF3ppu6wsh4H
8mVfW7mN4yPRf1eOto7hmODb25KXBjGkaox85ggDBXcUE2yViBj7uziW79sI
Rv2x2X9BYBzDlRbvdLEImKpBW9rqTILy3V8bCniY6BagFh0/TMS/Bw876ycX
ISXTNvUheRh/5GbSfT0GcN+K0RLliAlMMnO5YD/TCk476aSfVylQ2VlxYPbU
OFy48GO722cieNf7nNsrNwGEvfOP0LwXmh1Gq8hHo/H6hieBWxJb0XHNX51I
Dk9ssFycOGVXiGRx5b0+z9qR305lUpbIRpEc6wENpgfeXNFkdEOxGsN5FLWT
303jlqs8IXteTOAc49O5JuE2iPPSffAvlwTSfD+/cME4Xq9s4vfc0wfGzOOf
TuaQ4BFZQvSvRA+K6XEJ3jRjgdGeO1ari9tBZqdW3jUZMvzWUcres5qCZ4e7
Tm8CMhzw/OfEK8nCJ26CCReiPgI7nzI07joIuusrhk3vdkM5v+IkLYYF7YGx
JW07W/HQsQB2iGU3WJZK3yh4x4KOq80l97pbMHyJ16/3Uwt8v3/UbIB3Gqpq
Bm6yDIqxgMm1f8+EN246yFf5fnwapIPpUXlHckHyJndxoFAT0A5K7AndOg2q
IW0rZwPLMdQ5jTTLWa/x1ncSrLY6aPt78thpDkc8jzq5cf+7SrhoRPcIK56G
i2Xj5f0bwrHi83dyxJcJpI7etOcerIYqC+Mfo25koMYWr/VIpuJy5WqyfDwd
PSIqcpzzu0Dr8+ZwW4sOKDC6XhSsyEDGgulZeELFFttbfB2OvZhu3+E31T2F
ozKWTX4lnRh4qIkrkUzFL1neKN5MRY91/R4PpvthlcsLp5H1/WD1++Ty9UcU
RC6/73COjmd/lbVEE9vwO0/qHFmWhUwJe7qzRy/uPvzr2jAOQapK4V6KPxEf
Dz5h3Upl4L3e237zZr2Q+SQ6assgGS/VBhHOPGfg7bRGoR2Fk/j4bfI2tQQS
jmaYr/WMDMYT8cTnx2LYmLhCzjFduBMnN4cZ3hVGeBRzMErsLQunsxirsgsS
IG5SILpIoh8wgfd3lQIb9e2N+dzbo3GxdruzonUvPBP/JWkzR0XpSrWSS94U
LIxJ2DycOwzB5TXXbvymYpyQ6GoxIRoeySKmilYQ4PPXdT+PWFFxVLGTITdB
RyvVXD9bly6gDP8QTwnugT9+mt+FbSkY5m5v0HeKgSt0FzUTRqvxK0+bvDA/
C7+s35dqzzWA9fUX3H02j4Kh4CUpnjN0IF0UY+87RUKHij3M6mASnFj64aJi
MgCr/hl5fXrFwP2KRZ+8BUfgbs5vt0V7BlQ3POF7eIaIuV+DvstBA3Rl/Qm4
vmMaBus+VD+cqsQtw4m6WzPGcWqRXLxt9SAOapY5ky6MAT0zntugYQJ7k2Sm
XpU3Y75GTRztHQlck14ZV1+lgVf9asW4Xf1wV1pocMtdDsfmvzHRXcmC7f1j
BerL/TggQ/v852oNyuzNqXr2nAETrfx10us6QSz3Y33KOAUJNaefcZWQIED6
VLaGVBdkO+j7ea+dQL/WfZolwgw8/l2ZvW2ShOV+59BWehAieHWmGkcaQO/h
tg4lTr8UN5qW9W2vxu8aP5N+endDxBr/FdHGJJSofWhmsWUCLad8KkQkJrFf
QLkspC0L/fMt83kdyVCb+L7tptwkHr10YLuY1yu8LmGUQrlFhvO9wjzPlVpQ
PDf85B5/Ngwe7JYYrG+CRuUK3vOZE+jPJ/UqWr0ExC9Ii8+1keF+mrnzbMsE
8u7nlqg/1oTxW8JedVSSIGmJ50XOUgMcLIvoN5adhmMC5zODpBHV7Mz8vyZM
gfzh5xbXNw6jhc7J/5Z+FuCWofRpj10USMoNSzK5zMCYRKZeMKsHbDcKfDuR
TgbPPasK+d0542Jn53M8+8AxcakziJsCWcMhdJVUOuZF/0695dEPt+SuvsmW
7YDdn/aRY6fYYFgjfL30QTo29Mh+XNDpANI14rxePxvM1lVMV9bnoQot6VmG
bjfwdVcSntxjQ+QPra30fx8x33bq4tvsLoj8ubXylBcb+ArWNliNF6K6xf2D
DafHQHDd78gdYWQMUZ8OKR2g4g3CZPTxLipGle0WKNUm4Skrp+JEGRLUVEr7
CnTR8DItZ3R1ABEHjgQeW/2KCOfu39ihHMRAt71XfzLPDqFxnGjIDgIRnFQ7
W4QyqFgbcmYoUpOMt9aYjIQaEOHVn+v/FQpQMPl441izORmPt7pafOIlg17e
m89fAqgYbTZka7iHjGduGLv4c/xxOmjK7F4NFQXcZ117Hcmod3ToksH4GLRb
Fng3f6dgtnigaOE3Mm6+dJurPIIImjPDW4P2EbHrkY2W9FYKPlwdx/IapwAz
/fKOkBIiElp2neMn96Lm7WZficVxKNw8urNbn4jfZUxXuqyn4I7MGG9BzvPL
l+dT5oWoGPH+2I3bn8lY4PhG1jaACJJZ0xZ6pWOw9/jPUufXZBTS5P32Lo2K
/P9RUlc7UfHc+bO84l/JmKo1sypTnAhjnyoPeH4cg/icdbV7npFR0akkzbOM
iiNptxJKX47A7J22Em5Ovim+8VI//TgDd07Zif+xHANVHok0UTcimvA+qZ57
RkfBmMCSOU5/7XTaN7P/OBn51QKtpDl6I35OxcphkASXni7QTnNyq9REY9dT
bY6edcjtHFtHgNNq7spWnP0flBauWfGRgWk+MdUJMp3QbVZ3L+MpG278M2yN
O1WFNgIJ9jfLOiHQK1Dn7Rk2GGxNFBxzq8Gnf+RXBVYMgKcyX/yrvgnQ3i+u
a/ZmCBUC6mhkzR5Qf0pob77BgmOaku6+I60o38MndS2YhnP+jRflJck4dmUh
/J3nKMSdjKnWkKfjBMFOyN2OiGS1q68FjhPhn6JsfqokCboKxY/ds6mAs4uH
9srWTqJeV8POPxtJcOi18EXizXqQo1fM0K9O4ppNgWcuGnTAagfLc9kENqiY
6/WUP83D3y5TiuaLvcCnfar99ToW1Fl/kw3+0oYXxNukz4cRwEt5UHSHCAvO
u0gXiRo3olH+9sdFnrXw+9x6lQS1aRALVN33X+k3vCOd172GU48bYuh3Z7vG
Of3+hqmm0YXCj7W/af9tgk1VL/qeN7OB2Fl/ue5PLXI7cNc13W0HXD3V8Pgj
G5T6e7bF8lTjoGGl8MpHNaBIUNVd0JwGwz+ycpd1qpHXZ/7Wzt01IKfHLr+k
NQ27riGxKrga+1x0oFK7FyiHykNe9bEg8FpW0LqL3zBf9WKklhUTuosT9PhV
SqG3/7HWnkNEnKoPbijTYoL3rwxFglo+pG73dchOICLnYF1E1SbgjqFU2NX4
Yeicd1fYt3sIY8csCs05efy5Vvzqx1epaGBhdTFdighyLB/HXwVk2Og2x/+v
iIqt/1R3KB8Zg1sjAQe3dZLhyDuvoXRZKp4at7hDO0SEM18b37kIUGDA4suM
nsYo+st7vitqp8L5dEtnfY7ubVAPf1OmNopv7ouVxOdRgfd4lIXuEzbGtvcT
9SsaYGXmYN5MQCuwX2aUpJXQYK7UKJei0IPbVgzdO6pFwy+rHpqHDHdD750k
+zopJqfeDsRpBg7BD9O15wzFpyDo0Op1LiUfkL1Bj2AQNIqsbd2bDt0cA9Zp
oYXavGHcP/4mzobGQOf2JIOOU1OQQEv6xv/iPXYVafa+KR3BfXyal01uTEH2
xYLsn6kfcEUJo+fgkRF8ar5ncuMhEhTxaN24kTsB0oGmI+t1O3Caa2hG7twU
nO29eb3Z+x3+MrPzNfg0gv/0PIPXE0fx8mDqx2wSE/54KfA8WFOI0qIGS+yr
dHxgzLe5uZYO4Q/zP+qu/oxltqPjvT4k1O4nTBh9mQRreCv171U+1ttFdXsM
DUAR97RkOouKfs5RzwzvUNHZ76kCI6wDTkfa/opgMfBM3+EtyZEUPOJEtngx
VAs+mtGL8toTWBv54bs+k8Or161NNk1PY+iVRpGNdvcxQXitw5RZFuzUlszU
+zWNpuXL33TOB6CkrKetxpU0OLjmx2Wn1GFM3M94Vus/BSWBeW9fyubjxtcK
euctu+D9Gieh6JVsKIG7hXULDehkZXH9//fTfjIL819FYgGXwlGqLD0fv36c
K3x4ZAIcHyw3J/DVoAr/4GjhIhmPPT7jkRU9DvuuBBxW82nGGGVBtaHjFOQb
kOkp7ZuEUZ9dmgN2jmCse+D41hsklLqSe3yfIwVvCNqWyOylw9v+edFNv/sh
ZmOKWNRgGb66V7t3nf00LEV7E98H1sBJ6TZzD9sJ+D57WUz4ajXaHODTziST
Mbzui1tjMw1YQy3l0Yt9SOzsXWHFqfd/2Y6HrRcIWBK7lLi5jIlVKZ2pkht6
8enXn8oJa1lQ2mB4YbaNgPxJehm6xQ1Y7af45Y0CAxJ7h5bqDnZBD9NvoFWS
ilaKW4b1jtNh6zS5IHkNDXXUjzn0Xub4K3los3gGHeMTyAI1QOLU2fZtt2VG
4D59JqxiNx1tNPhrpw04+fCyYQCP3QAIfU8JKLWl4/fn1X9/1JPQWKw+JbNp
GF68TF2/wZiCAeeF9zY+H8eIp/YrdkxwuHWRS4R5dxibarRTRBOmMKFwwC7X
9BMq+3jcsl2VAVz3R7rV903iwpzEUy8jMiI5e/+RkRFgOB2t9dXoREpbnJnZ
r0lU09sj+FbvA9YpSGUp8UzhqorpRmrzKPZH3su16yUA4ZOS+20nJgToR38e
YfXhRiOHGGULEoS+/2xo194BLTTJDrHQCRSwCTeiWPSD4Omp7BoxJjzyFd8h
2EfADSpUvZ5TY3D/HdcVT4V63KGq6RNkwsS1EnueyZweAFu4UfS8ZgivPeA6
2MOYwBXOMvVGoXRs+6LB9OP43d4efV63M2Mg84vfmZTK4ekdkStyRejYvuY2
Me5PD5RUJbFMn9LRTS1iY7QqCTd8unsuu3QE6lqTejZbMDBsk0TsbV4ilpjf
2jDfPQI7u6zGY/9R0JCmQ+5JYOAHoc/Kyw4dUHreonpTcBIU1iacOxU/iTlH
L4vZVpIwc9X+NLlzZLST369Ww+Eq6VXZIOxfC4uiyoctRr+BKbzI+kpgYATp
4vfKDir+EtBwDb5GQgGT2r9eTybxcuALLYfPleBt1ihBWqZiipNZ0qtSGi40
WB6VEeiF/yKLVNfdJ+K1ncWez4GJ4n+tzirmFoEGn9e44fgIOK7RVp0JpYOt
2iH+u6Ik7Fx+O6akSQam0XzSSwsiiGp5JTi8oeKtBsVAOSsyqLwwMDO9SgTt
btcJx1tUjJSeUBAzJkMlV4u9vSQRnP89j75XQsVj0e1OPy0GYEleI9ikdgLc
mpy28uoO41KbzD+XTcNwsov38Ww+BVTXno2NZlNxBfHkAdQYAUE9ocTlMCps
2GhMD86loLGRl6Po7BDoPrx+LKObDnLyYYyqZ5z+zbM7drt0CBzjH2qSDlDh
xt5HaROhVBw6JtFI9BwGRdX5NXpnKOCqnP2KupuGEdJyuy8VD2NujpzXi5gp
XPzDf6XwgwlyzSmYSY4NY+vGNI3tT6ew3WS9jkrsR4wQtj1twjeKa7b5dK4+
PIXybl0amjwXMfxGc6V8yQiWG7bq5ZycwvqVX3VW16bi3pdSTp8jRkCj5It6
6TgZpNnaLry7aHhLJOtWvekwppfmGb/aPYX2/LfaI7tr8ajA2Qov3xGUMd6V
8ZvERHWJ6mHfjFrMcaT+fGIwCorB8/tFpqlATTH6qkEho7ltVaazdRPYZxp+
GdefhvZffEfrBTNhy6c1jNdYhezKrLjNj2vxx/LOzaoHplFYMzVsklSNw0b/
TPlDatFYOsvikPw0tg3dX8HTGYW2lGrdoxIToPr4V59ALwXj5Y6sOpVUiPt5
0m3c9YlwYdMn4a9XmOjQsjv/uycRm4Ii6z65MfHPxfRlo/l1uLSWN4ZvaBRf
Jt/JSAhkIrOqcdvAvlrUHTSwpxOJ+GT4XEmDAhO/TFwZZw69h/JPH1oHnowi
7cSShPF7Jta5+Zv2dNSg01VZcvOVQVB0HuzvP0wHwtG0zP86Ofmx6Ne/mVky
xm5Yh4F7J/DZ8aEZ/dlaWKnozST3UDFI9UJNTS0VN82XzIwoD8DPkLps012c
3PDuxPMl9S6U1Q4/67WNAfupz28e5abi9fjOm7KaDNR5dsCh5UoXuAg7rpH+
Q0ZnOW5rn5lx1LEmu/CONILhv/yTFpy8s/PhsCnBlol8R3f2yPwpxjBuxgbh
j6344MHQb3t1Tl8UqGhdfDkJIutf3te1H8PyfUspS2NMDN+Z9talLwEvxlNm
eJ6MoOkRTxOBaiYK92kUFHfXY61AfGhGGAlLvD7H56ZPoq6DuOjFnmwwa6mV
UrckwBxNzang1ShEy/CpnIyawEC02nZCtRdfl2nzN76kIonVVrwsTsdEqQ1a
MjL58PByTHBhHRs2R7ZuGC3owH0C17JZM7UwRNm04rHeNDiaxB3n6a7Ebbxq
FfNDvcjTNZ/XXNEOChf+2+zNzYLFc+ppz2sLUeuv93unVx14V/q/n2HVbPwz
pNd7+xqH+18R9ptfY2JHSr17X2Y6aFq2ua4U6cZaXx1NWnsnDHsm9M1qskB/
Q9vbulgSMgsvrBlzn8SOTMMCmdQK+O1v2G3hnQkBCs3KZZs4PGjAfG7o0ouV
kbGHyP9VoHBY/1ZmSgMuvZJbba00jXtkb3X8SKvFPJKvirTlCEwKLD/4M8kE
8Zp3Ph9K6nBtLFeAztoRoLdXjP38zoQdVjcDT5+gYmWU2Y7NT1swzqZoKyub
Ada7yZP9zl0YqGjYv4XYByWVqRUHb3Hy2aVBHV5/GkoMPxeTmhpABb1/NpJD
FMjV3u5xVfwB1qkPWNIvTELhB+59ZxTIeKhJo8Emk4jcf3sT53/dgCm5q7L9
p5jA1Cz49jw/DY88PpvwyY0GBx6/lH6by0CLLsX2Zk02SvJ6W6zzrwT3HwnP
fth1Q/6OoEUHMguPXSqVr1nXhweLfgkMOBTBdMR5QmscBW+R98zzZIyjiXv8
4yXlOrSaG/itWjWOqlofChcjxsBD+GNtqvcAjPIItxy+TceXRzcshtwnw7yM
StVy4SAY3Q0YP8PP8ZsTZvv2lpHAxGtYXrhiEBZ5PfcEK0+ituhYdf2+IWB7
OZym1/dDAYHYvb6zB3JPnunRBzaodq6weqyfgKcke67HAQEYk2utiltZ0Jze
dG6jXiwUrSpIa99KAH7DzoVdeSxgXxydteoqwNlf304u3+uGDV7E/WvM2SA8
u1gmmVOIRPlxZol8C/xzc5jev2sa9rsvUHvyvqDvLrFH/bbtIPa9/l0IjQ1m
D945MNwLcB2f3KwTx58vWnfrrq4Zgs6YpVd+ZwagW5a3Z/nlGFj2jcb/jByE
u42aarxe4xy99XZXyxwFURW1bUcow+hs3vwqSnQcbY49a73wcwCocz5P5+6O
Qz2X/eEBbiKatltqZ/4cQ67Nqr7y2yhYk6Eo+XMjFR792LBuyycqRLAMNb6u
puB5X5FTkh9HcZ8ysyWwggr9C15pjznjBbZ7cmRvjSJ18bZCL4cXFvbn9s8M
TWGHwcprBbrd8ET6hNPnr1QIIR4PyeHizHNc6PzNtFG8YpxPhPZRWIqzf2K3
ggiuD/s/ePIxkLLaxyN0fR+kaG3K+Fs3BdLJu6uFtDvxjRjt62XbL6iopqgq
P9eLb6ITBmxWsPG6516H2PulOOQnNZ7xogfbFprGFrawMXtM2yJjOQVXO555
2Xy1D11SXslx/2ThrunRxb9hH7D9r46UzZE+3GdrSUv+w8Ivb7skGE4fUPBX
QY33hj4U+mup+Yszv7zPg8TtD4vx1OzCtqZ7fZgb1XRasomFlFWtuyXPFmHh
L0GfTKlePHPif3Sd+TtV3/vGM6UBkakiNAqJVBrEo5KKDL1FpZQhEilKhUSR
KFRKpiIhlHme4jHP8zw7M4czGBqk8D2fP+D767r2tfaz9lrPfb/u6+xz7dVb
PQVZKDjQsErLux8abrH6tGpIIL2TxU/vpSG52HGsTKwNDr8zCVVX7gAxPOv1
uZuJm0dcwd55BJ/UJoYVPpnExT163D2e3XjGLhjCLg9CiGhCimchCUIoM3Pe
l2n4fYu4s+v2CpR8dWCpTqQbc5++FV4jzsL7xqbTcepVaHxM3ijSqQf73/U1
xVQz8ZZVXHxZTjUens91POHej+Ebl748k2Zi24DwVJ1KB/JPdJVs0ybiIYFc
8aRAOr5XXyBpipWjkmTE4axzXbjv8VlmlSYLp7Wi5jKKK/HFkbJ1p1tasfVx
v9mNXBaui3tM43k0ivMJpWavljm+MH3jwSmbfNgsUv12tRpnXfuI+oTrDLyQ
ffNaiHEW/Haeens1ZRTTHvsr9VCmUPXy3prUE8WwdJr7QPylWkxsWC2z6eUw
ikvPrnouycA9v3ZPCZK/o5XySzKPYjfWfhkbiJNn4ZBt7K93iyQ46p+CQ+wB
2GitrftNmwZvr17O+LdEAskfjudlTHtA6vkY/2XncYjcudX49oZBsJmWTnY8
0IVHq6xP3Y+Ygrajbh/KdtFhq9fg12aNbCRb7djrkkAGxY39wmy9SdRMDqg7
okmCXu6pTq9AV9iZN1mUsYqIWw2sc6iyL+GG8MMf2znc3bIofHe4gARrehxL
H4WS4d62mBMOq4kYo1LJaHxPgKH9s22mknS4w+g/TRzowR0wNinSQcOIeMXQ
1DgCHnIO+qcvPQoDW1blX3Oigm+SyDlHNyrKjn+0r7PuRtFurfHbe4ig+V94
T1vEBNoWzhtHaveiNlXgpXILEx8fSnj5QbsXmkrfbJRoLYF1I/SMRo7ecS9F
VPqL0SAuwt9pReMIVrXlLif1kcDP4P4mYyoFg8ZfftnsOYonuw6qu/wdgKKL
GkvHH9ORHekiti11GITOSrr8neTwLb1xbMUHKtbo6SRac3g1/U/LqHQvCbwb
pahujwjwxrr/ypZpMmQOas0v85FAbqtviXAFAepcxRtrXCnYfibr/L5D1fDd
qvpuut8w3FF83X5LjYHElKq+xPx+4Lf7ztMiQYRnV0LbnEUm0HRO1VbxfiFI
Wvqby2ex8aMcexzii+DVzTlBktwErAu5+/tpE8cffB2yFU8147r6iZ60MipG
9zZNa34oxCs8+cd1dMdht2pVXET0FB6+NrrtoX81Xmx5VOj8dRT25C/vi+wk
IlOm8c8z73BUu+ZitDeEkz9WP3eJOsPGwhNrrjzRaoDK9MUQUfNsqLE6PHiW
k0euTCvet0wdwCemOgpzYzTYFvx1ISeEiVaBus/7rPsBzym6Okx+Qona4aPK
KSQYuf1i5RYvMl4IT1/XqErEG3s7Xr9JrYb30ynhfYvjKEyvOrYYQIHBzNYD
D9zrMCQ3IqL3Rzz2/alaKrrNRmvlxJ0/Z+LRVW8mMNeKhaM5fWlx010gVyW3
9DKTjbRL8unNFp4QVVpuqVBVAQL54gNLh5kY4TTO2Hm7A/MrL1/cb9mFITS7
PKeEVhSy4eo4OEPE16fSEz0s6OhxP4Sav28Y3zn1NmgQCbiiYbWkqtY4WtAd
vEmfRnH2kV2iOCcnNV9IrexEGs7pZOYkjvhh+o7XVX2ebGxhWzOja2ph861r
5Kf8bDQ+6Q3/NMrgYvvJ2dfXm6DGWodq+IuFfnGpoXy/C+EVw/gkb3cLULIa
/fl+szGgYf+8zdnP2FfV+7XlfSwU3u47TyxnosePmbCVIs1wV8bxQtlUJwR9
OuG8lYeFu5xDt4Zz9oXIs0ILdToh+d1Hky45Nto8qaXn5CaBXNrksQeiLeA+
NUY8wnk+1If9ss/5wtD6YkzUn6gK+HJg4YzfGjYe/9KrfAQTwb+m5dGld60w
Z3E3G46yMSrhtPHZurfg8iJ0q1xBExgJDlzwGhvHxM+8Dq4HBrHrRd2aby0E
vNlJeiwuU83pv+sZ1WEk1O+s4n73io5JDd7vkshtaPm9W+2qNAmlTJ5l/91B
x/7NbS+3m7LxxSsThkd6JTI+eD5wkKzE8QnCz2S/UAhwj7134hYJ2aaaf3bv
mkQ3u/gVO5tTMHv/2edh/iQMlFynsmbVJGZdM5Skd0xgVMZDe8ltFFDmXb/i
+NavoFplSOPQHzrlWjvYL+TjXcmDqRkcfSHyK+QAdGANw8RYuWMcYmVTlH8H
k+Fn6WCUrkMvfL9CzCsM4vRbB4F/jxoR2h7P63d8yoCLIgLe95zYSIf+HfPV
tdCrLSRdGlmO1m8W9hrakSHba2dpGScnKf16LCqbSYCQmIsVhbfG8crIu7rn
QsMgmvz5xmFmBXjx/qr5eaIIt0dYjow8Z4M3190wC7d4DNbZqjcXMwlzO9yy
DxcQQSHL60duVyJkSv4w46eSkG5Tv/1mAx16P/FlvlV/gc91qfTgJgbGKifK
T44PYY14z5/fZ8nwLAtN8xuqIILpwtZbQwdtt9f1ZbpUQPDT3NPYDRhA/sz/
nAqvD/64u2xaANIesp9dR2nIz6I9gr00LJcI0ZwZp8Fl1Txt1bB+zFK9pzGR
TEK3rdYftu6hYd0BruMqHK5+/cBu38QkEYb+3GxuWRxEJrnM+613JHDd/d3H
y8XEDWEWrwW6J6Db+I66jRYBg+MGQvz/9MHB+NQDG2aG4YhRpZbe0DiGJfQ8
8zMdQ09TET8RBTp8vlDE/zKeoytbI//etG2EGy/MHN7yt+Dwiorrt9YlI+9e
U13YwtGj7tn6IBU65HyIOn3EhICFm1a8O67WC0cWvwSJ/aYBl9wV587YASzK
1DA11yCBqZLrxFF2PESFqrYlf2ej7uSLGIX9CJ45qWeMtYioGyOc8qVgHNL7
RlQ6Pg3AVaks8XMnbfDQiYykQYMp2Gl54ZZgJgFF50+ade8aw+TdG8Su8nBy
xbGuFHZhM0z7rDPM2MaGBO43J7xM6vCayp85rdWV8EfQ6koYErC7PDREL4cK
OU350h98CJC4o2SV5pdJ9D5QlTpeQMRmell33+RTLLfV9y5VYIMdne5ZOtOA
TNtLOHu6GA7JiMi7q+YCn70cdxSbBvujNxVSlGjodfLOTNSOcfxubWwaT6TC
E/Za46jXhfB4RktY/E0VRHWktQ5Lf8U9CXNC9e/Z4PsjvzNBvgq/fhz0/485
CS2OrbI80QSct/PqkC+lg3nq0uU75SWQccZhoSSLhBfW1LyX/MUCHcn8IzIJ
dUgMdzm3XawWXiRpLE1fJkDNFvA4ttyL9dHjs7l/J+APt/vIKQcyMIa9K+lD
7WBct3Z6fnkc1b98bebJJcDChBsxN9sDh0FmVFt/Cs13k0edPk3gY/Pu+mHH
PtS+eWDTlnKO7qow/PPSptDx7IMkGQECZAuKPO8tfYcPd+x3SWgpha1t5RE7
Tpbg1J7DEhaRbDD5fG7tKr8e8N9ypeV0OwPGRe6smfragTeE3b18ONfTyV80
EoUZ4C5+43hT9wg+JXjIqezNgah2oVi3BjZ8e+MaamSTj5pLAx552WSobGBd
+yxChFOHhlKfvCFBnMp2K53TJPj50MsooI0EqvU3N/wxIYFQaf8F3wcUkL0j
1eOxPAaH+8tfBmSSIJh7KPv4zT6YWPJTurpIRIVN1l/kv4/D/K/eTyXSVGww
4hKYWiagieVM5zZuIuo9zN7esmkK2NtNsyIyCrHi/OJN3WICKn+3N/l3uBPu
3X9cbCRPRMcNmuuVb9Px4Uhl+1hTHwxWWReclCJgkOKiQMfPCSyLpPaYkqqh
2X4L6e8CEStTu5g35+hovP4wP01hEhxzPKJTdCpx7cZrUW4DRJQ1uq1y8vk4
UNQ19G262zF1xWu9xCUyXlysHeB5RQG7XzJrtVT78EL6m+rkj1SMrYg9Kqk3
jusfhgZqPSCA+96JRLOVI2CTdrkv2pwOSz+t/6w1JMPMrR28Wv8VQPFgx7fD
3uNo+o+n9JU2AX6b2r4gdw2Dzdmzbff0mTDa9DTrw7Me2Dt27cMZg2aM4Pd2
lWmjwYTrYp71bCfa4uYXvRcp6CKtuPNrGBUsuwV3bc6mwvu3W9Yy0zqB+nDz
mZRpAnzcv85KKJXDYSHVe34IcjjC2dhtWaMKqHKt2twSJLToiQ1b/ZOOT7RN
FhZKKoBdLLjBw2IKlKwqbo79HoP5WAGVAIcplD5hH1T9tRcu6PvJzC71gXmT
iXa2VSVUEA/qcJ2cApea+b7ZjQSAkL6cgPB+uPRh+paRxSRgXYjCx6+DILtD
xTXGawrilOtWhXD6w+v0hg+RXGFYRKmNKFxBh4Nd5s2KDg14+a6v5zo2CU0P
2f+KFGXAvXtbZOZdPcBzzXIGKYeTH+ptF6xf0UGgfaun0QqOv7jEGr2XKIK4
J3myibcqgJj2UiriwBRklV117tIhQJLA64Wn28iwuHfm2fqCAeS2aPX8pErD
qLSQE9tqpvDV2b1uOxt7oGj8r0+0Qh90R4pJuw5NcfhKW1ia8/xZ90odKpY5
vJzbsqfxLRPXVaimNl1rhUrSywGjXV2QHMd/0duKBOPvL/emtlDgsNeHGxk9
Y7DCOehd6U8SFIw1LccFEbDuKFdsaRUZ1Vf8Uj5uQwJWgmrJMzoFDJ80WJwK
GAPVZNl6Xs56zpaUkxZfEXDt+lgLUgEZPcQOF/jcIsHszdtGnUUUOEqVl1xg
j4GCBGU/+w8Jnj+0jHK8QcC0SGvrlFEyylrk7abkM0F+rincUygWn4gplAin
9MGKubjdmefJkDi+cLODn4KU6paq5jdjyNd5yaRwnAQDd1zq7m4dg6KOIq3Z
CAp8/M8raVfYIJxtvHi7znUCrHwkCg++HQM3sJAKVyHh58VaqUVLKsyXHdqy
uXQUuD1EPNCHgPbW9pc/l9Og4BWddevdKMS/D84L5iWAQ8GfS3wHx8Fzd+TY
A41ROF6uoPdGkQAPwh/VWvaNw+KPvyatY0Mg/JbXxcCuHa0MugItMunAhPtV
iUc4vr+aqb+P0z8rsj72nl5FwYRF4Pf8NIZmPku9G0zJ8MheSnWjBAU3ndD7
cdNxDN2dL1o5OpLA94727gotEoo/LezrryDhm3KBRxkqZPivJM2syoUGOu3G
PntT+mH904vTDmpMWJnz6uXNzD7Q02o/NXa5FtuCY+JdlagQdcfGtM2tH9W+
xGoEJlBQ7sOvrfEcnbM1GE4SbxyHp4WR5+ukeiH/93iRdSQDdC3CTvR6DMGD
l1ZRbvHlOM7ftThuMg7K646dcnnagSn1/aUPxCjIZTS9GNhOggdUrXtWr8dB
58rktd/OPf+vDtxe/fCjgQgZXPTSSjtchrFL0Ij31Q0qpoQeExr9RAH9rwLj
9xf7UZUdwVBYTUXJtcygpjEims+cX69fTsZwqfEVx0uIuFRsKDY/QsTyanG7
69VkfNB366N/IRFbKneRrzaS8V/Z6pXaagRssBg7YnGUjDk9av/OO1Hwuasb
Zb8BAS9ehnm9hyT0ic5+kjhOxGfd3KGe2WSUeLygm1FJRKmmAOdLNr2Yo0bR
oqtPgPlk+0f7VCLY7PQd4BWmgpr65Xjdpjx8a+52Jos9jrvZcdNOwinwWG8i
91BOI1wo/X1NXJuNo8qCViplo6j3L7XsqCpnv57l+I+oEGGxKX3ENY0AUbmG
NR30y3hYsIR4z2gKj28dOROuQATG6TNy/V4jcJAlH3s5loZ/2rj/TNEIMOD7
9bul2iiElPmwz4fT8MPnK7XBUkRI0Audk7EfwcG6e03m2RzusxlMKhwiwI+Y
mfQN4qNofurTeeevNJS7A4eOZFTjtYDX9v+96cIDODGav5KFNaO0BkOHIWRu
T2n79WoAP/p/uKQ6TccNgScMDq7k+CO8E4amYfz831+5p8o0jGTvsMjSJIHo
Oe9VQ10jGLL1XphcEhX3W71Is5SlgX/RSkYt9KCIgdFH6RcU3DWUYXf/LAEK
sslsoaAxrOkRX/f9LQ1/TfRHfedm4x+p8UfLReWwd+qAXkdDI1gVMU/25Qwh
rcjzXIsXES+rb8+IYNMwyDXoxudxFu4te0qucKsC+30ZmxQojSCoUZLkwcXG
2Gm/r9fKUqB5jefafHIrlJ+jxsozWCjy9/EhG5ccYJkJf1zn1gZlhMQXhodI
oP/N4eoy9zCY3NnBn6BDw27RZaqcIQGGQ0XDrUvH4Eqo0zn1JzTs36TpX5xK
hbmQ5ftSJ3pgaTfjyTYuKtJ9fqytP0ZHWV7fT5aiI9DUEey8ynkQru7r2Jzk
zMSdj90FzY61gvjnkc4Brm7Y/qhtZdVBFod/fiXV11QDTYG3W+m/TuBLEzx/
+nc1bojzMS4LmATbzEUGzyYidPYr80gmEcHDJLRfkTYOD3mumhpX98FOyS/8
S30sfPjUxS3ofB4MVaYpPd7bztHj4oS1H1iYu5+3ynhtBahri00c/dwOBfDt
lNI1Fm68tew7ebsALv8CZ+bpLqCfahQlwziusHxS8ugmEfzlFO4+GxwE6iuW
WPo5AvQNH7knmU+DL/aNlr82jYFahnD7pwMslDeyXqXBXwiz20780DjaDRvz
u7habrJQV4L7Xb5dPDi4fTBTq+iC8lJDzZFtJCAG9FWt1iHgzEa5xMoyCm4Z
+vDgrw5HNx4srvW7SMC/cXEdN0IoyC/b1s28QYLM/1x2D6uR0Khqr0xrOwmV
/z6OWWVFBINjfu4H/xDQx8J6/nI3BX0NjwuZmBMhby7h6XkSAfdzv87zZlDw
/qoQXaNrBLjrHSXkkU3AndG5DJ5+KlK3eintdx4Cb/IeeXEFIoYNR6mJ6ozj
u9oByTJjIkRemO/5SibgU7trWpfnKCjJ22wzqEuAT2dLvwUeIiBtjYLcppM0
7FHxEbtuxkKbAY8/05YfQZTt9/vx6W7oClwuObiDhUdWjlg4NIfB/FZ77tBb
PaCubi+XncvALYGbl0xdM5HbwGTo3N8h+J3EFem2nwQnan/lLAgQcNfN1Q18
QxQ0Dd/66V4WE1OXpJtWiQTj92YXt4C+PlCJrix8rUDBjzd11/d+pkDhvjPK
ydlD8FNj5rO6DA2niX58IhxfbWaXBae4DEJVXLqBu9oUELks2vZf/oy/pFpl
4roI6L7vWy2PzxQksadnJC3uoQMpfszyEgGlKSHTHeJ0+DK6vGE3vQ4/OWg+
85olIc3l6OsNqTR8e08jWi+NCAHLdq36UsNw9U7L+s4RMr5Yq6/USqFAiZDj
A6weAur9kKKItZNY9Uxjh4zJELj2nOUvPjgAl85nb5bNpiBf5Zvqwbcc/uFu
y/u4awQKj5k4pj6i4Otfn4PzFMiwQa1hmNAyCtd2/J0P46PibMUd2bosjh++
7Fv6/GQUKuNPn+pbT8WIR1Jt9Q4kWNj38HYC/xj4CZ/xYUVOAW3HQ/X/eGsg
YWlxxPPzKL46tjm5J2wKQhlc8ju31AJ5Y6CTnccoquhtdtn0jo7uH0W3rT01
Ak8iksM+zPVDKXuL8V1ZNipkJDhfcInH13c2WZhYtAD/RV272vUsEN+lbr2e
6x4+F5OTTh3tQUH3JddD7kzYa/BuzCz4FgzOHxF+wujHss4ruoxcFtw1zLRQ
qE7GyuylXrmyDjzQGjOd5sWEiqifEr+T3+Prguo4h4Z+tHFI8BCZI2BGzyWW
bW01eCk3scUSJkHKv/mY2DgBe6x+ilf/bYGXR63EV8pMguguA5FqoS7kjlku
31fFWcfn7e9CHAggaJ+/7ntCAx5OnuTLr2RhZ09/xPkj9bDqgNgnqnAXPg7k
HUmjMzF9+NpD7pp6GFLfmzeUwALG099h+uWRePNWuMH4lU70yfvWXb+dDQXK
4YTel8XIertNuQgace99iRf6Q0TMuv7029I6EijO04QFH5Lh98auqT4qEW8s
lgrkSJKAUUMbUrbj7KfbtMVuTi4xOpLoM8O5fuU9nwtr3clQPF2zxGXeiXXJ
v47sec5CtZQTC6vK8sF8+09pp+JWvJ+Xonq1noWTKke+sDPLwUqyyN9buA+h
TShh0wATncLDLd3NnmGk717h//0PxoBnc+wg5z53jt9M5TvhBwbzUHx4kQVm
Xf5c9Zsb8TKToXnpUiV2vBAYT342BWV3TJyMj1ejbOzvlX8Ex7CuIY13bUMH
3tdtuEF06IKCLtuaZ4pMGBKNqm3/TsBS1drb7NNlsLcob9CDewpqN4hJOZlP
AHd2ZN6vYgoWfTGpbjX9DAS/hLrPniPYn6V30XxkDBaqhjf88BmH7QJKzhGp
vnDS4W3of3FEiMrJSnuQMwlZpVYFQTiG13RU/iid5vi+tXaORfQ4aBfc5vPh
6M66D+OOkRz//DvbPMzQpoGL/4baGGMGDAyYv/JrLgebWl3zdR+H8Qr1HLVL
iAH7qp6u6nlcA+/sbEK39A6jv+956z+9dWj4Xov5ZDUb/tT/W8u1vhqYIvu8
5/ZTMHHMlqwRSYKK8Z87am4RIKuurODMBjIK52jEnJjn7Jel/ZFIQyI0l7z3
6uH4uUSjtCgWkcDU/Ea/VOEYXH/082C8LhnfpKVV7N1CBrOmEaENTAJI7tr0
Oi1/ClYtdD04lVYHllmi5QLFI5x+tFz88JQISRL3w9J96TD+9PqGDON2tM0s
fzsmQUYXu88Vib8pcMb2x2LY1xFY/dRWRbZ7Cg4fMx11VKqBFeo7BYRqRlDf
Xl7wrxQZ5RusBIKlqfBX88Vgu9oIhNTLpqRVjiEWif0bonH4LbD9sF9cPyy9
D33ToEPG0cD7m8I5dfKwDUvLWQR4vfqCVAWHr/UYjzSkFDn54a2bMkWfAJNx
nV6t70n4wx1yDw2SIWhz0FTNCAGCPJ8bkkzIuH/KvaHJigLhS0Hdgl9HIa0k
Sq6gngn2ojtNlXKv4omdfUdq7frQ0c9u8sR2JlyneHC1vf0EQrM/BFMsBrEp
dt+I9Q8ingmSmrowR4RUdWsVdw8yVA4eWhnA4HCpafa8N4MI0dEL1Yv+ZJBb
Of3u+dFeXGB4hOZlMuDi6pcqyqEdUOoRwNrN8eXm8AdKI1tq0GJriSH1dCdk
vS5b9b/fL7ttwgek/lEhcvWXk/5Fg5CdvUtD5xwZex2redfso8Lda1r8ntbD
EHBWe397PAOk1pqn7E76AlPLTcQAx2E0Gk9ZGcAZP7zr5JNrEong/vLGC1PO
+NPjllPLdxnwwjj+zo9gB7g4xVyeOzuC2gthZ2F4ClT/O7UuUCEWTII1e7Zz
co3ItRMXLI8z4FkM0jLvPAbdf+t8t68cxaqoTKkrI5NwybF+cWd+IbJXTJ2W
lSbicNyeK35RLMyI61cRDixHg0xpPZOadtDPbk3cSWbihlvcTkudYTBxPWZc
vKsXanYEn9kjwkbtDV76U4RKEPl5Tv6VSj2UFtYotVV34Mdxus7VG0zcpKnK
ZzrTgYMN32R7OnsglVtW30yYBT3pU74NdbEwyrqf5bChBy0fh5sF0pi4Szo7
/s7ZCnTRWM0zT2uDgzGa1xuHWZDaoWFGeZSPq/erWx3uYKJNKiG8qaYX1G1P
64RbZ4MMr2Xfwp46UD7np6WpzQYuE8Zzi9xSXE3ltT5txkapDIkdZ9bWwNzf
zdPpJ8rAu9g9zMy0F80vSvnYfmeiy4I4a7UI4rr9X2JWc3SCh3qkLtu5GOG3
hHq6CRGDQi/N8F6dghf7ZP2lfbNxb/J63xW3CHho9omCeFAdnNc8fMpzfgK3
7SlWMJYjY0LQjFypew9uV9gT/LeQgUTeZ5tfnu3EK6bKTUM+RDic8VnsntAE
iq+QOZsf1Af576/nf52rwrOGVZSfOIlfc2pOUHoJ0P2u2V+8vQuk4Ke3ymYa
BurzBgXSOFyi9/RWYuIAPjwzwD28kYlV82GHI5y/Y2r5+qWogBGMXjv10LR/
Cu3ahg/+lq3FpSMO6/cOj2Co026u421T6Or066ruuhpMr7w9mswzimO/Yrbu
KpjCw6WytA3ba/Gfi8Vt8ugoFnltepLcMIVry2e7k71K0eu6nf13ju9k921J
lNKeRKt3LNfJN2W4Tcv2qSz3JDpZnvLeFkuCF66zJX4/ItHVt81FgD2FStOU
+xn7x4Cot++06qY38DLyddZ18WoY6tSZuGrABqs42QPTDhV4y7TGfiyEgLdE
mtXqo4hwjfXm069fFHC7eTam1YsNZE2p/PmfHE44afh9lUQtlp+m2G1wZsL+
W9Wt7hqdGKP6QvG5ZgcWbct3tymjg8x0kaDjMgm+bDOrCSC8BdtUD31HxWHw
puwvDE9mAP0kReZibiaQLqcJz7YMgNLC/RcDx5jgnJdZ/ZYWDy+vbvn69jAd
REdmlHz5xnBclxV16Hg/nqk5WjOi1wPdbqZPljawwP+DRMk9nyysyeUdvLtm
HEcDVlv2bm0F6zKt3HgyBfZ8q8isud2B22KXow59YuEB73c77+YUQe4uVj0l
ZRx1l9/kBso1gpmbR+O3ZxQ4abrnUOTeKbis6nSpB4dxbsRIRjixA71U1C01
CBNY1BIisWMTBUee3iv/VhKLrbfU7I2pRIjJYB97dZ6EurVvBw4ok9H9gOBS
QzcBBwfeBSeXEGE8Y/Xh818ocHzlcwKxfwjPqZOS8rIZyLWZcLDBIxffbPfs
TzhJhQGvauNgvXH8SV+aPBJUg3QHdmOpJwVt3Q69q3pPAnnXalWyBAFefXTe
WD1FwEDDp8b6L0ko098gKTZAxi+ZS9/TU0fw2e9i29jfRBTfaXgyl0XFNQFh
W4r2EzD7oxSP0mESrha8uXV9IQXvrDPpRsYUTEoadJ1QHIP9ib/rbg3H4Tbi
BQO/523wLk4jb/QUAbITPO4X205CA4RIla2/AwcSoqtdNvxP/8p0lVYScdbW
V1tZnghrhsaPP8+ZxOE1Two23yiH14P6ixk5zfjr8atn82IT+EGFnw3tZFC+
42QKWj3oWdwb/UqOil43z1gavqZCSOJdd9svNGhKT9pjaUCDubAkbp30UrhX
EfPrfR4bdVMcHkynfIfNV1ylfYRyIGEwJHRzSRwmrY05eusoE/RaZ2cX6QOY
cq4kuyCKhJHrnaTqLpKwO0BM6ag7CSRPbhq6+YWIBR8fcd30IeHpKruOy0fJ
IMaT84aoS4RF742M+W0deI6vzF7sBR14AzrbzBJJ8G2F+Pi2ORJSq5Ad3UpE
ifV/vv3v/f/oIX2LJzQS/tljSdYiEjFZc/OLz7dI4KfDKlY5ycl39oZrrheT
MOPgn6/zZQwcrCdnPoktRq3Whz86zw1B1y43D3tJBv4ki5JXKVbiPY2r8Wd0
R+CXptizLyP1IB1O1i+eZKF2ts7FtqIafKouKKM/ysRi3uhgPodA5EqrjS6a
64U8982Bi19JoCNvIjO8QML6KvO24EoiRvUKmjjSGOjpHm158U87OtC51l75
2IOFh/dsXKwjwR2JQIM1nDwprbrdxvDNKHZU385lEUgQLKJfOt9JQfUd3VeM
w0dR28G14cUQZ377yPXxnPz20Xny/IrgUTTPd7O2/jMOA4Qupb+eo/BwT+Yu
vDcC5Htbzq+1iYNTK0UC+Xew4bagZfLK1S34aarGV+flFF6O+1Wje6gWYwb6
9wTFj+L7ce11zO8UzDJwW6KnJCH/slSRg8kEvtzZPrGmhoxfb2Rn3eicQIFZ
8mopn3J8nz6rtL97HAt4PgjI9ZAxZ/d7L4P8NjyAvXWOIyRonBAfU3tFwksy
QsMJS0S8rcPXtXs6DXbEZyld62HC5ujHr4T7e7FHaOaI9ksaDCpNocUkCU1f
/Pe8decAftdgZuzXpkKZxKO1RQMknIgX0PrvIYfrcry3KXLOfWvrCdOrTX2o
tGL/IZkr/XD82IF3LRt6oLTKafucKEeXyrnsFLPz8brlnbpM3m5Q6vKZOrKH
BVof/7sd3/Ad6cMHz2tF9kImzNYbNDGhy6Cvqf5pAc6KB4bFBvfDsOI6dZUd
TFgbevl9jn8VWv1sLr832wV0sS7tBjkWTITskvtsX44z5/mr/mP2wHrTkwLD
fCzwafByfcZMxoEXqwzW+XZDgCjjyvptLHjobB52nrcYie4jcbLuXbBaezmO
dz8LFLkma4bcy/H5hMUlwZN98GhFU419HRMaT5q3NhZ/Acf5lMmD+r0QcvKv
s/8fJhxQHFkptPAZOzZFCJQe7AO9DT+kJTj1O/BsNeRTSwD2BL3NwbUXOtev
sEufZUKWsVVzjU8sPjCML7N/2QtjD2YMDrE580SufzriFYMbbkQ9s50cBrXW
mNKNGxlwrf6iipBqNRoXnpzy2UVHw7w1ppYcXyU0u8YlGA7Cozqe25c4ddKr
XC/Eceq8IhpqFmv2BWxFqpOCp4hYFtv2MIZOBNF/Eg3+gWTwBCm+0yvs0Erk
hW/eHyL8t3Elr4X7JDC40vLkNseDc5ei4ntO3jdQdg6P/jIJZ9cbOQZoNaLS
V7PWm3dJICL5dWuOER20xnQKjlixILzbb7DS8A2q1bmJJ4h14+SB7efyzrBB
qrv9NM/acli/vFviUUANLATKfCvjjO87Px08EpuAn5dVBUMuNSLhQBLvHzU2
3D3uZHPGpw5zDIY/2q0uR4tVxU4XNNgQESUj5qxXgWzpoDzd0RqsCJCi9ZX0
Q8uSY2+sMANG1q8S1dPphGLL5qNhqmxYKHaRvsl4jblBN0o3BDdj54SSTYsu
DQVVtyVmb+gA3vOlApX/USFli07c/qxOMNPHlbefcXz2rsFVqlI7MGk6IteV
urDqeVTBKk6+KLhq75ooRINs5fKzRQe6ocR3uET+NRNEyxR+ylQ0gaVs+3zg
nwGgP95GWs3NBBfPYx1rG0uBb/6Ao0RvN/zLfCiuGMyE/J7I4R0LDeBQJPVt
/fl+IMSEXi+UZ4Ll7GSknl01WBlK3xV3ZULhvyrMlC9CkFwzb3GwH4v/rdlz
X5gJLd73Rl6pdeHJuGOzB1M6kVdV4XX7ByYsxVvGFXGX40LTvNvPyV5UcfY7
LDBaAmkD2/WOGRFx89ntazdlTkLkz3V1oh85OfHYyab9fUMoZFBm/MyyBL2U
t84r8ybCS3NVE5XDBKxoExaxCJoCnjv7um88eY/C7u51gaqDeHj3pZOFqkxQ
GywQrd4Xhj/EXi3zBA+ihNbh1lQpJoQ2mb1RW+OC0RpjzlxFw7iwkY8aFsEA
j/snCwDG4eyr/4YKFSmY9zDbhvtFBwybTT+cMmbj0eOPH4xtK0dLkwtZ9MZq
UCxzrvM/yMbm3sgXv8MqsUb788bLW2ogYPImVXqSgntkdjiVuiSgZlZqQ7DK
BI7O2Nhu4mci2eOuxE7l7yjw1p4/b3kAZRw75wvPpOOatZlhIRyudNuW95/g
PgaYZx/Non8ZwmbNma9eSnQ8Xr7m7HXNYTB+6r+mz3EEGaIaf85yePhq63F/
r+OjIP7pv+4yvkq0s1Zsnr3ORmtJje0LPBXw2WT90NPsEdxxUCZpY/E4VtvY
HpvhHYNXhvHMqAMkjD+t2uu1dxiXw3IzFA/R4F+wd6Jg2xDWjLaGt8xN4I2k
MgeegWFg3bE79jNyCIckrP7Gq9HRL9j0xHuVYWhIzeU+2zcAZvtS4nrLJjFm
1tgsuq0PU0W5ZvKdOX62z+rYw7YB7A42Ud2JNICvoh38ShRgnzxZwPdgHIQo
exkBl9qx59GZd9HjUzD0+rnp7W+I4916I2JGo7jl+y95LsIUiL2UVNkbVIue
Ggmw+sIIRmb83XIq2RXtMTyJtjSC4bz5bxx1GLDpdN+4iToZUmL4Q0Cdiprn
jcvKPw/D7iTX07FLGZB6zHqJdpOItCeHHpXXTMIXh65TG76QYMTZ4cNvBwpa
qpFbSqUI2J6j8DP/KxNNhdcn7dTKAfJKt4FMvz4oNOw/vrmXiZ7tJnSTjZ+w
Ra2aHwT74OWh82/1J5i4T8lAmJs3Ej9l7JOpyuuF8M5P2xanSXg3sLq7dWAM
kluYX/EMBWeOB8soThChXGfQ2aXHHcX20ybE/CZRcK/0ZN5vOnyZF63SWvsd
reN9Ik5fJWES1eapmtMwFrr+lDLWGgR5baHzlY/peH47+UzjKRJ+HJnPrjIi
AJg+5R9+T8FD4VXu1LApJB1bGUh1qUV9dd37do6jsK0kM1Ysg4gf//QmbSGS
YZounW9TR8T1OnlCvNlEfNBoqrVxjAxOFamdpbVEPHA8XVutiMNNDZ41tBYy
ZDb/eVbVyfHlYvEyw3Us8PV/PrlOuRZko5O2OE534r4d+oeOLTHh3Hxuc01Q
CKROvkHCqV7UCnlbe2mAAaLaFOPbffkYHZJnt3/jEGJi6/0bi2N44YpBzvA5
KsTYfHuYlEdE6eh+9zEhAnaFnrzvv4oK7b8yT23h8MDrdWvw8m0/yGZWv57r
7EIjkanR2Fss+BN28nqc+SN4YXrttENsD279G7SGsZkFxlZrbj08yYIhE93I
gZuZ0PVr3zX1C90YtS6o+3Y0xwf3HpoTtszEhIOHPEkpTJC9b/rC2eY7tJmF
s/NY9fhTXi/8rQobAssvbtZNiYGHDhkHWjZ04Ardg/LunSxY+9zm6iM2CRPl
dU/wrSJA+Suf3MoDFI4vn7n3Tp2FKvnXph5J5eKKDsED4R7dMP3pcl28Bgt3
/LOMumGdCOtcFtI3N3TDCyu5tTZeTOCSefyJJ7MKZ5UubLJq6sXqH16Z5kwW
agycW9zTn40etmvWPPFsg96Dp60tFgKxW/LlrP33HpCy+eV8YgML//vTdbA8
tRL9am680N5bAzfWvjm7Vp2NUcek149cbcej/Ac+8K4qBEaf3WqBRhbKf9sc
nnWEjAuPrx7WufYRRQllOf/7zp10DtlK9fMEtrxZVXIpIQvl3My+eRlRcGmP
49wdDtd6XTlI5/aqxEvGmzY7WDaBza2i3cK7+pD7CLXIa1USrL+5s1u0mYnV
9v5W28qY2PZt0VRsTQEmlyX8aaP2gi2rjfuO5hR8C8a51gYCHlvf2/Pvkz+2
a3neebu6H7L3XNmp85KCbg1BL99dp4LA62K1eH4arNliVcSMpSBB7Og+ed0e
UExm/54dqILngYbyMS1FwBdUuTLxLhvvnn8kcs5wGOqSXm/568GAlKq+qcvm
38H0/caFvNIsSE8N8hSNaUGfJf7jzoJsbHVqNtw0MghDa0p9Ni8xQGGF5B3z
mhSw2LIgEdVVBp7bq9cJ/UjHdxauTH1OnuHfFxx35EEu2EU8e6mmweHht+oR
RHs2rpDU3fXcLQoEtn8cMWQRUMbhH/XQ9ils5xNNJgd/gM4r/SZCfSSMFvE9
vXqQjgEWtY1DrQ3Az/wZsf95Fay98h5GfrLQJuHX3Yf6SfCSqfTgQcEYfmQx
5P0rpnDpOUNcid4HvEk14vlVExD34e0/TQsCFrluWzMS2AaqzQNXuBJ64QZv
kYz3GAM1HzXIf+dvADpPZ8uxXbVg/2/oRw6ZhbEZWSpml3PBs3DvBy/xRjRr
eVocdZiNvv3/HqvPZ3K4sOKZSHQbVkXt+hLDZuG6QYFrjxj+kHpRaH73ICeX
PSwqK+XUX1PyVunoBQb82/UtsTavEzuk5Z/9k+jDbZ8f52h6V8O1ppy93CUk
bFc736d+hw6mpDvdRTmD8ML3GfcRQSbkqmiKfFP6AqE/V134W9kNLivNCm0j
SFBtft77ImkcY3RsUP9KIhS8/iYhK9GPMfOVGjrRTLRt1Gid/jQE74Le2+r0
MWBq0atMWjQeHC7u5zu1fRJ669+qvRRqQvlQy7MEJSLqBZ+r0s8bhDUqpcof
1jPhm+RDufwb7+HkrTrShMsg5JQUjQls4fBBi6iP7sooKEpcNZiyJRbo7cXt
ApLtWCteQkz/wYJdHzQXHhX6ggz99FFWWyO6qXkqjHF4sVanX1Y0+Q30X2Y/
Tt3Sie+KjMc1M1hwp7QqDcyIuAPOmW44NgmP5+JCQ67VQdrH68pntxSiwPa3
YTv1M6EkO52rv5EN5pfE+XidiejUdOTZ3O1JuDpa1BLmWAnPpjYHOL0l4vg0
r6OS7CRU/N4Wn8yuhZd/UMLwBxGNTx0w+sLxDZJF5PzGyWoc0vh8KYXDRzfc
B1TuNtRi1lIrffeTUbyuR1z05vip7nPicl5+A7qJ7yK8SR3G4xXMEZftJAy7
ePWYano/xn91kBXW5/jzxrbYFl/EM60RNrz7J8Dyq1He3tcUqD8VXy8oYQ8z
QtNMba5WEMpSbs+TYqPoHmZ6XzwVDG1q7r4jj+KH1+1xR9qIWGf/s3lRkQp/
eMMsTwkQ8Jpv3tBoHxET54WPjm+kQdDGa5Hc1znzGtvQ+Mk9SC7wIF4vJ4K+
56uUQMlJ2FSlIWuxrwafrLCQums2ARfzZO9+N+jAshdV+XVkEtbuCLHr9qBC
oB9rkcefClwld732TnVh3PuZ5fsnxpB0PUz3lSEN64xKza82EWDU4sDNYzcn
oF5/aBflQTsOGI/53f9LwncPA9XeMkbxyBtXmvVbGr7PszFNjiCAU1JAbVhd
JVZrUGUIjmy0cow8Sf1UBqzaPNW7ZtV4rHGSP+YiG3+YHcdLbxCaljyVf9/u
Ad/x+4W8v5nQ1K77ktxbDNFvbXP7t43CxsvkP1KbGNAu3qPD45SHlXw8lUOG
BLydHKSSGUTFqxa3ji1sJcJSnc7GrVJEnD4jf1GZ03cdakL2BBuOD9sbehU9
HsHzu+MWPLg5Os3+vuOj2Sjs4X+yrKlHREL6fw6GkIl2J78vxA9MQnlfOnXD
jk7QCHrQ9VCEBQ0njkdaPK+H6EJu0/bKUTw7LJNXJVkDG9z/GZe8ngLjMvK4
NCMdtwZLesZH0eHl2Nf5vg1ksP8bqfyakx+1fB+Hf6higqrAzU8rIQ06ldXX
lWQ1wMrWmtlBTo4eWdLskkvtgN2KB4K+VY7ArtMVV6dPMEBH2f/vq1fp+Ojf
4haxP93QwN1HmONnwZxie7r6RAmIfq3i31hBhW8y1B9tK6iw75bdu9fT3ZjW
/7SxX50I7g32+aqONOSbNf6szjWKMRM1+v88yPD+2HJV6RAJm0Q3HhNeJqCj
j9Gnn7UT4MQX5Sk+MwzNzBvrFE2H8XTqSISz7TgcZnoOO9QQYWdyc9XLKwOY
uGb5j7MoCUcmmbmSHytRcFp8YtMSHe7b7lWW2kyAp/vXuq3ymAJRh/C1zk8K
0SuqxmZKmIgdYn6//vd+zzd36juXBxQQdOa1f365DJXlouPOvGNjgPpzEznb
73BOprPVKr8aSgeVatCdCc/rhnl3fu0FQZEtO3xWcvbta/bpNiUGHGd6dW2l
ZWGm4MFa7kI6RK+pbXM63QFGl7393H8TML1xVjmR0w9yAmkOTNM8sM0bY4iZ
knDdVPv+pducXOablpSk3gBRh4x+yRf2gPzB5pTfplSU+AdPlT4P4tynGiPD
BjLWGD26szO+BjqJbto7I6dQua/+X0zAKFINzqko3JgCmcWXjkfO9sKBrCvu
W2z7YalTT/RFFh3OTM6Z3xsYAfc19rcqK/rgySmBzyq7J3GQ9Cx2ejYN/WRM
qSvOkdBmL0925fVJXH1DxI2u2QKMh+lfBYMJuM4y7FXrcTKejK39YJg3hupG
jKTYNRRUPZ+o4PtkDFaRj0h6pvZjYIBjnuWfCYhw6pt0iqqCya1VrgXMJiSc
3aDxpo8F7jH3ztvvIoPvAPtfcvAIJjAaZnxnKLDN2noHrKiHGZGipad8hWjG
9d6SxtHnoedcYa+KC8EpUKwiaXsTNhbmCD2WYcOYhsiFVI1h9Oabz93nNgVC
7d/9D5S346jQX3kjzjnX19j9g6+RiZsFTjSf6/yC5S+OuREedUOXh+Sj4SAm
RiekX/Lc0IQtxAcNPJl9kPWbLseTwETjzoWxDYrZeNjkwCdFpX7oOnz16L9T
TBxUC/AM2FGJd7LbzpTkdMFHcmmMGGcep6+NlLPXWnC9tMZ9vWf98Nl6LmPy
FAPPxJ1eIajWgTv/VnDzrejAfu7ZXq4BKiY1q7by11Mx+fK2z88MhyAq5vJ6
misDNy6J7Ejl9PHR+8KdBw/2govrjwK7LiZuF2+/rBFaDB8SlouUQ3rAa66N
5CnJwg7e+RcRpUkw66BQ6XK8FxxsVG3455loZnSUPROZCAMhpu1Pif1Q+9T4
s8J/TBTsNr27Nb0Q/w4mXl0bw4IA81tqx1dlo6TvarVNQp3wfVmQfLWGBD5x
r9q8KybwPu+TMe7UVlQUhx+hawZxvaG5R/YKJlS5i0mJ7SlF/wZZ5oondDz6
uMiLlF+IqMDcFCROxk5F+2/DVgQ891UwwqNvEq5fn4hwy69DtV7aAfnv4+g1
e8v9wokO/HexIuRNIhm3ifiuLvUk4QHjPaH7VIlY+qtMNO8bGR/dy8uklhFx
7BS/uPM6El4Z+D34MISMM5c/40x7B5LW9jR27JtAG/7vnhUzJHwb/5V68XQH
fnir9ebetQmUjv9P/PoACXnCWsofxnLyztz5grPJeehN//5hX2kH7LcYnDFQ
oMK5e+t/KB8cR6NNjdfe2dfjO2GDqn+5BFy64XSPZyUZjWykjeic+0r5rguZ
lJjEH2ebwgdyLoC3F1vjiT+n7sAHkdLPqFhRyMdMSRpEBcfwakIoGUf4D7/V
NauBaffoYF8aC/gudVQ4+TXAfFoYf74cBZ1sj3P/0hqHDv07JP3CDpwypdnm
s7LgyhGVeq2XnNziOa+UllYFkTdK29BrHLU/vswvuN+FD7zyFZJukTFI0OmR
tFYonvgQt2ujwhT2HudZGzdBwBkFjfJF+2o0FnphYd9DR8YdtaGPe0h4lJTL
o/2Fk3d+fQvUECBiuuCV4ap4Mj4ReJb5/cAonBev9b9vMQm5eU4dHuu74ca1
2nPXuyjoy5ty9+ZJGmx7UfrR37ELhUPGpCtsSfAzcr8XqX4c/Br4Zh5ReqCw
NfVxi9wEGFgsFa/VIYLka2XqloU+IMtkhacR6djt4s52fdML18aOpibKjuKQ
wZv96Zz++J41bSugT4XHm0BW+QwN31QNXmjx45xP3itXHjwsgmUfR+G5rZ3I
uKVcIchgQUW2o8+pzmpInNVulvRvwH0nJlPMxsbRT5Bd2KtHxb6h9tYTUR9g
D7dsxkwIE/vtZLze7epHsVNf2dvr0zF7b4YZU7kG6norfS33svHTdiOxD0pV
kEjU4Nv/uR42hRxwGJJmo5zPLXIydwWYmFYfrng5hcfG/Fi5egRk2kn83n37
NhruPMt4coaN9Ai5zl/RtXj3pPvYWa5SfPejOur81QFcF5OmW72PiUpeU8q1
RUUg0x95lvqvEtjTTx/4cXjj75M96pnXK8Ateo90rzsbZ4m9Ub71xZjSFxd9
pqES+cqZMuHy4/ic/8ycsjCNkzvXnHf7EAvB1+Mjdk0zsWbqIr938QegaekI
LQf0Ysah2sR/3xg4937Of1VSKfSbunkQ7g3hnopjR/pzSdDCfGamU0mCR++8
hLnmiCDdsvRo954WoCT0DvC8YsH3rK70L9frQTHCr3BDJgnmD7Xiru8kCHr7
qMR4iQhHrqqFSDeSgN9T/05wCwVOTlpUzYyMQgvLh+JjRYIdX298276NBNQD
n/gP0EjwTiBKUo5Agjrrkofb8ykQVhj2SGV8FK72vuTpGSJBzNbmkUvl//v+
1FPR472jUJ4RmCGlxcBrLUcfkS3L4T/uLp//fgyj8Kvt5I60SWjoJQ78Z5UP
cw9i7R7fJUJe3J9/eiXNqB+66c2bIQZQS9zvnI7rAyHFvpoNxlMQPmrtqxqf
BhJKu1+seEuA+PbT275OtMOpiYOSm76xcKPC0jnLnyWwnIXX33cycZ3jwb7N
r5IhyZyPrbSiD4pDj9Z8OMyGJPVCjzsi5fBrvbMmD6sWMnavS83VYkNBjH7N
VetaOP/1fdWng+UgfLezl7+MACzXHWnPv/pDoVuHRprOFIgLDtLeXyoHKTHD
o/UjdTg2eoOwcjcbvqtWzto7scFoNpxepV6KvC5JejrKVZgwtDO29SAbRu0s
lxUD4yE50Vz8enYT8NCXzrM8+0DPXY/oVclEzZUxLAPZ9yi3zZJ9erIbzNlF
irYRTBx49Uf2F60eFYgOIwkpJDiu1hFyLp0E5n6G9DMiJCiVKukdEmHDeQrj
yYHtobAiMnuKHdAKDizDLc0czh8TYKLyRirQp6pCh8Z64cGJuOzfHL3cpblV
UCaRCZnkXyzDU+2wToAxSjYdxcLF4qQ3RuPw/pr3qRPJY/js3t5NdUX1yNat
E+DxngRuw6Ne0E/A4gXjf0l7a/DItJVbX8okHDQ2UXo2SkBbm01K8+IEvG64
zztKexxWn9xuXjI/gpqaQux7dt34Ot2qmaDDgktbnHd+nEvH36T0DkoMAV/N
Dm47UcHJF+bm+n8ja9Hr8LcH7bVUiJ95sHbv0W6Qek2hze2kwpYLm9/3t0zC
l7n2WeFhb2yJFHhw2YMIL+4vKdy/R4fDrmjwYVUldCX/bkgeIcFugU2PUS4f
VerkgyyC2WhtZ/9vUasSm84qC9kYTAF/1dBgFL0A6Q9Ka+sdCXDmRJ0e/RAB
FNSO5n25T4fOpxlu2470wFCHyvzbWhYeD00TPHi5AQo/LioePFyPeRsINPWH
lRAuQc9c1UmHF4dscn3Ok0Cu+qrBoh0JQ88UpuVupQNl0sxlhW4LHLr1RYoZ
MYyZszdP7ZuahNOhV+o8PLugIUKkrIe3E+rt2njEvcfhctLKdy7VZHj8K1Y7
vaMeVsj9kJ8am4DmVSl64Ts5/B/b9Mk4eQL2X000im5ogLRPd0kVl8hwpaKs
//UVJvqV5oVLmMVyzpvxTLzFANgMra+dXe5Ah8SNu7m/0IHZaz/9mELAms4f
qXn67aAu7Vj7UZeF7DOjfHkfGuCyS8yuHRy+05R4HbDrUhMwlOdTG1yqUdX1
neaNgCbY3ihbLCLKxkEHvaUc/2L8zPNoqCO7EcNaWnbr+bGQ+8YqLVZWE/Ju
aA6jSA/BIc/3l5l2FIicW4jXCKfAiLz9+bKUCeB+dt1+/F8D9JgEWEieI8Mi
icsqYnU82glGZ1tmsvHN9ei+L/IVUOi+Zzy0jgA8dvZu+gV0vB4ueaWCpxME
yLLvz1xoxBXMcr7NW9n4lmwmqvKzGG72SuQP8RJQoWeMbFxDg7WB6YxLwWN4
aO+uJcYXBjjuCd8db9wKldUX6o/L98O/k+ZqrmwGtDnrK5QMN4HExgnlYN8+
iJ6ky6r4U/DGdM7PN/9RsTIuoPibCSeXa1H1r34ZRhfTXU+/l02igdKpOWXz
biSoSm11mhuFv3I0b75DZKBrqrqssaRAQsL27oJ7NJSImQhf4CFjRd+W1UqK
A3gxx3ZHzotxWNf7f3Sd+T+U7/fH0yKVorK0UJYiSWhRtk4qskVKpBBSEZWk
RUp4p4hsyZotS1mzl8KxZCf7bpjFmH1GSUWq73z+gO+vc8/jftzXnOu8zvM5
P9xXYUvMNAk/C33uCLAegr6JWe3NRoMQqR+4xT+egy/cDvcPiVbCuY0Wh4KT
GOCYMD7XWDGM2x8vdhP3GoNLN3X07c+y8QjxyL2qoB5c3la5OWf/ILo23Ju7
qsNBhxrSkd7F7RhftYpRw+lHTe/V6x/wfThyHTP0p1YfPj/rqd16px6GRXet
T37Fgf1DGl27JOsg4YCXwkjAANR7LWRqX+CCpJLvXPboE3SSNF23dlsfCPXk
eM+2MkFx4+Dd4UfjIH7VMkZrRzcuMhEIPKXNQRcbU/qtI4FYW+Uz3LJ8BNIL
iPnr/Roxp1Nn/OUIF1bdrcl74t4Ci64BIeD4CK5SZG3+0c0CL1nlkfVx3bD9
jdstNQkqbhc5qe24ZQr/NHXaXF7oAZ/cNNcHKwngrx6m1/uBiUE3VpgX03tx
61tmbf0oCcRqDh6r0qRjJS2ty626H0W6y7uTdxNwhaqzoflmNl5aLaxwz7EO
GnMmV2BbNyQ66dx06edgJ1k6WjyxA09UqnLqjvejme4qe8GtXGzXZTLGefkg
dqxqU4YWAxOOlWILYxgP7Ul2TksnwK/5bUFCMmTcsqlUmGHBwMnUW+b7HnVA
NTPu3l07BtzfL0WrFJxAW0K1x5rsQXz2S+KrW8EkuMu3/tj+iorZzIvHWqoG
sHRgpOrXDANNdfxdtrEToTDjr7hsCRnktlaP31BjQfaQlJCx8yC+EU9Z08Df
hwxKkfp2PsfWLy97VKTbg8S/Tz9YyxGBYX8i88yBcViVsdHG9QATbRwvZTf1
9qHt0iekrXsoKJ1sJWn8ZQRm3h26/6KLivtq7ju/nGfjnYgbskHyoVgax/at
lB2FoNMu2rbLWKiZlWC969sAOM6vq/f3Hgav+btt6Ss42FFKIG25EYqOM49e
/CSOwLzI+WQny26oe/WuS4Hvtwlau9Zov6IB6YbpDrvWEUx1ZdYqD7Exc1Qi
Rtm2Egx2LPoV+f4ilqhd0vdo4GF8j+D2+NBq/HtXZrm5Ryok3e3u/NNORNsv
sosUDrDAeaVHlb9oI/5Oi31ESBzHJ2qHn1wOY4FD8OG81ZH38eU3RUNPNyL+
ajkbrnCXBfP6LReM+ppw1r/8/oO94/x5Rv4v/wULmhRu7tSv43Niuz05bZqM
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
Kz/oQrqo1b0dgRwwTBtYsyS7ETPPz/9rMKVAS1lXgV4UHQmFLPb05AfQFgiK
pwYQwNhmr22WDRtD3+qczbAjYKEn9+y+PePg2bT34go7IipYfvwW0TGAHyB5
2mwxDe4Mx6i+MqbgpoIeI7N6GvS8FmtzPkPCyGuGLjfihoF2y72A0FOKk+RL
eu8PkKAnQylxSTYTdT0ejZyxJcK8+wbF/ccIuGv17z0DR8bhzuGQrb5bibiT
uWpT0iwdDlxJdk7268N5OSGPRSvIfL5q4irwczN+8NbTE1nVeMi9z/epBhE+
Fh2d9VhBwOSk5xr9HuNwMDpStjOPAsUnPwt2TxdgHPtDtYoQA/8mexts1iSj
GN1E7wCNAU17krn7Fypx0bV1t3yc2/Eq41FFWjEFPtoKmS9pH8fTKwNNos9U
QvYLGY0ikwYMSywK2i7Kg/CSpDG1inJYaqT2e5FxA0ZY9GS6yPJgreFNrwtC
TLh104pobknCt/mRf2c1m2DqlaWBs1gvTBu8CDm0vw/hfYxrQA4LtLaECn7I
68XKlz895B6PwVffC62RbVQ8o9PjHitajbMjQULJx8iQ4ZRwbGMDA0HoG/0V
n0MCXMXu3hBMhKL33t98CSwUuKk+Z9AxiEv+eS4t16bB7Up2wKFCMgStnOtr
/z6A61wFlh32osMakYK/q1YTIdghyjf7DQVozh/o+kuK0MBv/T2R9QwUWBm6
RX8lC46kfcn5YTOCWvFJerv/tWKabh7vkWkvzJ3oC0q50YcxT16XqX1mwY0r
+2hRLkzIcJF93iY+iI6rlkyN9vWj3RGpwU4bFngT1pKCMkfxsrOSm8LpKvyv
965gTDwZ8s9dcUidIYJCxGyWSzYF6buzcpoTGBC9o0vyMTkXTgfrrtDhkdEl
6+Q1mXASRLcvG3HYTQYbvSuWt4MoGCCibL07cxzuPVKsqz7TAU39sZkfvlNw
b8O7OGn/QXgb8j1EncXGlaLHXomYF6N1aUIwdwkRZLwvjwuuZyHr31BMuVMt
js42e/NOj4NOx4vaKZ9OGDTN/rZuhIJr93Z+6lMawLTm0ZmmJWz88Wbsqx+3
A77UVZxoHaPCFeruqMbLNNw5MnM3N64Tjx/8eLP4NBk3x3/WeDk4jleklf5H
0ZlHU/W9YbwSRaQIUZpQREqUofKiQSEqldCg0EgUUZQomaKUMUSmfDOUKTOv
KfM8T5c7uzNSSqV+9/fvWefss/c++32e57PWXvt07eTnFYrl6R03ljBRJPGB
e4fPBB5R2HfhZ/AQhCY65sUPF6LNVpeFrFA2sP2sj/WsJuLnj+L2af/yIcTD
7FqUFwvaR0ViEjpJ2ECwNV+aSwZF9yeW534R4baegLrQBwpKXK68xBInwx7K
2urwdBKsMefmkjMouDuX/MhmDQuSLt0Uj0i5gz8HA4oWQsjY4H/uSdKPHBTY
kBQ0GDmF641knx3Wq4Mdhx4v89OlgGNqJHdCg4FidgX5lW+7sFtLp+ADsQ2V
KLtEU1x4OOF46Kj+QgsE5m7PMPSkgS6JfIVZNQI1B7eGisdT8GBVTmzuaw4a
Wq9jEPI6Ma5r+s3i1UOwzl3w64pfHNxYaDGXuL0VzU39Zb2eDsK/jO8OnzJ5
KN7/dvu7lFwIj7jgbNreDW3bb33JzeFh8Mtwu+n9FfDdzP+ceGMXdHS0ffa3
56KA1KOKbVuGwLDfTXlbVhWcKnNIinIiQ9tRL72jJiTQqnLp+JdCwQJGqjDl
Gg8j98kfDbhhBWanY8ZavvaC7ISeE/slFZmN9tkbS2m4Lffeh3+VA5AwfqrU
4AATpTu2xh91nsBC7pO8p1mD8HDXjsgaIS56Xo9+1SDYjI1cvVj7sUFYFLCl
diaEjf3L6O8dEvoxe1R2h/qVIej9dN358Ykh1IjSsBCdZoFv0rX5uyFDqJIT
cGB2jgkk0UUfubr+YH7Otf5ZARn7D67+8PgsC2SdRD0Dn3dgqOx5YWkfIjap
UNQ8flJBdOudPW6Jo3B8UivEbYCCUjqZiy9PM8H8agdt/vYgYkaS+DQQcJHt
iRVrhXm4k3KroWFFH4TVNNm3+NXCz1XWsc8DJ/EALWrJZhsafH5YuXb6RhVO
PfhPtjiSi2d1PXKUPevw6J3xVewrA8BZJbn8cDgZNy7RzYpv4Otw5/msmxpd
6BisJsOs6IBH7Sk7rb4zYB/xwun7PmT8KrGQGCHYDUZWd/eecmOAU6Plr/4O
fj7rG88wXkcEERYneMdrCrxNiOOGBVHw7UnfS5k3GRhx0C36hXwbbjKymPvt
RgF5P1Z2/GsOULYqmmmGdMOrp4kWqoQBVJXt/e43y4GEnSUd+yQ7wYUdylK7
NoCkLhcBznEarKZsHv//PtIGP8aeJ4Qh3HrXy+ntZx5sSHWbvkNqxVpWdP4C
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
CUUXhrsKcUOB9+UDJZ2gLfwjmLGdBXY6E8XP23vg8CojiXMJ/ZCik6eo6svA
XUpu+X+TSvH637c8/NcrMXCncJiYPhs1Dd5L5+oMoqVbDD6/OYj2Hxq5yqfo
qPBLrWJk5SgKj1RK37Um46Pr011JzF6k+C+IEvwJcM0pOGv4LBF2i671EDg5
isUvrqzstCpF5s8Dl9doVKB1YoLnC1M21tzylxYaJMGFQI8LCaI0sOtsDHxp
RUALM12i6TAZlu2immXL6BDiJPyWJ70JfyhkO/dQSOCx0mTUOXIEeC9/cewr
H8KyOc9O8hoSaAt2tUiRKfDp5qh0zB2OziSOlJ941w5Sltq1NgtUcEt+1rt8
iQazXw8fdXHuBskrmwYbcmmQOjzaJf2WAkdvrt+pyVUFtXn/yTqakmBD5MBA
9DUGUDY3bfgs0go6NP+M5k4KiB+sE0iqG4XxpD2mAcVDKPhwfJaoScCf4dsi
r/8exYDeWtB2G8as5TLD7b4EfHz+j69ZxCi+DqrZ0R7ZAbpP/U3PJo6AiYsr
9+/7IxCw5N5a2DqED7aqEmWNCHjy1sXe2dFRzPZwvqboQoTDS7+PEW6Pwa3K
bFGFzE4wL1BcsFouRjkN1z/kuQpcmTBTzrRmY1+1l9PE8V7wFLYK+BBDg69G
BaUaIhQ4LLe4XfQPGQZPnbHqaaWDen9DYNGvBqz6k5RwcxnxRqZM3e7LZehw
73J93RM2GkedN2pZzcnH9Zkt7zYzIPO4ndkd7zJYDuO91UMugHVPovvM9g3D
xP70BoHqcbhQ5R61apKC2rqrm+3ESDjjlmPzTJOMBtvtKAG1OSB/fSghR2kY
dC/+0PTpGgfSHaHK40FUhLlwqcZoEn5+oavEx03CkI3Uuy3sQZyaG5KV+TKI
L41uzLG+07F69YVrfhz+XFlRvc1RkYzvLHnXsW8PYNIe5/pN5EGEtZYF7T6D
WBaWMf26hI5Xw3xUubzG4NH5DOdN6wdg6Ya06AnfAYw2EHLp8xgD+pDV2dJt
/agvKyJ8+fkgaCxItlEodPBcSd6hNzgI26wkuF6sGsQvIi/v9jfSYZtfZ5Lw
WgKs3/1jbmTvIOpcP+F/pXcILgW2j3a+GoHgUaP6hBVkfLCxQKsgYxQM5U6/
D50bAreiA5s/UAho+tl+5lASEca2fJsVlKQAv6L8ZQt3Tl5+Jc4tNzwAFScO
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
xly3pnQ2keB+EJdsTSkZbG6/vPpPdQz0LBscXvfV4CrPST0pzn7xnJkzPtrb
Cw/8NzwxvM8Av81CcxPCNBjv3vdH5zIFDDpOZpi49mHtFsP8H2E0WP5NjBA+
TgIBX6a0ixUBCc0q6ftP0aCS3Fnuf4oM8gaNG04zBvBG0YP28LkCFOl09VUS
HIPR0tLA+FgKqP7nmRcdSgKDfQ4elXcYgJBRedimFDcIf28i+/Tghn3eeqc+
juPRFRHnzlp3w4U+vuSNHM4PZB0YGKimgrPl3XXfuruxPHnXvV1/aOB8iPpv
WIwE5WtC/jv9YRBd+4J29nwnoas7ka77uBPv4/lo7kg6/H5V8uRcLx0Wjtfm
5OX2wt6IQXMz0jBufGkmfk+HhL9ahHjYPATMObBN/XcqDcwpvyZ/kcagbqWu
TtlyFSjdPekxt0zC44la6+w+0YA4qdnkNkuERom1BWWc/jlRdU2j7CUN1oYp
vDe5QYTmRgh8lT6Mu1QqvXbZUGFxX75whyEN3vIuFWY0dyL/f0+MDpgRoaI4
pPDYzXHgpXTse7ntO3qmlyX5M+nQpO/ga6bRA2d5H1hlXiOiwYmo9d6uozjU
X/yDC1shjtuYRuSlwsVWmSBaCwU8854mdtaPQuHBDX/K9rWitT5BcIP5ELbc
PbuTX4gJHRKMTotbWbAzeJVn1KoGEPrjmDzWz0JX88h2Je9K3FE8sMo/h4We
UTK2vZ1V+DeM+MzyZyMk8pjHdVgSoHpefVLsFhP9N6qfegyJUJ3qs7tmjg3V
Fsk1j0e+4g9hF8pvp894NG76k+sCCaxLx3QsnjIwQ7LwpJxJOAxqOayLedeH
fA+cWpW3MpHfm++C9EQrSKt1CHstsuFSb9FRwZ8RePnNEa93WywgN0p//MFL
Bn5yOlgp89cPBsKsswtnSODD3b53dTYT6/dS9r53aoWwS9uNL/D04BdHwrye
FhO/axr2jHVEwIbf3e3UXwQ4qh29ffP5PHwkWBTyLNgdA++R7d2JbDhgw8cb
ppCFPJnR/5KGfXGF//LHaiYbJjlJ54kZE7b/Jq5Z9zoRz9/n2bb7CQEjVT7P
pYQRwXbhzBKfNAPTkhR1XHa0YqOblcqKdDsYEtY6uHKaDdIDjTZ2hWkg12Tt
wrS4hUJeaeNPOe9J99KmRwuseJgSlk/KixlEw5TIx4u+TKh5U8fVqZUJQl2k
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
slr7+7vzUc83Lf5vUh2+K3+U5v+cg9r1GleF+bj13PNOpXoyEW5dXNLY/acP
rCo/ixv+nsS81say9Wa1sHxGmub3gQhJZdEZZ9lTuDEixKOlvRqS14U7mEr3
gYxw/OM41wSIKzNXkchvh6NPDe8+FOTARt99WnLHqLDhHn3OSZMGiztGC0To
FIhrUYjeZFYHbWEqu5q53hFku33UvJgFsxVCLWEKbNzI/G/pEbMb/R2cWBtz
RiF31dGMH6epYCHctewAcwxK/fa/DiEMQbBd1o+RWRIQYqndwgUsEKudLSH9
JsG+v3Iat+Im4Z0EWK5uGoTmm6G5q4+U4+Fjzc8/aLTDC0Z086VECobPHg9f
H8NCcu05Sl/QAOyPeGxwWY+CW3v4C1GXieHifivv7qLBSrN3sgKuI9jcqfi5
PYaOD36dezjO5brs9qCKmmQElsIbJVNDIuoSc7duF2NhjvxqhjMPAXu9AlWS
8kfxifypZT3ra3Gvi3pMo8sIuC6rzDn7dQJ8nQIuKzS1Y2ZmvHnnh2FotAlY
NXl8Ao7W3na9oc8G9zIySWIfFeqmtj1s+P0ZnryvWDYiSANZXu0767ITIXyJ
8MQ+h4XX1vJajOylwpMVzbzkdiok6RY+H79OBfvW87I2SAdzvUvvbzsPgaTb
s62eLTS4oxa65kVzNgqX8c4cShnGcR+5DzvNJrFIkMnoExqD2mcBfqMkCgwU
/jZT4Ppw6C0dq4BrTFzXmakVNDuKl/UvSPacJoHtn6N7x7SoSHv2lF3C3buP
8kVc2DeLMfxBgY9qCxEbflmJmnwdR747DpkCGynYvzgblF44BE1DCkckCseh
6Ov0OVkeMvbGBLqKRpDg4WRDYFvjIDJCP6789JaFjz7/iFXafgXW/Zdr7q8x
gQbb/SsTB8hodfm/xRPyBAyXKNJpNJhCpXdC2k3JtejuHPCYw+XnrORLHsqW
7SjhLcbJTKWAql8BvT95GByfKu3/r4kBTbcb3Sg0Mu50WBk3eZCJ6RstJhzr
B/CpgtrEO1UKcO4s+BkRh9H7Kcd97uoEdjm7hus/bkX9OustkZcJkLIl78Ux
bTIsrBWTlKxk4vXpeqmHXE7cYrUdLjRyealoZNfVhQJ47DKqXpQ4iZMk86KO
G0N45MqJkMSCZMjdMxf6Pw/pvSNY6H+Diq9rVIMXXWMwRe40qD5qgrA5PZX9
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
gpdfvOS3gFKcJKifnnMqwWWJjWfE3bmwVuz7f1j4Cc9s3FNgcZnHxdzXeSTS
KKQlFgf8uJaETVVyhZSvg1i//Mm75ktsiKWm3yQUp6LzondYjl8fJhu+nVm+
ngNS8gnH1pSH4GVBPodtB2go8urI3k4BOjQ42qlWennhi3SjjkHhMaRJap4t
GiWAUd9qsQS5EGz2vGcQa8BCHeMcUfudZLBtMEvlHu7Cvgv9rWI8zxArUKDP
utAwtExwiWocGa9V7xkKmmGC+IajDmXZ6fiLqaUWzuMc+mTqleJSBgw5Lr5U
5a+COk/1NR1kClptakiCcDrsEhC64TjZCjcVtvuXxrbh13ppr/FUAsRvex7P
rmeDLENmLjK6FUf896ne3N8Gy+yvxPpnccDVrihcorUD12ygDLR09AL56ILd
Sd9RiBaV8X0g0Y89qQy1sZRR2HQi2f3YtTaQvF6juV+5H/3cel+bvWaDTO/S
8320SpDwaNFxW+xDo22Z/CJmo9AWcXrzE9EO6J2z3+rG84I2k4RXZ++3wcFd
XzOVoomgYL1Q6FPEQn8Vz28xE+lAK64yW+ZKgpM2L52/GjCxVMWGcl67B9SG
DU51+g+BI/vczIAkE3OeBE4ZfeoDH7XbwnVXB+H2z5NHXo23QLmpcaXFBBFy
9tDLRX4xYencpSm6Uw1UrBW/+t8VEmjuV3Q5qs6CizepUQ/juuH2vcLVu9YO
g9BN19bI20wQrHZYK/F6ELTCZ56eH+wHQsuqqNvIgNr5WMsnn1tggtBcvJNC
wbz8/ObSOjq2wsXJjE1loNvMkLFwpuC+U4Kes0uZKKrrtFAvTcOH7waNcrO6
8Fzb/q9826k4uEB/Kv2mCi9v3HGb9IuEpN5Zzuw4E7et7S2i63dDaMtlnbrf
rjhqeXi/QwMHxreJBP8LI4LBEx3ffMpbFGjjEDkGo2CunKpg4VUIW4ZY1qos
J9jm0Rv0q4sLvR/121nSDKBpBAc0pL/Dsy7P+6T+UcHluM+PDccZEHRGSeMx
6x2+fGLC9aBSQclnJ/93IxpUJAQfnl3thfO/t99cTqTBETHahxIxEqw4bbWl
7xZvXjWULft7tRY9EjL+FBQTIcu297PNGhZeO7HuaoR4K3LsAsrC5fvh8hua
bHcJAyWjHqVKyg5h9s1v5z65DcGLjS/KJq2YeGtNrOmsUA9u0VqoUu5g4s3U
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
    "]],
  Axes->None,
  AxesLabel->{None, None, None},
  AxesStyle->Directive[
    AbsoluteThickness[0.2]],
  BaseStyle->Automatic,
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{739.2258064516129, Automatic},
  Lighting->"Neutral",
  Method->{"ShrinkWrap" -> True, "DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "DefaultColorFunction" -> Automatic},
  PlotRange->{{-2.5, 2.5}, {-2.5, 2.5}, {-2.5, 2.5}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.9487807833835038, -3.244657136254628, 0.1483748403001678},
  ViewVertical->{0.17777197157156718`, -0.5263937758413316, 
   0.8314485665866915}]], "Output",
 CellChangeTimes->{3.7717217473209553`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"1c678682-47d9-4643-9981-a88c5bdd8950"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"]}]}], ",", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "u", "]"}], "3"]}]}], ",", 
       RowBox[{
        RowBox[{"0.5`", " ", "a", " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "3"]}]}]}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",ExpressionUUID\
->"d6b1a915-aa6a-4714-8b7b-54a16be4c06b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<BarthDecic\>\"", ",", "\"\<ParametricEquations\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771721771853979*^9, 3.771721781324443*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"57565468-de76-4aea-ae29-d22888472088"],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]], "Output",
 CellChangeTimes->{3.771721782130743*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"4d0f9578-6bb0-4a33-b17e-9678334072ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<BarthDecic\>\"", ",", "\"\<ParametricEquations\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"dfdc5faf-cd44-4cd5-a243-15d6754ab0f1"],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]], "Output",
 CellChangeTimes->{3.771721785547483*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"0794c967-be28-49fb-b598-af1fe06f10f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{"\"\<BarthDecic\>\"", ",", "\"\<ParametricEquations\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"b8cde2d3-d2e7-40a4-b119-c17f08e9d9e5"],

Cell[BoxData[
 RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]], "Output",
 CellChangeTimes->{3.771721789788486*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"6062cde6-ab25-4ba7-8f00-4d9a46882479"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"SurfaceData", "[", "]"}], ",", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"MissingQ", "[", 
      RowBox[{"SurfaceData", "[", 
       RowBox[{"\"\<BarthDecic\>\"", ","}], "]"}], "]"}]}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.771721798548685*^9, 3.7717218433172083`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"25a428cd-de61-4800-a78f-3d0323e8203b"],

Cell[BoxData[
 TemplateBox[{
  "SurfaceData","notprop",
   "\"\\!\\(\\*RowBox[{\\\"Null\\\"}]\\) is not a known property for \
\\!\\(\\*RowBox[{\\\"SurfaceData\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"SurfaceData\\\"}]\\)[\\\"Properties\\\"] for a list of \
properties.\"",2,43,16,25094795624261950479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771721844258033*^9},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"c798d0c4-eea7-4ef2-9e8d-4eea0f01c181"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"Barth decic surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BarthDecic\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BarthDecic\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Barth sextic surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BarthSextic\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BarthSextic\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Berg surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BergSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BergSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"buggle surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BuggleSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BuggleSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"calypso surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CalypsoSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CalypsoSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"calyx surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CalyxSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CalyxSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"capsule\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Capsule\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Capsule\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cassini surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CassiniSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CassiniSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"Cayley cubic (Hunt parametrization)\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CayleyCubic1\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CayleyCubic1\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"Cayley cubic (Endra\[SZ] parametrization)\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CayleyCubic2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CayleyCubic2\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hessian of the Cayley cubic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CayleyCubicHessian\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CayleyCubicHessian\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{
    "\"Banchoff's Chmutov\[Hyphen]like surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ChmutovBanchoffSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ChmutovBanchoffSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"citrus surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CitrusSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CitrusSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Clebsch diagonal cubic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ClebschDiagonalCubic\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ClebschDiagonalCubic\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"columpius surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ColumpiusSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ColumpiusSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"closed cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ConeClosed\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ConeClosed\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"corner cushion surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CornerCushionSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CornerCushionSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"crixxi surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrixxiSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CrixxiSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cross surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrossSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CrossSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cube surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CubeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CubeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cuboid surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CuboidSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CuboidSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cushion surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CushionSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CushionSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"closed cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CylinderClosed\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CylinderClosed\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
       "]"}],"\"Entity[\\\"Surface\\\", \\\"CylindricalSegmentHorizontal\\\"]\
\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"daisy surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DaisySurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DaisySurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"dance surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DanceSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DanceSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"date surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DateSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DateSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"dervish surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DervishSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DervishSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"diabolo surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DiaboloSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DiaboloSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"dromedary surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DromedarySurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DromedarySurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticHyperboloid1Sheeted\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"two\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid2Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticHyperboloid2Sheeted\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"first Endra\[SZ] octic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EndrassOctic1\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EndrassOctic1\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"second Endra\[SZ] octic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EndrassOctic2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EndrassOctic2\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"eve surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EveSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EveSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"fanfare surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"FanfareSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"FanfareSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"flirt surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"FlirtSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"FlirtSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"second funnel surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"FunnelSurface2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"FunnelSurface2\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"geisha surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"GeishaSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"GeishaSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Goursat surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"GoursatSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"GoursatSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"harlequin surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HarlequinSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HarlequinSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Taubin's heart surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HeartSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HeartSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"heaven\[Hyphen]and\[Hyphen]hell surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HeavenAndHellSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HeavenAndHellSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"helix surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HelixSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HelixSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Herz surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HerzSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HerzSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hunt surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HuntSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HuntSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicCylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicCylinder\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Eist\[UDoubleDot]te surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"IceBagSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"IceBagSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",
     RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
     RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Klein quartic surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KleinQuarticSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KleinQuarticSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"kolibri surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KolibriSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KolibriSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Labs septic surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LabsSeptic\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LabsSeptic\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Leopold surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LeopoldSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LeopoldSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"lim\[ATilde]o surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LimaoSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LimaoSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"lip surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LipSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LipSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"meow surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MeowSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MeowSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Michelangelo surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MichelangeloSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MichelangeloSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"miter surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MiterSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MiterSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"mushroom surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MushroomSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MushroomSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nepali surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"NepaliSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"NepaliSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nordstrand weird surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"NordstrandWeirdSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"NordstrandWeirdSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"oloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Oloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Oloid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"peninsula surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PeninsulaSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PeninsulaSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"pigeon surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PigeonSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PigeonSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"pipe surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PipeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PipeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"piriform surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PiriformSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PiriformSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"plane\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Plane\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Plane\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"plop surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PlopSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PlopSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"saddle surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SaddleSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SaddleSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sarti dodecic surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SartiDodecic\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SartiDodecic\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"sea horse surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SeahorseSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SeahorseSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"see\[Hyphen]through surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SeeThroughSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SeeThroughSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"snowflake surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SnowflakeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SnowflakeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"solitude surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SolitudeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SolitudeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"spitz surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SpitzSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SpitzSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"square pyramid surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SquarePyramidSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SquarePyramidSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"star surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"StarSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"StarSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Steiner type\[Hyphen]2 surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SteinerSurfaceType2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SteinerSurfaceType2\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Steiner type\[Hyphen]4 surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SteinerSurfaceType4\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SteinerSurfaceType4\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"2\[Hyphen]cylinder Steinmetz configuration\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Steinmetz2Cylinders\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Steinmetz2Cylinders\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"3\[Hyphen]cylinder Steinmetz configuration\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Steinmetz3Cylinders\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Steinmetz3Cylinders\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"subway surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SubwaySurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SubwaySurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"superegg\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Superegg\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Superegg\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"superellipsoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Superellipsoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Superellipsoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"tanglecube\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Tanglecube\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Tanglecube\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"thistle surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ThistleSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ThistleSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"tobel surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"TobelSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"TobelSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Togliatti surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"TogliattiSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"TogliattiSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"tooth surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ToothSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ToothSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"torispherical dome\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"TorisphericalDome\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"TorisphericalDome\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"twilight surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"TwilightSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"TwilightSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"two\[Hyphen]holed surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"TwoHoledSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"TwoHoledSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"vis-\[AGrave]-vis surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"VisAVisSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"VisAVisSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"waggle surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WaggleSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WaggleSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"wigwam surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WigwamSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WigwamSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"wind tunnel surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WindTunnelSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WindTunnelSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"xano surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"XanoSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"XanoSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"zeppelin surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ZeppelinSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ZeppelinSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.7717218443074007`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"545b208a-af5a-40f3-8e5e-db6284c58412"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"SurfaceData", "[", "]"}], ",", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"MissingQ", "[", 
      RowBox[{"SurfaceData", "[", 
       RowBox[{"#", ",", "\"\<ParametricEquations\>\""}], "]"}], "]"}]}], 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771721843836727*^9, 3.7717218766963797`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"1cc3eb6b-c1a4-4579-a9d9-de0ba3b2d74b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
       "]"}],"\"Entity[\\\"Surface\\\", \\\"CylindricalSegmentHorizontal\\\"]\
\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticHyperboloid1Sheeted\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",
     RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
     RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
     "\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"","\"surface\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
    "Entity"], ",", 
   TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.771721945715313*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"010ce309-5932-45d5-bdbb-a1911411fad6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.7717218627891207`*^9},ExpressionUUID->"1e79c039-80e5-4dd5-a8ac-\
8068ba97a8e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SurfaceData", "[", 
  RowBox[{
   TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
     "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
    "Entity"], ",", "\"\<ParametricEquations\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7717219560610123`*^9, 3.771721962421833*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"acdeea25-e565-4367-ae19-45fe374493cb"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], ",", 
   
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[FormalA]", " ", 
        RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
       RowBox[{
        RowBox[{"\[FormalB]", " ", 
         RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "+", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"Sin", "[", "\[FormalU]", "]"}]}]}], ",", 
       RowBox[{"\[FormalC]", " ", 
        RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.771721962678071*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"1cf51d38-c9c0-4a9d-8bee-b1ba607cdbd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], ",", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"\[FormalB]", " ", 
          RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "+", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Sin", "[", "\[FormalU]", "]"}]}]}], ",", 
        RowBox[{"\[FormalC]", " ", 
         RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], "]"}],
   "[", 
  RowBox[{"1", ",", "1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.771721967169519*^9, 3.7717219687654543`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"8c2d3336-7abf-4232-906e-b483d7cc40b7"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", " ", 
      RowBox[{"Cos", "[", "\[FormalU]$", "]"}]}], ",", 
     RowBox[{
      RowBox[{"1", " ", 
       RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], "+", 
      RowBox[{"1", " ", 
       RowBox[{"Sin", "[", "\[FormalU]$", "]"}]}]}], ",", 
     RowBox[{"1", " ", 
      RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}]}], "}"}]}], "]"}]], "Output",\

 CellChangeTimes->{3.771721969032695*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"16778850-b696-415c-84f0-5738d483a6ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", " ", 
       RowBox[{"Cos", "[", "\[FormalU]$", "]"}]}], ",", 
      RowBox[{
       RowBox[{"1", " ", 
        RowBox[{"Cos", "[", "\[FormalV]$", "]"}]}], "+", 
       RowBox[{"1", " ", 
        RowBox[{"Sin", "[", "\[FormalU]$", "]"}]}]}], ",", 
      RowBox[{"1", " ", 
       RowBox[{"Sin", "[", "\[FormalV]$", "]"}]}]}], "}"}]}], "]"}], "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.771721972405958*^9, 3.7717219731336737`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"83c2a202-f798-4389-b510-133b6425e009"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "u", "]"}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "v", "]"}], "+", 
    RowBox[{"Sin", "[", "u", "]"}]}], ",", 
   RowBox[{"Sin", "[", "v", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771721973497696*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"94204cf9-31a3-4d53-a4b1-fb2eb1a98cb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "v", "]"}], "+", 
         RowBox[{"Sin", "[", "u", "]"}]}], ",", 
        RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.5`", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], ",", 
        RowBox[{"0.5`", " ", 
         RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
        RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.771722004120535*^9, 3.7717220431864223`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"45422e62-3e6f-45ab-83ef-546e02a3e15a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.458, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {357., {171., 176.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$94476$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$94476$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[(1 - $CellContext`a$$) {
           Cos[$CellContext`u], Cos[$CellContext`v] + Sin[$CellContext`u], 
           Sin[$CellContext`v]} + $CellContext`a$$ {
          Cos[$CellContext`u] (1 + 0.5 Cos[$CellContext`v]), (1 + 
            0.5 Cos[$CellContext`v]) Sin[$CellContext`u], 0.5 
           Sin[$CellContext`v]}, {$CellContext`u, 0, 2 Pi}, {$CellContext`v, 
         0, 2 Pi}], "Specifications" :> {{$CellContext`a$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{404., {215., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.771722046831923*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"2dde325a-b951-4935-9d96-abb46278a22f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "v", "]"}], "+", 
         RowBox[{"Sin", "[", "u", "]"}]}], ",", 
        RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
        RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.771722117964759*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"29be1b41-f64a-4ce4-8f41-cdcdf94af8e5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {460., {174., 180.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$98132$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$98132$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[(1 - $CellContext`a$$) {
           Cos[$CellContext`u], Cos[$CellContext`v] + Sin[$CellContext`u], 
           Sin[$CellContext`v]} + $CellContext`a$$ {
          Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
           Sin[$CellContext`v], 
           Cos[$CellContext`v]}, {$CellContext`u, 0, 2 Pi}, {$CellContext`v, 
         0, 2 Pi}], "Specifications" :> {{$CellContext`a$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{507., {218., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7717221186390333`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"2aa31398-d66e-45d2-9b31-d88e7c417677"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "\[Rule]", 
     RowBox[{"SurfaceData", "[", 
      RowBox[{"#", ",", "\"\<ParametricEquations\>\""}], "]"}]}], "&"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
      
      "Entity"], ",", 
     TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
         "]"}],"\"Entity[\\\"Surface\\\", \
\\\"CylindricalSegmentHorizontal\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
      
      "Entity"], ",", 
     TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
      
      "Entity"], ",", 
     TemplateBox[{
      "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], 
         "]"}],"\"Entity[\\\"Surface\\\", \
\\\"EllipticHyperboloid1Sheeted\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
      "Entity"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771722201096016*^9, 3.771722217969037*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"8495b019-499b-46f5-bd81-6975edbaaa9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}],
          " ", 
         SuperscriptBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"\[FormalB]", " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "+", 
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"Sin", "[", "\[FormalU]", "]"}]}]}], ",", 
          RowBox[{"\[FormalC]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalR]", ",", "\[Phi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[FormalR]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["\[FormalR]", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"-", "\[FormalR]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[FormalR]", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
          RowBox[{
           FractionBox["4", "3"], " ", 
           SuperscriptBox["\[FormalR]", 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"3", " ", "\[Phi]"}], "2"], "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{
              SqrtBox["2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[FormalU]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], 
            RowBox[{"2", "-", 
             RowBox[{
              SqrtBox["2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]], ",", 
           FractionBox[
            RowBox[{
             RowBox[{
              SqrtBox["2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[FormalU]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], 
            RowBox[{"2", "-", 
             RowBox[{
              SqrtBox["2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]], ",", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"]}], 
            RowBox[{"2", "-", 
             RowBox[{
              SqrtBox["2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]]}], "}"}]}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[FormalU]", "-", 
            RowBox[{
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cosh", "[", "\[FormalV]", "]"}]}]}], ",", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cosh", "[", "\[FormalV]", "]"}]}]}], ",", 
           RowBox[{"4", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["\[FormalU]", "2"], "]"}], " ", 
            RowBox[{"Sinh", "[", 
             FractionBox["\[FormalV]", "2"], "]"}]}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cosh", "[", 
            FractionBox["\[FormalV]", "\[FormalA]"], "]"}], " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cosh", "[", 
            FractionBox["\[FormalV]", "\[FormalA]"], "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", "\[FormalU]"}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalH]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"(", 
             RowBox[{"\[FormalH]", "-", "\[FormalU]"}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "\[FormalH]"], ",", 
          FractionBox[
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"(", 
             RowBox[{"\[FormalH]", "-", "\[FormalU]"}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "\[FormalH]"], ",", 
          "\[FormalU]"}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalH]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[FormalA]", " ", 
               RowBox[{"(", 
                RowBox[{"\[FormalH]", "-", "\[FormalU]"}], ")"}]}], "+", 
              RowBox[{"\[FormalB]", " ", "\[FormalU]"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "\[FormalH]"], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[FormalA]", " ", 
               RowBox[{"(", 
                RowBox[{"\[FormalH]", "-", "\[FormalU]"}], ")"}]}], "+", 
              RowBox[{"\[FormalB]", " ", "\[FormalU]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "\[FormalH]"], ",", 
          "\[FormalU]"}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "+", 
           RowBox[{"\[FormalB]", " ", "\[FormalU]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[FormalB]", " ", "\[FormalV]"}], "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[FormalA]", " ", "\[FormalV]"}], "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[FormalB]", " ", "\[FormalV]"}], "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[FormalA]", " ", "\[FormalV]"}], "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[FormalA]", " ", "\[FormalV]"}], "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"e1", "=", 
            RowBox[{"WeierstrassPHalfPeriod", "[", 
             RowBox[{
              FractionBox["1", "2"], ",", 
              RowBox[{"{", 
               RowBox[{
                FractionBox["1", "2"], ",", 
                FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"wz1", "=", 
               RowBox[{"WeierstrassZetaHalfPeriod", "[", 
                RowBox[{
                 RowBox[{"\[FormalU]", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   FractionBox["1", "2"], ",", 
                   FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], ",", 
              RowBox[{"wz2", "=", 
               RowBox[{"WeierstrassZetaHalfPeriod", "[", 
                RowBox[{
                 RowBox[{"\[FormalU]", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}], "-", 
                  FractionBox["1", "2"]}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   FractionBox["1", "2"], ",", 
                   FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], ",", 
              RowBox[{"wz3", "=", 
               RowBox[{"WeierstrassZetaHalfPeriod", "[", 
                RowBox[{
                 RowBox[{"\[FormalU]", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}], "-", 
                  FractionBox["\[ImaginaryI]", "2"]}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   FractionBox["1", "2"], ",", 
                   FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], ",", 
              RowBox[{"wp", "=", 
               RowBox[{"WeierstrassPHalfPeriod", "[", 
                RowBox[{
                 RowBox[{"\[FormalU]", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   FractionBox["1", "2"], ",", 
                   FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"Re", "[", 
                RowBox[{
                 RowBox[{"-", "wz1"}], "+", 
                 RowBox[{"\[Pi]", " ", "\[FormalU]"}], "+", 
                 FractionBox[
                  SuperscriptBox["\[Pi]", "2"], 
                  RowBox[{"4", " ", "e1"}]], "+", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", 
                   RowBox[{"(", 
                    RowBox[{"wz2", "-", "wz3"}], ")"}]}], 
                  RowBox[{"2", " ", "e1"}]]}], "]"}]}], ",", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"Re", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], " ", "wz1"}], "+", 
                 RowBox[{"\[Pi]", " ", "\[FormalV]"}], "+", 
                 FractionBox[
                  SuperscriptBox["\[Pi]", "2"], 
                  RowBox[{"4", " ", "e1"}]], "-", 
                 FractionBox[
                  RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
                   RowBox[{"(", 
                    RowBox[{"wz2", "-", "wz3"}], ")"}]}], 
                  RowBox[{"2", " ", "e1"}]]}], "]"}]}], ",", 
              RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                RowBox[{"2", " ", "\[Pi]"}]], " ", 
               RowBox[{"Log", "[", 
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{"wp", "-", "e1"}], 
                  RowBox[{"wp", "+", "e1"}]], "]"}], "]"}]}]}], "}"}]}], 
           "]"}]}], "]"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[FormalV]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[FormalU]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[FormalU]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}], "}"}]}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
           RowBox[{
            SuperscriptBox["\[FormalU]", "2"], " ", 
            SuperscriptBox["\[FormalV]", "2"]}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalH]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
        "]"}],"\"Entity[\\\"Surface\\\", \
\\\"CylindricalSegmentHorizontal\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalH]", ",", "\[FormalCapitalL]"}], 
       "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalV]", ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[FormalV]", " ", 
            SqrtBox[
             RowBox[{"1", "-", "\[FormalV]"}]], " ", 
            RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
           RowBox[{"\[FormalV]", " ", 
            SqrtBox[
             RowBox[{"1", "-", "\[FormalV]"}]], " ", 
            RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
          "}"}]}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "+", 
              RowBox[{"Log", "[", 
               RowBox[{"Tan", "[", 
                FractionBox["\[FormalV]", "2"], "]"}], "]"}]}], ")"}]}], "+", 
           
           RowBox[{"\[FormalB]", " ", "\[FormalU]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[FormalV]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[FormalV]"}], "]"}]}], ",", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalB]", " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalC]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalB]", " ", "\[FormalU]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", "\[FormalU]"}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalH]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"(", 
             RowBox[{"\[FormalH]", "-", "\[FormalU]"}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "\[FormalH]"], ",", 
          FractionBox[
           RowBox[{"\[FormalB]", " ", 
            RowBox[{"(", 
             RowBox[{"\[FormalH]", "-", "\[FormalU]"}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "\[FormalH]"], ",", 
          "\[FormalU]"}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalB]", " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalH]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalB]", " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalB]", " ", "\[FormalU]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalC]", " ", "\[FormalV]"}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], 
        "]"}],"\"Entity[\\\"Surface\\\", \\\"EllipticHyperboloid1Sheeted\\\"]\
\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["\[FormalU]", "2"]}]], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalB]", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["\[FormalU]", "2"]}]], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalC]", " ", "\[FormalU]"}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalB]", " ", "\[FormalU]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          SuperscriptBox["\[FormalU]", "2"]}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[FormalC]", "+", 
             RowBox[{"\[FormalA]", " ", 
              RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[FormalC]", "+", 
             RowBox[{"\[FormalA]", " ", 
              RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalB]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalR]", ",", "\[Phi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[FormalR]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "3"], " ", 
            SuperscriptBox["\[FormalR]", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "3"]}], " ", "\[FormalR]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[FormalR]", "2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], ",", 
          RowBox[{
           SuperscriptBox["\[FormalR]", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"Log", "[", "\[FormalU]", "]"}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalV]", ",", 
          FractionBox[
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], "\[FormalV]"], ",", 
          FractionBox[
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], "\[FormalV]"]}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[FormalU]", "3"], "3"], "+", 
            RowBox[{"\[FormalU]", " ", 
             SuperscriptBox["\[FormalV]", "2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[FormalU]", "2"], "-", 
               SuperscriptBox["\[FormalV]", "2"]}], ")"}]}]}]}], "}"}]}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalC]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalU]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalU]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalC]", " ", "\[FormalV]"}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Sinh", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "-", 
           RowBox[{
            FractionBox["2", "3"], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "\[FormalV]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Sinh", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "+", 
           RowBox[{
            FractionBox["2", "3"], " ", 
            RowBox[{"Sinh", "[", 
             RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"3", " ", "\[FormalV]"}], "]"}]}]}], ",", 
          RowBox[{"2", " ", 
           RowBox[{"Cosh", "[", 
            RowBox[{"2", " ", "\[FormalU]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ")"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalT]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        FractionBox[
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Sinh", "[", "\[FormalV]", "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[FormalT]", " ", "\[FormalU]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Sinh", "[", "\[FormalV]", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[FormalT]", " ", "\[FormalU]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Cosh", "[", "\[FormalV]", "]"}], " ", 
             RowBox[{"Sinh", "[", "\[FormalU]", "]"}]}]}], "}"}]}], 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"Cosh", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Cosh", "[", "\[FormalV]", "]"}]}]}]]}], "]"}]}], "]"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         SuperscriptBox[
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
          RowBox[{
           FractionBox[
            SuperscriptBox["\[FormalV]", "2"], 
            SuperscriptBox["\[FormalB]", "2"]], "-", 
           FractionBox[
            SuperscriptBox["\[FormalU]", "2"], 
            SuperscriptBox["\[FormalA]", "2"]]}]}], "}"}]}], "]"}]}], "]"}]}],
    ",", 
   RowBox[{
    TemplateBox[{
     "\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalC]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["\[FormalU]", "2"]}]], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["\[FormalU]", "2"]}]], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalC]", " ", "\[FormalU]"}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalC]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Sinh", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Sinh", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          FractionBox[
           RowBox[{"\[FormalC]", " ", "\[FormalU]", " ", 
            RowBox[{"Cosh", "[", "\[FormalU]", "]"}]}], 
           SqrtBox[
            SuperscriptBox["\[FormalU]", "2"]]]}], "}"}]}], "]"}]}], "]"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{
     "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "8"], "-", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["5", "2"]}], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    FractionBox["1", "2"], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{"2", "+", "\[FormalV]"}]}], "]"}], ",", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["7", "4"]}], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{"2", "+", "\[FormalV]"}]}], "]"}], ",", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "1"}], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{"2", "+", "\[FormalV]"}]}], "]"}], ",", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["7", "4"]}], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{"2", "+", "\[FormalV]"}]}], "]"}], ",", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["5", "2"]}], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{"2", "+", "\[FormalV]"}]}], "]"}], ",", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    FractionBox["7", "2"], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[FormalV]"}]}], "]"}], ",", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{
                    FractionBox["2", "3"], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    FractionBox["2", "3"], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    FractionBox["1", "3"], "+", "\[FormalV]"}]}], "]"}], ",", 
                 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{
                    FractionBox["7", "2"], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    FractionBox["1", "2"], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[FormalV]"}]}], "]"}]}], 
                "]"}]}], ")"}]}]}], " ", 
           SqrtBox[
            RowBox[{"Sign", "[", 
             RowBox[{"16", "-", 
              SuperscriptBox["\[FormalU]", "2"], "-", 
              SuperscriptBox["\[FormalV]", "2"]}], "]"}]]}]}], "}"}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[FormalV]", "2"], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "-", "\[FormalV]"}], "2"]], " ", 
            RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
           RowBox[{
            SuperscriptBox["\[FormalV]", "2"], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{"1", "-", "\[FormalV]"}], "2"]], " ", 
            RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
          "}"}]}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
      RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["\[FormalU]", "2"], "]"}], " ", 
               RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"Sin", "[", 
                FractionBox["\[FormalU]", "2"], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["\[FormalU]", "2"], "]"}], " ", 
               RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "-", 
              RowBox[{
               RowBox[{"Sin", "[", 
                FractionBox["\[FormalU]", "2"], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[FormalU]", "2"], "]"}], " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["\[FormalU]", "2"], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]}], "}"}]}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "+", 
               RowBox[{"\[FormalU]", " ", 
                RowBox[{"Sin", "[", "\[FormalU]", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox["\[FormalU]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}]], ",", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], "-", 
               RowBox[{"\[FormalU]", " ", 
                RowBox[{"Cos", "[", "\[FormalU]", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox["\[FormalU]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}]], ",", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"Tan", "[", 
              FractionBox["\[FormalV]", "2"], "]"}], "]"}], "+", 
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], 
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox["\[FormalU]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}]]}]}], 
          "}"}]}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"Re", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "3"], " ", 
              RowBox[{"(", 
               RowBox[{"\[FormalU]", "+", 
                RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ")"}]}], 
             "]"}], " ", 
            SqrtBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               FractionBox["2", "3"], " ", 
               RowBox[{"(", 
                RowBox[{"\[FormalU]", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ")"}]}], 
              "]"}]]}], ",", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox["2"]}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "3"], " ", 
              RowBox[{"(", 
               RowBox[{"\[FormalU]", "+", 
                RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ")"}]}], 
             "]"}], " ", 
            SqrtBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               FractionBox["2", "3"], " ", 
               RowBox[{"(", 
                RowBox[{"\[FormalU]", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ")"}]}], 
              "]"}]]}], ",", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"EllipticF", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "3"], " ", 
               RowBox[{"(", 
                RowBox[{"\[FormalU]", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ")"}]}], ",",
               "2"}], "]"}]}]}], "}"}], "]"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
          RowBox[{
           RowBox[{"\[FormalA]", " ", 
            SuperscriptBox["\[FormalU]", "4"]}], "+", 
           RowBox[{
            SuperscriptBox["\[FormalU]", "2"], " ", "\[FormalV]"}], "-", 
           SuperscriptBox["\[FormalV]", "2"]}]}], "}"}]}], "]"}]}], "]"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[FormalA]", "+", 
             RowBox[{"\[FormalU]", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["\[FormalV]", "2"], "]"}]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[FormalA]", "+", 
             RowBox[{"\[FormalU]", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["\[FormalV]", "2"], "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalU]", " ", 
           RowBox[{"Sin", "[", 
            FractionBox["\[FormalV]", "2"], "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
           RowBox[{
            SuperscriptBox["\[FormalU]", "3"], "-", 
            RowBox[{"3", " ", "\[FormalU]", " ", 
             SuperscriptBox["\[FormalV]", "2"]}]}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["\[FormalU]", "2"], 
            RowBox[{"2", " ", "\[FormalA]"}]]}]}], "}"}]}], "]"}]}], "]"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          SuperscriptBox["\[FormalU]", "2"]}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalH]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           SqrtBox[
            FractionBox["\[FormalU]", "\[FormalH]"]], " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           SqrtBox[
            FractionBox["\[FormalU]", "\[FormalH]"]], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", "\[FormalU]"}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[FormalU]", "2"]}], "-", 
             RowBox[{"\[FormalA]", " ", "\[FormalV]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[FormalA]", " ", "\[FormalV]"}], "-", 
             SuperscriptBox["\[FormalU]", "2"]}], ")"}]}]}], "}"}]}], "]"}]}],
      "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalC]", ",", "\[FormalN]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalR]", ",", "\[FormalT]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalR]", " ", 
           RowBox[{"Cos", "[", "\[FormalT]", "]"}]}], ",", 
          RowBox[{"\[FormalR]", " ", 
           RowBox[{"Sin", "[", "\[FormalT]", "]"}]}], ",", 
          RowBox[{"\[FormalC]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[FormalN]", " ", "\[FormalT]"}], "]"}]}]}], "}"}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sech", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sech", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{"\[FormalU]", "-", 
            RowBox[{"Tanh", "[", "\[FormalU]", "]"}]}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalH]", ",", "\[FormalN]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalT]", ",", "\[FormalP]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "\[FormalN]"}], ")"}], " ", 
               RowBox[{"Cos", "[", "\[FormalT]", "]"}]}], "-", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[FormalN]"}], ")"}], " ", "\[FormalT]"}],
                "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[FormalP]", "]"}]}], "\[FormalN]"], ",", 
          FractionBox[
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "\[FormalN]"}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[FormalT]", "]"}]}], "-", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[FormalN]"}], ")"}], " ", "\[FormalT]"}],
                "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "\[FormalP]", "]"}]}], "\[FormalN]"], ",", 
          RowBox[{"\[FormalH]", " ", 
           RowBox[{"Cos", "[", "\[FormalP]", "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[FormalU]", "2"], "+", 
               SuperscriptBox["\[FormalV]", "2"]}], ")"}], "2"], 
            SuperscriptBox["\[FormalA]", "3"]]}]}], "}"}]}], "]"}]}], "]"}]}],
    ",", 
   RowBox[{
    TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalC]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SqrtBox[
               RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], "]"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                RowBox[{"Cosh", "[", 
                 RowBox[{
                  SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}]}], 
               SqrtBox["\[FormalC]"]], "-", 
              RowBox[{
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
               RowBox[{"Sinh", "[", 
                RowBox[{
                 SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}]}]}], 
             ")"}]}], 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[FormalC]"}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   SqrtBox[
                    RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
                  "]"}], "2"], 
                RowBox[{"1", "+", "\[FormalC]"}]]}], "+", 
              FractionBox[
               SuperscriptBox[
                RowBox[{"Cosh", "[", 
                 RowBox[{
                  SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}], "2"], 
               "\[FormalC]"]}], ")"}]}]], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], "]"}],
              " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"Cosh", "[", 
                  RowBox[{
                   SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}], " ", 
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], 
                SqrtBox["\[FormalC]"]], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                RowBox[{"Sinh", "[", 
                 RowBox[{
                  SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}]}]}], 
              ")"}]}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[FormalC]"}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    SqrtBox[
                    RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
                   "]"}], "2"], 
                 RowBox[{"1", "+", "\[FormalC]"}]]}], "+", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cosh", "[", 
                  RowBox[{
                   SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}], "2"], 
                "\[FormalC]"]}], ")"}]}]]}], ",", 
          RowBox[{"\[FormalV]", "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], "]"}],
              " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               SqrtBox[
                RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
              "]"}]}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "\[FormalC]"}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    SqrtBox[
                    RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
                   "]"}], "2"], 
                 RowBox[{"1", "+", "\[FormalC]"}]]}], "+", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"Cosh", "[", 
                  RowBox[{
                   SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}], "2"], 
                "\[FormalC]"]}], ")"}]}]]}]}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalV]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], "+", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], "6"]}], ")"}]}]}], 
             ")"}], 
            RowBox[{"1", "/", "6"}]]], ",", 
          FractionBox[
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], "+", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], "6"]}], ")"}]}]}], 
             ")"}], 
            RowBox[{"1", "/", "6"}]]], ",", 
          FractionBox[
           RowBox[{"\[FormalA]", " ", 
            RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], "+", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], "6"]}], ")"}]}]}], 
             ")"}], 
            RowBox[{"1", "/", "6"}]]]}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]], "]"}]}], "}"}]}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalR]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{"1", "+", 
              SuperscriptBox["\[FormalR]", "2"], "+", 
              RowBox[{"2", " ", "\[FormalR]", " ", 
               RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[FormalR]", "2"], "-", 
              RowBox[{"2", " ", "\[FormalR]", " ", 
               RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}]], "]"}], ",", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{"1", "+", 
              SuperscriptBox["\[FormalR]", "2"], "-", 
              RowBox[{"2", " ", "\[FormalR]", " ", 
               RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], 
             RowBox[{"1", "+", 
              SuperscriptBox["\[FormalR]", "2"], "+", 
              RowBox[{"2", " ", "\[FormalR]", " ", 
               RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}]], "]"}], ",", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["\[FormalR]", "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[FormalV]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[FormalR]", "4"]}]], "]"}]}]}], "}"}]}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Exp", "[", 
              FractionBox["\[FormalU]", "\[FormalB]"], "]"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             FractionBox["\[FormalV]", "2"], "]"}], "2"]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Exp", "[", 
              FractionBox["\[FormalU]", "\[FormalB]"], "]"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             FractionBox["\[FormalV]", "2"], "]"}], "2"]}], ",", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            FractionBox["\[FormalU]", "\[FormalC]"], "]"}], "-", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}], "+", 
           RowBox[{
            RowBox[{"Exp", "[", 
             FractionBox["\[FormalU]", "\[FormalB]"], "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
           RowBox[{
            FractionBox[
             SuperscriptBox["\[FormalU]", "3"], "3"], "-", 
            FractionBox[
             SuperscriptBox["\[FormalV]", "2"], "2"]}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[FormalA]", "+", "1"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"\[FormalA]", " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], 
                 ")"}]}]], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[FormalU]", 
                SqrtBox[
                 RowBox[{"\[FormalA]", "+", "1"}]]]}], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"\[FormalA]", "+", "1"}]], " ", 
                RowBox[{"Tan", "[", "\[FormalU]", "]"}]}], "]"}]}], "]"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[FormalA]", "+", "1", "-", 
              RowBox[{"\[FormalA]", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], " ", 
            SqrtBox["\[FormalA]"]}]], ",", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[FormalA]", "+", "1"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"\[FormalA]", " ", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], 
                 ")"}]}]], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[FormalU]", 
                SqrtBox[
                 RowBox[{"\[FormalA]", "+", "1"}]]]}], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"\[FormalA]", "+", "1"}]], " ", 
                RowBox[{"Tan", "[", "\[FormalU]", "]"}]}], "]"}]}], "]"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[FormalA]", "+", "1", "-", 
              RowBox[{"\[FormalA]", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], " ", 
            SqrtBox["\[FormalA]"]}]], ",", 
          RowBox[{
           FractionBox[
            RowBox[{"Log", "[", 
             RowBox[{"Tan", "[", 
              FractionBox["\[FormalV]", "2"], "]"}], "]"}], 
            SqrtBox["\[FormalA]"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[FormalA]", "+", "1"}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[FormalA]", "+", "1", "-", 
               RowBox[{"\[FormalA]", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], 
             " ", 
             SqrtBox["\[FormalA]"]}]]}]}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}], ",", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[FormalU]", "+", "\[FormalV]"}], "]"}]}], "}"}]}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
          RowBox[{
           SqrtBox[
            RowBox[{"Abs", "[", 
             RowBox[{"64", "-", 
              SuperscriptBox["\[FormalU]", "2"], "-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[FormalV]"}], ")"}], "2"]}], 
             "]"}]], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["3", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "\[FormalU]"}], ")"}], "2"], "+", 
                
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "7"}], "+", "\[FormalV]"}], ")"}], "2"]}], 
               ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["3", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"3", "+", "\[FormalU]"}], ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "7"}], "+", "\[FormalV]"}], ")"}], "2"]}], 
               ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                FractionBox[
                 SuperscriptBox["\[FormalU]", "2"], "4"], "+", 
                RowBox[{
                 FractionBox["1", "12"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "\[FormalV]"}], ")"}], "2"]}]}], 
               ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "64"}], "+", 
                SuperscriptBox["\[FormalU]", "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "\[FormalV]"}], ")"}], "2"]}], 
               ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox["1575", "4"], "-", 
                FractionBox[
                 RowBox[{"163", " ", 
                  SuperscriptBox["\[FormalU]", "2"]}], "4"], "+", 
                SuperscriptBox["\[FormalU]", "4"], "+", 
                RowBox[{"25", " ", "\[FormalV]"}], "-", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["\[FormalU]", "2"], " ", "\[FormalV]"}], 
                 "4"], "-", 
                FractionBox[
                 RowBox[{"163", " ", 
                  SuperscriptBox["\[FormalV]", "2"]}], "4"], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[FormalU]", "2"], " ", 
                 SuperscriptBox["\[FormalV]", "2"]}], "-", 
                SuperscriptBox["\[FormalV]", "3"], "+", 
                SuperscriptBox["\[FormalV]", "4"]}], ")"}]}], "]"}], "]"}], 
           " ", 
           SqrtBox[
            RowBox[{"-", 
             RowBox[{"Sign", "[", 
              RowBox[{
               RowBox[{"-", "64"}], "+", 
               SuperscriptBox["\[FormalU]", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[FormalV]"}], ")"}], "2"]}], 
              "]"}]}]]}]}], "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalH]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalC]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
          RowBox[{"\[FormalC]", " ", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[FormalU]", " ", 
            RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{"\[FormalU]", " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{"\[FormalV]", " ", 
            RowBox[{"Cos", "[", "\[FormalU]", "]"}]}]}], "}"}]}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[FormalU]", " ", 
             SuperscriptBox["\[FormalV]", "2"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[FormalV]", "4"]}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[FormalU]", " ", "\[FormalV]"}], "-", 
            
            RowBox[{"3", " ", 
             SuperscriptBox["\[FormalV]", "3"]}]}], ",", "\[FormalU]"}], 
          "}"}]}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalC]"}], "}"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[FormalC]", "+", 
             RowBox[{"\[FormalA]", " ", 
              RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[FormalC]", "+", 
             RowBox[{"\[FormalA]", " ", 
              RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalR]", ",", "\[Phi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["1", "18"], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"6", " ", "\[FormalR]", " ", 
               RowBox[{"(", 
                RowBox[{"\[FormalR]", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[FormalR]", "2"]}], ")"}], " ", 
                  RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}], 
              RowBox[{"1", "+", 
               SuperscriptBox["\[FormalR]", "2"], "+", 
               SuperscriptBox["\[FormalR]", "4"], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"\[FormalR]", "+", 
                  SuperscriptBox["\[FormalR]", "3"]}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[FormalR]", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}]], "-", 
             RowBox[{"4", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"1", "+", 
                SuperscriptBox["\[FormalR]", "2"], "-", 
                RowBox[{"2", " ", "\[FormalR]", " ", 
                 RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"1", "+", 
                SuperscriptBox["\[FormalR]", "2"], "+", 
                SuperscriptBox["\[FormalR]", "4"], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[FormalR]", "+", 
                   SuperscriptBox["\[FormalR]", "3"]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[FormalR]", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], "]"}]}]}], ")"}]}],
           ",", 
          RowBox[{
           FractionBox["1", "9"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SqrtBox["3"], " ", 
              RowBox[{"ArcTanh", "[", 
               FractionBox[
                RowBox[{
                 SqrtBox["3"], " ", "\[FormalR]", " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[FormalR]", "2"], "+", 
                 RowBox[{"\[FormalR]", " ", 
                  RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}]], "]"}]}], "-", 
             FractionBox[
              RowBox[{"3", " ", "\[FormalR]", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[FormalR]", "4"], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[FormalR]", "+", 
                    SuperscriptBox["\[FormalR]", "3"]}], ")"}], " ", 
                  RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
              RowBox[{"1", "+", 
               SuperscriptBox["\[FormalR]", "6"], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[FormalR]", "3"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}]]}], ")"}]}], ",", 
          FractionBox["1", 
           RowBox[{"3", "+", 
            FractionBox[
             RowBox[{"3", "-", 
              RowBox[{"3", " ", 
               SuperscriptBox["\[FormalR]", "6"]}]}], 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[FormalR]", "3"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}]]}]]}], "}"}]}], 
       "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalB]", ",", "\[FormalC]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalV]", " ", 
           RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalV]", " ", 
           RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", 
          RowBox[{"\[FormalC]", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["\[FormalA]", "2"], "-", 
             RowBox[{
              SuperscriptBox["\[FormalB]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}]}]]}]}], 
         "}"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"\[FormalA]", ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[FormalU]", " ", "\[FormalV]"}], ",", "\[FormalU]", ",", 
           
           SuperscriptBox["\[FormalV]", "2"]}], "}"}]}]}], "]"}]}], "]"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalA]", ",", "\[FormalD]", ",", "\[FormalH]"}], "}"}], 
      ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
        RowBox[{"\[FormalA]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
           RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
     "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771722218720277*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"9278f404-d196-4847-bece-2d5717208fc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{"\[FormalA]", ",", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalR]", ",", "\[Phi]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[FormalR]", " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["\[FormalR]", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"-", "\[FormalR]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[FormalR]", " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
        RowBox[{
         FractionBox["4", "3"], " ", 
         SuperscriptBox["\[FormalR]", 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"3", " ", "\[Phi]"}], "2"], "]"}]}]}], "}"}]}], "]"}]}], 
   "]"}], "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.771722268263173*^9, 3.771722268510351*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"e991e04e-5736-4dfa-9c64-f95b775b43a2"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalR]", ",", "\[Phi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[FormalR]", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[FormalR]", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[FormalR]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"\[FormalR]", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      FractionBox["4", "3"], " ", 
      SuperscriptBox["\[FormalR]", 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Phi]"}], "2"], "]"}]}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.771722269055736*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"32e155d4-6ddc-4ce6-ad78-d2fcedc9580c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalR]", ",", "\[Phi]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[FormalR]", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[FormalR]", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"-", "\[FormalR]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[FormalR]", " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
      RowBox[{
       FractionBox["4", "3"], " ", 
       SuperscriptBox["\[FormalR]", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"3", " ", "\[Phi]"}], "2"], "]"}]}]}], "}"}]}], "]"}], "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.771722273199052*^9, 3.771722273910256*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"2ab0108d-dfed-4991-8c43-2d35dde72df9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"u", " ", 
     RowBox[{"Cos", "[", "v", "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["u", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "v"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "u"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "v", "]"}]}], ",", 
   RowBox[{
    FractionBox["4", "3"], " ", 
    SuperscriptBox["u", 
     RowBox[{"3", "/", "2"}]], " ", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"3", " ", "v"}], "2"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771722274231784*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"1e8b6b10-a224-4507-a673-828b3bd926e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"u", " ", 
          RowBox[{"Cos", "[", "v", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["u", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "v"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"-", "u"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"u", " ", 
            RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         FractionBox["4", "3"], " ", 
         SuperscriptBox["u", 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"3", " ", "v"}], "2"], "]"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
        RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.771722292635373*^9, 3.771722317365795*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"c6c16602-34b0-4eb5-b9da-fdc7103a337e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.996, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {356., {158., 164.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$109532$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$109532$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[(
          1 - $CellContext`a$$) {$CellContext`u Cos[$CellContext`v] + 
           Rational[-1, 2] $CellContext`u^2 
            Cos[2 $CellContext`v], -$CellContext`u (
            1 + $CellContext`u Cos[$CellContext`v]) Sin[$CellContext`v], 
           Rational[4, 3] $CellContext`u^Rational[3, 2] 
           Cos[Rational[3, 2] $CellContext`v]} + $CellContext`a$$ {
          Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
           Sin[$CellContext`v], 
           Cos[$CellContext`v]}, {$CellContext`u, 0, 2 Pi}, {$CellContext`v, 
         0, 2 Pi}], "Specifications" :> {{$CellContext`a$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{403., {202., 209.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771722293806637*^9, 3.771722318215171*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"0514c492-3eb7-45ee-95be-5af48bbf9c19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Function", "[", 
   RowBox[{"\[FormalA]", ",", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[FormalU]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], 
          RowBox[{"2", "-", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]], ",", 
         FractionBox[
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[FormalU]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], 
          RowBox[{"2", "-", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]], ",", 
         FractionBox[
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"]}], 
          RowBox[{"2", "-", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]]}], "}"}]}]}], 
     "]"}]}], "]"}], "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.771722375231845*^9, 3.771722375502789*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"d7b0cac9-1b96-40ea-8a56-8ab740e59917"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[FormalU]$", ",", "\[FormalV]$"}], "}"}], ",", 
   RowBox[{"1", " ", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[FormalV]$", "]"}], "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[FormalU]$"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[FormalU]$", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[FormalV]$"}], "]"}]}]}], 
       RowBox[{"2", "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "\[FormalU]$"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[FormalV]$"}], "]"}]}]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[FormalV]$", "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[FormalU]$"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[FormalU]$", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[FormalV]$"}], "]"}]}]}], 
       RowBox[{"2", "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "\[FormalU]$"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[FormalV]$"}], "]"}]}]}]], ",", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[FormalV]$", "]"}], "2"]}], 
       RowBox[{"2", "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "\[FormalU]$"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[FormalV]$"}], "]"}]}]}]]}], "}"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.771722375886949*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"e8a986f3-b227-4ec7-b064-2539bf4defc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Out", "[", "55", "]"}], "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.7717223768819113`*^9, 3.7717223803506517`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"1ed1ebd4-2a4e-4f25-a63f-c373712f9a4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "u"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "v", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "v"}], "]"}]}]}], 
    RowBox[{"2", "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "u"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "v"}], "]"}]}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      SqrtBox["2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "v", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "u"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "v"}], "]"}]}]}], 
    RowBox[{"2", "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "u"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "v"}], "]"}]}]}]], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "v", "]"}], "2"]}], 
    RowBox[{"2", "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "u"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "v"}], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.7717223806559973`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"40c38499-0b05-4a08-92c5-722ebb1bda4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "u"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "v", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "u", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "v"}], "]"}]}]}], 
         RowBox[{"2", "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "u"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "v"}], "]"}]}]}]], ",", 
        FractionBox[
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "v", "]"}], "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "u"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "u", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "v"}], "]"}]}]}], 
         RowBox[{"2", "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "u"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "v"}], "]"}]}]}]], ",", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "v", "]"}], "2"]}], 
         RowBox[{"2", "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "u"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "v"}], "]"}]}]}]]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
        RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.771722388531274*^9, 3.771722396338326*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"c2b643ce-7447-44e3-b255-47e6860a5194"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.874, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {419., {188., 193.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$113059$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$113059$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[(
          1 - $CellContext`a$$) {(
            2^Rational[1, 2] Cos[2 $CellContext`u] Cos[$CellContext`v]^2 + 
            Cos[$CellContext`u] Sin[2 $CellContext`v])/(2 - 2^Rational[1, 2] 
           Sin[3 $CellContext`u] 
           Sin[2 $CellContext`v]), (
            2^Rational[1, 2] Cos[$CellContext`v]^2 Sin[2 $CellContext`u] + 
            Cos[$CellContext`u] Sin[2 $CellContext`v])/(2 - 2^Rational[1, 2] 
           Sin[3 $CellContext`u] Sin[2 $CellContext`v]), 3 
           Cos[$CellContext`v]^2/(2 - 2^Rational[1, 2] Sin[3 $CellContext`u] 
           Sin[2 $CellContext`v])} + $CellContext`a$$ {
          Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
           Sin[$CellContext`v], 
           Cos[$CellContext`v]}, {$CellContext`u, 0, 2 Pi}, {$CellContext`v, 
         0, 2 Pi}], "Specifications" :> {{$CellContext`a$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{466., {232., 239.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771722389173008*^9, 3.771722396707814*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"6ed42b10-8389-48ca-bad7-74890cdb5f41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"\[FormalA]", ",", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
       RowBox[{"\[FormalA]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[FormalU]", "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Cosh", "[", "\[FormalV]", "]"}]}]}], ",", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
            RowBox[{"Cosh", "[", "\[FormalV]", "]"}]}]}], ",", 
          RowBox[{"4", " ", 
           RowBox[{"Sin", "[", 
            FractionBox["\[FormalU]", "2"], "]"}], " ", 
           RowBox[{"Sinh", "[", 
            FractionBox["\[FormalV]", "2"], "]"}]}]}], "}"}]}]}], "]"}]}], 
    "]"}], "[", "1", "]"}], "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.771722457087098*^9, 3.7717224592147493`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"2b8a71f1-6f7c-49bb-a939-d950e9e8dd81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"u", "-", 
    RowBox[{
     RowBox[{"Cosh", "[", "v", "]"}], " ", 
     RowBox[{"Sin", "[", "u", "]"}]}]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"Cos", "[", "u", "]"}], " ", 
     RowBox[{"Cosh", "[", "v", "]"}]}]}], ",", 
   RowBox[{"4", " ", 
    RowBox[{"Sin", "[", 
     FractionBox["u", "2"], "]"}], " ", 
    RowBox[{"Sinh", "[", 
     FractionBox["v", "2"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771722459482226*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"ae7a8137-5ff1-4911-b28b-affac46ca1a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "-", 
         RowBox[{
          RowBox[{"Cosh", "[", "v", "]"}], " ", 
          RowBox[{"Sin", "[", "u", "]"}]}]}], ",", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"Cos", "[", "u", "]"}], " ", 
          RowBox[{"Cosh", "[", "v", "]"}]}]}], ",", 
        RowBox[{"4", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["u", "2"], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          FractionBox["v", "2"], "]"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
        RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.771722466518983*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"13e726bd-62b2-429b-90ab-f1aa726a043b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.98, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {446., {184., 189.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$115115$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$115115$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[(
          1 - $CellContext`a$$) {$CellContext`u - Cosh[$CellContext`v] 
           Sin[$CellContext`u], 1 - Cos[$CellContext`u] Cosh[$CellContext`v], 
           4 Sin[Rational[1, 2] $CellContext`u] 
           Sinh[Rational[1, 2] $CellContext`v]} + $CellContext`a$$ {
          Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
           Sin[$CellContext`v], 
           Cos[$CellContext`v]}, {$CellContext`u, 0, 2 Pi}, {$CellContext`v, 
         0, 2 Pi}], "Specifications" :> {{$CellContext`a$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{493., {228., 235.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.771722466947332*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"bd74e1da-e08b-41b9-aa9b-fb426d559f97"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.771722565392179*^9},ExpressionUUID->"329a65b2-0b7b-40cb-b28d-\
fe313b878ec7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", "=", 
        RowBox[{"SurfaceData", "[", 
         RowBox[{"#", ",", "\"\<ParametricEquations\>\""}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"#", "\[Rule]", 
       RowBox[{
        RowBox[{"Apply", "[", "\[IndentingNewLine]", 
         RowBox[{"s", ",", "\[IndentingNewLine]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", "\[IndentingNewLine]", 
            RowBox[{"Length", "[", 
             RowBox[{"Extract", "[", 
              RowBox[{"s", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], "[", 
        RowBox[{"u", ",", "v"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
    "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
      
      "Entity"], ",", 
     TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
         "]"}],"\"Entity[\\\"Surface\\\", \
\\\"CylindricalSegmentHorizontal\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
      
      "Entity"], ",", 
     TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
      
      "Entity"], ",", 
     TemplateBox[{
      "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], 
         "]"}],"\"Entity[\\\"Surface\\\", \
\\\"EllipticHyperboloid1Sheeted\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
      "Entity"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7717225750449133`*^9, 3.7717226530274553`*^9}, {
  3.7717226926242123`*^9, 3.771722694585794*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"caa4b4cf-54ea-49c3-99cc-6942793f518c"],

Cell[BoxData[
 TemplateBox[{
  "Function","fpct",
   "\"Too many parameters in \\!\\(\\*RowBox[{\\\"{\\\", \\\"\[FormalA]\\\", \
\\\"}\\\"}]\\) to be filled from \\!\\(\\*RowBox[{RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{\\\"\[FormalA]\\\", \\\",\\\", RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[FormalR]\\\", \\\",\\\", \
\\\"\[Phi]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"\[FormalR]\\\", \\\" \\\", RowBox[{\\\"Cos\\\", \
\\\"[\\\", \\\"\[Phi]\\\", \\\"]\\\"}]}], \\\"-\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", SuperscriptBox[\\\"\
\[FormalR]\\\", \\\"2\\\"], \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"2\\\", \\\" \\\", \\\"\[Phi]\\\"}], \\\"]\\\"}]}]}], \\\",\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[FormalR]\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"+\\\", RowBox[{\\\"\[FormalR]\\\", \
\\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \\\"\[Phi]\\\", \\\"]\\\"}]}]}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \\\"\[Phi]\\\", \\\"]\
\\\"}]}], \\\",\\\", RowBox[{FractionBox[\\\"4\\\", \\\"3\\\"], \\\" \\\", \
SuperscriptBox[\\\"\[FormalR]\\\", RowBox[{\\\"3\\\", \\\"/\\\", \
\\\"2\\\"}]], \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", FractionBox[RowBox[{\
\\\"3\\\", \\\" \\\", \\\"\[Phi]\\\"}], \\\"2\\\"], \\\"]\\\"}]}]}], \
\\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}], \\\"[\\\", \\\"]\\\"}]\\).\"",2,61,
   19,25094795624261950479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771722654247439*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"4732e676-778c-42ab-bbf3-637caaaeef4c"],

Cell[BoxData[
 TemplateBox[{
  "Function","fpct",
   "\"Too many parameters in \\!\\(\\*RowBox[{\\\"{\\\", \\\"\[FormalA]\\\", \
\\\"}\\\"}]\\) to be filled from \\!\\(\\*RowBox[{RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{\\\"\[FormalA]\\\", \\\",\\\", RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[FormalU]\\\", \\\",\\\", \
\\\"\[FormalV]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[FormalA]\\\", \
\\\" \\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[RowBox[{RowBox[{SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]}], RowBox[{\\\"2\\\", \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]], \\\",\\\", FractionBox[RowBox[{RowBox[{SqrtBox[RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Sin\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]}], RowBox[{\\\"2\\\", \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]], \\\",\\\", FractionBox[RowBox[{\\\"3\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"2\\\"]}], RowBox[{\\\"2\\\", \\\"+\\\", RowBox[{\\\"Times\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]]}], \\\"}\\\"}]}]}], \\\"]\\\"}]}], \
\\\"]\\\"}], \\\"[\\\", \\\"]\\\"}]\\).\"",2,61,20,25094795624261950479,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7717226542603893`*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"41c12b95-03d9-48b4-880d-26d7341301f5"],

Cell[BoxData[
 TemplateBox[{
  "Function","fpct",
   "\"Too many parameters in \\!\\(\\*RowBox[{\\\"{\\\", \\\"\[FormalA]\\\", \
\\\"}\\\"}]\\) to be filled from \\!\\(\\*RowBox[{RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{\\\"\[FormalA]\\\", \\\",\\\", RowBox[{\\\"Function\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[FormalU]\\\", \\\",\\\", \
\\\"\[FormalV]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[FormalA]\\\", \
\\\" \\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\[FormalU]\\\", \\\"-\\\", \
RowBox[{RowBox[{\\\"Sin\\\", \\\"[\\\", \\\"\[FormalU]\\\", \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Cosh\\\", \\\"[\\\", \\\"\[FormalV]\\\", \\\"]\\\"}]}]}], \
\\\",\\\", RowBox[{\\\"1\\\", \\\"-\\\", RowBox[{RowBox[{\\\"Cos\\\", \\\"[\\\
\", \\\"\[FormalU]\\\", \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Cosh\\\", \\\"[\\\
\", \\\"\[FormalV]\\\", \\\"]\\\"}]}]}], \\\",\\\", RowBox[{\\\"4\\\", \\\" \
\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[FormalU]\\\", \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\
\"Sinh\\\", \\\"[\\\", RowBox[{\\\"\[FormalV]\\\", \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}]}]}], \\\"}\\\"}]}]}], \
\\\"]\\\"}]}], \\\"]\\\"}], \\\"[\\\", \\\"]\\\"}]\\).\"",2,61,21,
   25094795624261950479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771722654268065*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"be614d10-1816-472e-83b0-187998f8da3a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Function\\\", \
\\\"::\\\", \\\"fpct\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,61,22,25094795624261950479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771722654274747*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"a8be2817-9f86-4002-8e10-e2f2ec06b59b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "v", "]"}], "3"]}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "u", "]"}], "3"]}], ",", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "v", "]"}], "3"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], "+", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalR]", ",", "\[Phi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\[FormalR]", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              SuperscriptBox["\[FormalR]", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"-", "\[FormalR]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"\[FormalR]", " ", 
                RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{
             FractionBox["4", "3"], " ", 
             SuperscriptBox["\[FormalR]", 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"3", " ", "\[Phi]"}], "2"], "]"}]}]}], "}"}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{
                SqrtBox["2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[FormalU]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], 
              RowBox[{"2", "-", 
               RowBox[{
                SqrtBox["2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]], ",", 
             FractionBox[
              RowBox[{
               RowBox[{
                SqrtBox["2"], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[FormalU]"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], 
              RowBox[{"2", "-", 
               RowBox[{
                SqrtBox["2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]], ",", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"]}], 
              RowBox[{"2", "-", 
               RowBox[{
                SqrtBox["2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]]}], "}"}]}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[FormalU]", "-", 
              RowBox[{
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
               RowBox[{"Cosh", "[", "\[FormalV]", "]"}]}]}], ",", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
               RowBox[{"Cosh", "[", "\[FormalV]", "]"}]}]}], ",", 
             RowBox[{"4", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["\[FormalU]", "2"], "]"}], " ", 
              RowBox[{"Sinh", "[", 
               FractionBox["\[FormalV]", "2"], "]"}]}]}], "}"}]}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[FormalA]", " ", 
             RowBox[{"Cosh", "[", 
              FractionBox["\[FormalV]", "\[FormalA]"], "]"}], " ", 
             RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
            RowBox[{"\[FormalA]", " ", 
             RowBox[{"Cosh", "[", 
              FractionBox["\[FormalV]", "\[FormalA]"], "]"}], " ", 
             RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
           "}"}]}], "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", "\[FormalU]"}], 
           "}"}]}], "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "v", "]"}], ",", 
      RowBox[{"Sin", "[", "v", "]"}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"u", "+", 
       RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "v"], " ", 
        RowBox[{"Cos", "[", "v", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "v"], " ", 
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "v"], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "v"], " ", 
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "v"], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"e1", "=", 
              RowBox[{"WeierstrassPHalfPeriod", "[", 
               RowBox[{
                FractionBox["1", "2"], ",", 
                RowBox[{"{", 
                 RowBox[{
                  FractionBox["1", "2"], ",", 
                  FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"wz1", "=", 
                 RowBox[{"WeierstrassZetaHalfPeriod", "[", 
                  RowBox[{
                   RowBox[{"\[FormalU]", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "2"], ",", 
                    FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], 
                ",", 
                RowBox[{"wz2", "=", 
                 RowBox[{"WeierstrassZetaHalfPeriod", "[", 
                  RowBox[{
                   RowBox[{"\[FormalU]", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}], "-", 
                    FractionBox["1", "2"]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "2"], ",", 
                    FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], 
                ",", 
                RowBox[{"wz3", "=", 
                 RowBox[{"WeierstrassZetaHalfPeriod", "[", 
                  RowBox[{
                   RowBox[{"\[FormalU]", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}], "-", 
                    FractionBox["\[ImaginaryI]", "2"]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "2"], ",", 
                    FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], 
                ",", 
                RowBox[{"wp", "=", 
                 RowBox[{"WeierstrassPHalfPeriod", "[", 
                  RowBox[{
                   RowBox[{"\[FormalU]", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "2"], ",", 
                    FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{
                   RowBox[{"-", "wz1"}], "+", 
                   RowBox[{"\[Pi]", " ", "\[FormalU]"}], "+", 
                   FractionBox[
                    SuperscriptBox["\[Pi]", "2"], 
                    RowBox[{"4", " ", "e1"}]], "+", 
                   FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"wz2", "-", "wz3"}], ")"}]}], 
                    RowBox[{"2", " ", "e1"}]]}], "]"}]}], ",", 
                RowBox[{
                 FractionBox["1", "2"], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "wz1"}], "+", 
                   RowBox[{"\[Pi]", " ", "\[FormalV]"}], "+", 
                   FractionBox[
                    SuperscriptBox["\[Pi]", "2"], 
                    RowBox[{"4", " ", "e1"}]], "-", 
                   FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"wz2", "-", "wz3"}], ")"}]}], 
                    RowBox[{"2", " ", "e1"}]]}], "]"}]}], ",", 
                RowBox[{
                 FractionBox["1", "4"], " ", 
                 SqrtBox[
                  RowBox[{"2", " ", "\[Pi]"}]], " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{"Abs", "[", 
                   FractionBox[
                    RowBox[{"wp", "-", "e1"}], 
                    RowBox[{"wp", "+", "e1"}]], "]"}], "]"}]}]}], "}"}]}], 
             "]"}]}], "]"}]}], "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[FormalV]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[FormalU]"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], ",", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[FormalU]"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}], "}"}]}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
             RowBox[{
              SuperscriptBox["\[FormalU]", "2"], " ", 
              SuperscriptBox["\[FormalV]", "2"]}]}], "}"}]}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[FormalA]", " ", 
             RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
            RowBox[{"\[FormalA]", " ", 
             RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
           "}"}]}], "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{"Sin", "[", "u", "]"}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
        "]"}],"\"Entity[\\\"Surface\\\", \
\\\"CylindricalSegmentHorizontal\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"v", ",", 
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{"Sin", "[", "u", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[FormalV]", " ", 
              SqrtBox[
               RowBox[{"1", "-", "\[FormalV]"}]], " ", 
              RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
             RowBox[{"\[FormalV]", " ", 
              SqrtBox[
               RowBox[{"1", "-", "\[FormalV]"}]], " ", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
            "}"}]}]}], "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"u", "+", 
       RowBox[{"Cos", "[", "v", "]"}], "+", 
       RowBox[{"Log", "[", 
        RowBox[{"Tan", "[", 
         FractionBox["v", "2"], "]"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[FormalV]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[FormalV]"}], "]"}]}], ",", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{"Sin", "[", "u", "]"}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{"Sin", "[", "u", "]"}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], 
        "]"}],"\"Entity[\\\"Surface\\\", \\\"EllipticHyperboloid1Sheeted\\\"]\
\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"]}]], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"]}]], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      SuperscriptBox["u", "2"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalR]", ",", "\[Phi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\[FormalR]", " ", 
              RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
             RowBox[{
              FractionBox["1", "3"], " ", 
              SuperscriptBox["\[FormalR]", "3"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "3"]}], " ", "\[FormalR]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[FormalR]", "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}], ")"}]}], ",", 
            RowBox[{
             SuperscriptBox["\[FormalR]", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], "}"}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"Log", "[", "\[FormalU]", "]"}]}], "}"}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[FormalV]", ",", 
            FractionBox[
             RowBox[{"\[FormalA]", " ", 
              RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], "\[FormalV]"], ",", 
            FractionBox[
             RowBox[{"\[FormalA]", " ", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], "\[FormalV]"]}], 
           "}"}]}], "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
             RowBox[{
              FractionBox[
               SuperscriptBox["\[FormalU]", "3"], "3"], "+", 
              RowBox[{"\[FormalU]", " ", 
               SuperscriptBox["\[FormalV]", "2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[FormalU]", "2"], "-", 
                 SuperscriptBox["\[FormalV]", "2"]}], ")"}]}]}]}], "}"}]}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalC]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[FormalU]", " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"\[FormalU]", " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"\[FormalC]", " ", "\[FormalV]"}]}], "}"}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Sinh", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "-", 
             RowBox[{
              FractionBox["2", "3"], " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"3", " ", "\[FormalV]"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"Sinh", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "+", 
             RowBox[{
              FractionBox["2", "3"], " ", 
              RowBox[{"Sinh", "[", 
               RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"3", " ", "\[FormalV]"}], "]"}]}]}], ",", 
            RowBox[{"2", " ", 
             RowBox[{"Cosh", "[", 
              RowBox[{"2", " ", "\[FormalU]"}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], "}"}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[FormalA]", " ", 
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ")"}]}], ",", 
            RowBox[{"\[FormalA]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", 
            RowBox[{"\[FormalA]", " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Sinh", "[", "v", "]"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"Cosh", "[", "u", "]"}], " ", 
         RowBox[{"Cosh", "[", "v", "]"}]}]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"Sin", "[", "u", "]"}], " ", 
        RowBox[{"Sinh", "[", "v", "]"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"Cosh", "[", "u", "]"}], " ", 
         RowBox[{"Cosh", "[", "v", "]"}]}]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"Cosh", "[", "v", "]"}], " ", 
        RowBox[{"Sinh", "[", "u", "]"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"Cosh", "[", "u", "]"}], " ", 
         RowBox[{"Cosh", "[", "v", "]"}]}]}]]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           SuperscriptBox[
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
               RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
              RowBox[{
               RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
               RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "}"}], "3"]}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["u", "2"]}], "+", 
       SuperscriptBox["v", "2"]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"]}]], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"]}]], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], " ", 
       RowBox[{"Sinh", "[", "u", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "v", "]"}], " ", 
       RowBox[{"Sinh", "[", "u", "]"}]}], ",", 
      FractionBox[
       RowBox[{"u", " ", 
        RowBox[{"Cosh", "[", "u", "]"}]}], 
       SqrtBox[
        SuperscriptBox["u", "2"]]]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", "8"], "-", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["5", "2"]}], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{"2", "+", "\[FormalV]"}]}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["7", "4"]}], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{"2", "+", "\[FormalV]"}]}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{"2", "+", "\[FormalV]"}]}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "4"]}], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["7", "4"]}], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{"2", "+", "\[FormalV]"}]}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["5", "2"]}], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{"2", "+", "\[FormalV]"}]}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    FractionBox["7", "2"], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[FormalV]"}]}], "]"}], ",", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["2", "3"], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    FractionBox["2", "3"], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    FractionBox["1", "3"], "+", "\[FormalV]"}]}], "]"}], ",", 
                   
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["7", "2"], "-", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], "+", "\[FormalU]", "-", 
                    "\[FormalV]"}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[FormalV]"}]}], "]"}]}], 
                  "]"}]}], ")"}]}]}], " ", 
             SqrtBox[
              RowBox[{"Sign", "[", 
               RowBox[{"16", "-", 
                SuperscriptBox["\[FormalU]", "2"], "-", 
                SuperscriptBox["\[FormalV]", "2"]}], "]"}]]}]}], "}"}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[FormalV]", "2"], " ", 
              SqrtBox[
               FractionBox[
                RowBox[{"1", "-", "\[FormalV]"}], "2"]], " ", 
              RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
             RowBox[{
              SuperscriptBox["\[FormalV]", "2"], " ", 
              SqrtBox[
               FractionBox[
                RowBox[{"1", "-", "\[FormalV]"}], "2"]], " ", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
            "}"}]}]}], "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
      RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  FractionBox["\[FormalU]", "2"], "]"}], " ", 
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  FractionBox["\[FormalU]", "2"], "]"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], ")"}], " ", 
              RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{
                 RowBox[{"Cos", "[", 
                  FractionBox["\[FormalU]", "2"], "]"}], " ", 
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "-", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  FractionBox["\[FormalU]", "2"], "]"}], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], ")"}], " ", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                FractionBox["\[FormalU]", "2"], "]"}], " ", 
               RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["\[FormalU]", "2"], "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]}], "}"}]}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "+", 
                 RowBox[{"\[FormalU]", " ", 
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}]}]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["\[FormalU]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}]], ",", 
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], "-", 
                 RowBox[{"\[FormalU]", " ", 
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}]}]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["\[FormalU]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}]], ",", 
             RowBox[{
              RowBox[{"Log", "[", 
               RowBox[{"Tan", "[", 
                FractionBox["\[FormalV]", "2"], "]"}], "]"}], "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], 
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["\[FormalU]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}]}]]}]}], 
            "}"}]}]}], "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"Re", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SqrtBox["2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                FractionBox["1", "3"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[FormalU]", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ")"}]}], 
               "]"}], " ", 
              SqrtBox[
               RowBox[{"Cos", "[", 
                RowBox[{
                 FractionBox["2", "3"], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[FormalU]", "+", 
                   RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ")"}]}], 
                "]"}]]}], ",", 
             RowBox[{
              RowBox[{"-", 
               SqrtBox["2"]}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                FractionBox["1", "3"], " ", 
                RowBox[{"(", 
                 RowBox[{"\[FormalU]", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ")"}]}], 
               "]"}], " ", 
              SqrtBox[
               RowBox[{"Cos", "[", 
                RowBox[{
                 FractionBox["2", "3"], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[FormalU]", "+", 
                   RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ")"}]}], 
                "]"}]]}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              SqrtBox["2"], " ", 
              RowBox[{"EllipticF", "[", 
               RowBox[{
                RowBox[{
                 FractionBox["1", "3"], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[FormalU]", "+", 
                   RowBox[{"\[ImaginaryI]", " ", "\[FormalV]"}]}], ")"}]}], 
                ",", "2"}], "]"}]}]}], "}"}], "]"}]}], "]"}]}], "]"}], "[", 
      "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
            RowBox[{
             RowBox[{"\[FormalA]", " ", 
              SuperscriptBox["\[FormalU]", "4"]}], "+", 
             RowBox[{
              SuperscriptBox["\[FormalU]", "2"], " ", "\[FormalV]"}], "-", 
             SuperscriptBox["\[FormalV]", "2"]}]}], "}"}]}], "]"}]}], "]"}], 
      "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[FormalA]", "+", 
               RowBox[{"\[FormalU]", " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["\[FormalV]", "2"], "]"}]}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[FormalA]", "+", 
               RowBox[{"\[FormalU]", " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["\[FormalV]", "2"], "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"\[FormalU]", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["\[FormalV]", "2"], "]"}]}]}], "}"}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
             RowBox[{
              SuperscriptBox["\[FormalU]", "3"], "-", 
              RowBox[{"3", " ", "\[FormalU]", " ", 
               SuperscriptBox["\[FormalV]", "2"]}]}]}], "}"}]}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox["\[FormalU]", "2"], 
              RowBox[{"2", " ", "\[FormalA]"}]]}]}], "}"}]}], "]"}]}], "]"}], 
      "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
            RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
            SuperscriptBox["\[FormalU]", "2"]}], "}"}]}], "]"}]}], "]"}], "[",
       "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SqrtBox["u"], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       SqrtBox["u"], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox["\[FormalU]", "2"]}], "-", 
               RowBox[{"\[FormalA]", " ", "\[FormalV]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[FormalA]", " ", "\[FormalV]"}], "-", 
               SuperscriptBox["\[FormalU]", "2"]}], ")"}]}]}], "}"}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Sech", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Sech", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{"\[FormalU]", "-", 
              RowBox[{"Tanh", "[", "\[FormalU]", "]"}]}]}], "}"}]}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "u", "]"}]}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "u"}], "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", "u", "]"}]}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "u"}], "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[FormalU]", "2"], "+", 
                 SuperscriptBox["\[FormalV]", "2"]}], ")"}], "2"], 
              SuperscriptBox["\[FormalA]", "3"]]}]}], "}"}]}], "]"}]}], "]"}],
       "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalC]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                SqrtBox[
                 RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
               "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                  RowBox[{"Cosh", "[", 
                   RowBox[{
                    SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}]}], 
                 SqrtBox["\[FormalC]"]], "-", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
                 RowBox[{"Sinh", "[", 
                  RowBox[{
                   SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}]}]}], 
               ")"}]}], 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", "\[FormalC]"}], ")"}], 
               RowBox[{"3", "/", "2"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
                    "]"}], "2"], 
                  RowBox[{"1", "+", "\[FormalC]"}]]}], "+", 
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"Cosh", "[", 
                   RowBox[{
                    SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}], "2"], 
                 "\[FormalC]"]}], ")"}]}]], ",", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
                "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{
                   RowBox[{"Cosh", "[", 
                    RowBox[{
                    SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}], " ", 
                   RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], 
                  SqrtBox["\[FormalC]"]], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
                  RowBox[{"Sinh", "[", 
                   RowBox[{
                    SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}]}]}], 
                ")"}]}], 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[FormalC]"}], ")"}], 
                RowBox[{"3", "/", "2"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
                    "]"}], "2"], 
                   RowBox[{"1", "+", "\[FormalC]"}]]}], "+", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"Cosh", "[", 
                    RowBox[{
                    SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}], "2"], 
                  "\[FormalC]"]}], ")"}]}]]}], ",", 
            RowBox[{"\[FormalV]", "+", 
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
                "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 SqrtBox[
                  RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
                "]"}]}], 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[FormalC]"}], ")"}], 
                RowBox[{"3", "/", "2"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"1", "+", "\[FormalC]"}]], " ", "\[FormalV]"}], 
                    "]"}], "2"], 
                   RowBox[{"1", "+", "\[FormalC]"}]]}], "+", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"Cosh", "[", 
                    RowBox[{
                    SqrtBox["\[FormalC]"], " ", "\[FormalU]"}], "]"}], "2"], 
                  "\[FormalC]"]}], ")"}]}]]}]}], "}"}]}], "]"}]}], "]"}], "[",
       "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"]}], ",", 
             RowBox[{
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], "}"}]}]}], "]"}]}],
        "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            FractionBox[
             RowBox[{"\[FormalA]", " ", 
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], "+", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "6"]}], 
                  ")"}]}]}], ")"}], 
              RowBox[{"1", "/", "6"}]]], ",", 
            FractionBox[
             RowBox[{"\[FormalA]", " ", 
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], "+", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "6"]}], 
                  ")"}]}]}], ")"}], 
              RowBox[{"1", "/", "6"}]]], ",", 
            FractionBox[
             RowBox[{"\[FormalA]", " ", 
              RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[FormalU]", "]"}], "6"], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalU]", "]"}], "6"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"Cos", "[", "\[FormalV]", "]"}], "6"], "+", 
                   SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalV]", "]"}], "6"]}], 
                  ")"}]}]}], ")"}], 
              RowBox[{"1", "/", "6"}]]]}], "}"}]}], "]"}]}], "]"}], "[", 
      "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"Cos", "[", "\[FormalU]", "]"}], 
               RowBox[{"Cos", "[", "\[FormalV]", "]"}]], "]"}]}], "}"}]}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalR]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1", "+", 
                SuperscriptBox["\[FormalR]", "2"], "+", 
                RowBox[{"2", " ", "\[FormalR]", " ", 
                 RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}], 
               RowBox[{"1", "+", 
                SuperscriptBox["\[FormalR]", "2"], "-", 
                RowBox[{"2", " ", "\[FormalR]", " ", 
                 RowBox[{"Cos", "[", "\[FormalV]", "]"}]}]}]], "]"}], ",", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1", "+", 
                SuperscriptBox["\[FormalR]", "2"], "-", 
                RowBox[{"2", " ", "\[FormalR]", " ", 
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}], 
               RowBox[{"1", "+", 
                SuperscriptBox["\[FormalR]", "2"], "+", 
                RowBox[{"2", " ", "\[FormalR]", " ", 
                 RowBox[{"Sin", "[", "\[FormalV]", "]"}]}]}]], "]"}], ",", 
             RowBox[{"2", " ", 
              RowBox[{"ArcTan", "[", 
               FractionBox[
                RowBox[{"2", " ", 
                 SuperscriptBox["\[FormalR]", "2"], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[FormalV]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["\[FormalR]", "4"]}]], "]"}]}]}], "}"}]}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", "u"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["v", "2"], "]"}], "2"]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", "u"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["v", "2"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", "u"], "-", 
       RowBox[{"Sin", "[", "v", "]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "u"], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
             RowBox[{
              FractionBox[
               SuperscriptBox["\[FormalU]", "3"], "3"], "-", 
              FractionBox[
               SuperscriptBox["\[FormalV]", "2"], "2"]}]}], "}"}]}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\[FormalA]", "+", "1"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"\[FormalA]", " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], 
                   ")"}]}]], " ", 
                RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[FormalU]", 
                  SqrtBox[
                   RowBox[{"\[FormalA]", "+", "1"}]]]}], "+", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{"\[FormalA]", "+", "1"}]], " ", 
                  RowBox[{"Tan", "[", "\[FormalU]", "]"}]}], "]"}]}], "]"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[FormalA]", "+", "1", "-", 
                RowBox[{"\[FormalA]", " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], 
              " ", 
              SqrtBox["\[FormalA]"]}]], ",", 
            FractionBox[
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\[FormalA]", "+", "1"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"\[FormalA]", " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "\[FormalU]", "]"}], "2"]}]}], 
                   ")"}]}]], " ", 
                RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ")"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[FormalU]", 
                  SqrtBox[
                   RowBox[{"\[FormalA]", "+", "1"}]]]}], "+", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{"\[FormalA]", "+", "1"}]], " ", 
                  RowBox[{"Tan", "[", "\[FormalU]", "]"}]}], "]"}]}], "]"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[FormalA]", "+", "1", "-", 
                RowBox[{"\[FormalA]", " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], 
              " ", 
              SqrtBox["\[FormalA]"]}]], ",", 
            RowBox[{
             FractionBox[
              RowBox[{"Log", "[", 
               RowBox[{"Tan", "[", 
                FractionBox["\[FormalV]", "2"], "]"}], "]"}], 
              SqrtBox["\[FormalA]"]], "+", 
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[FormalA]", "+", "1"}], ")"}], " ", 
               RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[FormalA]", "+", "1", "-", 
                 RowBox[{"\[FormalA]", " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[FormalV]", "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[FormalU]", "]"}], "2"]}]}], ")"}], 
               " ", 
               SqrtBox["\[FormalA]"]}]]}]}], "}"}]}], "]"}]}], "]"}], "[", 
      "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Sin", "[", "\[FormalU]", "]"}], ",", 
             RowBox[{"Sin", "[", "\[FormalV]", "]"}], ",", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[FormalU]", "+", "\[FormalV]"}], "]"}]}], "}"}]}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]", ",", 
            RowBox[{
             SqrtBox[
              RowBox[{"Abs", "[", 
               RowBox[{"64", "-", 
                SuperscriptBox["\[FormalU]", "2"], "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "\[FormalV]"}], ")"}], "2"]}], 
               "]"}]], " ", 
             RowBox[{"Log", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", "\[FormalU]"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", "\[FormalV]"}], ")"}], "2"]}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["3", "2"]}], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"3", "+", "\[FormalU]"}], ")"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", "\[FormalV]"}], ")"}], "2"]}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  FractionBox[
                   SuperscriptBox["\[FormalU]", "2"], "4"], "+", 
                  RowBox[{
                   FractionBox["1", "12"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[FormalV]"}], ")"}], "2"]}]}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "64"}], "+", 
                  SuperscriptBox["\[FormalU]", "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[FormalV]"}], ")"}], "2"]}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["1575", "4"], "-", 
                  FractionBox[
                   RowBox[{"163", " ", 
                    SuperscriptBox["\[FormalU]", "2"]}], "4"], "+", 
                  SuperscriptBox["\[FormalU]", "4"], "+", 
                  RowBox[{"25", " ", "\[FormalV]"}], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["\[FormalU]", "2"], " ", "\[FormalV]"}], 
                   "4"], "-", 
                  FractionBox[
                   RowBox[{"163", " ", 
                    SuperscriptBox["\[FormalV]", "2"]}], "4"], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[FormalU]", "2"], " ", 
                   SuperscriptBox["\[FormalV]", "2"]}], "-", 
                  SuperscriptBox["\[FormalV]", "3"], "+", 
                  SuperscriptBox["\[FormalV]", "4"]}], ")"}]}], "]"}], "]"}], 
             " ", 
             SqrtBox[
              RowBox[{"-", 
               RowBox[{"Sign", "[", 
                RowBox[{
                 RowBox[{"-", "64"}], "+", 
                 SuperscriptBox["\[FormalU]", "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", "\[FormalV]"}], ")"}], "2"]}], 
                "]"}]}]]}]}], "}"}]}], "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Sin", "[", "\[FormalU]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], "}"}]}]}], "]"}]}], 
       "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[FormalU]", " ", 
              RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{"\[FormalU]", " ", 
              RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", 
             RowBox[{"\[FormalV]", " ", 
              RowBox[{"Cos", "[", "\[FormalU]", "]"}]}]}], "}"}]}]}], "]"}]}],
        "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"\[FormalU]", " ", 
               SuperscriptBox["\[FormalV]", "2"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox["\[FormalV]", "4"]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[FormalU]", " ", "\[FormalV]"}], 
              "-", 
              RowBox[{"3", " ", 
               SuperscriptBox["\[FormalV]", "3"]}]}], ",", "\[FormalU]"}], 
            "}"}]}]}], "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalR]", ",", "\[Phi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             FractionBox["1", "18"], " ", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"6", " ", "\[FormalR]", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[FormalR]", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["\[FormalR]", "2"]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}]}], 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[FormalR]", "2"], "+", 
                 SuperscriptBox["\[FormalR]", "4"], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[FormalR]", "+", 
                    SuperscriptBox["\[FormalR]", "3"]}], ")"}], " ", 
                  RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[FormalR]", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}]], "-", 
               RowBox[{"4", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[FormalR]", "2"], "-", 
                  RowBox[{"2", " ", "\[FormalR]", " ", 
                   RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[FormalR]", "2"], "+", 
                  SuperscriptBox["\[FormalR]", "4"], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[FormalR]", "+", 
                    SuperscriptBox["\[FormalR]", "3"]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[FormalR]", "2"], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], "]"}]}]}], 
              ")"}]}], ",", 
            RowBox[{
             FractionBox["1", "9"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                SqrtBox["3"], " ", 
                RowBox[{"ArcTanh", "[", 
                 FractionBox[
                  RowBox[{
                   SqrtBox["3"], " ", "\[FormalR]", " ", 
                   RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[FormalR]", "2"], "+", 
                   RowBox[{"\[FormalR]", " ", 
                    RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}]], "]"}]}], "-", 
               FractionBox[
                RowBox[{"3", " ", "\[FormalR]", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["\[FormalR]", "4"], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[FormalR]", "+", 
                    SuperscriptBox["\[FormalR]", "3"]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ")"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
                RowBox[{"1", "+", 
                 SuperscriptBox["\[FormalR]", "6"], "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[FormalR]", "3"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}]]}], ")"}]}], ",", 
            FractionBox["1", 
             RowBox[{"3", "+", 
              FractionBox[
               RowBox[{"3", "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox["\[FormalR]", "6"]}]}], 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[FormalR]", "3"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"3", " ", "\[Phi]"}], "]"}]}]}]]}]]}], "}"}]}], 
         "]"}]}], "]"}], "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", " ", 
       RowBox[{"Cos", "[", "u", "]"}]}], ",", 
      RowBox[{"v", " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "u", "]"}], "2"]}]]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"\[FormalA]", ",", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
          RowBox[{"\[FormalA]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[FormalU]", " ", "\[FormalV]"}], ",", "\[FormalU]", 
             ",", 
             SuperscriptBox["\[FormalV]", "2"]}], "}"}]}]}], "]"}]}], "]"}], 
      "[", "]"}], "[", 
     RowBox[{"u", ",", "v"}], "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771722654451985*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"35daeec1-5aac-434a-9757-f4e0a03bfb00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"\[FormalA]", ",", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
       RowBox[{"\[FormalA]", " ", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{
             SqrtBox["2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[FormalU]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], 
           RowBox[{"2", "-", 
            RowBox[{
             SqrtBox["2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]], ",", 
          FractionBox[
           RowBox[{
            RowBox[{
             SqrtBox["2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[FormalU]"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[FormalU]", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}], 
           RowBox[{"2", "-", 
            RowBox[{
             SqrtBox["2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]], ",", 
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[FormalV]", "]"}], "2"]}], 
           RowBox[{"2", "-", 
            RowBox[{
             SqrtBox["2"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"3", " ", "\[FormalU]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[FormalV]"}], "]"}]}]}]]}], "}"}]}]}], 
      "]"}]}], "]"}], "[", "1", "]"}], "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{3.7717227548887463`*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"6388a439-7b52-45c5-8e70-38e18b2f945a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "u"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "v", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "v"}], "]"}]}]}], 
    RowBox[{"2", "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "u"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "v"}], "]"}]}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      SqrtBox["2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "v", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "u"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "v"}], "]"}]}]}], 
    RowBox[{"2", "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "u"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "v"}], "]"}]}]}]], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "v", "]"}], "2"]}], 
    RowBox[{"2", "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "u"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "v"}], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.771722755339842*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"f279ef75-aed5-4ef4-a90c-0b98c3e86be4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "u"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "v", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "u", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "v"}], "]"}]}]}], 
         RowBox[{"2", "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "u"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "v"}], "]"}]}]}]], ",", 
        FractionBox[
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "v", "]"}], "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "u"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "u", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "v"}], "]"}]}]}], 
         RowBox[{"2", "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "u"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "v"}], "]"}]}]}]], ",", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "v", "]"}], "2"]}], 
         RowBox[{"2", "-", 
          RowBox[{
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "u"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "v"}], "]"}]}]}]]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
        RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.771722760681436*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"88f3d82c-c146-4371-824d-0d4e1cff9de4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {378., {182., 187.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$121004$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$121004$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[(
          1 - $CellContext`a$$) {(
            2^Rational[1, 2] Cos[2 $CellContext`u] Cos[$CellContext`v]^2 + 
            Cos[$CellContext`u] Sin[2 $CellContext`v])/(2 - 2^Rational[1, 2] 
           Sin[3 $CellContext`u] 
           Sin[2 $CellContext`v]), (
            2^Rational[1, 2] Cos[$CellContext`v]^2 Sin[2 $CellContext`u] + 
            Cos[$CellContext`u] Sin[2 $CellContext`v])/(2 - 2^Rational[1, 2] 
           Sin[3 $CellContext`u] Sin[2 $CellContext`v]), 3 
           Cos[$CellContext`v]^2/(2 - 2^Rational[1, 2] Sin[3 $CellContext`u] 
           Sin[2 $CellContext`v])} + $CellContext`a$$ {
          Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
           Sin[$CellContext`v], 
           Cos[$CellContext`v]}, {$CellContext`u, 0, 2 Pi}, {$CellContext`v, 
         0, 2 Pi}], "Specifications" :> {{$CellContext`a$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{425., {226., 233.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7717227611922703`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"3f9179fa-fc9f-4723-a3e9-67d6cda49d19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"\[FormalA]", ",", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
          RowBox[{"Cos", "[", "\[FormalV]", "]"}]}], ",", 
         RowBox[{"\[FormalA]", " ", "\[FormalU]", " ", 
          RowBox[{"Sin", "[", "\[FormalV]", "]"}]}], ",", "\[FormalU]"}], 
        "}"}]}], "]"}]}], "]"}], "[", "1", "]"}], "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{3.7717227992714663`*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"16c6635e-4cfd-46d9-9462-08d11a8f2b60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"u", " ", 
    RowBox[{"Cos", "[", "v", "]"}]}], ",", 
   RowBox[{"u", " ", 
    RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]], "Output",
 CellChangeTimes->{3.771722799914122*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"62b01315-6cd4-4e48-b92a-30f6ec258b72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], ",", 
        RowBox[{"u", " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
        RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.77172280736058*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"ec2526c0-56f8-43c8-a225-b47da08966ec"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.8300000000000001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {812., {396., 403.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$123078$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$123078$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[(
          1 - $CellContext`a$$) {$CellContext`u 
           Cos[$CellContext`v], $CellContext`u 
           Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
          Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
           Sin[$CellContext`v], 
           Cos[$CellContext`v]}, {$CellContext`u, 0, 2 Pi}, {$CellContext`v, 
         0, 2 Pi}], "Specifications" :> {{$CellContext`a$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{859., {441., 448.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.771722807762105*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"6708bc81-7082-4493-9c6c-fde8cfed559b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"\[FormalA]", ",", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[FormalU]", ",", "\[FormalV]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Cosh", "[", 
           FractionBox["\[FormalV]", "\[FormalA]"], "]"}], " ", 
          RowBox[{"Cos", "[", "\[FormalU]", "]"}]}], ",", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Cosh", "[", 
           FractionBox["\[FormalV]", "\[FormalA]"], "]"}], " ", 
          RowBox[{"Sin", "[", "\[FormalU]", "]"}]}], ",", "\[FormalV]"}], 
        "}"}]}], "]"}]}], "]"}], "[", "1", "]"}], "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{3.771722880710875*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"e833842a-abba-411b-a2a2-80e6e9251d92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "u", "]"}], " ", 
    RowBox[{"Cosh", "[", "v", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Cosh", "[", "v", "]"}], " ", 
    RowBox[{"Sin", "[", "u", "]"}]}], ",", "v"}], "}"}]], "Output",
 CellChangeTimes->{3.771722881184621*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"c9870952-aa57-4957-b6f7-91dbf349423b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Cosh", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Cosh", "[", "v", "]"}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}], ",", "v"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
        RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.7717228891818113`*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"f7a26bff-ff39-4c4a-b033-803962a306ac"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.986, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {366., {176., 182.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$127341$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$127341$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[(1 - $CellContext`a$$) {
          Cos[$CellContext`u] Cosh[$CellContext`v], Cosh[$CellContext`v] 
           Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
          Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
           Sin[$CellContext`v], 
           Cos[$CellContext`v]}, {$CellContext`u, 0, 2 Pi}, {$CellContext`v, 
         0, 2 Pi}], "Specifications" :> {{$CellContext`a$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{413., {220., 227.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7717228895955143`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"629384bb-3d80-4fb5-9eed-47cbee43bc47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.771722989722498*^9, 3.771722991527321*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"bd15db0c-7afb-47d5-9e90-7c704f4dbd82"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7717229917821608`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"261b9c3e-43f3-49e2-beff-8880b1705026"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", "=", 
        RowBox[{"SurfaceData", "[", 
         RowBox[{"#", ",", "\"\<ParametricEquations\>\""}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"#", "\[Rule]", 
       RowBox[{
        RowBox[{"Apply", "[", "\[IndentingNewLine]", 
         RowBox[{"s", ",", "\[IndentingNewLine]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1", ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"Extract", "[", 
                 RowBox[{"s", ",", "1"}], "]"}], "]"}], "\[NotEqual]", "0"}], 
              ",", 
              RowBox[{"Length", "[", 
               RowBox[{"Extract", "[", 
                RowBox[{"s", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
           "]"}]}], "]"}], "[", 
        RowBox[{"u", ",", "v"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
    "&"}], ",", 
   RowBox[{"Out", "[", "44", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771723018911734*^9, 3.771723050208454*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"2ecd0af3-024b-4dcc-a820-5c040a9bbb43"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "v", "]"}], "3"]}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "u", "]"}], "3"]}], ",", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "v", "]"}], "3"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], "+", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"u", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["u", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "v"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"-", "u"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"u", " ", 
          RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       FractionBox["4", "3"], " ", 
       SuperscriptBox["u", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"3", " ", "v"}], "2"], "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "u"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "v"}], "]"}]}]}], 
       RowBox[{"2", "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "u"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "v"}], "]"}]}]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "v", "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "u"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "v"}], "]"}]}]}], 
       RowBox[{"2", "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "u"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "v"}], "]"}]}]}]], ",", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "v", "]"}], "2"]}], 
       RowBox[{"2", "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "u"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "v"}], "]"}]}]}]]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "-", 
       RowBox[{
        RowBox[{"Cosh", "[", "v", "]"}], " ", 
        RowBox[{"Sin", "[", "u", "]"}]}]}], ",", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Cosh", "[", "v", "]"}]}]}], ",", 
      RowBox[{"4", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["u", "2"], "]"}], " ", 
       RowBox[{"Sinh", "[", 
        FractionBox["v", "2"], "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Cosh", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Cosh", "[", "v", "]"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "v", "]"}], ",", 
      RowBox[{"Sin", "[", "v", "]"}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"u", "+", 
       RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "v"], " ", 
        RowBox[{"Cos", "[", "v", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "v"], " ", 
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Cos", "[", "v", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "v"], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "v"], " ", 
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "v"], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"\[Pi]", " ", "u"}], "+", 
         FractionBox[
          SuperscriptBox["\[Pi]", "2"], 
          RowBox[{"4", " ", 
           RowBox[{"WeierstrassPHalfPeriod", "[", 
            RowBox[{
             FractionBox["1", "2"], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["1", "2"], ",", 
               FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}]], "-", 
         RowBox[{"WeierstrassZetaHalfPeriod", "[", 
          RowBox[{
           RowBox[{"u", "+", 
            RowBox[{"\[ImaginaryI]", " ", "v"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", "2"], ",", 
             FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}], "+", 
         FractionBox[
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"WeierstrassZetaHalfPeriod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], "+", "u", "+", 
                RowBox[{"\[ImaginaryI]", " ", "v"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox["1", "2"], ",", 
                 FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}], "-", 
             RowBox[{"WeierstrassZetaHalfPeriod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[ImaginaryI]", "2"]}], "+", "u", "+", 
                RowBox[{"\[ImaginaryI]", " ", "v"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox["1", "2"], ",", 
                 FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], 
            ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"WeierstrassPHalfPeriod", "[", 
            RowBox[{
             FractionBox["1", "2"], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["1", "2"], ",", 
               FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}]]}], 
        "]"}]}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Im", "[", 
          RowBox[{"WeierstrassZetaHalfPeriod", "[", 
           RowBox[{
            RowBox[{"u", "+", 
             RowBox[{"\[ImaginaryI]", " ", "v"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              FractionBox["1", "2"], ",", 
              FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}], "]"}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[Pi]", " ", 
          RowBox[{"Im", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"WeierstrassZetaHalfPeriod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "2"]}], "+", "u", "+", 
                RowBox[{"\[ImaginaryI]", " ", "v"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox["1", "2"], ",", 
                 FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}], "-", 
             RowBox[{"WeierstrassZetaHalfPeriod", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[ImaginaryI]", "2"]}], "+", "u", "+", 
                RowBox[{"\[ImaginaryI]", " ", "v"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox["1", "2"], ",", 
                 FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], 
            RowBox[{"WeierstrassPHalfPeriod", "[", 
             RowBox[{
              FractionBox["1", "2"], ",", 
              RowBox[{"{", 
               RowBox[{
                FractionBox["1", "2"], ",", 
                FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]], "]"}]}],
          "+", 
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{"\[Pi]", " ", "v"}], "+", 
           FractionBox[
            SuperscriptBox["\[Pi]", "2"], 
            RowBox[{"4", " ", 
             RowBox[{"WeierstrassPHalfPeriod", "[", 
              RowBox[{
               FractionBox["1", "2"], ",", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox["1", "2"], ",", 
                 FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}]]}], 
          "]"}]}], ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        FractionBox["\[Pi]", "2"]], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"Abs", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"WeierstrassPHalfPeriod", "[", 
             RowBox[{
              FractionBox["1", "2"], ",", 
              RowBox[{"{", 
               RowBox[{
                FractionBox["1", "2"], ",", 
                FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], "+", 
           RowBox[{"WeierstrassPHalfPeriod", "[", 
            RowBox[{
             RowBox[{"u", "+", 
              RowBox[{"\[ImaginaryI]", " ", "v"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["1", "2"], ",", 
               FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}], 
          RowBox[{
           RowBox[{"WeierstrassPHalfPeriod", "[", 
            RowBox[{
             FractionBox["1", "2"], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["1", "2"], ",", 
               FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}], "+", 
           RowBox[{"WeierstrassPHalfPeriod", "[", 
            RowBox[{
             RowBox[{"u", "+", 
              RowBox[{"\[ImaginaryI]", " ", "v"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["1", "2"], ",", 
               FractionBox["\[ImaginaryI]", "2"]}], "}"}]}], "]"}]}]], "]"}], 
        "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "v"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "u"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "v", "]"}], "2"]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "u"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "v", "]"}], "2"]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{
       SuperscriptBox["u", "2"], " ", 
       SuperscriptBox["v", "2"]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{"Sin", "[", "u", "]"}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{"Sin", "[", "u", "]"}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
        "]"}],"\"Entity[\\\"Surface\\\", \
\\\"CylindricalSegmentHorizontal\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"v", ",", 
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{"Sin", "[", "u", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", "v"}]], " ", "v", " ", 
       RowBox[{"Cos", "[", "u", "]"}]}], ",", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", "v"}]], " ", "v", " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"u", "+", 
       RowBox[{"Cos", "[", "v", "]"}], "+", 
       RowBox[{"Log", "[", 
        RowBox[{"Tan", "[", 
         FractionBox["v", "2"], "]"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "v"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "v"}], "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "u"}], ")"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{"Sin", "[", "u", "]"}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "u", "]"}], ",", 
      RowBox[{"Sin", "[", "u", "]"}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], 
        "]"}],"\"Entity[\\\"Surface\\\", \\\"EllipticHyperboloid1Sheeted\\\"]\
\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"]}]], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"]}]], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      SuperscriptBox["u", "2"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"u", " ", 
        RowBox[{"Cos", "[", "v", "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox["u", "3"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "v"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "3"]}], " ", "u", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"Sin", "[", "v", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["u", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"3", " ", "v"}], "]"}]}]}], ")"}]}], ",", 
      RowBox[{
       SuperscriptBox["u", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "v"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Log", "[", "u", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"v", ",", 
      FractionBox[
       RowBox[{"Cos", "[", "u", "]"}], "v"], ",", 
      FractionBox[
       RowBox[{"Sin", "[", "u", "]"}], "v"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{
       FractionBox[
        SuperscriptBox["u", "3"], "3"], "+", 
       RowBox[{"u", " ", 
        SuperscriptBox["v", "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["u", "2"], "-", 
          SuperscriptBox["v", "2"]}], ")"}]}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        RowBox[{"Sinh", "[", "u", "]"}]}], "-", 
       RowBox[{
        FractionBox["2", "3"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "v"}], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"3", " ", "u"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", "v", "]"}], " ", 
        RowBox[{"Sinh", "[", "u", "]"}]}], "+", 
       RowBox[{
        FractionBox["2", "3"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"3", " ", "v"}], "]"}], " ", 
        RowBox[{"Sinh", "[", 
         RowBox[{"3", " ", "u"}], "]"}]}]}], ",", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "v"}], "]"}], " ", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "u"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Sinh", "[", "v", "]"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"Cosh", "[", "u", "]"}], " ", 
         RowBox[{"Cosh", "[", "v", "]"}]}]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"Sin", "[", "u", "]"}], " ", 
        RowBox[{"Sinh", "[", "v", "]"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"Cosh", "[", "u", "]"}], " ", 
         RowBox[{"Cosh", "[", "v", "]"}]}]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"Cosh", "[", "v", "]"}], " ", 
        RowBox[{"Sinh", "[", "u", "]"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"Cosh", "[", "u", "]"}], " ", 
         RowBox[{"Cosh", "[", "v", "]"}]}]}]]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "u", "]"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "v", "]"}], "3"]}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "v", "]"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "u", "]"}], "3"]}], ",", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "v", "]"}], "3"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["u", "2"]}], "+", 
       SuperscriptBox["v", "2"]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"]}]], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"]}]], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], " ", 
       RowBox[{"Sinh", "[", "u", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "v", "]"}], " ", 
       RowBox[{"Sinh", "[", "u", "]"}]}], ",", 
      FractionBox[
       RowBox[{"u", " ", 
        RowBox[{"Cosh", "[", "u", "]"}]}], 
       SqrtBox[
        SuperscriptBox["u", "2"]]]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "8"], "-", 
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["5", "2"]}], "-", "u", "-", "v"}], ",", 
               RowBox[{
                FractionBox["1", "2"], "+", "u", "-", "v"}], ",", 
               RowBox[{"2", "+", "v"}]}], "]"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["7", "4"]}], "-", "u", "-", "v"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "4"]}], "+", "u", "-", "v"}], ",", 
               RowBox[{"2", "+", "v"}]}], "]"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "-", "u", "-", "v"}], ",", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "u", "-", "v"}], ",", 
               RowBox[{"2", "+", "v"}]}], "]"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", "4"]}], "-", "u", "-", "v"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["7", "4"]}], "+", "u", "-", "v"}], ",", 
               RowBox[{"2", "+", "v"}]}], "]"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                FractionBox["1", "2"], "-", "u", "-", "v"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["5", "2"]}], "+", "u", "-", "v"}], ",", 
               RowBox[{"2", "+", "v"}]}], "]"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                FractionBox["1", "2"], "-", "u", "-", "v"}], ",", 
               RowBox[{
                FractionBox["7", "2"], "+", "u", "-", "v"}], ",", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "v"}]}], "]"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                FractionBox["2", "3"], "-", "u", "-", "v"}], ",", 
               RowBox[{
                FractionBox["2", "3"], "+", "u", "-", "v"}], ",", 
               RowBox[{
                FractionBox["1", "3"], "+", "v"}]}], "]"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{
                FractionBox["7", "2"], "-", "u", "-", "v"}], ",", 
               RowBox[{
                FractionBox["1", "2"], "+", "u", "-", "v"}], ",", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "v"}]}], "]"}]}], "]"}]}], ")"}]}]}],
        " ", 
       SqrtBox[
        RowBox[{"Sign", "[", 
         RowBox[{"16", "-", 
          SuperscriptBox["u", "2"], "-", 
          SuperscriptBox["v", "2"]}], "]"}]]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", "v"}]], " ", 
        SuperscriptBox["v", "2"], " ", 
        RowBox[{"Cos", "[", "u", "]"}]}], 
       SqrtBox["2"]], ",", 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", "v"}]], " ", 
        SuperscriptBox["v", "2"], " ", 
        RowBox[{"Sin", "[", "u", "]"}]}], 
       SqrtBox["2"]], ",", "v"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
      RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           FractionBox["u", "2"], "]"}], " ", 
          RowBox[{"Sin", "[", "v", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           FractionBox["u", "2"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "v"}], "]"}]}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           FractionBox["u", "2"], "]"}], " ", 
          RowBox[{"Sin", "[", "v", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", 
           FractionBox["u", "2"], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "v"}], "]"}]}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         FractionBox["u", "2"], "]"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         FractionBox["u", "2"], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "v"}], "]"}]}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "u", "]"}], "+", 
          RowBox[{"u", " ", 
           RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["u", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}]}]], ",", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "u"}], " ", 
           RowBox[{"Cos", "[", "u", "]"}]}], "+", 
          RowBox[{"Sin", "[", "u", "]"}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["u", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}]}]], ",", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"Tan", "[", 
         FractionBox["v", "2"], "]"}], "]"}], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox["u", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"]}]}]]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"Re", "[", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["1", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"\[ImaginaryI]", " ", "v"}]}], ")"}]}], "]"}], " ", 
         SqrtBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["2", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"u", "+", 
              RowBox[{"\[ImaginaryI]", " ", "v"}]}], ")"}]}], "]"}]]}], 
        "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox["2"]}], " ", 
       RowBox[{"Re", "[", 
        RowBox[{
         SqrtBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["2", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"u", "+", 
              RowBox[{"\[ImaginaryI]", " ", "v"}]}], ")"}]}], "]"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["1", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"\[ImaginaryI]", " ", "v"}]}], ")"}]}], "]"}]}], "]"}]}],
       ",", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"Im", "[", 
        RowBox[{"EllipticF", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{"\[ImaginaryI]", " ", "v"}]}], ")"}]}], ",", "2"}], 
         "]"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{
       SuperscriptBox["u", "4"], "+", 
       RowBox[{
        SuperscriptBox["u", "2"], " ", "v"}], "-", 
       SuperscriptBox["v", "2"]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"u", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["v", "2"], "]"}]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"u", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["v", "2"], "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["v", "2"], "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{
       SuperscriptBox["u", "3"], "-", 
       RowBox[{"3", " ", "u", " ", 
        SuperscriptBox["v", "2"]}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["u", "2"], "2"]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      SuperscriptBox["u", "2"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SqrtBox["u"], " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{
       SqrtBox["u"], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["u", "2"]}], "-", "v"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["u", "2"]}], "+", "v"}], ")"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], " ", 
       RowBox[{"Sech", "[", "u", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sech", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"u", "-", 
       RowBox[{"Tanh", "[", "u", "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "u", "]"}]}], "-", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "u"}], "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", "u", "]"}]}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "u"}], "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"]}], ")"}], "2"]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox["2"], " ", "v"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "u", "]"}], " ", 
           RowBox[{"Cosh", "[", "u", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", "u", "]"}], " ", 
           RowBox[{"Sinh", "[", "u", "]"}]}]}], ")"}]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{
              SqrtBox["2"], " ", "v"}], "]"}], "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"Cosh", "[", "u", "]"}], "2"]}], ")"}]}]], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["2"], " ", "v"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cosh", "[", "u", "]"}], " ", 
            RowBox[{"Sin", "[", "u", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "u", "]"}], " ", 
            RowBox[{"Sinh", "[", "u", "]"}]}]}], ")"}]}], 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               SqrtBox["2"], " ", "v"}], "]"}], "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"Cosh", "[", "u", "]"}], "2"]}], ")"}]}]]}], ",", 
      RowBox[{"v", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["2"], " ", "v"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SqrtBox["2"], " ", "v"}], "]"}]}], 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{
               SqrtBox["2"], " ", "v"}], "]"}], "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"Cosh", "[", "u", "]"}], "2"]}], ")"}]}]]}]}], "}"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "v", "]"}], "2"]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "v", "]"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Cos", "[", "v", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "v", "]"}], " ", 
        RowBox[{"Sin", "[", "u", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "u", "]"}], "6"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", "u", "]"}], "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "v", "]"}], "6"], "+", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "6"]}], ")"}]}]}], ")"}], 
        RowBox[{"1", "/", "6"}]]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"Sin", "[", "u", "]"}], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "u", "]"}], "6"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", "u", "]"}], "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "v", "]"}], "6"], "+", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "6"]}], ")"}]}]}], ")"}], 
        RowBox[{"1", "/", "6"}]]], ",", 
      FractionBox[
       RowBox[{"Cos", "[", "u", "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "u", "]"}], "6"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", "u", "]"}], "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "v", "]"}], "6"], "+", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "v", "]"}], "6"]}], ")"}]}]}], ")"}], 
        RowBox[{"1", "/", "6"}]]]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Cos", "[", "u", "]"}], " ", 
        RowBox[{"Sec", "[", "v", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
      "\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         RowBox[{"2", " ", "u", " ", 
          RowBox[{"Cos", "[", "v", "]"}]}]}], 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "-", 
         RowBox[{"2", " ", "u", " ", 
          RowBox[{"Cos", "[", "v", "]"}]}]}]], "]"}], ",", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "-", 
         RowBox[{"2", " ", "u", " ", 
          RowBox[{"Sin", "[", "v", "]"}]}]}], 
        RowBox[{"1", "+", 
         SuperscriptBox["u", "2"], "+", 
         RowBox[{"2", " ", "u", " ", 
          RowBox[{"Sin", "[", "v", "]"}]}]}]], "]"}], ",", 
      RowBox[{"2", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["u", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "v"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["u", "4"]}]], "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", "u"]}], ")"}], " ", 
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["v", "2"], "]"}], "2"]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[ExponentialE]", "u"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["v", "2"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", "u"], "-", 
       RowBox[{"Sin", "[", "v", "]"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "u"], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{
       FractionBox[
        SuperscriptBox["u", "3"], "3"], "-", 
       FractionBox[
        SuperscriptBox["v", "2"], "2"]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["u", 
           SqrtBox["2"]], "-", 
          RowBox[{"ArcTan", "[", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"Tan", "[", "u", "]"}]}], "]"}]}], "]"}], " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "u", "]"}], "2"]}]], " ", 
        RowBox[{"Sin", "[", "v", "]"}]}], 
       RowBox[{"2", "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "u", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "v", "]"}], "2"]}]}]], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "u", "]"}], "2"]}]], " ", 
         RowBox[{"Sin", "[", "v", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["u", 
            SqrtBox["2"]], "-", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             SqrtBox["2"], " ", 
             RowBox[{"Tan", "[", "u", "]"}]}], "]"}]}], "]"}]}], 
        RowBox[{"2", "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "u", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"]}]}]]}], ",", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"Tan", "[", 
         FractionBox["v", "2"], "]"}], "]"}], "+", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"Cos", "[", "v", "]"}]}], 
        RowBox[{"2", "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "u", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "v", "]"}], "2"]}]}]]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "u", "]"}], ",", 
      RowBox[{"Sin", "[", "v", "]"}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"u", "+", "v"}], "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", 
      RowBox[{
       SqrtBox[
        RowBox[{"Abs", "[", 
         RowBox[{"64", "-", 
          SuperscriptBox["u", "2"], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "v"}], ")"}], "2"]}], "]"}]], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "u"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "7"}], "+", "v"}], ")"}], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["3", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"3", "+", "u"}], ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "7"}], "+", "v"}], ")"}], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            FractionBox[
             SuperscriptBox["u", "2"], "4"], "+", 
            RowBox[{
             FractionBox["1", "12"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "v"}], ")"}], "2"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "64"}], "+", 
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "v"}], ")"}], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["1575", "4"], "-", 
            FractionBox[
             RowBox[{"163", " ", 
              SuperscriptBox["u", "2"]}], "4"], "+", 
            SuperscriptBox["u", "4"], "+", 
            RowBox[{"25", " ", "v"}], "-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["u", "2"], " ", "v"}], "4"], "-", 
            FractionBox[
             RowBox[{"163", " ", 
              SuperscriptBox["v", "2"]}], "4"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["u", "2"], " ", 
             SuperscriptBox["v", "2"]}], "-", 
            SuperscriptBox["v", "3"], "+", 
            SuperscriptBox["v", "4"]}], ")"}]}], "]"}], "]"}], " ", 
       SqrtBox[
        RowBox[{"-", 
         RowBox[{"Sign", "[", 
          RowBox[{
           RowBox[{"-", "64"}], "+", 
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "v"}], ")"}], "2"]}], "]"}]}]]}]}], 
     "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", 
       RowBox[{"Cos", "[", "v", "]"}]}], ",", 
      RowBox[{"u", " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"v", " ", 
       RowBox[{"Cos", "[", "u", "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"u", " ", 
        SuperscriptBox["v", "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["v", "4"]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "u", " ", "v"}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["v", "3"]}]}], ",", "u"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", "v", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"Sin", "[", "v", "]"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "18"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"6", " ", "u", " ", 
           RowBox[{"(", 
            RowBox[{"u", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["u", "2"]}], ")"}], " ", 
              RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["u", "2"], "+", 
           SuperscriptBox["u", "4"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"u", "+", 
              SuperscriptBox["u", "3"]}], ")"}], " ", 
            RowBox[{"Cos", "[", "v", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["u", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "v"}], "]"}]}]}]], "-", 
         RowBox[{"4", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"1", "+", 
            SuperscriptBox["u", "2"], "-", 
            RowBox[{"2", " ", "u", " ", 
             RowBox[{"Cos", "[", "v", "]"}]}]}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"1", "+", 
            SuperscriptBox["u", "2"], "+", 
            SuperscriptBox["u", "4"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"u", "+", 
               SuperscriptBox["u", "3"]}], ")"}], " ", 
             RowBox[{"Cos", "[", "v", "]"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["u", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "v"}], "]"}]}]}], "]"}]}]}], ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "9"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SqrtBox["3"], " ", 
          RowBox[{"ArcTanh", "[", 
           FractionBox[
            RowBox[{
             SqrtBox["3"], " ", "u", " ", 
             RowBox[{"Sin", "[", "v", "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             RowBox[{"u", " ", 
              RowBox[{"Cos", "[", "v", "]"}]}]}]], "]"}]}], "-", 
         FractionBox[
          RowBox[{"3", " ", "u", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "4"], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"u", "+", 
                SuperscriptBox["u", "3"]}], ")"}], " ", 
              RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "v", "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["u", "6"], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["u", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "v"}], "]"}]}]}]]}], ")"}]}], ",", 
      FractionBox["1", 
       RowBox[{"3", "+", 
        FractionBox[
         RowBox[{"3", "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["u", "6"]}]}], 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["u", "3"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"3", " ", "v"}], "]"}]}]}]]}]]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
     
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", " ", 
       RowBox[{"Cos", "[", "u", "]"}]}], ",", 
      RowBox[{"v", " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "u", "]"}], "2"]}]]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", " ", "v"}], ",", "u", ",", 
      SuperscriptBox["v", "2"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
      "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "u", "]"}], " ", 
       RowBox[{"Sin", "[", "v", "]"}]}], ",", 
      RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.771723062795877*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"9c17beef-f02b-494a-9bba-57c6b3e59c37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "v"], " ", 
          RowBox[{"Cos", "[", "v", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "v"], " ", 
          RowBox[{"Cos", "[", "u", "]"}], " ", 
          RowBox[{"Cos", "[", "v", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "v"], " ", 
          RowBox[{"Sin", "[", "v", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "v"], " ", 
          RowBox[{"Cos", "[", "u", "]"}], " ", 
          RowBox[{"Sin", "[", "v", "]"}]}]}], ",", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "v"], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "u", "]"}], " ", 
         RowBox[{"Sin", "[", "v", "]"}]}], ",", 
        RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
        RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.7717231158289833`*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"824b8ee2-7550-46a3-ba6f-dea9a640aca6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {776., {384., 391.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$135167$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$135167$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot3D[(1 - $CellContext`a$$) {
          E^$CellContext`v Cos[$CellContext`v] + 
           E^$CellContext`v Cos[$CellContext`u] Cos[$CellContext`v], 
           E^$CellContext`v Sin[$CellContext`v] + 
           E^$CellContext`v Cos[$CellContext`u] Sin[$CellContext`v], 
           E^$CellContext`v Sin[$CellContext`u]} + $CellContext`a$$ {
          Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
           Sin[$CellContext`v], 
           Cos[$CellContext`v]}, {$CellContext`u, 0, 2 Pi}, {$CellContext`v, 
         0, 2 Pi}], "Specifications" :> {{$CellContext`a$$, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{823., {429., 436.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.771723116213275*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"b63d5029-5666-451a-8bfd-83d4ffbd7e16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s", "=", 
        RowBox[{"SurfaceData", "[", 
         RowBox[{"#", ",", "\"\<ParametricEquations\>\""}], "]"}]}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{
              RowBox[{"Apply", "[", "\[IndentingNewLine]", 
               RowBox[{"s", ",", "\[IndentingNewLine]", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"1", ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"s", ",", "1"}], "]"}], "]"}], "\[NotEqual]", 
                    "0"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"s", ",", "1"}], "]"}], "]"}], ",", "1"}], 
                   "]"}]}], "]"}]}], "]"}], "[", 
              RowBox[{"u", ",", "v"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"q", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", "u", "]"}], " ", 
                RowBox[{"Sin", "[", "v", "]"}]}], ",", 
               RowBox[{
                RowBox[{"Sin", "[", "u", "]"}], " ", 
                RowBox[{"Sin", "[", "v", "]"}]}], ",", 
               RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
               RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"u", ",", "0", ",", 
                RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "0", ",", 
                RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
     "]"}], "&"}], ",", 
   RowBox[{"Out", "[", "44", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771723209472245*^9, 3.7717232249597692`*^9}, {
  3.771723258073854*^9, 3.771723259260178*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"3b10e38e-fd57-4c19-953a-c5e13f8699b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$138790$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$138790$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u]^3 Cos[$CellContext`v]^3, 
               Cos[$CellContext`v]^3 Sin[$CellContext`u]^3, 
               Sin[$CellContext`v]^3} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$138818$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$138818$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], Cos[$CellContext`v] + Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$138846$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$138846$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u Cos[$CellContext`v] + 
               Rational[-1, 2] $CellContext`u^2 
                Cos[2 $CellContext`v], -$CellContext`u (
                1 + $CellContext`u Cos[$CellContext`v]) Sin[$CellContext`v], 
               Rational[4, 3] $CellContext`u^Rational[3, 2] 
               Cos[Rational[3, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$138874$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$138874$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(
                2^Rational[1, 2] Cos[2 $CellContext`u] Cos[$CellContext`v]^2 + 
                Cos[$CellContext`u] Sin[2 $CellContext`v])/(2 - 
               2^Rational[1, 2] Sin[3 $CellContext`u] 
               Sin[2 $CellContext`v]), (
                2^Rational[1, 2] Cos[$CellContext`v]^2 Sin[2 $CellContext`u] + 
                Cos[$CellContext`u] Sin[2 $CellContext`v])/(2 - 
               2^Rational[1, 2] Sin[3 $CellContext`u] Sin[2 $CellContext`v]), 
               3 Cos[$CellContext`v]^2/(2 - 2^Rational[1, 2] 
               Sin[3 $CellContext`u] 
               Sin[2 $CellContext`v])} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$138902$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$138902$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u - Cosh[$CellContext`v] 
               Sin[$CellContext`u], 1 - Cos[$CellContext`u] 
               Cosh[$CellContext`v], 4 Sin[Rational[1, 2] $CellContext`u] 
               Sinh[Rational[1, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$138930$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$138930$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Cosh[$CellContext`v], Cosh[$CellContext`v] 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 1., Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$138958$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$138958$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {161., 167.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$138986$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$138986$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 - $CellContext`u) 
               Cos[$CellContext`v], (1 - $CellContext`u) 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {205., 212.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        213., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139014$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139014$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`v], 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{260., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
      
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        179., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139042$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139042$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Cos[$CellContext`v], Cos[$CellContext`v] 
               Sin[$CellContext`u], $CellContext`u + 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        323., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139070$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139070$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              E^$CellContext`v Cos[$CellContext`v] + 
               E^$CellContext`v Cos[$CellContext`u] Cos[$CellContext`v], 
               E^$CellContext`v Sin[$CellContext`v] + 
               E^$CellContext`v Cos[$CellContext`u] Sin[$CellContext`v], 
               E^$CellContext`v Sin[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{370., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139098$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139098$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Rational[1, 2] 
               Re[Pi $CellContext`u + 
                 Rational[1, 4] Pi^2/$CellContext`WeierstrassPHalfPeriod[
                   Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] - \
$CellContext`WeierstrassZetaHalfPeriod[$CellContext`u + 
                  Complex[0, 1] $CellContext`v, {
                   Rational[1, 2], 
                   Complex[0, 
                    Rational[1, 2]]}] + 
                 Rational[1, 2] Pi $CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}]^(-1) ($CellContext`WeierstrassZetaHalfPeriod[
                    Rational[-1, 2] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] - $CellContext`WeierstrassZetaHalfPeriod[
                   Complex[0, 
                    Rational[-1, 2]] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])], Rational[1, 2] (Im[
                  $CellContext`WeierstrassZetaHalfPeriod[$CellContext`u + 
                   Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}]] + 
                Rational[1, 2] Pi Im[$CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}]^(-1) ($CellContext`WeierstrassZetaHalfPeriod[
                    Rational[-1, 2] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] - $CellContext`WeierstrassZetaHalfPeriod[
                    Complex[0, 
                    Rational[-1, 2]] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])] + 
                Re[Pi $CellContext`v + 
                  Rational[1, 4] Pi^2/$CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}]]), 
               Rational[1, 2] (Rational[1, 2] Pi)^Rational[1, 2] Log[
                 Abs[(-$CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] + \
$CellContext`WeierstrassPHalfPeriod[$CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])/($CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] + \
$CellContext`WeierstrassPHalfPeriod[$CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        297., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139126$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139126$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Rational[1, 2] Sin[$CellContext`u] Sin[2 $CellContext`v], 
               Sin[2 $CellContext`u] Sin[$CellContext`v]^2, 
               Cos[2 $CellContext`u] 
               Sin[$CellContext`v]^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{344., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        47., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139154$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139154$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
$CellContext`u^2 $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        213., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139182$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139182$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{260., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        213., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139210$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139210$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{260., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
         "]"}],"\"Entity[\\\"Surface\\\", \
\\\"CylindricalSegmentHorizontal\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {114., 120.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139238$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139238$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {$CellContext`v, 
               Cos[$CellContext`u], 
               Sin[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {158., 165.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        354., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139266$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139266$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v 
               Cos[$CellContext`u], (1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{401., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        120., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139294$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139294$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], $CellContext`u + Cos[$CellContext`v] + Log[
                 Tan[Rational[1, 2] $CellContext`v]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139322$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139322$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139350$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139350$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[2 $CellContext`v], Sin[$CellContext`u] 
               Sin[2 $CellContext`v], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {195., 202.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139378$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139378$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {150., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139406$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139406$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {161., 167.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139434$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139434$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 - $CellContext`u) 
               Cos[$CellContext`v], (1 - $CellContext`u) 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {205., 212.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
      
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        213., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139462$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139462$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{260., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        213., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139490$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139490$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{260., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
      
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {150., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139518$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139518$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], 
         "]"}],"\"Entity[\\\"Surface\\\", \
\\\"EllipticHyperboloid1Sheeted\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {149., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139546$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139546$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 + $CellContext`u^2)^Rational[1, 2] 
               Cos[$CellContext`v], (1 + $CellContext`u^2)^Rational[1, 2] 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {193., 200.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        204., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139574$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139574$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{251., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {149., 156.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139602$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139602$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + Cos[$CellContext`v]), (1 + 
                Cos[$CellContext`v]) Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {177., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139630$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139630$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u Cos[$CellContext`v] + 
               Rational[-1, 3] $CellContext`u^3 Cos[3 $CellContext`v], 
               Rational[-1, 3] $CellContext`u (
                3 Sin[$CellContext`v] + $CellContext`u^2 
                 Sin[3 $CellContext`v]), $CellContext`u^2 
               Cos[2 $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {221., 228.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {151., 158.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139658$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139658$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u Sin[$CellContext`v], 
               Log[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {196., 203.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {134., 139.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139686$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139686$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`v, $CellContext`v^(-1) 
               Cos[$CellContext`u], $CellContext`v^(-1) 
               Sin[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {178., 185.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        54., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139714$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139714$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Rational[
                 1, 3] $CellContext`u^3 + $CellContext`u $CellContext`v^2 + 
               2 ($CellContext`u^2 - $CellContext`v^2)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {150., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139742$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139742$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139770$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139770$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {102., 109.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139798$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139798$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2 Cos[$CellContext`v] Sinh[$CellContext`u] + 
               Rational[-2, 3] Cos[3 $CellContext`v] Sinh[3 $CellContext`u], 
               2 Sin[$CellContext`v] Sinh[$CellContext`u] + 
               Rational[2, 3] Sin[3 $CellContext`v] Sinh[3 $CellContext`u], 2 
               Cos[2 $CellContext`v] 
               Cosh[2 $CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {147., 154.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {149., 156.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139826$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139826$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + Cos[$CellContext`v]), (1 + 
                Cos[$CellContext`v]) Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {192., 197.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139854$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139854$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + 
                 Cosh[$CellContext`u] Cosh[$CellContext`v])^(-1) 
               Sinh[$CellContext`v], (1 + 
                 Cosh[$CellContext`u] Cosh[$CellContext`v])^(-1) 
               Sin[$CellContext`u] Sinh[$CellContext`v], 
               Cosh[$CellContext`v] (1 + 
                 Cosh[$CellContext`u] Cosh[$CellContext`v])^(-1) 
               Sinh[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {236., 243.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        323., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139882$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139882$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u]^3 Cos[$CellContext`v]^3, 
               Cos[$CellContext`v]^3 Sin[$CellContext`u]^3, 
               Sin[$CellContext`v]^3} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{370., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        84., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139910$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139910$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
-$CellContext`u^2 + $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {149., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139938$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139938$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 + $CellContext`u^2)^Rational[1, 2] 
               Cos[$CellContext`v], (1 + $CellContext`u^2)^Rational[1, 2] 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {193., 200.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        242., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139966$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139966$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`v] Sinh[$CellContext`u], Sin[$CellContext`v] 
               Sinh[$CellContext`u], $CellContext`u ($CellContext`u^2)^
                Rational[-1, 2] Cosh[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{289., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {146., 151.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$139994$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$139994$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, -(
                 Rational[1, 8] - Max[
                  Min[
                  Rational[-5, 2] - $CellContext`u - $CellContext`v, 
                   Rational[1, 2] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  Min[
                  Rational[-7, 4] - $CellContext`u - $CellContext`v, 
                   Rational[-1, 4] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  
                  Min[-1 - $CellContext`u - $CellContext`v, -1 + \
$CellContext`u - $CellContext`v, 2 + $CellContext`v], 
                  Min[
                  Rational[-1, 4] - $CellContext`u - $CellContext`v, 
                   Rational[-7, 4] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  Min[
                  Rational[1, 2] - $CellContext`u - $CellContext`v, 
                   Rational[-5, 2] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  Min[
                  Rational[1, 2] - $CellContext`u - $CellContext`v, 
                   Rational[
                    7, 2] + $CellContext`u - $CellContext`v, -1 + \
$CellContext`v], 
                  Min[
                  Rational[2, 3] - $CellContext`u - $CellContext`v, 
                   Rational[2, 3] + $CellContext`u - $CellContext`v, 
                   Rational[1, 3] + $CellContext`v], 
                  Min[
                  Rational[7, 2] - $CellContext`u - $CellContext`v, 
                   Rational[
                    1, 2] + $CellContext`u - $CellContext`v, -1 + \
$CellContext`v]])^Rational[1, 2] 
               Sign[16 - $CellContext`u^2 - $CellContext`v^2]^
                Rational[1, 2]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {190., 197.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        245., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140022$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140022$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2^Rational[-1, 2] (1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v^2 Cos[$CellContext`u], 
               2^Rational[-1, 2] (1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v^2 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{292., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {139., 145.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140050$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140050$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (3 + 
                Cos[Rational[1, 2] $CellContext`u] Sin[$CellContext`v] - 
                Sin[Rational[1, 2] $CellContext`u] Sin[2 $CellContext`v]), 
               Sin[$CellContext`u] (3 + 
                Cos[Rational[1, 2] $CellContext`u] Sin[$CellContext`v] - 
                Sin[Rational[1, 2] $CellContext`u] Sin[2 $CellContext`v]), 
               Sin[Rational[1, 2] $CellContext`u] Sin[$CellContext`v] + 
               Cos[Rational[1, 2] $CellContext`u] 
                Sin[2 $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {183., 190.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        274., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140078$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140078$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2 (Cos[$CellContext`u] + $CellContext`u Sin[$CellContext`u]) 
               Sin[$CellContext`v]/(
               1 + $CellContext`u^2 Sin[$CellContext`v]^2), 
               2 (-$CellContext`u Cos[$CellContext`u] + Sin[$CellContext`u]) 
               Sin[$CellContext`v]/(
               1 + $CellContext`u^2 Sin[$CellContext`v]^2), Log[
                 Tan[Rational[1, 2] $CellContext`v]] + 
               2 Cos[$CellContext`v]/(
                1 + $CellContext`u^2 
                 Sin[$CellContext`v]^2)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{321., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {104., 109.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140106$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140106$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2^Rational[1, 2] 
               Re[Cos[Rational[1, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)] 
                 Cos[Rational[2, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)]^Rational[1, 2]], -2^
                Rational[1, 2] 
               Re[Cos[Rational[2, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)]^Rational[1, 2] 
                 Sin[Rational[1, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)]], 2^Rational[1, 2] Im[
                 EllipticF[
                 Rational[1, 3] ($CellContext`u + 
                   Complex[0, 1] $CellContext`v), 2]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {148., 155.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        48., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140134$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140134$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
$CellContext`u^4 + $CellContext`u^2 $CellContext`v - $CellContext`v^2} + \
$CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {170., 176.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140162$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140162$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(
                1 + $CellContext`u Cos[Rational[1, 2] $CellContext`v]) 
               Cos[$CellContext`v], (
                1 + $CellContext`u Cos[Rational[1, 2] $CellContext`v]) 
               Sin[$CellContext`v], $CellContext`u 
               Sin[Rational[1, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {214., 221.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        51., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140190$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140190$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
$CellContext`u^3 - 3 $CellContext`u $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        202., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140218$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140218$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Rational[-1, 2] $CellContext`u^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        204., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140246$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140246$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{251., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        353., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140274$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140274$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u^Rational[1, 2] 
               Cos[$CellContext`v], $CellContext`u^Rational[1, 2] 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{400., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        55., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140302$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140302$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, (
                2 $CellContext`u^2 - $CellContext`v) (-$CellContext`u^2 + \
$CellContext`v)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {115., 121.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140330$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140330$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u Sin[$CellContext`v], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {159., 166.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        142., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140358$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140358$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`v] Sech[$CellContext`u], Sech[$CellContext`u] 
               Sin[$CellContext`v], $CellContext`u - 
               Tanh[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {126., 133.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140386$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140386$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(2 Cos[$CellContext`u] - Cos[
                2 $CellContext`u]) 
               Sin[$CellContext`v], (2 Sin[$CellContext`u] - Sin[
                2 $CellContext`u]) Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {171., 178.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        54., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140414$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140414$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
-($CellContext`u^2 + $CellContext`v^2)^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        127., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140442$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140442$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2^Rational[-1, 2] 
               Cos[2^Rational[1, 2] $CellContext`v] (
                 Rational[-1, 2] Cos[2^Rational[1, 2] $CellContext`v]^2 + 
                 Cosh[$CellContext`u]^2)^(-1) (
                Cos[$CellContext`u] Cosh[$CellContext`u] - 
                Sin[$CellContext`u] Sinh[$CellContext`u]), -2^Rational[-1, 2] 
               Cos[2^Rational[1, 2] $CellContext`v] (
                 Rational[-1, 2] Cos[2^Rational[1, 2] $CellContext`v]^2 + 
                 Cosh[$CellContext`u]^2)^(-1) (
                Cosh[$CellContext`u] Sin[$CellContext`u] + 
                Cos[$CellContext`u] Sinh[$CellContext`u]), $CellContext`v + 
               2^Rational[-1, 2] 
                Cos[2^Rational[1, 2] $CellContext`v] (
                  Rational[-1, 2] Cos[2^Rational[1, 2] $CellContext`v]^2 + 
                  Cosh[$CellContext`u]^2)^(-1) 
                Sin[2^Rational[1, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140470$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140470$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`u] Sin[$CellContext`v]^2, 
               Cos[$CellContext`v] Sin[$CellContext`u] Sin[$CellContext`v], 
               Cos[$CellContext`u] Cos[$CellContext`v] 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140498$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140498$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`v] 
               Sin[$CellContext`u] (Cos[$CellContext`u]^6 + 
                 Sin[$CellContext`u]^6 (Cos[$CellContext`v]^6 + 
                   Sin[$CellContext`v]^6))^Rational[-1, 6], 
               Sin[$CellContext`u] 
               Sin[$CellContext`v] (Cos[$CellContext`u]^6 + 
                 Sin[$CellContext`u]^6 (Cos[$CellContext`v]^6 + 
                   Sin[$CellContext`v]^6))^Rational[-1, 6], 
               Cos[$CellContext`u] (Cos[$CellContext`u]^6 + 
                 Sin[$CellContext`u]^6 (Cos[$CellContext`v]^6 + 
                   Sin[$CellContext`v]^6))^
                Rational[-1, 6]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        279., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140526$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140526$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Log[
               Cos[$CellContext`u] Sec[$CellContext`v]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{326., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {163., 170.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140554$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140554$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               
               Log[(1 + $CellContext`u^2 - 2 $CellContext`u 
                  Cos[$CellContext`v])^(-1) (1 + $CellContext`u^2 + 
                 2 $CellContext`u Cos[$CellContext`v])], 
               
               Log[(1 + $CellContext`u^2 - 2 $CellContext`u 
                 Sin[$CellContext`v])/(1 + $CellContext`u^2 + 
                2 $CellContext`u Sin[$CellContext`v])], 2 
               ArcTan[2 $CellContext`u^2 (-1 + $CellContext`u^4)^(-1) 
                 Sin[2 $CellContext`v]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {208., 215.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        224., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140582$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140582$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(-1 + E^$CellContext`u) 
               Cos[$CellContext`u] 
               Cos[Rational[1, 2] $CellContext`v]^2, (1 - E^$CellContext`u) 
               Cos[Rational[1, 2] $CellContext`v]^2 Sin[$CellContext`u], 1 - 
               E^$CellContext`u - Sin[$CellContext`v] + 
               E^$CellContext`u Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{271., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        68., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140610$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140610$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Rational[1, 3] $CellContext`u^3 + 
               Rational[-1, 2] $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {187., 193.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140638$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140638$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2 2^Rational[1, 2] 
               Cos[2^Rational[-1, 2] $CellContext`u - ArcTan[
                 2^Rational[1, 2] Tan[$CellContext`u]]] (1 + 
                 Sin[$CellContext`u]^2)^Rational[1, 2] Sin[$CellContext`v]/(2 - 
               Cos[$CellContext`u]^2 Sin[$CellContext`v]^2), (-2) 
               2^Rational[1, 2] (1 + Sin[$CellContext`u]^2)^Rational[1, 2] 
               Sin[$CellContext`v] (2 - Cos[$CellContext`u]^2 
                 Sin[$CellContext`v]^2)^(-1) 
               Sin[2^Rational[-1, 2] $CellContext`u - ArcTan[
                 2^Rational[1, 2] Tan[$CellContext`u]]], Log[
                 Tan[Rational[1, 2] $CellContext`v]] + 
               4 Cos[$CellContext`v]/(2 - Cos[$CellContext`u]^2 
                Sin[$CellContext`v]^2)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {231., 238.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 202.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140666$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140666$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Sin[$CellContext`u], 
               Sin[$CellContext`v], 
               Sin[$CellContext`u + $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        73., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140694$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140694$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Abs[64 - $CellContext`u^2 - (-2 + $CellContext`v)^2]^
                Rational[1, 2] Log[
                 
                 Abs[(Rational[-3, 
                    2] + (-3 + $CellContext`u)^2 + (-7 + $CellContext`v)^2) (
                   Rational[-3, 2] + (
                    3 + $CellContext`u)^2 + (-7 + $CellContext`v)^2) (-1 + 
                   Rational[1, 4] $CellContext`u^2 + 
                   Rational[
                    1, 12] (-2 + $CellContext`v)^2) (-64 + $CellContext`u^2 + \
(-2 + $CellContext`v)^2) (Rational[1575, 4] + 
                   Rational[-163, 4] $CellContext`u^2 + $CellContext`u^4 + 
                   25 $CellContext`v + 
                   Rational[-1, 4] $CellContext`u^2 $CellContext`v + 
                   Rational[-163, 4] $CellContext`v^2 + 
                   2 $CellContext`u^2 $CellContext`v^2 - $CellContext`v^3 + \
$CellContext`v^4)]] (-Sign[-64 + $CellContext`u^2 + (-2 + $CellContext`v)^2])^
                Rational[1, 2]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140722$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140722$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140750$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140750$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140778$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140778$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {195., 200.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140806$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140806$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`v 
               Cos[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {239., 246.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"",
       "\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {360., {71., 78.}},
         Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`a$140834$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140834$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u $CellContext`v^2 + 
               3 $CellContext`v^4, (-2) $CellContext`u $CellContext`v - 
               3 $CellContext`v^3, $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {116., 123.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {149., 156.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140862$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140862$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + Cos[$CellContext`v]), (1 + 
                Cos[$CellContext`v]) Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {160., 167.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140890$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140890$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Rational[1, 18] (
                6 $CellContext`u ($CellContext`u + (1 + $CellContext`u^2) 
                   Cos[$CellContext`v])/(
                 1 + $CellContext`u^2 + $CellContext`u^4 + 
                 2 ($CellContext`u + $CellContext`u^3) Cos[$CellContext`v] + 
                 2 $CellContext`u^2 Cos[2 $CellContext`v]) - 4 
                Log[1 + $CellContext`u^2 - 2 $CellContext`u 
                  Cos[$CellContext`v]] + 
                2 Log[1 + $CellContext`u^2 + $CellContext`u^4 + 
                   2 ($CellContext`u + $CellContext`u^3) Cos[$CellContext`v] + 
                   2 $CellContext`u^2 Cos[2 $CellContext`v]]), 
               Rational[
                1, 9] ((-2) 3^Rational[1, 2] 
                 ArcTanh[
                  3^Rational[1, 2] $CellContext`u (
                    1 + $CellContext`u^2 + $CellContext`u 
                    Cos[$CellContext`v])^(-1) Sin[$CellContext`v]] - 
                3 $CellContext`u (1 + $CellContext`u^4 + 
                 2 ($CellContext`u + $CellContext`u^3) Cos[$CellContext`v]) (
                  1 + $CellContext`u^6 - 2 $CellContext`u^3 
                  Cos[3 $CellContext`v])^(-1) Sin[$CellContext`v]), (
                3 + (3 - 3 $CellContext`u^6)/(-2 + 
                 2 $CellContext`u^3 
                  Cos[3 $CellContext`v]))^(-1)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {205., 212.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {109., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140918$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140918$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`v 
               Cos[$CellContext`u], $CellContext`v 
               Sin[$CellContext`u], (1 - Cos[$CellContext`u]^2)^
               Rational[1, 2]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {153., 160.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {195., 202.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140946$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140946$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u $CellContext`v, \
$CellContext`u, $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
      "Entity"], ",", 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$140974$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$140974$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771723264598374*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"0dc395c7-eea9-415d-a13d-d3108962cdff"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771723250531752*^9, 
  3.7717232545358686`*^9}},ExpressionUUID->"370a2a55-cc5f-4b3a-91ad-\
b77fdde81356"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"Out", "[", "71", "]"}]}]], "Input",
 CellChangeTimes->{{3.7717233310328417`*^9, 3.7717233356872673`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"655f4e54-f84e-47dd-9e44-740006ece1fe"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        323., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150213$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150213$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u]^3 Cos[$CellContext`v]^3, 
               Cos[$CellContext`v]^3 Sin[$CellContext`u]^3, 
               Sin[$CellContext`v]^3} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{370., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {195., 200.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150239$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150239$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], Cos[$CellContext`v] + Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {239., 246.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0.8300000000000001, 
        Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
        Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
        Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
        Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {194., 200.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150265$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150265$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u Cos[$CellContext`v] + 
               Rational[-1, 2] $CellContext`u^2 
                Cos[2 $CellContext`v], -$CellContext`u (
                1 + $CellContext`u Cos[$CellContext`v]) Sin[$CellContext`v], 
               Rational[4, 3] $CellContext`u^Rational[3, 2] 
               Cos[Rational[3, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {238., 245.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {178., 185.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150291$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150291$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(
                2^Rational[1, 2] Cos[2 $CellContext`u] Cos[$CellContext`v]^2 + 
                Cos[$CellContext`u] Sin[2 $CellContext`v])/(2 - 
               2^Rational[1, 2] Sin[3 $CellContext`u] 
               Sin[2 $CellContext`v]), (
                2^Rational[1, 2] Cos[$CellContext`v]^2 Sin[2 $CellContext`u] + 
                Cos[$CellContext`u] Sin[2 $CellContext`v])/(2 - 
               2^Rational[1, 2] Sin[3 $CellContext`u] Sin[2 $CellContext`v]), 
               3 Cos[$CellContext`v]^2/(2 - 2^Rational[1, 2] 
               Sin[3 $CellContext`u] 
               Sin[2 $CellContext`v])} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {223., 230.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {125., 132.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150317$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150317$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u - Cosh[$CellContext`v] 
               Sin[$CellContext`u], 1 - Cos[$CellContext`u] 
               Cosh[$CellContext`v], 4 Sin[Rational[1, 2] $CellContext`u] 
               Sinh[Rational[1, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {170., 177.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {115., 122.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150343$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150343$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Cosh[$CellContext`v], Cosh[$CellContext`v] 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {160., 167.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {150., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150369$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150369$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {161., 167.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150395$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150395$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 - $CellContext`u) 
               Cos[$CellContext`v], (1 - $CellContext`u) 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {205., 212.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        213., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150421$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150421$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`v], 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{260., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
      
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        179., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150447$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150447$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Cos[$CellContext`v], Cos[$CellContext`v] 
               Sin[$CellContext`u], $CellContext`u + 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        323., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150473$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150473$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              E^$CellContext`v Cos[$CellContext`v] + 
               E^$CellContext`v Cos[$CellContext`u] Cos[$CellContext`v], 
               E^$CellContext`v Sin[$CellContext`v] + 
               E^$CellContext`v Cos[$CellContext`u] Sin[$CellContext`v], 
               E^$CellContext`v Sin[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{370., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150499$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150499$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Rational[1, 2] 
               Re[Pi $CellContext`u + 
                 Rational[1, 4] Pi^2/$CellContext`WeierstrassPHalfPeriod[
                   Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] - \
$CellContext`WeierstrassZetaHalfPeriod[$CellContext`u + 
                  Complex[0, 1] $CellContext`v, {
                   Rational[1, 2], 
                   Complex[0, 
                    Rational[1, 2]]}] + 
                 Rational[1, 2] Pi $CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}]^(-1) ($CellContext`WeierstrassZetaHalfPeriod[
                    Rational[-1, 2] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] - $CellContext`WeierstrassZetaHalfPeriod[
                   Complex[0, 
                    Rational[-1, 2]] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])], Rational[1, 2] (Im[
                  $CellContext`WeierstrassZetaHalfPeriod[$CellContext`u + 
                   Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}]] + 
                Rational[1, 2] Pi Im[$CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}]^(-1) ($CellContext`WeierstrassZetaHalfPeriod[
                    Rational[-1, 2] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] - $CellContext`WeierstrassZetaHalfPeriod[
                    Complex[0, 
                    Rational[-1, 2]] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])] + 
                Re[Pi $CellContext`v + 
                  Rational[1, 4] Pi^2/$CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}]]), 
               Rational[1, 2] (Rational[1, 2] Pi)^Rational[1, 2] Log[
                 Abs[(-$CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] + \
$CellContext`WeierstrassPHalfPeriod[$CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])/($CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] + \
$CellContext`WeierstrassPHalfPeriod[$CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        297., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150525$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150525$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Rational[1, 2] Sin[$CellContext`u] Sin[2 $CellContext`v], 
               Sin[2 $CellContext`u] Sin[$CellContext`v]^2, 
               Cos[2 $CellContext`u] 
               Sin[$CellContext`v]^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{344., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        47., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150551$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150551$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
$CellContext`u^2 $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        213., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150577$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150577$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{260., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        213., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150603$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150603$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{260., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{
      "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
         "]"}],"\"Entity[\\\"Surface\\\", \
\\\"CylindricalSegmentHorizontal\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {114., 120.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150629$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150629$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {$CellContext`v, 
               Cos[$CellContext`u], 
               Sin[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {158., 165.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        354., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150655$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150655$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v 
               Cos[$CellContext`u], (1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{401., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        120., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150681$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150681$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], $CellContext`u + Cos[$CellContext`v] + Log[
                 Tan[Rational[1, 2] $CellContext`v]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150707$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150707$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150733$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150733$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[2 $CellContext`v], Sin[$CellContext`u] 
               Sin[2 $CellContext`v], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150759$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150759$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {150., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150785$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150785$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {161., 167.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150811$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150811$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 - $CellContext`u) 
               Cos[$CellContext`v], (1 - $CellContext`u) 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {205., 212.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
      
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        213., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150837$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150837$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{260., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        213., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150863$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150863$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{260., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
      
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {150., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150889$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150889$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{
      "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], 
         "]"}],"\"Entity[\\\"Surface\\\", \
\\\"EllipticHyperboloid1Sheeted\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {149., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150915$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150915$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 + $CellContext`u^2)^Rational[1, 2] 
               Cos[$CellContext`v], (1 + $CellContext`u^2)^Rational[1, 2] 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {193., 200.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        204., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150941$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150941$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{251., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {149., 156.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150967$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150967$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + Cos[$CellContext`v]), (1 + 
                Cos[$CellContext`v]) Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {177., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$150993$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$150993$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u Cos[$CellContext`v] + 
               Rational[-1, 3] $CellContext`u^3 Cos[3 $CellContext`v], 
               Rational[-1, 3] $CellContext`u (
                3 Sin[$CellContext`v] + $CellContext`u^2 
                 Sin[3 $CellContext`v]), $CellContext`u^2 
               Cos[2 $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {221., 228.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {151., 158.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151019$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151019$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u Sin[$CellContext`v], 
               Log[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {196., 203.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {134., 139.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151045$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151045$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`v, $CellContext`v^(-1) 
               Cos[$CellContext`u], $CellContext`v^(-1) 
               Sin[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {178., 185.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        54., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151071$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151071$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Rational[
                 1, 3] $CellContext`u^3 + $CellContext`u $CellContext`v^2 + 
               2 ($CellContext`u^2 - $CellContext`v^2)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {150., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151097$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151097$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151123$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151123$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {102., 109.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151149$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151149$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2 Cos[$CellContext`v] Sinh[$CellContext`u] + 
               Rational[-2, 3] Cos[3 $CellContext`v] Sinh[3 $CellContext`u], 
               2 Sin[$CellContext`v] Sinh[$CellContext`u] + 
               Rational[2, 3] Sin[3 $CellContext`v] Sinh[3 $CellContext`u], 2 
               Cos[2 $CellContext`v] 
               Cosh[2 $CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {147., 154.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {149., 156.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151175$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151175$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + Cos[$CellContext`v]), (1 + 
                Cos[$CellContext`v]) Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {192., 197.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151201$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151201$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + 
                 Cosh[$CellContext`u] Cosh[$CellContext`v])^(-1) 
               Sinh[$CellContext`v], (1 + 
                 Cosh[$CellContext`u] Cosh[$CellContext`v])^(-1) 
               Sin[$CellContext`u] Sinh[$CellContext`v], 
               Cosh[$CellContext`v] (1 + 
                 Cosh[$CellContext`u] Cosh[$CellContext`v])^(-1) 
               Sinh[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {236., 243.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        323., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151227$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151227$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u]^3 Cos[$CellContext`v]^3, 
               Cos[$CellContext`v]^3 Sin[$CellContext`u]^3, 
               Sin[$CellContext`v]^3} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{370., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        84., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151253$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151253$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
-$CellContext`u^2 + $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {149., 155.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151279$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151279$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 + $CellContext`u^2)^Rational[1, 2] 
               Cos[$CellContext`v], (1 + $CellContext`u^2)^Rational[1, 2] 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {193., 200.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        242., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151305$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151305$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`v] Sinh[$CellContext`u], Sin[$CellContext`v] 
               Sinh[$CellContext`u], $CellContext`u ($CellContext`u^2)^
                Rational[-1, 2] Cosh[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{289., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{
      "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {146., 151.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151331$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151331$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, -(
                 Rational[1, 8] - Max[
                  Min[
                  Rational[-5, 2] - $CellContext`u - $CellContext`v, 
                   Rational[1, 2] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  Min[
                  Rational[-7, 4] - $CellContext`u - $CellContext`v, 
                   Rational[-1, 4] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  
                  Min[-1 - $CellContext`u - $CellContext`v, -1 + \
$CellContext`u - $CellContext`v, 2 + $CellContext`v], 
                  Min[
                  Rational[-1, 4] - $CellContext`u - $CellContext`v, 
                   Rational[-7, 4] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  Min[
                  Rational[1, 2] - $CellContext`u - $CellContext`v, 
                   Rational[-5, 2] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  Min[
                  Rational[1, 2] - $CellContext`u - $CellContext`v, 
                   Rational[
                    7, 2] + $CellContext`u - $CellContext`v, -1 + \
$CellContext`v], 
                  Min[
                  Rational[2, 3] - $CellContext`u - $CellContext`v, 
                   Rational[2, 3] + $CellContext`u - $CellContext`v, 
                   Rational[1, 3] + $CellContext`v], 
                  Min[
                  Rational[7, 2] - $CellContext`u - $CellContext`v, 
                   Rational[
                    1, 2] + $CellContext`u - $CellContext`v, -1 + \
$CellContext`v]])^Rational[1, 2] 
               Sign[16 - $CellContext`u^2 - $CellContext`v^2]^
                Rational[1, 2]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {190., 197.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        245., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151357$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151357$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2^Rational[-1, 2] (1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v^2 Cos[$CellContext`u], 
               2^Rational[-1, 2] (1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v^2 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{292., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{
      "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {139., 145.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151383$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151383$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (3 + 
                Cos[Rational[1, 2] $CellContext`u] Sin[$CellContext`v] - 
                Sin[Rational[1, 2] $CellContext`u] Sin[2 $CellContext`v]), 
               Sin[$CellContext`u] (3 + 
                Cos[Rational[1, 2] $CellContext`u] Sin[$CellContext`v] - 
                Sin[Rational[1, 2] $CellContext`u] Sin[2 $CellContext`v]), 
               Sin[Rational[1, 2] $CellContext`u] Sin[$CellContext`v] + 
               Cos[Rational[1, 2] $CellContext`u] 
                Sin[2 $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {183., 190.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        274., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151409$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151409$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2 (Cos[$CellContext`u] + $CellContext`u Sin[$CellContext`u]) 
               Sin[$CellContext`v]/(
               1 + $CellContext`u^2 Sin[$CellContext`v]^2), 
               2 (-$CellContext`u Cos[$CellContext`u] + Sin[$CellContext`u]) 
               Sin[$CellContext`v]/(
               1 + $CellContext`u^2 Sin[$CellContext`v]^2), Log[
                 Tan[Rational[1, 2] $CellContext`v]] + 
               2 Cos[$CellContext`v]/(
                1 + $CellContext`u^2 
                 Sin[$CellContext`v]^2)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{321., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {104., 109.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151435$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151435$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2^Rational[1, 2] 
               Re[Cos[Rational[1, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)] 
                 Cos[Rational[2, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)]^Rational[1, 2]], -2^
                Rational[1, 2] 
               Re[Cos[Rational[2, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)]^Rational[1, 2] 
                 Sin[Rational[1, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)]], 2^Rational[1, 2] Im[
                 EllipticF[
                 Rational[1, 3] ($CellContext`u + 
                   Complex[0, 1] $CellContext`v), 2]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {148., 155.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        48., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151461$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151461$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
$CellContext`u^4 + $CellContext`u^2 $CellContext`v - $CellContext`v^2} + \
$CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {170., 176.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151487$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151487$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(
                1 + $CellContext`u Cos[Rational[1, 2] $CellContext`v]) 
               Cos[$CellContext`v], (
                1 + $CellContext`u Cos[Rational[1, 2] $CellContext`v]) 
               Sin[$CellContext`v], $CellContext`u 
               Sin[Rational[1, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {214., 221.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        51., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151513$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151513$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
$CellContext`u^3 - 3 $CellContext`u $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        202., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151539$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151539$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Rational[-1, 2] $CellContext`u^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        204., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151565$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151565$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{251., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        353., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151591$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151591$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u^Rational[1, 2] 
               Cos[$CellContext`v], $CellContext`u^Rational[1, 2] 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{400., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        55., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151617$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151617$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, (
                2 $CellContext`u^2 - $CellContext`v) (-$CellContext`u^2 + \
$CellContext`v)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {115., 121.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151643$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151643$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u Sin[$CellContext`v], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {159., 166.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        142., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151669$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151669$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`v] Sech[$CellContext`u], Sech[$CellContext`u] 
               Sin[$CellContext`v], $CellContext`u - 
               Tanh[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {126., 133.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151695$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151695$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(2 Cos[$CellContext`u] - Cos[
                2 $CellContext`u]) 
               Sin[$CellContext`v], (2 Sin[$CellContext`u] - Sin[
                2 $CellContext`u]) Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {171., 178.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        54., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151721$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151721$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
-($CellContext`u^2 + $CellContext`v^2)^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        127., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151747$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151747$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2^Rational[-1, 2] 
               Cos[2^Rational[1, 2] $CellContext`v] (
                 Rational[-1, 2] Cos[2^Rational[1, 2] $CellContext`v]^2 + 
                 Cosh[$CellContext`u]^2)^(-1) (
                Cos[$CellContext`u] Cosh[$CellContext`u] - 
                Sin[$CellContext`u] Sinh[$CellContext`u]), -2^Rational[-1, 2] 
               Cos[2^Rational[1, 2] $CellContext`v] (
                 Rational[-1, 2] Cos[2^Rational[1, 2] $CellContext`v]^2 + 
                 Cosh[$CellContext`u]^2)^(-1) (
                Cosh[$CellContext`u] Sin[$CellContext`u] + 
                Cos[$CellContext`u] Sinh[$CellContext`u]), $CellContext`v + 
               2^Rational[-1, 2] 
                Cos[2^Rational[1, 2] $CellContext`v] (
                  Rational[-1, 2] Cos[2^Rational[1, 2] $CellContext`v]^2 + 
                  Cosh[$CellContext`u]^2)^(-1) 
                Sin[2^Rational[1, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151773$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151773$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`u] Sin[$CellContext`v]^2, 
               Cos[$CellContext`v] Sin[$CellContext`u] Sin[$CellContext`v], 
               Cos[$CellContext`u] Cos[$CellContext`v] 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151799$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151799$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`v] 
               Sin[$CellContext`u] (Cos[$CellContext`u]^6 + 
                 Sin[$CellContext`u]^6 (Cos[$CellContext`v]^6 + 
                   Sin[$CellContext`v]^6))^Rational[-1, 6], 
               Sin[$CellContext`u] 
               Sin[$CellContext`v] (Cos[$CellContext`u]^6 + 
                 Sin[$CellContext`u]^6 (Cos[$CellContext`v]^6 + 
                   Sin[$CellContext`v]^6))^Rational[-1, 6], 
               Cos[$CellContext`u] (Cos[$CellContext`u]^6 + 
                 Sin[$CellContext`u]^6 (Cos[$CellContext`v]^6 + 
                   Sin[$CellContext`v]^6))^
                Rational[-1, 6]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{
      "\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        279., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151825$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151825$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Log[
               Cos[$CellContext`u] Sec[$CellContext`v]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{326., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {163., 170.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151851$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151851$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               
               Log[(1 + $CellContext`u^2 - 2 $CellContext`u 
                  Cos[$CellContext`v])^(-1) (1 + $CellContext`u^2 + 
                 2 $CellContext`u Cos[$CellContext`v])], 
               
               Log[(1 + $CellContext`u^2 - 2 $CellContext`u 
                 Sin[$CellContext`v])/(1 + $CellContext`u^2 + 
                2 $CellContext`u Sin[$CellContext`v])], 2 
               ArcTan[2 $CellContext`u^2 (-1 + $CellContext`u^4)^(-1) 
                 Sin[2 $CellContext`v]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {208., 215.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        224., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151877$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151877$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(-1 + E^$CellContext`u) 
               Cos[$CellContext`u] 
               Cos[Rational[1, 2] $CellContext`v]^2, (1 - E^$CellContext`u) 
               Cos[Rational[1, 2] $CellContext`v]^2 Sin[$CellContext`u], 1 - 
               E^$CellContext`u - Sin[$CellContext`v] + 
               E^$CellContext`u Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{271., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        68., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151903$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151903$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Rational[1, 3] $CellContext`u^3 + 
               Rational[-1, 2] $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {187., 193.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151929$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151929$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2 2^Rational[1, 2] 
               Cos[2^Rational[-1, 2] $CellContext`u - ArcTan[
                 2^Rational[1, 2] Tan[$CellContext`u]]] (1 + 
                 Sin[$CellContext`u]^2)^Rational[1, 2] Sin[$CellContext`v]/(2 - 
               Cos[$CellContext`u]^2 Sin[$CellContext`v]^2), (-2) 
               2^Rational[1, 2] (1 + Sin[$CellContext`u]^2)^Rational[1, 2] 
               Sin[$CellContext`v] (2 - Cos[$CellContext`u]^2 
                 Sin[$CellContext`v]^2)^(-1) 
               Sin[2^Rational[-1, 2] $CellContext`u - ArcTan[
                 2^Rational[1, 2] Tan[$CellContext`u]]], Log[
                 Tan[Rational[1, 2] $CellContext`v]] + 
               4 Cos[$CellContext`v]/(2 - Cos[$CellContext`u]^2 
                Sin[$CellContext`v]^2)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {231., 238.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151955$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151955$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Sin[$CellContext`u], 
               Sin[$CellContext`v], 
               Sin[$CellContext`u + $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        73., {213., 219.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$151981$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$151981$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Abs[64 - $CellContext`u^2 - (-2 + $CellContext`v)^2]^
                Rational[1, 2] Log[
                 
                 Abs[(Rational[-3, 
                    2] + (-3 + $CellContext`u)^2 + (-7 + $CellContext`v)^2) (
                   Rational[-3, 2] + (
                    3 + $CellContext`u)^2 + (-7 + $CellContext`v)^2) (-1 + 
                   Rational[1, 4] $CellContext`u^2 + 
                   Rational[
                    1, 12] (-2 + $CellContext`v)^2) (-64 + $CellContext`u^2 + \
(-2 + $CellContext`v)^2) (Rational[1575, 4] + 
                   Rational[-163, 4] $CellContext`u^2 + $CellContext`u^4 + 
                   25 $CellContext`v + 
                   Rational[-1, 4] $CellContext`u^2 $CellContext`v + 
                   Rational[-163, 4] $CellContext`v^2 + 
                   2 $CellContext`u^2 $CellContext`v^2 - $CellContext`v^3 + \
$CellContext`v^4)]] (-Sign[-64 + $CellContext`u^2 + (-2 + $CellContext`v)^2])^
                Rational[1, 2]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{249., {257., 264.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$152007$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$152007$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$152033$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$152033$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$152059$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$152059$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {195., 200.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$152085$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$152085$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`v 
               Cos[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {239., 246.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {360., {71., 78.}},
         Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
        True, $CellContext`a$152111$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$152111$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u $CellContext`v^2 + 
               3 $CellContext`v^4, (-2) $CellContext`u $CellContext`v - 
               3 $CellContext`v^3, $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {116., 123.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {149., 156.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$152137$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$152137$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + Cos[$CellContext`v]), (1 + 
                Cos[$CellContext`v]) Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {194., 201.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {160., 167.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$152163$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$152163$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Rational[1, 18] (
                6 $CellContext`u ($CellContext`u + (1 + $CellContext`u^2) 
                   Cos[$CellContext`v])/(
                 1 + $CellContext`u^2 + $CellContext`u^4 + 
                 2 ($CellContext`u + $CellContext`u^3) Cos[$CellContext`v] + 
                 2 $CellContext`u^2 Cos[2 $CellContext`v]) - 4 
                Log[1 + $CellContext`u^2 - 2 $CellContext`u 
                  Cos[$CellContext`v]] + 
                2 Log[1 + $CellContext`u^2 + $CellContext`u^4 + 
                   2 ($CellContext`u + $CellContext`u^3) Cos[$CellContext`v] + 
                   2 $CellContext`u^2 Cos[2 $CellContext`v]]), 
               Rational[
                1, 9] ((-2) 3^Rational[1, 2] 
                 ArcTanh[
                  3^Rational[1, 2] $CellContext`u (
                    1 + $CellContext`u^2 + $CellContext`u 
                    Cos[$CellContext`v])^(-1) Sin[$CellContext`v]] - 
                3 $CellContext`u (1 + $CellContext`u^4 + 
                 2 ($CellContext`u + $CellContext`u^3) Cos[$CellContext`v]) (
                  1 + $CellContext`u^6 - 2 $CellContext`u^3 
                  Cos[3 $CellContext`v])^(-1) Sin[$CellContext`v]), (
                3 + (3 - 3 $CellContext`u^6)/(-2 + 
                 2 $CellContext`u^3 
                  Cos[3 $CellContext`v]))^(-1)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {205., 212.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {109., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$152189$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$152189$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`v 
               Cos[$CellContext`u], $CellContext`v 
               Sin[$CellContext`u], (1 - Cos[$CellContext`u]^2)^
               Rational[1, 2]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {153., 160.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {195., 202.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$152215$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$152215$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u $CellContext`v, \
$CellContext`u, $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        360., {196., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$152241$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$152241$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{407., {240., 247.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.7717233365023413`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"b80cecab-8351-409d-a03d-2beb35cf6b8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s", "=", 
         RowBox[{"SurfaceData", "[", 
          RowBox[{"#", ",", "\"\<ParametricEquations\>\""}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"p", "=", 
              RowBox[{
               RowBox[{"Apply", "[", "\[IndentingNewLine]", 
                RowBox[{"s", ",", "\[IndentingNewLine]", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"1", ",", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"s", ",", "1"}], "]"}], "]"}], "\[NotEqual]", 
                    "0"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"s", ",", "1"}], "]"}], "]"}], ",", "1"}], 
                    "]"}]}], "]"}]}], "]"}], "[", 
               RowBox[{"u", ",", "v"}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"q", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", "u", "]"}], " ", 
                 RowBox[{"Sin", "[", "v", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Sin", "[", "u", "]"}], " ", 
                 RowBox[{"Sin", "[", "v", "]"}]}], ",", 
                RowBox[{"Cos", "[", "v", "]"}]}], "}"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "a"}], ")"}], "p"}], "+", " ", 
                RowBox[{"a", " ", "q"}]}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"u", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"v", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], "&"}], ",", 
    RowBox[{"Out", "[", "44", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7717233633933687`*^9, 3.7717233801713533`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"f66de0f0-5caf-473c-9fdc-ee5bac075d6a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"astroidal ellipsoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"AstroidalEllipsoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"AstroidalEllipsoid\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0.226, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {752., 758.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156564$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156564$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u]^3 Cos[$CellContext`v]^3, 
               Cos[$CellContext`v]^3 Sin[$CellContext`u]^3, 
               Sin[$CellContext`v]^3} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {796., 803.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Bohemian dome\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BohemianDome\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BohemianDome\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {764., 770.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156590$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156590$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], Cos[$CellContext`v] + Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {808., 815.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Bour minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BourMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BourMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {804., 810.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156616$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156616$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u Cos[$CellContext`v] + 
               Rational[-1, 2] $CellContext`u^2 
                Cos[2 $CellContext`v], -$CellContext`u (
                1 + $CellContext`u Cos[$CellContext`v]) Sin[$CellContext`v], 
               Rational[4, 3] $CellContext`u^Rational[3, 2] 
               Cos[Rational[3, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {848., 855.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Boy surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"BoySurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"BoySurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {694., 700.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156642$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156642$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(
                2^Rational[1, 2] Cos[2 $CellContext`u] Cos[$CellContext`v]^2 + 
                Cos[$CellContext`u] Sin[2 $CellContext`v])/(2 - 
               2^Rational[1, 2] Sin[3 $CellContext`u] 
               Sin[2 $CellContext`v]), (
                2^Rational[1, 2] Cos[$CellContext`v]^2 Sin[2 $CellContext`u] + 
                Cos[$CellContext`u] Sin[2 $CellContext`v])/(2 - 
               2^Rational[1, 2] Sin[3 $CellContext`u] Sin[2 $CellContext`v]), 
               3 Cos[$CellContext`v]^2/(2 - 2^Rational[1, 2] 
               Sin[3 $CellContext`u] 
               Sin[2 $CellContext`v])} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {738., 745.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Catalan surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CatalanSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CatalanSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {509., 515.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156668$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156668$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u - Cosh[$CellContext`v] 
               Sin[$CellContext`u], 1 - Cos[$CellContext`u] 
               Cosh[$CellContext`v], 4 Sin[Rational[1, 2] $CellContext`u] 
               Sinh[Rational[1, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {553., 560.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"catenoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Catenoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Catenoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {456., 463.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156694$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156694$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Cosh[$CellContext`v], Cosh[$CellContext`v] 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {501., 508.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"infinite cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Cone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Cone\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {590., 595.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156720$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156720$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {634., 641.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"finite cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ConeFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ConeFinite\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {621., 627.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156746$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156746$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 - $CellContext`u) 
               Cos[$CellContext`v], (1 - $CellContext`u) 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {665., 672.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"conical frustum\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ConicalFrustum\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ConicalFrustum\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1548., 1554.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156772$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156772$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`v], 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1592., 1599.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"corkscrew surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CorkscrewSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CorkscrewSurface\\\"]\"","\"surface\""},
      
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1911., 1917.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156798$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156798$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Cos[$CellContext`v], Cos[$CellContext`v] 
               Sin[$CellContext`u], $CellContext`u + 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1955., 1962.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"cornucopia surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CornucopiaSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CornucopiaSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {945., 952.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156824$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156824$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              E^$CellContext`v Cos[$CellContext`v] + 
               E^$CellContext`v Cos[$CellContext`u] Cos[$CellContext`v], 
               E^$CellContext`v Sin[$CellContext`v] + 
               E^$CellContext`v Cos[$CellContext`u] Sin[$CellContext`v], 
               E^$CellContext`v Sin[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {990., 997.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Costa minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CostaSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CostaSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156850$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156850$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Rational[1, 2] 
               Re[Pi $CellContext`u + 
                 Rational[1, 4] Pi^2/$CellContext`WeierstrassPHalfPeriod[
                   Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] - \
$CellContext`WeierstrassZetaHalfPeriod[$CellContext`u + 
                  Complex[0, 1] $CellContext`v, {
                   Rational[1, 2], 
                   Complex[0, 
                    Rational[1, 2]]}] + 
                 Rational[1, 2] Pi $CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}]^(-1) ($CellContext`WeierstrassZetaHalfPeriod[
                    Rational[-1, 2] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] - $CellContext`WeierstrassZetaHalfPeriod[
                   Complex[0, 
                    Rational[-1, 2]] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])], Rational[1, 2] (Im[
                  $CellContext`WeierstrassZetaHalfPeriod[$CellContext`u + 
                   Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}]] + 
                Rational[1, 2] Pi Im[$CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}]^(-1) ($CellContext`WeierstrassZetaHalfPeriod[
                    Rational[-1, 2] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] - $CellContext`WeierstrassZetaHalfPeriod[
                    Complex[0, 
                    Rational[-1, 2]] + $CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])] + 
                Re[Pi $CellContext`v + 
                  Rational[1, 4] Pi^2/$CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}]]), 
               Rational[1, 2] (Rational[1, 2] Pi)^Rational[1, 2] Log[
                 Abs[(-$CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] + \
$CellContext`WeierstrassPHalfPeriod[$CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])/($CellContext`WeierstrassPHalfPeriod[
                    Rational[1, 2], {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[
                    1, 2]]}] + \
$CellContext`WeierstrassPHalfPeriod[$CellContext`u + 
                    Complex[0, 1] $CellContext`v, {
                    Rational[1, 2], 
                    Complex[0, 
                    Rational[1, 2]]}])]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"cross\[Hyphen]cap\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CrossCap\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CrossCap\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1006., 1012.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156876$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156876$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Rational[1, 2] Sin[$CellContext`u] Sin[2 $CellContext`v], 
               Sin[2 $CellContext`u] Sin[$CellContext`v]^2, 
               Cos[2 $CellContext`u] 
               Sin[$CellContext`v]^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1050., 1057.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"crossed trough\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CrossedTrough\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CrossedTrough\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {15810., 15816.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156902$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156902$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
$CellContext`u^2 $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {15854., 15861.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"infinite cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Cylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Cylinder\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1548., 1554.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156928$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156928$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1592., 1599.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"finite cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CylinderFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"CylinderFinite\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1548., 1554.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156954$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156954$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1592., 1599.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{
      "\"finite horizontal cylindrical segment\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"CylindricalSegmentHorizontal\""}], 
         "]"}],"\"Entity[\\\"Surface\\\", \
\\\"CylindricalSegmentHorizontal\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {453., 458.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$156980$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$156980$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {$CellContext`v, 
               Cos[$CellContext`u], 
               Sin[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {497., 504.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"ding\[Hyphen]dong surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DingDongSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DingDongSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {866., 873.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157006$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157006$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v 
               Cos[$CellContext`u], (1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {911., 918.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Dini surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DiniSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DiniSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {3075., 3081.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157032$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157032$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], $CellContext`u + Cos[$CellContext`v] + Log[
                 Tan[Rational[1, 2] $CellContext`v]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {3119., 3126.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"double sphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"DoubleSphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"DoubleSphere\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157058$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157058$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"eight surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EightSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EightSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157084$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157084$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[2 $CellContext`v], Sin[$CellContext`u] 
               Sin[2 $CellContext`v], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"ellipsoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Ellipsoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Ellipsoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157110$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157110$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"infinite elliptic cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCone\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {590., 595.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157136$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157136$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {634., 641.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"finite elliptic cone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticConeFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticConeFinite\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {621., 627.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157162$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157162$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 - $CellContext`u) 
               Cos[$CellContext`v], (1 - $CellContext`u) 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {665., 672.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"infinite elliptic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCylinder\\\"]\"","\"surface\""},
      
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1548., 1554.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157188$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157188$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1592., 1599.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"finite elliptic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticCylinderFinite\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticCylinderFinite\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1548., 1554.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157214$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157214$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Cos[$CellContext`u], 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1592., 1599.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"elliptic helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticHelicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticHelicoid\\\"]\"","\"surface\""},
      
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {590., 595.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157240$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157240$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {634., 641.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{
      "\"one\[Hyphen]sheeted elliptic hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticHyperboloid1Sheeted\""}], 
         "]"}],"\"Entity[\\\"Surface\\\", \
\\\"EllipticHyperboloid1Sheeted\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {588., 593.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157266$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157266$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 + $CellContext`u^2)^Rational[1, 2] 
               Cos[$CellContext`v], (1 + $CellContext`u^2)^Rational[1, 2] 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {632., 639.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"elliptic paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticParaboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticParaboloid\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1526., 1531.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157292$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157292$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1570., 1577.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"elliptic torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EllipticTorus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EllipticTorus\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {589., 594.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157318$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157318$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + Cos[$CellContext`v]), (1 + 
                Cos[$CellContext`v]) Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {633., 640.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Enneper minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"EnneperMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"EnneperMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {712., 718.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157344$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157344$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u Cos[$CellContext`v] + 
               Rational[-1, 3] $CellContext`u^3 Cos[3 $CellContext`v], 
               Rational[-1, 3] $CellContext`u (
                3 Sin[$CellContext`v] + $CellContext`u^2 
                 Sin[3 $CellContext`v]), $CellContext`u^2 
               Cos[2 $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {756., 763.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"first funnel surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"FunnelSurface1\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"FunnelSurface1\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {597., 602.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157370$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157370$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u Sin[$CellContext`v], 
               Log[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {641., 648.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Gabriel's horn\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"GabrielsHorn\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"GabrielsHorn\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {519., 525.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157396$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157396$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`v, $CellContext`v^(-1) 
               Cos[$CellContext`u], $CellContext`v^(-1) 
               Sin[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {563., 570.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"handkerchief surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HandkerchiefSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HandkerchiefSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {14436., 14442.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157422$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157422$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Rational[
                 1, 3] $CellContext`u^3 + $CellContext`u $CellContext`v^2 + 
               2 ($CellContext`u^2 - $CellContext`v^2)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {14480., 14487.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Helicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Helicoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {590., 595.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157448$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157448$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {634., 641.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"hemisphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hemisphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hemisphere\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157474$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157474$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Henneberg minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HennebergMinimalSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HennebergMinimalSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {462., 467.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157500$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157500$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2 Cos[$CellContext`v] Sinh[$CellContext`u] + 
               Rational[-2, 3] Cos[3 $CellContext`v] Sinh[3 $CellContext`u], 
               2 Sin[$CellContext`v] Sinh[$CellContext`u] + 
               Rational[2, 3] Sin[3 $CellContext`v] Sinh[3 $CellContext`u], 2 
               Cos[2 $CellContext`v] 
               Cosh[2 $CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {506., 513.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"horn torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HornTorus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HornTorus\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {589., 594.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157526$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157526$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + Cos[$CellContext`v]), (1 + 
                Cos[$CellContext`v]) Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {633., 640.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"hyperbolic helicoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicHelicoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicHelicoid\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {780., 786.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157552$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157552$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + 
                 Cosh[$CellContext`u] Cosh[$CellContext`v])^(-1) 
               Sinh[$CellContext`v], (1 + 
                 Cosh[$CellContext`u] Cosh[$CellContext`v])^(-1) 
               Sin[$CellContext`u] Sinh[$CellContext`v], 
               Cosh[$CellContext`v] (1 + 
                 Cosh[$CellContext`u] Cosh[$CellContext`v])^(-1) 
               Sinh[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {824., 831.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"hyperbolic octahedron\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicOctahedron\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicOctahedron\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {925., 930.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157578$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157578$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u]^3 Cos[$CellContext`v]^3, 
               Cos[$CellContext`v]^3 Sin[$CellContext`u]^3, 
               Sin[$CellContext`v]^3} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {969., 976.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"hyperbolic paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"HyperbolicParaboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"HyperbolicParaboloid\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {4783., 4790.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157604$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157604$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
-$CellContext`u^2 + $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {4828., 4835.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"one\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hyperboloid1Sheeted\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hyperboloid1Sheeted\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {588., 593.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157630$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157630$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(1 + $CellContext`u^2)^Rational[1, 2] 
               Cos[$CellContext`v], (1 + $CellContext`u^2)^Rational[1, 2] 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {632., 639.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"two\[Hyphen]sheeted hyperboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Hyperboloid2Sheeted\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Hyperboloid2Sheeted\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1306., 1311.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157656$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157656$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`v] Sinh[$CellContext`u], Sin[$CellContext`v] 
               Sinh[$CellContext`u], $CellContext`u ($CellContext`u^2)^
                Rational[-1, 2] Cosh[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1350., 1357.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{
      "\"jack\[Hyphen]o'\[Hyphen]lantern face surface\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"JackOLanternFaceSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"JackOLanternFaceSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {578., 585.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157682$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157682$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, -(
                 Rational[1, 8] - Max[
                  Min[
                  Rational[-5, 2] - $CellContext`u - $CellContext`v, 
                   Rational[1, 2] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  Min[
                  Rational[-7, 4] - $CellContext`u - $CellContext`v, 
                   Rational[-1, 4] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  
                  Min[-1 - $CellContext`u - $CellContext`v, -1 + \
$CellContext`u - $CellContext`v, 2 + $CellContext`v], 
                  Min[
                  Rational[-1, 4] - $CellContext`u - $CellContext`v, 
                   Rational[-7, 4] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  Min[
                  Rational[1, 2] - $CellContext`u - $CellContext`v, 
                   Rational[-5, 2] + $CellContext`u - $CellContext`v, 
                   2 + $CellContext`v], 
                  Min[
                  Rational[1, 2] - $CellContext`u - $CellContext`v, 
                   Rational[
                    7, 2] + $CellContext`u - $CellContext`v, -1 + \
$CellContext`v], 
                  Min[
                  Rational[2, 3] - $CellContext`u - $CellContext`v, 
                   Rational[2, 3] + $CellContext`u - $CellContext`v, 
                   Rational[1, 3] + $CellContext`v], 
                  Min[
                  Rational[7, 2] - $CellContext`u - $CellContext`v, 
                   Rational[
                    1, 2] + $CellContext`u - $CellContext`v, -1 + \
$CellContext`v]])^Rational[1, 2] 
               Sign[16 - $CellContext`u^2 - $CellContext`v^2]^
                Rational[1, 2]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {623., 630.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"kiss surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KissSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KissSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1300., 1306.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157708$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157708$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2^Rational[-1, 2] (1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v^2 Cos[$CellContext`u], 
               2^Rational[-1, 2] (1 - $CellContext`v)^
                Rational[1, 2] $CellContext`v^2 
               Sin[$CellContext`u], $CellContext`v} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1344., 1351.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{
      "\"figure\[Hyphen]eight parametrization of the Klein bottle\"",
       RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KleinBottle\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KleinBottle\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {535., 542.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157734$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157734$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (3 + 
                Cos[Rational[1, 2] $CellContext`u] Sin[$CellContext`v] - 
                Sin[Rational[1, 2] $CellContext`u] Sin[2 $CellContext`v]), 
               Sin[$CellContext`u] (3 + 
                Cos[Rational[1, 2] $CellContext`u] Sin[$CellContext`v] - 
                Sin[Rational[1, 2] $CellContext`u] Sin[2 $CellContext`v]), 
               Sin[Rational[1, 2] $CellContext`u] Sin[$CellContext`v] + 
               Cos[Rational[1, 2] $CellContext`u] 
                Sin[2 $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {580., 587.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Kuen surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"KuenSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"KuenSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1092., 1098.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157760$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157760$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2 (Cos[$CellContext`u] + $CellContext`u Sin[$CellContext`u]) 
               Sin[$CellContext`v]/(
               1 + $CellContext`u^2 Sin[$CellContext`v]^2), 
               2 (-$CellContext`u Cos[$CellContext`u] + Sin[$CellContext`u]) 
               Sin[$CellContext`v]/(
               1 + $CellContext`u^2 Sin[$CellContext`v]^2), Log[
                 Tan[Rational[1, 2] $CellContext`v]] + 
               2 Cos[$CellContext`v]/(
                1 + $CellContext`u^2 
                 Sin[$CellContext`v]^2)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1136., 1143.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Lichtenfels surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"LichtenfelsSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"LichtenfelsSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {399., 405.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157786$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157786$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2^Rational[1, 2] 
               Re[Cos[Rational[1, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)] 
                 Cos[Rational[2, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)]^Rational[1, 2]], -2^
                Rational[1, 2] 
               Re[Cos[Rational[2, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)]^Rational[1, 2] 
                 Sin[Rational[1, 3] ($CellContext`u + 
                    Complex[0, 1] $CellContext`v)]], 2^Rational[1, 2] Im[
                 EllipticF[
                 Rational[1, 3] ($CellContext`u + 
                   Complex[0, 1] $CellContext`v), 2]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {443., 450.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Menn surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MennSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MennSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {119., 125.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157812$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157812$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
$CellContext`u^4 + $CellContext`u^2 $CellContext`v - $CellContext`v^2} + \
$CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {163., 170.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"M\[ODoubleDot]bius strip\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MoebiusStrip\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MoebiusStrip\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {658., 663.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157838$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157838$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(
                1 + $CellContext`u Cos[Rational[1, 2] $CellContext`v]) 
               Cos[$CellContext`v], (
                1 + $CellContext`u Cos[Rational[1, 2] $CellContext`v]) 
               Sin[$CellContext`v], $CellContext`u 
               Sin[Rational[1, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {702., 709.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"monkey saddle\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"MonkeySaddle\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"MonkeySaddle\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {18638., 18644.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157864$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157864$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
$CellContext`u^3 - 3 $CellContext`u $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {18682., 18689.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"parabolic cylinder\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ParabolicCylinder\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ParabolicCylinder\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1545., 1550.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157890$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157890$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Rational[-1, 2] $CellContext`u^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1589., 1596.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"infinite paraboloid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Paraboloid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Paraboloid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1526., 1531.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157916$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157916$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`u^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1570., 1577.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"paraboloidal segment\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ParaboloidalSegment\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ParaboloidalSegment\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {844., 851.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157942$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157942$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u^Rational[1, 2] 
               Cos[$CellContext`v], $CellContext`u^Rational[1, 2] 
               Sin[$CellContext`v], $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {889., 896.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Peano surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PeanoSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PeanoSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {141., 146.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157968$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157968$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, (
                2 $CellContext`u^2 - $CellContext`v) (-$CellContext`u^2 + \
$CellContext`v)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {185., 192.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Pl\[UDoubleDot]cker conoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PlueckerConoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PlueckerConoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {468., 473.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$157994$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$157994$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u Sin[$CellContext`v], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {512., 519.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"pseudosphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Pseudosphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Pseudosphere\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {2271., 2277.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158020$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158020$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`v] Sech[$CellContext`u], Sech[$CellContext`u] 
               Sin[$CellContext`v], $CellContext`u - 
               Tanh[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {2315., 2322.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"pumpkin surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"PumpkinSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"PumpkinSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {517., 523.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158046$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158046$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(2 Cos[$CellContext`u] - Cos[
                2 $CellContext`u]) 
               Sin[$CellContext`v], (2 Sin[$CellContext`u] - Sin[
                2 $CellContext`u]) Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {561., 568.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"quartoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Quartoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Quartoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {68., 74.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158072$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158072$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, \
-($CellContext`u^2 + $CellContext`v^2)^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {112., 119.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Rembs surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RembsSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RembsSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {2685., 2692.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158098$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158098$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2^Rational[-1, 2] 
               Cos[2^Rational[1, 2] $CellContext`v] (
                 Rational[-1, 2] Cos[2^Rational[1, 2] $CellContext`v]^2 + 
                 Cosh[$CellContext`u]^2)^(-1) (
                Cos[$CellContext`u] Cosh[$CellContext`u] - 
                Sin[$CellContext`u] Sinh[$CellContext`u]), -2^Rational[-1, 2] 
               Cos[2^Rational[1, 2] $CellContext`v] (
                 Rational[-1, 2] Cos[2^Rational[1, 2] $CellContext`v]^2 + 
                 Cosh[$CellContext`u]^2)^(-1) (
                Cosh[$CellContext`u] Sin[$CellContext`u] + 
                Cos[$CellContext`u] Sinh[$CellContext`u]), $CellContext`v + 
               2^Rational[-1, 2] 
                Cos[2^Rational[1, 2] $CellContext`v] (
                  Rational[-1, 2] Cos[2^Rational[1, 2] $CellContext`v]^2 + 
                  Cosh[$CellContext`u]^2)^(-1) 
                Sin[2^Rational[1, 2] $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {2730., 2737.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Roman surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RomanSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RomanSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158124$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158124$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`u] Sin[$CellContext`v]^2, 
               Cos[$CellContext`v] Sin[$CellContext`u] Sin[$CellContext`v], 
               Cos[$CellContext`u] Cos[$CellContext`v] 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"rounded cube surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"RoundedCubeSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"RoundedCubeSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158150$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158150$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`v] 
               Sin[$CellContext`u] (Cos[$CellContext`u]^6 + 
                 Sin[$CellContext`u]^6 (Cos[$CellContext`v]^6 + 
                   Sin[$CellContext`v]^6))^Rational[-1, 6], 
               Sin[$CellContext`u] 
               Sin[$CellContext`v] (Cos[$CellContext`u]^6 + 
                 Sin[$CellContext`u]^6 (Cos[$CellContext`v]^6 + 
                   Sin[$CellContext`v]^6))^Rational[-1, 6], 
               Cos[$CellContext`u] (Cos[$CellContext`u]^6 + 
                 Sin[$CellContext`u]^6 (Cos[$CellContext`v]^6 + 
                   Sin[$CellContext`v]^6))^
                Rational[-1, 6]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{
      "\"Scherk's first minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface1\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface1\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1074., 1081.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158176$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158176$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Log[
               Cos[$CellContext`u] Sec[$CellContext`v]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1119., 1126.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Scherk's second minimal surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ScherkMinimalSurface2\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ScherkMinimalSurface2\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {631., 638.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158202$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158202$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               
               Log[(1 + $CellContext`u^2 - 2 $CellContext`u 
                  Cos[$CellContext`v])^(-1) (1 + $CellContext`u^2 + 
                 2 $CellContext`u Cos[$CellContext`v])], 
               Log[(1 + $CellContext`u^2 - 2 $CellContext`u 
                 Sin[$CellContext`v])/(1 + $CellContext`u^2 + 
                2 $CellContext`u Sin[$CellContext`v])], 2 
               ArcTan[2 $CellContext`u^2 (-1 + $CellContext`u^4)^(-1) 
                 Sin[2 $CellContext`v]]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {676., 683.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"seashell surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SeashellSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SeashellSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {1442., 1449.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158228$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158228$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {(-1 + E^$CellContext`u) 
               Cos[$CellContext`u] 
               Cos[Rational[1, 2] $CellContext`v]^2, (1 - E^$CellContext`u) 
               Cos[Rational[1, 2] $CellContext`v]^2 Sin[$CellContext`u], 1 - 
               E^$CellContext`u - Sin[$CellContext`v] + 
               E^$CellContext`u Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {1487., 1494.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"shoe surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"ShoeSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"ShoeSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {6063., 6068.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158254$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158254$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Rational[1, 3] $CellContext`u^3 + 
               Rational[-1, 2] $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {6107., 6114.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Sievert surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SievertSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SievertSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {740., 747.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158280$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158280$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              2 2^Rational[1, 2] 
               Cos[2^Rational[-1, 2] $CellContext`u - ArcTan[
                 2^Rational[1, 2] Tan[$CellContext`u]]] (1 + 
                 Sin[$CellContext`u]^2)^Rational[1, 2] Sin[$CellContext`v]/(2 - 
               Cos[$CellContext`u]^2 Sin[$CellContext`v]^2), (-2) 
               2^Rational[1, 2] (1 + Sin[$CellContext`u]^2)^Rational[1, 2] 
               Sin[$CellContext`v] (2 - Cos[$CellContext`u]^2 
                 Sin[$CellContext`v]^2)^(-1) 
               Sin[2^Rational[-1, 2] $CellContext`u - ArcTan[
                 2^Rational[1, 2] Tan[$CellContext`u]]], Log[
                 Tan[Rational[1, 2] $CellContext`v]] + 
               4 Cos[$CellContext`v]/(2 - Cos[$CellContext`u]^2 
                Sin[$CellContext`v]^2)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {785., 792.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"sine surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SineSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SineSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158306$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158306$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
               Sin[$CellContext`u], 
               Sin[$CellContext`v], 
               Sin[$CellContext`u + $CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"smiley face surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SmileyFaceSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SmileyFaceSurface\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {6292., 6299.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158332$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158332$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u, $CellContext`v, 
               Abs[64 - $CellContext`u^2 - (-2 + $CellContext`v)^2]^
                Rational[1, 2] Log[
                 
                 Abs[(Rational[-3, 
                    2] + (-3 + $CellContext`u)^2 + (-7 + $CellContext`v)^2) (
                   Rational[-3, 2] + (
                    3 + $CellContext`u)^2 + (-7 + $CellContext`v)^2) (-1 + 
                   Rational[1, 4] $CellContext`u^2 + 
                   Rational[
                    1, 12] (-2 + $CellContext`v)^2) (-64 + $CellContext`u^2 + \
(-2 + $CellContext`v)^2) (Rational[1575, 4] + 
                   Rational[-163, 4] $CellContext`u^2 + $CellContext`u^4 + 
                   25 $CellContext`v + 
                   Rational[-1, 4] $CellContext`u^2 $CellContext`v + 
                   Rational[-163, 4] $CellContext`v^2 + 
                   2 $CellContext`u^2 $CellContext`v^2 - $CellContext`v^3 + \
$CellContext`v^4)]] (-Sign[-64 + $CellContext`u^2 + (-2 + $CellContext`v)^2])^
                Rational[1, 2]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {6337., 6344.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"sphere\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Sphere\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Sphere\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158358$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158358$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"spherical cap\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SphericalCap\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SphericalCap\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158384$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158384$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"spheroid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Spheroid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Spheroid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158410$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158410$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Steinbach screw\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SteinbachScrew\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SteinbachScrew\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {752., 758.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158436$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158436$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u 
               Cos[$CellContext`v], $CellContext`u 
               Sin[$CellContext`v], $CellContext`v 
               Cos[$CellContext`u]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {796., 803.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"swallowtail surface\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"SwallowtailSurface\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"SwallowtailSurface\\\"]\"",
       "\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {285., 291.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158462$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158462$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u $CellContext`v^2 + 
               3 $CellContext`v^4, (-2) $CellContext`u $CellContext`v - 
               3 $CellContext`v^3, $CellContext`u} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {329., 336.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"torus\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Torus\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Torus\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {589., 594.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158488$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158488$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] (1 + Cos[$CellContext`v]), (1 + 
                Cos[$CellContext`v]) Sin[$CellContext`u], 
               Sin[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {633., 640.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"trinoid\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Trinoid\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Trinoid\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {632., 639.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158514$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158514$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Rational[1, 18] (
                6 $CellContext`u ($CellContext`u + (1 + $CellContext`u^2) 
                   Cos[$CellContext`v])/(
                 1 + $CellContext`u^2 + $CellContext`u^4 + 
                 2 ($CellContext`u + $CellContext`u^3) Cos[$CellContext`v] + 
                 2 $CellContext`u^2 Cos[2 $CellContext`v]) - 4 
                Log[1 + $CellContext`u^2 - 2 $CellContext`u 
                  Cos[$CellContext`v]] + 
                2 Log[1 + $CellContext`u^2 + $CellContext`u^4 + 
                   2 ($CellContext`u + $CellContext`u^3) Cos[$CellContext`v] + 
                   2 $CellContext`u^2 Cos[2 $CellContext`v]]), 
               Rational[
                1, 9] ((-2) 3^Rational[1, 2] 
                 ArcTanh[
                  3^Rational[1, 2] $CellContext`u (
                    1 + $CellContext`u^2 + $CellContext`u 
                    Cos[$CellContext`v])^(-1) Sin[$CellContext`v]] - 
                3 $CellContext`u (1 + $CellContext`u^4 + 
                 2 ($CellContext`u + $CellContext`u^3) Cos[$CellContext`v]) (
                  1 + $CellContext`u^6 - 2 $CellContext`u^3 
                  Cos[3 $CellContext`v])^(-1) Sin[$CellContext`v]), (
                3 + (3 - 3 $CellContext`u^6)/(-2 + 
                 2 $CellContext`u^3 
                  Cos[3 $CellContext`v]))^(-1)} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {677., 684.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Wallis conical edge\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"WallisConicalEdge\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"WallisConicalEdge\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {439., 445.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158540$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158540$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`v 
               Cos[$CellContext`u], $CellContext`v 
               Sin[$CellContext`u], (1 - Cos[$CellContext`u]^2)^
               Rational[1, 2]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {483., 490.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"Whitney umbrella\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"WhitneyUmbrella\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"WhitneyUmbrella\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {774., 780.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158566$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158566$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(
              1 - $CellContext`a$$) {$CellContext`u $CellContext`v, \
$CellContext`u, $CellContext`v^2} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {818., 825.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]},
    {
     TemplateBox[{"\"zone\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Surface\"", ",", "\"Zone\""}], "]"}],
       "\"Entity[\\\"Surface\\\", \\\"Zone\\\"]\"","\"surface\""},
      "Entity"], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`a$$], 0, 1}}, Typeset`size$$ = {
        1396., {754., 759.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`a$158592$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
          "ControllerVariables" :> {
            Hold[$CellContext`a$$, $CellContext`a$158592$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
          ParametricPlot3D[(1 - $CellContext`a$$) {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]} + $CellContext`a$$ {
              Cos[$CellContext`u] Sin[$CellContext`v], Sin[$CellContext`u] 
               Sin[$CellContext`v], 
               Cos[$CellContext`v]}, {$CellContext`u, 0, 2 
             Pi}, {$CellContext`v, 0, 2 Pi}, ImageSize -> Full], 
          "Specifications" :> {{$CellContext`a$$, 0, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{1443., {798., 805.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.771723380977642*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"f65e3b4b-ace0-40f8-bc76-9cbb70002273"]
}, Open  ]]
},
WindowSize->{1920, 1027},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 272, 5, 31, "Input",ExpressionUUID->"6ef904f7-dddc-42c9-bb94-1250d76a5a4d"],
Cell[855, 29, 200, 3, 35, "Output",ExpressionUUID->"36da33d6-77ce-498e-9e0e-6244e961050b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1092, 37, 271, 5, 31, "Input",ExpressionUUID->"f7c477e4-2032-4d36-83df-d706d2381853"],
Cell[1366, 44, 736, 19, 38, "Output",ExpressionUUID->"9d5e63c5-a73b-43ac-8d11-18ef5f7669f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2139, 68, 802, 20, 34, "Input",ExpressionUUID->"d4878a9d-19c6-42f5-a5ef-4110eb32b709"],
Cell[2944, 90, 639, 17, 38, "Output",ExpressionUUID->"57ea61b9-2bfe-4bb2-a071-9686bf33b101"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3620, 112, 723, 18, 34, "Input",ExpressionUUID->"015320e1-3a65-4f4e-a0cd-95470b396788"],
Cell[4346, 132, 410, 11, 35, "Output",ExpressionUUID->"c30ce782-44e7-4c19-a4c7-5eddb4aad04c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4793, 148, 790, 23, 31, "Input",ExpressionUUID->"dfcaa9fe-145b-42ea-ba96-6fdae19af5cb"],
Cell[5586, 173, 667, 20, 35, "Output",ExpressionUUID->"cdd4fb34-c128-484f-a40d-987923d3e117"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6290, 198, 1228, 32, 124, "Input",ExpressionUUID->"ef73c974-922c-4a7b-9a8e-204996d3af62"],
Cell[7521, 232, 1992, 40, 1226, "Output",ExpressionUUID->"2acc06f9-e3b3-45b5-8fdf-b2b3986c405a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9550, 277, 203, 3, 31, "Input",ExpressionUUID->"3315b124-7d51-4f56-8d9e-289bcfaec0ac"],
Cell[9756, 282, 393, 9, 23, "Message",ExpressionUUID->"84ca872c-50e5-4fcf-a022-0a70b1f5186d"],
Cell[10152, 293, 332, 8, 23, "Message",ExpressionUUID->"a143ff93-ac1a-4654-983c-7744bd690a42"],
Cell[10487, 303, 391, 9, 23, "Message",ExpressionUUID->"0cbd71f2-4614-43a0-80f3-38ef60346537"],
Cell[10881, 314, 39836, 740, 556, "Output",ExpressionUUID->"21b16bb4-c27a-4331-aeed-97c95c902fb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50754, 1059, 273, 5, 31, "Input",ExpressionUUID->"dfed8ea7-5151-4657-8d38-61259894c299"],
Cell[51030, 1066, 390, 9, 23, "Message",ExpressionUUID->"a66a2e98-80f2-45f7-acca-642bd1e9a72c"],
Cell[51423, 1077, 204, 3, 35, "Output",ExpressionUUID->"4e5304e7-879d-486a-9441-20610b7cc47f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51664, 1085, 285, 5, 31, "Input",ExpressionUUID->"65953c82-2c25-4ab0-8e84-9a397a7445de"],
Cell[51952, 1092, 391, 9, 23, "Message",ExpressionUUID->"b2aa8411-6366-42e9-b350-5d02b5e0b9e8"],
Cell[52346, 1103, 334, 8, 23, "Message",ExpressionUUID->"b066cb4f-1cc1-474a-a9d6-12f781313bc1"],
Cell[52683, 1113, 944, 26, 40, "Output",ExpressionUUID->"561014d8-ca8c-4fa1-a8c6-3c4a256d0761"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53664, 1144, 814, 23, 78, "Input",ExpressionUUID->"697912eb-92bf-4694-abb8-eab6d25ea77b"],
Cell[54481, 1169, 770, 24, 35, "Output",ExpressionUUID->"2b86d142-c59e-4ff3-a805-1fb65e38ec9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55288, 1198, 1049, 27, 39, "Input",ExpressionUUID->"560cf91a-98d1-429a-b5ba-55ac981bdb58"],
Cell[56340, 1227, 739, 20, 40, "Output",ExpressionUUID->"3e978886-62e8-411b-85da-a5e84c063794"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57116, 1252, 831, 22, 39, "Input",ExpressionUUID->"a81b5450-75fb-4f6e-ab29-7cf89677df18"],
Cell[57950, 1276, 583, 17, 40, "Output",ExpressionUUID->"a5387e4e-615f-46cf-9bdd-d8ac36432c86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58570, 1298, 1049, 27, 39, "Input",ExpressionUUID->"996c0821-f24f-4a44-a2e6-22863ee71e27"],
Cell[59622, 1327, 737, 20, 40, "Output",ExpressionUUID->"8c2871be-e0f8-464a-8860-c35236b826e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60396, 1352, 1316, 38, 93, "Input",ExpressionUUID->"f2bb5b05-a2df-4fb0-92ad-156b139c0324"],
Cell[61715, 1392, 1115, 34, 40, "Output",ExpressionUUID->"7a91654a-8c0e-4df1-bdf3-5fb0f7ad53be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62867, 1431, 1740, 47, 159, "Input",ExpressionUUID->"9d2753c6-6372-439e-a1b8-48ce75a16a53"],
Cell[64610, 1480, 2130, 41, 1660, "Output",ExpressionUUID->"4c9992f7-a151-4ab6-b9be-483334400fef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66777, 1526, 279, 5, 31, "Input",ExpressionUUID->"33c699e8-9d68-446e-a663-c5944d81f7c8"],
Cell[67059, 1533, 11946, 212, 182, "Output",ExpressionUUID->"959ec176-981f-439f-bb2a-e683e34fa21a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79042, 1750, 518, 11, 101, "Input",ExpressionUUID->"a964d754-ddd3-4596-8497-2d5db267380b"],
Cell[79563, 1763, 156, 2, 35, "Output",ExpressionUUID->"d20f4e91-a13c-4250-aa16-06f603ed3630"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79756, 1770, 551, 12, 101, "Input",ExpressionUUID->"f8abde05-0098-45d5-a5b8-3e74831cb52d"],
Cell[80310, 1784, 368239, 6932, 3992, "Output",ExpressionUUID->"3c6bf437-53d4-4632-965c-afac73fd3ab1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448586, 8721, 1036, 27, 39, "Input",ExpressionUUID->"244d2436-09ef-4b18-8b89-013dc3eaa55a"],
Cell[449625, 8750, 234, 5, 38, "Output",ExpressionUUID->"a5efeb46-d119-40cb-aaf2-de680484d124"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449896, 8760, 1076, 28, 39, "Input",ExpressionUUID->"c8af1758-e6ff-4d52-8891-84ea779f2bc2"],
Cell[450975, 8790, 236, 5, 38, "Output",ExpressionUUID->"8b9b0535-7cad-47ba-b497-062a457ecc11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451248, 8800, 1131, 29, 39, "Input",ExpressionUUID->"911a026d-b604-47aa-9567-3cf38f2deadb"],
Cell[452382, 8831, 149, 2, 35, "Output",ExpressionUUID->"02b3d073-fcb6-49e1-8c6c-5526afc99386"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452568, 8838, 1272, 31, 69, "Input",ExpressionUUID->"b387d452-89ff-4d61-bbd6-1ed9aeb747b3"],
Cell[453843, 8871, 204, 4, 35, "Output",ExpressionUUID->"06a2f615-cd02-4501-b8f2-9367fd7785cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454084, 8880, 2282, 58, 129, "Input",ExpressionUUID->"1495a66e-ebaf-4818-af9d-3ebcbbbddeb6"],
Cell[456369, 8940, 761, 20, 40, "Output",ExpressionUUID->"bf168529-2f95-4b98-b8d3-84de41305fee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457167, 8965, 2382, 59, 129, "Input",ExpressionUUID->"679aad6c-402e-4e0e-850d-5a45cb8b6851"],
Cell[459552, 9026, 547, 16, 40, "Output",ExpressionUUID->"bb552b5b-4792-47b2-aaff-f28cab1e7a68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460136, 9047, 274, 5, 31, "Input",ExpressionUUID->"f3ce7226-e5e1-49a0-abf7-a6cfcc30d7ac"],
Cell[460413, 9054, 1011, 27, 38, "Output",ExpressionUUID->"bab58183-c92e-4dca-8939-68c84185b4ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[461461, 9086, 1110, 29, 34, "Input",ExpressionUUID->"c329a322-9964-4099-9c6f-24df6dfd6346"],
Cell[462574, 9117, 817, 23, 38, "Output",ExpressionUUID->"1a994ed4-83e5-4468-becb-ac879e7484bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463428, 9145, 910, 24, 34, "Input",ExpressionUUID->"77604d45-4cb2-4ebc-ae7d-39b427ce2333"],
Cell[464341, 9171, 607, 18, 35, "Output",ExpressionUUID->"51ca0b10-dc8c-4de5-835e-638a5e63fd1c"]
}, Open  ]],
Cell[464963, 9192, 587, 19, 34, "Input",ExpressionUUID->"b257b95d-7ca2-4fed-97eb-f7d52470ae45"],
Cell[465553, 9213, 1653, 46, 159, "Input",ExpressionUUID->"e0672c6f-88b8-4c5b-bcaf-3f80bbb9f483"],
Cell[CellGroupData[{
Cell[467231, 9263, 1324, 39, 82, "Input",ExpressionUUID->"176283bf-3f30-4526-b3e1-bd4757381765"],
Cell[468558, 9304, 1142, 35, 35, "Output",ExpressionUUID->"d0bea99c-7602-43ac-b088-4edd45d6f65f"]
}, Open  ]],
Cell[469715, 9342, 1748, 48, 134, "Input",ExpressionUUID->"51e8ea39-a3f4-438c-8dd4-439e0b987c25"],
Cell[471466, 9392, 2194, 44, 456, InheritFromParent,ExpressionUUID->"5d609c24-8d92-4fa0-9381-8cdb9706c225"],
Cell[CellGroupData[{
Cell[473685, 9440, 1555, 46, 82, "Input",ExpressionUUID->"62b7c27b-d452-418e-993b-5ae45ee45bd5"],
Cell[475243, 9488, 1329, 41, 35, "Output",ExpressionUUID->"1f7a05db-6eaf-40bc-a268-f20e4bf32240"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476609, 9534, 1959, 54, 134, "Input",ExpressionUUID->"ad51fe3e-0f8c-4d7c-963f-00f1a55aa359"],
Cell[478571, 9590, 2162, 43, 636, "Output",ExpressionUUID->"0cdb1d5d-1430-40ed-a17c-8aa155e9e8fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480770, 9638, 1524, 45, 93, "Input",ExpressionUUID->"8b099d4a-f894-4605-96d4-857b6c9b3030"],
Cell[482297, 9685, 1301, 40, 40, "Output",ExpressionUUID->"38d6ec5b-2c19-412f-82f9-e9d7f691ae71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483635, 9730, 1928, 53, 159, "Input",ExpressionUUID->"bf2392d7-99c6-4c0d-9ff6-14c980da90c1"],
Cell[485566, 9785, 2165, 42, 558, "Output",ExpressionUUID->"2abda6e8-1300-4bcc-89e7-69856d07a76b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487768, 9832, 261, 4, 31, "Input",ExpressionUUID->"154f81f3-88b3-4536-9acb-abecd2a5bf73"],
Cell[488032, 9838, 29571, 489, 237, "Output",ExpressionUUID->"6ab36598-f20e-4c08-8ec7-327a59ea6b42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517640, 10332, 272, 5, 31, "Input",ExpressionUUID->"44b736bc-ee9c-4001-8e38-1c97091b01ee"],
Cell[517915, 10339, 312, 7, 35, "Output",ExpressionUUID->"84d256a7-17c0-423a-97cd-e98abb1fdb96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518264, 10351, 319, 5, 42, "Input",ExpressionUUID->"d1292fb2-383d-4547-bddb-cddf634fc321"],
Cell[518586, 10358, 364, 6, 46, "Output",ExpressionUUID->"1e5b5d71-f629-4850-8a72-31d9922b4e9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518987, 10369, 446, 8, 42, "Input",ExpressionUUID->"e93d864b-3809-4f3e-b711-e19b913feeee"],
Cell[519436, 10379, 1178482, 19326, 744, "Output",ExpressionUUID->"1c678682-47d9-4643-9981-a88c5bdd8950"]
}, Open  ]],
Cell[1697933, 29708, 1864, 52, 159, "Input",ExpressionUUID->"d6b1a915-aa6a-4714-8b7b-54a16be4c06b"],
Cell[CellGroupData[{
Cell[1699822, 29764, 278, 5, 31, "Input",ExpressionUUID->"57565468-de76-4aea-ae29-d22888472088"],
Cell[1700103, 29771, 201, 3, 35, "Output",ExpressionUUID->"4d0f9578-6bb0-4a33-b17e-9678334072ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1700341, 29779, 212, 4, 31, "Input",ExpressionUUID->"dfdc5faf-cd44-4cd5-a243-15d6754ab0f1"],
Cell[1700556, 29785, 201, 3, 35, "Output",ExpressionUUID->"0794c967-be28-49fb-b598-af1fe06f10f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1700794, 29793, 212, 4, 31, "Input",ExpressionUUID->"b8cde2d3-d2e7-40a4-b119-c17f08e9d9e5"],
Cell[1701009, 29799, 201, 3, 35, "Output",ExpressionUUID->"6062cde6-ab25-4ba7-8f00-4d9a46882479"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1701247, 29807, 432, 11, 31, "Input",ExpressionUUID->"25a428cd-de61-4800-a78f-3d0323e8203b"],
Cell[1701682, 29820, 495, 11, 23, "Message",ExpressionUUID->"c798d0c4-eea7-4ef2-9e8d-4eea0f01c181"],
Cell[1702180, 29833, 39839, 740, 556, "Output",ExpressionUUID->"545b208a-af5a-40f3-8e5e-db6284c58412"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1742056, 30578, 448, 11, 31, "Input",ExpressionUUID->"1cc3eb6b-c1a4-4579-a9d9-de0ba3b2d74b"],
Cell[1742507, 30591, 18227, 344, 250, "Output",ExpressionUUID->"010ce309-5932-45d5-bdbb-a1911411fad6"]
}, Open  ]],
Cell[1760749, 30938, 130, 3, 31, "Input",ExpressionUUID->"1e79c039-80e5-4dd5-a8ac-8068ba97a8e2"],
Cell[CellGroupData[{
Cell[1760904, 30945, 468, 8, 42, "Input",ExpressionUUID->"acdeea25-e565-4367-ae19-45fe374493cb"],
Cell[1761375, 30955, 854, 23, 38, "Output",ExpressionUUID->"1cf51d38-c9c0-4a9d-8bee-b1ba607cdbd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1762266, 30983, 954, 24, 34, "Input",ExpressionUUID->"8c2d3336-7abf-4232-906e-b483d7cc40b7"],
Cell[1763223, 31009, 646, 18, 38, "Output",ExpressionUUID->"16778850-b696-415c-84f0-5738d483a6ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1763906, 31032, 734, 19, 34, "Input",ExpressionUUID->"83c2a202-f798-4389-b510-133b6425e009"],
Cell[1764643, 31053, 354, 9, 35, "Output",ExpressionUUID->"94204cf9-31a3-4d53-a4b1-fb2eb1a98cb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1765034, 31067, 1799, 50, 174, "Input",ExpressionUUID->"45422e62-3e6f-45ab-83ef-546e02a3e15a"],
Cell[1766836, 31119, 2007, 39, 456, "Output",ExpressionUUID->"2dde325a-b951-4935-9d96-abb46278a22f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1768880, 31163, 1542, 43, 170, "Input",ExpressionUUID->"29be1b41-f64a-4ce4-8f41-cdcdf94af8e5"],
Cell[1770425, 31208, 1981, 39, 462, "Output",ExpressionUUID->"2aa31398-d66e-45d2-9b31-d88e7c417677"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1772443, 31252, 19219, 359, 345, "Input",ExpressionUUID->"8495b019-499b-46f5-bd81-6975edbaaa9c"],
Cell[1791665, 31613, 109522, 2736, 2535, "Output",ExpressionUUID->"9278f404-d196-4847-bece-2d5717208fc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1901224, 34354, 1267, 34, 48, "Input",ExpressionUUID->"e991e04e-5736-4dfa-9c64-f95b775b43a2"],
Cell[1902494, 34390, 1064, 31, 53, "Output",ExpressionUUID->"32e155d4-6ddc-4ce6-ad78-d2fcedc9580c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1903595, 34426, 1162, 32, 48, "Input",ExpressionUUID->"2ab0108d-dfed-4991-8c43-2d35dde72df9"],
Cell[1904760, 34460, 823, 26, 53, "Output",ExpressionUUID->"1e8b6b10-a224-4507-a673-828b3bd926e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1905620, 34491, 2172, 61, 256, "Input",ExpressionUUID->"c6c16602-34b0-4eb5-b9da-fdc7103a337e"],
Cell[1907795, 34554, 2224, 43, 430, "Output",ExpressionUUID->"0514c492-3eb7-45ee-95be-5af48bbf9c19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1910056, 34602, 2344, 62, 66, "Input",ExpressionUUID->"d7b0cac9-1b96-40ea-8a56-8ab740e59917"],
Cell[1912403, 34666, 2063, 59, 68, "Output",ExpressionUUID->"e8a986f3-b227-4ec7-b064-2539bf4defc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1914503, 34730, 257, 5, 31, "Input",ExpressionUUID->"1ed1ebd4-2a4e-4f25-a63f-c373712f9a4f"],
Cell[1914763, 34737, 1609, 53, 63, "Output",ExpressionUUID->"40c38499-0b05-4a08-92c5-722ebb1bda4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1916409, 34795, 3091, 88, 272, "Input",ExpressionUUID->"c2b643ce-7447-44e3-b255-47e6860a5194"],
Cell[1919503, 34885, 2464, 47, 490, "Output",ExpressionUUID->"6ed42b10-8389-48ca-bad7-74890cdb5f41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1922004, 34937, 1106, 28, 47, "Input",ExpressionUUID->"2b8a71f1-6f7c-49bb-a939-d950e9e8dd81"],
Cell[1923113, 34967, 583, 17, 51, "Output",ExpressionUUID->"ae7a8137-5ff1-4911-b28b-affac46ca1a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1923733, 34989, 1863, 52, 252, "Input",ExpressionUUID->"13e726bd-62b2-429b-90ab-f1aa726a043b"],
Cell[1925599, 35043, 2100, 41, 482, "Output",ExpressionUUID->"bd74e1da-e08b-41b9-aa9b-fb426d559f97"]
}, Open  ]],
Cell[1927714, 35087, 128, 3, 31, "Input",ExpressionUUID->"329a65b2-0b7b-40cb-b28d-fe313b878ec7"],
Cell[CellGroupData[{
Cell[1927867, 35094, 19875, 374, 585, "Input",ExpressionUUID->"caa4b4cf-54ea-49c3-99cc-6942793f518c"],
Cell[1947745, 35470, 1681, 27, 43, "Message",ExpressionUUID->"4732e676-778c-42ab-bbf3-637caaaeef4c"],
Cell[1949429, 35499, 2785, 43, 51, "Message",ExpressionUUID->"41c12b95-03d9-48b4-880d-26d7341301f5"],
Cell[1952217, 35544, 1662, 26, 25, "Message",ExpressionUUID->"be614d10-1816-472e-83b0-187998f8da3a"],
Cell[1953882, 35572, 446, 10, 23, "Message",ExpressionUUID->"a8be2817-9f86-4002-8e10-e2f2ec06b59b"],
Cell[1954331, 35584, 100784, 2519, 2277, "Output",ExpressionUUID->"35daeec1-5aac-434a-9757-f4e0a03bfb00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2055152, 38108, 2432, 64, 66, "Input",ExpressionUUID->"6388a439-7b52-45c5-8e70-38e18b2f945a"],
Cell[2057587, 38174, 1607, 53, 63, "Output",ExpressionUUID->"f279ef75-aed5-4ef4-a90c-0b98c3e86be4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2059231, 38232, 3067, 88, 272, "Input",ExpressionUUID->"88f3d82c-c146-4371-824d-0d4e1cff9de4"],
Cell[2062301, 38322, 2439, 47, 478, "Output",ExpressionUUID->"3f9179fa-fc9f-4723-a3e9-67d6cda49d19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2064777, 38374, 733, 18, 34, "Input",ExpressionUUID->"16c6635e-4cfd-46d9-9462-08d11a8f2b60"],
Cell[2065513, 38394, 316, 8, 35, "Output",ExpressionUUID->"62b01315-6cd4-4e48-b92a-30f6ec258b72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2065866, 38407, 1550, 43, 216, "Input",ExpressionUUID->"ec2526c0-56f8-43c8-a225-b47da08966ec"],
Cell[2067419, 38452, 2011, 40, 908, "Output",ExpressionUUID->"6708bc81-7082-4493-9c6c-fde8cfed559b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2069467, 38497, 887, 22, 53, "Input",ExpressionUUID->"e833842a-abba-411b-a2a2-80e6e9251d92"],
Cell[2070357, 38521, 382, 10, 35, "Output",ExpressionUUID->"c9870952-aa57-4957-b6f7-91dbf349423b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2070776, 38536, 1629, 45, 216, "Input",ExpressionUUID->"f7a26bff-ff39-4c4a-b033-803962a306ac"],
Cell[2072408, 38583, 2000, 39, 466, "Output",ExpressionUUID->"629384bb-3d80-4fb5-9eed-47cbee43bc47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2074445, 38627, 204, 3, 31, "Input",ExpressionUUID->"bd15db0c-7afb-47d5-9e90-7c704f4dbd82"],
Cell[2074652, 38632, 151, 2, 35, "Output",ExpressionUUID->"261b9c3e-43f3-49e2-beff-8880b1705026"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2074840, 38639, 1298, 32, 170, "Input",ExpressionUUID->"2ecd0af3-024b-4dcc-a820-5c040a9bbb43"],
Cell[2076141, 38673, 71443, 1959, 1673, "Output",ExpressionUUID->"9c17beef-f02b-494a-9bba-57c6b3e59c37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2147621, 40637, 2142, 58, 224, "Input",ExpressionUUID->"824b8ee2-7550-46a3-ba6f-dea9a640aca6"],
Cell[2149766, 40697, 2163, 42, 884, "Output",ExpressionUUID->"b63d5029-5666-451a-8bfd-83d4ffbd7e16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2151966, 40744, 2918, 69, 354, "Input",ExpressionUUID->"3b10e38e-fd57-4c19-953a-c5e13f8699b1"],
Cell[2154887, 40815, 195271, 3831, 14672, "Output",ExpressionUUID->"0dc395c7-eea9-415d-a13d-d3108962cdff"]
}, Open  ]],
Cell[2350173, 44649, 154, 3, 31, "Input",ExpressionUUID->"370a2a55-cc5f-4b3a-91ad-b77fdde81356"],
Cell[CellGroupData[{
Cell[2350352, 44656, 255, 4, 55, "Input",ExpressionUUID->"655f4e54-f84e-47dd-9e44-740006ece1fe"],
Cell[2350610, 44662, 191998, 3756, 36724, "Output",ExpressionUUID->"b80cecab-8351-409d-a03d-2beb35cf6b8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2542645, 48423, 3040, 70, 377, "Input",ExpressionUUID->"f66de0f0-5caf-473c-9fdc-ee5bac075d6a"],
Cell[2545688, 48495, 193734, 3754, 332336, "Output",ExpressionUUID->"f65e3b4b-ace0-40f8-bc76-9cbb70002273"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

