(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    518861,      11356]
NotebookOptionsPosition[    511286,      11214]
NotebookOutlinePosition[    511620,      11229]
CellTagsIndexPosition[    511577,      11226]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.776130336704329*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"f63c54de-0e88-47f5-b7ae-d3a67ab39008"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.7761303370457478`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"0034b4dc-0830-4879-a181-31bd6873a997"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7761303398673677`*^9, 3.776130342649584*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"fd6e0aee-5343-477d-81f5-81b3276b9eef"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1P0vFHAcwPHjMjp5XDTlyOM8zVCdRcYUc3LGjdHEOS01D6lbujOb0LWu
prFiu6TWdnci7UTJ5Nx5unlYpjx0uIudy3UY7nC6u3DVls/3h/de/8HbLaeI
fNUUg8GQ/vbPwEjHFaPRKDqwSO/B0huQ794He29pkSE+pBzlKjLUjjn3WYKM
UmhGn7UiyQ/GWk5RkPRxZuE14T44NWW50kfdA/G9RUdDnXfBjvxBM5vvBjC7
Klg9W6kHdU9KWaJIHcixnndiy3fAhvhg2uRDLVhZQGX4ErfBUuwbOm1tE6SW
j3t+a9KAdT1L7IY8NfhpwefIW/d10MM2Kjrl5SrY7sfKW1SowAVx20kCQQku
BdSFiD4qQLuyZkKgiRwMIGwE8LZk4L0La1+6GBLQIYVfc+nYBNi+I7YZ9hwF
edKlx8tMIZiZ7PxBeoULduFKp/uLOZEHnlk0calIF4Ee6m59WP8ISOTMjiWm
T4AxJHustkMCVlMk5UGdMnAoEW+VZC8H19wcyibqFWDxbX9qtaMSlMhsybnD
KjC75NxP84RVcMA/9NGA2TrofVig4sapQbwgP8aMpQExBtNm2uIm+Cu5J0vs
tQ1KT1NOeDG14M00Wzt32Q7oVPsj/RBeB/IzXr3eYujBtIi7ccM9BrAtq9A9
bPc3qMOdx3al7oHkr+EEPHsfxIVb9gleIPu4cxcvc5BBjBLqcz7S2rWzykmM
HCkIUThsIqMsfGusE4yg7pbuOD8Z2Sod4pHSkC6tud1VOcjdVK4SV4Ls5LhG
mDcib1htDDW2IL3pQnJsG7I2PvP6fQGSpql/ip1E+mXkuXBmkPLBs83R88gk
9oywYhlpYdpEdNtAivLpU73byDvTsZRsA/L/t8A/BhudfQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$3766#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-1.999999918367347, 1.999999918367347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776130342977195*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"9d789d1b-fd68-4cfb-b256-786549338bd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"ArcCurvature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["x", "3"], "-", "x"}], 
        SuperscriptBox["x", "a"]]}], "}"}], ",", "x"}], "]"}], ",", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     TemplateBox[{},
      "Reals"]}], "\[And]", 
    RowBox[{"a", "\[Element]", 
     TemplateBox[{},
      "PositiveIntegers"]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776130348115237*^9, 3.77613034891308*^9}, {
  3.7761303851211433`*^9, 3.776130409618675*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3d39bb5b-2823-447f-a349-087f851168c5"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"4", " ", "a"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
        SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "a", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
    "3"]]]], "Output",
 CellChangeTimes->{3.776130411262236*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f5c76d50-2a7d-4e86-97ab-caee67383058"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PowerExpand", "[", 
  SqrtBox[
   FractionBox[
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"4", " ", "a"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
         SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[6]:=",ExpressionUUID->"28716582-ff46-4599-819f-fe4d01665cdf"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["x", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"4", " ", "a"}]}], ")"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
      SuperscriptBox["x", "2"]}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"2", " ", "a"}]], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "a", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
         SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Output",
 CellChangeTimes->{3.776130429942658*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"dee3d68d-984a-4d04-8abd-fc9443996dd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApartSquareFree", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"4", " ", "a"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
        SuperscriptBox["x", "2"]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", "x"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[7]:=",ExpressionUUID->"3b8649f6-6c44-477b-87ba-9f8d51ed7b81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"a", " ", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "a"}]}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "a"}]}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "a", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]], "-", 
  FractionBox[
   RowBox[{"6", " ", 
    SuperscriptBox["x", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "a"}]}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "a", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]], "+", 
  FractionBox[
   RowBox[{"5", " ", "a", " ", 
    SuperscriptBox["x", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "a"}]}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "a", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["x", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "a"}]}]]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "a", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]]}]], "Output",
 CellChangeTimes->{3.7761304467606983`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"2cb8bff8-6b02-4fba-a5b2-446d79507e7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArgMax", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"4", " ", "a"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[5]:=",ExpressionUUID->"d71c9fad-e192-4074-b268-9ec3cbab5e51"],

Cell[BoxData[
 RowBox[{"ArgMax", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"4", " ", "a"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.776130423272938*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a9370b05-98b8-41a7-953f-eaf8c7b95a52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"4", " ", "a"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[4]:=",ExpressionUUID->"8462ce0f-0f52-467d-8e0e-ee69dcf365e5"],

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"4", " ", "a"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7761304176373653`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"5441d83e-22ce-44bf-9ff0-4b68761add56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a", " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]]}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "a"}]}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", 
          RowBox[{"2", " ", "a"}]], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "a", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
             SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]]], "-", 
     FractionBox[
      RowBox[{"6", " ", 
       SuperscriptBox["x", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "a"}]}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", 
          RowBox[{"2", " ", "a"}]], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "a", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
             SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]]], "+", 
     FractionBox[
      RowBox[{"5", " ", "a", " ", 
       SuperscriptBox["x", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "a"}]}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", 
          RowBox[{"2", " ", "a"}]], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "a", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
             SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "a"}]}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", 
          RowBox[{"2", " ", "a"}]], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "a", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
             SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]]]}], ",", "x"}], "]"}], "\[Equal]", 
  "0"}]], "Input",
 CellChangeTimes->{{3.7761304581221647`*^9, 3.776130460117175*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0841ddd1-b18d-4069-94fd-6b58e52a9854"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", "a", " ", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "a"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "a"}]}]]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
      RowBox[{"5", "/", "2"}]]}]], "-", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "a"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "a"}]}]]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
      RowBox[{"5", "/", "2"}]]}]], "+", 
   FractionBox[
    RowBox[{"9", " ", 
     SuperscriptBox["x", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "a"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "a"}]}]]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]]], "-", 
   FractionBox[
    RowBox[{"15", " ", "a", " ", 
     SuperscriptBox["x", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "a"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "a"}]}]]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
      RowBox[{"5", "/", "2"}]]}]], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["x", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "a"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "a"}]}]]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
      RowBox[{"5", "/", "2"}]]}]], "-", 
   FractionBox[
    RowBox[{"6", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "a"}]}], ")"}], " ", 
     SuperscriptBox["x", 
      RowBox[{"2", " ", "a"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], "+", 
   FractionBox[
    RowBox[{"5", " ", "a", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "a"}]}], ")"}], " ", 
     SuperscriptBox["x", 
      RowBox[{"2", " ", "a"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "a"}]}], ")"}], " ", 
     SuperscriptBox["x", 
      RowBox[{"2", " ", "a"}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], "-", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "a"}]}], ")"}], " ", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", "a"}]}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "a"}]}], ")"}], " ", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", "a"}]}]]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.776130462303172*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"d98b9457-c305-4ddc-9c58-2366fa2d1606"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a", " ", 
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "a"}]}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", 
             RowBox[{"2", " ", "a"}]], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "a", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
                SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
          RowBox[{"3", "/", "2"}]]]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["x", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "a"}]}]]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", 
            RowBox[{"2", " ", "a"}]], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "a", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
               SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], "-", 
       FractionBox[
        RowBox[{"6", " ", 
         SuperscriptBox["x", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "a"}]}]]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", 
            RowBox[{"2", " ", "a"}]], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "a", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
               SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], "+", 
       FractionBox[
        RowBox[{"5", " ", "a", " ", 
         SuperscriptBox["x", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "a"}]}]]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", 
            RowBox[{"2", " ", "a"}]], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "a", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
               SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["x", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "a"}]}]]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", 
            RowBox[{"2", " ", "a"}]], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "a", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
               SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}], ",", "x"}], "]"}], "\[Equal]", "0"}], 
   ",", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     TemplateBox[{},
      "Reals"]}], "\[And]", 
    RowBox[{"a", "\[Element]", 
     TemplateBox[{},
      "PositiveIntegers"]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776130475514123*^9, 3.776130486117476*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"3545024d-20db-4f6e-a395-68126d0e3964"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "a"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SuperscriptBox["a", "5"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["x", "2"]}], ")"}], "3"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "7"}], "+", 
         RowBox[{"27", " ", 
          SuperscriptBox["x", "2"]}]}], ")"}]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"12", " ", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"45", " ", 
          SuperscriptBox["x", "4"]}], "-", 
         SuperscriptBox["x", 
          RowBox[{"2", " ", "a"}]]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["a", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["x", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9"}], "+", 
         RowBox[{"86", " ", 
          SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"145", " ", 
          SuperscriptBox["x", "4"]}], "+", 
         SuperscriptBox["x", 
          RowBox[{"2", " ", "a"}]]}], ")"}]}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"19", " ", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"291", " ", 
          SuperscriptBox["x", "4"]}], "-", 
         RowBox[{"513", " ", 
          SuperscriptBox["x", "6"]}], "+", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"11", " ", 
             SuperscriptBox["x", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"85", "-", 
            RowBox[{"395", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"387", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"6", " ", 
             SuperscriptBox["x", 
              RowBox[{"2", " ", "a"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"2", " ", "a"}]], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "a", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
         SuperscriptBox["x", "2"]}]}], ")"}], "2"]}]]], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.776130491983358*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f5b13508-4853-4e1e-82af-0f49fba63f9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "a"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["a", "5"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "3"]}], "+", 
        RowBox[{
         SuperscriptBox["a", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "7"}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox["x", "2"]}]}], ")"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"45", " ", 
            SuperscriptBox["x", "4"]}], "-", 
           SuperscriptBox["x", 
            RowBox[{"2", " ", "a"}]]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["a", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           RowBox[{"86", " ", 
            SuperscriptBox["x", "2"]}], "-", 
           RowBox[{"145", " ", 
            SuperscriptBox["x", "4"]}], "+", 
           SuperscriptBox["x", 
            RowBox[{"2", " ", "a"}]]}], ")"}]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"19", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"291", " ", 
            SuperscriptBox["x", "4"]}], "-", 
           RowBox[{"513", " ", 
            SuperscriptBox["x", "6"]}], "+", 
           RowBox[{
            SuperscriptBox["x", 
             RowBox[{"2", " ", "a"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"11", " ", 
               SuperscriptBox["x", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"85", "-", 
              RowBox[{"395", " ", 
               SuperscriptBox["x", "2"]}], "+", 
              RowBox[{"387", " ", 
               SuperscriptBox["x", "4"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["x", 
                RowBox[{"2", " ", "a"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}]]], "\[Equal]", "0"}], 
   ",", "a", ",", 
   TemplateBox[{},
    "PositiveIntegers"]}], "]"}]], "Input",
 CellChangeTimes->{{3.776130504162619*^9, 3.776130538645432*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"3a146d76-627b-4626-8e38-4b3dbc7bc0e5"],

Cell[BoxData[
 TemplateBox[{
  "Solve","nsmet",
   "\"This system cannot be solved with the methods available to Solve.\"",2,
   10,1,25123700336179161765,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776130569251124*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"debf27e7-9f41-4119-9124-ea3399bbee8d"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "a"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["a", "5"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "3"]}], "+", 
        RowBox[{
         SuperscriptBox["a", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "7"}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox["x", "2"]}]}], ")"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"45", " ", 
            SuperscriptBox["x", "4"]}], "-", 
           SuperscriptBox["x", 
            RowBox[{"2", " ", "a"}]]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["a", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["x", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           RowBox[{"86", " ", 
            SuperscriptBox["x", "2"]}], "-", 
           RowBox[{"145", " ", 
            SuperscriptBox["x", "4"]}], "+", 
           SuperscriptBox["x", 
            RowBox[{"2", " ", "a"}]]}], ")"}]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"19", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"291", " ", 
            SuperscriptBox["x", "4"]}], "-", 
           RowBox[{"513", " ", 
            SuperscriptBox["x", "6"]}], "+", 
           RowBox[{
            SuperscriptBox["x", 
             RowBox[{"2", " ", "a"}]], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"11", " ", 
               SuperscriptBox["x", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"85", "-", 
              RowBox[{"395", " ", 
               SuperscriptBox["x", "2"]}], "+", 
              RowBox[{"387", " ", 
               SuperscriptBox["x", "4"]}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["x", 
                RowBox[{"2", " ", "a"}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}]]], "\[Equal]", "0"}], 
   ",", "a", ",", 
   TemplateBox[{},
    "PositiveIntegers"]}], "]"}]], "Output",
 CellChangeTimes->{3.7761305692908583`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"f10bbfe3-76ed-4435-bcad-ef7fa8d80a6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   RowBox[{"x", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", "1"}], ")"}]}], ",", "x"}], 
  "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->1096296349,ExpressionUUID->"105150d8-9b6f-4f6c-93f5-01404fcbc905"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "<", 
   RowBox[{"-", "1"}]}], "||", 
  RowBox[{
   RowBox[{"-", "1"}], "<", "x", "<", "1"}], "||", 
  RowBox[{"x", ">", "1"}]}]], "Output",
 CellChangeTimes->{3.776130573421047*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"b0a13390-3884-47ce-b478-d6b930ce241c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   SqrtBox["x"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7761305797471867`*^9, 3.776130581387074*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ca71d146-3379-433d-99db-60b6c74e47fe"],

Cell[BoxData[
 RowBox[{"x", "\[GreaterEqual]", "0"}]], "Output",
 CellChangeTimes->{3.7761305817889977`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"9b3d331f-2a01-4e1c-b066-dd6d3bb8a67b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.776130586298852*^9, 3.776130587554908*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"0daf47a4-c035-4384-927e-6c3a9bb04e7d"],

Cell[BoxData[
 RowBox[{"x", ">", "0"}]], "Output",
 CellChangeTimes->{3.776130587814941*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"11cf0016-c90a-4268-b2e8-347791969e9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.776130600475368*^9, 3.776130601259424*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"d4dfc21e-879f-47c7-98ef-fec18eabc709"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7761306016652613`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"a5087abb-2f48-4103-bfc1-09f7123d1d57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.776130609779387*^9, 3.7761306194143457`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"47f4163d-d65d-46bd-8d70-8bdbbd51037f"],

Cell[BoxData[
 TemplateBox[{
  "FunctionRange","argt",
   "\"\\!\\(\\*RowBox[{\\\"FunctionRange\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) arguments; \\!\\(\\*RowBox[{\\\"3\\\"}]\\) or \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\) arguments are expected.\"",2,15,2,
   25123700336179161765,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776130620174869*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"c4a2581b-0deb-4b6a-b87f-b7b5995f65e7"],

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.776130620186205*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"998767bd-86c4-4572-8984-4e791a01bd0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x", ",", 
   TemplateBox[{},
    "Reals"]}], "]"}]], "Input",
 CellChangeTimes->{{3.776130628547269*^9, 3.776130630214641*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"401b944b-8f55-4e9f-a5ba-5256f6cf670f"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{},
   "Reals"], "\[GreaterEqual]", "0"}]], "Output",
 CellChangeTimes->{3.776130631041347*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"0c86f938-86d0-49fe-ae98-56e6c3ec152b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.776130643651211*^9, 3.776130643844222*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"21b715a7-51aa-4553-9a90-23014f55e9fc"],

Cell[BoxData[
 RowBox[{"y", "\[GreaterEqual]", "0"}]], "Output",
 CellChangeTimes->{3.77613064426378*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"f9c98dc5-a3a9-4a43-9bbc-805248ae8c6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", "x", ",", 
   TemplateBox[{},
    "PositiveIntegers"]}], "]"}]], "Input",
 CellChangeTimes->{{3.77613064910772*^9, 3.776130651011941*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"61f06573-7fb8-4882-a1a2-156200313d0d"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{},
   "PositiveIntegers"], "\[GreaterEqual]", "0"}]], "Output",
 CellChangeTimes->{3.7761306513325033`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"21c7e286-3f42-44af-b4e8-febe3074694f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Beta", "[", 
  RowBox[{"x", ",", 
   RowBox[{"Sqrt", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776130850117133*^9, 3.776130855429027*^9}},
 CellLabel->"In[19]:=",
 CellID->1959461522,ExpressionUUID->"95dd4952-45a2-466f-8103-dcb330d42d6e"],

Cell[BoxData[
 RowBox[{"Beta", "[", 
  RowBox[{"x", ",", 
   SqrtBox["x"]}], "]"}]], "Output",
 CellChangeTimes->{3.7761308556801167`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"1641081f-891a-419f-8471-2ee5da67b2b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Beta", "[", 
    RowBox[{"x", ",", 
     SqrtBox["x"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[20]:=",ExpressionUUID->"9a8c4f25-bb2a-4ee9-b5be-2ef2f1af7d52"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$28864#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-8, 8}, {0., 1.349649268474408}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7761308576941843`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"6e5f5d13-4a23-4125-a6cc-0134989ec910"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"4", " ", "a"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "a"}], "}"}], "\[Element]", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "10"}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.776131039630673*^9, 3.776131052936953*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"df855dd9-6da4-4b49-8069-8674c11343de"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
7/0FXj0cr36OxwfG4xvg8RPw+MN470fweAt472vweBp4PG28fgdefwSP1/23
/Rc8+b/tI+DxLf+2f4fHg8Xjv+HxavDq2Hj8HDzeHV6dHK9ejVefx6vD4/WP
8N554fUB8fi6f8sPweOH4/Ez8XhfeDwxvHcZeO+M/pYvgccPx3vfgccXxeun
4/Xf8XjsuLwUHB4LHt8e730QHn/4b3k7ePx/PB4yHn8Sj2+J944J7x3B3/KI
8N4d4PGc8fiZeO+k8N4j4PEw8d434fFY8HgveHxpPJ4n3jupv+W94PH5/5bv
hPceDY8Hi8dHxXvnhfcOEY/Hjsezxetv4vHe/5ZPhffuGO99BN57ZDxeEx4P
Cu89HR4fGI/fiPfOAo/ng8cLwuPP472Pw3tHg8cbx+Nh4vEq8d6n472fwuNh
4vHE8PhXeO/H8XgIeLwFvHdMePwuPN4aHn8A750O3nsZvHcxeO+48fr4ePxz
PL5BWnEL07QfP5x9cyH5IXk/FJ61InOMVQjga3U+76fb84k9kV35O/dTQrQn
Bbi+b7LDTym6O9338MFm1o/ffjOzgUY+mrH/8OOCc1MrLnxp54H5Gvq+/XKw
hN5p32eZ2OSB93AKzXV78MJ5uv4zLTWHgR4nswu37H7fZykOw3F2V08DPTL3
O6lrdPnh2oZHz85lGgE9P1t0gred44c1Fed/vLaBAN6+IlPkK8oGO9DJ0wdR
XgH4q6GStfpULljCkap3tvY0dEuWmXFuUxA2EDSleuo/Tzz68Lx+IvEigYR7
vN9heOT8GtH99kpriCKBoOpak2C2OQvdtV4SmmxE6xWXdj87GL/xDXrlO/Kg
RUkMloR1y38MGUEdcx81Kzbp4EmV0ofjhsIIj+RB6eA7z7VI+K3lMM8FaxFE
hKmmLfFygdbdXv3dbzeZYBuhgZny8yKI3Gn+B9vd7wKcjxr+uQURRurj8liN
Yly0SN/lOi3hVZ/+r3eIQ308w36sMIVCvJ+/FDf88kv/XobDNwGuV5STPRnK
CqeUWmlcvhINcTOaaJdsUsLnkytP1lt2ENkVHRTLWszB+I20zj/RHRkknv3o
RdjCcxDI65rbBLiy9RC7z8RT9KyZAXlNz8AIimPzRDKYr8W7jwKs/7nWC+nZ
u4WR3px4vfXDRzVJdsX9NCG6bVgASTGX8binaKFJkpf0ef8yJZAPMW2cl3r4
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
KA==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
h9SbLr3deha6PvY9by7xWzCajz7WeoY7At0VvB3uy3RvJkwvbD8kfF/dkdZW
DC989+6sw4TU9+Ti14q93/aL3a7a/wL6TdjP2td6e6D3AnqH8G7e9mFr3vou
+/d36vsY6cKSxO+vFNPTu7tKseNyp+Z85yl7Ox56qu6oFZfL+85gUOR3AHoP
cBL019RvX/QGZhS0Lu2/Hvndi95v6R1XG2Hq2HcNavMP+qjNn105vxHSHHQ3
vSvw/4TexrpfLvxCO6fnfE/aM+ezXGe6Yv57lvyW4Z/UMUTpnfRPGEOY4kDa
3ivvN3KVtfZ538Eck/felw4I736u+6qM7w7HhrjZgqJjhrrT0b2Tzh35LPJd
Lsn7LZnemjVSfEuYFDom3PcdTr09C35bqDim7jV1v9k853eNisHdDG1VsB7p
zduGxHEqvVFaTzqU8nsYQ+OMdVTnkN5SymfQW75b8o5RLs37flH9qv9vAwYT
FtO7oMGKu9POhhCHVzx+UcF3nYqhPZR3Hw/n/dZoU+R74fmp7VAFa3gWtAr8
QbHvQbWfta/3y/v91f66/8r67FRcRn6wsI5wTkWI9yoGpbiq4qt35hx71r2L
7gH/q32gMyHnd2CKO9+e85tWtas2FVvVOxm9l6kcvmmVMKcFoW+9d1SMNAvd
RuoK/4O8cYswifDNrUFPb9f5VvLZe2TZftHCMG69H9O7i2NZn8PCGa2zekbQ
Ne372anfDjSjbjH2WTU357s4YVphW2GIBQG7d8jZv++Y8/tXxStm543DFeO8
TbHqkmMDubLfxeruQ3cg18G7MDKuXZ4aBwoPCvPL15lUtr8mvsp1t6B3Vqti
3yPqPlF3wsOLfjOj+6aFwRfsHvDTzqBX7cM6iD812PNpsddCa6K3prMDNugS
e376BpqjbJZsl86un3K+2/0ZOj/v++UFeZ+ROitnJo47yOfXmaT7Np0XX+d8
R1Di/8Wp7bjsud5wKNaleJj2qGKByitGpji9dEoxbWFFYbPnoP1KjrXq7Z9k
pwad13lxPWN5uuj3JXpnsm/Jb7n0puvd2DFf+dpnJ/4OOqeEo/WeQH6QYjo7
Y7+X+yT2GyK9O2rA/3eoo/D0B4nrqX674D/PCT62YqmKqW5NbNN0H6l4inxw
jVPz0tsG6cvvwU4LC2mf6Y3UXZHfNVUK9wK6H9gr8duz+vJF8n6rMzHvd7x6
i3R+yb6b/Du9F9KbKvm2b0D/D8fqkWQ=
            "]], Polygon3DBox[CompressedData["
1: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
krxD9Vry3yam+cTdtBnaDvXZ62l8sb7/AahyW/0=
            "]], 
           Polygon3DBox[CompressedData["
1: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
vZ+Lfyv/n342mBO0unOF6lz4ITEWh/4H724Mog==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwl0ktIVGEUB/BTZOWM1aIkF4FILWplD6IHJCmZk1GRQbuY0ghK0hICDYSi
jRBWLqLHppejPSzIoMCgxfQi2kiPRVHQrpVBboIe0O/jLn7cc//3zJkz39y6
9u62rpkRUctsnuQi+hXD3OImz2Vn8xH1cyJe6/ldEXFb/lLeUBlRUDezlRbu
yRvl29XVLKKVMfkAJZ9fYNZ8puTvZCOsVm+iIc3WU2fGI3mP+2N0U+at7A1P
1RP02Gnc9Ygdy/Ib6lFGKPFC9oqH6iL7ecZe80fla9Sr2BXZDuvM2eLZHnUN
i2njvt6LfLPbRz7wiWV6q7mgHuQc5zmt91Q6O/U2WhkwZ4feIp/VTc6gkb/q
9+nsOanvK184TpXeQXlZvVLfevcb2MhdeZPsGkP2v+7abv9aTuivl51xnWRI
b85nDqgP0sEheuV/6Er/i/5O16P0pf9rbsTyGRH/3O+0Z2lWxLRs3LNO3/VY
XhPZO7AvvSPmV6Z3QD5Wkc3Myx7ksvNs0VPIZ+/DZvkV+ZSeaYppTjpPz5vZ
nc5dtjD9Zu7ovcpPPZe4zA9WmDMsX6pnHlUcpiD/zi/799t9wt5r7b9E739t
vl7V
            "]]},
          Annotation[#, "Charting`Private`Tag$29690#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmXncllMax5/nud/3ve/7eVtsRcVnyIydsfXJEmMbRh+NMJZJIxIpTTVM
liLaEMmWptRUUlmSSEzSohoNKSUhpVAqadcmJfP9+V3zmT/Oc537nOvs1/ld
v+s8h7XudHnHUqFQOJafBHleZaGwoFgorOWjYVoofEn5jqxQ2Ez+XsrbIhfn
hcIS8ivLhcJq6oajczyyL2U5+YuR36N3KrIF8gX66kr+QOSBtPktus9Xo1NV
KMxEfxvf29A7DJ0pjL8B2ZI0gvk0pu4pZF/k1tCR7hnIjaQq0i7mcwXy6dxl
qltCm4a0GUr+cOTRjHM3+bmUH1PyWhaSP4S6Z8j/xFyWML/LyE+k/mDKC+Sb
M5/Po/yXespT5Bbk16xlLnN5ibW8RpteNPkVdeNI96FfH/kG5QMo34qcQZpN
fhvyiMxzPhI5uOg5PFpw/rCSv5tRt4P8D8iVpDXkL0Rez5h70W2K3J17HQ8i
qxnvU/Ir0FtN3bH0cQ1yVeq134z8A+3XUr8cuZ42q9C/Fdmd1Ij6/qylFbI5
+segU0T3IvLrCpb67o+spO4Lyk5BdwLjnklZTWQF9d9SvoGUo3M25U9U2W7u
jfVuym0jTyFn8b2TNn9EfofsQbuxyCrSYzGupL6fLDov2Z3y92nzAGPOpu+/
U7aJ1Is0gO/Hqd/L2f2F+u8ouw45ge8jCraxpei8QX6UdOinEfVfak2UJ+hf
Rfm3ugekNaRpjD8F/c91HqxnBfnT0O3HGmaSvxPZAb1FpC7RTu0XUfcsfR9O
fmRiHdUfR/n3FfRHfmuFz+busNWvU5d/lXpNWpvGaBJ3cxj9VDKP3to30njO
rKj9Yw51kBk6dZHXIetR/wBt68sO+d5C/lT6LfGdojOdNou1PmR90r7kP0Ju
Q27X3LT36I+hXWfkLaQ+KpM9sg/PUX4OZb34bkH56cgG9P0I+W+o+5C57kS+
V/J8NA/NaWyc9VnUz018d3SHtjN2XWFC7v4Gx72oVbbdbclttz0pW5cbd4Q/
a5DN+e4q20MOjr0blPoeN4x7uJm6TuTzsu+O8OFH5O4qz6EW/TSmTYZOmfwc
6m6QrSEXVLn/mrHHLxY9jyl812INf0Lemnqftf+yE2HiXspuQr5JGo9+D76X
Imug8xDtDtX9lZ0ypxaBje8w3lXor6dsRm5MnIl8H73e5Fclxgntz664mx10
prIL+riT7ybIfYSfWiNzqZ15bppjNfkyuvch62W+77r3j+pekO+fGqtHoXMN
8ijGe1c2jWwl/NO9QB5N21MCK65nfl8xzmjmv173nLbn008L9Jahcy3y8ehH
/S0MvBJutaPtPPK94iw2y95T+4069NMUeUnRmKa73a/odWn/ZTOqG5Db7mR/
zXTnc9v+EOSBmTF5W5zzVtJAvidVuY/2qW1LNtYReVHq/W2QGSM1vuZUi7In
isa3rejV5vt7YS/yfsq+inLNT7iqM9ZZX0t/D2Yet1nqOWlur8RdO6toPF3B
9w7qh7OH+5e9z+Ny+1H50+3IPcjdRWOQbEY2uRH5Fv2PZB4nZLaF88IehBE1
i8YM+Tb5ssWJ5yrnX4N0EG0+pmxG5nPVuNcntjPZ20rk6yXbySfkLwy/oP3S
fgj3tSeal+b3I+ndktf0bmK/o7z8Rhu+f6b+JmSJ79+Tv0d+qWz/ditrfy71
/rzE+RxH+Rx0myBvpP7P5B9RO9JPtO2WWWc/xnudvfqP/J/wATmoZI7QjTYX
ZJ7XntTjzqJsamYslF9bF+ehcYWlY+QLKB+NbJsYr+SjxgR+CkeFJd1L3sdX
gwPMS+z7ZW8LkF3QO0H7x1h1medQ9DqXfT91T1dQ/xlpIDqvZfZn8mtjyd9O
uk2+rcrn2DvOdb78EeUPx93RPfkCeV5mPJfvEIeTv5DfGJy7n0+R52f2aVtS
32fdx0vE98rmWsfnXlONWNeW8FPyVy+m5njyfZdmxrMy+bcoa41OD/rpozUy
5gDOcYi4lGwkMV8Ub3yB/uvR5mPyy5AHkeaS/1xcgj6PRbel7ITvzrJV6dC2
DfmFubmA7Fr2vILyAbIvZJExa6BTqnR9VZxpg/Cn8qtV0W5jIbCy9H9fmsbe
npnZT3+QGjcOpqxn4KTOS/j6WGpf31oYWzJGCB/kT69iPmczn3OoW0jdsMy8
UX6ktfa8wmtfi3w3t69Zjv4duf3sZMnce/I28lnS2/IfyP1oP5P8h8g6pPe0
J8jLM+OiuM8Z8n3ke6a2G537R+R/Yrzx8kfIG9C/iHk+jPwNcjLlFyPH812B
bJ75/GuWjG1LaP83dDZWmQOIf4nXrcqNFd8It4rme8upezOJuy++hH6TojFQ
eXGKnVF2WtG4OYj2Rws/y+5DfYln/Jya0+1grBFF+3L58bXh6+XzpyXGnanI
uzLzf2FgzbDh7wruZ0/44nqMMZ3yK8vGXeGz+qoRaxUujouz0xneSJtW6M1C
TiT9WDBfbZ8YczaQGtPXk+Kj1Y59xP268P0ZddPE64Wj6KSUz2XOwxPzwBHI
bykfXTTHWFQ2r5hH/hndW/Ft+hkWtj1dfL7CHHU1cjv7spj+j6L8aNq+Sn+n
l83ZdNYzUvsM+Q75lTfEldF5IXNso/2clJrLiZ9NSY2TK4Vz8gnM49+UDWZd
3XV+6AxFrqeP/sJZ5NWylYI58176GS5bRadnbjsUJj8YccoRzO1c9B7TvtH2
xMB54f1Y0gEl+/00eJf4V7Pwm/KfLwVvFB6flPre3Z/av6lPxRW9gkt8UTaH
0nye5vsA2rTX/IV59PWmcCwzxojbTy3Y7+8uOB7cGbZ6T2qMFI5JZwHfs8jP
Ry5hjE2cQ3tkR3Ffyq9MfcZpnGOfsOdltH2GfZyT2s6lK5xRLFC30nguXB+E
zjTF3mXbsnzWkuAs8i/ao065Od3Ias+nHTrr+X4h9kf7dAXtmyXGE/G+fUvm
/++I/4VtfBP3V1yjf3A/4bk4ev3QbxacSjx+FPmrSQML9teK9TrQx2Wpx61E
9o191n5rTcIuxVptAt+EczqTYXEuFbT5gP4Xs39T5MMpW1QyzmmfZxQ935uL
bq/xFRsoLjgy8dkpPlNMor1WXNMwYv6H6Pv21HdQ2CVdvSHMLzrmFTa8Ks5Q
NJbOln8KHydfp3UfEmsvMdZEnT/fz7HvvVPb2CvVjiHXle0DhZPCstNTY5Di
hdbRt+quJ9Ul/UoxYMn8fZ/EHOAD6WRe46hYZye+nxRfzny/tPcd0T2Z8U5M
7E83B3dVnHRwzFlz/wHbHI3+rgqvU+sVv22F3vOJOYMwTfF7P/p+Lfc56kyH
Z+YtXcLOZddPsNZX4qx15pWRl78Xbv/iy8StI35RHHNyZnzVu4/mpfmJ938U
69L6xqe2s3Gp+ZPsfG5g5hD6Hsi4n6A3mbI7M++94sSXU+Ol4jHFonpz0PtA
Ofy29kBx6E300zkx/rQjNU7Mq48ifw/5Rshuqe+ZfE2D8EfySxdQP4Y+59BX
O/q9tOg4R7HSRPK5sCtiNMVq3SL2VAyq94YRBb9nCVuFsVNTx0WKjzbo/SPO
SGelezEi7saWkn3NZnH24DniO8sTxy7LkPPopzb5kezRDdStoGxP7rchvRHJ
/n+m33HynejciM5Jeo9QrBn+Qn7j/Fij1jo6bE929nrq2OqWzH7qd8gx1X5n
ED4o9tcb3QTya5Gjqv0+pbe4Donj7r8iT6Bt08QcZlisUX5cbx6KDfUutyg1
FgqTFY8pLns+tX+Wn1acdHvuvRqR+w7pLgkvhgbmDEEOzYwnwpWlwVvEX5ZS
Nkv8NjHnFJa3/F9MEBi7KeILxRlNM8c0p2bmFuIYZyK3Vxgnd1SYm8p/iLvq
LNoWzc3EC8UPz83MreqQJgQXFWcWdxY/EE+4i7L2egtjfi3Zp5dz20zf3O3U
Xu8y4gvqU2tokjjGUawzKfBE+zAruIp8tji+3qHkd5eV/PY4I/Qnx3zEFcVf
9e6h/ZW/036fJjwSJ0oc1ysuUHygPVmvO5XZB/3CM3O/Fam9ON+U3PiqN7Gh
2MNEdDeX/aaqd029uf4rtQ10DB+uOSiW3iUsQDbK/O6l+GVmwfrCRHEVxWOK
y/ReuZN7OFtxJvrbM79X6916dXCkNcg+id9f9kcOQucf8pHchV8n3jP5nI0R
R68NTFDMqP3Xe2Mp4ohl4vDqK/N7zaGUTSo5ftX7gNYhHOjK+MOq/Z4mDGkQ
tto2MF9cTlJ3VtxS/fyT/NPV9j2KBfTerneVLWFTk+K8xP8lb0vNKcTHxCtq
xzuP3nv03qt3Er0BJ5XGh4pK+yOdrd6fxEHky8QZZGvCKd3/+bmxQtxjYcQX
ih30drsmbOnu1Pitt5SbwzdrDbJHvQXojUT4r1hnHGs6O3yE/EY/vpPMb3e6
y3lwS2F2VcRl4oF1Att3ojui5LfcGcEHNO/3U++t3m/FfcWBxdPUt94WxAn1
Pv8o53R52dggLiIeMiH3OHp/1l3TfwZ6WxPnEp6IY9+RGKe6JObAwvmFcY6T
4izFo/Kiz068QhxRmKI9E5+YXvB7st5+FecqZlTcVy94rvyXON1Duf+T0Dvk
/OCWOl/ZlPZBcaXiRL3X9dDbZ2I80B82WzP/h6L/UrrGe4jeRXZXeG57Khwn
iv+IB7UJn6S3cL3fpGHb8yIeVFz4X6DRo7E=
           "]], 
          Polygon3DBox[CompressedData["
1:eJxNmXnYlmMaxp/nvb/3e5YvJTOlVIdtJoqsRSj7GOawhLFMKGWJMmVfYjLK
lkkxLSpJi5KJogWTCKkRKSWEpCLtWr4WLTLn7zifP/xxHe913ff93Ou1nNf1
Htyx2yVdS1EUTY+jqEK/z5Wj6CD9Vkl+N4mi67Moulb8O+IHV0VRK/3+Xh/0
0pjdlVH0ahpF5RBFR0pepL5R+r6WxtcQDRf/ttraiX9U/c9K7iT5ZPHHq22T
+CdEZ+r7g0TdxC/NoyjV/CeKH6j1HtP836lvu9ouEN9V7SP07fOivVr/a8nz
xE/VnN+IP0Vj1usg60RniH9BazZR322x+28VvSJ+oqhS/GEa8w/xTTV/Y/Gv
J577clFnyYeK7hPfRP2HiB9U8lnvYg/BaywSf0vstYeIFqv9YskNxD8rvnOx
v8X69nLtp4b4Q9W2RGu9KbpC/JNqa6O+lqnnZ51Z4puK2qj/aMlNxE/XmIMl
T9eYSeJ7sb7W+ExUT/z9ovfEr9T4P4nfoPfrrrGf6q766j7bar1Fkldrji3i
j9GYFzX2ZVFz8a+JPhf/sfq/VH93yTM037uiiLvSfD+KbSW5nd6qrtoGaOwB
+qaO+Kv0zTfqr1bbz+K3at0Hxa8V3Sf5AY35QN/OFJXE36i2pzT+CPWvTLwH
9rJe9BfxV6rtE/V/q/4fE5+/seSrJW9NvJ9fxQeN7aPzPaC2xepvqbYd4vtk
vq9q8cPVv1376SV5o+h+tXUR9dT4/pJraY5hkjtqbyeLeoh/WVS3ZJ0fL/69
xLYxNrL+zEhsHwdG1nf2xN42FGsOEf0k/uvI6/E9upcV9sUe2Wur4r6WsX/x
N4iW8632+05kHUfX0Wd06S3JcyR31Z5/kq5vEH0seYXOe4r6JnEGvc/d6n9D
fCNR29Q6fYzmuDdY168Kvlvu+DjxndTfRb9jdN7/aO2lkmdJXqL+c8Ufr29W
q2+22sqSJ2BPotaiU0Xrc9vOQHRcfE+11dL4fUUnJ9ZxdH2oxjTU9zPxMbF9
znXin9aaPcT/mztS/wKdp2NsGz5A/M1qO0xz3Kn1p2r8TZJvF3+baLLkhZL7
i/+fvukm/gt9c7v4O8Q/qve/SHuarb3s0DojJc9Qe2uNfyjy/tsX/ukefVM/
dRtneyf12C2Vtp8T9E215LM03zZ8k8Y8o/n6qL+/+neJpqAbGrcZW0Inxf9S
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
YtQoyHX+D1GfxWA=
           "]], Polygon3DBox[CompressedData["
1:eJwl1G1ollUYB/DbPXt8nmdWFGIa2ocSZPMtt8xXqMg+DSwXaTIEaymkHzQQ
JQhMbRUR2YtkW0kptNWgabU58HVZOnEqhs6xQk3XJs3W5qyZrrJ+h/Phz33+
/+t/Xefc132d+76K1U+tykuSpAzS8EtBknRmkuRWNklqU0nSkfO0nmv997Ak
GYLH8S56pXUDvRG68Q3y/qMtwy8rWoxX8rbjZ2GB2D34DTiPb8X/sOd8/En4
Mx+HH+lj5fYPT5Jm8Xa1qvjX8GyCU9Y/wCt8o/Ey3oz1Ls962AlL6JN47vBS
J8TG0LpoLwRNvd/VLcW/c+4+8WrxKjiED9Av8g3xPBd6g/fqy/Oeb8FisW/5
MlCs/jRYSa8fAbSZ4f1hs31GyvtErAg/ap8WeBQ/zddoPZ6+l28MXzttHO1j
fBS9Gl/Oe512wTlm087jFXBFn3rgjNg7zt1Du5oXz7wFZoZ3ULNVrFcfV/BV
qXcyF3sVepaGtuChbZVTko7vE97rKximXg3PQ7AenwLT5RbxFML9cs/RPneu
Ejipxgr8kL0fxm/i1aH3+G/0VDbOSDe9Fy+SP0u8A79kr3K8RbyJthxeU+OY
nH94O60vwZt4jT430fbx7Ie7nWWq3AXZOC+hz1t4d2Vjr0PPK2CPPepDn3hn
y2nhHWe/bepdzMS5G9DTq/AYXwOMTMWzdMBankH4mjYD2uSX41P55ogPDz22
xx78aehM4p05yLsfL+DdjQ/mx1kPM7/IOVK0brwLnqE18b2Uit8jfJdbvt/G
dJzF8H0Hwn3gG+B7UO4Usckwj5ZP285TS5+nxrZs/OZ1oVdiB+AE/rMeHLRu
htvETtE2wV1q3ylnyJ6r8Ses/6LdrtZcvkb+zbTWvLjHBHt9ZO9qPTwstpRW
Q1sjd7w9iuX1Z+PdCXeoh36DZz3vOlof7UqYNeuX4V+xnWGm1CvH75X/mb1G
h/PSx4ovpC2CZnwlvU/fVvEuVPOn8P+CNutZoZdyy/DFUGddQnsgG+t9IP9Z
vlIoFLuJN0C/8x9XvxUm873uLO/L+TAV72e4p+folfK+hFFyX83Ff86BJHqC
95twD/g+zcbZCTMUzhxmtzT8w+Q18u/At+fibLzNl8vE/u2F+WHO+Br41uET
1HuRtoP2Lu0N2pyCOJNhNq9DJ+0C7QvrOijgPRLuCxy3x1l8In8tfiwX5yrM
1yPO+au8tZ4T0/Geh/t+LRP/V8usv8/E73wGLwz3gbZbrcNqDpqZ90bEuxPu
UH9+/B7/A3hQ7uI=
           "]], 
          Polygon3DBox[{{2412, 129, 680, 2275, 2118, 2793}, {2496, 856, 775, 
           2129, 1890, 2454}, {2472, 816, 704, 2108, 2018, 2787}, {2594, 1320,
            1319, 2153, 1760, 2400}, {2441, 160, 1796, 2264, 892, 2600}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1Ql813Mcx/Hvro7V2rqIXJGRLqJjObYOSkQ6XYVoXbprq5wdJNeKyFEU
jTbJrVqO0DGLGqVaW9QcDw8eDyUJEZ5fHo+9/q/39/P9fL//37H/79ds6Li+
YxNCCBt8DE4JIUMezelczHNTQyji5aindqBGCOt4tXEaD6sZQp616+VBcnN5
f5I+/IyD+AWH8CsOo6hWCL9xD3v/Hvt4o9of8hH8GdepbVL7Sy7lo/w3CuR/
uIxDcggJSMQ84yTeb90KOVlOwWK5Bm/hmlwLtZGKOmirvy6noR7SkYH6aICG
aIT++hrzMdhqr2O5nJvwSj6O5/PxvI2b8gk4EduNT+KTcQrOt1czXqt+Kp+G
HXJzPh2Z2Gl8BhfzmTzQmhZ8FirUWnIrtEYb7FZry2fjHFQat+NzcR4GWd+e
S9Q7cCF35E7IQud4XLgg9uu9kC9CNnLQBY9b05W7oTsuxiXorb8HP28+W+4p
X86X8nXciy+LtdiLK+JY/Urug6uw19q+3C9eawyI5xyPG/vMVeNq+RpcG/fF
9RiMx8wNidmeN/CNuAkvqg/lm3ELhsXz0JPLwzECIzEK3+odzbdiDMbGa6N3
HI/HBEzEJCzQO5k/5Cmch3xMxTRMxxJzt8VjscftfAfuxF24GzMwM56/+Vk8
G/fgIevu5Tn4Qb6P58b7rO9+fgAPxj48jB/1FMQaz+N1PJ8fwaP4yXhBvEbx
/mEhnsCTeApPYxEW4xk8i16+awkvtXYpH+Dn4v2N/fIyPsiF/EK8zvH6WrOc
i7DMXDGv5pd4BV5GVz0r+RW8Ze5Vfptf41X8Or+BN+N8nEOuNaviXlgTj1lf
Ca/FO3gX7+H9eO74IN6XeH+t+4jXYwM2xnO3dhOX4mOUYXP8f9T7CX+KLdiK
cnyGz7EN2/EFdmAndqECu1GJHHtU8R58ia+wF/tQHY/fMyvHs3FMot8aeiPJ
mgE8EBXxuctZeiZzNyTH3whPQR56YhIm4rD+8TwBqfH3x9MwFYfMLbTPotqe
QfIItZFxb3RBf3xnPtG6UXIHtDHux6Xxmc4J5jLVhsu52Kyez3Xjc0g9W67i
HO6OPsjEUX3feEfU4Wr+GpaEXVwBhxQquQrlJvZwfJTPYa+PMItL1GezvzDD
xxrjmZwSz0v+PuW/R38okMtklzZk2NjXh3SO77POnIXGcho34pb26Cg3lFvI
7eUGcmu50F6tuL7xEHvmp/7/PvwXcNTiMw==
        "]], Line3DBox[CompressedData["
1:eJwl1VdwF1UUgPGFECEKKvqAZRgFy4xdkCqIDijFOgQ1CS0EVEqUqDM6Y+9l
RHywAY4aKQIKaOjSRAggAYOGgCIKARMSAoFQA5Hm74wPX75zzj33Znfv3f23
GpqXPrpBkiSl/lyMFuJBDZNkIM46O0nu5m/VO3I2BqMTGhvryumYYzwH7cQ5
GIImxhdYa6h4GO5CG/THAHRBH2QiC831t+U869zDt+ERxMWVYFpaktwr74bW
8pbWbsb3y7vjcfSS9+Q0a+XFXOzQV94oSSaLi1KSZBfKUYNKdMRI/dlchSHo
hKb4DrNwCX7DrzgPP2F5rGXNFbwSI6xREfcq/ppz+Xuub5Ik+3mkfBT2ibvq
XSdejwJ5Mf+C2eLLeDu24bi5dWpl4qPcw7ynxE+jCQbiK/Vj+i4S13GZ/ChP
5CfVHjUnjWdgJo4YW2nsMHeI/4lb9czhZjhmrNDYDvFBbsyZGCPO4lpuw8PM
qdf7rPgZzI81Yx/ET+B2/ImtmKe+hSeY+wcfkp8fz0JeK67hbvIVXMqbsFD9
cu6Oof5XkXwcxus5yAdQLZ7DO/X8gxx9zeO5qc3FZvHvsV/im7mt8Qzebd62
2DsciTOnNhp3xBkwlq9WydvjvKoNiLmYhmxrTOcWcT6MT8UyvYXyVXGm4tzG
c8fgeEf4Z7W9GCGu0FsjnolpuEVPFZerT493DcP17eEZ8R7EWTP2IzaI16qV
8EacE/ctn2RsUPw/tItzYc1C9Xniubg0ziI6qxdwf94Z+8Vl5rZXyxKvUpsv
XoDV4tVxFo1Xi9fEc+PH+Jt4b/VP4ZaxV3GGYp9iD+LsmtOZ/+Y1eh7Quzae
A87F0rgfXoYumCov17dUvASTxIvUxvML8vbmv8hb1Narfc495HdinfwD+QRe
LN8sXsQPmbNc7dqo8Wz1T8WfoFE8D/lH8Rz5Qy7ha/hL3qh/VqzDr6l1sNbr
nOAq9EFvXBn3omcT7hP301cqXoJ35e/gB/F71uolLubP4nrjfRen6x8b3wHx
YvUrxBti3+Vvi4v4Lb4w9lF8I+fHu2Lew3GPSEWBWm+1j8V947sbexf3y/nx
jcBf4ht4YjxffCFv6pYy9FX4Pu5CJaqwG9XYg72owT7sxyjr1/IBHMQhHMYR
HEUdcvUc4+Oox784gZM4hdM4gyTVHuptwA2RgkZIRYnru9p1nuFX+RWcju+L
/uL4PZH3RGuclL/ML6FVPFv5qejR+4b8TTTAZEzBTXE2jafEGnre5zFxHtW2
op/4QVyPE/Ln+TlcgEy/MeNcet9478QZfJ08Vzzcb9TC5P/f0f8AXQMP3Q==

        "]], 
       Line3DBox[{2606, 1302, 719, 906, 905, 788, 924, 923, 728, 1318, 727, 
        921, 922, 2672, 668, 789, 667, 913, 912, 808, 1000, 844, 807, 702, 
        729, 849, 2609, 1346, 1001, 1340, 926, 1332, 1002, 925, 1339, 996, 
        1347, 850, 2671, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
         1312, 1313, 1314, 2633, 1315, 1316, 1317, 848, 1295, 1296, 1297, 
        1298, 1299, 1300, 1301, 843, 2669, 1286, 1287, 1288, 911, 770, 720, 
        842, 2606}], 
       Line3DBox[{2608, 1294, 811, 2226, 919, 2194, 2615, 920, 726, 846, 
        2608}], Line3DBox[{1327, 883, 793, 938, 937, 819, 736, 778, 2300, 833,
         2301, 1327}], Line3DBox[{1331, 887, 661, 762, 1331}], 
       Line3DBox[{2195, 1338, 2303, 2674, 774, 987, 2673, 988, 670, 933, 
        2195}], Line3DBox[{1322, 1321, 1320, 1319, 884, 2216, 1326, 2244, 
        1325, 1324, 1323, 1322}], 
       Line3DBox[{2621, 1336, 1337, 2800, 2228, 934, 2302, 1333, 1334, 1335, 
        2621}], Line3DBox[{847, 1293, 2299, 1292, 2298, 2804, 1291, 1290, 
        1289, 2670, 847}], Line3DBox[{888, 1330, 1329, 1328, 888}], 
       Line3DBox[{1342, 790, 1003, 1341, 796, 798, 685, 1006, 1005, 1345, 
        1344, 1343, 1342}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2317, 2814, 2318, 2816, 2685, 2316, 2813, 2812, 2682, 2363, 
        2876, 2722, 2862, 2354, 2368, 2734, 2723, 2864, 2863, 2355, 2939, 
        2737, 2377, 2938, 2767, 2933, 2395, 2386, 2499, 2962, 2775, 2790, 
        2750, 2912, 2781, 2403, 2507, 2984, 2646}], 
       Line3DBox[{2319, 2684, 2815, 2683, 2847, 2705, 2839, 2838, 2338, 2878, 
        2730, 2914, 2753, 2380, 2744, 2936, 2935, 2740, 2374, 2893, 2736, 
        2895, 2894, 2375, 2391, 2940, 2397, 2597, 2937, 2431, 2542, 2432, 
        2413, 2957, 2603, 2587, 2602, 2534, 2586, 2637}], 
       Line3DBox[{2320, 2817, 2686, 2821, 2326, 2845, 2709, 2340, 2842, 2841, 
        2339, 2343, 2710, 2883, 2882, 2689, 2325, 2925, 2924, 2390, 2758, 
        2918, 2917, 2387, 2653}], 
       Line3DBox[{2357, 2867, 2356, 2872, 2702, 2836, 2327, 2690, 2880, 2370, 
        2892, 2891, 2718, 2858, 2719, 2879, 2367, 2896, 2717, 2856, 2716, 
        2857, 2405, 2512, 2418, 2463, 2797, 2985, 2644}], 
       Line3DBox[{2359, 2868, 2358, 2874, 2364, 2873, 2365, 2886, 2373, 2369, 
        2732, 2888, 2887, 2372, 2733, 2735, 2890, 2889, 2731, 2366, 2909, 
        2738, 2899, 2378, 2333, 2828, 2827, 2332, 2426, 2500, 2963, 2427, 
        2619}], Line3DBox[{2361, 2360, 2870, 2342, 2844, 2708, 2875, 2309, 
        2310, 2881, 2341, 2843, 2707, 2884, 2728, 2729, 2885, 2371, 2902, 
        2742, 2393, 2379, 2901, 2741, 2934, 2678, 2809, 2677, 2911, 2910, 
        2751, 2385, 2536, 2535, 2588, 2647}], 
       Line3DBox[{2407, 2467, 2488, 2489, 2420, 2630}], 
       Line3DBox[{2460, 2402, 2485, 2504, 2599, 2662}], 
       Line3DBox[{2471, 2576, 2493, 2671}], 
       Line3DBox[{2561, 2521, 2458, 2447, 2425, 2976, 2531, 2660}], 
       Line3DBox[{2562, 2528, 2448, 2473, 2789, 2527, 2474, 2526, 2953, 2788, 
        2449, 2503, 2626}], Line3DBox[{2624, 2563}], 
       Line3DBox[{2564, 2557, 2581, 2450, 2592, 2638}], 
       Line3DBox[{2566, 2558, 2573, 2510, 2442, 2629}], 
       Line3DBox[{2567, 2417, 2575, 2462, 2593, 2668}], 
       Line3DBox[{2568, 2466, 2487, 2669}], 
       Line3DBox[{2570, 2550, 2571, 2580, 2559, 2436, 2502, 2484, 2551, 2779, 
        2988, 2663}], 
       Line3DBox[{2572, 2560, 2438, 2437, 2348, 2523, 2952, 2522, 2634}], 
       Line3DBox[{2577, 2565, 2578, 2455, 2633}], 
       Line3DBox[{2605, 2416, 2687, 2959, 2771, 2399, 2944, 2945, 2769, 2943, 
        2768}], Line3DBox[{2607, 2469, 2971, 2443, 2516, 2406, 2774, 2954, 
        2334, 2831, 2680, 2314, 2861, 2353, 2897, 2898, 2376, 2724, 2865, 
        2866, 2700, 2833, 2336, 2832, 2335, 2869, 2725}], 
       Line3DBox[{2612, 2928, 2392, 2926, 2762, 2929, 2765, 2394, 2927, 2764, 
        2930, 2396, 2766, 2931, 2932, 2763, 2739, 2900, 2305, 2805, 2304, 
        2877, 2727, 2871, 2726, 2337, 2834, 2835, 2701, 2362}], 
       Line3DBox[{2616, 2525, 2973, 2446, 2960, 2776, 2757, 2955, 2428, 2755, 
        2743, 2903, 2312, 2808, 2676, 2916, 2715, 2853, 2307, 2807, 2308, 
        2851, 2714, 2345, 2850, 2712, 2848, 2711}], 
       Line3DBox[{2623, 2591, 2636}], 
       Line3DBox[{2625, 2479, 2589, 2987, 2389, 2921, 2760, 2383, 2908, 2749, 
        2761, 2922, 2759, 2919, 2388, 2920, 2752, 2323, 2324, 2913, 2328, 
        2822, 2691, 2840, 2706, 2846, 2704, 2837, 2703}], 
       Line3DBox[{2631, 2468, 2421, 2829, 2770, 2696, 2824, 2825, 2695, 2823, 
        2694, 2826, 2697}], Line3DBox[{2635, 2529, 2651}], 
       Line3DBox[{2640, 2791, 2946, 2401, 2748, 2907, 2382, 2947, 2322, 2819, 
        2820, 2688, 2381, 2905, 2906, 2747, 2746}], 
       Line3DBox[{2656, 2424, 2951, 2346, 2408, 2347, 2941, 2942, 2756, 2754, 
        2915, 2321, 2818, 2675, 2806, 2306, 2852, 2713, 2849, 2344, 2904, 
        2745}], Line3DBox[{2670, 2596, 2590, 2519, 2804}], 
       Line3DBox[{2673, 2552, 2445, 2674}], 
       Line3DBox[{2679, 2810, 2313, 2830, 2681, 2811, 2315, 2351, 2860, 2859, 
        2720, 2352, 2721, 2350, 2855, 2854, 2698, 2773, 2948, 2329, 2461, 
        2777, 2799}], Line3DBox[{2801, 2517, 2949, 2699, 2802}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1373, 2810, 1375, 1470, 2833, 1472, 1583, 2880, 1428, 1427, 
        1622, 2888, 1610, 1556, 2862, 1555, 1592, 1589, 2884, 1614, 2900, 
        1650, 1648, 1616, 1603, 1601, 2914, 1696, 1613, 2883, 1509, 1510, 
        1692, 2913, 1420, 1356, 2807, 1357, 1514, 1516, 2852, 1352, 1355, 
        1673, 2906, 1669, 1667}], 
       Line3DBox[{1387, 1389, 2830, 1466, 1570, 2866, 1473, 1471, 1582, 1612, 
        2892, 1629, 1623, 1621, 2887, 1619, 1560, 2864, 1562, 1617, 2885, 
        1591, 1590, 1659, 2932, 1730, 1647, 1649, 2936, 1664, 1422, 1423, 
        2882, 1508, 1507, 2920, 1693, 1694, 1709, 1524, 2853, 1415, 1351, 
        2806, 1354, 1672, 2905, 1670, 1671}], 
       Line3DBox[{1448, 1440, 2823, 1364, 1365, 2859, 1550, 1572, 1639, 2897, 
        1554, 1378, 1381, 1609, 2879, 1605, 1608, 2909, 1644, 1646, 2938, 
        1748, 1746, 2934, 1655, 1653, 1733, 2927, 1731, 1737, 1637, 2895, 
        1634, 1631, 1713, 2918, 1711, 1722, 1723, 1680, 2908, 1662, 2903, 
        1661, 1700, 2942, 1701, 1702, 2947, 1677, 1679, 1528, 1526, 2945, 
        1758, 1755}], 
       Line3DBox[{1464, 1815, 1814, 1446, 2824, 1445, 1807, 1386, 1792, 1384, 
        1809, 1453, 2854, 1539, 1467, 2831, 1382, 1379, 1542, 2856, 1460, 
        1455, 1812, 2828, 1457, 1683, 1838, 1954, 1687, 2042, 1834, 2962, 
        1950, 1685, 1689, 2911, 1371, 1369, 1739, 1729, 2926, 1728, 1727, 
        2940, 2097, 2197}], 
       Line3DBox[{1482, 1426, 1407, 2817, 1400, 2815, 1398, 1401, 1476, 2835, 
        1474, 1584, 2870, 1395, 2814, 1396, 1404, 1579}], 
       Line3DBox[{1512, 1506, 1483, 2837, 1425, 2821, 1406, 1399, 1397, 2847, 
        1489, 1486, 1511, 1475, 2834, 1477, 1598, 1503, 2844, 1501, 1402, 
        2816, 1403, 2868, 1578, 1575, 1577}], 
       Line3DBox[{1580, 2869, 1564, 1567, 2872, 1481, 1479, 1596, 2873, 1594, 
        1391, 2812, 1394, 1359, 1358, 2881, 1585, 1587, 2877, 1599, 1484, 
        2838, 1487, 1410, 1413, 1495, 2842, 1497, 1492, 2840, 1430, 1432, 
        1518, 2850, 1519, 2904, 1665}], 
       Line3DBox[{1666, 1520, 1513, 2848, 1505, 2846, 1490, 1493, 1504, 2845, 
        1412, 1411, 1488, 2839, 1485, 1600, 1588, 2871, 1586, 1597, 2875, 
        1502, 1500, 1393, 2813, 1392, 1595, 1593, 2874, 1574, 2867, 1576, 
        1568, 1565, 1581}], 
       Line3DBox[{1668, 1522, 1517, 2849, 1515, 2851, 1521, 1431, 2822, 1429, 
        1491, 1496, 2841, 1494, 1695, 1602, 2878, 1604, 1348, 2805, 1349, 
        1615, 1498, 2843, 1499, 2876, 1558, 1557, 1611, 1620, 2886, 1478, 
        2836, 1480, 1566, 1563, 1469, 2832, 1376, 1374}], 
       Line3DBox[{1753, 1858, 1754, 2944, 1525, 1527, 1678, 2907, 1532, 1824, 
        1531, 2941, 1699, 1698, 1839, 2955, 1705, 1868, 2085, 1538, 1942, 
        1828, 1536, 1718, 2921, 1842, 1721, 1710, 2917, 1712, 1630, 1633, 
        2894, 1636, 1736, 2929, 1740, 1370, 2809, 1372, 1745, 2933, 1747, 
        1645, 2899, 1643, 1462, 1461, 1543, 2896, 1380, 1377, 2861, 1552, 
        1553, 1540, 2855, 1362, 1363, 1441, 2825, 1447, 1776}], 
       Line3DBox[{1757, 1751, 1675, 1417, 2820, 1419, 1353, 1350, 2818, 1414, 
        1523, 2916, 1708, 1743, 1725, 1715, 2919, 1717, 2925, 1424, 1421, 
        1663, 2935, 1651, 1652, 1741, 2931, 1658, 1657, 1660, 2902, 1561, 
        2863, 1559, 1618, 1625, 2890, 1627, 1628, 2891, 1546, 1549, 1571, 
        2865, 1569, 1465, 1388, 2811, 1390, 1452, 1450}], 
       Line3DBox[{1763, 1969, 1968, 1886, 2240}], 
       Line3DBox[{1764, 2080, 1865, 1970, 1864, 2079, 2078, 1900, 1889, 1361, 
        2020, 2952, 2019, 1910, 2209}], 
       Line3DBox[{1879, 1818, 1937, 1936, 1908, 1872, 1977, 1978, 2217}], 
       Line3DBox[{1893, 2015, 2014, 1765, 1793, 1929, 1794, 1405, 2829, 1773, 
        1806, 1385, 1791, 1383, 2948, 1808, 1768, 1439, 1443, 2954, 1829, 
        1544, 1830, 2857, 1541, 1459, 1454, 1811, 2827, 1456, 1682, 1837, 
        1953, 2912, 1686, 2041, 1833, 1949, 1684, 1688, 2910, 1690, 2043, 
        1836, 1952, 1691, 2928, 1735, 1956, 2119, 2174, 1884, 2937, 1846, 
        2099, 1925, 2274}], Line3DBox[{2188, 1926, 2283}], 
       Line3DBox[{2189, 2123, 1860, 2282}], 
       Line3DBox[{2191, 1989, 2136, 2248}], 
       Line3DBox[{2192, 1805, 1804, 1875, 2250}], 
       Line3DBox[{2193, 2160, 2259}], Line3DBox[{2195, 2164, 2303}], 
       Line3DBox[{2196, 2025, 1911, 1825, 2973, 2024, 2023, 2137, 1749, 1719, 
        2277}], Line3DBox[{2198, 2957, 2173, 1897, 2056, 1785, 2068, 2067, 
        1855, 2177, 2273}], 
       Line3DBox[{2199, 2065, 1923, 1851, 2988, 1885, 2066, 2176, 2102, 1901, 
        2088, 2182, 2202}], Line3DBox[{2203, 2184, 2290}], 
       Line3DBox[{2205, 1932, 1874, 2220}], 
       Line3DBox[{2208, 1821, 2109, 2081, 2242}], 
       Line3DBox[{2212, 1947, 1946, 1831, 2976, 2131, 1870, 1533, 1939, 
        2288}], Line3DBox[{2213, 1917, 2234}], 
       Line3DBox[{2215, 1962, 2121, 2987, 2110, 2052, 1779, 1827, 1941, 1537, 
        2084, 2960, 1867, 1704, 1530, 1822, 1938, 1823, 2951, 1529, 1861, 
        2074, 1862, 1761, 1871, 2134, 2092, 2946, 2091, 1759, 2124, 1766, 
        1408, 2959, 1788, 1857, 1752}], 
       Line3DBox[{2218, 1979, 2984, 2155, 1433, 2265}], 
       Line3DBox[{2222, 2139, 2256}], 
       Line3DBox[{2229, 2026, 2953, 2027, 1881, 1535, 2232}], 
       Line3DBox[{2230, 2029, 2028, 1777, 2030, 2031, 2231}], 
       Line3DBox[{2235, 1919, 1951, 2963, 1835, 1878, 2260}], 
       Line3DBox[{2246, 2003, 2949, 1463, 2247}], 
       Line3DBox[{2254, 1769, 2157, 1905, 1803, 1876, 2971, 2005, 2006, 2106, 
        1991, 1992, 1771, 1800, 1799, 1986, 2985, 2156, 1770, 2255}], 
       Line3DBox[{2262, 1795, 1931, 2144, 2263}], 
       Line3DBox[{2266, 2142, 2045, 2169, 2267}], 
       Line3DBox[{2272, 2148, 1943, 2211}], 
       Line3DBox[{2286, 2181, 1927, 1762}], Line3DBox[{2298, 2162, 2299}], 
       Line3DBox[{2300, 2143, 2301}], 
       Line3DBox[{1449, 2826, 1451, 1545, 2860, 1551, 1573, 1640, 2898, 1641, 
        1548, 2858, 1547, 1606, 1607, 2889, 1624, 1626, 1642, 2939, 1656, 
        2901, 1654, 1734, 1732, 2930, 1738, 1638, 1635, 2893, 1632, 1726, 
        2924, 1716, 1714, 2922, 1724, 1742, 1707, 1368, 2808, 1367, 2915, 
        1697, 1703, 1418, 2819, 1416, 1674, 1750, 2943, 1756}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
D9O6i+S5zX3e/Fv1pxu11gJlvltY0Ll4Nvt/ef97lcpS+bheJBIR3laR81AN
Ldd1Cjcs4AGj/mDLd0J9ZZ/XFaR2YR9KufQ0bYYQv8qZu61i7qqi7Iuqi/vW
azBi8ctS/xvnG7/Ko1/Ffr80HSRqnHIxsXnuLkZw5V/m7S6uJdd8ncjrzPSe
4v9yPd2Mz14iv+xWsopxxu2PRjfzRfn0Kv7o19dc0frCngr0+vzJSfu6F8By
97ir1aPN9UmgSlJ4FIZFcvsE7io+zkHBAsNM0dUdm7b/nLhP7D1fJ6InzhAw
sMQCu5j53ZbP+cA/3PbG5GwWkrupy6483Qv0OknafEvjsBhq1do0UISoa4lf
eeyKhEO9zg+uBv++eYw6NPvxUH8JEF2oURsn8UJn2Jb1P7vjgdTg1sMUih64
JrBvmUgmAKmrSt1YnJ8Ap3vv33Y4FUMgW+7Nb5QuKDKCS0X1L/Q5xL2nuuRu
ESKO7Nd7MBABZ2VkJLZG/Lr+Jm6XZUzsfKGTvY6tVLoM3IS2Kcfa/rqc/eci
1GjO5AKu9unOlze/oq2B9Jwfnv3n99fJGhYOlPc8kducog/PiXuwYi6Ei/iL
dYSI+qRvVb5UzmkVojsYTe9z/+QtfPccncynMNnkBzWL+j6JPpiY/LfqHOMH
cje1Lt5BFL57YdieFtTXJDwW/0JOm843lYjpQiRqqsjOVO8EeVQUzi6Jv88P
8+1X3j0l1kQ5n8yjNHSpUbtT5uryH/qo45W0fPIo8VaMZczbN/Ikzd570Hni
IGS081H6NLRiFA8c/K33Mib6tR+fCH+CenU2p3h1S7Sj2mfNewAPVryegFFs
gaQR86Jvip6I977ipY6/qn9O8duKtrfkqQzF70oW5fj5jouIjbi0VhuVatuZ
7qWnQdv8bJ/9uKejzqL1O6HVh/LnZtI/+wYgmbTBKL6Ozc+B13j3mMzey0Xn
ClbiD6SYIBMT/PyXL5vbgdy51ZkYqwH7bqbkGjAeRt8eJGz5ce/w9ax/80fJ
ZnSY+6hVlrkXEpG4WvBmjTCuXk9O2sPJ+TsH1z1BYuvGefVFgfmv96YqgFS7
PfxrgCU6O/dgR73277O/rPPbF9HkCD45knk3fn6I1mldA82LN5fPl4eZGRQb
g7dSx+59vuaMWKirPvBGDfw2fXKlBtrP9/chtIXDurYvFGlUh3gL2Y9DJd3B
rsFmH5T3mSND8LAMSuSKkj9KiOtLbxSuG1yfQL5vDtiECYQgw4xjz1NDeoEj
OuT+YngQkupf8hubuY7WM8xcFH5j3ZL2fPKZjNs4yhTYzviRLRHt5dz7oRD1
/cfzm26ch7rFPUFIfDz1wppnDmMlfbXxRzwOavFrJ7nj4GjV7WsYfQekXaB8
S9Ki9ZflC3LUkHH24CFPy48j8VUcRPXc8/p4OfW36X9RNL/7xYsBdKzrUjSW
wRrF1h2AA7fHwPZGzqeRhgHkcOb4vuotvsh07u67Kwc3v8fcjO8J17GxvPUF
yhgXOqu3GaALrR2lOfhJOBLZWHcgoQ/yXLbtM8o3Q7KOhRaB8eMgkppYjI9h
gnFWaQuXjE6MuMzh5d+Z38QXbk0eP30X5Zd37DvidwgE2dpl/jjPLOrPCJ5V
TllX2y8owvb01L+Ss1hfcYmLYgS0r6xqFWiXwev1e4O6FkNgoZf9GM/Wh5Yd
iq8yDJUg90+PZyJtx2F9vWfUhF8JQ6LwYcjCfI/oP9+vEhGRJKtKQ36arGPW
vAB+41yCdF7j/L6bHzGlOunM27T1RBm+/9l+VwVj8D03DCanjkbYbP256N3S
P7mw3yWVxUkvlPyawWoh+jpQ7WQ7b0SIx0jdqC7fljXMFzmO+v0jhaKUwiX/
6JcutF+6KOuNiMUpt6y9Z//VeH8Xv0b1fDzZsh9Cdl8p3h8+iAq4XZ92be0F
edcrXK0WbVBHLBS4x7wDPTW7rS40/ev+tilXpYtu6fdEk8eOBozvk4bFFdu4
gL+oQxwebonxqu9FXsuG8U2xNbCn6qOpvcSv30v+KvfxEfE9k98NjmkX6lId
ghAFW+NeOorNz52C5guvVVJ1QpuSOWNhoDuaF/kko1r46+dUv8pfrU1mZeR2
QNut7z4WTyrhAcVTcVKmzftl5F8bCuEg5IG6eNPs76XAdyEsv8fs/979zt/8
3+N6CYW0KWK96FHnM+/K3I/w/Jna0yL733ef0r7X6gHZU3+U3t6Uz5VxH8J6
bK88WsX/190P2p/yEa5yboauqdHSksBgKDFSoe6cxIFo78kyuqtFcEmV+XKV
2TvIWxOhr43FAy1J2KReKh4ZSuXv3KMUiZBleRMTKvjlfr8tB9y/PIJDImEm
mFtq9mDWe/10dlkzROln+GtqDSG3ibvklBP2oHpV7XxE7QhBji1jx3VmzDHf
689a7rX9PDd4JXInvWNb+guNjzpqrvK8/+RdTR0zJCkjKIQl2genVYy2kkip
8n0f/G12q09/PL6Xxwp5l91yvRQvAWSZfPgf7z/DNRtZLqdhMTs+VqjNbE0T
dSf99sc6xV4kLOLNaIL6HYe4DPaKw/S1nns/3t01mreQKfePYWr3LRU+GEgW
FXz6/S/3g373bYTscVWgf/o0OsAdCGdJzGiyLhD2Ncl22cMU1KhoMKoozdML
Myq29sf7AcVRmdK8FGbUv3xbrar8Dcb49dQf7yIevK1JXFvHI2MV+vvhMlIo
5YH8xTFuWWhaP0G9lmyHcScr9miTns9P/cf6PrvAr3mJDYs4idruTBLFwAu+
kAp+qW4g+pJIwsJPnNXE63x6n4HMxv0Lka2nJTl7UL7bI7oXT4R/ftdDJHdg
eS2TKZ+8yrx1Xffhz3MzdpP93ZIh2SVHP8o02y5srOMPiZu/5S7iUVJRmfOg
tQZk4Li/XF4Ph9hmvxkN512oiSyuiPybLUZ54tafdivIijj4cCa/rdGuT8dM
c6Pfnfr0r8C0B1nHdnNdexyJuhMu0jU3TYBqM4ZNPXkc5b3F7y6IVUS79Vz2
JUYT6u0Q88MU0rSZygWGlcvydv/jPmjxUHaH16c9D8RHSrB4vg0ecj+67Qhr
zqnth9W/Mrqf+9l+E786ElIQ67oHQ14gMSt4zf6nP4uFdCkz6H2qd8A9wX8r
2pC/kvTwYUPVHcyWV/Z7bAUy8pfW/8U5m9yxDwtCK7k5YnpO3Q9vC/3U56V9
Rbtr/lGm6XHN/rWNOo1ub+kVfPYcZk3uZrOztCZGMKvnH/JtRN80x+Q3SVdO
fCBm2rBnGI3AkYwRfdT/ICdM37UDY0A/O/3jvPqc1QNDM50eRHrllZ8klxqy
jFBpohmYgLTJXv/vxTj0bNu0wv7tL2CO/PXSReuWzfUvYNVN0mrIJ9158XiU
hdhP+xTcdfDD7E/HNZBMDd3T3oh3ItsdrmKvzPIkszQ7GyNHNt5bEvVejRH1
Lcvv7rvgQHqW46cfijFnUbhish7f2y8SRXf0Z90YQrSVfDY5J6wbxXKzsm28
f9C/TfmcWNoTkeUo1jxNpwbasrGgFELd1fr8FZeITTC62qDVitGVhN768suM
P/aDtp3PWv1T877FJzPH9R7d8PPL21cQU1gKRqRv5mNk5bd8T+yf8yitZf10
bfUUKuUfOToXHolJFJrF/eDXo18xBHlRI21f7d3nv3pgevlxf8T1NlqHomsU
VGiFjXKP5GNnzNcpyj/ny/CYe5fr+bwMn88e36Rf/rQDkQYmrTEyX2BNcvtt
lp/zSFTSlk1v5pN39tno59m2ip/tky96sroH5NEk33E/8675Jxcr5BlJOYip
RukiU8FGP+VoWm5TrOXD2KcMj1Wd8/7Jqb9LkoI0pujmqYI3Eu83uLzaVYXA
IjzmzuvnOroeTzA0IlN/6M8h6Z8jafwaMVZErx31XcAwRD+kVv8xLjOLOWxG
fca35cH39xIZNuLxfiV37dfrtBgDLs9j6dRvfva7yb0wkVxMAMUOi2x7nY7D
7pFlP+ddTG3K82lFdg9T9BWGZKaf8Vtw9Wp0OGk2k+r35zS59zbaX8hriz2V
OoNx8Yz8dtPxhejKsfG/jMenhWITc4R8e4towM7h4120vLjz7GN9uV9fj2y7
ktg6afPpx+65m1zx24hfIuopO2513bxwOf2XdjWff8Z7SD6RDYd0/k6arZaZ
Oak/22+SB4jovBZVlvvzVfwhaW/t/4g7sZibJeL7MGjVMP66RsAGt/1i07JA
NZd7LMeiifvd4ka8EPUKm66Ne376LP69PzBg4GeeLOh+zuVSlxvwrjR39iX/
Tz0NhUmGzCpzR56e5SCp4tzgJgn46qmDw+hQQorsxPYaeDi1FC1EPgzTLIde
9rXwIC5FN7VAl15M+fuqsR/2Z4sfWSU9G44Ce16eC6G6iWbFPd8K/PF+w13v
HW13bkRm31lOV/v/kQ//z3Z2XwdBPplXmMKZNqYptQui+v/It0fu9o4+cnBA
tOUdVpyvzqHuOVJyVwKnL2oPfs0ziEbJunoVekMRmDYwRlaPwn7ji0FLjpPo
yTqrcHRUMmpJIq2/kPfjnSF16/BNGYzP+VNhXIk7/uX3bjmK29YpuWvRY+1O
zo48J1QwXEZ1nw4PS4fVs3OImtEdHgkZ0weeSMhBPl2UbBL2sR++3XYqD51X
UnGvOGyC+MkWz9DU4qHybV2iTk4JitgrZTq//hyd/6QXFuaFh1NL+1x8ggwR
Y716zfoME/LND8+cJIyL+5qM0/hbY2Ru5NHzdcsxpHBuherHdzGVST7b1jo+
oKid7PqGznLIpJqVw/4vz8HM9j+k3okJU/qedON2wb9973Pahmmo8ek3zJO9
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
6Vi2wNHgv/d+dj0cI8R8italC7TSv1zJ54mBS4oHVnnV1t+v+tmCIPLATphV
vyRk6vYQXFJXpTehv7e/PFL+FnjSHrjjUcjUI2yNgtpicyQ3TsIgSSwFr3An
FNInbqhnt0QDJ7/IHWqehPOvU5e0t+aDfOUUit+kgzKnzvS9/E1+nuol5VTY
9QY4BzVEPX2vIa76rFBGtr+XD7Sf4bZy31oGrfSuCfduGqN5kzsmFPl4UO1g
VsqU7YH7A/Zbtdo9kIGayEjw5wmg3EuZK6XWBcapGw8+5PVER5T24PT0/lyf
RQofp07xdgNX3B4KFxJv9O1MNLPuiUl4+/raPfYNg6CaQnO+bMMDlGhtdVJ9
9/rnnTM9Z3k/Sx/4bW7ZWRsYgE5hqTHCwhOQmX85tsJnALIuH8ncWRSELr2c
FgrQW5/PovvIquvbQVgqD/vOtBKCXhdPiKk/GIOue2yd7qTD8PDEsedzTGHo
S3eKxejsKDiWdUvjngxBppT0KYOkcMS642LRJam/ly+th5vn8ofRN7eAPqNM
mYRwHfJ7cJzOlWBXYc/0mfyayqD2OdfhmO+d6O33IZ9jqpOQo79fs9K4GDZS
LfRl3nqLSPQ7I/10/ny/Uqr1xQ/rvgf9DS3e5k9rYTWpDj909d+/3lVDQyz5
1W5g7y53ejYTCcXhY46bOSch642RbVtrF+wxS2rPk4sBtoU5r2rxP1/Xdema
aAE9PAyTOFyicvSEpqJs7vNf1+/DnNp4+PLB2DgkdKwgUDpKHhoSlC0CfvOf
miVXZ3DHJB5sqrbKbeqLhv6k8buP2TL+6+LLenjSSXm3aEIcPkZjlP6acH+5
QM8zfc/mJVwaDKdLJeDjkjJ1DLmZMPUYX37D6iW4y7e8433WBsVfsov1NczA
MOtVyaLMFIwWlRacNG6BveRdeKpT+miATKvBJ3H9uOwWYbKq/CYb7kdxtGvZ
PUMqTWkMUYQ8R5OZRGhR6Bt2v8y7R15J3ChUduuP/3D37DqF+XLmO/ae4WfP
F2P70dCxhz/mHZ9s/UqzrHwO4nAZp7R3q0FawVsv4n9eJ6Ov3y2hMobmC5ZR
Q+0mQKrz1pDYv3fXxddoo4A2WJiRhuH0roFg9+U9xP+4+/r2nt372hprd8Of
vKIiHMf4T78antTXF+rlrLFLmh32K8VhOIXV338Xl1m4653flCdEDR+cdTth
AZdjH7RdI9AvBQ4d5tQsErlA/8G8Tqd0rT+JMMmMzrtH57G+LmQiMkf5175j
Nw+lWLy5mQTDcJtN6yvnyhq9XrWN5eZlBqw33V7YPS+wRp/vnsL2zJ0Em1Sp
7usbfGgNF91f+NlfdgTDaflpJHD0V39gM22HGKHbAqCgPBhnBbZoybyas4cg
p58533t6GhF4vHAnwXrDHah7/lmE+N9iPovrNRqOWxCo/7yUetQE9ub7lhP/
R8NUuvSdD7gFUsPnGS3t9OER3LEdJ+BeZvxpZlsN4f2mrrqCcFMkfMn0DVH/
paWGzPsWrsJ12mqaZ4mmyMj/RCMRP1HNPHTJRwPE7vAl1mcmwuhOirS4BTyU
RD+1pJz9hJu57jn56VwQmKjf22hAyFe9nTiqzDkdMYfEBZTuuvzqg6GUdazo
7oWLgM2TqqhuMUMHLLZ+J8pj9Ua0guslNzzZr9Q6rfcZN23G8uVfed+aEKX/
pni7JqTeHZ6nOX8MkQnryhDtzR77LJCvgxtsJtCLyf5N6IBE0Gci/4vvpn0X
/QawZW2BmA0rWTihmJ/95VRMN9MNRzaLROpR1DZ49qzt79Q9D85PLh0im0mU
2T94/uqjKJlCebqnZgDLW3LHse/ADqQp3f7jPXLb4Rtp91fOwACXaNFSngkq
wC4WfiHgxyINfE/oWkOxzaOyxaog6POffs5H0BvDJf7vUQZGcHLbleDETx7Q
LrInxJtA36XAY3jncSo2X7Ct5PWzJtzm/p//9c8Op0fdljXCzl20D3fABeAe
/9M/XLIxbEMlgT9mwjv4TnUQxD4gCSPyPyFuo/iOVAhcj2mle0XIQoDWR34i
/VM7oXc7bM6D5S0ezwZFHQjuz+gnfrdpVtkV7/U1E3xXCkQbwx9Ar8PSLU6C
PyWjHjlw0yUZcCxSc0on/WDQ0dIgZQ4PY01N13e2n0bT0RzXM/3wWPU30y2/
20fWjSexCaW22FOe5jV0Q2dxXf/098i/5n2UhZEZ40S7T8T+zfY1+4m0vT+N
+5yO8TvZgxnPD1vDvXubElp0OjBWC5ZzHyXqftFnPaJ28T+JfWX59NSWq7Jr
50slxZ2B7kYaVsREXjA8ogi3p/rnc1lufDaROn4ckxOi3VMtLLHGx9f4uQe7
/EaMy5bFG2e+7/rVD9Pl1OXuI/4Y3K2qgxu2pKzhnwauRV3A22FMH4Q558qF
/+qjLjvXeNpNG0tefCD5Uf9d3N1/1uteakJeO+WNNf+gzfjUrQQ3X/NPfx4X
Hrj5MQsrZrJ0l97sA+4t5cLPfhF0+8Zbk7mw7bFvLH03iq2ty5u6/rIf9SNM
1bB4eJhq6tpzLz7ZxpjlFINRfY0kTqX/6n/iSpfqJvFQAzuNeeBG2aa21g+n
Jfrd5/pvSthtqzE7jqieWeu3Y/2teq+RlAiWkVH30SHVX/27dvtWDB7ra8UE
Rhxvn+/+1Y9FZxIb5hrpgSmyejgecfbBGu5GVfxpKSwf27EUKbxloBHH8489
i8iwq3mcHMPIB85qPS2aW6MvZCLh625PxDyzEy1AZb/6HV3EzIv4uYuDbQ1V
Qg9TACBLi70FBDu39e4rpJ28Bq5+BkHFxUHQKWTGKUvAxbdr03/gQpgLdMn0
R17/0sPkPoFd3YNZWCm27O1653JxOm9+rlfIGZqsLrRjE9vD447FluMqB3/2
lXpNYTQQV/0Jqz2UckXo+izOIKTnB17TuaWYLlsFrMm2jZep+SPWCv+4GcJz
x60aJbmnAKZI0u/EMYpBiqKUDZG+jz38nVnPHSAJ2xtFzWkGb45QbCwg4NuM
V16yZ2iiVKeZi2RbEpFTEL0v7W/+f2FpsLWgWU6C5q4N19KMXFH7GeZwi3mC
X+XJEZpcugleBqRYvpiziIvL7QyxXyi37upgYEAWOHexFo9+yocysXJz5yo8
8GG8hc6uWgD2jHDs4dQboAJkrsR+CGd38+mNjlvBJYPjFt7Tjqgcf0Yuk4Bf
viMc2i8ZBaXP0muzomMBd+7cVn/Cc+2aTK3MZQLAiUdQn/6ZNQTHYrWCCHqg
Qh/257e7w3Xbl+2fl52QvJN0vC6BD29yzIe0+HfYoH2lHU3yX3BfYj7+0Kcc
xY6nqsPiMOQzzo27poLKawV4iP839fZSw2TuN6z54Li9ouRX3ChV0g/61Sih
+1WJJyB+A5MbtbsS+sISlk+kb4lK0TBsSQRasdeGtQcLkVFxdXxv0/r6FJrF
dVKlxIHfM6vRquuuwOwQPiD+mzzTUbXc+OmHXOAJDSXdthAA72luSz0cwEOq
zbCcScZJ5Ewl23ttcTc64Tv84z9KPs3r7srZBSBw0ONj0SVXhJdpi3foWp//
Nz21RCE5TehSTn5y8NE+ZDF1UJIY18weceSK6R6DLK4vMXVmC7gPnQw/+ttU
JyiKyhxjLum6nUFTUOy3FqfETB43OimnwIamhxpP3vuBkdBF2uXZf399m+R4
Z4tsaCo40jD0UGxLg72Y0cro0T9/brPqjYtds62wXYgyLF8nCrQ7TSxe6U+B
kpMgj6JzFFJqGq/1TFBHnMX7c7RWCHHts5abyu0kUNn8RfCssA6qt2HOYfpN
vxT3u6lt++6Oo8zmB7cuWMYgd/VK3Mq5AUC5Z1W0A0iANWcrw+zWMtxlz6x/
6f8Lag3sM4qrr4DlfZIIv6o7pHkJT1HG4mHSo/zbDMFfiNrs9Q3MlgQ5Z5/U
WcJ52bSTvHfr5wjYzsxu9OXGBaQsR0FXQFjXF6k3rVIWg+BwgOwkO+0jxOzG
X0rZMgaiJskLyg0JYEamZj1ZbAK9wm4tPP/Cf3OOTDm7MjjTAPFaqZzRSQDD
0GFDNkLcxx7eq03I4uESm7lAbF08HO27c0d/8u/Zz2PDzls2G+0QvzPbLAqT
gcbsEUVi/9UmnlhRSxlAZ0wp5FrVv2BHZ0rLf/QLvWrD+mafZwk1znBXbM1p
zL/63PXw/CssmY/fjKHNLsdvaPHEo4QcRJ5qNggnV53bmC80Aa9kvsNckQUq
L2zKuD69/n1qp//+GE6dj+jVxl4pL7My9HZ2QYzeeAQEl6QbsmabkLKlvNuJ
5TJUjDm665vnFHQyJua+ejOP6wohybG5m4vdZ9f7w94mIoOmI8zI0Jtb8t3t
R6uxJzc//oGHmEVSGQcOIRfd4PKBlABYXCjVD1f4BIcqpQ0iOpNRZauH5JtP
d8Ej5V7D4G/e7/wtPDjT64JM9ig6wGdy/8H9dDSszyWVKv4vzKtKEZ5RTRfA
CSv0eTFoff4f9/fcLWFjs0IRpLh199RZSQ4kd7uy+kefMSHT+u8cp+C+BYZz
59NFnMJjsx4iXnAaC+VhBcjva9ieITFLZGZ7WOA7wQ/PzGnONJDVwA5yhvnv
i/YouMZul/ytP9fbqIPHwvXdCKWU76b23+WMpsznd1O/wkOnWb6aUf4j9GIf
SdN+XknUUqKbWkk476yJ5krbUk7Bo3f+WkZvZnHb2t//iBcX5nZa04aPw3Ue
/m/WIp7I3SfkdC/vwLrPvRytejBx2xC6TXaX5omqPRIhnd7Ckbd+vUjJkN16
5PAOxObT6C56qxX7ur7zx/1l2vgtrmW/HxKVEN/w+oA8vKRP8N32/+H7+Qvs
pNm1RzuBnarhDFlcLVw/LH69jOPf/14gyfViwZBoEmLBxHFtVLaBC1tPHmUn
xIs9kbWbJaxsUdopNn6VaoDyriyd7t/oYaOr7/+p7sujqf66uEsoJCmiqCgy
FpIQ924i81yJJBQyZSYqmSVDmco8RAjJnIh7DJGpwZyhwTyEm0Rkeu+lh7Xe
tbTW86zfs573/fez9jrf891nn3P2Pmef/eEcrBhAzlbkAz4tKUjKRfA2pfkQ
RL5UTVryD0fUmN/1tsZKKFpCNKtlkTCvF0O3ffMaQqLJxx1tJ6IRtWVSo+3z
gX/svywUsr33Tw2gJ3wBkQHXg5G6tUqQjezQ/+xcy+m9HaV2sQskNiaMzYuf
QzTep7jfEPS5XO642BadA0Jm6WllTMaot7ZAL3hsYz2XbunWvMvxCBXeFHEZ
vGYMTgd1ZakJ86i8dTAgPrgfvWcjb1ULCgVBP+qeB+7DUHKXka+A3QVZHQu8
w8chDUFnJNzr/gN7ZpxMuxW+txiqM6afRHe6I89L5Hs2/aU+zEb4kLUJPPC8
h+oEJKVxnhKI5WzDwqW/9KfHa6SRg9kG8GePUGv7CyNfLtXg8X9wPh4r4OsN
uGMLkVP2LnuLuNAhoYWwUUL7jAcLDENoGqBeUEjthcU1xI1ju50tsvF3Udkt
CtoveFhwydTPuZ8Bb90mXr08l7uh/HHXUZu0RZ/Sr/wRZFk9Ymvr/HCJZNjC
mZfohAkmpyrfAHYrP07a1UVYn2fzdL9tKUARlVvmrxtdhsLNx9k0+zfuj9dP
RRJKriowCUx036rjgyKqrbB19/EQy71HmYoiCDEmj1QdJFWBomszs4sE++le
cC//xuaFYj7fMHbtPA2RiTOCxHdhxfqfBG4cOFVKn2RSo0A7LP6v9kNPb51Q
VemFH9yeu1/b9CAtXpe2KzF9G/ZHSdo4giqoFnl10Cn7MpoDCdWPyfGL//44
dmF79Z5Z3QAHLaXey9U9cM7Sk/5D9Cgsq/S9eideBa0Mgo942ULRKzmD/k2B
eKD9GbAY8eI12JClGipPhaBwAUbd6P9hXr1Nq2nGc65nwHFchb7v8BNQtdQ3
h3/Qn/xv47jkyHaLrEpc/txwgAm7H9YhbvXc4PYUhWWcVyPSX/ZY6B8OBQNf
h5e+VRPwMkuW/FHoJ9Dk69dPKEuBUo1RhYQL//17W7XZLey341PR0A32Uok+
L5jUsbHqmMGDacfNmLbL6sjoocKb5iASZMYz0UiMlzkvPTy8qUwd/VabzJQI
YgHdByllRHyPl04ti5J66YfZUE6qb6Rr8xTTaSuhrjNaKNE6nDnKdlb4X/iN
HroQlVebi5KkUre7q+qJ/AvXiT8SnVI+gjTelGcN7HQFauviB5MLvTDoyfDU
HlHhDH3uykRX3F5rP07ublZ0XR0qiu+O6jbzQbzyb6mpFPAQed/6CBMmrHTs
Sulj15dUa+c5KjGsy+ZPv5c29Y7uflanu4ZXzG499Kw7G3ekLun5o9NcOLGJ
v98XPG2JVajVMihR9twvxnW0RuxfuFCGNV9JWguOMj+O7X1iNJZGY/X8aghv
6M/tefdFt4/ir+CsMaF/yVOitBdmm7TQ4jMNVQo5ClRxUAkt/uW7VBG3PNNY
niMt0QzyW/zGqKH7gUP1JB56SlqXHG72I5qnssc6c33Q5t/4HJFHw7D7JCbn
eD83qi3mO3qNPxbXaJT3k9ifEGGN7K8OPchseDx2LjIR6X6v4oqu2zif8JKt
E2O8xhechqHFD4UfT7Db2FZ5GXZTRQ1HT6WijuKf2+LYvGFnAQl7xF/eC/9T
OJeoUrhhWRqS1p9xqpHqBycxaZOYF8Nw6+X5x63RReDa+BN/gLwV6k+mp3ZT
TwCvzbL+mH01hBL6nXQjFL1X9AYrVzyIcD68Iba/EQaqbNRYr1eASFdWJ73L
BKSTzsqLEfYpJbHoWnOvDKhQLJngl8mFS0ydFZ0ns2H20e33j7o/QpGwbvUb
s3HQFWG6QmlVieiFo7mXnycCnBVe9IjGg9uNeUXKE7WI37tKlX23N4qtGijh
0/v39aP49Lyr92c8YD51H7cIy4DNSkrFXfdz4VHXkf6TX9PAPvcV/8Nrz9Cp
rPpDg385P7mT3FVV4hmM/MLdFpjeakLGK3O++v/gvcA1yZ4T+cpe0MZrqFp7
6yu4ZrVf33P9Gxzr9n6eq1MIPQKqtJ5U1UAS0zky8Jd6R2cg+0Tgrjaothzr
n1KIh2be8SxVso3j5cOvXU+dDpgAQaW96Wx9HshDDj/KS938X7e3aqsmFtfn
uZA+aqDaXfoQdWdZ3FT5D86pNsIL6TdxLKQNw72GlILXxtXg9cGjPy1qYz9h
I5zK53vkLao+uMmkKG2fGIw4rxzVyS745/IBbu1pRHjSJnRANCK+O38QOphi
Ap0z+iE/vK+4hm8c6VmzDUTg2+DO+Xnbkju1QF8bQ3HN6SPMCrEG5h6sA8V5
/ZKotjGY4iP5xQ5DyE80j0XmVhghfhwZxMz/+3HN9IFFvXTqb4gM816/6lIS
Mnc+f9Bkew9grfwOT3R9QxYxQ0J7HiWgTN5AiyvmX2BpkSVmKkoS5p1z062k
FnBq99Rz/7bO8/QeiS0z/Yaa+ER/qOTmIKl8t5Rlna/Q/uDYHut3tahhqD3Z
wcQaMl8bhL64gIdDaaUJhy8PAr0zJbQV9iLz+MWtzuc6QegFk1CRTyfM0sao
C9Q3oda9Zli7oG8gUcDsHzkWgxYP536tt+uD+Ks/WnwNR2Cs3dHZuLIFJedv
U3LJzodzB3quBHNuPC+cS9NvXA1rhN0e/N9vu0UACp4asq/4595nSdJPphto
9gK5dufPCHo/ZEz16NgrkY33i2zWSE6OtD74kMFBayIQjuy1u6XqxEeAqdRw
zm5vI9iSmVicbQ5HVzH7jg00/3P9vO5t/5zBsQdedVBnUkgNoE0fecx0Lmx8
HlL9LD3vYPYrGEu94/OO8hXqC78w1/aX+pAb4aFzjDwZYVVwUOyj6wtWC6Rf
LPor0++fWx9eNxe6Bio1ItWCybs8xg7w4tTky6l3G+uttP/pk5qcZDRXNd9N
WWAGbTFyxpGzeAg+LKcc29SL3hdPyS48SYGR/d+kydv/+/lCvnP2ef5XupHX
4TBju6sRSHhfuk9CxhjwXG5n5ywcRlEJXbo2F9PRVWQ6deF0P8jv8+QT7MDD
tiw6saCaDPi2+6TTz+R8AKff1WZvxhGFTovCZGAWaj9u/uAjQ/vGccTZgJ6k
7DGwfSD1c5QZgVd5p6nw6S4w+qBKI+WfBxQq8w0uIRloyYgigKcbD778vDwZ
xpdgvD80i4lXH+Q0TlQS6/x78Gd0st1xBbt7Econ5SyhTRb/PI+AN0vdo4vW
VwT3vucJojvPoJGd+a1Ef5hH5u784bk9EMqlpZmcswelCY+v1OVLTmXFM1y0
Fr8QnbuD5IfD2v1LcMjxQed0d2zBFs8U9T4DXOafe9VjBoy63U/nxB3u3ScZ
EZpek5dWWeSUjqLGPrGzbvMiXc8bYQvxLXpeth1688ran25xA7WllB5EaCfA
Z7/eOwd+KOdp91+StkGPmM4oEs8HyE1nAxa2j2I0ba88D+Re5wNVGNQ686Pk
MHxOT71SpxgFRy/wGCgt4sEy9gt9s9hryP/4OKnJLAxMmNLkLobjAddwta63
UAU2banVi0lUghnpfbJEPZAJT6Zev2sJg/u8CtnvJiJN5rz20N94EMecTW5h
ccJwcJx4dVbffc0PV5VXibUQOw9bB3jf33K0RgNDb5T+k3MMnzYyjVQePowC
Na2fRsA6b5dqu6ebkU0nRjvonpq53TqfhXImE6lskjz2bZqP9quz63ypQVuf
V+FnRsWfUUt43LRvW9O/bh0unCGmFRvQQ4c1v5GKM2db9fPPT6cPucR3g81y
/IePrTdQFstviuG4MTjlzFILabKYrfZTda6MCut8lH/u8cX/r3t8db5wtcpj
AhiJfDBo9JVck4+W+B1ks10KnFJ8z1QK3wba8BM9bwny0mSUBWrfxUGNlON+
yZAV+r7wuY/IN+0Ri31gLiYG1jS7wsLtTZA5g54zkb9eZfQaSws6A7MO1sU6
NNZI7fKUGVGeJcMmsPN4AvZW8ku6jrgKnEjyn7qj+wy/68waY8mP54ikDAfh
Ov/kk2SLiZbHXDcB4zM/Xe+2e0JLoz2EEXCBSOcyTwMHyNV9wD1SFwZnDZ2o
iHkmBZK3u8mrABK+0DCJhp8HjGzFBDHesfyRZX9/iwJYDEkpeQpcgt9iU2LE
estvZg59m0+QAwsDx3tGl85CoJHHJFFe9sVt68uHtCCKMVmtKdkQcrSEdxL5
bgxV5Ed2WdiCxmXN7twDdtBtUfSdyHtYQX8DLcWeAf9U8tDARHokFql1j9h/
fh9ppMqXgKWM3xQr6uyGS/7DS0Kz2NUQy9CFoQ6xQMqzHeu8bCTWCU76vZiL
T2IDfs18WeddgkrFZwrPMPf24h2AN2INz/DUzZk5+QkzLhBYlWxduYbT773G
vCyqjvXREim5PWGKm/4z39O/8U3rfMJgY9ML2UnIVNfskFxFScQ4yASjkW85
cc7dcD2eTThYbrY1SbwiTpZj9lr+mn3qy/g6uHP0YIUsPKg+e9Eip9s1K+f2
r8NujvJrfcLqcul0FFlvR+csjq98d7+Y909WntfYj60RucLxfbhTj+ZW84X8
ts5WRWZgeeHU0tbmCpxH9Go/xbQNZCtbFOCqTIwTbb0jOnXBrpnIL/OK+dEn
l8da2BD+/p5f59bzRvTd8JizTJRYx5NNe7rmmNZ53+q/mhwV+I45cN/8XmfU
7Hp+jknqYLSgOPZHVcviLex6PsnbzSXy2eJHsbhKybgHrNxreAGlxVdDyRPg
yU+SY/8kAsqlVYMSCOsVtZH06J37mdikUVIes7xs3Levq/0xPeQVq7GrCHtQ
8PP9Hw5PcLxNq3jO41bMB7NlLK3QRUh2Z0MmkvwrdePtDEypXfsOIuM2ev7G
V9FAxr2QtbSAh7RZBeRxiwwWC5qYrMV2outs3it6HuMJRQ1dr7HeDzrUZzhb
cbebV/NDUhgm7bcxPAbMAfLbJ4VM4f50rpPRPB4Eb/rYDUVIgkox7lnblD2U
5licJubpFav1Xu2e54ZD4neWzIQkYO+lyRV/tVggs8/f9wDEMJGZ649yQPmg
+Uo93orNR3uVazhgR5Mf1WYFAQheuNm/ck9kUCuXu5wNCp7ft/cw34fNVnTn
to3jYaTLltd00gQxpI2FJMkloV2vhhWOENbnlt8tDqLzNaBRttnxs6E3OrJ5
C2whxHGVDQdzxE6HgROnwOColh2KvfidTYUwr4PmKFgMLhkD4+9pGfYZKzQo
WSNKzA/ce+hgLSXFOWgs+Uzn8+0a0uMccSHWvY9xfnaYocYdKEffuKfxOEEM
/pNVAAGvvb+UW+uVCE0hqdrljy2gbvnDzCNCfxaU8Fzyn+/CSP4wTcBLF2g8
/kbnFEH+qszmKKGvSRBw6fTJ72VXUenLo8xv5/DwuH44xKIiDugHlC//6ngM
+Wfr59WJ9XjndbkqvrvBldFL6seyRrGhS78kiHk11Q+hV+pJOGoYPlfdbpCN
uD1LzckI+tFhsso8cUIZRd7TrDKRjEakeoK8jAS78g8TCvTWt4MHOzoLtXoc
Ebu5wAfiPYXVh8Elts90YCfv9PIFRhiRHfPrJup/y3z9RK+pGGxOX3ZI6VBC
W71+bFrJj6X1Lv8yqgN7DetO27DoIRbKUh5iPQG/i6SjTiL7gZ++O+a6oDja
5jldt8LzZddKeUmvD0uSMyPMeqUdt33T6n7h77XMqUR9ChY2eXB3iQqA1O9t
lUS8J6GS6jXHWWiuD/HvNpABfGvLbuK+HDltzjs+XIhV9dO5u5fLEzfatWr/
Grvi+hT7M+GCG03t+z5fQjxzqth8cuP9V+Bh842LJgtY57tynzuPvcHhKN6u
tBO+2bj4iD87aF2I3n13cRIXcSZjhafbL+iWsYV7MMgexqeUBRqg9qSiwhqC
/eQnHVb1iiTEaVJ7ZW3Mk9AnM/vM+mk8xL9kxPr6JoJ2lTHd1iIZRFufxPT4
L/k2UloCdDNTNahizFLo5WwojD2aeIox2Fj+rH8Xw9GYl2Cs7Fh97Yw7qrkm
v+/1X/Jt/lf4ktv8iT06fSjp1QcJFusQCGXNiWp2HoHdYVYe+pHJiJRFy23+
qz58lHwdn03w8zlrRvQD8tJgdK/J65omG1TNVnkygqBPkxtWVwf1KuBLSrrG
R+lwYN3lIkma9r/7X8zIXLc6Qws8aZ/mSRNxR2nbNl8NNdg4rnnx6mLxdr9E
eChq9WCblgxS/FqMTfiLPQRvxsk15VXAvM6Pd0yJuqiVTq6O9ikeuCuEeeW/
fYLxoc2chiFOaEf/3k3B8huftz9MlTlM3YKH9wOz2Q5FmWA0qC2341sBKElh
pCz3LWN9XE1YX//iQFBQu8JXNT2eVHHyig7QnRZnSAzWA67v944S5zUM7d0x
SH0VojXT47e7m8Ihw16u7wS8Nc8m/rivF4i9L3krdNQGdBKMub2I/gyltnBo
8wlIO0GWerafH90o29G8sm50bT31JLJQXPTz7dg8rdK1fT93V7ml1ItNGGUn
usEtcfNreOaUzMLxy7TYU5+Tp53e8K3zFZr+3tKKp8duIS+O1xlez0vXppP5
JpGDx5i/VbtDo0G3htf1bD+zk5wPPDCp5GfOmCOtNyc1iHn4Hk97ev2nRzA5
mtHwfOd6HFHlSP5U0fQ40PO4ezVcDIa2uaGCJsJ8zxa9oPAj0RSes2uPR6iZ
wg6b7EJivneRfFws1X0TePFzGb0V14ebXhEOxLxoN5KP4be5z4F/0k6qs0Nq
4DcdqUj0A9+dU3jllkUNLGpLpIfaHsEZndDrM4T1OURU/dDdZU1IfhugP5Ru
jfLuHwwZI8hzSzNblZWmYkiKjRR8ff3W+Vi3e9CrHTmDbX2CJGdm963HU+Rk
Po7jjFgty/1+SSHf13l7G9AT/8EDmAM0PQ7tpOt5yP4143SVrzRBbr7H8kcM
L8ruMlrxb1PoBb4MsB6Hq9VaczyIEpFHlY2urNs9rgLIdQorT8HhQ3kxD3eS
fXhl/Xz+qLUpfOmH+ICU+ZJVDX5tHNW4jj48vr8aOxkrff3S5ijcPs/Vdfu5
9LYjeslN4q/bjBKasrvX5A+amaZMWgthODs7nD8XCq/181DAu9hNg13Y6g7m
ZdaM7UjEhW+lHRW3LzPjqh+w1IYGQaGHNyNZn4IVvLlYxkr2piUm9ZZ71L5W
l7V2Crd0RF3fDhB3qseznPkCciwMziT+7yj7hwuFU6dhT/BI+wiZBXowSGow
RcDvu1Z6zWRgYR/pW4qZKFPEUpvuQ/QHKGZJdDtVCOOa26lhfcYajYfOmU4Q
8NSU+XaTfjv4yNgSrUMSCveO7Op1IdgP8ybGCs6c67CJO5yslMwPJu27xuQI
8iLU1zvef0zB0p4/MJlI0YBTF1zVD1+57St2XRNs+kdjA7ktIbi8P/HLFDPu
w+VsHbjt3Z05WR8AwX61z48ScLX3O89jQ6UhbaRJYILSGpnInXYjxkd+v0Ie
jgccgeqr5iL9yTbAs1TnRrSr0ic+tPLZsiDbUmtxK/MisAZteUaMX6QW+lqa
paUgTu+K/XlHNajZy7vCE6dFV3m6v00FygRUN0XT6ENzmyklkX9NOfKk5XyY
FmQ1eOY87zOEuHTJJmK8litMEcHEqAhSb0IFTk2fg3O9mGCini9MfsQd8rWE
Im4qVbfL1lBYvpz1lYAfLpnpe/C6GXvMhdtZ/0YyjsJ2NT6Nnk1Tf2tRhKW4
7Wl6OMYf19W2qgcZn8zY5NYTQLoDygw+k6LFbpsVvzE/zl0ygEkNtHC79O0X
mZHGTqk5Yv/vc/zo2vexB6MlEHK3VHk9DvoQP8Csgk3B5NIVmymTrPNWW1Tn
SQcIBGO+S7OTBlmu209nkm+p4bYz2MFPo48Tfqz78+R3ZqMTqCSxnnYVvaJ1
59f4PQWKb7VZ6aVg52dTjz39mY8r6V7FL0r2a9BwemBneEk6ZOmDcX5/xjcy
2U4w89NVzMHPD14/ntdf+y5G4HorpaM6hu5Azv4hafX19wIRnirmsrwYjrHz
W8veSKzzYPJn9SE1f0zJtoHjflPJa7iCLv2+RGqceFDI1P4varVr846y2Pma
SIU+dqrgne7pj764K3/6b8bD5U32+Cv2ab3KKEvTTqRe+nUlXjBml7Za4BPA
kPPdtBLvOL3W/ssKUr8rbvGYd44lPwPn1vl/M1hDkxQ/B2EWHG6/6Nq+ns8f
73WazDXdFlsSaZGe+CYcV/Dn3dPIs21aEo1KWLCJvR5SYYSb/dMf2bM3X96o
/4HdedD/VoXhIUSTkPCbiM949OV6L8sAl3rhs3xaW9Tr17KbuD4HR9Rhaehl
sfSOfZrR3SJr49U0oZzWxHMTo1izqJ7b4LHOK7q58YilVyDWYAfJhKZqLu74
6Op3XavaDoVnWoJ8i6m/9tFEZPSkQ+wNYR8Xsu43+tBvC5etKHC/XY3RZ3mt
N0Q+PoYkfvykZBn2V9/W0zzzX3CH0Op7nH3e6Q2nfPOxdy4vmVXW1uNi2Fbb
N7E9WrJwORnzFaluF3BZfxfAHR92bfzbd8wxDkfNdO+lNTzuigWzfTcZNt9m
UuAFHcPaf1EePBvq76aOjblb5ex+RWXNDkeoXm8xt5DACkYzb0KV4mvyDN1H
aNgamjA1gQjlMzettV8XFnFTZt8jjEeUwYfSxvX3KZ9KmTVFOSVg8oiMQBE+
FPZvZgZbwvrGmPKxWTP/Gux8l17DVB0GAl+G42QJOG4snXWPoQx0GFYx8NNH
gHiGut0rwn73zvTADSO1h1g9MtWqfjZHHNMf+xe/kudRd7IV09CpFyE1Vrv2
3U15bBaH3pdjtD8yjZvpr+tHX4mBtFC7BqvpoVfztCkfl672533Hg1PFyfrL
WKj3UKQ8zI6kjd6s+PPlmq6Mcnvx2McksohOaxZ3vqN+Rb6/en8ip30FlqNF
5Nzm6mbc18Or688+XsOiz+6EfVqerOvetCVUK+oYEPfr++YJmhMlgnBdav8e
PpUzIJ3B40iUP/lO+we7jxgMU48fTHLEAsvdlEcr7afMlv0CLjgyyUChNCwA
p2eXeoh4LD1Huq5QOniUVbmQ2viCWufb/Zk/8XDq2kBv/bwh6mMqfh/Xk4Qa
mnfY1RPixLM17fMP4yOxE0Kngk4teuN+/amfP5PUI/XFJBRCG3oCM2NtkeT4
pWAbgv4VI9s+Oya4Qvf3SfU5UwPE6ZyKI/J1CuerJz7TrAIG/xMNQmJeaK6p
48Z0AB4wgiWsnOFX4Fe18D0GHmt0YnjkNDFvKtBCV2EwSxkC5hP6m+ztEW2c
2AIx3j9n06d9stIFBjKWJYrMHYBEdct0BvG/4rb19e9yBsvo/OYLjDbAOV9n
XU3ALYzMj7yZz4ZNx7qeCL8sgH6eR4naHwj7JueliHH5REi56hRj35kMg4H1
8spTePAxPR7WUeICgEkcq9+jCjjyvhpi3Lrjcc55d5wFzMV4JZ64qIJullfy
E/0u0gPLHKNNgUjW+GJi6a9U1BTWq3JkBg8N4ZMa0XPC6FxS+hPpnEjEH6ec
av4XPouDw6EU42/CwHKP39PW2URw0zkanEWIU0SGHk8xWVwHmlzHGH2jZPju
bOdeR8Cl5X0Ft3S5wD3eDwbZO2+hi21a7sQ8q4Rwmp38wqdh7LFYpk25BvJm
lVEm7kfpn7WwthqZoKUZkJl8KASJL7E+kibErc8OTpWiGUOIOT/6TZjRBHWX
d9AQ/W3tmj0ll7SF4cV0z4sbL1QR60W3XmI7ESPpH3hpmKGsUNBtwEMMvSiM
e0u0hwY+/qitt+lhv1V5k2O0MDK6r7uSJyz7Jo3clgePLRfbk2g33I8TWRxZ
PS8VzN6nfZYcZN9mJ9na70QMj1f54plr2IfG5fcjugAJOS6jaGA6EapDS9Db
246cGwokGKDWysKPjLmBwYNfvMRziZfvr7Wck0iHtOdJyPh6KrKxviiZOIaH
zm/XeYvoXmMxP3fvsVUsw73XWrXbZ/2yk7QSmdjt9t3XhS7n4fj/xPUk078v
/CQNA1GJsps1FdroQARPhAXBnruupskx7k8BTvJLDNuZA6GC+ua8zy886Ga5
9jw9FAKBvl7JvyLcIQZjkmJKkI+8Mle95KwMqRSZ55RCJOEQXUTHij+jnf/u
IlM8hJ/JpPVUdQHGihhzkgU8zG5XjbG74AuJNKkxP7abQtBbR5orBPlrg4Ii
xgXFoKP7St5GNwzMeu4cTm/EQ9T8ziP30l3Aa88AyUNqa3gey99H1MOg98T2
fZ9Z4Oh0UJ61bz+uQfvuyn3Km87ZUfXWdjBrrx6CLjv0Mp9U73nuxvnAfD9K
yD1mcMDdp8gcSnUXllGOi2YlHmrcBz3CSwqQ28TlBwXuemD0Uy3XuJcwjt85
Gs4HNCIDutmbX2Xd4eY5+bHSqgmYV9hdu+UjI5jfvf/CaNsAzu3Lg5U6wJwJ
8Vnj1U/gyFRx25lT5sDkzjV14i/vLFK48kO5PxVAblt19ejUa8hWqpfhtNtY
/ks57y6nffmwTCH48ffBADhvskdufAAPTpkqo720JcjkwNnRO/a5qHFo7hZX
0cbtYMqxKl1RQcCoBg7hffoI18T1dogwvuJPvytVZ36FIBaJx6wXg9BpwSm9
7Sr//9TBZvZg0XyS1A2FSx9eNPHfQnsvP9Ruit04rufnxy47H/dGC9KFtQ/L
stGUCf2VTf9B3dflh/tudLEWIQOSp/c+fdCD9KfWzqYf/987R9oIL8wfu8xL
3QseqeEFnCKPUM55vMk701Foyn5afD6+BaIyplP8Pd1RnhPeFClsfD7ze2ZH
yNPwCth61Uum8HIulFjWKlWH4oFSlJFeVaEdkQQxNjNyPYalvZW3dWv/ubz9
/wNlVVSs
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{360.0626498538938, 236.66084370108837`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.6212844084476323`, -1.6102415137108725`, 1.4092516870848413`},
  
  ViewVertical->{-0.3548643536684264, 0.21799134507173928`, 
   0.9091485379019777}]], "Output",
 CellChangeTimes->{3.776131053791198*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"fdd88630-9f15-4f7c-aec1-e191264b6c88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"4", " ", "a"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "a"}], "}"}], "\[Element]", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "10"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776131059168688*^9, 3.7761310609696283`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"f34aa679-cd55-4fa3-8770-7e132ef97deb"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
7/0FXj0cr36OxwfG4xvg8RPw+MN470fweAt472vweBp4PG28fgdefwSP1/23
/Rc8+b/tI+DxLf+2f4fHg8Xjv+HxavDq2Hj8HDzeHV6dHK9ejVefx6vD4/WP
8N554fUB8fi6f8sPweOH4/Ez8XhfeDwxvHcZeO+M/pYvgccPx3vfgccXxeun
4/Xf8XjsuLwUHB4LHt8e730QHn/4b3k7ePx/PB4yHn8Sj2+J944J7x3B3/KI
8N4d4PGc8fiZeO+k8N4j4PEw8d434fFY8HgveHxpPJ4n3jupv+W94PH5/5bv
hPceDY8Hi8dHxXvnhfcOEY/Hjsezxetv4vHe/5ZPhffuGO99BN57ZDxeEx4P
Cu89HR4fGI/fiPfOAo/ng8cLwuPP472Pw3tHg8cbx+Nh4vEq8d6n472fwuNh
4vHE8PhXeO/H8XgIeLwFvHdMePwuPN4aHn8A750O3nsZvHcxeO+48fr4ePxz
PL5BWnEL07QfP5x9cyH5IXk/FJ61InOMVQjga3U+76fb84k9kV35O/dTQrQn
Bbi+b7LDTym6O9338MFm1o/ffjOzgUY+mrH/8OOCc1MrLnxp54H5Gvq+/XKw
hN5p32eZ2OSB93AKzXV78MJ5uv4zLTWHgR4nswu37H7fZykOw3F2V08DPTL3
O6lrdPnh2oZHz85lGgE9P1t0gred44c1Fed/vLaBAN6+IlPkK8oGO9DJ0wdR
XgH4q6GStfpULljCkap3tvY0dEuWmXFuUxA2EDSleuo/Tzz68Lx+IvEigYR7
vN9heOT8GtH99kpriCKBoOpak2C2OQvdtV4SmmxE6xWXdj87GL/xDXrlO/Kg
RUkMloR1y38MGUEdcx81Kzbp4EmV0ofjhsIIj+RB6eA7z7VI+K3lMM8FaxFE
hKmmLfFygdbdXv3dbzeZYBuhgZny8yKI3Gn+B9vd7wKcjxr+uQURRurj8liN
Yly0SN/lOi3hVZ/+r3eIQ308w36sMIVCvJ+/FDf88kv/XobDNwGuV5STPRnK
CqeUWmlcvhINcTOaaJdsUsLnkytP1lt2ENkVHRTLWszB+I20zj/RHRkknv3o
RdjCcxDI65rbBLiy9RC7z8RT9KyZAXlNz8AIimPzRDKYr8W7jwKs/7nWC+nZ
u4WR3px4vfXDRzVJdsX9NCG6bVgASTGX8binaKFJkpf0ef8yJZAPMW2cl3r4
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
KA==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
h9SbLr3deha6PvY9by7xWzCajz7WeoY7At0VvB3uy3RvJkwvbD8kfF/dkdZW
DC989+6sw4TU9+Ti14q93/aL3a7a/wL6TdjP2td6e6D3AnqH8G7e9mFr3vou
+/d36vsY6cKSxO+vFNPTu7tKseNyp+Z85yl7Ox56qu6oFZfL+85gUOR3AHoP
cBL019RvX/QGZhS0Lu2/Hvndi95v6R1XG2Hq2HcNavMP+qjNn105vxHSHHQ3
vSvw/4TexrpfLvxCO6fnfE/aM+ezXGe6Yv57lvyW4Z/UMUTpnfRPGEOY4kDa
3ivvN3KVtfZ538Eck/felw4I736u+6qM7w7HhrjZgqJjhrrT0b2Tzh35LPJd
Lsn7LZnemjVSfEuYFDom3PcdTr09C35bqDim7jV1v9k853eNisHdDG1VsB7p
zduGxHEqvVFaTzqU8nsYQ+OMdVTnkN5SymfQW75b8o5RLs37flH9qv9vAwYT
FtO7oMGKu9POhhCHVzx+UcF3nYqhPZR3Hw/n/dZoU+R74fmp7VAFa3gWtAr8
QbHvQbWfta/3y/v91f66/8r67FRcRn6wsI5wTkWI9yoGpbiq4qt35hx71r2L
7gH/q32gMyHnd2CKO9+e85tWtas2FVvVOxm9l6kcvmmVMKcFoW+9d1SMNAvd
RuoK/4O8cYswifDNrUFPb9f5VvLZe2TZftHCMG69H9O7i2NZn8PCGa2zekbQ
Ne372anfDjSjbjH2WTU357s4YVphW2GIBQG7d8jZv++Y8/tXxStm543DFeO8
TbHqkmMDubLfxeruQ3cg18G7MDKuXZ4aBwoPCvPL15lUtr8mvsp1t6B3Vqti
3yPqPlF3wsOLfjOj+6aFwRfsHvDTzqBX7cM6iD812PNpsddCa6K3prMDNugS
e376BpqjbJZsl86un3K+2/0ZOj/v++UFeZ+ROitnJo47yOfXmaT7Np0XX+d8
R1Di/8Wp7bjsud5wKNaleJj2qGKByitGpji9dEoxbWFFYbPnoP1KjrXq7Z9k
pwad13lxPWN5uuj3JXpnsm/Jb7n0puvd2DFf+dpnJ/4OOqeEo/WeQH6QYjo7
Y7+X+yT2GyK9O2rA/3eoo/D0B4nrqX674D/PCT62YqmKqW5NbNN0H6l4inxw
jVPz0tsG6cvvwU4LC2mf6Y3UXZHfNVUK9wK6H9gr8duz+vJF8n6rMzHvd7x6
i3R+yb6b/Du9F9KbKvm2b0D/D8fqkWQ=
            "]], Polygon3DBox[CompressedData["
1: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
krxD9Vry3yam+cTdtBnaDvXZ62l8sb7/AahyW/0=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtl3d0FkUUxTfwffuVVQxNVCQJAkapUlVAAopBIAQICCShRMAChyA1IVJC
C9HQI8UGBDyCCAooREGBUDSCEEWagsjRgIC9HQvW3z1v/7hn5925b2Z2dua9
t/WHP542torjOMdBEEzwHOew6ziHwAFwJOo4H4ITtD8Gx8BkNMngPRzKQUe4
eyKOcwpdo5DjhGUz1iNwk+AGodkEtxmMxO8Q3Du0K8Dj6HZjn0ZzCqyBuwmu
gPbT8Gd49oZLBV3xrQZ2we0EY0AemhBcf9r9wFpQCHcHc3dinFj8qoO1cL3h
suEc7FLwPlx1fMvw2Qv2gQVwddClInsaexmYDbcIHPLfV+9dC7/aYCntYnAY
LEazlfdPYEOLA/SBodiN0V3DfNeCKFiNbhVwaY/AbyTog6YRKKQ9D/wCnkcz
Fc0TIA8MZk3tePYBfWmP1/6BcXri+y7P98BB/7vlwk2kPc3XTsG+DWxn7DdA
EO4FdClhx+kJFoIC1nwefgy6PTyvx3cJ2mzsAeBGfR/ND+5jn3LwHxy0c6Hz
kYPmK70jfl1DNq7Gvxd+MbrR8L3ki52Ibynz7QDNYvgejHcP2jzsKSCRfayP
3QC+NX4v4PcVYyRiV/A8CjrDtaTvkvafMf/G/gN7Fchn/DS4UXCDsGto3dhd
Nb+/jxlaJ74DaT9IO1P7DIaAu/Afyzou8R6XwTnmfQJugs4k6Im+A9wutONp
7+T5GtgCZrHugfgOANPpS8J/XMT2RfszM2jrm8V6PsemyzkjHnsGeIn2fLi/
0E3HPosgkT06CyoZ60m4x+AOobkf+090jbGnwbdk7iHMOxgMgesI7ma8DqA9
uBtNPviM9lnX5j/GWpbidyM+scwRB8ZhN2TsBuAXnTP/7szF91HmewxUp+8k
vnPg1tO3ARTB12DOgWAvdpnOBa7dsBeiW8G4XZjnClw2XE/P7kUz7BSeKdgV
jHmU9iSdW/jB6JbAfcDYX4IvQBy6tuBmNHXBbrh4dAme9Ut3GazE7zDYh+YD
3Q19LzQPghzFM5ALdqDp71msUcy5H98Yxnsbfhhr+Bl7Lvwu7A2gjWvnL0nx
Dr9X/Rj3oe4r+tVaP/x+/w7qfSZi78O3xLV7oPuQwhzlcK9jb9c6wKPonufZ
kX3qAAr5HiX6FvDfsI6vQS8QwPdhxVXFM83nWOxuC387z0RwK2iNX3NQi3Zt
3Wuwjjmz4NYy7jqwEm4PXHvPfOTbGLRjrDStl7EzdJdAOuiOrhvPAf696aEY
oXvk2n3q78fQVxizi3/ndPc6obs3Yt+6OWihffQsxr6v74odr/sH18qzuKyz
0UB3HftldAP9WHgn2IjdnfHS/fWNBtvgloHz+HbS99H5VwxC14K9fI73TQR5
2HE864Us9ixmjKv4RDzLJQ2xX+IZ9iwPHmecbDBWcRnuIty3+H4HLjDuecY7
DY7SnsB4V8GvaKp4FtcV37uBiXA10dX1z8kq3RO4/8AU+nPBZDAVe7f2vyr7
p1xETIyFaxKx2JAQshigWFDIHPHY5dh3ORYPEnRnOD+HwX2sqRguH7RD15q1
PQD3PXYTdNOxR4UsXtVVjlbeY12/M08R3EPo6sP9yxryWc82fFfD/QM3Hk1z
x2Lj31H7dvqGCeA20AZdLvxQ+rPAMHAVu2XE4vJw7If0nfGroVymfWK8/Txr
YpegrYauoWt5Xfn9Tq1bd0v7BNqgK1U+pX9L0PLcDu0Ruj3+nJo71rP8G3Kt
XzrlxSK4OHwvw8f6ce030IP+7iDZ/25VGO8Bxf+g9UkzT3ea9stgI4gy3ho4
j7GSFUsUJ5Tj4TL5FhkB+wZ5cOmMN9mx3K141BN7A2OsB9ejKaPvR/ijUYtd
Gao5dNbRJcG9yHdbie4bvkc8djl8K9r/oUuHX4pdCj/NtTpCc2nOYuZeTf8q
cDs4rboEfiu+C7DTwKdwS9A1ZI5GyuVwn8C9qbjNGajNHKWMtw77TMRyUw4o
4f16oOsDZisP4tsUXMJ+BlzB70fwA7jFz28X8OuLvYjxmmLXQ9cJnwBwOHNb
4E4q57G+W6DeRFuAbybcVOxnebflIC1idaZisWLyr34tpRj7hvKEa/XnaD8P
nqJ9GpwDHymXgRX4PKPcAVzlZLh8v9ZTzReEm6D7ytomaW9Y00LmreNZXaL6
5Ji0aNbAb2Z9XzP+GLTfwT0FXqF/s2pj/7z8rrtA/0xQh/fdrvyJ7jn8/mJv
kpijL9x80B/bA1sZ9wR2ke4hPkfAJnQV2FmqH9n74pDFhSlwI8A6fJqFLO6f
Q7MR7hjcT67FMsW0G1jPCdZ1Enys94bLgCtAg8SZpxygOgW+Ge16ruVh5eNB
nn1Xfd/ZcDtVI4Ys3yvvdwYzVKOoPmStZdh7A/buhXovdMuxl4ECuItgNO22
aIfru+vOM2aO6n/laLjrVEB5FgcUDyaBanB/Ru2+pINMxVTsZxWz/RyqXFpf
9YJqL+bIB/HsYTLrqGBeN2D3YSPDX3GtNlaNPBfcga5J2NbQxq9BD4CDqj3g
vwhbHXgDugLGmwfiqlh9ugT/BfSVha0tLjXG/hcqdf/h1oN+9JfojIftDKk2
U432GnZ7UI32tYrv8KfwrYXvAuZPCVpuUY65SXUm/d+Cbmh7Ra2OHkV/Jc8L
4CIox38nmusCNq7G19nRGSoJW45UrqxkD7507VvpX2cbz/FgG+NF0IZBNvo5
cDXpP4h9QHUM9n6tkXZN8Cr6UMhyVCXtIuY+Ap/q38HlrOl40M6hzqOr/zK/
9lauCeqeM09ffPoELP4pDvZCm8X6himvgK1Ru78z/Lyq/BqDpgf+XVSjqF6A
q6d8orpQ+UDvAt9UtZBqO78WSOOZiP0P87agPSPG/p2HYSdHrFZVzar/ru2q
Gz07d7mO3eOh2K/Dj/FrCNUS/eCqelY3Z6Gbr7rOs39C/Rs+rPyj/KH/D7BW
/za85xpwMGJ1zudoPgPnwM2qz+H2B+x+6Z5t9qzOVL25CM1Mxnsrav/GneHe
hqtKO+Da+yf576p/av1bp6p2p2+xazVBpmfxeSRzjADdef9NcL09q0cfASP8
vZ+Lfyv/n342mBO0unOF6lz4ITEWh/4H724Mog==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwl0ktIVGEUB/BTZOWM1aIkF4FILWplD6IHJCmZk1GRQbuY0ghK0hICDYSi
jRBWLqLHppejPSzIoMCgxfQi2kiPRVHQrpVBboIe0O/jLn7cc//3zJkz39y6
9u62rpkRUctsnuQi+hXD3OImz2Vn8xH1cyJe6/ldEXFb/lLeUBlRUDezlRbu
yRvl29XVLKKVMfkAJZ9fYNZ8puTvZCOsVm+iIc3WU2fGI3mP+2N0U+at7A1P
1RP02Gnc9Ygdy/Ib6lFGKPFC9oqH6iL7ecZe80fla9Sr2BXZDuvM2eLZHnUN
i2njvt6LfLPbRz7wiWV6q7mgHuQc5zmt91Q6O/U2WhkwZ4feIp/VTc6gkb/q
9+nsOanvK184TpXeQXlZvVLfevcb2MhdeZPsGkP2v+7abv9aTuivl51xnWRI
b85nDqgP0sEheuV/6Er/i/5O16P0pf9rbsTyGRH/3O+0Z2lWxLRs3LNO3/VY
XhPZO7AvvSPmV6Z3QD5Wkc3Myx7ksvNs0VPIZ+/DZvkV+ZSeaYppTjpPz5vZ
nc5dtjD9Zu7ovcpPPZe4zA9WmDMsX6pnHlUcpiD/zi/799t9wt5r7b9E739t
vl7V
            "]]},
          Annotation[#, "Charting`Private`Tag$30542#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmXncllMax5/nud/3ve/7eVtsRcVnyIydsfXJEmMbRh+NMJZJIxIpTTVM
liLaEMmWptRUUlmSSEzSohoNKSUhpVAqadcmJfP9+V3zmT/Oc537nOvs1/ld
v+s8h7XudHnHUqFQOJafBHleZaGwoFgorOWjYVoofEn5jqxQ2Ez+XsrbIhfn
hcIS8ivLhcJq6oajczyyL2U5+YuR36N3KrIF8gX66kr+QOSBtPktus9Xo1NV
KMxEfxvf29A7DJ0pjL8B2ZI0gvk0pu4pZF/k1tCR7hnIjaQq0i7mcwXy6dxl
qltCm4a0GUr+cOTRjHM3+bmUH1PyWhaSP4S6Z8j/xFyWML/LyE+k/mDKC+Sb
M5/Po/yXespT5Bbk16xlLnN5ibW8RpteNPkVdeNI96FfH/kG5QMo34qcQZpN
fhvyiMxzPhI5uOg5PFpw/rCSv5tRt4P8D8iVpDXkL0Rez5h70W2K3J17HQ8i
qxnvU/Ir0FtN3bH0cQ1yVeq134z8A+3XUr8cuZ42q9C/Fdmd1Ij6/qylFbI5
+segU0T3IvLrCpb67o+spO4Lyk5BdwLjnklZTWQF9d9SvoGUo3M25U9U2W7u
jfVuym0jTyFn8b2TNn9EfofsQbuxyCrSYzGupL6fLDov2Z3y92nzAGPOpu+/
U7aJ1Is0gO/Hqd/L2f2F+u8ouw45ge8jCraxpei8QX6UdOinEfVfak2UJ+hf
Rfm3ugekNaRpjD8F/c91HqxnBfnT0O3HGmaSvxPZAb1FpC7RTu0XUfcsfR9O
fmRiHdUfR/n3FfRHfmuFz+busNWvU5d/lXpNWpvGaBJ3cxj9VDKP3to30njO
rKj9Yw51kBk6dZHXIetR/wBt68sO+d5C/lT6LfGdojOdNou1PmR90r7kP0Ju
Q27X3LT36I+hXWfkLaQ+KpM9sg/PUX4OZb34bkH56cgG9P0I+W+o+5C57kS+
V/J8NA/NaWyc9VnUz018d3SHtjN2XWFC7v4Gx72oVbbdbclttz0pW5cbd4Q/
a5DN+e4q20MOjr0blPoeN4x7uJm6TuTzsu+O8OFH5O4qz6EW/TSmTYZOmfwc
6m6QrSEXVLn/mrHHLxY9jyl812INf0Lemnqftf+yE2HiXspuQr5JGo9+D76X
Imug8xDtDtX9lZ0ypxaBje8w3lXor6dsRm5MnIl8H73e5Fclxgntz664mx10
prIL+riT7ybIfYSfWiNzqZ15bppjNfkyuvch62W+77r3j+pekO+fGqtHoXMN
8ijGe1c2jWwl/NO9QB5N21MCK65nfl8xzmjmv173nLbn008L9Jahcy3y8ehH
/S0MvBJutaPtPPK94iw2y95T+4069NMUeUnRmKa73a/odWn/ZTOqG5Db7mR/
zXTnc9v+EOSBmTF5W5zzVtJAvidVuY/2qW1LNtYReVHq/W2QGSM1vuZUi7In
isa3rejV5vt7YS/yfsq+inLNT7iqM9ZZX0t/D2Yet1nqOWlur8RdO6toPF3B
9w7qh7OH+5e9z+Ny+1H50+3IPcjdRWOQbEY2uRH5Fv2PZB4nZLaF88IehBE1
i8YM+Tb5ssWJ5yrnX4N0EG0+pmxG5nPVuNcntjPZ20rk6yXbySfkLwy/oP3S
fgj3tSeal+b3I+ndktf0bmK/o7z8Rhu+f6b+JmSJ79+Tv0d+qWz/ditrfy71
/rzE+RxH+Rx0myBvpP7P5B9RO9JPtO2WWWc/xnudvfqP/J/wATmoZI7QjTYX
ZJ7XntTjzqJsamYslF9bF+ehcYWlY+QLKB+NbJsYr+SjxgR+CkeFJd1L3sdX
gwPMS+z7ZW8LkF3QO0H7x1h1medQ9DqXfT91T1dQ/xlpIDqvZfZn8mtjyd9O
uk2+rcrn2DvOdb78EeUPx93RPfkCeV5mPJfvEIeTv5DfGJy7n0+R52f2aVtS
32fdx0vE98rmWsfnXlONWNeW8FPyVy+m5njyfZdmxrMy+bcoa41OD/rpozUy
5gDOcYi4lGwkMV8Ub3yB/uvR5mPyy5AHkeaS/1xcgj6PRbel7ITvzrJV6dC2
DfmFubmA7Fr2vILyAbIvZJExa6BTqnR9VZxpg/Cn8qtV0W5jIbCy9H9fmsbe
npnZT3+QGjcOpqxn4KTOS/j6WGpf31oYWzJGCB/kT69iPmczn3OoW0jdsMy8
UX6ktfa8wmtfi3w3t69Zjv4duf3sZMnce/I28lnS2/IfyP1oP5P8h8g6pPe0
J8jLM+OiuM8Z8n3ke6a2G537R+R/Yrzx8kfIG9C/iHk+jPwNcjLlFyPH812B
bJ75/GuWjG1LaP83dDZWmQOIf4nXrcqNFd8It4rme8upezOJuy++hH6TojFQ
eXGKnVF2WtG4OYj2Rws/y+5DfYln/Jya0+1grBFF+3L58bXh6+XzpyXGnanI
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
iv+IB7UJn6S3cL3fpGHb8yIeVFz4X6DRo7E=
           "]], 
          Polygon3DBox[CompressedData["
1:eJxNmXnYlmMaxp/nvb/3e5YvJTOlVIdtJoqsRSj7GOawhLFMKGWJMmVfYjLK
lkkxLSpJi5KJogWTCKkRKSWEpCLtWr4WLTLn7zifP/xxHe913ff93Ou1nNf1
Htyx2yVdS1EUTY+jqEK/z5Wj6CD9Vkl+N4mi67Moulb8O+IHV0VRK/3+Xh/0
0pjdlVH0ahpF5RBFR0pepL5R+r6WxtcQDRf/ttraiX9U/c9K7iT5ZPHHq22T
+CdEZ+r7g0TdxC/NoyjV/CeKH6j1HtP836lvu9ouEN9V7SP07fOivVr/a8nz
xE/VnN+IP0Vj1usg60RniH9BazZR322x+28VvSJ+oqhS/GEa8w/xTTV/Y/Gv
J577clFnyYeK7hPfRP2HiB9U8lnvYg/BaywSf0vstYeIFqv9YskNxD8rvnOx
v8X69nLtp4b4Q9W2RGu9KbpC/JNqa6O+lqnnZ51Z4puK2qj/aMlNxE/XmIMl
T9eYSeJ7sb7W+ExUT/z9ovfEr9T4P4nfoPfrrrGf6q766j7bar1Fkldrji3i
j9GYFzX2ZVFz8a+JPhf/sfq/VH93yTM037uiiLvSfD+KbSW5nd6qrtoGaOwB
+qaO+Kv0zTfqr1bbz+K3at0Hxa8V3Sf5AY35QN/OFJXE36i2pzT+CPWvTLwH
9rJe9BfxV6rtE/V/q/4fE5+/seSrJW9NvJ9fxQeN7aPzPaC2xepvqbYd4vtk
vq9q8cPVv1376SV5o+h+tXUR9dT4/pJraY5hkjtqbyeLeoh/WVS3ZJ0fL/69
xLYxNrL+zEhsHwdG1nf2xN42FGsOEf0k/uvI6/E9upcV9sUe2Wur4r6WsX/x
N4iW8632+05kHUfX0Wd06S3JcyR31Z5/kq5vEH0seYXOe4r6JnEGvc/d6n9D
fCNR29Q6fYzmuDdY168Kvlvu+DjxndTfRb9jdN7/aO2lkmdJXqL+c8Ufr29W
q2+22sqSJ2BPotaiU0Xrc9vOQHRcfE+11dL4fUUnJ9ZxdH2oxjTU9zPxMbF9
znXin9aaPcT/mztS/wKdp2NsGz5A/M1qO0xz3Kn1p2r8TZJvF3+baLLkhZL7
i/+fvukm/gt9c7v4O8Q/qve/SHuarb3s0DojJc9Qe2uNfyjy/tsX/ukefVM/
dRtneyf12C2Vtp8T9E215LM03zZ8k8Y8o/n6qL+/+neJpqAbGrcZW0Inxf9S
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
YtQoyHX+D1GfxWA=
           "]], Polygon3DBox[CompressedData["
1:eJwl1G1ollUYB/DbPXt8nmdWFGIa2ocSZPMtt8xXqMg+DSwXaTIEaymkHzQQ
JQhMbRUR2YtkW0kptNWgabU58HVZOnEqhs6xQk3XJs3W5qyZrrJ+h/Phz33+
/+t/Xefc132d+76K1U+tykuSpAzS8EtBknRmkuRWNklqU0nSkfO0nmv997Ak
GYLH8S56pXUDvRG68Q3y/qMtwy8rWoxX8rbjZ2GB2D34DTiPb8X/sOd8/En4
Mx+HH+lj5fYPT5Jm8Xa1qvjX8GyCU9Y/wCt8o/Ey3oz1Ls962AlL6JN47vBS
J8TG0LpoLwRNvd/VLcW/c+4+8WrxKjiED9Av8g3xPBd6g/fqy/Oeb8FisW/5
MlCs/jRYSa8fAbSZ4f1hs31GyvtErAg/ap8WeBQ/zddoPZ6+l28MXzttHO1j
fBS9Gl/Oe512wTlm087jFXBFn3rgjNg7zt1Du5oXz7wFZoZ3ULNVrFcfV/BV
qXcyF3sVepaGtuChbZVTko7vE97rKximXg3PQ7AenwLT5RbxFML9cs/RPneu
Ejipxgr8kL0fxm/i1aH3+G/0VDbOSDe9Fy+SP0u8A79kr3K8RbyJthxeU+OY
nH94O60vwZt4jT430fbx7Ie7nWWq3AXZOC+hz1t4d2Vjr0PPK2CPPepDn3hn
y2nhHWe/bepdzMS5G9DTq/AYXwOMTMWzdMBankH4mjYD2uSX41P55ogPDz22
xx78aehM4p05yLsfL+DdjQ/mx1kPM7/IOVK0brwLnqE18b2Uit8jfJdbvt/G
dJzF8H0Hwn3gG+B7UO4Usckwj5ZP285TS5+nxrZs/OZ1oVdiB+AE/rMeHLRu
htvETtE2wV1q3ylnyJ6r8Ses/6LdrtZcvkb+zbTWvLjHBHt9ZO9qPTwstpRW
Q1sjd7w9iuX1Z+PdCXeoh36DZz3vOlof7UqYNeuX4V+xnWGm1CvH75X/mb1G
h/PSx4ovpC2CZnwlvU/fVvEuVPOn8P+CNutZoZdyy/DFUGddQnsgG+t9IP9Z
vlIoFLuJN0C/8x9XvxUm873uLO/L+TAV72e4p+folfK+hFFyX83Ff86BJHqC
95twD/g+zcbZCTMUzhxmtzT8w+Q18u/At+fibLzNl8vE/u2F+WHO+Br41uET
1HuRtoP2Lu0N2pyCOJNhNq9DJ+0C7QvrOijgPRLuCxy3x1l8In8tfiwX5yrM
1yPO+au8tZ4T0/Geh/t+LRP/V8usv8/E73wGLwz3gbZbrcNqDpqZ90bEuxPu
UH9+/B7/A3hQ7uI=
           "]], 
          Polygon3DBox[{{2412, 129, 680, 2275, 2118, 2793}, {2496, 856, 775, 
           2129, 1890, 2454}, {2472, 816, 704, 2108, 2018, 2787}, {2594, 1320,
            1319, 2153, 1760, 2400}, {2441, 160, 1796, 2264, 892, 2600}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1Ql813Mcx/Hvro7V2rqIXJGRLqJjObYOSkQ6XYVoXbprq5wdJNeKyFEU
jTbJrVqO0DGLGqVaW9QcDw8eDyUJEZ5fHo+9/q/39/P9fL//37H/79ds6Li+
YxNCCBt8DE4JIUMezelczHNTQyji5aindqBGCOt4tXEaD6sZQp616+VBcnN5
f5I+/IyD+AWH8CsOo6hWCL9xD3v/Hvt4o9of8hH8GdepbVL7Sy7lo/w3CuR/
uIxDcggJSMQ84yTeb90KOVlOwWK5Bm/hmlwLtZGKOmirvy6noR7SkYH6aICG
aIT++hrzMdhqr2O5nJvwSj6O5/PxvI2b8gk4EduNT+KTcQrOt1czXqt+Kp+G
HXJzPh2Z2Gl8BhfzmTzQmhZ8FirUWnIrtEYb7FZry2fjHFQat+NzcR4GWd+e
S9Q7cCF35E7IQud4XLgg9uu9kC9CNnLQBY9b05W7oTsuxiXorb8HP28+W+4p
X86X8nXciy+LtdiLK+JY/Urug6uw19q+3C9eawyI5xyPG/vMVeNq+RpcG/fF
9RiMx8wNidmeN/CNuAkvqg/lm3ELhsXz0JPLwzECIzEK3+odzbdiDMbGa6N3
HI/HBEzEJCzQO5k/5Cmch3xMxTRMxxJzt8VjscftfAfuxF24GzMwM56/+Vk8
G/fgIevu5Tn4Qb6P58b7rO9+fgAPxj48jB/1FMQaz+N1PJ8fwaP4yXhBvEbx
/mEhnsCTeApPYxEW4xk8i16+awkvtXYpH+Dn4v2N/fIyPsiF/EK8zvH6WrOc
i7DMXDGv5pd4BV5GVz0r+RW8Ze5Vfptf41X8Or+BN+N8nEOuNaviXlgTj1lf
Ca/FO3gX7+H9eO74IN6XeH+t+4jXYwM2xnO3dhOX4mOUYXP8f9T7CX+KLdiK
cnyGz7EN2/EFdmAndqECu1GJHHtU8R58ia+wF/tQHY/fMyvHs3FMot8aeiPJ
mgE8EBXxuctZeiZzNyTH3whPQR56YhIm4rD+8TwBqfH3x9MwFYfMLbTPotqe
QfIItZFxb3RBf3xnPtG6UXIHtDHux6Xxmc4J5jLVhsu52Kyez3Xjc0g9W67i
HO6OPsjEUX3feEfU4Wr+GpaEXVwBhxQquQrlJvZwfJTPYa+PMItL1GezvzDD
xxrjmZwSz0v+PuW/R38okMtklzZk2NjXh3SO77POnIXGcho34pb26Cg3lFvI
7eUGcmu50F6tuL7xEHvmp/7/PvwXcNTiMw==
        "]], Line3DBox[CompressedData["
1:eJwl1VdwF1UUgPGFECEKKvqAZRgFy4xdkCqIDijFOgQ1CS0EVEqUqDM6Y+9l
RHywAY4aKQIKaOjSRAggAYOGgCIKARMSAoFQA5Hm74wPX75zzj33Znfv3f23
GpqXPrpBkiSl/lyMFuJBDZNkIM46O0nu5m/VO3I2BqMTGhvryumYYzwH7cQ5
GIImxhdYa6h4GO5CG/THAHRBH2QiC831t+U869zDt+ERxMWVYFpaktwr74bW
8pbWbsb3y7vjcfSS9+Q0a+XFXOzQV94oSSaLi1KSZBfKUYNKdMRI/dlchSHo
hKb4DrNwCX7DrzgPP2F5rGXNFbwSI6xREfcq/ppz+Xuub5Ik+3mkfBT2ibvq
XSdejwJ5Mf+C2eLLeDu24bi5dWpl4qPcw7ynxE+jCQbiK/Vj+i4S13GZ/ChP
5CfVHjUnjWdgJo4YW2nsMHeI/4lb9czhZjhmrNDYDvFBbsyZGCPO4lpuw8PM
qdf7rPgZzI81Yx/ET+B2/ImtmKe+hSeY+wcfkp8fz0JeK67hbvIVXMqbsFD9
cu6Oof5XkXwcxus5yAdQLZ7DO/X8gxx9zeO5qc3FZvHvsV/im7mt8Qzebd62
2DsciTOnNhp3xBkwlq9WydvjvKoNiLmYhmxrTOcWcT6MT8UyvYXyVXGm4tzG
c8fgeEf4Z7W9GCGu0FsjnolpuEVPFZerT493DcP17eEZ8R7EWTP2IzaI16qV
8EacE/ctn2RsUPw/tItzYc1C9Xniubg0ziI6qxdwf94Z+8Vl5rZXyxKvUpsv
XoDV4tVxFo1Xi9fEc+PH+Jt4b/VP4ZaxV3GGYp9iD+LsmtOZ/+Y1eh7Quzae
A87F0rgfXoYumCov17dUvASTxIvUxvML8vbmv8hb1Narfc495HdinfwD+QRe
LN8sXsQPmbNc7dqo8Wz1T8WfoFE8D/lH8Rz5Qy7ha/hL3qh/VqzDr6l1sNbr
nOAq9EFvXBn3omcT7hP301cqXoJ35e/gB/F71uolLubP4nrjfRen6x8b3wHx
YvUrxBti3+Vvi4v4Lb4w9lF8I+fHu2Lew3GPSEWBWm+1j8V947sbexf3y/nx
jcBf4ht4YjxffCFv6pYy9FX4Pu5CJaqwG9XYg72owT7sxyjr1/IBHMQhHMYR
HEUdcvUc4+Oox784gZM4hdM4gyTVHuptwA2RgkZIRYnru9p1nuFX+RWcju+L
/uL4PZH3RGuclL/ML6FVPFv5qejR+4b8TTTAZEzBTXE2jafEGnre5zFxHtW2
op/4QVyPE/Ln+TlcgEy/MeNcet9478QZfJ08Vzzcb9TC5P/f0f8AXQMP3Q==

        "]], 
       Line3DBox[{2606, 1302, 719, 906, 905, 788, 924, 923, 728, 1318, 727, 
        921, 922, 2672, 668, 789, 667, 913, 912, 808, 1000, 844, 807, 702, 
        729, 849, 2609, 1346, 1001, 1340, 926, 1332, 1002, 925, 1339, 996, 
        1347, 850, 2671, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
         1312, 1313, 1314, 2633, 1315, 1316, 1317, 848, 1295, 1296, 1297, 
        1298, 1299, 1300, 1301, 843, 2669, 1286, 1287, 1288, 911, 770, 720, 
        842, 2606}], 
       Line3DBox[{2608, 1294, 811, 2226, 919, 2194, 2615, 920, 726, 846, 
        2608}], Line3DBox[{1327, 883, 793, 938, 937, 819, 736, 778, 2300, 833,
         2301, 1327}], Line3DBox[{1331, 887, 661, 762, 1331}], 
       Line3DBox[{2195, 1338, 2303, 2674, 774, 987, 2673, 988, 670, 933, 
        2195}], Line3DBox[{1322, 1321, 1320, 1319, 884, 2216, 1326, 2244, 
        1325, 1324, 1323, 1322}], 
       Line3DBox[{2621, 1336, 1337, 2800, 2228, 934, 2302, 1333, 1334, 1335, 
        2621}], Line3DBox[{847, 1293, 2299, 1292, 2298, 2804, 1291, 1290, 
        1289, 2670, 847}], Line3DBox[{888, 1330, 1329, 1328, 888}], 
       Line3DBox[{1342, 790, 1003, 1341, 796, 798, 685, 1006, 1005, 1345, 
        1344, 1343, 1342}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2317, 2814, 2318, 2816, 2685, 2316, 2813, 2812, 2682, 2363, 
        2876, 2722, 2862, 2354, 2368, 2734, 2723, 2864, 2863, 2355, 2939, 
        2737, 2377, 2938, 2767, 2933, 2395, 2386, 2499, 2962, 2775, 2790, 
        2750, 2912, 2781, 2403, 2507, 2984, 2646}], 
       Line3DBox[{2319, 2684, 2815, 2683, 2847, 2705, 2839, 2838, 2338, 2878, 
        2730, 2914, 2753, 2380, 2744, 2936, 2935, 2740, 2374, 2893, 2736, 
        2895, 2894, 2375, 2391, 2940, 2397, 2597, 2937, 2431, 2542, 2432, 
        2413, 2957, 2603, 2587, 2602, 2534, 2586, 2637}], 
       Line3DBox[{2320, 2817, 2686, 2821, 2326, 2845, 2709, 2340, 2842, 2841, 
        2339, 2343, 2710, 2883, 2882, 2689, 2325, 2925, 2924, 2390, 2758, 
        2918, 2917, 2387, 2653}], 
       Line3DBox[{2357, 2867, 2356, 2872, 2702, 2836, 2327, 2690, 2880, 2370, 
        2892, 2891, 2718, 2858, 2719, 2879, 2367, 2896, 2717, 2856, 2716, 
        2857, 2405, 2512, 2418, 2463, 2797, 2985, 2644}], 
       Line3DBox[{2359, 2868, 2358, 2874, 2364, 2873, 2365, 2886, 2373, 2369, 
        2732, 2888, 2887, 2372, 2733, 2735, 2890, 2889, 2731, 2366, 2909, 
        2738, 2899, 2378, 2333, 2828, 2827, 2332, 2426, 2500, 2963, 2427, 
        2619}], Line3DBox[{2361, 2360, 2870, 2342, 2844, 2708, 2875, 2309, 
        2310, 2881, 2341, 2843, 2707, 2884, 2728, 2729, 2885, 2371, 2902, 
        2742, 2393, 2379, 2901, 2741, 2934, 2678, 2809, 2677, 2911, 2910, 
        2751, 2385, 2536, 2535, 2588, 2647}], 
       Line3DBox[{2407, 2467, 2488, 2489, 2420, 2630}], 
       Line3DBox[{2460, 2402, 2485, 2504, 2599, 2662}], 
       Line3DBox[{2471, 2576, 2493, 2671}], 
       Line3DBox[{2561, 2521, 2458, 2447, 2425, 2976, 2531, 2660}], 
       Line3DBox[{2562, 2528, 2448, 2473, 2789, 2527, 2474, 2526, 2953, 2788, 
        2449, 2503, 2626}], Line3DBox[{2624, 2563}], 
       Line3DBox[{2564, 2557, 2581, 2450, 2592, 2638}], 
       Line3DBox[{2566, 2558, 2573, 2510, 2442, 2629}], 
       Line3DBox[{2567, 2417, 2575, 2462, 2593, 2668}], 
       Line3DBox[{2568, 2466, 2487, 2669}], 
       Line3DBox[{2570, 2550, 2571, 2580, 2559, 2436, 2502, 2484, 2551, 2779, 
        2988, 2663}], 
       Line3DBox[{2572, 2560, 2438, 2437, 2348, 2523, 2952, 2522, 2634}], 
       Line3DBox[{2577, 2565, 2578, 2455, 2633}], 
       Line3DBox[{2605, 2416, 2687, 2959, 2771, 2399, 2944, 2945, 2769, 2943, 
        2768}], Line3DBox[{2607, 2469, 2971, 2443, 2516, 2406, 2774, 2954, 
        2334, 2831, 2680, 2314, 2861, 2353, 2897, 2898, 2376, 2724, 2865, 
        2866, 2700, 2833, 2336, 2832, 2335, 2869, 2725}], 
       Line3DBox[{2612, 2928, 2392, 2926, 2762, 2929, 2765, 2394, 2927, 2764, 
        2930, 2396, 2766, 2931, 2932, 2763, 2739, 2900, 2305, 2805, 2304, 
        2877, 2727, 2871, 2726, 2337, 2834, 2835, 2701, 2362}], 
       Line3DBox[{2616, 2525, 2973, 2446, 2960, 2776, 2757, 2955, 2428, 2755, 
        2743, 2903, 2312, 2808, 2676, 2916, 2715, 2853, 2307, 2807, 2308, 
        2851, 2714, 2345, 2850, 2712, 2848, 2711}], 
       Line3DBox[{2623, 2591, 2636}], 
       Line3DBox[{2625, 2479, 2589, 2987, 2389, 2921, 2760, 2383, 2908, 2749, 
        2761, 2922, 2759, 2919, 2388, 2920, 2752, 2323, 2324, 2913, 2328, 
        2822, 2691, 2840, 2706, 2846, 2704, 2837, 2703}], 
       Line3DBox[{2631, 2468, 2421, 2829, 2770, 2696, 2824, 2825, 2695, 2823, 
        2694, 2826, 2697}], Line3DBox[{2635, 2529, 2651}], 
       Line3DBox[{2640, 2791, 2946, 2401, 2748, 2907, 2382, 2947, 2322, 2819, 
        2820, 2688, 2381, 2905, 2906, 2747, 2746}], 
       Line3DBox[{2656, 2424, 2951, 2346, 2408, 2347, 2941, 2942, 2756, 2754, 
        2915, 2321, 2818, 2675, 2806, 2306, 2852, 2713, 2849, 2344, 2904, 
        2745}], Line3DBox[{2670, 2596, 2590, 2519, 2804}], 
       Line3DBox[{2673, 2552, 2445, 2674}], 
       Line3DBox[{2679, 2810, 2313, 2830, 2681, 2811, 2315, 2351, 2860, 2859, 
        2720, 2352, 2721, 2350, 2855, 2854, 2698, 2773, 2948, 2329, 2461, 
        2777, 2799}], Line3DBox[{2801, 2517, 2949, 2699, 2802}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1373, 2810, 1375, 1470, 2833, 1472, 1583, 2880, 1428, 1427, 
        1622, 2888, 1610, 1556, 2862, 1555, 1592, 1589, 2884, 1614, 2900, 
        1650, 1648, 1616, 1603, 1601, 2914, 1696, 1613, 2883, 1509, 1510, 
        1692, 2913, 1420, 1356, 2807, 1357, 1514, 1516, 2852, 1352, 1355, 
        1673, 2906, 1669, 1667}], 
       Line3DBox[{1387, 1389, 2830, 1466, 1570, 2866, 1473, 1471, 1582, 1612, 
        2892, 1629, 1623, 1621, 2887, 1619, 1560, 2864, 1562, 1617, 2885, 
        1591, 1590, 1659, 2932, 1730, 1647, 1649, 2936, 1664, 1422, 1423, 
        2882, 1508, 1507, 2920, 1693, 1694, 1709, 1524, 2853, 1415, 1351, 
        2806, 1354, 1672, 2905, 1670, 1671}], 
       Line3DBox[{1448, 1440, 2823, 1364, 1365, 2859, 1550, 1572, 1639, 2897, 
        1554, 1378, 1381, 1609, 2879, 1605, 1608, 2909, 1644, 1646, 2938, 
        1748, 1746, 2934, 1655, 1653, 1733, 2927, 1731, 1737, 1637, 2895, 
        1634, 1631, 1713, 2918, 1711, 1722, 1723, 1680, 2908, 1662, 2903, 
        1661, 1700, 2942, 1701, 1702, 2947, 1677, 1679, 1528, 1526, 2945, 
        1758, 1755}], 
       Line3DBox[{1464, 1815, 1814, 1446, 2824, 1445, 1807, 1386, 1792, 1384, 
        1809, 1453, 2854, 1539, 1467, 2831, 1382, 1379, 1542, 2856, 1460, 
        1455, 1812, 2828, 1457, 1683, 1838, 1954, 1687, 2042, 1834, 2962, 
        1950, 1685, 1689, 2911, 1371, 1369, 1739, 1729, 2926, 1728, 1727, 
        2940, 2097, 2197}], 
       Line3DBox[{1482, 1426, 1407, 2817, 1400, 2815, 1398, 1401, 1476, 2835, 
        1474, 1584, 2870, 1395, 2814, 1396, 1404, 1579}], 
       Line3DBox[{1512, 1506, 1483, 2837, 1425, 2821, 1406, 1399, 1397, 2847, 
        1489, 1486, 1511, 1475, 2834, 1477, 1598, 1503, 2844, 1501, 1402, 
        2816, 1403, 2868, 1578, 1575, 1577}], 
       Line3DBox[{1580, 2869, 1564, 1567, 2872, 1481, 1479, 1596, 2873, 1594, 
        1391, 2812, 1394, 1359, 1358, 2881, 1585, 1587, 2877, 1599, 1484, 
        2838, 1487, 1410, 1413, 1495, 2842, 1497, 1492, 2840, 1430, 1432, 
        1518, 2850, 1519, 2904, 1665}], 
       Line3DBox[{1666, 1520, 1513, 2848, 1505, 2846, 1490, 1493, 1504, 2845, 
        1412, 1411, 1488, 2839, 1485, 1600, 1588, 2871, 1586, 1597, 2875, 
        1502, 1500, 1393, 2813, 1392, 1595, 1593, 2874, 1574, 2867, 1576, 
        1568, 1565, 1581}], 
       Line3DBox[{1668, 1522, 1517, 2849, 1515, 2851, 1521, 1431, 2822, 1429, 
        1491, 1496, 2841, 1494, 1695, 1602, 2878, 1604, 1348, 2805, 1349, 
        1615, 1498, 2843, 1499, 2876, 1558, 1557, 1611, 1620, 2886, 1478, 
        2836, 1480, 1566, 1563, 1469, 2832, 1376, 1374}], 
       Line3DBox[{1753, 1858, 1754, 2944, 1525, 1527, 1678, 2907, 1532, 1824, 
        1531, 2941, 1699, 1698, 1839, 2955, 1705, 1868, 2085, 1538, 1942, 
        1828, 1536, 1718, 2921, 1842, 1721, 1710, 2917, 1712, 1630, 1633, 
        2894, 1636, 1736, 2929, 1740, 1370, 2809, 1372, 1745, 2933, 1747, 
        1645, 2899, 1643, 1462, 1461, 1543, 2896, 1380, 1377, 2861, 1552, 
        1553, 1540, 2855, 1362, 1363, 1441, 2825, 1447, 1776}], 
       Line3DBox[{1757, 1751, 1675, 1417, 2820, 1419, 1353, 1350, 2818, 1414, 
        1523, 2916, 1708, 1743, 1725, 1715, 2919, 1717, 2925, 1424, 1421, 
        1663, 2935, 1651, 1652, 1741, 2931, 1658, 1657, 1660, 2902, 1561, 
        2863, 1559, 1618, 1625, 2890, 1627, 1628, 2891, 1546, 1549, 1571, 
        2865, 1569, 1465, 1388, 2811, 1390, 1452, 1450}], 
       Line3DBox[{1763, 1969, 1968, 1886, 2240}], 
       Line3DBox[{1764, 2080, 1865, 1970, 1864, 2079, 2078, 1900, 1889, 1361, 
        2020, 2952, 2019, 1910, 2209}], 
       Line3DBox[{1879, 1818, 1937, 1936, 1908, 1872, 1977, 1978, 2217}], 
       Line3DBox[{1893, 2015, 2014, 1765, 1793, 1929, 1794, 1405, 2829, 1773, 
        1806, 1385, 1791, 1383, 2948, 1808, 1768, 1439, 1443, 2954, 1829, 
        1544, 1830, 2857, 1541, 1459, 1454, 1811, 2827, 1456, 1682, 1837, 
        1953, 2912, 1686, 2041, 1833, 1949, 1684, 1688, 2910, 1690, 2043, 
        1836, 1952, 1691, 2928, 1735, 1956, 2119, 2174, 1884, 2937, 1846, 
        2099, 1925, 2274}], Line3DBox[{2188, 1926, 2283}], 
       Line3DBox[{2189, 2123, 1860, 2282}], 
       Line3DBox[{2191, 1989, 2136, 2248}], 
       Line3DBox[{2192, 1805, 1804, 1875, 2250}], 
       Line3DBox[{2193, 2160, 2259}], Line3DBox[{2195, 2164, 2303}], 
       Line3DBox[{2196, 2025, 1911, 1825, 2973, 2024, 2023, 2137, 1749, 1719, 
        2277}], Line3DBox[{2198, 2957, 2173, 1897, 2056, 1785, 2068, 2067, 
        1855, 2177, 2273}], 
       Line3DBox[{2199, 2065, 1923, 1851, 2988, 1885, 2066, 2176, 2102, 1901, 
        2088, 2182, 2202}], Line3DBox[{2203, 2184, 2290}], 
       Line3DBox[{2205, 1932, 1874, 2220}], 
       Line3DBox[{2208, 1821, 2109, 2081, 2242}], 
       Line3DBox[{2212, 1947, 1946, 1831, 2976, 2131, 1870, 1533, 1939, 
        2288}], Line3DBox[{2213, 1917, 2234}], 
       Line3DBox[{2215, 1962, 2121, 2987, 2110, 2052, 1779, 1827, 1941, 1537, 
        2084, 2960, 1867, 1704, 1530, 1822, 1938, 1823, 2951, 1529, 1861, 
        2074, 1862, 1761, 1871, 2134, 2092, 2946, 2091, 1759, 2124, 1766, 
        1408, 2959, 1788, 1857, 1752}], 
       Line3DBox[{2218, 1979, 2984, 2155, 1433, 2265}], 
       Line3DBox[{2222, 2139, 2256}], 
       Line3DBox[{2229, 2026, 2953, 2027, 1881, 1535, 2232}], 
       Line3DBox[{2230, 2029, 2028, 1777, 2030, 2031, 2231}], 
       Line3DBox[{2235, 1919, 1951, 2963, 1835, 1878, 2260}], 
       Line3DBox[{2246, 2003, 2949, 1463, 2247}], 
       Line3DBox[{2254, 1769, 2157, 1905, 1803, 1876, 2971, 2005, 2006, 2106, 
        1991, 1992, 1771, 1800, 1799, 1986, 2985, 2156, 1770, 2255}], 
       Line3DBox[{2262, 1795, 1931, 2144, 2263}], 
       Line3DBox[{2266, 2142, 2045, 2169, 2267}], 
       Line3DBox[{2272, 2148, 1943, 2211}], 
       Line3DBox[{2286, 2181, 1927, 1762}], Line3DBox[{2298, 2162, 2299}], 
       Line3DBox[{2300, 2143, 2301}], 
       Line3DBox[{1449, 2826, 1451, 1545, 2860, 1551, 1573, 1640, 2898, 1641, 
        1548, 2858, 1547, 1606, 1607, 2889, 1624, 1626, 1642, 2939, 1656, 
        2901, 1654, 1734, 1732, 2930, 1738, 1638, 1635, 2893, 1632, 1726, 
        2924, 1716, 1714, 2922, 1724, 1742, 1707, 1368, 2808, 1367, 2915, 
        1697, 1703, 1418, 2819, 1416, 1674, 1750, 2943, 1756}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
D9O6i+S5zX3e/Fv1pxu11gJlvltY0Ll4Nvt/ef97lcpS+bheJBIR3laR81AN
Ldd1Cjcs4AGj/mDLd0J9ZZ/XFaR2YR9KufQ0bYYQv8qZu61i7qqi7Iuqi/vW
azBi8ctS/xvnG7/Ko1/Ffr80HSRqnHIxsXnuLkZw5V/m7S6uJdd8ncjrzPSe
4v9yPd2Mz14iv+xWsopxxu2PRjfzRfn0Kv7o19dc0frCngr0+vzJSfu6F8By
97ir1aPN9UmgSlJ4FIZFcvsE7io+zkHBAsNM0dUdm7b/nLhP7D1fJ6InzhAw
sMQCu5j53ZbP+cA/3PbG5GwWkrupy6483Qv0OknafEvjsBhq1do0UISoa4lf
eeyKhEO9zg+uBv++eYw6NPvxUH8JEF2oURsn8UJn2Jb1P7vjgdTg1sMUih64
JrBvmUgmAKmrSt1YnJ8Ap3vv33Y4FUMgW+7Nb5QuKDKCS0X1L/Q5xL2nuuRu
ESKO7Nd7MBABZ2VkJLZG/Lr+Jm6XZUzsfKGTvY6tVLoM3IS2Kcfa/rqc/eci
1GjO5AKu9unOlze/oq2B9Jwfnv3n99fJGhYOlPc8kducog/PiXuwYi6Ei/iL
dYSI+qRvVb5UzmkVojsYTe9z/+QtfPccncynMNnkBzWL+j6JPpiY/LfqHOMH
cje1Lt5BFL57YdieFtTXJDwW/0JOm843lYjpQiRqqsjOVO8EeVQUzi6Jv88P
8+1X3j0l1kQ5n8yjNHSpUbtT5uryH/qo45W0fPIo8VaMZczbN/Ikzd570Hni
IGS081H6NLRiFA8c/K33Mib6tR+fCH+CenU2p3h1S7Sj2mfNewAPVryegFFs
gaQR86Jvip6I977ipY6/qn9O8duKtrfkqQzF70oW5fj5jouIjbi0VhuVatuZ
7qWnQdv8bJ/9uKejzqL1O6HVh/LnZtI/+wYgmbTBKL6Ozc+B13j3mMzey0Xn
ClbiD6SYIBMT/PyXL5vbgdy51ZkYqwH7bqbkGjAeRt8eJGz5ce/w9ax/80fJ
ZnSY+6hVlrkXEpG4WvBmjTCuXk9O2sPJ+TsH1z1BYuvGefVFgfmv96YqgFS7
PfxrgCU6O/dgR73277O/rPPbF9HkCD45knk3fn6I1mldA82LN5fPl4eZGRQb
g7dSx+59vuaMWKirPvBGDfw2fXKlBtrP9/chtIXDurYvFGlUh3gL2Y9DJd3B
rsFmH5T3mSND8LAMSuSKkj9KiOtLbxSuG1yfQL5vDtiECYQgw4xjz1NDeoEj
OuT+YngQkupf8hubuY7WM8xcFH5j3ZL2fPKZjNs4yhTYzviRLRHt5dz7oRD1
/cfzm26ch7rFPUFIfDz1wppnDmMlfbXxRzwOavFrJ7nj4GjV7WsYfQekXaB8
S9Ki9ZflC3LUkHH24CFPy48j8VUcRPXc8/p4OfW36X9RNL/7xYsBdKzrUjSW
wRrF1h2AA7fHwPZGzqeRhgHkcOb4vuotvsh07u67Kwc3v8fcjO8J17GxvPUF
yhgXOqu3GaALrR2lOfhJOBLZWHcgoQ/yXLbtM8o3Q7KOhRaB8eMgkppYjI9h
gnFWaQuXjE6MuMzh5d+Z38QXbk0eP30X5Zd37DvidwgE2dpl/jjPLOrPCJ5V
TllX2y8owvb01L+Ss1hfcYmLYgS0r6xqFWiXwev1e4O6FkNgoZf9GM/Wh5Yd
iq8yDJUg90+PZyJtx2F9vWfUhF8JQ6LwYcjCfI/oP9+vEhGRJKtKQ36arGPW
vAB+41yCdF7j/L6bHzGlOunM27T1RBm+/9l+VwVj8D03DCanjkbYbP256N3S
P7mw3yWVxUkvlPyawWoh+jpQ7WQ7b0SIx0jdqC7fljXMFzmO+v0jhaKUwiX/
6JcutF+6KOuNiMUpt6y9Z//VeH8Xv0b1fDzZsh9Cdl8p3h8+iAq4XZ92be0F
edcrXK0WbVBHLBS4x7wDPTW7rS40/ev+tilXpYtu6fdEk8eOBozvk4bFFdu4
gL+oQxwebonxqu9FXsuG8U2xNbCn6qOpvcSv30v+KvfxEfE9k98NjmkX6lId
ghAFW+NeOorNz52C5guvVVJ1QpuSOWNhoDuaF/kko1r46+dUv8pfrU1mZeR2
QNut7z4WTyrhAcVTcVKmzftl5F8bCuEg5IG6eNPs76XAdyEsv8fs/979zt/8
3+N6CYW0KWK96FHnM+/K3I/w/Jna0yL733ef0r7X6gHZU3+U3t6Uz5VxH8J6
bK88WsX/190P2p/yEa5yboauqdHSksBgKDFSoe6cxIFo78kyuqtFcEmV+XKV
2TvIWxOhr43FAy1J2KReKh4ZSuXv3KMUiZBleRMTKvjlfr8tB9y/PIJDImEm
mFtq9mDWe/10dlkzROln+GtqDSG3ibvklBP2oHpV7XxE7QhBji1jx3VmzDHf
689a7rX9PDd4JXInvWNb+guNjzpqrvK8/+RdTR0zJCkjKIQl2genVYy2kkip
8n0f/G12q09/PL6Xxwp5l91yvRQvAWSZfPgf7z/DNRtZLqdhMTs+VqjNbE0T
dSf99sc6xV4kLOLNaIL6HYe4DPaKw/S1nns/3t01mreQKfePYWr3LRU+GEgW
FXz6/S/3g373bYTscVWgf/o0OsAdCGdJzGiyLhD2Ncl22cMU1KhoMKoozdML
Myq29sf7AcVRmdK8FGbUv3xbrar8Dcb49dQf7yIevK1JXFvHI2MV+vvhMlIo
5YH8xTFuWWhaP0G9lmyHcScr9miTns9P/cf6PrvAr3mJDYs4idruTBLFwAu+
kAp+qW4g+pJIwsJPnNXE63x6n4HMxv0Lka2nJTl7UL7bI7oXT4R/ftdDJHdg
eS2TKZ+8yrx1Xffhz3MzdpP93ZIh2SVHP8o02y5srOMPiZu/5S7iUVJRmfOg
tQZk4Li/XF4Ph9hmvxkN512oiSyuiPybLUZ54tafdivIijj4cCa/rdGuT8dM
c6Pfnfr0r8C0B1nHdnNdexyJuhMu0jU3TYBqM4ZNPXkc5b3F7y6IVUS79Vz2
JUYT6u0Q88MU0rSZygWGlcvydv/jPmjxUHaH16c9D8RHSrB4vg0ecj+67Qhr
zqnth9W/Mrqf+9l+E786ElIQ67oHQ14gMSt4zf6nP4uFdCkz6H2qd8A9wX8r
2pC/kvTwYUPVHcyWV/Z7bAUy8pfW/8U5m9yxDwtCK7k5YnpO3Q9vC/3U56V9
Rbtr/lGm6XHN/rWNOo1ub+kVfPYcZk3uZrOztCZGMKvnH/JtRN80x+Q3SVdO
fCBm2rBnGI3AkYwRfdT/ICdM37UDY0A/O/3jvPqc1QNDM50eRHrllZ8klxqy
jFBpohmYgLTJXv/vxTj0bNu0wv7tL2CO/PXSReuWzfUvYNVN0mrIJ9158XiU
hdhP+xTcdfDD7E/HNZBMDd3T3oh3ItsdrmKvzPIkszQ7GyNHNt5bEvVejRH1
Lcvv7rvgQHqW46cfijFnUbhish7f2y8SRXf0Z90YQrSVfDY5J6wbxXKzsm28
f9C/TfmcWNoTkeUo1jxNpwbasrGgFELd1fr8FZeITTC62qDVitGVhN768suM
P/aDtp3PWv1T877FJzPH9R7d8PPL21cQU1gKRqRv5mNk5bd8T+yf8yitZf10
bfUUKuUfOToXHolJFJrF/eDXo18xBHlRI21f7d3nv3pgevlxf8T1NlqHomsU
VGiFjXKP5GNnzNcpyj/ny/CYe5fr+bwMn88e36Rf/rQDkQYmrTEyX2BNcvtt
lp/zSFTSlk1v5pN39tno59m2ip/tky96sroH5NEk33E/8675Jxcr5BlJOYip
RukiU8FGP+VoWm5TrOXD2KcMj1Wd8/7Jqb9LkoI0pujmqYI3Eu83uLzaVYXA
IjzmzuvnOroeTzA0IlN/6M8h6Z8jafwaMVZErx31XcAwRD+kVv8xLjOLOWxG
fca35cH39xIZNuLxfiV37dfrtBgDLs9j6dRvfva7yb0wkVxMAMUOi2x7nY7D
7pFlP+ddTG3K82lFdg9T9BWGZKaf8Vtw9Wp0OGk2k+r35zS59zbaX8hriz2V
OoNx8Yz8dtPxhejKsfG/jMenhWITc4R8e4towM7h4120vLjz7GN9uV9fj2y7
ktg6afPpx+65m1zx24hfIuopO2513bxwOf2XdjWff8Z7SD6RDYd0/k6arZaZ
Oak/22+SB4jovBZVlvvzVfwhaW/t/4g7sZibJeL7MGjVMP66RsAGt/1i07JA
NZd7LMeiifvd4ka8EPUKm66Ne376LP69PzBg4GeeLOh+zuVSlxvwrjR39iX/
Tz0NhUmGzCpzR56e5SCp4tzgJgn46qmDw+hQQorsxPYaeDi1FC1EPgzTLIde
9rXwIC5FN7VAl15M+fuqsR/2Z4sfWSU9G44Ce16eC6G6iWbFPd8K/PF+w13v
HW13bkRm31lOV/v/kQ//z3Z2XwdBPplXmMKZNqYptQui+v/It0fu9o4+cnBA
tOUdVpyvzqHuOVJyVwKnL2oPfs0ziEbJunoVekMRmDYwRlaPwn7ji0FLjpPo
yTqrcHRUMmpJIq2/kPfjnSF16/BNGYzP+VNhXIk7/uX3bjmK29YpuWvRY+1O
zo48J1QwXEZ1nw4PS4fVs3OImtEdHgkZ0weeSMhBPl2UbBL2sR++3XYqD51X
UnGvOGyC+MkWz9DU4qHybV2iTk4JitgrZTq//hyd/6QXFuaFh1NL+1x8ggwR
Y716zfoME/LND8+cJIyL+5qM0/hbY2Ru5NHzdcsxpHBuherHdzGVST7b1jo+
oKid7PqGznLIpJqVw/4vz8HM9j+k3okJU/qedON2wb9973Pahmmo8ek3zJO9
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
6Vi2wNHgv/d+dj0cI8R8italC7TSv1zJ54mBS4oHVnnV1t+v+tmCIPLATphV
vyRk6vYQXFJXpTehv7e/PFL+FnjSHrjjUcjUI2yNgtpicyQ3TsIgSSwFr3An
FNInbqhnt0QDJ7/IHWqehPOvU5e0t+aDfOUUit+kgzKnzvS9/E1+nuol5VTY
9QY4BzVEPX2vIa76rFBGtr+XD7Sf4bZy31oGrfSuCfduGqN5kzsmFPl4UO1g
VsqU7YH7A/Zbtdo9kIGayEjw5wmg3EuZK6XWBcapGw8+5PVER5T24PT0/lyf
RQofp07xdgNX3B4KFxJv9O1MNLPuiUl4+/raPfYNg6CaQnO+bMMDlGhtdVJ9
9/rnnTM9Z3k/Sx/4bW7ZWRsYgE5hqTHCwhOQmX85tsJnALIuH8ncWRSELr2c
FgrQW5/PovvIquvbQVgqD/vOtBKCXhdPiKk/GIOue2yd7qTD8PDEsedzTGHo
S3eKxejsKDiWdUvjngxBppT0KYOkcMS642LRJam/ly+th5vn8ofRN7eAPqNM
mYRwHfJ7cJzOlWBXYc/0mfyayqD2OdfhmO+d6O33IZ9jqpOQo79fs9K4GDZS
LfRl3nqLSPQ7I/10/ny/Uqr1xQ/rvgf9DS3e5k9rYTWpDj909d+/3lVDQyz5
1W5g7y53ejYTCcXhY46bOSch642RbVtrF+wxS2rPk4sBtoU5r2rxP1/Xdema
aAE9PAyTOFyicvSEpqJs7vNf1+/DnNp4+PLB2DgkdKwgUDpKHhoSlC0CfvOf
miVXZ3DHJB5sqrbKbeqLhv6k8buP2TL+6+LLenjSSXm3aEIcPkZjlP6acH+5
QM8zfc/mJVwaDKdLJeDjkjJ1DLmZMPUYX37D6iW4y7e8433WBsVfsov1NczA
MOtVyaLMFIwWlRacNG6BveRdeKpT+miATKvBJ3H9uOwWYbKq/CYb7kdxtGvZ
PUMqTWkMUYQ8R5OZRGhR6Bt2v8y7R15J3ChUduuP/3D37DqF+XLmO/ae4WfP
F2P70dCxhz/mHZ9s/UqzrHwO4nAZp7R3q0FawVsv4n9eJ6Ov3y2hMobmC5ZR
Q+0mQKrz1pDYv3fXxddoo4A2WJiRhuH0roFg9+U9xP+4+/r2nt372hprd8Of
vKIiHMf4T78antTXF+rlrLFLmh32K8VhOIXV338Xl1m4653flCdEDR+cdTth
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
/wNlVVSs
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["a", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{367.5857199622059, 235.21737949105514`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.2419806778025557`, -2.1065562315150697`, 1.40923507046378},
  ViewVertical->{-0.30351062711548715`, 0.2851773921208978, 
   0.9091507874115754}]], "Output",
 CellChangeTimes->{3.776131061609481*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"01c254da-2c8e-4b89-8a67-5e2e67b8d6e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"4", " ", "a"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "a"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776131080111066*^9, 3.776131103705441*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"32550087-dddb-4a37-a982-526a413d3b4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{
     RowBox[{"4", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"x", "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{
     RowBox[{"4", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"a", "\[GreaterEqual]", 
     FractionBox["3", "4"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"x", "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"a", ">", 
     FractionBox["1", "2"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"4", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"x", ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"a", ">", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"4", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"x", "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"a", "\[GreaterEqual]", 
     FractionBox["3", "4"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"a", ">", 
     FractionBox["1", "2"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7761311040046463`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"10b394de-d5e5-45a4-a2f3-5514b95ea6a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"4", " ", "a"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{"2", " ", "a"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "a", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "a"}], "}"}], ",", 
   TemplateBox[{},
    "Reals"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7761311117755623`*^9, 3.776131119921629*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"711f03e7-42e3-4811-a433-52a22fdfb5e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{
     RowBox[{"4", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"x", "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{
     RowBox[{"4", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"a", "\[GreaterEqual]", 
     FractionBox["3", "4"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"x", "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"a", ">", 
     FractionBox["1", "2"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"4", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"x", ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"a", ">", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"4", " ", "a"}], "\[Element]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{"x", "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"a", "\[GreaterEqual]", 
     FractionBox["3", "4"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{"a", ">", 
     FractionBox["1", "2"]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"8", " ", "a", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"6", " ", "a", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"12", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"22", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"4", " ", "a"}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"36", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"60", " ", "a", " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{"37", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "-", 
      
      FractionBox[
       RowBox[{"10", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]], "+", 
      
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["x", 
         RowBox[{"2", "+", 
          RowBox[{"4", " ", "a"}]}]]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]}], 
     "\[GreaterEqual]", "0"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7761311207467527`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"7dccefd4-1a91-4f03-b42f-ec771a3b7539"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionPeriod", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellLabel->"In[25]:=",
 CellID->1060920787,ExpressionUUID->"5e0d719c-32f0-4386-aa20-0d1d1864688c"],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.776131237843343*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"8300ad40-a321-400b-855a-2559e14459e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionPeriod", "[", 
  RowBox[{"x", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.776131243623838*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"d49132db-a331-4c94-a005-eb6bcfd51854"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.776131244048284*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"cd6c8a02-0a71-4c3e-97d6-f4f5b8734bbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionPeriod", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    FractionBox["1", "x"], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.77613125625537*^9, 3.776131257103372*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"af5daf5b-e0e6-4d64-a6fc-f3f0b61f8a35"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.776131257436941*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"07117b81-b10e-439c-8c76-49c5fabfa568"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionPeriod", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", "x"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.776131262911337*^9, 3.7761312633751173`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"debd19fe-efa9-4201-a4de-8478be2380d7"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.776131263809926*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"f4dd3623-5a1a-4ea5-8d13-2ccfb0208826"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionPeriod", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"\[Pi]", " ", "x"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7761312748390303`*^9, 3.776131278278759*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"99a82fdd-9abc-42dd-a001-ad39326bfb66"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.776131278596898*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"67bf94cf-a907-4bf4-a5f7-a14572d38031"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionPeriod", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", "\[Pi]", " ", "x"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7761312845430517`*^9, 3.7761312850786343`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"3dfd7dca-6e29-4b15-b754-3fa0ff99949a"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.776131285462841*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"a54e0c36-6869-49f1-bb38-1433ecf52cda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionPeriod", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"a", " ", "x"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7761312962388687`*^9, 3.7761312964789124`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"cda1513f-280a-4456-8f15-a77319c075dc"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "\[Pi]"}], "a"]], "Output",
 CellChangeTimes->{3.776131296964107*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"5e7dd73b-3f27-4844-9172-4c6714e1847e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.7761313010303783`*^9},ExpressionUUID->"a6a1e48e-0417-4777-bff9-\
31826f41c2a4"]
},
WindowSize->{1920, 1027},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 147, 2, 31, "Input",ExpressionUUID->"f63c54de-0e88-47f5-b7ae-d3a67ab39008"],
Cell[730, 26, 150, 2, 35, "Output",ExpressionUUID->"0034b4dc-0830-4879-a181-31bd6873a997"]
}, Open  ]],
Cell[CellGroupData[{
Cell[917, 33, 306, 7, 31, "Input",ExpressionUUID->"fd6e0aee-5343-477d-81f5-81b3276b9eef"],
Cell[1226, 42, 2745, 64, 240, "Output",ExpressionUUID->"9d789d1b-fd68-4cfb-b256-786549338bd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4008, 111, 690, 20, 53, "Input",ExpressionUUID->"3d39bb5b-2823-447f-a349-087f851168c5"],
Cell[4701, 133, 1120, 38, 75, "Output",ExpressionUUID->"f5c76d50-2a7d-4e86-97ab-caee67383058"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5858, 176, 1168, 39, 72, "Input",ExpressionUUID->"28716582-ff46-4599-819f-fe4d01665cdf"],
Cell[7029, 217, 1136, 39, 73, "Output",ExpressionUUID->"dee3d68d-984a-4d04-8abd-fc9443996dd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8202, 261, 1252, 41, 69, "Input",ExpressionUUID->"3b8649f6-6c44-477b-87ba-9f8d51ed7b81"],
Cell[9457, 304, 2991, 103, 65, "Output",ExpressionUUID->"2cb8bff8-6b02-4fba-a5b2-446d79507e7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12485, 412, 1242, 40, 72, "Input",ExpressionUUID->"d71c9fad-e192-4074-b268-9ec3cbab5e51"],
Cell[13730, 454, 1264, 40, 75, "Output",ExpressionUUID->"a9370b05-98b8-41a7-953f-eaf8c7b95a52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15031, 499, 1244, 40, 72, "Input",ExpressionUUID->"8462ce0f-0f52-467d-8e0e-ee69dcf365e5"],
Cell[16278, 541, 1268, 40, 75, "Output",ExpressionUUID->"5441d83e-22ce-44bf-9ff0-4b68761add56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17583, 586, 3401, 107, 61, "Input",ExpressionUUID->"0841ddd1-b18d-4069-94fd-6b58e52a9854"],
Cell[20987, 695, 9474, 310, 125, "Output",ExpressionUUID->"d98b9457-c305-4ddc-9c58-2366fa2d1606"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30498, 1010, 3843, 116, 61, "Input",ExpressionUUID->"3545024d-20db-4f6e-a395-68126d0e3964"],
Cell[34344, 1128, 3198, 101, 88, "Output",ExpressionUUID->"f5b13508-4853-4e1e-82af-0f49fba63f9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37579, 1234, 3546, 105, 137, "Input",ExpressionUUID->"3a146d76-627b-4626-8e38-4b3dbc7bc0e5"],
Cell[41128, 1341, 352, 9, 23, "Message",ExpressionUUID->"debf27e7-9f41-4119-9124-ea3399bbee8d"],
Cell[41483, 1352, 3502, 105, 88, "Output",ExpressionUUID->"f10bbfe3-76ed-4435-bcad-ef7fa8d80a6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45022, 1462, 295, 9, 31, "Input",ExpressionUUID->"105150d8-9b6f-4f6c-93f5-01404fcbc905",
 CellID->1096296349],
Cell[45320, 1473, 300, 8, 35, "Output",ExpressionUUID->"b0a13390-3884-47ce-b478-d6b930ce241c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45657, 1486, 250, 5, 41, "Input",ExpressionUUID->"ca71d146-3379-433d-99db-60b6c74e47fe"],
Cell[45910, 1493, 187, 3, 35, "Output",ExpressionUUID->"9b3d331f-2a01-4e1c-b066-dd6d3bb8a67b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46134, 1501, 266, 5, 31, "Input",ExpressionUUID->"0daf47a4-c035-4384-927e-6c3a9bb04e7d"],
Cell[46403, 1508, 171, 3, 35, "Output",ExpressionUUID->"11cf0016-c90a-4268-b2e8-347791969e9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46611, 1516, 260, 5, 39, "Input",ExpressionUUID->"d4dfc21e-879f-47c7-98ef-fec18eabc709"],
Cell[46874, 1523, 154, 2, 35, "Output",ExpressionUUID->"a5087abb-2f48-4103-bfc1-09f7123d1d57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47065, 1530, 261, 5, 39, "Input",ExpressionUUID->"47f4163d-d65d-46bd-8d70-8bdbbd51037f"],
Cell[47329, 1537, 487, 11, 23, "Message",ExpressionUUID->"c4a2581b-0deb-4b6a-b87f-b7b5995f65e7"],
Cell[47819, 1550, 236, 5, 40, "Output",ExpressionUUID->"998767bd-86c4-4572-8984-4e791a01bd0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48092, 1560, 298, 7, 39, "Input",ExpressionUUID->"401b944b-8f55-4e9f-a5ba-5256f6cf670f"],
Cell[48393, 1569, 212, 5, 35, "Output",ExpressionUUID->"0c86f938-86d0-49fe-ae98-56e6c3ec152b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48642, 1579, 269, 5, 39, "Input",ExpressionUUID->"21b715a7-51aa-4553-9a90-23014f55e9fc"],
Cell[48914, 1586, 184, 3, 35, "Output",ExpressionUUID->"f9c98dc5-a3a9-4a43-9bbc-805248ae8c6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49135, 1594, 308, 7, 39, "Input",ExpressionUUID->"61f06573-7fb8-4882-a1a2-156200313d0d"],
Cell[49446, 1603, 225, 5, 35, "Output",ExpressionUUID->"21c7e286-3f42-44af-b4e8-febe3074694f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49708, 1613, 278, 6, 31, "Input",ExpressionUUID->"95dd4952-45a2-466f-8103-dcb330d42d6e",
 CellID->1959461522],
Cell[49989, 1621, 217, 5, 41, "Output",ExpressionUUID->"1641081f-891a-419f-8471-2ee5da67b2b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50243, 1631, 332, 10, 41, "Input",ExpressionUUID->"9a8c4f25-bb2a-4ee9-b5be-2ef2f1af7d52"],
Cell[50578, 1643, 7129, 136, 249, "Output",ExpressionUUID->"6e5f5d13-4a23-4125-a6cc-0134989ec910"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57744, 1784, 1465, 47, 72, "Input",ExpressionUUID->"df855dd9-6da4-4b49-8069-8674c11343de"],
Cell[59212, 1833, 163140, 2689, 254, "Output",ExpressionUUID->"fdd88630-9f15-4f7c-aec1-e191264b6c88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222389, 4527, 1521, 47, 72, "Input",ExpressionUUID->"f34aa679-cd55-4fa3-8770-7e132ef97deb"],
Cell[223913, 4576, 163327, 2695, 252, "Output",ExpressionUUID->"01c254da-2c8e-4b89-8a67-5e2e67b8d6e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387277, 7276, 1321, 41, 72, "Input",ExpressionUUID->"32550087-dddb-4a37-a982-526a413d3b4e"],
Cell[388601, 7319, 58915, 1866, 805, "Output",ExpressionUUID->"10b394de-d5e5-45a4-a2f3-5514b95ea6a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447553, 9190, 1362, 43, 72, "Input",ExpressionUUID->"711f03e7-42e3-4811-a433-52a22fdfb5e9"],
Cell[448918, 9235, 58915, 1866, 805, "Output",ExpressionUUID->"7dccefd4-1a91-4f03-b42f-ec771a3b7539"]
}, Open  ]],
Cell[CellGroupData[{
Cell[507870, 11106, 221, 5, 31, "Input",ExpressionUUID->"5e0d719c-32f0-4386-aa20-0d1d1864688c",
 CellID->1060920787],
Cell[508094, 11113, 175, 3, 35, "Output",ExpressionUUID->"8300ad40-a321-400b-855a-2559e14459e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508306, 11121, 211, 4, 31, "Input",ExpressionUUID->"d49132db-a331-4c94-a005-eb6bcfd51854"],
Cell[508520, 11127, 149, 2, 35, "Output",ExpressionUUID->"cd6c8a02-0a71-4c3e-97d6-f4f5b8734bbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508706, 11134, 288, 6, 48, "Input",ExpressionUUID->"af5daf5b-e0e6-4d64-a6fc-f3f0b61f8a35"],
Cell[508997, 11142, 149, 2, 35, "Output",ExpressionUUID->"07117b81-b10e-439c-8c76-49c5fabfa568"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509183, 11149, 288, 6, 31, "Input",ExpressionUUID->"debd19fe-efa9-4201-a4de-8478be2380d7"],
Cell[509474, 11157, 153, 2, 35, "Output",ExpressionUUID->"f4dd3623-5a1a-4ea5-8d13-2ccfb0208826"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509664, 11164, 297, 6, 31, "Input",ExpressionUUID->"99a82fdd-9abc-42dd-a001-ad39326bfb66"],
Cell[509964, 11172, 149, 2, 35, "Output",ExpressionUUID->"67bf94cf-a907-4bf4-a5f7-a14572d38031"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510150, 11179, 304, 6, 31, "Input",ExpressionUUID->"3dfd7dca-6e29-4b15-b754-3fa0ff99949a"],
Cell[510457, 11187, 149, 2, 35, "Output",ExpressionUUID->"a54e0c36-6869-49f1-bb38-1433ecf52cda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510643, 11194, 295, 6, 31, "Input",ExpressionUUID->"cda1513f-280a-4456-8f15-a77319c075dc"],
Cell[510941, 11202, 196, 4, 53, "Output",ExpressionUUID->"5e7dd73b-3f27-4844-9172-4c6714e1847e"]
}, Open  ]],
Cell[511152, 11209, 130, 3, 31, "Input",ExpressionUUID->"a6a1e48e-0417-4777-bff9-31826f41c2a4"]
}
]
*)

(* End of internal cache information *)

