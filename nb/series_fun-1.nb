(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1831442,      35256]
NotebookOptionsPosition[   1818177,      35016]
NotebookOutlinePosition[   1818542,      35032]
CellTagsIndexPosition[   1818499,      35029]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76878937842525*^9, 3.768789379097645*^9}},
 CellLabel->"In[1]:=",
 CellID->1062126342,ExpressionUUID->"11cfd466-d57d-4447-88a3-03047ad3a2c3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", "x", "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "2"],
    SeriesData[$CellContext`x, 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 1}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.7687893795433807`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"178688fe-a171-40cd-9043-0946b43ca592"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  InterpretationBox[
   RowBox[{"1", "+", "x", "+", 
    InterpretationBox[
     SuperscriptBox[
      RowBox[{"O", "[", "x", "]"}], "2"],
     SeriesData[$CellContext`x, 0, {}, 0, 2, 1],
     Editable->False]}],
   SeriesData[$CellContext`x, 0, {1, 1}, 0, 2, 1],
   Editable->False], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[2]:=",ExpressionUUID->"3dd4bd2a-f8af-4de1-8d69-9b646435919a"],

Cell[BoxData[
 RowBox[{"1", "+", "x"}]], "Output",
 CellChangeTimes->{3.768789382734671*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f2e32e4c-f8bb-412b-84dd-cb351719b690"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[3]:=",ExpressionUUID->"9b8ad6a2-45ce-4c2e-8047-dd727538f5c0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1P8z1HkcwHF2Vx9RG66vV5Svh+jrtUTN6z367mjY47gprC+lEHLyZSoh
tN3pmDZ3QubuFpFaJOdo7RsRNfTFl1bR+rI4X2J9W5bWvu9u5n54zuM/eBr6
hbHP0NTU1Jz/7T93wPoxQgg+HWfVQYgMhy0acxeXCJbMHNOZlctwaflus1k5
wZxAf6fhcRneY+7sNzxOcIBLVkOLWIZtdJM+tIgJDjXSrLhbIsNIOv3ybgnB
8c+lGXt9ZJh9o7V4rw/Becxsj0DRJI5+nXQhUKTCk7kru19dmcAdHdpjdb7L
uLBoQ8f1Z2NYvzZsrc0WJbaL7zUPtR3BFcENGms+LuEgMVfboHoIc1J3T71P
XMS1G/37yjWkWHH7MheDAk+ZLuhcu9aH+UzJpsz+eZxqFxPISenGOY67I9pv
ynG4ZWOz81fvcGKIb4zFiTms+Ti5P9/kLb5MfxAdMTGDuza71PCCm7Bv/GuT
d4XTWGeFwsnvVjXOqBnKzAmawuhM2H6z+1m4utd81UOjScxhRByEzkdgrIMc
3HLHcSQm84KUOnhsyQ0akI5gW/de96jwFuhtLNvGYg1jh8gcEY/XDkNWGXvw
n1LMKujMSrjdBbpxRawd6v1YQn90m7/8EaxYMqv82R48FsA9b53SD9cPT7yp
ihFjkdfNDfxDg7DOTZD+/YY2PN9ZaPPt3DA8nm9c02zyErslMpWtUaOQ3z10
azRJhH86fOiV385P4OW65Um3fx4esxMdrq+ahCqty531l/jwXVfxekH2FOwb
UDdI8MRgbNCny5VPg/HU00W7+hfAiLPxOWY7Cyf471tPerZB27mo8i9+mYMj
znp0eYUYXHkN6OqEHNJ8xPG7KntgULxvW4v1AjSd1F/totcPAfd/XmF+UwET
huvi2rKkMJ+uBedbF+FS5HbftPXDYFedUXpM+zOIe3TYZ5tHICRU02JvgBI4
sQf+ppzGofRA7iy9YBmebbf58ZnGJAxkbG7spxEwWykcyTs+BTyGdyTbRA3p
C4OPaHCngSmp+IPWoIbUlmhFEQMzoHY1wW3/RXW04Frj3Wg6B8pC75IBPRrq
/tpns2mSHEKzSm7p1dNQuIeOrlHPPPy1naupG0pHm+4MejL0FbDKMcIqkclA
glO/3Z+NWQSx9Zv2WCEDeRy8dry5Zgke5oLJoLcGKvO+YGSn/AyeJSxdfZUG
Umgdole5L8OV5N8Teh6sQOy39iz9TBUUjehnM50opGWvXSe8p4Lke8kcyUkK
1eV9+OY0XwUc9oSpwJVCu2JifbMFKtgoFJY6e1CIubUydVOjCm6knXqe6keh
FyF7pOtmVBDAujutFUshpGmRznQisC1p7XGqgEKKi4ovBa4ElLZXVosLKVTS
3ZTv7EGga0LaVlBMIYOSs09T/QikeZR7HS2jkNI9b1grloDKkv1DspBClfyt
B6kCAj1v03Lp7RQKXS1rKigmUJmy4N/eSSGzaBH7aBkBnr2PBb+LQnccvc4l
Cwk45u944iChUMR0Fo/eTqAqpvVFwiiFLE8FGfC7CGRY70tz/USh/ob9RQ4S
AuEDOW6GMgq5ZHaJEkYJmDuF9NbOUUiTVnjCUEaAod6Rl75AIRwc3VE7R6Cv
wj6Is0ShqM6jPpwlAk+D+Dt3LVPo/3/Br1u15YRQ6B+FGXuW
       "]]},
     Annotation[#, "Charting`Private`Tag$10168#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-0.9999999183673469, 2.999999918367347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768789386487131*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"fb7d614a-7b6b-4382-a121-c2595b59930b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"Exp", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "i"}], "}"}]}], "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768789391209813*^9, 3.7687894138426027`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"f4e87053-e28c-4683-98fc-f20414900dc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"1", "+", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"], "+", 
    FractionBox[
     SuperscriptBox["x", "4"], "24"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"], "+", 
    FractionBox[
     SuperscriptBox["x", "4"], "24"], "+", 
    FractionBox[
     SuperscriptBox["x", "5"], "120"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"], "+", 
    FractionBox[
     SuperscriptBox["x", "4"], "24"], "+", 
    FractionBox[
     SuperscriptBox["x", "5"], "120"], "+", 
    FractionBox[
     SuperscriptBox["x", "6"], "720"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"], "+", 
    FractionBox[
     SuperscriptBox["x", "4"], "24"], "+", 
    FractionBox[
     SuperscriptBox["x", "5"], "120"], "+", 
    FractionBox[
     SuperscriptBox["x", "6"], "720"], "+", 
    FractionBox[
     SuperscriptBox["x", "7"], "5040"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"], "+", 
    FractionBox[
     SuperscriptBox["x", "4"], "24"], "+", 
    FractionBox[
     SuperscriptBox["x", "5"], "120"], "+", 
    FractionBox[
     SuperscriptBox["x", "6"], "720"], "+", 
    FractionBox[
     SuperscriptBox["x", "7"], "5040"], "+", 
    FractionBox[
     SuperscriptBox["x", "8"], "40320"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"], "+", 
    FractionBox[
     SuperscriptBox["x", "4"], "24"], "+", 
    FractionBox[
     SuperscriptBox["x", "5"], "120"], "+", 
    FractionBox[
     SuperscriptBox["x", "6"], "720"], "+", 
    FractionBox[
     SuperscriptBox["x", "7"], "5040"], "+", 
    FractionBox[
     SuperscriptBox["x", "8"], "40320"], "+", 
    FractionBox[
     SuperscriptBox["x", "9"], "362880"]}], ",", 
   RowBox[{"1", "+", "x", "+", 
    FractionBox[
     SuperscriptBox["x", "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["x", "3"], "6"], "+", 
    FractionBox[
     SuperscriptBox["x", "4"], "24"], "+", 
    FractionBox[
     SuperscriptBox["x", "5"], "120"], "+", 
    FractionBox[
     SuperscriptBox["x", "6"], "720"], "+", 
    FractionBox[
     SuperscriptBox["x", "7"], "5040"], "+", 
    FractionBox[
     SuperscriptBox["x", "8"], "40320"], "+", 
    FractionBox[
     SuperscriptBox["x", "9"], "362880"], "+", 
    FractionBox[
     SuperscriptBox["x", "10"], "3628800"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.768789416182406*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"39246379-acb5-4f51-baff-74b662dc94ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Normal", "[", "\[IndentingNewLine]", 
      RowBox[{"Series", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Exp", "[", "a", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"a", ",", "0", ",", "i"}], "}"}]}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "10"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768789421665666*^9, 3.768789460501535*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"111eee1e-dd76-4b5c-bc50-dc50ad72b201"],

Cell[BoxData[
 GraphicsBox[{{}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.768789445846302*^9, 3.768789460921585*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"331257d0-c2df-4f42-a6e5-1879b9b83f48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", "x"}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"], "+", 
      FractionBox[
       SuperscriptBox["x", "8"], "40320"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"], "+", 
      FractionBox[
       SuperscriptBox["x", "8"], "40320"], "+", 
      FractionBox[
       SuperscriptBox["x", "9"], "362880"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"], "+", 
      FractionBox[
       SuperscriptBox["x", "8"], "40320"], "+", 
      FractionBox[
       SuperscriptBox["x", "9"], "362880"], "+", 
      FractionBox[
       SuperscriptBox["x", "10"], "3628800"]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76878948201014*^9, 3.768789489386071*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"fa0a4795-59fe-4ac6-bc7b-ed6ff258ef30"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1FlMlFcYxvGZYVhmGP2AAxypWBZbgiiCEFax36tIGBe2YbERay1CQygF
CgQwCJXIomCoslaWRpFS6FQhprLb71QQErZSKSBFC1YZZHFhmTAsMrXJuXjy
u32u/hZhsbIIAY/H83m//02b9llUqxFZGyh/oVYzRJFqrBzfQKRvZc9s0ypD
fPUmVppWEakw/+1N7BJDzN3i3sUuIQLxk2sTCoY8yC3QmVQgkmn0sT7pZ4jO
3tEPST8ieqfuHLhQzpCixDPHLpQjYj1DSnguDJHzE6p5LoiEaCik/JitRDPC
28HkMwMi7skPd2iVEPT4YXTVNX1i1ZA3dninLpF1lJ3d1aNHqrOdumVFIpL6
5kD01ecMVZs0J5dF1fttpWoR34Jg883rEqqQeFfe95XOi6kCUtN9biQhVETl
k9OZRUZ/1GqTdp1du38IUHPpZzTu6CItskG0TmGrDY5na8Z5ZgkJ7+Qn6Tni
Ve7vvOs58mEB+RU7MifkSs5UHFm3fIhPXA0HZTNZi9xXTjaa46ZqbiQqSNzo
9po76/JPbUfHOtcV0x6QkzPN2aS4q2OqVVzQ28TNp9Jn3M2ngZ3nDiq5zCQ/
/WnNYW46w8jDe9si58r8Mun2gHCtxdZeL0NecfaytpH70nus/czYsl2lgrth
e9z4xsNH7OHWcdG7kEkuJU86rymbYOPq6lX6aIiT7q7VSE5SsCFf7rz56HwL
51Q4Lo8YnGe7+8ZyHQOb2b6K266OWQusu+3vd/1Lh1jfYw17/ppaZgVJRk/C
TSZZfps45q5ExWpL/DPCXitYoVYt7EteZy9OjnjG33rFHoqbs2j5c5NtKM/2
T19cYB/7eFqzqzyIrQrXexGiZF0DHHTi5QI4HVW2IydDxdo59ed3gBAuByS5
OVass53WbRUmA5ogNCxWfLu2yQpyjy6xadow2pv1NpPhU0UQnBrmXNYhoIoh
WnfOcuCkkCoBM3lXidasJnULpDZ7BjLl2lQG4mqiG53tROAa6BxaXqoHEoFL
2N4pMWhlbN9XGq8PXl8HFdsUSqDK+eejxUcMYFvLjlivj7bClSf5TZYGCAri
L12zH2XgiFun9Ps5BLJsP9vKRj2qIdiEZgZXp+lTjWBEIaoqDDagGsNA2NRB
AzNExfBM+JOq2BJRMSzXRNabWCEqBpO5OVMLW0TFEJ6wuGK3H1ExrF1U3/Y5
gagYrH40+eDyd4iKwc17fFBSiKgYjs9U5FwtQVQM39iaK0srERVD+z2rwRo5
omKQdTlmd3YjKoaISKWHtBdRMaSIm5Z6BxAVQ6Wv+xdDw4iK4eUIePz7HFHf
/00RLEVMIyqGLds762ZmERWDw+feeGEBUTF48UUDiUpExfDprZ5MlQpRMUR5
Xdl/fgNRMdB+UTH8Bz3yOys=
       "]]},
     Annotation[#, "Charting`Private`Tag$13137#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
1gz9//8F2todObJw3gz9D24emeA=
       "]]},
     Annotation[#, "Charting`Private`Tag$13137#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$13137#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
IsGCk++NiP8BlaZa+Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$13137#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
6yOYoyzv8JbdP1DC73WqPpl/cKOOomzd2A/kgVjEaYvD+EVLpX3j2U6kMtw+
vS1lAB+WsBQhInvQlb9bFIWDBrB5fxtTLLMHlczdsPp3YQB/OZNZQ/vQg3So
SlV1OwfwcfItJD/Vg8xkfO6fb+3HR7L0ayWVmcjDasPuNO5+7GzbbrMuholK
m05eF/Lpwz9/ZjUkOP1E+qUdnCsWTMyIfBjArt6HXmQ/2/VpDxO/W8p84qDf
h0QeXDp/T5KJ/eIsUxvM+1DbHDX6YGsPVn2SfrnBow/J+VrwpSx242KJLy+8
SvrQxxszNMKwC6dZlJ73IH6h5btq1GBmO06oq/7mf6ofuWW9nOcXaMEOdnOy
eTCIVOiugbrMZuzX4HkwpmUQTbgr0y8/b8b0WwtXbg0MInetLJlWw2ZcNSTI
cp82hDwaUg/H+zXhnC6SiduJITT1e/N+jboGfEPj3FXq7BCiBs4/3udegwVu
d7uK7PmNLBxlnjT7vcF7QkTYXs6NoLD/LodGF5Xg1MwL9/Xoo+i9X/kls7HX
+NZwUfmw7CiSjTmzt9mmGBfayUs5m42iSZzW0aT7Cpt5H3TXezGKJNSMlFP5
s/F41XSGxfkx9Dch0WEi0R5buyd6OI+Oo0917WFqR0tQxbDjxQMJE8jJ+8en
U5vfoJZ7kXObMyYQh2wHJYi1FGUqZQpvKJ5AB3w7/VtfvUV+5/X1xVonUJ1i
j7vHOoxMxq193/BNIic99+cdvz+iuHWRTNvwSeTy2CtOPLcGCUVcOZcfMYV2
b/lQYHK/BcnY3WsZLJ1BGq1t8WU1LUjRbFMbT90MUvEd8VFebkF3aNq2Ol0z
SL5GWI/DrhVprPhpNK3OIIGzri1Y6SuaX1HgizOYRSPJotNby9pQN7SuFrfM
okc0Tw2e/nYk96zHKH9xDpE9BTsd1jORc/O+6+yei+ikbXZziToTRbI808wK
X0QFB1ANzYSJNOhDetZpi8h+4/niwmAmSrdwSSQ3LaKP1e+iKNNMFPHTmbJj
yxIKFHUweFr/E135U+lgMbyEKB8KXvQF9iHqyKj5tNsKYqeZ3LAfG0BH9UnF
FbYkwnLTSdjBOYj85MVWbrqSiGxdh1Uu2UGUUJZbZuxHIg5f9b726sQgkmuM
biMnkIj4gcdXKZWDiLUH2y42kAj5DxP/pT8YQkUbo7Zt1GUhDDxj7H8b/UbD
8YY5gdvIRCCzTc89bRRNHwmjj6tQiO43By96vxtFQq7Cm4sJCrE7BuL9v67N
hZ6I320TCvHXIHs4jH0MrX7J6DF3oxDWOdci05zHkHHys5zreWt+T9mOVrVx
dPCsq80WNTZigW3XG1H7v4hNUP+5ki6VyHsQbOI/udb33gCdulAO4rNA8CAv
aRItnvAMv53CQQzcueX/hGcS2f83xrAs4CDE/IJyKxQmEfXbUQ7FTg4i9PRN
Dm6bSTRSZc2XrMJJ2Ir7w/3PkyjsaH9EcycnwffIQyX/6RS6K8T5vVeXm7iU
6sD3y2IGhU/q2rw1ohN3ryYm3z0zg9jo9rVBtnTihUm9wi63GUSuDXG09aYT
Y/80de7enkEjrw3OHs6kEy6nuN13vptBqSXv+6mcvMSFdQUt4VKzKPqau/nM
F17CMXg1XmNkFjUfcEaMV3yE9YUk8ZAb86hih3K1w3kGsdTOWT8RMY9kglbm
fL0YRML+q/6nk+YRtSYjPOUWg2hSsOxRfTWPTL+ak0ipDEJ/UPBJ56959CPD
v1W3g0EoOtyT3W60gPg6U49XHREgpq1CN3fRF1FOmXPNLLGOuG3quUsteQmJ
DDVWJhoIEdF1Si65WUsofkecwfRxISLZsOeh3OsldP9dqqrVBSEiT9uIItK8
hHaKUrxORgoR3xU3NCyzL6OFmX/NrD+ECAVymUPV5WXUsv/Pxw3uwkRVAVvU
iYMrSJzNDaU+FyEo6+IGri/+Q4U700XczEUJxpg/ncG+ivTlbovsPi9KSFU7
7XgqsIqajdVWGf6ixF4/reBq5VVUSDFNn8gQJa7+6pPjt1lFqcHf7M8sixJj
hdvPppavosVp1i7JTDFiRGnoP/t9JMJp7jKrIbcE8e3zrb9BvCyExTWJg+o3
JInYvSkGx4RYCO7fHxoy7koSZvmFSXLiLETpQMwduWRJoj6+T79KiYXYty62
HL2WJKrsdBLZ97EQgcLuE+OjkkTx3LJOmB8LQdMd325gJUXEy1yJiRxmIa5E
prpO6UkTx3ztdySVkwmVAPrE7+2yRHzKOupcDZn4GmxWx6srS7Thqq9HG8kE
X+UNMWQqS1hQNnvwdJGJAFdt9feXZAnLiKlXAbNkItaDNKb5XJY4+ShI9Zwi
K1FL0ltUVpIjbMvTldUjWYm+7aYBOsryhAv3H+n6kxTCz64u5pqZArExpyqe
+puNqEqyXkoW2UL4lugd5X3ATozU7wupeaBKuKW7FO/YxkkYB0deK55XJ2hk
Tfut/VyEGU1whz3aRRhcNI9TiqERmQt2P44o7yVE3ohfMpClE8b9Z/Iugg6x
/1D1ZIQiL6GTz/LS8aMe8T8t6Ria
       "]]},
     Annotation[#, "Charting`Private`Tag$13137#5"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$13137#6"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$13137#7"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
nU9hJ/XRmdmxjeYh/GjPG7Ycpwp99D9/E+3l
       "]]},
     Annotation[#, "Charting`Private`Tag$13137#8"]& ], 
    TagBox[
     {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$13137#9"]& ], 
    TagBox[
     {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
jpuQ9ju6HLtyXfQ/hsp9IQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$13137#10"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-12.333331598639539`, 39.518758655382506`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768789490064723*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"ca2f8626-54e2-4142-a622-aaaec166e095"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", "x"}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"], "+", 
      FractionBox[
       SuperscriptBox["x", "8"], "40320"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"], "+", 
      FractionBox[
       SuperscriptBox["x", "8"], "40320"], "+", 
      FractionBox[
       SuperscriptBox["x", "9"], "362880"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"], "+", 
      FractionBox[
       SuperscriptBox["x", "8"], "40320"], "+", 
      FractionBox[
       SuperscriptBox["x", "9"], "362880"], "+", 
      FractionBox[
       SuperscriptBox["x", "10"], "3628800"]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.768789522911209*^9, 3.768789526065441*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1a809a1d-d271-417d-9f9e-1caef585225d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1FlMlFcYxvGZYVhmGP2AAxypWBZbgiiCEFax36tIGBe2YbERay1CQygF
CgQwCJXIomCoslaWRpFS6FQhprLb71QQErZSKSBFC1YZZHFhmTAsMrXJuXjy
u32u/hZhsbIIAY/H83m//02b9llUqxFZGyh/oVYzRJFqrBzfQKRvZc9s0ypD
fPUmVppWEakw/+1N7BJDzN3i3sUuIQLxk2sTCoY8yC3QmVQgkmn0sT7pZ4jO
3tEPST8ieqfuHLhQzpCixDPHLpQjYj1DSnguDJHzE6p5LoiEaCik/JitRDPC
28HkMwMi7skPd2iVEPT4YXTVNX1i1ZA3dninLpF1lJ3d1aNHqrOdumVFIpL6
5kD01ecMVZs0J5dF1fttpWoR34Jg883rEqqQeFfe95XOi6kCUtN9biQhVETl
k9OZRUZ/1GqTdp1du38IUHPpZzTu6CItskG0TmGrDY5na8Z5ZgkJ7+Qn6Tni
Ve7vvOs58mEB+RU7MifkSs5UHFm3fIhPXA0HZTNZi9xXTjaa46ZqbiQqSNzo
9po76/JPbUfHOtcV0x6QkzPN2aS4q2OqVVzQ28TNp9Jn3M2ngZ3nDiq5zCQ/
/WnNYW46w8jDe9si58r8Mun2gHCtxdZeL0NecfaytpH70nus/czYsl2lgrth
e9z4xsNH7OHWcdG7kEkuJU86rymbYOPq6lX6aIiT7q7VSE5SsCFf7rz56HwL
51Q4Lo8YnGe7+8ZyHQOb2b6K266OWQusu+3vd/1Lh1jfYw17/ppaZgVJRk/C
TSZZfps45q5ExWpL/DPCXitYoVYt7EteZy9OjnjG33rFHoqbs2j5c5NtKM/2
T19cYB/7eFqzqzyIrQrXexGiZF0DHHTi5QI4HVW2IydDxdo59ed3gBAuByS5
OVass53WbRUmA5ogNCxWfLu2yQpyjy6xadow2pv1NpPhU0UQnBrmXNYhoIoh
WnfOcuCkkCoBM3lXidasJnULpDZ7BjLl2lQG4mqiG53tROAa6BxaXqoHEoFL
2N4pMWhlbN9XGq8PXl8HFdsUSqDK+eejxUcMYFvLjlivj7bClSf5TZYGCAri
L12zH2XgiFun9Ps5BLJsP9vKRj2qIdiEZgZXp+lTjWBEIaoqDDagGsNA2NRB
AzNExfBM+JOq2BJRMSzXRNabWCEqBpO5OVMLW0TFEJ6wuGK3H1ExrF1U3/Y5
gagYrH40+eDyd4iKwc17fFBSiKgYjs9U5FwtQVQM39iaK0srERVD+z2rwRo5
omKQdTlmd3YjKoaISKWHtBdRMaSIm5Z6BxAVQ6Wv+xdDw4iK4eUIePz7HFHf
/00RLEVMIyqGLds762ZmERWDw+feeGEBUTF48UUDiUpExfDprZ5MlQpRMUR5
Xdl/fgNRMdB+UTH8Bz3yOys=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13818#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
1gz9//8F2todObJw3gz9D24emeA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13818#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13818#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
IsGCk++NiP8BlaZa+Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13818#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6yOYoyzv8JbdP1DC73WqPpl/cKOOomzd2A/kgVjEaYvD+EVLpX3j2U6kMtw+
vS1lAB+WsBQhInvQlb9bFIWDBrB5fxtTLLMHlczdsPp3YQB/OZNZQ/vQg3So
SlV1OwfwcfItJD/Vg8xkfO6fb+3HR7L0ayWVmcjDasPuNO5+7GzbbrMuholK
m05eF/Lpwz9/ZjUkOP1E+qUdnCsWTMyIfBjArt6HXmQ/2/VpDxO/W8p84qDf
h0QeXDp/T5KJ/eIsUxvM+1DbHDX6YGsPVn2SfrnBow/J+VrwpSx242KJLy+8
SvrQxxszNMKwC6dZlJ73IH6h5btq1GBmO06oq/7mf6ofuWW9nOcXaMEOdnOy
eTCIVOiugbrMZuzX4HkwpmUQTbgr0y8/b8b0WwtXbg0MInetLJlWw2ZcNSTI
cp82hDwaUg/H+zXhnC6SiduJITT1e/N+jboGfEPj3FXq7BCiBs4/3udegwVu
d7uK7PmNLBxlnjT7vcF7QkTYXs6NoLD/LodGF5Xg1MwL9/Xoo+i9X/kls7HX
+NZwUfmw7CiSjTmzt9mmGBfayUs5m42iSZzW0aT7Cpt5H3TXezGKJNSMlFP5
s/F41XSGxfkx9Dch0WEi0R5buyd6OI+Oo0917WFqR0tQxbDjxQMJE8jJ+8en
U5vfoJZ7kXObMyYQh2wHJYi1FGUqZQpvKJ5AB3w7/VtfvUV+5/X1xVonUJ1i
j7vHOoxMxq193/BNIic99+cdvz+iuHWRTNvwSeTy2CtOPLcGCUVcOZcfMYV2
b/lQYHK/BcnY3WsZLJ1BGq1t8WU1LUjRbFMbT90MUvEd8VFebkF3aNq2Ol0z
SL5GWI/DrhVprPhpNK3OIIGzri1Y6SuaX1HgizOYRSPJotNby9pQN7SuFrfM
okc0Tw2e/nYk96zHKH9xDpE9BTsd1jORc/O+6+yei+ikbXZziToTRbI808wK
X0QFB1ANzYSJNOhDetZpi8h+4/niwmAmSrdwSSQ3LaKP1e+iKNNMFPHTmbJj
yxIKFHUweFr/E135U+lgMbyEKB8KXvQF9iHqyKj5tNsKYqeZ3LAfG0BH9UnF
FbYkwnLTSdjBOYj85MVWbrqSiGxdh1Uu2UGUUJZbZuxHIg5f9b726sQgkmuM
biMnkIj4gcdXKZWDiLUH2y42kAj5DxP/pT8YQkUbo7Zt1GUhDDxj7H8b/UbD
8YY5gdvIRCCzTc89bRRNHwmjj6tQiO43By96vxtFQq7Cm4sJCrE7BuL9v67N
hZ6I320TCvHXIHs4jH0MrX7J6DF3oxDWOdci05zHkHHys5zreWt+T9mOVrVx
dPCsq80WNTZigW3XG1H7v4hNUP+5ki6VyHsQbOI/udb33gCdulAO4rNA8CAv
aRItnvAMv53CQQzcueX/hGcS2f83xrAs4CDE/IJyKxQmEfXbUQ7FTg4i9PRN
Dm6bSTRSZc2XrMJJ2Ir7w/3PkyjsaH9EcycnwffIQyX/6RS6K8T5vVeXm7iU
6sD3y2IGhU/q2rw1ohN3ryYm3z0zg9jo9rVBtnTihUm9wi63GUSuDXG09aYT
Y/80de7enkEjrw3OHs6kEy6nuN13vptBqSXv+6mcvMSFdQUt4VKzKPqau/nM
F17CMXg1XmNkFjUfcEaMV3yE9YUk8ZAb86hih3K1w3kGsdTOWT8RMY9kglbm
fL0YRML+q/6nk+YRtSYjPOUWg2hSsOxRfTWPTL+ak0ipDEJ/UPBJ56959CPD
v1W3g0EoOtyT3W60gPg6U49XHREgpq1CN3fRF1FOmXPNLLGOuG3quUsteQmJ
DDVWJhoIEdF1Si65WUsofkecwfRxISLZsOeh3OsldP9dqqrVBSEiT9uIItK8
hHaKUrxORgoR3xU3NCyzL6OFmX/NrD+ECAVymUPV5WXUsv/Pxw3uwkRVAVvU
iYMrSJzNDaU+FyEo6+IGri/+Q4U700XczEUJxpg/ncG+ivTlbovsPi9KSFU7
7XgqsIqajdVWGf6ixF4/reBq5VVUSDFNn8gQJa7+6pPjt1lFqcHf7M8sixJj
hdvPppavosVp1i7JTDFiRGnoP/t9JMJp7jKrIbcE8e3zrb9BvCyExTWJg+o3
JInYvSkGx4RYCO7fHxoy7koSZvmFSXLiLETpQMwduWRJoj6+T79KiYXYty62
HL2WJKrsdBLZ97EQgcLuE+OjkkTx3LJOmB8LQdMd325gJUXEy1yJiRxmIa5E
prpO6UkTx3ztdySVkwmVAPrE7+2yRHzKOupcDZn4GmxWx6srS7Thqq9HG8kE
X+UNMWQqS1hQNnvwdJGJAFdt9feXZAnLiKlXAbNkItaDNKb5XJY4+ShI9Zwi
K1FL0ltUVpIjbMvTldUjWYm+7aYBOsryhAv3H+n6kxTCz64u5pqZArExpyqe
+puNqEqyXkoW2UL4lugd5X3ATozU7wupeaBKuKW7FO/YxkkYB0deK55XJ2hk
Tfut/VyEGU1whz3aRRhcNI9TiqERmQt2P44o7yVE3ohfMpClE8b9Z/Iugg6x
/1D1ZIQiL6GTz/LS8aMe8T8t6Ria
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13818#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13818#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13818#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nU9hJ/XRmdmxjeYh/GjPG7Ycpwp99D9/E+3l
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13818#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13818#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jpuQ9ju6HLtyXfQ/hsp9IQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$13818#10"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5, 5}, {-12.333331598639539`, 39.518758655382506`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"1", "+", "x"}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"], "+", 
         FractionBox[
          SuperscriptBox["x", "6"], "720"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"], "+", 
         FractionBox[
          SuperscriptBox["x", "6"], "720"], "+", 
         FractionBox[
          SuperscriptBox["x", "7"], "5040"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"], "+", 
         FractionBox[
          SuperscriptBox["x", "6"], "720"], "+", 
         FractionBox[
          SuperscriptBox["x", "7"], "5040"], "+", 
         FractionBox[
          SuperscriptBox["x", "8"], "40320"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"], "+", 
         FractionBox[
          SuperscriptBox["x", "6"], "720"], "+", 
         FractionBox[
          SuperscriptBox["x", "7"], "5040"], "+", 
         FractionBox[
          SuperscriptBox["x", "8"], "40320"], "+", 
         FractionBox[
          SuperscriptBox["x", "9"], "362880"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"], "+", 
         FractionBox[
          SuperscriptBox["x", "6"], "720"], "+", 
         FractionBox[
          SuperscriptBox["x", "7"], "5040"], "+", 
         FractionBox[
          SuperscriptBox["x", "8"], "40320"], "+", 
         FractionBox[
          SuperscriptBox["x", "9"], "362880"], "+", 
         FractionBox[
          SuperscriptBox["x", "10"], "3628800"]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm], ",", 
               TagBox[#10, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.768789527469537*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"ba9d34b5-cb7a-459f-8ada-02eb3b2d47a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", "x"}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"], "+", 
      FractionBox[
       SuperscriptBox["x", "8"], "40320"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"], "+", 
      FractionBox[
       SuperscriptBox["x", "8"], "40320"], "+", 
      FractionBox[
       SuperscriptBox["x", "9"], "362880"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"], "+", 
      FractionBox[
       SuperscriptBox["x", "5"], "120"], "+", 
      FractionBox[
       SuperscriptBox["x", "6"], "720"], "+", 
      FractionBox[
       SuperscriptBox["x", "7"], "5040"], "+", 
      FractionBox[
       SuperscriptBox["x", "8"], "40320"], "+", 
      FractionBox[
       SuperscriptBox["x", "9"], "362880"], "+", 
      FractionBox[
       SuperscriptBox["x", "10"], "3628800"]}], ",", 
     RowBox[{"Exp", "[", "x", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.76879048881179*^9, 3.768790490026217*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"127fa8fc-a06a-4caa-a98d-ec5713aff9e4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1FlMlFcYxvGZYVhmGP2AAxypWBZbgiiCEFax36tIGBe2YbERay1CQygF
CgQwCJXIomCoslaWRpFS6FQhprLb71QQErZSKSBFC1YZZHFhmTAsMrXJuXjy
u32u/hZhsbIIAY/H83m//02b9llUqxFZGyh/oVYzRJFqrBzfQKRvZc9s0ypD
fPUmVppWEakw/+1N7BJDzN3i3sUuIQLxk2sTCoY8yC3QmVQgkmn0sT7pZ4jO
3tEPST8ieqfuHLhQzpCixDPHLpQjYj1DSnguDJHzE6p5LoiEaCik/JitRDPC
28HkMwMi7skPd2iVEPT4YXTVNX1i1ZA3dninLpF1lJ3d1aNHqrOdumVFIpL6
5kD01ecMVZs0J5dF1fttpWoR34Jg883rEqqQeFfe95XOi6kCUtN9biQhVETl
k9OZRUZ/1GqTdp1du38IUHPpZzTu6CItskG0TmGrDY5na8Z5ZgkJ7+Qn6Tni
Ve7vvOs58mEB+RU7MifkSs5UHFm3fIhPXA0HZTNZi9xXTjaa46ZqbiQqSNzo
9po76/JPbUfHOtcV0x6QkzPN2aS4q2OqVVzQ28TNp9Jn3M2ngZ3nDiq5zCQ/
/WnNYW46w8jDe9si58r8Mun2gHCtxdZeL0NecfaytpH70nus/czYsl2lgrth
e9z4xsNH7OHWcdG7kEkuJU86rymbYOPq6lX6aIiT7q7VSE5SsCFf7rz56HwL
51Q4Lo8YnGe7+8ZyHQOb2b6K266OWQusu+3vd/1Lh1jfYw17/ppaZgVJRk/C
TSZZfps45q5ExWpL/DPCXitYoVYt7EteZy9OjnjG33rFHoqbs2j5c5NtKM/2
T19cYB/7eFqzqzyIrQrXexGiZF0DHHTi5QI4HVW2IydDxdo59ed3gBAuByS5
OVass53WbRUmA5ogNCxWfLu2yQpyjy6xadow2pv1NpPhU0UQnBrmXNYhoIoh
WnfOcuCkkCoBM3lXidasJnULpDZ7BjLl2lQG4mqiG53tROAa6BxaXqoHEoFL
2N4pMWhlbN9XGq8PXl8HFdsUSqDK+eejxUcMYFvLjlivj7bClSf5TZYGCAri
L12zH2XgiFun9Ps5BLJsP9vKRj2qIdiEZgZXp+lTjWBEIaoqDDagGsNA2NRB
AzNExfBM+JOq2BJRMSzXRNabWCEqBpO5OVMLW0TFEJ6wuGK3H1ExrF1U3/Y5
gagYrH40+eDyd4iKwc17fFBSiKgYjs9U5FwtQVQM39iaK0srERVD+z2rwRo5
omKQdTlmd3YjKoaISKWHtBdRMaSIm5Z6BxAVQ6Wv+xdDw4iK4eUIePz7HFHf
/00RLEVMIyqGLds762ZmERWDw+feeGEBUTF48UUDiUpExfDprZ5MlQpRMUR5
Xdl/fgNRMdB+UTH8Bz3yOys=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
1gz9//8F2todObJw3gz9D24emeA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVlnk01N8bxy1jDE1DJqWFsqRQUllCeT5FopBkabOESpFQJCRJkih7QiUk
oSwhpO4tbUrLjD1LI1m/9mXGjO03v7/ueZ3znHue532f9/tceefzVieFBAQE
TgsKCPz/vNJrPr6wQMcxb7Vsc8+qET2By6ZaZ+k4pfBA1kE7NcJC8g/nFZeO
1245ckbYSI1Yq+s1d36Cjjla1SbhsmrE+8g4CquHjiuMm0cpDFWCot4kh7/T
cX1J/s15XVUi4aLT/pBUOuZKLheJoasQeYIXsgR06JgnK3/K/58yIXJy79YV
9lLYVbDgOjNHgaA3f/TIiF2CA1UZ359GyxFW1SkuKl8lcaiZQ6l9pwyhVP+v
4/MnSfx7zx2xl19lCPY/9aOnqiVxwDkXR5kSGeI+udoys0oSH1JZPyZ1U4Zg
mf63U7ZAEmNmXsOnTTLEuV/6MksSJHF7ncywQvByIqK9rXbaXhJHxq5XvKS6
jAgc2ekR0yWB2U6a4YMFdCLthE4f0S6Bn+am7zR9SCeq6jRcxxol8OeVD4yL
o+jE/CvF41ZfJXBaUbvWszN0IjREzGxpkQS+vI/TraJEJyKXNKglB0vgxKfn
fL1TpYiUbR7/PVrBZ5f3/aNxS4jySylnCw7QMG2ufKHbRIJQcPV+0mxCwy/W
/3LkbJAgoi1NWIK7aThnRe9RBTEJwlmFbWOtScM8kvfAhxoasaj14C6uDA0P
Sp8b0DOjEQ4GYjKGfxdjn+lvdh02iwlhEf+PjRcX45wrGcsyAxcRFnE2a+fv
U/HX4pgH22gUImCrhOneeCquVVJsqJgUJbKZX7xjoqhYiKR6zaZVlJiX2lGt
cJWK/U5wRb7niBLP4xVO7XWl4l179M+/NhIlqIkjeTHqVLzbVGfr7RAy8fXe
LR3F6kU4weJXS4aoCLH3wRsLk0Fx7DtZ+VLhoBAxGt02S+oRx3GmY7cpBkJE
SvBM7rs/4jhGUyp8XlWIGHTUFdWvE8dpfk2vV4oIEXEKpWhTpTj2T/PWoFcK
Eh1P8zXoEeJ4mc4vx1llQcKvOFWqQ1EcLy0+HOZNFSDWZlbiFFlxnHOuJTKB
vQA18S2edsvFsZ52uIxr/QKs9l3+7Ze4ODbKYkvaxyzAe53469VjYtiDBbEl
YgtAexM5mYPEcG15/OsBwXnI/ny58cIxMdwc9PnQrOgs3N/qZ/jMWgyn/Mz6
WN4zA1EPfAo7zMWwZV2DWNLHGfC54B5pSojhZPGAkuLrM7Bzjb3BmnViONTu
jqGP4AzU+xHZX4cpmGpnOMAR4oGQsqiffCgFj94WWRElOw1TMcJdtoEUHJNU
7aYnMA19MwsHoi5ScKFB9yS5iwM/GNMqnFMUrCz/3puXw4H7Vwbaa/dTMDmp
8puJNgc0Gr7v8Zem4DjP55HetmxwCEuQ/pkjivWi6bpn8ifhB7BF/TNEMdVM
7ZtHwiTAjB1vbZooNjFzTIgImoS1Pqv++NwVxRbGQ9EU80n465iRs8xPFEeJ
vnbfMDIBp/QL9R0MRXFfSobdb50J8Bz/dmKonYwT1BXd0n6PQcfzTdZJTWRs
a3RI+9bHMThw5q4xMMiYbbzFNqpwDDRYVmqxH8gYK48eaAgfg/HvLZOaeWSs
YZ5710tzDPye9d4M8ifjgHfmfih+FIKdhF8sopNxUMfm1y8/DEPhz7136qlk
fFj4iWtG+jD8NYjyfEAmY1bpvpDyoGEwlpXevJkngjWN/2Qd1RoG2m/lQqtO
Ebwh/O2HCzlD8PDQvuL7BSLYy1wh7m/iICDj2LL1ZiKY+mPafj5qAMZLG5JG
94jg5A+PVJ+dGwCldSsvVYAILsEeWv4WAxAhnKmzf5sIbksmZYRKDoAlLin3
XCmCt9vcljdO6geWbnNlaR8Ju93bus0npw8ENq1BhjdIWCqh70dJTw8ELdvl
cCOYhEv8Hlt61vQAZ8F57tMlEh5VXDVokd8Dw8xs/X1nSTjJuno6zKcHWv3V
yy0PkHD46tj17wR6oOzDziL7FSR8UfiSiJNSN5w7fjzz0nNh/LDF9qTHzS7o
2xO8uyJbGMuJ1p/+5dkFrpvTO3mPhHFWtE+PnW0XHBX6tyY4ThizjFL6fq3r
ApMc97SwS8J4IOIb5/Snv6A0GZAYu0sYf1h2QUOK9hd+375/M69BCFvGURj3
y1hQ93FtvtNPIZyhUpidkMmC2oWnv6RrhHD9XnPfvBgWvL1QtiKkSghnFTg/
2+jOgoxjdXnWmUJ4YGOoYqA8C86qLf415yWEqRIUfw/lPzDzNUTGkiqEozTV
azZKt8MkibJThCyEB+fsVzGm2mDY4O6JygVBfFiu3jynsQ1YxQ9ylSYEsZvQ
l1fDyW3wIaVyB7dFEJu5pzg3rWmDqLOTThlPBbFQQW4AW7sVVou7PZvcLYiN
Ht4YdbnVAg5va6MUdghihblynblzLfDYZ4uXpZYg1riy6F2tVQsot/K089cL
4qPvzboWy7bA5vzoDy5UQbz0uIMnvaQZdlu8/MNsEMBfvmRZkAabIExIplrg
pwCm6G2MH6xrgs9lQdnqXwSwiY68BaWqCczWGJ+LrBTA00tEL7dENYHtaDNv
1yMBLPOG1tOu0QRn4uali9wEcO0rt2zT0EbIN3bhdpwQwKHh31VtzjXCMO9z
G/WYAD5VhgJjDzeCj0tsppu5AI76daE9dXMjBGkqbVm7ld9Pe6LcxJ8GkHse
nyzHWUCSvLu8m6YNkClt7xjQv4AclvvIRes0wIZgZeXG1gUU0MAMx+saYMuB
ipfReAF5rMu/WSTUAEZjHT9mby0gfOW0cPnbenDXUhVpXb2AqCGGa7SgHnxE
Kp76SSyg7aLcUSuNegho2LtPSmgB5YRliqfK10Ok78m7pr3ziKXWH/GMVA+5
pekryovmUXl5XPvr2jro11qunmg8jwabzYruudbBqEj2Lw3deZTsex6ZHq6D
6QbNC7Vq8yitX2xU0awOKH5W5cJL5tE/v7htlpp1sKEserdP6xySXGT8NIxc
B6e1SXYHvObQxe7e90QxEzzJ8dwB5zmk/lL/8ckcJvg1yqeF28yh1TETqYUP
mRDuB51v9ObQ9kGbM+W3mZBdFuC+UWQOmZ3dMn/7NBNehIvRvnBmUQZ12ZEO
ByaU2SYXugzMoqijq1tsbJnwiV06lfJzFjUm7/r5cg8TurXHroqlzKJy0Vem
G5SZMEgOUXgSNYt40Ymh6XJMmGykfSSuziJ20aaxHcuZQLq0UdzfdRbFPFDj
dVKYoPTqdEKP+iyqvJcR1TLEgI032dqh8rPo09syQ69eBmja3WiRXTqLrL+x
TVQ7GWDEyZCz4c6gw5ERtaINDHDR6ciprp5BBk4vs06+ZcCpHB1b41czqLSh
xd2zggFnV8QK1+TOIF9F+vrEEgZ4zRg6/IidQbVmbWt35DEgCD2jtzjOINuc
7+VD9xlwVUP43bFDM6jqWH9ZVyIDQh8f9+wwnkEX37/hsmMZEHFdoqZr0wzy
l3rKuRjJgIS9vsHDMzx0w2R/SG0QA+6V/1DzHuEhSq3NgdzLDEhR2dAy8ZeH
TJ4UVGT5MSB9Ues2bg0P3VrntHjEiwGZQZqdgW94KDzl8ncDTwZkD0XfmS/k
1wu6Nea6M+D5T6JfOJmHTmZYeDedYkAhkZIUfpuHyqs//77nyoCSoglDsas8
lJu1fMdFZwa8UjAfu+3Dv2+t3jUPJwZUxmc/pJ3ioaKG3UkhDgx4QxIwiz3C
Q+nr7E8XHmcA9j3CpZvz0LhmLWvmKAM+2VGtV2jyUPWEWnC3HQNqvpwUTFvP
Q7SqFYHXbRlQq4teyK3iocO+tswdNgz4mStz/DGNh37Q07yWWDOAucpHTEmI
h6osqnYLHmJAQ9S3suwpLopPT9eiWjGgeU7JVaWfi9qM92lvPciANs/gJflt
XLRzN3PLBUsG/PnT9Fb9FxcF2Z6R/nmAAX8tt3gUVXPRZfHDP/bwuedd5ArN
V1ykmzNv2mTBgP6t/z6V5XJRx44G3+t8HszceVH3IRelJLvDPj6PLL0nXxXL
RfUWZxLU+Dx+Y/SHwQ0u4pVGO6/n8xTbNOidPxdl9Rbc28nn6dOZKkYeXBSG
38p78nmmebbxkyMXebPwcDmf501tw0wPcZFtbv2gLL8fwdcFW2qNucjASEP8
AZ9JG8X+WOhx0dF78lra/HlEHzhHMTZx0eAB2vF+PovTqnSt5bnocPuFc2X8
+WlXpXsbl3KRqk+v3QO+PktGPROOULhoTniZ+EO+fktPfNnVNjON4vZ/8Cnn
6yvDlB9xGJlGXz78CBnk67/KMDCt8+80Sn6hoqjHfy+5knpT18ZpJLuo0+Tx
YQbIr1Pn9NRMo4hHMp3y/PdVSrqZdebNNFKfXNT6+hgDVP31FjyzptGqn5FF
+o78fWi3UO1KmkbfMivz959ggK2hi43dLX79oKbmZRe+H2hReeA5jaJukxI3
uvH7uZje+NJpGrmMqewpPsuAFy0lghsOTaOyPt3NNucY0JLVbie5fRoZOyk6
jfswwFN8PDRMdRr1LtQFD/ry9fIiv5hePY1+npe9Kcz3i4b+ZlKn4DTqK40T
ibjK9xsjpLDoGwcdEWEl90Xz59NJbF33loOKFfb9/cz3Y0naM3JKIQdxRusC
qvl+ZZ1mHg9N5KAvTQEWEg8ZoDOvKHbIkYNefSoJ5BTw99dlu+bngxykodWw
/RU/D5xrzBz1jThof0V9cRw/L+4k+JYqqnDQROC7pLRq/r6pfj4xOc5G94rK
tHnN/LyIaY1y62Yj9ZMW44kdDJBij7xqa+Lz8jcss38MMHgnQ/tYxUbUrVF0
6igDEu3OViaGs5FQ8yryD37eGYUtpuusZKOvlvqaVsCE3/3yBnlUNmIPLk24
b8wErwPaZ9YsTCGHbge1GXMmpK50RKL/plCYav9Hqj0TxgsL3ZufT6EEnegV
bkFMeNx+6MPlXVPoV37u6gnEhK3/tvLqNadQ6v0DIwZfmPBhYImGxoYpZO66
qzX9FxN6OD9Te2hTKI6n15jdyQRVKbMLh9om0e/kvUQlqQ6KjY0UNl2aRKLa
ZRfZFnXwoUAzhJU/gbQ1c2ZvTNSBTRm9TD99AoGv9aLr83XQUzX+X1L8BNrE
O7Y6UaweKF8L7cwDJlAoVlaZXlMP5v82bq7cO4HavD5trDCvh0aZdR3xf8fR
qPSgsvzzeui9Jr1jr8w4mo4TOOYU2ADiVwpG4sXHEemNMUU6sgHU/U0zWbNj
yEAHRXcmN4Cf5xXxgM4xdGt44+L3ZQ1APtbdnJ87huw7vx5On2gAJc1SX6md
Y0jvovfZH96N4NxjXdB+YhRtDX2NW642QXjnsLOq9Sg6++nurtDYJshti1h2
yXgUkUeO6u/ObIJxZtUVSbVRdLpgJInyuQmErpomh/eNoOcT5p0vJJoBtvQz
Di4eQU5JKd9PPGmGysQNe/psh9Ar9jM3t78tQDnW6yK4YwitS5ufSGe3gO3a
7NCV8kMo+KKRyaj4bxjPVcRm/w2ixO4NR+q2/QYVLKdfdHUQ/UfjXMsL/w3J
A0u3BOT8h+Z9H914qtEKviAoS+X1I9LSdfFjiW2g0d8yuflBD6q5OJFq+fQP
XBzdpLI8rAf1psgIP0N/oJxzzX7+bA/ieufVLWv+A7vIqp9qt/egx1bzZ++T
WGClGHDvTH03Sl958qW2Ngt87VfqZS7qRpdntDMCUllQyTh6dVlAF/r+kJ1u
5tkJRpWtYnO2LGS+vVvplHYXvMh9ovtZn4UoMatqC4y7QCb1/JnYtSxk5NJS
J2rXBY0cctz++j+IyehS67rUBesCbSUf8DqQ21y2lEllF7y/NkUl9rYj9xTX
xLpd/2D2zjZyOKsF7WKzi/SPd4PXs4LpJfQ6VKDXtbMF94IGzfP6bhYTOWw2
Naus64Uxn420C8+ZSKP704Xcnl7w2fFMsX4vE6mUHNYvp/aB788Mi6QgBhJ/
9nkw8kgfTAyomWrV/kScieVCy9l9QL4+nW7sU4OOVEu3yeoPgO0pxcfMoAp0
83qbRgFnECK9L0TElZYjedPuKkPaELwJqj5vNfwKZec96epXGgKleBcDpmMZ
6tXn6LhbDcE4ymxl7H6JBJuWXjF8MQRy20w2ZizJRX2FQc9szwzDaPJ917H7
zsjZ576v+9AIfK5tidx2qBzWbKMf35c8Bm7+vz8fU6sAg1yhLrWnY0BRaiWF
CVfCWJL7woqyMdgX2BZc//I1PB6UUlxdPwa1Kn98fJciOF3hQFRIjoOboc/z
1oH3wPhbt9spahw80i8lyubXANnEN/ZF9ATobXpXbHmvDkzJina/KqdAq74x
6W1NHXzbbbFu6tsUaAQOBmycrYPyUW/P9e1ToFyz3JByoh682otTShamgH7S
sw6pNoALpSfQZw8bBtNWTaq/bYQZytPAG3VseET101rc3QI75Gm3rHgcEPKT
bnNdwYKFkO1tQxd5cNQpl1muyYLx+oNy/H8LFO+DGqolC4Icsi5syeCB85oz
ZSXhLNglsSrh3U8evP9SFUOaZIHPaa1DNWozcH2V656sH53Q+cJANqx3Bkjv
il90Xe+Cp4d9t9M950CUannNebgHYhwdV922FyAOrz+KtcV6QdrY47C2uwCR
u9t1QVypF2LT3csG/QUIi8v+V14e6YXgwaqpgAQBIqkn/TLpYy8Y/e4+KVcr
QCi/G/POTu2D66Yq+hE7BYk9fvHOAyYDoE5FC/IqQsR1VqOhT+YQGCo1rjJf
RyI6Kvaf868aAorPo5q/miRCLx4nBTcMwe0Ie1KYEYkY3ZPbHyk6DAMzxgb9
LiTCIe/K3Uz3YTjHc4iHTH69n1Jr/bYR2Gw7aaKgJEJwRXQrVjmPgvwh86JJ
dTJRmBpuGTw+BsW3b3+4cpZCfKOH90oIjANh6cL4HEwhem7fCH68eBzI+zSr
5OMpxOqgsPwPG8ZhicdeG5EqChFxPJSyyHEcJinvyqNoYoSTbDC+920c9liJ
n39SJkZIPvLVKMqagD//fN+b0BcR5zNcJf/ZToGd2Ll/pQI04s7l+2l3XKYg
yD4mLmc5jXhh+WODrtcUqOmX+uSp04jheZ1dd25NgZ+c8nDncRrhcWyRz/aq
KXhrbNwoVUkjzi4trouSZ0PuyfaUqEsSxKnwhSStQTaI7s0Qj70qSTicTZG9
eW0alEujaf7yUsStg36629JmIDtklw25WpogLU3sucqbB1vrVK/dHiuJpm83
RsMkBAnCzeixcOQawibQWTulWoiw/soRFiMpEh6L/lP4cZREbPinFhZ5W5lY
k/cpiTwgQuifKA+5E65KBJYbHpJIFSVKm8PvaVzZTHhle5RpbxYjVqhIWcif
3EpQhXSc1bvFiUDdHvcteVrEnnPWiarxVEIZWb8QsNYlZCpkz+9RohFDEy/6
V2/aScT5RMRqNEkQegmxEY+HCcIq/MCmB2WSRJyb8tHpE4bE/vf7yosFlhBX
li8uVXMyIv4Hjl9Zog==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
I+e2fLrOQ/gJcRUp2ugR/wMqtxe7
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
58mJTXaZLizZM8FC6o1r7Xmyn/3nuz7YMqGyg8/G9yzJZ6uYRZxmwvZHbkel
bDgx4virGGfNhFTTev2qE5y4fiReqcqKCRICmts8Tcl5kZ8iGUsmhFZFK0ge
IvXWN7peWjBhIXhmTfk+TjzRYaV41JwJLsiC/wJwYo0Z1SbZ40zoWMxfWaVD
8qIlqVJmTDiUt2aqWJOcz+Juv73HmFDk6d97ToWcj8E2oQhTJqio/WgV2kT6
z8YBB4mfDEFVwQayvqWPLU+OMkHg5fOP9hIkxuYvbEgcYMuRwcsg5/HuprcR
iTPrDMOb+ThxnKy+hwWJf+0Oc3vCSc5v//6H90gsmlF/2JHCibnagrJ6SWyw
bpW6+gINCznvSLIn8/mFWQrO/6FhWy5+TRpZX/rik3E8SsOptX90a0jc6fKr
7u4ADbf57Y7NI/sR+L4p0/QnDUewPWR8IftF+89HSHbQcObOqdAFch6e+e/d
e5tpuNLlXePRE0xIkZ82eVdLw5QfF0tqyHm2xm7f7FNJw+JhOmrnTzKBi/Oa
MJTSsMk7mwmVU0zY4V0ySS8i/S3CuoVtmPD02IGs+Pc0nPTU8OXeM0yoLw2P
sk+jYXfdOpUo8vdn12zyVE6m4ZBnh/XZnZjgKGSt9SmW1GcU3NxP7k/c9STG
7QgaDmzdaiNF7tfXsd4/h0NpePBv1WYJLyaofbuQw7pG9u/cJeN+mQm2ulkP
03xpWCPM7+83fyZEvZm95OlBw/Xx9puNA5kwe/f6VupZGsZ/arTfk/tOGETm
yh8i+2Wb+PTvEbn/zJbYiX0k3/a51D6R3Ge5Nb4FQPZfRt4Ok5gQwpGsfVCL
rCcziHosnQkmOCffbQ3JCyu+flXMhJvqf+O0RWnYjz3bkqecPB9Pd12mCNCw
U9Ilk/tVTBC/VqETxUbD6OiV+xPNTGDptBUyB6mYcunVkMIoE0TS1j4O+EXF
g58WbIL+MGGvuN1Vw04qtv38Rn7pL7nvs0M72+uouC2QoW1Evm/csxeLlnKp
WGg9XcdQJhcoqhsI/VtUPP9q9ZdK21zwX73n9K0AKk5iWa5kOOfC3Ir9vwpf
KmYxsgdzPXNhrPHVzgMuZPyWeybKt3Khw08t3+QIyestrUp+kwu55bs+nJKg
4omKy69zlnNBM8PG5JkIFWf6bO19zZ0H7x7dGGfxUjGOW8P+UTQPUlw+qzos
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
/Rp6Sh8xu11svpfxo2ti/Exl273of4Ol7bU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVlnc8Fd4bx6/btS8uV1bKSH3tmVHoHCOjIStKioSQJEUZ6YYkSUOUWUID
WakQnWOEUMoqWbdwyd5k/u7vr/N6v97P5znPX8/rkXI5b+1GJBAI5iwEwv/f
q0OHZjY2qHhKqluoRXcNMYKF5rtWqfjbtdZ/JnxryILSt/j+HxU/teQSWPqz
iiR3+66dn6ViijZ/Fc/tVVQV/YCDzqDiYf2Kwxs9K4hD+cc2/IWKLSVhTEXs
Mnp4yfkALZmKRe7ppNaLLqE1DjkLx8dUrKpMmtGfW0TuqdOWOvHMfpG8pKGv
i0i7NsxuKpaKCYusp1sjFtEv4axTzmFMHhZW451dQJIf/l6GnlQsKaHB1fFz
HuWwXMwkaFMxLdyzhrt+FunYZLMlalCx85dX/L1Zs6g287eHmioVQ5mg8wPh
s4huaqnkIkfFSx9YjWLgLBKKVXpXvYU53yPLF7B8BoWJDddFEqiYo/qGA6Fi
Gh3VODFKbhDAtPK0FKGaScSIeHgoq1YA3ws1Uy27PYkudjTm61czuehIwFub
SRQbuOeST7kALkgO0igcmEDVSHitOU8Aq7oVmhRwTSDlgy28cXECWJJ47oCb
+xhidTNVFz3B7K+jqXn72F/UclLNfvQY03/0bLdW/ovSjm4JqbATwHCvbZLD
pr9I6+Dkp1OWAnhq+6C+XN4wctd4dCzbSADT99gXlbINo3qWIZquPDMfuKvi
ZDUDxaRFNp9Y5Me4TmropscAOvrYd05ljh9Ddcaud8YDSOaBgyhxmh/TuN3e
iUkNoIobyqefj/BjystJpRu/+tGEd8fCRA8/tgy6PvvjcD+y1N25jVbDjwl3
zClaxn8Q9ecn72f3+TGH7VbdSSs6wgrpURGx/PheZdmtyV105H0tJNP9Nj/2
JUgWbBGho9qdGt3yN/ix5JUTcuMVfSjI/+mBN1eY8zSqhzr39KI/AsHyNU78
mL6sJkZQ7EFFh1SHB5WY/52+P8XD+gs5pXOT6uWZvp/10s72TkSeZ0hk/8ec
v/VWXlRWJ3JPSbX3keLHUwHBObKmnUhslKtuQZD530OeuMY7P1FY1GAW+yoF
EwpThffJ/kDW1Umn5Roo+GnJDm2nu21Ipm2gt66Wgu9xl3olubahhQFlB/dq
CoZV2fLb9rShRLZqy4xyZj7kWvTaYCuim4/qb82nYN/dIZF8Bq3o3DddEf6H
zDxHvbYkqQVF9XQ3LZ2gYOerdw9JBjQjh4mdZo8cKJg24a0votaMFDd8qzXt
KRizfhS6OfYVNUuylvlZMuvX/G7Wun5FQq5KL8YMmUz7mvXe4QvKGLl6nf4f
M595E+LjjSh4Ut/7Xj8flkzaJHbrdR1KOaU9DHv4MP1I8438wDpU3qrqOt3B
h592jR2SN6lD6++3O1o38GGYZcoQo9eiMBrnQcFCZj7lHfGXcC2K5m9XeBzK
h2kmCR7OCTUoScN79Iko06+zqGs0VaIPWW5nLKnMfnqyorPplahb2KmfwMOs
p9goLl2uRNtWrbpOEfgwocFS9JtMJXpWo924fYgXO+vsJ+Rcx+jVkU05L4p5
MbTvpDve/YhKLid55R/mxXhxw0GWVIakXS9k/TTjxbQttXzJpaXojqUZncWQ
F9Nvus/cP1+KXOQWjtju4sWEII1wjp4SxN1lZfBPhMnvPcbXK96jk3s5RYz+
8GAc/lTS5NFbtIn1yqeOSzzYWfm2mWJ6IfKZtiAQfHgw4XFozjm3QvSzZ4eu
3Bmm1/5TLyxfiHLftRYEH2PmzayEM4oLkJ2HSorkXiZf1yCxpOajl40MPy92
Zv62U6yjXC6yeHBEcj2RjLGNdHBSYxYKUuczN40jY5hC6VE/l4Wet9RfuBfD
5E8Uc0++LLQuoFctfY3M3G8Gp3KOZKLXcdLupq5kTLvIxXD5+wyR4ydz7ikz
vTHnh0eKT1HDo1va26u5Me23uKHPrgS0oG3k7F3OjQk1Nq25SfFI+udq1Nu3
TE7TV6ezxKMgEd9fpi+Z3Ol0YGtrHJJLtLvqfYeZjwjQLKXdR1FJ26vf2v8/
r6MSxRONTFMrLMzGuDBhPe/ItRo/NHWne5XEYLIl+7Wdo74oKXQlu7KPyaoL
qtmyPmjMaTe7biuT66c53bvd0QPpt0ipjMlR245dWLNEvS9yValRTLb9YXrc
4TQIKEoW6N3OhWmRp9ZcZq4DyYwynLT1/z7WOuZDGPgc1+ljL8z0mUn7KsPD
gbi/cOM3LqavtmW3578BqrTjwqunOTHhRImVr1QU4K2InnuJODEtntXKUDgW
PK8L7Lh4nOn3TvoRix+CRPUAo1e2TE48+L5cIB7EpPoV9B5i8v7Ow7wX4oHf
xbPR5pDJhb0mIYoJQF/ixF6JHZwYo3a3zLRHoC0APm+Y4MC44Z+G7IUkQNzJ
HiAVxoEJQntOlHQ8AScjHm5ufsmO6eWf/uydyAShzpvyuKls+Cn5SpD7ndeA
oCSBjG6Q8FR4yH9Jq0Xg1+3EmzntRPwz6LNmMEsJaP0kmevcTMRLaTpv0jaX
gKaNF982fyZi2rD8qa9yJeDjxXeitHIi/ia8PcXaugQ8O96aY5tBxCl5t3Km
MkqAlwLPtzVfIiZ8eUN8aF4KVhpoIpZkItZR+DG6mlYGxLk8Xs0ZsmDVjPy0
SwEV4OTHphhpPRasU0wz2H2vAqT7qflaarLgAgbG/NkVYGfXslbufyzYMdTn
zXpPBVDJvVNzmsyCOdxYiI0mH4GhxZu+lnYCFjzQwWcojoDng/XNhR4E/F1S
kfbyLAZnNeVZu8Q3kPhcgmOaeRXwYy19EcC3gQTcuRX5j1WBoHbT/QLEDaSo
Ixhyz6MKRPu73TUfWkc8xhtfim9Wgey3T0VLCtfRvueat+Nrq8BfTWHleJN1
5MldzlNlUg3OaJHsD/uuoZzZwqitVjXgtHbvy+rqFaT47szdF/dqgftLbTuT
9yvIleVjzpFntcBL9P6mz9krqPmPjR9/cS3wXTE6+fX+CqrTN1Ao+lELQtAr
aqfTCjr5uTIqUaIOPDT1D51YWUbrDycnOIvqQK092VZ01zKauaXVWvW7Hshf
2bPhk7nE3Duhx/acbwS4x0K+P2EJsU11sYVFNgI7o9NH7G8toZ2N4s49qY0g
jDcmB/gsIU6tQw7NTY2gM7PHnqKzhEZqAg4+U2gCUd9pBYWNi6im/s5B6ngT
YMjXnZqbWUCXFk3ep177CtJ7bGoCDeaRhLHDfOHsN6A+oL7ctmsedUWMUbey
fAc1I/yqqrLzKMGo+esD3u+AsdiczOCdR+09Vrppct+BvMDBizbdcyidY3+P
pvN3UGRiLK10eQ65BSQ3nG9m5vN30ei5s4hWt/LzwLsWMHR9s56pyAzqO8tn
/PJFG+C6mj8ZxzWD7qhYZDmVtgHlK+YZ9NVpNLDWpL2zsQ0E+FzlCvo9jZ5P
1cn8nmgDbMcHf+ZmT6NO1eZYPu12ILPrrb+A/jRq9J43c2hoBy4M2/yeU1PI
M8yUzrbWAcriZfcN242j+V6KIz2+E3AcHzrNojeOkjiVvpzN6QR2ks/DxKTG
0bRXmAtnZSeYyd6OD46OIZBH0g4e6wRyeJtu4bUx5F9/VkvX+Bd4PCKoFvRy
FNk2ZqjtWfwF/AHLVvLyX/QjK3ck42w3UP3bOaeSykC9BgLuLff7wKUpJTnh
CAZ6t1vjelp2HyhZvH5i3YuBhmvShEKr+4ABm3xtkw4DaWY+HL883westwc9
8mwbRAr9OWsKSnTgf0JsTwb3IDqpFpkyGkcHZd8drgkF9SMVHDQp6fkbGJd1
ca7Z0dEX6tZH2rv6QV521u46XTrKzsYDD4z7gUjyec/7knTEKPkluWrbDzoW
2R4caOtDBZTZuCX/frAj2I6SutyLVuz9ipNK+kHV9XkyNO1BZx13B8TCAbAa
q8EWSe9ExDeZvdHHB4Hvq/wlfmorOtggIVaEh4Aqr0+4Ib2FeefZSce3DoFp
P0Xei69bUCuPmMpNxhDw03u1vc20Bf2yEox8TB4G/s3PLBJCviMh61tBF44N
g9kRBXPNpmak5Zkmzb4wDNjCl56a+H1GJyOfJIvojgA79+3pLSGl6ExbM2v+
4hiIvnAx6sHbEkQcIj424h0HFSHV560n3iO2FI2avzLjQCbu9N4Wp3fopmeQ
1FnrcTCDMrq+G75B7mXn/IzyxsE2DTPFZ/zZSFlw6YWd5wSYepzoOp3ogk74
JfqfHZ8EdU2d0Ro2JWBcIu/c/sfTwOPKr7rjCqUggTC0qPBiGnDIdJEiNpWB
Pw0CImLvpsH+4O7QtjcfwC9+urF42zRokuvz8xdEAE3Fh5RSZoCHkd/rrpEq
UClyc8A5ZgZ4P70cvzX3M/BqOk8rvDML9ihVFlk+agVlvw0E/5bNA822joSP
n1uBeEyHPF/TPFANHgtSXG0FfkKznw175sHOz8JGHKfaQN7ziKaWjXlAdfNp
RfLtwFVejvJo3wIYS9kyp/yxA8zHXBYqa10AT8gBmjyDnYC/fDOlZHkREAM2
d7uK0sHtPKkxyYBl4OCc3VKyiw4oT1Tzq2OWQdF+8JlsSQeyYnrNgRnLwEXC
811xJB3wKjz2kPy+DKrqy++R5uigRO1161GlFRC+xXVf5tffgFFYbHvj7wog
VRbl9Yf3A+Xm8sMmF9YAO9nyussEA4RrtrionyLAo/85YC3OIVAlaFw960OA
2YauG1wyQyC4h1GAQwjQIvDK1TfHhoDE94cOVx8TYALjaSDp0xBIu6DxL+wb
Ae6snL7wPHkYfLFP4643ZIH7AuJcRsxGANkA02iqRBhO7zDyyxgHhX8tjm6o
k2Bv6YFzV8rHwRabbIPvhiS4Jw4nhLaPg2Jyf2y+NQlO7cv+G80+AV451ATf
9yPBkzlX72acnQCOET8LRouY9QEyXW0ak6BwWliZqMUK/7HuLt3iMgUaH6uD
9X1ssCA50jJ0ZhoMGdTXh9/lgI3UyCE+wgzoK1Usds7kgIzbN0LTeWZAE9n6
6OFSDigeEpFbIzsDQisk2V36OWCUYxgHt9MMWDjs/uKkDid03hqKHzXOACJf
y6mqQU5IeeKvWpg5CxpGdCfSLbjh+WeulAG7eWBG8hN1duSFsYGJKbGn58GW
uzGX/S7xwjzLr7K7feeBQKD+6KMYXjixrm0Qe2secMVNHBav4IXex7n9dMrn
wTHVTaVkCT7oJVjUGiO1AJRlz9xIZPBB98iNBM2xBfDFNvOtRxUFnvRK2nrz
+hIoTS5qz6EJwJVOzq/Td5ZA+c4YVZ67AvCxeWCoY9ISEHSTLwlMFYDfZY/2
qb1ZArrdF3wvlQlA46HN6d0DS8BS6Vvg9JwAlHO9L6Nu9g+8vaGTw+9NhXMn
ohR6eJfB05aNZrnTgvCWVcBujZQVYGX4fL4hQAg+aJL3zn21AuKuzJhX3BKC
KaZ9aTver4BLaOoRShGCBfpmJJGWFdDm0Ws3VyUEf8qJNa+yr4KFhtkuCYow
lCV+dK29uAqsilVJt18Lw9oi1nvHDqwBOCy3R3BeBJIE4xnXltdB5Jj8JaWy
LVBgIpRXgH0DmOgECa43b4FS9R5amdQNYOcl1d03uAXuDdGLrFfcAElke+Ef
/OIwcKB/B7/TBuAJqy+J9xKHE8Xqbs+qN4D56e4sJ4mtcEx++IKLCQG2HG6y
jErYBn803piK4GOBiyGlgWp9kvDh3tR9R4RYYEt8vGH8uCS0LixO2rGVBYro
7LVgXZWEXxP6jWvlmX4y3Z5LVArWnjJIZDdhgRfFjx59ZSMF3y2uGkSHsEAz
7ZLjxo1SMGH7pbi7f1kgceBMwp4aaXgk2EUrqZoId89qCb7sk4EJqYJsi5+J
0MJFTt5kSgZ2oNp2m29EmLm0z3+asAPakRT8eXqIkK3hc9t56R3w6J3ZN7QF
IoxrP9ZHdt8BHZ5EqJ2R2wSvz0X7fp/cAZ2rnyvuursJPv+Tnv2N5z/ozT0q
/dWBBKNfEvV3BMjB0cAyEvcpEuRNGfIkRstBr+FbDNMzJJimp0KeTJWDZz7J
ZldeJEFxWERf+CQHXa65q72NIcERxc1iVULy8Njsb5Dykcm4ytfqgzw06frp
6CXNCmOHlbOzKYpQIqc2gW2EFT67v9S2bVIZ2j4pKW2YYoW2+6/sNudUgdFx
2d2xi6zw6s7wnFvbVeBccKy0MCsb9I3tZzl0VAU2HLTL+0+SDXpZl4b2VanA
gInBT2Z2bHBDYpgibaEKv6ixzkdXsUG2oUForqoGg0uMbPiS2eGHj/aL7aIa
UN3x25RTOjvc9rHThCGrAUc2HGMLXrDD+WYJD6KOBnQwDfhsVcwODc4lGZ+0
04B7Ol6Ch1/Y4YvTumey4jTg0iyPoiiBA96+HRMYSNkFA1R+kra7ccC0f61X
gqma0Pe59zstFU6o4mkjJmigDXubt8TzanHCyaWyKxO22vDQv4aLDD1OuDKR
ltvpoQ3lD8qpJeznhBFVvF/+3NOGA9ODOfNunND+8NmQyt/a0F7fKb04hRPq
UW6KVkTqwL1tVjHqXFzQClPaqL27IZmo7aI8yAXfdMVJJH/Sg6WXN9kwRrkg
rQHa5PXoQffxZqO0GS7Y5pp8tX1eD+KfHjt4CdzwoLvRotNOfXgxP2l4XIwb
xnlEmZ6J0oe/HNd9XltyQ2khmeZDlnvhy/efghXLuWGkgC2amgRw3znbePk4
MnQWyNPTKjWAlx58IJxPJMNdJUn0TXUGMPO9tPebJ2ToStyQ6W4zgETitKFe
LhkeE5XMz50ygDjhztShT2QYJfz01VdZQ7gH1x64sMg8YQLOWG1NNoTK1N3E
kuM8cD+47yMRZQRF22PuVBfwwKvCPG8VnI3h/wDPKvjd
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c8le8bx489s8uqrFSkbBJ13cgoKl+ViopESUJEZCQtCZEIISuOLSuJ
njvKiOxEyJE9Qzbxe35/ndf79flcn+u6r/PcZ0hYO5na0lMolHI6CuX/rz7D
x2Y3NvixX2y+r0rqOAx5bZnvWuPHeR13Spw8xuE4T+/iu2V+rPBCpmj66DiI
azj/c/rLj2n0l3wrpsegIvA5K22IHzfl9Yu8gjFg3fdjO/7Gj6ep0oeaRkfg
xS0rI79XZH2Vg9uvG0Pwj1Xm+Pkofoyu+8VIGQ7BlbgZk/0R/BiPeQQmSw6B
epW/2XQImT+u/9i0YxB+Cr65ZOXPjxMOqcnb6A+C+IfR2+ga2U9oxwnevQOQ
SeeaQlEn58+7R7kr+Rv2n8xgjlYm/Y5/1P5QfkNVSp+dogLZj8XQObq3D2gG
JnutZfix1UpUYExcH2wJ2VtcKUpy9Gij3tY+8BcZqX5EIf3ZZnnzUjQ4q3xh
nPMrH0Y6ya/mC7th6MGLY2+q+DDtak8F791ucG2vyz1YSerey2HBR7ohxPPA
LccyPuyXL/Q9sbcLKgnBf405fFj8bWmHHE8X7DNu4QoP58NYMbfsuH8nMNka
KAlf4MNNzOzPllPboeWi4pnxc3zY+U+vXZNvO8SfFfUuN+PDJqBUOW7WDmrG
f75cMuHDPEc5Lk+xtMMV5ZfnMnT5cGio2n9CN75DDd2wn6Ysme/YlEbVbYOg
+EeNFxZ5sQIzb5GUWAucjXKek5/jxaGK1d6N682w47m5MP0ML8ZpcmyFv5qh
/OG+y6ljpD+/Umjn62aYcmhfmOrhxc7232pTJJvBRHPndr/PpD9PPLFSuQn4
O744JIXxYvFa/8GcpXrAexIDHoTwYquCz37rX+rB4a53ypWnpF/1sQY1vB6q
dip3yz7kxQmCu/pZFOrhjluCUYEHqWvEnh91qIPffF6yny15MVLucfy0UAv5
xxRGBvfyYlr9pQ/HDarBMpGDsUaWrO/VSRreXg2c80NiGbvIevX2ha8LVXAl
Nu6MowTJs25iTmlVIDLOXr0gwIv99h3jkuCsAv+AwTcsazwYG121/fr7M5hW
xlyW+UryqV3eRysqYEfbwK/qKh7s18Ilnv26AhYG9plfqeTBlDjp1jM+FRDN
XGmSXMaDE26E+t7XqADakfGD23J5sFXLl/c7iz7BjSZNId4XpP5za7LqewyH
+h6G54byYHQk8GFfDAae2Uau48FkP74bsg3eGAr5bZiePiLzXyjR2WljWDEL
mmX0JP0c32hSrwgI6OmuX7pA+leY/1T8LgfzqZ2GL81Jv3+iWEN2OchtOFeq
niHnzUuKO+ZZDo3iTKUuJqQ/9cWlVN5y2GKzN21Ch8zD726kG5RB8pjPPdou
0j/SUmNcUwpefw46hPZzY8wT200RLIHYS+ojqIcb+6lUNzbMvIOyVgWbmXaS
dzkcm6p/B+vvpM6bfuXGFDXldrEH78Dfj81Y4C3JHyS/HVoohkDe73uifLkx
6qLYrI0UQeb9hjRDDzK/Tf9Jak0R1M9XSy3f5Ma0/94ax1CLgOtnqai5LTe2
si/+dv5aETxPSuDYakyy51GMpgohRtlh/LUwNxZ3rmITYyqED29sr5rwk/N0
lx2TGy2AbkHLfsomMr9qG4P3twLYvvZf1yUKqWtkcPdFFkDSZ/U6qWEubLUw
OlckVwDppxky0wq5MP4gbyRvkw8lt2Psc09wYUpOieCbjTyQtLn5psOQC9Nq
9zs/Hs2DYBNDGp0OF/l5EGaU3poH1jILp0+pkLqARm06NQ84uv7TXhYief+X
T2Gn8+DiITYh3d+bsJ/7z/uH3HKhRpZm6tBFsq2yU7BJLigJvguOaCM5qp3l
uFwusEzbMIxUbcKIPV5MYjAH8hLxVFAmyTnFJssWOcDA5PGl/RbJidKvay9k
g+PMcQrFcRPGgt32HZANHT3SmjJXybzRPPpjktmQVdya53WO5JHbDTYjWWBm
Jx8rfmgTprx9k6rpmQX4FPOPI+okvxGIsb2YBbLaPbyuCmS+s+r4H90s2BB+
+viLJJn/9zuLFE8WUOuGXOxZSD2eTWQmKxP4SsqzwykkNz7u44jIBJ+UFyNl
y5wYnakZveeTCaY+Ohe5Jzgx5fBtPZ8TmbC6L/5IYRMn9kvh3pOwmAHHn58W
X4/mxFjEPIrvbAbcUeI+YhDOSd6nGvs/ehmQ2lJzMzSIzPtvl5qoSgas82lV
St4l/R80qBd4MyA7XPKKgQ2Zn8ZRdbcxHTqUu0NCL3Biq/Pi0lVEOjC2Rbzr
NCPz/pzzOJOXDucF2NgcjpD9/2RwnHueDpwRfzJD93Fi2vBiyNdz6bBfNb2t
cxeZ73lf0cI4HWy+W/+TlCDzxTjplSEdyja3Hy/iJ+d5sGhRLJ0O1yPLZjqX
OLBVNZ/TxjwVItXcRaRmOTD61rRQNkaFinZ5XYdxDiyeKSX5sZcKIoLJL9Z7
SE5wy33ylQpfXz5Rl6rkwDg3aFQjmQoL6rpWDmUc2O+qUz1rDBUkO9YCiopI
PuxJJxRGhTtCzj8NqKT/UWLt/F0qpJbIMIQlkiyW8bzyNhVazvbv+RlD+osy
hZucqCATbebjEEzqxIv2ZCsqnNLgSS16RPaPYjlif44Kfp21Det3OTAt7/Hs
DVMqdAgfFA9zIfVHRQ579KgQECNVWXSGzFsrKrm1lwqFB3rG103I8/1oiBLZ
TQXaz0gBw6P/n/dNzYokFfaLsl/5qUWycFm+nTAVbD5UhkipcWBKt0/ZvAAV
Qi183jnIk/U664UfeKgw8mqadUOC9NuFCM+wUkFAK0PRUJTUM6W7LJmogLov
m4cJkPs1DlBjpqeCg/e2+z83kfPmmHb0r6dB1NYfmVIspK7ZfWNpNQ0+l4W2
OVDIfofU3ugup8H0+aP/ipbZMa1Kdu+XhTTY+o9h58YsO/YL0yzynksDg7jy
44YT7DhhMGHy2izpD+5eYxwi+cHl2YzpNIjxXc341MuOxSvTZET+pIGuk8g5
3052jHpOn3o3mQYTlhosmq1kvkCPsv9EGkSanC1arGcnf78oBd4ZTwPQvn25
sIr027QIJ4ylwYhiJO9NzI6t9D+8mR1Ng+eSRcTeUnZMMb85c5NkLf62G2MF
ZF76Kt5G8iDDX9G0bDKvpr9jfiQNQuZ4v15OI+ffrLq+TPL+QQUP8UQyf9Vr
QYb0//5+YmdPDMlaXx4/JPlplWNb9Auyfn+cByfZX+VdsL9ZCHkeFe7QjyT/
SstS4A8g816nRLwi5w2IqvvVeI/UL9v8l0yeR/HJWFCQF7kPmZan38nz/vRk
0zziRuZlTW5SIvfxwH73KJMT6acoJZaQ+9pnYfCywo7s3/eC+//7/GF0Re+u
NelnfCSlS+5bdm9K4tJpMi9e3s51KQ3atlWeKDpB+mWlFGpX0sCH6/e/m0fI
eaqE6w3+pUHTHzHzcS2y3jC54CP5/t+hHWKlqpH7a5SOKSafD6nmC8U2CmT9
f08C28nnxz3/Fd8vKbJ+V0tlMDcVxJNLccw2Ur+in7mDnwq14Z2OZwRJfU9J
5+8tVNjqJljXxE7uf3PEsbbtVKiyVfMMZiT7pQurskhRwcns9K6j62wYW35L
s9pF3mf18PuVM2yYsvHh9iMF8nncna/oN86GUdCjO6aqVNgs3NyrNciGaYfj
Tx4+QAW7FS6t4g42LM7k1xF1mApc5YFzVILM28XoSrGgQkl2epLtezLPQvX6
Ank/L8XXmEgWkHncggM8V8n7dpc5+1UqmWcwUJjvSgVzHX/bkGCSJVtc34SQ
97/as93VgqzfIlIqXUeFaCV33fRTZD+qvAdDGxWC4lzyfh0jdRnl02w9VHBx
vR54BLFhv77WD0F/qHBQ7MIhMWk2PJ1n++jGlnRoc0epX6dY8XTNcRbX6+lQ
3afFTxkhWap7M+GeDqXGGn6qfaw4VLjkg4J/OiRIKpkntLJitElK60E0+XnY
IMXlXsKKTTKbFEZq04F+J4u7hD8rzgv1sn+kmAHzoQz9Zl6sWOE5c4coZMDI
6saJoFukP/JbXZtxBjQ0L8ksXiH9WZNNeXYZEO0z1lNvROq8lSpcSRmg8P2b
nsdmVmw1vdaiL5oJFx+82NxIZcE815z9WXZlQQMssHgksWA0HyyfpZ4FsHpm
RTyWBYeW/ztywzALxF1Ee12eseDpCPpnh+2z4LdlEnWLOwumvfTv08vNgiua
eZoXdVmws2Tpx4BD5PfrbN2lyR5mjHs7eb/czIFf2XtPRf5gxn6FuZJ9D3Pg
xLVn+tDMjBM8nloIxeSAAs10T9hnZhzaayvXUZEDs98651QySW5wpsZuzgX3
9OHH3h7MuKN4c44KzgVfK4YcDn5mnJXI+vTzizzIazQIaeNkxnNVO5r1EvLg
96EgxzhmZuxQd2y+NTMP9LdtlpdfYcITr8w7tlTmkb+XduaZ9jHhrDpDPvXZ
PIg/eTQ/OpcJN1W9GugzfQuEfljxLmMmTGE9+XN0Wz7MFn2PnNZjwpyKSZ9Y
9+TDDmmR2++BCVOHjhSq7M+HAIZkdSNlsj4woarANB9McGGJowgTNjR8MX08
IB9oGh2lRSOMeLfBPYm1+Xyg7BUjdB8y4v07hlmNuwrAe4v2xYe+jJhRXlr/
9HgBLG5Y/6u6zYhrznk4O64WwFRLquZRe0Y8wC2R2iRaCF0e+0pMTjDi6RmG
E6cvFELx54NvLwgzYo9Fuzzb/kK4cf588u1sBlyif1GlY7UIfj6Nfpz5nR4H
SMXSLVuWQOsX8SyrRnrsl8qc/tulBOo30po219Ljkr9H5LoflsBH12JhvzJ6
fOfW74n1zBJIsmjNPJVMj30pNlcZl0vAfs+mpn/O9Pjz+JtVwcj3sPrVT8iE
kx4bpwg8yuguha3sdulzOnR4Z2sC/XxcOVz8WB8kqUWHy1ReJ29/Vw6JLorO
Jqp0+M2pk3oXm8phZ9eKWtYuOtxr9L1BjOEjyGcFf77MSYfpLD1+Zl/7CDrH
C3pbvlPwnyc3hZg0Cbj2fH3zWzsKVgj+dPDZbQzXVWWZurZuEPF1vkeiTSrA
hel9mjv3BhF37bjBlGUF3PlucJSPfoPwXA3Yb+JUAYFuts+ODK8T7/B+Mc2Q
CsgoShAuebtOfDoYJJ1TXwGjqoL7IvTXCbuzr27zGVfCVTXGMyec/xEtPUbn
JE5/hsvqv6iVlavE5s1xw/3Pyf9LVHUz/XerROOeV2wBKVVgLxzGUJuxSogU
r//TKK4C51Xdiw1hq0T6hQ8B1Z1V4E2k83darhIco+dPBkpUwwsDN9+p1RXi
h/Dc4ZKCaqg6w3lKWGWFsH8ckcfQXwOyHgc2HFOWCJMWq9lhpzrAPcdl+yOX
CAm5hKk9j+vATPfy6TNPlghRj37q/fg68OcKygTHJcLNEmIcv9VBZ0rPGZ79
S4Q555K+ilw9BDT75b2tWySKprOygyfrYUi2+tLc7AJhpLl1ePZuAyT2nPzs
qT1PFM41EF/+NoHSgNJKm8o88eNg3zUFumb4PMaroLB7ntBOzcl/w9UMQ4uN
r4a45ontE0I6eTLNIMtn7Hqye464pDF/WN+qGfL1D0vuvT1HxCianPFpJOtz
VfxoWX+JfwxJa6eKW2D43mYtA6FZotrq8/6stDZg98n9E84+S/QQt7wvv2+D
fR5HkmlrM0S+j9ysTF0buDv6sN/pmyGyM7rTBqbagNlisCMrY4aYL/iVyaf+
HXaoFLnxHZwhvujHl5z/+h2sh07l9lyaJtrur5ix/muH0ojdeiNmk0TSmn4H
LaITWC2GL9NpTRLR1+n1HDI7wUw81V9EYpLw/CjSzvapE2YzpLDx+AQROvgk
yWuiE2Twds23dyeIgVWjcM3DPyFqTEDxDnWcYHjv5X5g8Se4Ad02zpVRwjT8
JnfK9W5QGO2ck48bIh7c0HVqCeuFW9N7ZQQfDBFZ5yiB8Rm9ULJ478K6/RBh
+ZZDzLeyF7SZZavq9w8ROnLG87fne8FU6s7La22DRHDIEEVuLw3cLogcSOYY
JL6GVMaPh9OgtNn87pY7/cQ2pvvT4tf64HBpF9s/MxrxtfjoS3WVfsjJeKNR
rUkjnl4fH3h+uB+EXjldCxOnEcOf6CXWTvVD+yLzc6O2XmKr+JYXS279IO1l
xhO38ovQ2xJcGFPSDxX35jmRQQ8hHGboHoIGYC1EmfkRrZPQFEv/FWgxCM7p
uUu8/K3E6IaYSD4eBgUux/s6tBYiucZMMqJ1GGZc5Lhcs1sIfQ0R+cdDw+Ci
lS7VZtBCDN8SeBTFOQJujUnHI72biTC7J3dunhuBv2N7jqjWNxIDN+MlWRZG
gPn+UoK+Sy1x7PHrV0KaY2B2RSqxxfs9caWtkSl3cQICb7oGPC8qIeiH6aN0
uSah3LvSyXTqHcEcq/x5dMck7Ai/fKjFspgIuHZH4rrpJMwSyV3NOgWEbekN
F92cSdiubCiXxJtB7BVYSjO7NgXTUdE2M9HWxEWXaLfrk3+gur4zUPlkCUyJ
5dw4GjUDdh4/qy32vIdIyvDinrQZYN3RxfiAoRR+f+UTEimegaNe3b5tBR/g
Jy/t8Na2GaiX6XVxEyDg03SE93ueWbDTdcnuGquAGqHHA1ZBs+CQcDtiW1Yt
TNQ7+b0N/gsH9n7KN3nZCphRR2C0dB5U29ojP9a2QlN+uyx3/TwoeE3ckVtr
hX3af2t1euZhZ62gLuulNkj6+aC+ZWMe+G0dWwnZ73DCXYbnpd4CTMSKzu37
2A6Juz22lLYuwGtOd9VNg53AsyDIU7KyCPTum7tthGnw1lx1Qtx9BcytMlpK
VGhglKyXWxm0AvlHoZbThAaeT00bPZNXwFrsWnHhIxoolL61E29egYqaslDG
OZL3NbSe3bsK90Vt9FIa+mB7/Niph6OrwPgpP6f/fj/4h+qa6N/8ByycJves
p4Yg12SHjdIlCjq7yxyrsQ0D78Kbz38dKShDx2aDfccwFOw9l4+9Kei4p4dP
wblhSOSTPe8TRUGRQwmejF+G4eJrwVX/Jgra+WnmZuqrEfgoZsRVo0OH9NzD
rccMx0BOZOKhnwI9uk9r13VJnoStjT7XNpQY0a/3Rjc8yiZhwcPhZLMOIzoQ
jiN9v0/C6C+txFxTRjStlzEayDIFt3QsnoW5MKKLmT7Pkq9PAabfUT2eT/rd
d3S1Kf+BvMdtR+nVmNAyk8Z7UetpkBjmdlzXY0Z5rx6Z+M7OwJyb/cEHz1hR
Hf+jYW7KLEQ9Npa7lMKKhp4+9E3cNAsJrixtJ96zoq3eD7I+756FjwlGgdb9
rCjgvD8rh+UsqGwuPmC5nw1ZbfPFL+tm4ehKv0jlIBviee2m8DblLyjMLW1K
Ps6BnJJseAbM5uG+lViW9XkuFOIZHRtyeR6YYqjCbre4UI5Jw24N53mQPiEa
FxPEhabW1bVDnsyD5LMTkmLlXMjBgsNlf9k8dJZHNHGLcSN7gfzWIIkFWI4P
0Igb4kZXHm1Eqk4swIam+ZnrFTzoon3Mtsf3lqD73IPFPD8+tNrJ1jATvAQG
tjEOfM/4UNQRT9/zMUtAFzfJdTeODzXvPturWLAERVI8656lfOjw8ObE7oEl
ELgi7rU4x4dkbMJ2KBkuQ8eVnGwhB340dyFgTw/XCpi1TRspXxZAT/5z11CO
XQWH6tbeLvct6Hm9rENW+io0Tlo9bniyBcUa9MZLv1uFnZo8ss2xW1DeQUNG
oZZVYPtRFclcuQV1yIg0rrGswekbWU+UeQTRbvqPNlWuazCl09WVmC2IqvKZ
Qs8Z/QNlK7UGpXkhxCgQMXR3ZR2EgqunrEtFEd+ULxcfywYcjaVeU2kSRRI1
dmop/BtQr83ILTgkig55az2qkduA+A5lbh6+rchzoF+a13IDzn6lt26x34qm
CpVskyo3gFBgPpcitg1NyI7ctNanoGyRXBZa5Hb0o+7h9ANuOrS4e5S43SuO
XhyK0zu9hQ7JnrZP7p4UR6ZvC2Okt9Gh5NCib8fWxFFDZP/hKlk69Nw6UPy0
sASquqQdzaJPh5bTtYeWTkqg4sU17UBvOqShJGAYXyeBIqVuhT8bpUOfQGY5
67MkOu1lrRZTSY9yj6oIX6TtQJFxAsyLtfTI3pUtdn16B2onqr6fbKJHg2Ye
Fll00siMcY/bph56FJSASuWlpNHZ4L8Ffgv0KDRdVPzHFWlk/vqB4lUZBjQ9
lDT5dloaWVWmyqk8Y0BbJnrODHDtQg4c45IN5oyIMVCFPKAMGvcsZeS4xIg6
XBxZkp7KIPuRJ0MGVxnRx6gP1PDXMujql90Zn1wZEb3+75Q31TLI+u4VxaIg
RsTmnfvjoZAsOve3D2I/MqLrg0Uj2uWySL+r47y9JBP6hJPLKPxySCyTfN/H
mFDzWQrbndl96NTrkvdfp5mQjnx9Rw6nPAoMz+gOWWRCLI5qrcs75dGcV4ik
IBMzqtqd97zFQh59NTbL2SXOjKovyhqFVckj96nBL4ZmzKiyoWGnrIkC+qbI
NB9YwYzMOsoTypQUkVeJ7knuVyyI8vdU5IVtykjpfNO0ZSIL6h0Ks74tp4zG
Ns6H5KWxIKGeu4JxmsrI3MC99r9CFuSp3G7Faa6MDrRT4cU3FlQS2u7h9VIZ
Lf3dJCdMYUWr2Jc3RUAFuct3MErZsqK/L2tZLgupIudUh2I1eTZEl2Po02Kg
jn41ikZwqbGhrdvl9QgLdXRs+avrkBYbMmmu5C53UkeyxjKKkUfZkJt70dD4
S3U0MDOYOW/LhrRjnioJjaqjMwctEwtj2dBdr2fiJSH70aG2/4KU2NkRr0ll
u++wBuKkV7feN8iO5M9RheJbtND72wwnh8bZUZZ6x0zzmBa6MtmoGz/LjvbE
W3CIMBxEuMNOmovCgZ4vRugMKx9ErrkxI5MiHGiWavvqduRB9PP8umO2CQeK
erZn2tfyEKK+++IlV8aB1Cix15spCOndOBUhG86JvvffCZb8oo1uPf9AcYrm
RFcHOm+yt2qjlHeSDgWvOZGGYobsP5o2oqef0dHK4kT6l9cPMPzTRjgyePrY
F060/Mbl03NVHXQAVxndXORE0k+hpYqqg/bxa9CXWGxCDkEuH4iXushbWmC+
P30T8hHcVLTH6jD6H3ose9g=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
D6L/ATvfGd8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14349#11"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5, 5}, {-12.333331598639539`, 40.751333838837105`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"1", "+", "x"}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"], "+", 
         FractionBox[
          SuperscriptBox["x", "6"], "720"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"], "+", 
         FractionBox[
          SuperscriptBox["x", "6"], "720"], "+", 
         FractionBox[
          SuperscriptBox["x", "7"], "5040"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"], "+", 
         FractionBox[
          SuperscriptBox["x", "6"], "720"], "+", 
         FractionBox[
          SuperscriptBox["x", "7"], "5040"], "+", 
         FractionBox[
          SuperscriptBox["x", "8"], "40320"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"], "+", 
         FractionBox[
          SuperscriptBox["x", "6"], "720"], "+", 
         FractionBox[
          SuperscriptBox["x", "7"], "5040"], "+", 
         FractionBox[
          SuperscriptBox["x", "8"], "40320"], "+", 
         FractionBox[
          SuperscriptBox["x", "9"], "362880"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"], "+", 
         FractionBox[
          SuperscriptBox["x", "5"], "120"], "+", 
         FractionBox[
          SuperscriptBox["x", "6"], "720"], "+", 
         FractionBox[
          SuperscriptBox["x", "7"], "5040"], "+", 
         FractionBox[
          SuperscriptBox["x", "8"], "40320"], "+", 
         FractionBox[
          SuperscriptBox["x", "9"], "362880"], "+", 
         FractionBox[
          SuperscriptBox["x", "10"], "3628800"]}], 
       RowBox[{"exp", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm], ",", 
               TagBox[#10, HoldForm], ",", 
               TagBox[#11, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.768790490747669*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"9684e3c3-1065-4d4a-a6e4-c056d692ffd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", "x"}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"]}], ",", 
     RowBox[{"Exp", "[", "x", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.7687904983799343`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"3fc9e225-783e-4e50-bbce-c3023842114c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1FlMlFcYxvGZYVhmGP2AAxypWBZbgiiCEFax36tIGBe2YbERay1CQygF
CgQwCJXIomCoslaWRpFS6FQhprLb71QQErZSKSBFC1YZZHFhmTAsMrXJuXjy
u32u/hZhsbIIAY/H83m//02b9llUqxFZGyh/oVYzRJFqrBzfQKRvZc9s0ypD
fPUmVppWEakw/+1N7BJDzN3i3sUuIQLxk2sTCoY8yC3QmVQgkmn0sT7pZ4jO
3tEPST8ieqfuHLhQzpCixDPHLpQjYj1DSnguDJHzE6p5LoiEaCik/JitRDPC
28HkMwMi7skPd2iVEPT4YXTVNX1i1ZA3dninLpF1lJ3d1aNHqrOdumVFIpL6
5kD01ecMVZs0J5dF1fttpWoR34Jg883rEqqQeFfe95XOi6kCUtN9biQhVETl
k9OZRUZ/1GqTdp1du38IUHPpZzTu6CItskG0TmGrDY5na8Z5ZgkJ7+Qn6Tni
Ve7vvOs58mEB+RU7MifkSs5UHFm3fIhPXA0HZTNZi9xXTjaa46ZqbiQqSNzo
9po76/JPbUfHOtcV0x6QkzPN2aS4q2OqVVzQ28TNp9Jn3M2ngZ3nDiq5zCQ/
/WnNYW46w8jDe9si58r8Mun2gHCtxdZeL0NecfaytpH70nus/czYsl2lgrth
e9z4xsNH7OHWcdG7kEkuJU86rymbYOPq6lX6aIiT7q7VSE5SsCFf7rz56HwL
51Q4Lo8YnGe7+8ZyHQOb2b6K266OWQusu+3vd/1Lh1jfYw17/ppaZgVJRk/C
TSZZfps45q5ExWpL/DPCXitYoVYt7EteZy9OjnjG33rFHoqbs2j5c5NtKM/2
T19cYB/7eFqzqzyIrQrXexGiZF0DHHTi5QI4HVW2IydDxdo59ed3gBAuByS5
OVass53WbRUmA5ogNCxWfLu2yQpyjy6xadow2pv1NpPhU0UQnBrmXNYhoIoh
WnfOcuCkkCoBM3lXidasJnULpDZ7BjLl2lQG4mqiG53tROAa6BxaXqoHEoFL
2N4pMWhlbN9XGq8PXl8HFdsUSqDK+eejxUcMYFvLjlivj7bClSf5TZYGCAri
L12zH2XgiFun9Ps5BLJsP9vKRj2qIdiEZgZXp+lTjWBEIaoqDDagGsNA2NRB
AzNExfBM+JOq2BJRMSzXRNabWCEqBpO5OVMLW0TFEJ6wuGK3H1ExrF1U3/Y5
gagYrH40+eDyd4iKwc17fFBSiKgYjs9U5FwtQVQM39iaK0srERVD+z2rwRo5
omKQdTlmd3YjKoaISKWHtBdRMaSIm5Z6BxAVQ6Wv+xdDw4iK4eUIePz7HFHf
/00RLEVMIyqGLds762ZmERWDw+feeGEBUTF48UUDiUpExfDprZ5MlQpRMUR5
Xdl/fgNRMdB+UTH8Bz3yOys=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14810#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
1gz9//8F2todObJw3gz9D24emeA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14810#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14810#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
uBCiR/wPDi1FSw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14810#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
73CjPecy73r7aqP/AXwruwg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$14810#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5, 5}, {-12.333331598639539`, 27.482322850811414`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"1", "+", "x"}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"]}], 
       RowBox[{"1", "+", "x", "+", 
         FractionBox[
          SuperscriptBox["x", "2"], "2"], "+", 
         FractionBox[
          SuperscriptBox["x", "3"], "6"], "+", 
         FractionBox[
          SuperscriptBox["x", "4"], "24"]}], 
       RowBox[{"exp", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.768790499991599*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"e7cc0b2b-4f18-4ffd-8f4d-15723f63ff73"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", "x"}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"]}], ",", 
     RowBox[{"1", "+", "x", "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "6"], "+", 
      FractionBox[
       SuperscriptBox["x", "4"], "24"]}], ",", 
     RowBox[{"Exp", "[", "x", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"c35f6c8e-618c-4787-854f-cf757a79642a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Normalize", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Exp", "[", "x", "]"}]}], "}"}]}], ".", 
      "\[IndentingNewLine]", 
      RowBox[{"Normalize", "@", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Normal", "@", "\[IndentingNewLine]", 
            RowBox[{"Series", "[", 
             RowBox[{
              RowBox[{"Exp", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "i"}], "}"}]}], "]"}]}]}], "}"}], 
         ",", "x"}], "]"}]}]}], ",", 
     RowBox[{"x", "\[Element]", "Reals"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7687905684521427`*^9, 3.7687906689809504`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"11f849f8-b937-41c6-be07-e8c17fb0c3cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", "x"]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Cosh", "[", "x", "]"}]}]]}]], ",", 
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "x"}], ")"}]}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "x"}], ")"}], "2"]}], ")"}]}]]], ",", 
   FractionBox[
    RowBox[{"2", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "x"}], ")"}]}]}], ")"}]}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"8", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]]], ",", 
   FractionBox[
    RowBox[{"6", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"72", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", "x"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"12", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"6", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}]]], ",", 
   FractionBox[
    RowBox[{"24", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"24", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"24", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"12", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"4", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}]}], 
    RowBox[{"24", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox["1", "576"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"24", "+", 
             RowBox[{"x", " ", 
              RowBox[{"(", 
               RowBox[{"24", "+", 
                RowBox[{"x", " ", 
                 RowBox[{"(", 
                  RowBox[{"12", "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}]]}]], ",", 
   FractionBox[
    RowBox[{"120", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"120", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"120", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"60", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"20", "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{"5", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}]}]}], 
    RowBox[{"120", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"120", "+", 
             RowBox[{"x", " ", 
              RowBox[{"(", 
               RowBox[{"120", "+", 
                RowBox[{"x", " ", 
                 RowBox[{"(", 
                  RowBox[{"60", "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"20", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}], "2"], "14400"]}], ")"}]}]]}]], ",", 
   FractionBox[
    RowBox[{"720", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"720", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"720", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"360", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"120", "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{"30", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"6", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}]}], ")"}]}]}], 
    RowBox[{"720", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"720", "+", 
             RowBox[{"x", " ", 
              RowBox[{"(", 
               RowBox[{"720", "+", 
                RowBox[{"x", " ", 
                 RowBox[{"(", 
                  RowBox[{"360", "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"120", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"30", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"6", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}], "2"], "518400"]}], ")"}]}]]}]],
    ",", 
   FractionBox[
    RowBox[{"5040", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"5040", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"5040", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"2520", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"840", "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{"210", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"42", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"7", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
    RowBox[{"5040", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"5040", "+", 
             RowBox[{"x", " ", 
              RowBox[{"(", 
               RowBox[{"5040", "+", 
                RowBox[{"x", " ", 
                 RowBox[{"(", 
                  RowBox[{"2520", "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"840", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"210", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"42", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"7", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], "2"], 
          "25401600"]}], ")"}]}]]}]], ",", 
   FractionBox[
    RowBox[{"40320", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"40320", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"40320", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"20160", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"6720", "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{"1680", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"336", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"56", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"8", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                   ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
    RowBox[{"40320", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "x", "+", 
            FractionBox[
             SuperscriptBox["x", "2"], "2"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["x", "3"], " ", 
              RowBox[{"(", 
               RowBox[{"6720", "+", 
                RowBox[{"x", " ", 
                 RowBox[{"(", 
                  RowBox[{"1680", "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"336", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"56", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"8", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}], "40320"]}], ")"}], "2"]}], ")"}]}]]}]], 
   ",", 
   FractionBox[
    RowBox[{"362880", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"362880", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"362880", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"181440", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"60480", "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{"15120", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"3024", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"504", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"9", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}]}], 
    RowBox[{"362880", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "x", "+", 
            FractionBox[
             SuperscriptBox["x", "2"], "2"], "+", 
            FractionBox[
             SuperscriptBox["x", "3"], "6"], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["x", "4"], " ", 
              RowBox[{"(", 
               RowBox[{"15120", "+", 
                RowBox[{"x", " ", 
                 RowBox[{"(", 
                  RowBox[{"3024", "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"504", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"9", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}], "362880"]}], ")"}], "2"]}], 
        ")"}]}]]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.7687906769610777`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"9f7d78fc-d28e-4aeb-b8f2-bee5e1b8f540"]
}, Open  ]],

Cell[BoxData["\[Element]"], "Input",
 CellChangeTimes->{{3.768790659413001*^9, 
  3.768790660848167*^9}},ExpressionUUID->"9d002cd0-7fdd-4834-a4e4-\
774b35846da3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Normalize", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Exp", "[", "x", "]"}]}], "}"}]}], ".", 
      "\[IndentingNewLine]", 
      RowBox[{"Normalize", "@", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Normal", "@", "\[IndentingNewLine]", 
            RowBox[{"Series", "[", 
             RowBox[{
              RowBox[{"Exp", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "i"}], "}"}]}], "]"}]}]}], "}"}], 
         ",", "x"}], "]"}]}]}], ",", 
     RowBox[{"x", "\[Element]", "Reals"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.768790688021022*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"1fd72b9b-6fd9-47c3-bdcc-c898b0a701fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", "x"]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"Cosh", "[", "x", "]"}]}]]}]], ",", 
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "x"}], ")"}]}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "x"}], ")"}], "2"]}], ")"}]}]]], ",", 
   FractionBox[
    RowBox[{"2", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "x"}], ")"}]}]}], ")"}]}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"8", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]]], ",", 
   FractionBox[
    RowBox[{"6", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"72", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", "x"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"12", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"6", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}]]], ",", 
   FractionBox[
    RowBox[{"24", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"(", 
       RowBox[{"24", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"24", "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"12", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"4", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}]}], 
    RowBox[{"24", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox["1", "576"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"24", "+", 
             RowBox[{"x", " ", 
              RowBox[{"(", 
               RowBox[{"24", "+", 
                RowBox[{"x", " ", 
                 RowBox[{"(", 
                  RowBox[{"12", "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", "x"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
            ")"}], "2"]}]}], ")"}]}]]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.76879068918332*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"29bc8896-146d-4b13-83b6-cbc82a06577d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Out", "[", "13", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.768790691781982*^9, 3.768790704876638*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"ff15e0e4-c54d-4ba1-a594-b16ee7db263e"],

Cell[BoxData[
 GraphicsBox[{{}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768790705222787*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"a69040c3-fabd-4110-bc21-8212469767be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Out", "[", "12", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7687907163330584`*^9, 3.7687907163965187`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"96cd1851-0705-4ebf-8f9c-ca156a2f063f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
2eIzx0Jqf6+dTML+v//j6P//j/8PVyzDsQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25822#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
t43nVw==
          "]]}, Annotation[#, "Charting`Private`Tag$25822#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25822#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3pkifLKbNNyv1geLaIPbpglXTibpfN/aB4Oe8GvPoPhc2PCOWOuFzmrRvcj6
63rZj/t64YRavMMsag/bqojO115YqDHjPofaQ9U2OPK2FwaNB60iW/PH+e16
1AsFdprdnUfxtPfc7Pj5Xmj3+eDlBcKbpyOLng/3wFzzxtlFwqc0aUsOf3pg
1wUZnSXCz/RVpS9l9EDSuc5EZG7LsRAJ7x74kL5Qexm15wao4LDrgTv1Dv+H
HH4neGNOtweqNLiOIIt6Kl8rFOqBWQOjLiuEbXyDIpPIPXBxh1Y2clJg359X
E90wrX5qCflQ9Iuj5rnd8JSxkcMq4fvxXTfVYrthqpd2InJe8qH3Ms+74d7p
gQ7kUzltLOsG3dDe8vzJNcKpSR8US5W7YXGq2F1kvsjb118Jd8O6wdAPyE2L
5NfnGrpghvKPTeSk5ojpruguGFgSILlO+GG2jK7ztS6oKWGhi7zbzYA7eqUT
kix1I5GXLo/elivqhAuXQvKRq1Qe/ikO6ISL5hKdyM4bHwInhTth0pwr/8a/
9UJx0mu0AzItmikgC+C/Nbf/6IDLpFYd5F+P59kxtQ74QbziMXKoxfObDdwd
UOOb6Vvk66qCVbat7fDjyaLPyNxMp1+8utUOrfYpNiL3DzSP7j7SDg+/thhC
ziq5eTaHrh3uFnm1hGz27A1LX3Ab7Lq6n28TrU/X916/Z9IG3bAvEsjks3ll
bHvaoG+ipTxyKlu/r3xOK1RPfKaJ7DV+b6jsSSs0ILMbIV/8zaZmotkKHz4e
tEReCzxE9ulugRS5X/eQa26XWvMntcAI+XpP5Didy8WpTi2wZ9n4ObKLHE1c
9VgLjH1j/gr5LO8T77/kFgjKR98i75rd1m9X0wzduehikGfqk1TpIprh7ZCP
H5HDQ+pIktLN8FPmz2/IN11sLPIX/sIZA+UsZMxwpUAX/wtHMbN85C1HA0UG
n/+FL41kfyEP84k+fnDhLxQ8m1aCnLec3s0p+BcaPxmsQA5q1cDiBptgHmiq
RlaIurNZ6doEqZIzjcisHkxm5qpNUKd6dwtyh0n4zzn2JqgyJtKOnHZcetfz
pkb4qHykE9lbqMBDMKYRnnjm2YN8ie5ix9frjXBDcKQPeX/PsMqZQ41wn7HE
IHJ9LPeafUkDfH5WchT5gdXR3DCjBniZHD2BLCph/gAfr4dRMsFTyOVDvooj
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
HrjIhFGz7+xAnnMLFN3ORMZSGQUt2QlXnDdI3SNMxgwHmFjYCNOdUK8dkyBj
m7hRBivhw4eV5r5IkzGyrII1cozgLqWjymQs2vBpKQuKx8mBYnUDMtYZafUf
M+GU3r/D7CZk7GpTvyFyT1M5W60lGRNMGORFPg8/6xrdIWMRd+wCKIRFX97t
uO5Pxu5Kmr8ho3j0vkYnE0zGsv6rN0IOuG8kNhNOxu5fKBBGXjI/dv1BAhlj
zKR8ZyL8W45p3u8XGdv7a/cII2GSxOJ27XIyxvFWJwf5KP+IErWGjP1lnPRH
jiX99ozsIGNqWe4KyM0LP+PM+skYJN/kQOYYSysRGyNjP1fLBxgI369/w56y
RMbW2n9HIKeW+sg6bJIxk7I795D7cu/ryZMpWPQlz4vIWvFX3uZRKViGcctW
ZO+3Wrme/BQssFBkiUQ42x/rPCVCwTRgTRuy+F1x8d8yFKxEzzQB2fj6NrVX
hynY3xalIOQgE+YbF1UomEed633kIt0V/x2qFGznQX5L5JXT4186NCjY4Ql+
beQDSp1173UomO3iAxVka5maeWtDCualqrgPOUL0F5+UKQVzLNQXQK7Z9kN5
0oqCGdlWsSOT2T6afrOjYL6i7zbpCStvhj12cSTO31M5i+ww+zxeyZWCLQXr
jiB/HHIr3XhEwWb2yHYjt7XdGv3lQ8Gi/CybkblrzDh8AyjYvcSJWuQzRboH
zr2hYMdvVVUhu2WpXuCKpGAbhRtlyKObVwLTEigYG699MbKxmku57g8Klv7p
Tgky7xjpWmwOBYtrTvx3fEVgEOMsTsHq7En/fs/r4M5Y1VIK5uPrUYOs1JQI
3vymYGHHdjQhz7ge7uivp2AWyQ3tyEmCvx4cbiW+P5raj2xRoMXn003039aE
CeQd1m3pTYMUTOlU3iJyDbPthT0TFGwkaIKE+utZytzUvVkKlsmtxIW8NMux
fwcdM5bHLfKvv9PCIsqvk5mxxz+zlZBtlfdcy2Fnxrw2rp9DbvbCYi/vYMY0
AzkckF9K/AYpQswYZNl8gqxeYdSxtpsZK7JnDEfO5HHi++8gMyatoVaCbJ++
mT55lBmLHvLqRJYw8r8AADOWWVC9iBwa8yGw+xwzht8Llkbx6CLbzChmzYwd
Zsj8gCxTbxXrZMeMnQg3LkEedCFqozvMWBw9ZRj54k9WN+uHzBj3SxcZND/k
NY9NJ4QxY+4+oaXI41PlgUvRzNjXYJsp5Pg3Bvs14pkx7dUj/Gh+bmm/fW00
jRnT529zQJ69Eduxv4IZ473ALIXmcxKnrJtHDTN2bqrMGNniWy5fdRMzZmr9
xB+5brnhwu0+ZuwBtXcG+dszSsXXNWaMRWR/JVo/HD7ezFCQZcG+1Al9QutR
5x+BEE4FFizyi8MksuZyhdOgCgumL9Yoj9YvqfOScqFnWbC99A1FyP3TA8nz
1ixYzZzvNFr/DI+Zvf8RxYIdact1R897Smw4Pf3jWDC/rRl1yPIv802tkliw
Pz/SJLlQfPcJ7NySxYKdN4ptRa541hzqVM+CsRVfVOchfLxB1/8gKytWLTCj
i9b7lHU6O1YeViz3gWUmssCeNI3e7ayYptwvwa0oflw5Ka93s2L7Rk9OIH8T
qnw8jbFiBu4HwlD+2G136l7aPVbM8POPrSj/sJOOWMgMsGKqmUfSUf7Kvsdw
YXCMFbsR9OMQym82E39U/5thxXYbznxDxpttd3PSsWEptinfUX50+hIxPMHP
hqm9WcuXINx6ZcP+sw4bJhCwa16KcGJmsdv+PDZM+zTn4CHCp2/ph0gFs2Mp
xY/DUf53fp1LdzucHRuK65JH9UF8pujN7+/YMWOBzzXIJNL0SZUUdqyuIpjl
LDp/aMCUZjE7lrH8wBM9L1PCS87dWWTHTrxj9tJF8UhVJGVd5sBStFerLxPm
yxa8fVqcE/Oyz7G9Q/i147NXB/5yYVxXzd3iCOv5aEtHZ3Bj+QOVhxrQ+F72
vhjvwYOVPKlnYiTqx6ZBltjgi7wY37WQxwqEqy0GTvAKUTHlI2QjS8I9jAlL
IaJU7BDlpIAV4bmPtl92SFAx3/rTHcg7xsZ2ikhTsf3l8eY2hK2cZhZllalY
zJY8q+uEV55sftY0pGK7Sw9Y3CYs8WEH//MgKmZz/aycG2FFtbYa9mAqhpFU
x5HPj0T5vgylYlTfzY/uhO9IC8+HRVOx5JFCgYeE89Ilaj4mU7GqI/dI6Pmd
Xskhn6JSKra+37HIh7C17byKeiUVO/ch2s2X8H3WzNnKairm5vXi4DPC0VpK
V+sbqVjoltR3zwkPN2EqvX1UrEON/R56/rdynzRrPUTFDELU9wcQ5hAo+jQy
SsVevj/Tg3zQTG379DQVK0z0PRtE+DQ9S7XzPBXL8qjYQL4UV+G9tETFLIqr
v70kfOO0v7L7GhW7feuNzSvC//9/W6zHUoD/NeH/A37VVXY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25822#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
KZalvk8J+X8AVAIegQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25822#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-5, 5}, {0., 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           TagBox["x", HoldForm]]}], 
        RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              TagBox["x", HoldForm]], " ", 
             RowBox[{"cosh", "(", 
               TagBox["x", HoldForm], ")"}]}]]}]], 
       FractionBox[
        RowBox[{"1", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm]}], ")"}]}]}], 
        SqrtBox[
         RowBox[{
           RowBox[{"(", 
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  TagBox["x", HoldForm]}]]}], ")"}], " ", 
           RowBox[{"(", 
             RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"(", 
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm]}], ")"}], "2"]}], ")"}]}]]], 
       FractionBox[
        RowBox[{"2", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"2", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"2", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], 
        SqrtBox[
         RowBox[{
           RowBox[{"(", 
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  TagBox["x", HoldForm]}]]}], ")"}], " ", 
           RowBox[{"(", 
             RowBox[{"8", "+", 
               RowBox[{
                 TagBox["x", HoldForm], " ", 
                 RowBox[{"(", 
                   RowBox[{"2", "+", 
                    TagBox["x", HoldForm]}], ")"}], " ", 
                 RowBox[{"(", 
                   RowBox[{"4", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]]], 
       
       FractionBox[
        RowBox[{"6", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"6", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"6", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        
        SqrtBox[
         RowBox[{
           RowBox[{"(", 
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  TagBox["x", HoldForm]}]]}], ")"}], " ", 
           RowBox[{"(", 
             RowBox[{"72", "+", 
               RowBox[{
                 TagBox["x", HoldForm], " ", 
                 RowBox[{"(", 
                   RowBox[{"6", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}], " ", 
                 RowBox[{"(", 
                   RowBox[{"12", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"6", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]]], 
       FractionBox[
        RowBox[{"24", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"24", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"24", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
        RowBox[{"24", " ", 
          SqrtBox[
           RowBox[{
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                    TagBox["x", HoldForm]}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 RowBox[{
                   FractionBox["1", "576"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"24", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"24", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}]}], ")"}]}]]}]]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.768790717028296*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6eed40d9-3752-4544-83e0-e0c28f1af1c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Out", "[", "11", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.768790729413022*^9, 3.7687907294601793`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"038c3557-32b7-4eeb-b856-a3f468c93c47"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
2eIzx0Jqf6+dTML+v//j6P//j/8PVyzDsQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26243#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
t43nVw==
          "]]}, Annotation[#, "Charting`Private`Tag$26243#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26243#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3pkifLKbNNyv1geLaIPbpglXTibpfN/aB4Oe8GvPoPhc2PCOWOuFzmrRvcj6
63rZj/t64YRavMMsag/bqojO115YqDHjPofaQ9U2OPK2FwaNB60iW/PH+e16
1AsFdprdnUfxtPfc7Pj5Xmj3+eDlBcKbpyOLng/3wFzzxtlFwqc0aUsOf3pg
1wUZnSXCz/RVpS9l9EDSuc5EZG7LsRAJ7x74kL5Qexm15wao4LDrgTv1Dv+H
HH4neGNOtweqNLiOIIt6Kl8rFOqBWQOjLiuEbXyDIpPIPXBxh1Y2clJg359X
E90wrX5qCflQ9Iuj5rnd8JSxkcMq4fvxXTfVYrthqpd2InJe8qH3Ms+74d7p
gQ7kUzltLOsG3dDe8vzJNcKpSR8US5W7YXGq2F1kvsjb118Jd8O6wdAPyE2L
5NfnGrpghvKPTeSk5ojpruguGFgSILlO+GG2jK7ztS6oKWGhi7zbzYA7eqUT
kix1I5GXLo/elivqhAuXQvKRq1Qe/ikO6ISL5hKdyM4bHwInhTth0pwr/8a/
9UJx0mu0AzItmikgC+C/Nbf/6IDLpFYd5F+P59kxtQ74QbziMXKoxfObDdwd
UOOb6Vvk66qCVbat7fDjyaLPyNxMp1+8utUOrfYpNiL3DzSP7j7SDg+/thhC
ziq5eTaHrh3uFnm1hGz27A1LX3Ab7Lq6n28TrU/X916/Z9IG3bAvEsjks3ll
bHvaoG+ipTxyKlu/r3xOK1RPfKaJ7DV+b6jsSSs0ILMbIV/8zaZmotkKHz4e
tEReCzxE9ulugRS5X/eQa26XWvMntcAI+XpP5Didy8WpTi2wZ9n4ObKLHE1c
9VgLjH1j/gr5LO8T77/kFgjKR98i75rd1m9X0wzduehikGfqk1TpIprh7ZCP
H5HDQ+pIktLN8FPmz2/IN11sLPIX/sIZA+UsZMxwpUAX/wtHMbN85C1HA0UG
n/+FL41kfyEP84k+fnDhLxQ8m1aCnLec3s0p+BcaPxmsQA5q1cDiBptgHmiq
RlaIurNZ6doEqZIzjcisHkxm5qpNUKd6dwtyh0n4zzn2JqgyJtKOnHZcetfz
pkb4qHykE9lbqMBDMKYRnnjm2YN8ie5ix9frjXBDcKQPeX/PsMqZQ41wn7HE
IHJ9LPeafUkDfH5WchT5gdXR3DCjBniZHD2BLCph/gAfr4dRMsFTyOVDvooj
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
HrjIhFGz7+xAnnMLFN3ORMZSGQUt2QlXnDdI3SNMxgwHmFjYCNOdUK8dkyBj
m7hRBivhw4eV5r5IkzGyrII1cozgLqWjymQs2vBpKQuKx8mBYnUDMtYZafUf
M+GU3r/D7CZk7GpTvyFyT1M5W60lGRNMGORFPg8/6xrdIWMRd+wCKIRFX97t
uO5Pxu5Kmr8ho3j0vkYnE0zGsv6rN0IOuG8kNhNOxu5fKBBGXjI/dv1BAhlj
zKR8ZyL8W45p3u8XGdv7a/cII2GSxOJ27XIyxvFWJwf5KP+IErWGjP1lnPRH
jiX99ozsIGNqWe4KyM0LP+PM+skYJN/kQOYYSysRGyNjP1fLBxgI369/w56y
RMbW2n9HIKeW+sg6bJIxk7I795D7cu/ryZMpWPQlz4vIWvFX3uZRKViGcctW
ZO+3Wrme/BQssFBkiUQ42x/rPCVCwTRgTRuy+F1x8d8yFKxEzzQB2fj6NrVX
hynY3xalIOQgE+YbF1UomEed633kIt0V/x2qFGznQX5L5JXT4186NCjY4Ql+
beQDSp1173UomO3iAxVka5maeWtDCualqrgPOUL0F5+UKQVzLNQXQK7Z9kN5
0oqCGdlWsSOT2T6afrOjYL6i7zbpCStvhj12cSTO31M5i+ww+zxeyZWCLQXr
jiB/HHIr3XhEwWb2yHYjt7XdGv3lQ8Gi/CybkblrzDh8AyjYvcSJWuQzRboH
zr2hYMdvVVUhu2WpXuCKpGAbhRtlyKObVwLTEigYG699MbKxmku57g8Klv7p
Tgky7xjpWmwOBYtrTvx3fEVgEOMsTsHq7En/fs/r4M5Y1VIK5uPrUYOs1JQI
3vymYGHHdjQhz7ge7uivp2AWyQ3tyEmCvx4cbiW+P5raj2xRoMXn003039aE
CeQd1m3pTYMUTOlU3iJyDbPthT0TFGwkaIKE+utZytzUvVkKlsmtxIW8NMux
fwcdM5bHLfKvv9PCIsqvk5mxxz+zlZBtlfdcy2Fnxrw2rp9DbvbCYi/vYMY0
AzkckF9K/AYpQswYZNl8gqxeYdSxtpsZK7JnDEfO5HHi++8gMyatoVaCbJ++
mT55lBmLHvLqRJYw8r8AADOWWVC9iBwa8yGw+xwzht8Llkbx6CLbzChmzYwd
Zsj8gCxTbxXrZMeMnQg3LkEedCFqozvMWBw9ZRj54k9WN+uHzBj3SxcZND/k
NY9NJ4QxY+4+oaXI41PlgUvRzNjXYJsp5Pg3Bvs14pkx7dUj/Gh+bmm/fW00
jRnT529zQJ69Eduxv4IZ473ALIXmcxKnrJtHDTN2bqrMGNniWy5fdRMzZmr9
xB+5brnhwu0+ZuwBtXcG+dszSsXXNWaMRWR/JVo/HD7ezFCQZcG+1Al9QutR
5x+BEE4FFizyi8MksuZyhdOgCgumL9Yoj9YvqfOScqFnWbC99A1FyP3TA8nz
1ixYzZzvNFr/DI+Zvf8RxYIdact1R897Smw4Pf3jWDC/rRl1yPIv802tkliw
Pz/SJLlQfPcJ7NySxYKdN4ptRa541hzqVM+CsRVfVOchfLxB1/8gKytWLTCj
i9b7lHU6O1YeViz3gWUmssCeNI3e7ayYptwvwa0oflw5Ka93s2L7Rk9OIH8T
qnw8jbFiBu4HwlD+2G136l7aPVbM8POPrSj/sJOOWMgMsGKqmUfSUf7Kvsdw
YXCMFbsR9OMQym82E39U/5thxXYbznxDxpttd3PSsWEptinfUX50+hIxPMHP
hqm9WcuXINx6ZcP+sw4bJhCwa16KcGJmsdv+PDZM+zTn4CHCp2/ph0gFs2Mp
xY/DUf53fp1LdzucHRuK65JH9UF8pujN7+/YMWOBzzXIJNL0SZUUdqyuIpjl
LDp/aMCUZjE7lrH8wBM9L1PCS87dWWTHTrxj9tJF8UhVJGVd5sBStFerLxPm
yxa8fVqcE/Oyz7G9Q/i147NXB/5yYVxXzd3iCOv5aEtHZ3Bj+QOVhxrQ+F72
vhjvwYOVPKlnYiTqx6ZBltjgi7wY37WQxwqEqy0GTvAKUTHlI2QjS8I9jAlL
IaJU7BDlpIAV4bmPtl92SFAx3/rTHcg7xsZ2ikhTsf3l8eY2hK2cZhZllalY
zJY8q+uEV55sftY0pGK7Sw9Y3CYs8WEH//MgKmZz/aycG2FFtbYa9mAqhpFU
x5HPj0T5vgylYlTfzY/uhO9IC8+HRVOx5JFCgYeE89Ilaj4mU7GqI/dI6Pmd
Xskhn6JSKra+37HIh7C17byKeiUVO/ch2s2X8H3WzNnKairm5vXi4DPC0VpK
V+sbqVjoltR3zwkPN2EqvX1UrEON/R56/rdynzRrPUTFDELU9wcQ5hAo+jQy
SsVevj/Tg3zQTG379DQVK0z0PRtE+DQ9S7XzPBXL8qjYQL4UV+G9tETFLIqr
v70kfOO0v7L7GhW7feuNzSvC//9/W6zHUoD/NeH/A37VVXY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26243#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
KZalvk8J+X8AVAIegQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26243#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw92nk8VN//OPCxb4NhJEtKaCEkqd5lOVcLLZTKlixZKySp7FokSVEqKtmK
JBQhS5ZzLBEVIpVIluzM2I39d4/P9/GbP2Yez8fcufec13mdc17n8Zi1dueP
ObJTKJSL5Bv+DOg1HFtaoiP4zme1NCsL9PiJT7bM05GgqIh+EW82OEz7O503
Q0eFnxW/uUlmA9md7gvnx+nonNobS17NbFAW+oC3vYeOfNf5RQtfzQa8qj9X
o690VPYnyfQ6fw54dOnUoWvP6Ig7v6f07ub3YIFX8bDlEzqiaEjvDtr9HjjF
jhr9F0lH8zd+Mu+ZvAc7KgNNR8Lp6NjLTdv++b0Hv1e+tD0VSEfyCmwrb1S/
B7KF/V7EWTp6knVodeaZXJDGdjGJsoOOir86bQvIywP/HU/lfrqVjpIyxdqX
avNAZVLHmS1qdKQsMCMb15MH2vWNVOwU6UisZ3FKRTwfiIer5JZLk/dfbTgb
55kPAqX6qoIpdHRfI3Jnr1YBMN9qNUitEUW0x7Y2cu0fQE/QI8OXlaLI7b7J
Nru5D+Dij88Z2uWiSCn53sMy8UIQ7rPrkluRKHIJ+BDZbVgIyuHKhbq3oqh3
QsK7oLgQqBo0CD18KIoSiolsmFgEuBz11SWtRJE416qnoaEloMF6i9ngCVHk
Z1J4WjKlBMSZS/sXm4qiY1qp6dUfS8B2A+ZHWyNRZJVTDu6xQeC09fGJ1D2i
SDBSQy7bF4JPbL3XNJVEkZzqzrjSnQjcjQuus5oWQcdjZG20iVJg/sR9YvOE
CPI8vP6U3tFSoPDAQpJ9VAShn7W9dnaloPimqn3ygAiihkcN/ggqBQzXH1OM
PyJI8Rr3+Tc1pcBIc/3qaxUiaNFyj6iSRRmg//ro+iJCBLXbilNX3C4HaNPz
kKBwEaQVsVRuGVMOXK/6JzndEUGO+4MsPmSUg8r1W1uVboqgQNh+J+9HOfC9
nHAo21sEaeoZdhStqwCdon5KFTYiaKv0zQ/8nypAlqFaX7cKef/utWUXV1cC
m+cCnJ+URJDAvcKeNI1KQJ3sWZO6QQSJ+E+dWjhYCZxiYs3c1oogfVOxL0Ne
lUBqkL9qSkwE3d/99wOlsRIEhnS/5JmnoZ12t7RWhleBY+XR9oo1NKShGf6z
SaIaKHz/11ZVSUN/kvlzEjSqwdQ/VQunchryq9FmhBlVg6fc5UaJRTQUt2Na
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
/w8Pwl3A
          "]]}, Annotation[#, "Charting`Private`Tag$26243#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nZZhCg==
          "]]}, Annotation[#, "Charting`Private`Tag$26243#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
KJux/Yn7/wDj9CiW
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26243#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Jyj/93+FY3GoP5vy/wGnwtxK
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26243#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
h8QHhM20VQN2ncXXX2qZSdjon2dpJFcyhJyLzSZskLW57JkjGdyTK3MIa8nv
WihnTYZDVLE8wosFHdOGt5CB+7rvNeH77mvdTNaTYbVifSHh5Y2TGx6tIEPl
4LV3hNc8ul5sRyeDfsG+z4SfLrC8xpklQYiJS/l8fl85U+kBEvy6crCS8Bbj
Jz8qa0jA7/38G+HSPJ8U1fckePhBuYHwblmDU8H5JJguP/+dcMW/ouvaH5FA
/1pKM2GL/rpJvQQSWDfnthC2KTwZNHGFBFoHT7cSPhE+K57jSAIn37cdhN3t
wh44GpFAQT63m7DPOsW1cuok2Mvd2Uc4kPb8zTcJEnQ738YIy2RG3JUZm+O4
KMcNEN420Fw2fXWOI6E2OUz45HplWuPiOY43+fYY4eMbqJZ73GY411TVZ+bn
VbM5tahoirNms9wc4RJLupnUukmOtPfLeSt7as+5JI1zaq165t2uXHp0eHCU
Eyk0Ne/7TfuKz+uNcLb1z867OHudX8ujIQ6nZG7eHZfENxtKDnI8Rv7Ytt0s
u+loPyd69o/zI1fqd1r0cRrn/vgsIi+hT3ZxZv5arat+eE1cO4c0f/Sj/Aqr
ixJevzlzf+Pb8hsFZixaOOS/cbe07HGmWNV/n7dwULhf6fPyv3jp5/pgjX0v
0P/j2iqFuSZ3qv4zxUP8u71UC5r9m59amJv1+8pv9P/1+Ogml2y57ej/+W63
3ztPfdfxn5cXDpxOien8L5++R4Rt9/bu/3ylpXar+4O+/zxB2/hS2hY//83/
OCbQ5MLgAPp/PxgJZ9VykobQ4b92TbRntFqMoNyZP3YInLu9vncUaU788WGn
6CX/XhpHWN8fDx8KWtUkMoniq//46l6PjRqxU0g74Y9LcmmhB3bNIAOlv/Uu
iGy/ODmL5rb8eZ69yp2nbQ1I7Bj824Pwt08B/f6iZLa25uS8byv8E3Gzi8w+
9GRk3ubethuiiyjsQB/uvG2KUlavu8nDLjRpnbezUI98mRWVfT6zZt4GjXXW
TvI0tl5+4bxlM0pu83bT2KvrU+b9ZS1tJPgtL1tnmd+8vV9s3Scaw8euTDSa
t8eaOqrCMX52gAZr3m4pznkb1giwW30/zBLWrd4boi4oyL56zGnedIqmrWqb
IDvrwMT8/Kc+f+e9ukCIXX7Kc976p8wilSPobMGmtmnCqmIbKS8OCrPjWo3m
Lflyiau+ogj7okXqFOFw96AwtW+ibOuyRZOETQP3qMTlMdh54lfH5/fPQX/z
JF8mW8NzYpRwbbtAYoQ5i53TZj1CuDJpbMA0n8X2zM2Y369ltm16LFkx9rly
vnkvT5ZadPWmGLvR0G6I8N//I9iLYqoHCf8PWIQ+fQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$26243#10"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.07409828918540984}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.07409828918540984}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5, 5}, {0.07409828918540984, 1.0000000000000002`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           TagBox["x", HoldForm]]}], 
        RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              TagBox["x", HoldForm]], " ", 
             RowBox[{"cosh", "(", 
               TagBox["x", HoldForm], ")"}]}]]}]], 
       FractionBox[
        RowBox[{"1", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm]}], ")"}]}]}], 
        SqrtBox[
         RowBox[{
           RowBox[{"(", 
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  TagBox["x", HoldForm]}]]}], ")"}], " ", 
           RowBox[{"(", 
             RowBox[{"1", "+", 
               SuperscriptBox[
                RowBox[{"(", 
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm]}], ")"}], "2"]}], ")"}]}]]], 
       FractionBox[
        RowBox[{"2", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"2", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"2", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], 
        SqrtBox[
         RowBox[{
           RowBox[{"(", 
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  TagBox["x", HoldForm]}]]}], ")"}], " ", 
           RowBox[{"(", 
             RowBox[{"8", "+", 
               RowBox[{
                 TagBox["x", HoldForm], " ", 
                 RowBox[{"(", 
                   RowBox[{"2", "+", 
                    TagBox["x", HoldForm]}], ")"}], " ", 
                 RowBox[{"(", 
                   RowBox[{"4", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]]], 
       
       FractionBox[
        RowBox[{"6", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"6", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"6", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        
        SqrtBox[
         RowBox[{
           RowBox[{"(", 
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  TagBox["x", HoldForm]}]]}], ")"}], " ", 
           RowBox[{"(", 
             RowBox[{"72", "+", 
               RowBox[{
                 TagBox["x", HoldForm], " ", 
                 RowBox[{"(", 
                   RowBox[{"6", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}], " ", 
                 RowBox[{"(", 
                   RowBox[{"12", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"6", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]]], 
       FractionBox[
        RowBox[{"24", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"24", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"24", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
        RowBox[{"24", " ", 
          SqrtBox[
           RowBox[{
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                    TagBox["x", HoldForm]}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 RowBox[{
                   FractionBox["1", "576"], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"24", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"24", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}]}], ")"}]}]]}]], 
       FractionBox[
        RowBox[{"120", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"120", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"120", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"60", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"20", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], 
        RowBox[{"120", " ", 
          SqrtBox[
           RowBox[{
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                    TagBox["x", HoldForm]}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"120", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"120", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"60", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"20", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}], "2"], "14400"]}], ")"}]}]]}]], 
       FractionBox[
        RowBox[{"720", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"720", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"720", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"360", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"120", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"30", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"6", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"720", " ", 
          SqrtBox[
           RowBox[{
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                    TagBox["x", HoldForm]}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"720", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"720", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"360", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"120", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"30", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"6", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}], "2"], "518400"]}], 
               ")"}]}]]}]], 
       FractionBox[
        RowBox[{"5040", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"5040", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"5040", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"2520", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"840", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"210", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"42", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"7", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"5040", " ", 
          SqrtBox[
           RowBox[{
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                    TagBox["x", HoldForm]}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"5040", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"5040", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"2520", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"840", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"210", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"42", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"7", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], "2"], 
                  "25401600"]}], ")"}]}]]}]], 
       FractionBox[
        RowBox[{"40320", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"40320", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"40320", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"20160", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"6720", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"1680", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"336", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"56", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"8", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"40320", " ", 
          SqrtBox[
           RowBox[{
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                    TagBox["x", HoldForm]}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{"6720", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"1680", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"336", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"56", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"8", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}], "40320"]}], ")"}], "2"]}], 
               ")"}]}]]}]], 
       FractionBox[
        RowBox[{"362880", "+", 
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"362880", "+", 
                RowBox[{
                  TagBox["x", HoldForm], " ", 
                  RowBox[{"(", 
                    RowBox[{"362880", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"181440", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"60480", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"15120", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"3024", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"504", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"9", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], 
        RowBox[{"362880", " ", 
          SqrtBox[
           RowBox[{
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                    TagBox["x", HoldForm]}]]}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{"1", "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"15120", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"3024", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"504", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"72", "+", 
                    RowBox[{
                    TagBox["x", HoldForm], " ", 
                    RowBox[{"(", 
                    RowBox[{"9", "+", 
                    TagBox["x", HoldForm]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}], "362880"]}], ")"}], "2"]}], 
               ")"}]}]]}]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm], ",", 
               TagBox[#10, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.768790731930995*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"d6657f20-c10e-43a5-8f51-318313f0cce2"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.7687922582560368`*^9},ExpressionUUID->"95408a73-bec1-4ba4-9eb9-\
1d4c3b3d68a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Normalize", "@", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Exp", "[", "x", "]"}]}], "}"}]}], ".", 
        "\[IndentingNewLine]", 
        RowBox[{"Normalize", "@", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Normal", "@", "\[IndentingNewLine]", 
              RowBox[{"Series", "[", 
               RowBox[{
                RowBox[{"Exp", "[", "x", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "0", ",", "i"}], "}"}]}], "]"}]}]}], "}"}],
            ",", "x"}], "]"}]}]}], ",", 
       RowBox[{"x", "\[Element]", "Reals"}]}], "]"}], ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7687922613706427`*^9, 3.76879226340317*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"7444bf2f-f286-4ac7-9f8b-94110c1f0086"],

Cell[BoxData[
 TemplateBox[{
  "General","ivar",
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \\\"4.999795714285715`\\\"}]\\) is not a \
valid variable.\"",2,16,5,25075586597397220151,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.768792267335023*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"da04afda-dfdd-4bf9-9b06-6f8b9e60628a"],

Cell[BoxData[
 TemplateBox[{
  "General","ivar",
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \\\"4.999795714285715`\\\"}]\\) is not a \
valid variable.\"",2,16,6,25075586597397220151,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.768792267363594*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"f0cc1d74-b5ad-4b44-be70-3024ad71c98f"],

Cell[BoxData[
 TemplateBox[{
  "General","ivar",
   "\"\\!\\(\\*RowBox[{\\\"-\\\", \\\"4.999795714285715`\\\"}]\\) is not a \
valid variable.\"",2,16,7,25075586597397220151,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.768792267381526*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"e04d9f2e-d9dd-48da-9660-6f060763f2a4"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"ivar\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,16,8,25075586597397220151,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.768792267405383*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"289fa1ae-409a-40fb-966d-b576381c0f57"],

Cell[BoxData[
 GraphicsBox[{{}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768792267516658*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"ec4cedf7-d5bd-4287-a2fc-c48cfb718ba7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Normalize", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Exp", "[", "x", "]"}]}], "}"}]}], ".", 
      "\[IndentingNewLine]", 
      RowBox[{"Normalize", "@", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Normal", "@", "\[IndentingNewLine]", 
            RowBox[{"Series", "[", 
             RowBox[{
              RowBox[{"Exp", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "i"}], "}"}]}], "]"}]}]}], "}"}], 
         ",", "x"}], "]"}]}]}], ",", 
     RowBox[{"x", "\[Element]", "Reals"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768792289499268*^9, 3.768792293361813*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"78d231d2-f8f2-4e4a-9906-bb93addd43f6"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.768794278036915*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"33b49e96-c1d5-41ef-a512-3faa9bec9fa6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Out", "[", "17", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7687923023272*^9, 
  3.768792302431231*^9}},ExpressionUUID->"5e2c142b-c00c-46a2-b006-\
f2a9e1cc2fb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Normalize", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Exp", "[", "x", "]"}]}], "}"}]}], ".", 
      "\[IndentingNewLine]", 
      RowBox[{"Normalize", "@", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Normal", "@", "\[IndentingNewLine]", 
            RowBox[{"Series", "[", 
             RowBox[{
              RowBox[{"Exp", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "i"}], "}"}]}], "]"}]}]}], "}"}], 
         ",", "x"}], "]"}]}]}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "50"}], "}"}]}], "]"}], ",", 
   RowBox[{"x", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7687942839704227`*^9, 3.7687942929579268`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"16d5b44f-3a6c-4f7e-a443-20d785f1c7ea"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.768794309397655*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"0198ef8a-b6e0-4a95-86c6-b5b8f5f15b45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Normalize", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Exp", "[", "x", "]"}]}], "}"}]}], ".", "\[IndentingNewLine]", 
    
    RowBox[{"Normalize", "@", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Normal", "@", "\[IndentingNewLine]", 
          RowBox[{"Series", "[", 
           RowBox[{
            RowBox[{"Exp", "[", "x", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "i"}], "}"}]}], "]"}]}]}], "}"}], 
       ",", "x"}], "]"}]}]}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "50"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"f46fb70a-726b-491f-bb18-6319bf6da979"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"2", " ", 
                  RowBox[{"Re", "[", "x", "]"}]}]]}]]}]], "+", 
            FractionBox[
             SuperscriptBox["\[ExponentialE]", "x"], 
             RowBox[{
              SqrtBox["2"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"2", " ", 
                  RowBox[{"Re", "[", "x", "]"}]}]]}]]}]]}], ",", 
           TemplateBox[{"48"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            FractionBox["1", 
             RowBox[{
              SqrtBox[
               RowBox[{"1", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"2", " ", 
                  RowBox[{"Re", "[", "x", "]"}]}]]}]], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  RowBox[{"1", "+", "x", "+", 
                   TemplateBox[{"46"},
                    "OutputSizeLimit`Skeleton"], "+", 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "+", 
                   FractionBox[
                    SuperscriptBox["x", "49"], 
                    RowBox[{"6", 
                    TemplateBox[{"60"},
                    "OutputSizeLimit`Skeleton"], "00"}]]}], "]"}], "2"]}]]}]],
             "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", "x"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "x", "+", 
                FractionBox[
                 SuperscriptBox["x", "2"], "2"], "+", 
                TemplateBox[{"44"},
                 "OutputSizeLimit`Skeleton"], "+", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "+", 
                FractionBox[
                 SuperscriptBox["x", "48"], 
                 RowBox[{"12", 
                  TemplateBox[{"58"},
                   "OutputSizeLimit`Skeleton"], "00"}]], "+", 
                FractionBox[
                 SuperscriptBox["x", "49"], 
                 RowBox[{"6082818640342", 
                  TemplateBox[{"36"},
                   "OutputSizeLimit`Skeleton"], "10240000000000"}]]}], 
               ")"}]}], 
             RowBox[{
              SqrtBox[
               RowBox[{"1", "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"2", " ", 
                  RowBox[{"Re", "[", "x", "]"}]}]]}]], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  RowBox[{"1", "+", 
                   TemplateBox[{"48"},
                    "OutputSizeLimit`Skeleton"], "+", 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]}], "]"}], "2"]}]]}]]}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{80., {3., 10.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 25075586597397220151, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{81., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 25075586597397220151, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{61., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{69., {0., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 25075586597397220151, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{110., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[25075586597397220151 === $SessionID, 
   Out[19], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.768794313909563*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"53ccbadf-9022-42df-9819-5ae6db5af7b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Out", "[", "19", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.768794345026849*^9, 3.768794345166429*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"5d7b156a-c40e-4ab4-9c9f-ade5a583c8ee"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.0004887886056188129, 0.9999998732582596}, {
          0.00076964812902254, 0.9999999259552352}, {0.0008617034642878678, 
          0.9999998732582596}}]}, 
        Annotation[#, "Charting`Private`Tag$6866389#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQLbJD3MNz3rL9Rfu/7P7//719cJnGDMW0pftla1+d
BPF39ZxIW3h98f79Z3VugPiKizNMFT0X7b/1PPkxiN+xk4Nl4a4F+48ncr4B
8e/ND1zqGDFv/+wb3Z9A/LVnJjo5Ws/e36Pg/x3E91QTqnVgnLr/x8pPf0D8
0/9V8uv7evffFHb6D+KzbFZ9UivVuP/L/Vdg/ocZM1M+zkzav+7RfzA/2PjG
njbHFvvSgutgfmFa9ssjU6bZC/xTBZu3yFLb5+jGmfbs9yb+BPGv8Lxed/Tc
HPuZ6x5+BfHZHqwSPPZ6vv1/4fMfQPw5kaZWyS0L7TnqeF6B+KbOU7MfCy22
/xLk+hDEP6fzdU7ywiX2dyTlroH46WKh5x7rL7M/v8TkBIh/+PueSxt9l9vD
wg8AkWHP+A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQ7cD//LBQzrH9Rfu/7P7//709//l7Pv6ux/YvWX51
H4g/YUZ00ob7R/cXHN16FMQXSrpRLlh1dL/X6W+nQfzJ2qG9RSJH94ctWHIR
xBf5enHR5XVH9k+oOHUNxJ+6z2+HieeR/dl3im6D+GIdp89OfXx4v8yG5fdB
/OmBHo+/1R7e/86q6DGILyF99Ee4xOH9Gnq3n4H4M5848u3cdGj/s9WvXoL4
Uuv2KUv5Htp/0HfFGxB/Trm1ZfXzg/sdtKXfg/iyjjv87jQe3C/7wPMjiC9/
ZWPlvG0H9ov++PQFxHc+F+Z58Nr+/Qqrzn8H8X2kbL+eXLlnv1Pa1t8gflia
8sJLNTv3t/W9/Avif5gxM+XjzKT9jAwg8MH++JmbXcbBO+yPMF36B5L3qr5T
d2XzbvuitdVg9Wc07xeViuy3bzsnDjavzaHgW1LSAftPHGE/QXz1NwXG3VYH
7U8ISYDtPzG9sGCz0CF7jkcuYPdlOBetvf3qkH2X7IEPIL7FzE+n34cdtjcM
3vgOxOd4X/SK+fBh+4rnmWD/33D5zCGhf8Q+xPMpOHxWzipW15l9xJ51pdxz
EL/qw2dXB/aj9g3fBJ6A3etWkhJSfNT+x/1tD8DhOedLU8b9o/ZJF7jugviv
PpYsrPE+Zv/zLdtNEH+X+9f9E7Yfs/8ksfQKiN81t/TeEuXj9r9e3jsP4kd9
/vpnR/9xe46Na0+B+NqeZdJnfx+3f1fMBU4vf+Z9s3yYfsLe4e1bcHoqMGGU
KJtxwh6W3gBqNo4U
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw103lI03EUAPBZJCEWpoYLL3RleFeiLDW/lmIp5ZF4RmkeUVDLZqYzRUtt
aVZgpBnTTSVQ6VCjwzS/zrxWw6nbfnObRhpOnYbX5tV09X7Rg8eXD++fx/e9
Z5d0/WzqNgqF4vE34Q0k4qvDRDLMxJo2vX4e+cds8CM6ZVjtn/AZbE5/ZKcq
luHSOPcu8DTV/k52pAxbhTT1gtvX3/3YbS3D8QWqr+DHimD/OhWBOxAxAPbi
3NB/YxHYxHFJCjbK3ZGQGEDg8IEDcvDY+coOjTGB/WbtRsFNfq42xYQU5wtm
voMLbfm51jwpPn4/fxwcS4kaa74ixVvWMz/BLuPTvkEeUuwc76ACi2tNdIxe
CS4JcVSDs1PobRVxEnzBsOoX2N4hMbtzToyr3Z4sgAVT7KMzeWJcWmS5DE5r
eLO2x0yMt6iBWjDTt4EmOTmMi+oz1sAZotrQ8pwh7NvYvwHOTOKwYpsHcVZd
ug68rHYO9hSKsGlczSZY52WqPcYV4kNqAz3YsGCNF8QU4FefuKSplj1rMdQv
mJheIR19iVYznNOKkxv1pBeeVaYsViZhChkLqE8oL/GI/IiEkn/1q7zMp9Yv
BehEnoC0tyu/JbxCjKoZq2R/DgKLgJ0XJYh+7tQ62CyVIcZOUnRZu38VTDHo
Sc7USNFNowwNeI5jqXHrIFCZwmoRPKEOajeiyRBaOjgPltOZhSq2DPFFujnw
4L2q011zMmSmLCf/u1fSb14dMYIWPRenyP2w14yy3o+gplbDSXBLmu2LKEs5
ctMOkfOs7wi5djhfjgaczpDz5hrf8tw1KUfsUKYC/Pztg323LRRok5s0Ai6P
r9mcDlYgzXYfAlxaL+zpfq1AZRzeEJgdNtFwZFyB6kxcROC7K6sPeWZKtLyX
IwRnBdKic7KUyJbq0AdOn6V7qxuVyMfRrxvMKAu1iR1Tot/LXnwwq0mU9cF9
FP2/jz9TDfio
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw102tIk1EYB3BTs7JVlmlpWJomBhXCspvKseUFuthSkzKssFkQUU3I1JQa
E1MrvzjNNaOZOWqYpqK0LI4ztZZWuNFwTW173920Wk7TyZx763mzD4fD79v/
+Z/zhGRdScl2d3Nzi/p74E66M1WnF5I4B//upKhf6NVgxk3/AhJX3srsAruG
mtrmz5L4o0T0FszSuVsMSST+xG3rA/dbpew2PxJLUe4A2GfGVfzASeA+Vthn
cNp8ioxHEtjvR8sgeHj5XAi7hcD+Iq4aHOx7NH13DYGFUZIhcHZgffnGmwSW
ifFXsDXi0NSPwwReU9EwCs7dPXWqM5DAHbHbCDCVIOops+hxybdTRnBp2oHt
Jzr0+LVHjIXOc+57VXixHhc3qMbBQm6l6/cxPSZ2bv0J3nwr+sLbTXocJGb9
AjMf3tlztlOH115RT4LjX2mXzafrsKChfRq85Ua6z0PHKN4Yv84B7uZNM+KS
RnBaQIcTfKZUsIys1GLD7WgX2FnB9CrRaXBMpD8F3lXLpfrz1bioXUH76rPm
2dW+KvyCMUPbiz8rTsxR4NK/bYDTz4fWKQtleJb654kaIccmzMKuBb8b0JQz
U18i54Ivia9XBTUq0Nexf963Xd7Kvq9CfQlztB8xcqNWGDUoQttN2z3Xb5gT
oEPJvJN0Xv4GTsKTT3qkFvvQ83jKW5tIPol8HAV2MOeiVxnTRqKl5gG6j17f
jHP80wZkZmimwOFvnseq+g2ot7baBi45v2h96F4jUno4rWDTquOTORIjOmJw
fQcnyp4OdPuakHqlgH6vmXtK2cWDJpTS12ICS7KckjU8E3pc2GwAL2GweVlW
E7p6MF4HlrI4lHeYGY2LyBFwcn5eUdtJMxIUZGrB1SZxvmevGcUqNF/oPoLa
7Y0OM6q9O6QEj6Yqrh2PtCAVX0r/13C5jSsRWVBccNd78Af74onkQQuaaKR6
wJd3BF62e42hvBhvObjesN8qShxD//fnD+Y8HkY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw10w0s1GEcB/BjkkahvExYS7YwdZo7o+FZiVGJMFKK3e5sJaXLIZm3w4zu
rkKInGQruSW0cDVPV6Ysm8Q1h3E6rrv/Hd2bOTouzx/P9uzZZ3v2e/b8nu9z
mHI7hmZKIBDImxOt1fNPK8mRSkiHug9G418wcLYxRxKhhALqpY/IKUKn9/Z2
Sii2Dv2MXIfZnch9pYDtcz3DyNKOsagqlgIej7UZQSYxHt/i0RXQozRqFHnE
aM2bCVRAG0KZEPlGBUtus1sBR9ooImRze8ujIaMYzExUTiO3cMupjAYMVqR7
ipGDvcxbXtIwmD92SII8+Y45KyJikLNPuIDMACauVmtymBl8QYbMizPUZrDl
0JzIVSLPX1/ZL3STwzgBSYXsXKBhBfTI4ESYtxY5pnrRoumcDAbNNS0jC/ol
G6mZf+Apx/BVZB+5SEd8JoXs9t5/yPzRywUOuRJIaow1Ip/hT+1ZjxdDWbYS
t4Hta14mFkE7xQbujLYOve2BMdi0WQ2/L1PfHEYfgsvGLcenHnn+M68PGret
qqunquspkIAPFfg6LKrwje0FO77ZnF3jyhsCq9v7Tx4TdEXXjgGpYctcqyzy
3gURAPwtm2bZT1OdxKDp4DpuM0HXGwlTAgyeGO7dVtFFlCUpKEh7iDs0q4qC
hWOAuHRlA5kp/hVCf7EIOCaGNfy8LPepcd/NOkUWeuTVXQF9zhQVcJT14/1M
TbNKJg2qQDXQ4/0e/zFrFumlBm4RnYvIlcyhhMQkNQA5Ewrk037dr2lsNSj1
EMmR3zaURedr1KB18Cr+vi55JbwBDw3oe9L6G7k8qdjCMlkDtOVds8i6wELq
xRoNmD9fgucnxTX/U+13DfDLdcDzNbx+32XGRAs4j2h4/vxn7uW4+2sBaz0d
z6cNl+HT2aoFXIfGb8hhnMxr41AL3JrJg8h5BXcfrExqgTeZ/wVZlnxHFmSr
AzpWcT9yd6FPQqWXDuz8n/9SSAw+
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw91A9MU0cYAPCuw7q5ooBikK0ThiQa5xQqmSywbwsyCpME54KK043uVcUE
dTV0xsi0qytsbnOIOJFNxp84oQiKY/yR9MAEWOOmA4RRBCwUUP6VvkfB9vXR
ju+BXnK5/PLdXXL3fXeB8iMfKYQCgSBqruPYeEVznh5giJLYbrvdk9DpF9yX
PWdh1Uv16AOrPVZMdjBkb6xaj7YHm2PjDAwpPDPYgPaXFlQJbjBkSXZqE1oX
fnpsTxFDDLoLLeiI9z4NrL7IkIGZawb0vnjJD6npDFGk5/2DPp300B5EMSSk
PLYVXXggl+qOm1t/r/oB+rHaNyLGjyGZxNyNfut4bJGJo8lr4/29aNXh9CUn
+mkSkXHVhNZTN79Y3kwTeVaYGS3aM9RVVkoTveH8EDonJv73R8doosxqGkGv
2VyV5hNJk46YXRPoPwIkW6NFNEldnWxFR3l+43P8vpWwyikG3eYYN5VespLr
/gHTaPnwxxW9yVbySc30DBpCRlq3e04Szv+uE12Xszb6SeIE2eIOcKHT4AWJ
mB0hAW+XudGbRoy2jb8Ok/4sG++61qRTK0+YSYrOxXtr3cOXZxNNZGLQzZv7
USrSmozEyz3voyUVdu/l7cS5YJHG/tsHSgMR8M0KifuDCtpO1hL3Qvx1qezN
Qu/S53HrpVyKzpU/d8vfxu+kO2rAtTD/nQ2NlQk/t8Oz9fliVZjnkBGaFyxU
+fZQq0wQyc3bo7Gy3Kwxw9nOeS8WJ6jllmG40zN/nmhVtnxUNgoNCpa3xtQZ
pSyagOEdo7wdi8JrX5VbQXSB8L6Rp034iqEhwrCLt1d+2qabxVNQWp/M3+eR
QsprMHEa7ilSOPShFZXt3wfOgHnZUxa9X+u+GDY+AyfjvB18vuzbkvr+fApl
r+Tz+dp36LIkQ22H+qtnpvj7fuxb0DNoB2dXDY1eR2WtCZU5oFhfO4le2i++
lqFzQLRWw9eLbW/m+t6lLByU+Yyhjd0vVoQq2bn95U/4etx5KjSzgwWJ4TBf
f8UP2KreLU5oOrp5AP3tdlW49Bcn5FjK+/jzRso8/NqckDJW3IPuWud/n1vM
AWv5mq//tUI91XyMA0pl60AnWM5t1JVw4HNL247+sjuZPfeIg5KDrn/RzZWL
ftr94SysupN3F2258l/Su+pZEG9o+Au98mxJcFD1LBTlt/DvV/F5/O3xN1yw
LCadoD97XyUM2e2CZ//D/0P0n+A=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw91A9MU0cYAPC2tDUGVJy6MBRFCEGdMAkydHO7xwaVTJKx4WogYuWtq0ll
UcmokZlBR0F0DjBQtkAXxBEycEppYErduBVaHXP/wA1sCrNKKW2hUEr7HhTa
bnctXnK5/HKXy3f3fXc7yTPvf8RiMBi8/zsafdv+9JBWGhZB1z2/fw5UDZUp
ux7SUP9FkgZ5e6rcENdHw0sJwgHkbkU7t1FJQ8kJmQ7ZeGr4+OdyGjZ31Awi
hyUvq8QlNBRqjv2OnOqLXZsjoKGpx/gXMjmYJXg9nYZfnkz8G7m6vrgndjcN
o8n0UWTzngcFLicFQy0jY8gvUHN3xkYpyOzKfYL8piZive5HCmYIup4ii6+m
CW+1UHBHm3ECWX5MrJZXUvBGuG0SecZ+TyTKpqDi53orcrps3abUSAqOOftn
kJsiBXCNyQ058bI5ZKdSefrxLTfUbjDPI79zmBXRft4NS7SuBeSW8RzthTQ3
nLer3cgqXnpMwnkX9BWe9iBrO/eXGb9fgE5WqBd5JCLu37pnTtjResGHPCXd
cuhwhBNyag/58X2Yj3aOFzhg1GY9tlq+K8PCt8PvqpewiwEzKsxjhWe3+7H3
WfWuV74xwz5LwOqhvNIXSyagzxtwutqw1ss3QpM/4JXqZG6lUQ8ZuDnA2fbO
xY2bHkFvcJ5bvnidVzQIfUHzRbEtwxd7n/vBb/oryTl3wapfS9Cosr96BFb3
aw6TpKyb1D83S7JlTPiSEawE17M1qtsT5RNAF/SasGwpOWsGvcF4MyR1pC3T
Bt6YD7jcOPJ20bd20Hkn4CXOwd6tpANs9fiwlU2V2Z8558HS8Ap2eHPxvq7W
BRCjoLDP3BCGm/hu4K2YwhZV+htSZijQ2zqIfULcGHVJuggOfF2L7cqvenl8
vQe03UzAvvye5GCyYhnQ8DLO130Vpzb3iBdsNBTifLI3y82lHh+osnQv4/ra
YzlH8hiE7a2CJeTRhxUO2QYmwVXtpZB/oFfSrlxkEvl3mS7khthP6mqsTCIx
pQzXl+TdaVM9n0XoKlpmkT/4lHy1cYBF2K8JppHzmmVJp3aHEPxz1BTyyYG2
vftrQghHVqIJ+cN/Ujsi+0OII9fjnuHzTv0Sz3SHENE72UbkwtDpmD/y2MQ2
dbEB11upKKnnKpvotqKCmwO5C0+Boo9NtDU1jSDzDI+Pi2M4xBOpYAh5x837
DVwbh/jpYy1+779m8W/HR3MJA5nfj+OfndRl8rlEWpahD/lA5lHdLimXWP1P
/gNz6rXH
          "]]}, Annotation[#, "Charting`Private`Tag$6866389#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw9031M00cYB/CCFAZ00BdgoGMVYYTxImwwCET9HQFkDhbeS2QTRwXMGBtK
BnO8M5SBmaKDosLcAjIyo1sLi7ypnFiBERSiOEpluBqg2PJWXgq0v1/pvCty
yeXyyd3zx3P5Pk78rNg0YxqNFvlqo1PxTLHu466D2XD1tl6/SNTaHXFVc3Xw
TXX9XeTmtrwvPek62H2luwe5jXdZdExJwdnZxl7kvrVb6rphCg4cjRxAnvZf
KjavoyCjjhxGXh216gXFFLTMNBtBNvnW0+JUKgVZ+VP/INu89XGU8BAFNRmC
MWSX9uM18r0UlNx+exzZL/GM1NGGguLBggnk0PXGdxI0JCwZa/8P+VjA89/F
YhIWhPdPIp8gQ5KHLpLwl9rdM8gF8DpHepSESRkOSuSKMuuBSS8StpvcmUOu
Cc8pWiC10LaBtYj8xzBQ7LisheP715Zxf4mMeAc/LZSa09aQN45fey80UwMp
tY8W2f1UkP7rpg1YlCikkOXu/Smry2vQdcBGj9wwEffgu2A1/N6jF/uB0K9E
dnMFMsuWsGdKbfeF2y/DCxIKmy+PF06kqGBkgR67S+AW9pI3D88vGJxDGDky
tArovGmwj0K66n1VDp/pt94/Tiq2y5uE1JZDu8bNdTwZpOGlIqjzvqblMum2
T1wXbrA4I9vmpTs3PCnohJtb9f0PpWd94zqI1/dBXj2t0ZdGtm2ca/tvqoNs
22aM6FL+gpx4XR+WW81XfqQkXmy5TDYakn1tngjesoYe2LmLryJElMGi+vLo
ouUlomPFYOavOT4tTSvElacGZzWmMqd4auJ5nsHp5fraD+fWiEc3NrGTM+oc
fyjdIFKnDf+5eqTCY8JKS4hSNdiVMbmBvj+TRKVkGbuvlX7hcISO2EWTY5vY
COTF2k3iL9Ew9pz7y5P8gzSQYfkntmTwjOq0tRGYf5yHXev8TXWVwgjMAjfs
hHy+f53YGLTcFG0ify5u9vSr2gFc7thhZ1rO7hlKMgEn90fokA+Oj32WsYcO
7M5F4Pxwb/TVmirpoH+RQSI/ep+uPnvfFFg7pWmQ8ztC4qzrzUBMWfo6cq73
mIlz2htg4t1ANc5/c2abv7c5SGF34/weeBrz4wcWFqCqoxPnm2EcwN87bQEY
AWk4/2FfxQvcqxlgXw13Gtm+0zErzMUKMAuH8bz9lF1x0UdiDVpSxvC8xpZH
eV1tY4LDd6eGkLtVX/Ts3skCJTEPB/E8fHo6oamQBaLcNv5Gpjn1k/UKFghq
PdCHPCo3b6xOYAP7eKUY+UnT+lJsFxtI2Nz7yEP86WA2lwNeeNy6h+z6m8PO
yioOOHdPAJELZz551RcH8JJV3cj/A8Eh1BI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw90wtMU1cYB/BbRkWgEwQhIiAM0M2O91OM7h5AwD2Y5VUCqNECDhEEyUSw
MCW48trChMBQBgxkBGMNgguPTncvgjAyBwNRXsJIBuUhj7a0PArt3c5p6UlO
Tn7J98/Jl3O+DzjJIXFaGIax/t/wPGRzYjngUxqZSkh/o6gV3EIv/oHUl0Yu
Plt6Bl2T6pLC8qCRR+xGO6APj8s9+R/SyEFJ4QtoJ/73XTEMGun3NPQl9K/7
IgoJJUYWsK70Qx/Nsg4xF2PkRE70ILTvl0/+GXyNkbu5rcPQPS2Z9Y5/YGRD
L3MM+gurgKQCAUYq+jPeQg/kGrgL+RjpV1g/Cc0Wjch9qjEyerJ5Cvp8x+W8
zRyMPBp9dRr6UrHSpCkeIy9lPZ+FTo25cz8+CCNtbZoXoDPd7VysXTEyePmz
JWgevfX3YVOMnEssW4E++Kik/OA6RSQxK8XQJ8WTfdv5FGHqLJdCX/Zg0sct
KOIGrWwd+itP7YjTKQoi39FVAR3jNdnQ2blFOBy3pqC7IxhhZu5ywpzbjsxM
P0ZdqdsghqPeIQuZPRekkjWiWH8LuWYitCvDR0acEimRuxrdb03xV4mObgp5
NtvkeOB+CXFdpjJHGNY4cUFElCtVFpR+5D/HXiLGKJWv4TRLhnye2FbbeX5U
6lQpJDC0RLhgIOqm6Y1/NT4pGNdVsKc0TnnQuLHX+BWhVOfZF21rBjPbCUpt
UfndWPFdjqa+5+VogVtoG05TO/Hn66WW/F58J3/MoaOZ9eMrfKdeK83kbazZ
lMY6DFY2Z1moyfunlXAWTi1o8jlTb/xS7y/hO/dv0r3bzTkifE3txxU81jcS
Mb7Tv2H1NeemulX8rNrJtbGG02wZ3qRQ+SKPKvNYXMO9NlU+l3DPMjd7A19Z
Ull6Nu/jiT1yvGpI5fzgNG+3n7Zwr2qVu5vpP0R+rsADj6isva9UeFOuxJW+
qvdbZM5d5QRgoIrcRh7+81vRbQMa8PSSI5fZfl1SNE8DkU9kyOFcjue9Ti2Q
m7mMfL6z3t696D1AsqaRE/Xf2fRFaYOMR6+RA8ZHziTY0AEu6EC2ethdtmuB
DuxH65H/cqHLCp7vAicO3ULmtvmFGlTogIHaIOQ0pxFt27jdgOdmhJxSn9ji
6aQLZrJ6ldCfDAV/56qnB3LjEpAZWl4cxxk9wI/cRP+9ofUF1/6pPvg7KR3Z
PymslFnCADoTM9vQjsbeWm3R74Oq6SDk/e2Wyf52ewCX3bAFXZyad8d52ACc
6zsghw7hnXaobDEErSb5G2heom+H12XtBW7pm2vQb4S6tSXhRuDxzBkZ9GDd
ujhEYATSmh+i+ezjzPgYWRmDjH4d5MO/mB3ILzIGY4Exq9BZs0ESijIGFhVD
Euj/AAyU6xI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw9031Mk0ccB/D2edoqtEKBkRQDYQNCtspLJ4jRGJ5jjs4MHe+QQbdJB8wV
lJcN3GQ6CIwKOhGQsoGovIowxuAPBGr2PAjixpQtvMp4sRtQ3pGVIrWldDz3
lF5yuXzyvdxd7n73hjgpJA6h0WghO50cT97XyzY5DCIVV8sNhhdYU2nWCwWb
Qbg8ET4gXSN55B67jRIuDWYE6SLuqQbJNErclWt6SedNX59fGUaJildv9ZHO
bBtyTfkNJaayPZ+SPisSVZ9vQgna+8QA6VjPO/9ob6NEXn3gMOkoZMbxUhFK
OJbLR0mfqE+4mXMeJXpSBBOkfT5Y510RoURklJuCtIv6QkmhH0r435BPk7Yu
Q6x/cEWJRMGCkrQBy792i40SXW74AunlWSt27RpCPPxeuEz67ys/ShuHEUKa
Jl0lXRU92BhWjRCGQJ6KtOTAvr/0yQhRP7OhJn1QJ1TX+SIEZvDbJK3ry+QF
cXbmB/Nekb4qUZ+uuksnYtidOtL25mfuqd+hE6oLYj3pz4u2bVvO0IiCACcD
6YRDfOa4vQGfWOyE/syHERmYrMcRyRL0p4en6ru7dbj0pBa6N5ITZuetxfvj
t6H5Xx01nKvR4B4yA7SS/zhGrXqJ0xcpV06G9nztt4FrdJR7mr0zFT+t4/4G
ynNZtsfe46nwGaPFyrDmyZg13GB0Z8mb/vMRKzgNtjUsDaM7cLQLJgsWxtSe
FUqT3+0cN9NHKHC60VvXvFi5ijFTnnyvWWNlM2han5WtuSNM/d2UR8Q7Vw58
02HKHz8Zy/cKbcd286PuXa1BpYMmI+m2E7F2CpP3cIKyxKtKk7MVI8dTq1dM
/qU8N+iS6j9s93zc22mClpp1bHe/pKpY7kzEBqYxOj7XIDu0/BLbvZ+PJWUO
0iwN1mC0+qPLByYttJi10XnB6Ue8buqwn/WUe1uZ1z8M0GO+WsqM10qU32q3
sSYV5WX+fIpYSAMFM5RH//huLceSDuL6KMucvywuWKADVinl8AyxT1k3AgqP
UT7dXefmXYACbgtVD4nsJaf+KAb4dUQPLRx/JpI4McEnN7agHRt7ZaxFJhDh
VD09fZu5kf+QBaJnN6Ez2o+HWpbvAU7P16HTPZ8xnOP2go7eVejkusQ2H08z
0M2bh/YdCr560NwcsDqmoDnIYbHHrDmw6hqArr//KMPtARsIXu+B9j8bVsIv
5gB5eCu0h80RpD16H6hsuAXN63BI8nexACP/SqGHbUNpcr0F2JAlQBelXi4U
jFqCvcUB0P3PzeT7g7lg/Qs+dEhuoHtFGxcwzrGo/xGdE15z0QqM1rZvkx5R
mlUVh1uDP+dE0P3iWT9rRxtgz2FCu9ba7c8rsAFbS0Pwv16cO7XzUjagU1oH
/T//U+zp
          "]]}, Annotation[#, "Charting`Private`Tag$6866389#11"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0wswXFcYAOC1dq9aG6+1M5gYQpp0vCVbr6H3qKykbVpv2tKUbTQkXtVm
K0UaQxDJDGJIRWUGaYYukZrEu+4RitHQBvHakE3FLhLN2qxGsLt1713XmTlz
5pv/zD//efz7BCkhcXQajfbp9sTXQ2axD3zFCEzDlJ0azUs0MKEoAH2IwJ8Y
om7crpIQh5I+BCKVqz24FcPTSp4IgfdFeoO4x45UTefdQKDbwMwQ7rudMd1T
JQgsmC8cxi2sl+VnpiMwqaBgFHekjShx5AwCa82nx3F7XksOtvkSgcUd7Enc
G7lrln387Xqu2Ipxd6VlPjvliEDUYnwO9/kY3dsGHASerbD/B3eAFdfFZYMJ
xUybBdyGMwfuhDxlwla/YRnuiXJPN+EgE8ZJPZdx3wj9sLmiiQlT3sS/wO08
nHRXksWEdJmDHDcWUNJy8DgT8uN9XuGWeE113FtkwJw98DVumpM15n+RAblR
LRu4k6Kja79v1IV/jRuocc9crsgXPaLDNr9ADe7NoQvmQWw6bHmOEd7Liq9X
vq8DzUaXCCdcVXN/i6fBwRNvCJ95154p3qvBXN9WEz7lzogMTFVh57I1hL/y
mKvr7d3EHktI90eywyx4G5jPOmn7dG9N8s11zEtNWmo/EKtU/Ic1akhXz4b2
nfNbwxRa9zXxLkgaXmE0YshRWTbX56i5AtPRmpXV9LKUpaDizukf1Eq2VikL
k7NYPzzdNRK1MNXw66738+6dNfXdtUAa1jQbK6fcUfYOfzFihbLr0rTSpUpK
+UiHWF8VIaGcWt+0bsIZoxzxtV31aGY7ptGeZ+DBdOHh0DZ0J+7t1NMcdG2M
Ml3IfXzSQoLu7Gf0NN+ez5lHd86rxw7KFvwrpcwXlgqWjy2jau3+HMmEf1rt
CpXvTmVe0HnFKuWUmpPGzyLWqPwnTl+3ys9ep+LKLwocZg030C1t/FKw0Ovw
z5uoUuv+ZmbxZx+p0Cc79ZmVSX/cUKMirV/YL34jCKABX60n/7wozzXSAVHa
9y63+660aEkHpG+RDs8QuF/vpYMh7f+I6b3lyCvSBRUK0okGz21HPmcAs0XS
AeKp6NO2TIBOkrYW9Zcjy0ww2UV62I25VngfAd8Wk85o8w81qtQDQ8dJC12m
GHZxb4Hf5eT/Tb2V2OLuog8qUki/Nx585RCLBVIbVYTZdA+B8wILVNduEa5r
/SPDscsAHDy2SZifFFZmX8oGphfJ/nDmeNHbovaAurTXhM3brVL4+w2Bt0xJ
+BE3lNapMgQPL68SvppWUOI6aQRKs1cIjzzR77QMNgbtpmT/heQFOlW1GIPu
9XnC3fKEHhtLE9D+yRzZT1G54TezTIChapIwbd/AZuWSCZhJ+JvwhFS/pjTc
FOTbDpL5BQt+ptYcwDNqJXzgFwvLS0UcIBppIJwl+3j75jnA3aOG8P9TNQpn

          "]]}, Annotation[#, "Charting`Private`Tag$6866389#12"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw90wlMk1ccAPBS6PFBx9HaBBh3N7Y0IKCIUTf7lMNs6rgEF0AHHWwqIqyQ
ojIEHMrlRhTxAFkUGcEhKmRjHJvfgzIaQCDhZtxxVA5BKK0g0H7bd/C95OXl
l/9L/v/33v85SuODYpgMBiP4/4mv+uWsqPpqBMpQTSOGvZH8lsauKi5HIH96
+DnusIOXY376EYHRC4stuKtEsImTgcB7ti1K3AyW3jYjCYF2g8ntuMuVFwYS
wxF4pyW9G/e1Etmz8aMI3MU37sEtS4zN/QwgcL5a1of7U/sT++0/ROBL55kh
3NyOL9QaBIFJ869HcffJQXn7Ihf6/543ifu+046w+71c2Czpeok7tktkKq/j
wl+j/lLh9roobD5cwoU5jlGzuJnOHLnjZS6cU8J53HdT58ZeHObCz+90vsHt
3t/pe17IhftKLFZwK12qq0QTHGgeV6PFfTLzprC7ggM9+rpWcZ9Td0QtjLFh
dXfhJu5LkYZPTARsmDb1sx436ne99qMjLPj+xUSMuB9Xe9T7ihEswtoIx0VE
PEyuMoSGlQuE/8m7m1XZz4Rs/jrhjfZ0ywAeE27j6AnbGJ96pDloAH0iMcKn
b+iF1acYcLqPdOwuMWvEBkPFWtLfehkd90/QoXE60l/vHq9QKDbQeIx063He
MSvPdXSKsvj8Xuxc2Rr6jrJKrIzSqN+iesoPxoJbLhzQogYMfCxJavx8nFyT
NShGxVueeqZPPl5BGVT8VYbwk0OWatoNhR/7zoQu0HafHda4laho+zSMILrQ
SdoJj56uWQh66fyh34ge9HxfT+dTvhjO3RlcJ9nav9e1qSbgdi9tplw4Gm01
SZvDC8iQLqpo/zA54C17uCDZOs+z4qsBl9TLdDy+NNr831At7ZNnimyzMtZo
5wTK9+y8tyHZqsdoW6EqbV0v2ar3tXjmO6kfA+goD3ZcWco0MwArlG+Jkgry
Zw3ANOWQFKlXkYIJWilHKspdPPMNQQ7lsybzTl1hRsCOst/IUMQZJxb4Sk/a
vrL1FnuOBRyo9+70YGlzm9lgZJ10Sp13sFkxBziskpa7DRmJYrjg8TLphPKz
tV5uCEibJb2/L/DaDmNj8OUoaR5zt3T7tDHgtZGu+OPvFJc/TYDNE9K+cccK
xQU8MJRNertgD7Mu/D0QGEbast423vcDU9BpS7pfGMxo1JkCjzayv2/Isq+7
D5oBuxOkuyaQRutAc1AxoSMcdNXftaTWHPgdIv186XSTg7UF2Ly5SfZveGZI
WaoFyFNskP/NUblRPGsB6hrI/zSgQkoLQvhgKvsd4Z6y1eWgBj4o9V0j80mn
D/DtBUAx9paw8y9W1jn5AjDsqCWc+uqoGsMEYHzfCuH/AEgo8RY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#13"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF0wlQE1cYB/AQkkCSLVeI5RxMaClFrhYKo6PNUy47tsghoRx1aIrUA4Ti
DC1QoIgiUMshoiMBBwURB5WaGTlj99GUo2JpyyUBOWbQIAgFIpRwJKmb3Wx3
5s3Ob/7f+96bt/t4ouSwY1QKhRL9ZmBvudrZzr8YganoaodWuySoH+j9pvQi
Ak36E6SYNRZ7ZfwcBAaPoSjme+X8hKB4BD5Xqrow04YqWuRCBMqanvVijrVk
MhM/QeDCVFUfZqRiqbHUHYGe9m1/YY4fFqn5PATe3Wc1iFnKHQl+yEFg70bU
MOZTV6QrchUb+j8okmO2ebv2smaCDafPRkxgfny10NdRxoZd3bJpzBlWKWNB
DWwoNZicwfz+NWFW4k9sqPm3UYF51HrfzrJUNlS0es9hLqh0lD2MZMONluxX
mF+Kl421PDa0jUpawhxU/Sj44AILljXVKDFP3r7rySlgwal0y3XMaRKxxaQj
C+5CdmxiNnlUtNqAMuHrEptt3fn1pI+ciWHCKtszasxUJ6M03lljOFpsoMV8
9Nxl7p8NRjCOV6PzaWXfl4sTDOgsGdM5O87wPpvDgNL1FZ3RwLLm9z6lQ9C/
qTPFzQH1O0+DC+9qdE6Kja399p4h5CdqdR778dqFxmEq9B3CvfX4B6sQhApv
KXHbsY7fWT1gAB23cZ+4pOE+OE6B5lrcpz5yoY/badFewl/70CIPp6jRNcJf
+U42yGRbqJpwdyRyxNp7E6XonmWBy3d7tKfrVKiWyG9MhP+Wvn+NzGdzuXuD
rJSk2yucA14KF8l6zzn5qke14v/87+icHRkzqIbI/dvHmWrhNEol8u1iL0b+
tJysT7nTpDLnDJL1jDxVTWDq72R/YYLjjYHv20j3PJEXeYW3CvTz97h1SkKu
DpKmpnGfxVtPC/T9aJ2S+zN5M2RuhITkiv5RCPT7CUgrF80fnBfo++dNj/il
1i4KDIj8Z3F+SLZyhXTyzXiz58I10kdPVtpfyFWRXv2iYNeEySa5fmFo2m6v
qi2yf7eEXhp1SE3W0ywrFDmbGnJ/T/vOL58zNQD6+RGZIp9KGRXov1+crN7V
u8SQdCL7Fb8/mgY2CAeOj8ae5NOBkrBDY/cVxjwdKAj/8QF9rehXBnhCOLPV
L9xUbASuE07zGKU5HjMGUYRT6hObfTyYQKHB/fFQ6MUPWSzgRBih+orcX7DA
a+L/bGjpynSVsoHrFu6ApCMVLuUIKFPhdufsprbGvAVs13BbtdknB7xjAoTL
uIe54ZQOtQk4NIf7UmpBmedTUwCncPdPMTtsQs2AKXFfwvIPu1U3mwFuF+5f
lk907rQxB7cluF1izkXUZZmDWTFuCq9nSzxnDq5n4R5RMG+WR1iArs9xD9St
r4S1W4ARD2I90Yv9Fg4cwKDgdrplbVNYwgHqTvw+Z81+9uaoOSAuA/d/qAg4
kA==
          "]]}, Annotation[#, "Charting`Private`Tag$6866389#14"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw90wswXFcYAOBr2ZV93YutFPXsttIhHo2WSabNHlVJOiFepW2kWltaRMJo
xzO03iSaxoomVk0RTRlNJZoRobInQ6IilQ5BkVWlVgSxWCXW7rZn7917Zu6c
+eY///+fmfsfJ3FSaCwDw7D3///QvubJvF+eRMAUmapTp1sW4eMdLxyNJWBe
TOYtZEl9Ldc2gIB9s4E9yA+LKoyzRQRM7mX1Iu88XqSW7yHglYXaPmSpV+LC
99YElLjmDCA/ev6jGYxPQMeu7j+Q7bdDJqIxAjrkLA8i1/f49AvncBig1Iwg
O39t1zn7Ow5jhq6NIzeFGzf/eB2H5f0Wk8i77eel8dU4LJHv+hv5qmLgtGse
DplZGzPIr7Vcz1yKw2Hc2WIFcnuaNKElCIenCuWPkbkTIb7PrHBof+jNJeSo
/Wwrv2k+FPg8UOrr1cGnZc18yCHa15CNmel3Rr7gw0XPnf8iN/YrUhJM+fA3
P8kz5COScEdtFQ8Gtkyoke9dKPURdnPhYsY7WuSDNV1HDi1yYGJZkA45tbXa
YlLIgX2ZbXpf7s0Y+TySDW+4T+vNcDZNdcrbAYec1/WOKjhv+aDRFKa/uq33
ydX+6CU5C2prtHrnfGz8M1fAgtv5Or1lB8rbdgUw4eFh0pibg8yv0AROrpA+
cezYpbQrxlClJj1+pqq4eZgB57Sk1fe+sgrmMeAvOtK2nLgm1VtG8AnleInW
8locBtWUj7/uwpyw1ck0lD/zNnkvKFkjM8LQUoo+8Zls7O5Wy3RU3CV9n+5k
w6YMo+J18rCeDN912nO5lm8ctFql8zsqX/F/HLFExz3nx1QeNQrab3dMsDUR
U/T57bNerKKpMTqe3NSyaS4Ykmmp/qz8zdoDKX30fSI+FdYNnrpJW3mxKmal
Skzn994fO+0V1i4y1E+sTau0+6lPZKi3z+12a/CFIZHhPCPV8lGM9RRtU15w
rvipgs7PnxrxS7m0RPtqdVFwzuoK7aT6GLN/Itbp/KgEqV1x7iYdV31Y4irH
t+j+pSGpe72+U4sM97/byjz3wWENnW/yXKXiyy0t7dH+QmUBYQQMDs8Se0u7
GbQTuQsvDhw1oe3QfPdb1hMmMNTPavcLI6pNgeF/p3r8aSKM3QEM85B8ObHN
24MN1ijvfxhStofDAQuUeQwfsfssB4xTbrxxJ2v3r1wAKfufeLfSpYIHLlJ2
F+xltEfyQTRlq5t2Sf4v4YBHedgyDOvU4OAMNb+SlJJyz1ECDGpID/zF7rQJ
MQMz26RDi4LcatrMQB01/7eU8bcdbcyB0RY1n5EF4Q3Z5mB6g3o/Tr3q6nlz
sKwiPaJg11eEW4CXqfc02LCxEtphAboWqX7iWV8LBwGInCPt/IO1Tek3AoBN
kc6eC1zV6QTAZpT0f0JsBWk=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#15"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF03lQE1ccB/AQIEiIZJeYDlApUizU1AiVKRQqk0UatFOrCAVnCjgag+MR
QCkNV0E5RLCtB4gQjgqCFosVyx+UQ5tHU0o5JlgpMAik6SBBAilHQw1HkvqS
zXNndnY+8zv2+/54HoKkiHgqhUKJe/nCb1CifJzPwUGyVNthNM7zGMsq9++9
caDP3fUI+nhV9aFEDxysFnEAtOssvfu/TTiIfbehCzqluNPQ7oiDnfFBv0PL
A9P8z23AwVzGg17o3MKp23brGPCa3jcAPe5TNdG3jIGxhC/+gPYfiWBfncdA
f0DBILT6LZDvPImBI9nCEehvU7jammEMXN42/xQ6QlZxbFsvBgpwrgJaQpOF
1z3EAD509G9o5UezwW5NGDjk+PEzaK9vWO+U1WKgInNeBZ3w+ANn/DoGHvOj
ZqBXo79esknHgESboYEunBjv18VhYDBjcgH6NSH3u7ndGHi/tulf6Dp1Vo7S
GwNvNK4uQ/uelcf8ycDApeCxF9CZ88Giq5NMcN5DuAJd4SeavenCBPG/WOmh
W1MrTjUdcAQa+j0DtLVtWtdwykbAzBEbofcXR20xSBigXNFjcm9ZUYCnzAHw
Z9Um76l+tH/vHB1oaDqTxc2VTgpPOmhXrJt8pzt9+PMYexAnN5hM9bITe+Ru
ANxyo8mH86+zBxrsAK4wO3Gp76hmggaytGZnH7G+78CigZB1s6Vh11q899mC
foPZFK67NPSCDbhpNDshNrYu9QdrME366VeSi41DVLBCeq33vHM4gwqMpDfT
T9zV7rYCFNOzwDtZbGD/eIICrEiffo9jO7bZKDWQ/ccCFA0y2ZrU0s9JCzIm
1uuQaycif00PWUaezmHv2uO8hNxe+jb/ebRGatnvOzOq9alWofqH7WP2+mgl
qq9f9qMVKEdR/czdJh3OGkR5aHm6mrDkHqnlPNHHPWuffNmGvFAuES5KBGi+
u3/0kl9kK8+yX1STWup2r4dn2RfE7WwOLxvkWfqpYva40EWJbNPZfH8ybxLZ
jhGeI/hHxaOS5otLBOq9alTPUw6HJtdpkFdsA9teFyzwLPkeVBaEZy8tojxJ
t4TYs+hl1H/4VIXbxRwdctFBcaBf1dqrPJtKVedWDWh+jvP8rCCMQljqI30X
FvKZVoTlfzc8U0quzLxyVKbAv0JGJSznFznMvin/zAbNuzf+doOmtkXObA2N
ZFbaIZ+5I2rx97FH+xjUAMGOKTpyw09dmdsfOhB60vyET0s5JQxilfQOViC1
NWYjsnObWxJ/qyOxRHqIHUnp0DsSGtLFyYXXfEeYhIK0/C/7DteDGDFAOqLg
ALe6BSNaSP+8cLJziytOlJPmxORH1WfhxGnSFI/utcoZnNhOelhlf6skyokY
Iu/Xk/oXixHtToSItFwwFeLkziKm9WZ73XZxLbrCIraSzpr+5GV0FrGTvK//
A7A3Iy0=
          "]]}, Annotation[#, "Charting`Private`Tag$6866389#16"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw90g8snGccB/C74+gd4973KsGqahZWiT8hI6tt93aqZtE6lGzzJ+uVZrVr
mcnR0I4VrU2tmJkznaLCbLXIpqpZ7ydXf4qoMIf6v/o7dbicUldufe7e93mT
N28++T7P93meN4+TJCk8gcNisT5+9aLvKasgludNElIU2vt6/ZrII2TQqqSE
hJi9JUAOXqOGlAUklA5PK5Hji5vKtLkkXLf4sxNZPlpwKCqdBO/bO73If2Xo
5vK+JMF1KakfeeBgYsPdRBIGgrsHkLkJQd52sSRYZLkOI/uGrHWcFpPAi5sd
RT7rU/bJrwEk1Nz4aAK5zF60qvEloa713DRyN3sxy9+NhIK1Y/8iv1gq3J/j
QAJ7cHYO2W3At75PQEJmfuAicvTdKX8bUxJEw6nLyAU38x7HbhEgJ1NXkNVS
1XP1JAHs1zVqZLG/y8GshwSwdOMbyM08WSDRSIBJZbAWWTjaIa0uIqD7cOhz
Q37Ca2nenYBn8ck65HCl/MzhHgHk657uIl+bnOjbjhXArMpej5yx9p70xlNr
aFVXGSz3ka78YmcNXGLE4NY0eWJTqBU0tKsNNuGmd6hSX4MHiS8MPlkceWiv
3BL6CncN7inL93NWWkALqn/loMq/T374jA+Zd4yWNVeQU858eDJrdF3XRdVX
0Tzw2DSa42Iuc/pmHxS9NDou5webx/XmoN0z+oKm9/TqpBk06o2+/JnJHQuh
GSzSVhwvanEN4cIWbZa7oyIg1xR2aZ+PialJ+90EWIZnXfTku/KrjcMcbF1P
lq3YkgNs2gf4nzdoP2Dj/Iu33bjjB/QKPd13xm+qXqnUYbulH9FfqN1WMONv
TUY8vHh0E3sx2+bdIFsNdlvpW4FLUavYXstjWs/KBexjbeO83agZBbOfl4U+
ZnkzYzhPbmjaJoRDij16fbMr21XHUx7h/USddb41mHkPe/2n8viNcgme39U3
9q1PRKuI6ZdWpZU6/PZIxPQdcW9vFpcNiZjxHJnNRLzdDLa5pThbol7A86/M
qAJSalax/6jIE1/WbGAnVccL5qI2seMS5Q5Xs7dxX36Y7B2fn3XYpvtLF77e
2cMe6c1dz7FmU8x5IjMkvnIlh2JyqcXKG/2fmlJMv2Nj549m/3GxM1oDIqwr
zLFlnqOmzgn78PzkOmmLrycP97//T1iBN5+Pc0uOn8Rjno/zwPOnSt1KLHFu
e88hKfBNK5wXp1wr8hqxppj/2T/Nu28fJsB5eF6oe2WLgNLRfrB+rv2QPUHt
MPcpOiey9hJB4fvs1KWrWCYoLW3VAq+6JJKkVmgP1m5thLeR1ByznmT+KOko
pMZou9y2s8//Xkh10r60eEKj1wupJtr/AwCj5yc=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#17"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF1A9ME1ccB/BSoPwrpfSNSauMKgYnC0hGlGnYWseAZSBWkGYZlEAFM1gV
Ag4wDASECmjYAJlSxsSCRsaUiaSCOPtYhQZkgBBhhaKNjgIiCigC1vb02t7r
JZfLJ9/fn3e55DYL06KSySQSSfD+xp95M/uWMQzAXo8zdzHsBSeS/mj15jqA
KwUfKnGzd6fr014C2DpR0of7n/Iqe40WwPSeDYO4z97wop3XABieHDSMO1nd
DngTAG5jfTOC295v/CP4L4CCjK1juFtOrG/37wYw6P5VlXHf/Y07G9oBHLz2
TG2cdywhvKAOQFWE9DHuwN4i/mIFgMkNXtO4JzZcSkwoAnDjH2kzuPNSlKLh
HwFkdpbPGc/bNZfNTQFQ1pMzj/twvF8Fmwcg5qd+btxvldlECgSQMXJjCXcR
a1YpJgEYWpv4Gve3AYJ5aj8DKicr1nH7RYzQqqsZcIukXYfbNjnsU6aAAQVl
3nrcZ34XDwlWXaEs/LoBN/ivRyStdIWnWSkY7rZ9/rPTvq4w1PO20VEKyaHt
/XTYRnlsdOmUemBNQIf6py+Nzn3xueiXJy5w4Aud0ZIA0fwFpgu86WwwuiNb
ktq6nwavf4YZbW2b0zN2zBn6dpgcWRXDNtRS4ROtyf3nygK9FE4wetXksPq/
I79+5gjd9SZntdUxHno5Qr3B5MvK42OZsQ6wGTOZ7G2XtbnIHk6bHV981m3o
ih18bfbR5XuJC1MU+Nbs/ATra06AAq1I+LXIkYdWyrZF2EKS2SRfT3lwiQ00
mOuPxMU1Zl+1RvnE6dpTLQ/IqP9OpoxZcNtiaexoy8FGMqpP/cR5WJ9usa6/
wJ1HtXiT4/fNr760Qv5hp4/t5CZMTuw/FPjwikKhk2Nm++TswY42rSFfnIq+
e3zvipzonyl0CwpzX5YT57lV83HILH8B5f5zqlc76rXIX92adNDzNaj+bUUA
RaxRoTy9uXXNFYyi81BOrjWEZvSh/fzDXhdHfupEXjxfm7RUK0T9ygFVeUB0
B4eYL2rIrvH4s49DzNvj293GOzfKIerJWW7qJKYG2Y7KKxQ+16L+k5qx4IzG
BeS/6sS8/OUl5DRpEv1//grqj0+VeJwqXEMuO5C1O+A3HYc4r80HNdoTbwwo
H79XsljsYsUl8phc4S6JgswlcpHT/JbB72y4xD7Plt5fKU9tkXM7gqNd6uxQ
ffplkWzXDgc0j0oOFPpNO6I85MjBGp9qKup37/RIC9lKQ/kDt2hSl56G8qqM
0kr/cReu3jxv8JFDF+sAHdVHiff71svoqL5hdOSCs8LiBTafkT9kqS/tiluN
n7X4zmJKN5vliuwTWxzTlGfxmNZBWh3D4BLfb1A4vZfhCdD7eV9issp+Blyd
2eb/N/eN2e8AW3/e6w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#18"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF1HtIU3EUB/A5t+nmam43q0W2zJISTHOUJOZmZgrha6ZFsbKpEbUyVKZm
Wj5aWdJLzTaz1EwUS8MoTJL9bD7QnqSt7IVkPtKVThSX5m653Xt24XL58D3n
/M69f1wXWaIkgUqhUML/3wvPzOHQSRzHUMvSF3M4Pi4qSonddbYUQxl6imnB
dTbJVRQfDH135uIL3iuUjrG7eShQoDKbnhDszZfyUE5Br9kFt5VvpDNclKDX
m419bJdXXuMiWeeM2Y2hXiODHly0KvWv2RKtOm5DtyM6lWMy+8LXLy+NUkek
P46bnTG+TX51gIPSuixWC+Vjd/gc1DZqcVOq+mhD+GJkmLHYlp7WrktZhALm
LQ67Hr3apGIjPm5xd0m+j6vWAT0iHFzWEhaiZ6FhworGUt43Vxb6Q7i6M12X
vJ+J5glvE0j9BeuYyES4VyGu7v5tD6a62SlccuwRTvhAXpHTmxo7cFasbb0D
xkAU8zUhongINIHnaJB/uqQ6X/eeCvlK1pHaqe02kB/b7E7/vBLXkOfF+Xyr
0WrnNGS9e5ovfqLKCK74GtWWHjANHs528gtePqmxIdxcvD5oJOYX5F4/+6Y8
y4bAO5o/M+dj+qH+72UhQ9nfB/nJ2gYjF+uBfRi5xvKdSV0act+Yw64V704/
BU/cVMUbVDLo73zZd1EY1SQi58vLU4ud73eJyHm+Hq2NESU9IrKeqnD6Es/v
B9NaG+sHcgfAduyIbNnvIRGVcJCiUDYaMgp5br8uMOnuLzjvYakyImvSAE6s
jHf8ETMNPnBU7Xw+2wj9+ZGKrcJbcyLyfWhLiofOzJog//Di3EQex0ZM5tEZ
si1qLRUsdxhb83ofTUzWC+o6bjBG6ZC/2kSfvvicISbPz2gKjOKU2oEVnh9p
rgn20H+yWv5kiycT+v17Iwu8WSwwm+oj2zhoddDx3cXuhWzoX/7UOTFo7WIx
+b2vJ1245vWBA5Yowz3KnjhCv/v+vOiqTC7064aYlYXRPMjfVc0YJM1Wv5YN
BvAEGOw/m4s/CN1jtds9/or8KxjMe/bY7W11nTWXdAiVbZ0Y7FMW5nuo5z0G
80d0Yr/vA1Z7HwxeZjBY5xH/N/A/SeiFJA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#19"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxF1AtIE3EcB/Btui11ObdTyFDMjFUrS1o1EmMz8wFlmaY9dGFTI2xmmczC
skxbmpGvrJzZw2wUS61FYi/2j5XiA40eSzNjZM63qSgtbV653f12cBwfvr/f
735/Ds5bmhqZRKNQKLv+3/PPM/3hkziOIV7cSxzHf4mupsdvO1eBobynBovV
1BPVFCGGTk9NWLxXIBlmtXCRUThjMT0pdJ27hItc1WaLL99SdEh+c1AAHbcY
63wnqyrmoCc3rNaE+w30+XJQwWerI3XKhJUtLmhwzOq8nm9tJokLav5jdeav
zbKiXjZqNVutFMiGb7uz0Rrc6oYMZXLdTmdUT9iOfvKdPn0h6ie8oyR6yVw5
C5kIt1zPF/ronNAc4dDK1zvCRhyRmbBcU8H97uOIqJT5a1ykajqlPxHrgCiE
P8nFqpaxBQgn6mk8ptz7vM0Hcq+6dTxgwvyjk60HR3sYkGfF29U6YQyYrw0p
rl++nQ45xddLG3TBHvpT4uLuZdTYQf3XgvKL6s802MfD8fDDqS1U8JENfHq3
B64l+xOE3x/odLNaMuef9MePVpvAd3ui3p4KnAb3Z7sFhC6a1JLve1G2Ingg
ZhRyv8GuqbWVRvDWF90O5hgD1P+9ImAoDF2QH3tYZ+JgH2EfRo7pTkhas5Y8
b8whn7sfTj8Hj98oT5wol0J/U1vXJUFUg4icL7uTUeb5qFlEzvP3faOJuP5R
RNbT5G7fEt0NYPs3mtrenF4wkxWRLR0zimiEg+Wl0qGwIchzDPqgtHuj8L7H
FYqIrMkJcGpVosvPmGmoP5Cs9LyYbYJ8SpK3qsd5BvL8XfJNgpuzIvJ8jRp6
0b5tZtt+rmXGszNz0D/CHzguDaGIyfxL64XxXDZVTPZf80kvLRykQh6dKd2o
1NEgj9epVq8vtINc5jS8tH2/vZicH9LdGZe8lA72UjdeYwzRoT6zISiKXcGE
ecdUsvqNax0gZ9GE0jV9juDglN1l/FIWeNFzz9TgZc5i8vuUpOUV+31hgyMV
O30r613A/Njc6OozHOjXGx2qSqO54HZpXyDXCwPP5OA14Xsw2J93331xfiEG
8149471XqW15ZKNA8bbJ1j+gFwf86LWZ+P/Bef8BUYto/g==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#20"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAWIQXfvc99P//8IHznP++f///3v7KSUJ3g2zhQ8sd/4H
5q9mLF7CYC58YKLDfzA/wjj2Nc8poQNrt0D4rKnuRpKxQgf+PYLwe+a1nY/9
Lngg4guEL3zjaM6iiYIHMn5D+Jt8DV481RU8YPgPwg86PCtZ85TAAd//EH7H
3TtnfsQKHDgC5Ve/t82Z8Jj/wGsof5Zxzuv5kvwHfkD5O8pnZa335zvwD8qP
s+OUcH7Ee+A/lM/MWnH0WgmC7zcpVOHfTJ4DDGDwwd597l4/jzdccPllxyuv
FUdzwuXjWqaInl/BDufXJTCv4xZmO8AI5e93m7hN3YcVLs+gK7/fuZUFbl5u
TMzi8rXMcPW3ume2r77KBJeX4cpY+cWJEa4/21SL9bbM//0wfrL5vRWHD//e
D1OvVWH1P2/JD7j8wrvBRyodv8L5zxtFbdwlPu2H2bdrqobri7C3cHmDlze/
6M99Bue77LrN+TfsAVz9nz5jtrYHN+HyBSvX/xAUvrwfFr5szT8WuBWdhLsn
LE154aWanXD+8TM3u4yDd9jD9FvpHtwUMP0ynM9UJnonRfIBnM9ycNO6x82P
4Xx2noDGpHfP7JmgfNeyyUmvPF7B5ZsfXHMuWvzWHubeDbPbAuo+fYTz8xel
CDwJ+wpXH5c1S7a98Qec3xlYZmk857c9zD/HNrFOiPT+i3CPyNRn9b/+wc17
o/WiMMmNwQEmf/1064cWfkYHmH+nKZdM7n/JCJcPrU4ym3WYCc7P4X6tdC6K
Bc6XX31sGtsrVji/eodzMP9sdji/YFnONjN9Trj5PEzmSXpPueDyrrkhU7Um
88D5Ejtl811V+OD8SUUdEw2u88P1B7X5687dJgDna0W3hC6pFYTzrz3jXDQ5
VAiu/1zSU0cheWG4vNpSSanOfgQfWl7A1QMAT23+gg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#21"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAmIQXfvc99P//8IH9pz6DwTv7aeUJHg3zBY+MPklhL+a
sXgJg7nwgR3fIPwI49jXPKeEDjT/gfBZU92NJGOFDuz4B+H3zGs7H/td8EDD
fwhf+MbRnEUTBQ9chPI3+Rq8eKoreOAdlB90eFay5imBA7+g/I67d878iBU4
wAAGH+yr39vmTHjMD+fPMs55PV+S/8B/qPod5bOy1vvzweX9JoUq/JvJA+e7
z93r5/GG68A/qPplxyuvFUdzwuXjWqaInl/BDufXJTCv4xZmO8AI5e93m7hN
3YcVLs+gK7/fuZUFbn9uTMzi8rXMcPlb3TPbV19lgsv/PtUgEcDDBJeX4cpY
+cWJEW5+5qR/ohszGODy2aZarLdl/u+H6U83Ywn3L/i7H6Y+2fzeisOHf++H
+Uerwup/3pIfcPUL7wYfqXT8uh9m3vNGURt3iU9w/bumari+CHsLlzd4efOL
/txncL7Lrtucf8MewNX/6TNma3twEy5fsHL9D0Hhy3D72Zp/LHArOgm3PyxN
eeGlmp1w/vEzN7uMg3fYw/Rb6R7cFDD9MpzPVCZ6J0XyAZzPcnDTusfNj+F8
dp6AxqR3z+yZoHzXsslJrzxeweWbH1xzLlr81h7m3g2z2wLqPn2E8/MXpQg8
CfsKVx+XNUu2vfEHnN8ZWGZpPOe3Pcy9LCJTn9X/+geXv3669UMLP6MDjB9a
nWQ26zATnJ/D/VrpXBQLnC+/+tg0tlescH71Dudg/tnsDjDzC5blbDPT54TL
8zCZJ+k95XKAhadrbshUrck8cHmJnbL5rip8cP2TijomGlznh/OD2vx1524T
gOvXim4JXVIrCNd/7RnnosmhQnD155KeOgrJC8Pl1ZZKSnX2C8PloeUBXB4A
T3PouA==
          "]]}, Annotation[#, "Charting`Private`Tag$6866389#22"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwA2IQXfvc99P//8IHiv7+B4L39lNKErwbZgsf+P4Pwl/N
WLyEwVz4wLT/EH6EcexrnlNCB25D+ayp7kaSsUIHPkH5PfPazsd+FzzwG8oX
vnE0Z9FEwQP/oPxNvgYvnuoKHvgL5QcdnpWseUrgAAMYfLCvfm+bM+ExP5y/
o3xW1np/Pjjfb1Kowr+ZPAf+Q/W7z93r5/GGC27+suOV14qjOeHq41qmiJ5f
wQ7n1yUwr+MWZjvACOXvd5u4Td2HFS7PoCu/37mVBW5ebkzM4vK1zHD1t7pn
tq++ygRXL8OVsfKLEyPcPdmmWqy3Zf7vh/kv2fzeisOHf++HmadVYfU/b8mP
/TD1C+8GH6l0/LofZt7zRlEbd4lP+2H27Zqq4foi7C1c3uDlzS/6c5/B+bsu
RtWLVT2G2+ey6zbn37AH+5mg8n/6jNnaHtyEqy9Yuf6HoPBluHvYmn8scCs6
CXdPWJrywks1O+H842dudhkH77CH6bfSPbgpYPplOJ+pTPROiuQDOJ/l4KZ1
j5sfw/nsPAGNSe+e2cPc41o2OemVxyt7mPnND645Fy1+aw/z74bZbQF1nz7C
+fmLUgSehH2FmxeXNUu2vfEHXP5LbIf2Xb5fcPnOwDJL4zm/4eYf28Q6IdL7
L1w9i8jUZ/W//sH5b7ReFCa5MTjA9F8/3fqhhZ/RAaZ/2/c/jl01jA4w9dOU
Syb3v2R0gIVfaHWS2azDTHD9Odyvlc5FscDVy68+No3tFStcvnqHczD/bHY4
v2BZzjYzfU44n4fJPEnvKRfcftfckKlak3ng8hI7ZfNdVfjg8pOKOiYaXOeH
84Pa/HXnbhOA87WiW0KX1ArC+deecS6aHCoEN+9c0lNHIXlhuHtTij9917dG
8H81/1/rGy4MV6+2VFKqsx/BDzpm3HbkOIIPLU/gfACQhARk
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#23"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwA2IQXfvc99P//8IHHv0Hgff2U0oSvBtmCx/4AuWvZixe
wmAufOA3lB9hHPua55TQgX9QPmuqu5FkrNABBjD4YN8zr+187HfBA/+h8sI3
juYsmigIlw86PCtZ85QAnF/93jZnwmN+OH9H+ays9f58cL7fpFCFfzN54Hz3
uXv9PN5wwc1fdrzyWnE0J5wf1zJF9PwKdrj6ugTmddzCbHA+g678fudWFrj7
c2NiFpevZYbL3+qe2b76KtMBRij/96kGiQAeBF+GK2PlFydGuPpsUy3W2zL/
98PsTza/t+Lw4d/7YeZrVVj9z1vyAy6/8G7wkUrHr/th+p83itq4S3zaDzN/
11QN1xdhb+HyBi9vftGf+wzO33Uxql6s6vH+v1DzXHbd5vwb9mA/E1T+T58x
W9uDm3D1BSvX/xAUvgx3D1vzjwVuRSfh7glLU154qWYnnH/8zM0u4+Ad9jD9
VroHNwVMvwznM5WJ3kmRfADnsxzctO5x82M4n50noDHp3TN7mHtcyyYnvfJ4
ZQ8zv/nBNeeixW/tYf7dMLstoO7TRzg/f1GKwJOwr3Dz4rJmybY3/oDLf4nt
0L7L9wsu3xlYZmk85zfc/GObWCdEev+Fq2cRmfqs/tc/OP+N1ovCJDcGB5j+
66dbP7TwMzrA9Sc6zmR3Y3SAqd/2/Y9jVw0jXP005ZLJ/S8ZHWDhGVqdZDbr
MBNcPof7tdK5KBa4fvnVx6axvWKFy1fvcA7mn80Oly9YlrPNTJ8TLs/DZJ6k
95QL7h7X3JCpWpN54PISO2XzXVX44PKTijomGlznh/OD2vx1524TgLtv34fM
gwpSgnD7tKJbQpfUIvgMisd/z36J4F97xrlocqgQ3LxLS75/DNqF4J9Leuoo
JC8Md4/aUkmpzn4EH1qewPkApvLykQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#24"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBmIQXfvc99P//8IH/oPBe/spJQneDbOFDzCAwQf71YzF
SxjMEXzWVHcjyVghOF/4xtGcRRMF4fygw7OSNU8JwPnV721zJjzmh5u/o3xW
1np/Pri836RQhX8zeeDy7nP3+nm84TrwD8pfdrzyWnE0J1x9XMsU0fMr2OHq
8z6dTnx7lw3Or0tgXsctzHaAEap+v9vEbeo+rHD9DLry+51bWeDm58bELC5f
ywxXf6t7Zvvqq0xw9TJcGSu/ODHC+dmmWqy3Zf7vh9mXbH5vxeHDv/fDzNOq
sPqft+QHXP6Z1vHEL5++wfkL7wYfqXT8uh9m3yY3FyXd8i9w+SPrTRoerPm8
H2bf80ZRG3eJT3D1u6ZquL4IewuXN3h584v+3Gdwvsuu25x/wx7A1f/pM2Zr
e3ATLl+wcv0PQeHLcPeyNf9Y4FZ0Em5/WJrywks1O+H842dudhkH77CH6bfS
PbgpYPplOJ+pTPROiuQDOJ/l4KZ1j5sfw/nsPAGNSe+e2TNB+a5lk5Neebyy
h5nf/OCac9Hit/Yw926Y3RZQ9+kjnJ+/KEXgSdhXuHlxWbNk2xt/wPmdgWWW
xnN+w81jEZn6rP7XP7j89dOtH1r4GR1g8qHVSWazDjM5wORzuF8rnYticYDZ
J7/62DS2V6xw+eodzsH8s9nh/IJlOdvM9Dnh5vEwmSfpPeWC81dsP1qts4cb
rt41N2Sq1mQeuPl6wpZMO6J54XyJnbL5rip8cP3uAtmXF0Uh+GXpO8wZJvI5
wOLrqmgww+6/fHDzJxV1TDS4zg+XD2rz1527TQCuXyu6JXRJrSBc/bVnnIsm
hwrB5c8lPXUUkheGy6stlZTq7EfwoeUDnA8AU7bpfg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#25"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwA2IQXfvc99P//8IH/oPBe/spJQneDbOFDzCAwQf71YzF
SxjMEXzWVHcjyVghuHrhG0dzFk0UhMsHHZ6VrHlKAC5f/d42Z8Jjfrj8jvJZ
Wev9+eB8v0mhCv9m8sD57nP3+nm84YLrX3a88lpxNCecH9cyRfT8CnY4P+/T
6cS3d9kO/IPy6xKY13ELsx1ghJq3323iNnUfVrj5DLry+51bWeD6c2NiFpev
ZYarv9U9s331VSa4ehmujJVfnBjh/GxTLdbbMv/3w/Qnm99bcfjw7/0w+7Uq
rP7nLfkBl3+mdTzxy6dvcP7Cu8FHKh2/7ofZt8nNRUm3/Atc/sh6k4YHaz7v
h9n3vFHUxl3iE1z9rqkari/C3sLlDV7e/KI/9xmc77LrNuffsAdw9X/6jNna
HtyEyxesXP9DUPgy3L1szT8WuBWdhNsflqa88FLNTjj/+JmbXcbBO+xh+q10
D24KmH4ZzmcqE72TIvkAzmc5uGnd4+bHcD47T0Bj0rtn9kxQvmvZ5KRXHq/s
YeY3P7jmXLT4rT3MvRtmtwXUffoI5+cvShF4EvYVbl5c1izZ9sYfcH5nYJml
8ZzfcPNYRKY+q//1Dy5//XTrhxZ+RgeYfGh1ktmsw0wOMPkc7tdK56JYHGD2
ya8+No3tFStcvnqHczD/bHY4v2BZzjYzfU64eTxM5kl6T7ng8q65IVO1JvPA
+RI7ZfNdVfjg6icVdUw0uM7vAAv/oDZ/3bnbBODqtaJbQpfUCsLdc+0Z56LJ
oUJw+XNJTx2F5IXh8mpLJaU6+4Xh5kPzM5wPAM3qySM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#26"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQXfvc99P//8IHGMDgg/2UkgTvhtkI/mrG4iUM5gg+
a6q7kWSsEJwvfONozqKJgnB+0OFZyZqnBA78B4P39h1375z5ESsAl69+b5sz
4TH/AUYof5Zxzuv5kvwH/kHV7yiflbXenw+un5m14ui1El64fr9JoQr/ZvLA
+e5z9/p5vOGC6192vPJacTQnXH9cyxTR8yvY4fy8T6cT395lg/PrEpjXcQuz
wd2z323iNnUfVrj5DLry+51bWeDqc2NiFpevZYarv9U9s331VSa4ehmujJVf
nBjh/GxTLdbbMv/3w/Qnm99bcfjw7/0w92pVWP3PW/IDLv9M63jil0/f4PyF
d4OPVDp+3Q+zb5Obi5Ju+Re4/JH1Jg0P1nzeD7PveaOojbvEJ7j6XVM1XF+E
vYXLG7y8+UV/7jM432XXbc6/YQ/g6v/0GbO1PbgJly9Yuf6HoPBluHvZmn8s
cCs6Cbc/LE154aWanXD+8TM3u4yDd9jD9FvpHtwUMP0ynM9UJnonRfIBnM/O
E9CY9O6ZPcz+5gfXnIsWv4XzN8xuC6j79BGuPn9RisCTsK9wflzWLNn2xh9w
9V9iO7Tv8v2Cy3cGllkaz/ltD3PfsU2sEyK9/8LVs4hMfVb/6x9c/fXTrR9a
+BkdYOpDq5PMZh1mcoDJ53C/VjoXxeIA0y+/+tg0tlescPnqHc7B/LPZ4fyC
ZTnbzPQ54XweJvMkvadccPNdc0Omak3mgctL7JTNd1Xhc4CF96SijokG1/nh
/KA2f9252wTg+rWiW0KX1ArC9V97xrlocqgQXP5c0lNHIXlhuLzaUkmpzn5h
uDw0/8PlAcE62EY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#27"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBWIQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDOYLPmupuJBkrBOcL3zias2iiIJwf
dHhWsuYpATi/+r1tzoTH/HD7ZhnnvJ4vyX/gP9Q9O8pnZa3354PzmVkrjl4r
4YXr95sUqvBvJg+c7z53r5/HGy64+mXHK68VR3PC+XEtU0TPr2CH8/M+nU58
e5cNzq9LYF7HLcwGd89+t4nb1H1Y4eYz6Mrvd25lgavPjYlZXL6WGa7+VvfM
9tVXmeDqZbgyVn5xYoTzs021WG/L/N8P059sfm/F4cO/98PCX6vC6n/ekh9w
+WdaxxO/fPoG5y+8G3yk0vHrfph9m9xclHTLv8Dlj6w3aXiw5vN+mH3PG0Vt
3CU+wdXvmqrh+iLsLVze4OXNL/pzn8H5Lrtuc/4NewBX/6fPmK3twU24fMHK
9T8EhS/D3cvW/GOBW9FJuP1hacoLL9XshPOPn7nZZRy8wx6m30r34KaA6Zfh
fKYy0Tspkg/gfHaegMakd8/sYfY3P7jmXLT4LZy/YXZbQN2nj3D1+YtSBJ6E
fYXz47JmybY3/oCr/xLboX2X7xdcvjOwzNJ4zm97mPuObWKdEOn9F66eRWTq
s/pf/+Dqr59u/dDCz+gAUx9anWQ26zCTA0w+h/u10rkoFgeYfvnVx6axvWKF
86t3OAfzz2aHqy9YlrPNTJ8Tbh4Pk3mS3lMuON81N2Sq1mQeuHqJnbL5rip8
cPlJRR0TDa7zO8DCP6jNX3fuNgG4/L4PmQcVpATh9mtFt4QuqUXwGRSP/579
UhCu/tozzkWTQ4Xg/EtLvn8M2iUEt/9c0lNHIXlhuH61pZJSnf3CcHlo+QHX
DwB4WPeu
          "]]}, Annotation[#, "Charting`Private`Tag$6866389#28"]& ], 
       
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAWIQXfvc99P//8IH/oPBe/spJQneDbOFDzCAwQf71YzF
SxjMEXzWVHcjyVghOF/4xtGcRRMF4fygw7OSNU8JwPnV721zJjzmP8AI5e8o
n5W13p8PLu83KVTh30weON997l4/jzdcB/5B3bPseOW14mhOuPviWqaInl/B
DufnfTqd+PYuG5xfl8C8jluYDW7ffreJ29R9WOHmM+jK73duZYGrz42JWVy+
lhmu/lb3zPbVV5ng6mW4MlZ+cWKE87NNtVhvy/zfD9OfbH5vxeHDv/fD3KtV
YfU/b8kPuPwzreOJXz59g/MX3g0+Uun4dT/Mvk1uLkq65V/g8kfWmzQ8WPN5
P8y+542iNu4Sn+Dqd03VcH0R9hYub/Dy5hf9uc/gfJddtzn/hj2Aq//TZ8zW
9uAmXL5g5fofgsKX4e5la/6xwK3oJNz+sDTlhZdqdsL5H2bMTPk4Mwmu//iZ
m13GwTvsYebnLCifKrvmpD3MPCvdg5sCpl+2h6lnKhO9kyL5AM5nObhp3ePm
x3A+O09AY9K7Z/ZMUL5r2eSkVx6v4PLND645Fy1+C7dvw+y2gLpPH+H8/EUp
Ak/CvsLVx2XNkm1v/AHndwaWWRrP+W0P8w+LyNRn9b/+weWvn2790MLP6ACT
D61OMpt1mMkBJp/D/VrpXBQLnC+/+tg0tlesDjD7q3c4B/PPZofLFyzL2Wam
zwnn8zCZJ+k95XKAhY9rbshUrck8cHmJnbL5rip8cPlJRR0TDa7zw90T1Oav
O3ebAFy9VnRL6JJaQbj9155xLpocKgSXP5f01FFIXhjO/9X8f61vuDBcvdpS
SanOfmG4fXu2ql1YthohH3TMuO3IcYT8i2sONo8eI+Sh5QXcfAC0eN2W
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#29"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwBGIQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FISbF3R4VrLmKQG4fPV725wJj/nh/B3ls7LW+/PB+X6TQhX+zeSB809N7zRX
PswNt8997l4/jzdcB/5C+WWbZgvdU+aC27fseOW14mhOuPq4limi51eww/l5
n04nvr3LBufXJTCv4xZmg+vf7zZxm7oPK9x+Bl35/c6tLHD1uTExi8vXMsPV
3+qe2b76KhNcvQxXxsovToxwfrapFuttmf/7YfqTze+tOHz4935Y+GtVWP3P
W/IDLv9M63jil0/f4PyFd4OPVDp+3Q+zb5Obi5Ju+Re4/JH1Jg0P1nzeD7Pv
eaOojbvEJ7j6XVM1XF+EvYXLG7y8+UV/7jM432XXbc6/YQ/g6v/0GbO1PbgJ
ly9Yuf6HoPBluHvZmn8scCs6Cbc/LE154aWanXD+hxkzUz7OTILrP37mZpdx
8A57mPk5C8qnyq45aQ8zz0r34KaA6ZftYeqZykTvpEg+gPNZDm5a97j5MZzP
zhPQmPTumT0TlO9aNjnplccruHzzg2vORYvfwu3bMLstoO7TRzg/f1GKwJOw
r3D1cVmzZNsbf8D5nYFllsZzftvD/MMiMvVZ/a9/cPnrp1s/tPAzOsDkQ6uT
zGYdZnKAyedwv1Y6F8UC58uvPjaN7RWrA8z+6h3Owfyz2eHyBctytpnpc8L5
PEzmSXpPuRxg4eOaGzJVazIPXF5ip2y+qwofXH5SUcdEg+v8cH5Qm7/u3G0C
cPft+5B5UEFKEK5fK7oldEmtINw9DIrHf89+iZC/9oxz0eRQIbh5l5Z8/xi0
Swgufy7pqaOQvDBc/6/m/2t9wxF8taWSUp39wnD1QceM244cR8hDyx+4PAAi
WQJ9
          "]]}, Annotation[#, "Charting`Private`Tag$6866389#30"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQXfvc99P//8IH/v0Hgff2HHrX5Q6cFT7AyAACH+yn
lCR4N8wWPsAA5a9mLF7CYC584D9UPWuqu5FkrBCc3zOv7Xzsd0E4X/jG0ZxF
EwXh5m3yNXjxVFcQbl/Q4VnJmqcE4OZXv7fNmfCYH87fUT4ra70/H5zvNylU
4d9MHjj/1PROc+XD3HD73Ofu9fN4w3XgL5Rftmm20D1lLrj9y45XXiuO5oSr
j2uZInp+BTucn/fpdOLbu2xwfl0C8zpuYTa4/v1uE7ep+7DC7WfQld/v3MoC
V58bE7O4fC0zXP2t7pntq68ywdXLcGWs/OLECOdnm2qx3pb5vx+mP9n83orD
h3/vh4WPVoXV/7wlP+Dyz7SOJ3759A3OX3g3+Eil49f98PB1c1HSLf8Clz+y
3qThwZrP+2H2PW8UtXGX+ARXv2uqhuuLsLdweYOXN7/oz30G57vsus35N+wB
XP2fPmO2tgc34fIFK9f/EBS+DHcvW/OPBW5FJ+H2h6UpL7xUsxPO/zBjZsrH
mUlw/cfP3OwyDt5hDzM/Z0H5VNk1J+1h5lnpHtwUMP2yPUw9U5nonRTJB3A+
O09AY9K7Z3D9zQ+uORctfgvnb5jdFlD36SNcff6iFIEnYV/h/LisWbLtjT/g
/M7AMkvjOb/tYe5lEZn6rP7XP7j89dOtH1r4GR1g8qHVSWazDjM5wORzuF8r
nYtigfPlVx+bxvaK1QHmnuodzsH8s9nh8gXLcraZ6XPC+TxM5kl6T7kcYP53
zQ2ZqjWZBy4vsVM231WFDy4/qahjosF1frh7gtr8deduE4Dz933IPKggJQjX
rxXdErqkVhDuHgbF479nvxSEq7/2jHPR5FAhOP/Sku8fg3YJwfWfS3rqKCQv
DNf/q/n/Wt9wBF9tqaRUZ78wXH2hrsLX6XMR/D1b1S4sW43gBx0zbjtyXBju
nwqu7Z9Pn0OYN9fPKvHyVYT6F9ccbB49RvCN4t3FP34UhrsXWp7B5QFFwz38

          "]]}, Annotation[#, "Charting`Private`Tag$6866389#31"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBmIQXfvc99P//8IH/v4Hgff2U0oSvBtmCx9gAIMP9qsZ
i5cwmAsf+A+VZ011N5KMFYLzhW8czVk0URCuPujwrGTNUwJwfvV725wJj/nh
/B3ls7LW+/PB+X6TQhX+zeSB809N7zRXPswNN9997l4/jzdccPeVbZotdE+Z
6wAjVP2y45XXiqM54erjWqaInl/BDufnfTqd+PYuG5xfl8C8jluYDa5/v9vE
beo+rHD7GXTl9zu3ssDV58bELC5fywxXf6t7Zvvqq0xw9TJcGSu/ODHC+dmm
Wqy3Zf7vh+lPNr+34vDh3/v/QflaFVb/85b8gMs/0zqe+OXTNzh/4d3gI5WO
X/fD7Nvk5qKkW/4FLn9kvUnDgzWf98Pse94oauMu8QmuftdUDdcXYW/h8gYv
b37Rn/sMznfZdZvzb9gDuPo/fcZsbQ9uwuULVq7/ISh8Ge5etuYfC9yKTsLt
D0tTXnipZiec/2HGzJSPM5Pg+o+fudllHLzDHmZ+zoLyqbJrTtrDzLPSPbgp
YPple5h6pjLROymSD+B8dp6AxqR3z+D6mx9ccy5a/BbO3zC7LaDu00e4+vxF
KQJPwr7C+XFZs2TbG3/A+Z2BZZbGc37bw9zLIjL1Wf2vf3D566dbP7TwMzrA
5EOrk8xmHWZygMnncL9WOhfFAufLrz42je0VqwPMPdU7nIP5Z7PD5QuW5Wwz
0+eE83mYzJP0nnI5wPzvmhsyVWsyD1xeYqdsvqsKH1x+UlHHRIPr/HD3BLX5
687dJgDn7/uQeVBBShCuXyu6JXRJrSDcPQyKx3/PfikIV3/tGeeiyaFCcPMv
Lfn+MWiXEFz/uaSnjkLywnD9akslpTr7heHqoeUDXD0Amz30oQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#32"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFlHssW2EYxk9LK2jQnkkQ4rbY1qUjsxFiac1tmetq7bK5hGLZrO7CxGXE
3ZK5llFN3CYEs0gmyLaSosFiwsbMJc1M6cZU1Yhbt4nz9ktOTn55nud93u+P
cyw5ccwoPIIgzH/P/3fmmq9CpUIHVadni16VHOadzUcHkdMjp3fgkloQR7VO
iPK6ahxCAR39OsJtKicDM0V1EZfGDYDTt25wy1b0gftS66K7/fWA/SpYFie1
JODxmmJHa5Eu9HkJ3vvd2tAZPD7jlB4+ZdlaZxB35m8Vp80mBWmDPzSvyvBT
mxZwrGIifHOJCJwVpvFaFyVCXuhZ3nvBhwD9CM1c6JavCf6Y4ODm1C4N8H97
XlvY8QUPflOdR+3KmzjgJ9ephAVTlRDLRzgut4lEh8KTM6Y+dVbFtuyDLqWK
w5WKP8CNS4HDaa67QqyPSvFJClxUgt7j6W5FS1UKsb7h7mvZks4d4LUcQxcv
IwXkB3gXPdbZm6DbyeaVtgIpsPvAgvYxWwL+oxf2xALJPOjx7d37ZHQG9ifm
7jd4Jo7BPuyH1o3TGf3A8pe1kdu1HMiLP86X2Af20bH53IZUnlnnGB2b50wb
6gmomaFjfnyK4WKksQRYixSQw/kthXyuZNYtsXkT+A2/ICBLsQ3+uKZIgx/s
XeDQ6Dqzwpx98CtDii4v6R1Af/GdFCf7+kM6tv9oD6Hsvvcx+DXP8aTPDk6A
N6jrCRxPhIHNn5vIl+fp4xhYvnfvyLUkA8fA/NXWyZWlMhwD62OlcxzqRHjI
c3V/WU0+0AS/ecdoNfEnATi9zy1Qn68F/vhWbq+DrTYwCe/IubKqA/0eMXd5
1EoS6Eb9ZnEe5/WgvyKxqNxuTh+YWeBPE/QaQP6D/PGQhQkZ8tSgPFZLJhn2
QSzFh3wZGfyzUu2mShZFfT82IUUUS2Fg3+vnEeT2TiEF5k237G0zByiQn+Ss
ulLMUdAPclVdvvdQ6LN5ZWxSXIrCfCevhSlSpdrvI6svLKtWcwLNYrdGoOZ3
b22mWjvUzBy1LxgWo9C/Pstw+b6i1s/+h8B/AUjoVgY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#33"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFlAksW3Ecx19L62rQvkkQ5lps61JkNkIsrbmWOVd02RyhWDarW5g4RtyW
zFHHKIlrQjCLZIJsa61osJmwMXOkmSk2hqoRVzeJ9+s/eXn55Pv9/r6/95L3
TNgxzAg8giB+/6/Te/qKp1QuRwUn8tOzSf9QVKYqlqACHHJ6tuiqFjPnBZ9Q
AXLG5Ykh7pk8BbfjEpoRW1QgP8sTItyu6gVRQEe/DXEaS8nATGFN2OVRbeDU
zRuckiUt4N7kmsgub01grzJ/45NqEvBoVaGtmVAD+tzq3nndWlcXHJ9xUjeP
smimDvu3iFKmEwLUwB+cU67zuVUFOFo6FrqxQATOCFF6pYESIc93Le256EGA
foRmxHfKVQZ/VGBgU3KnEvi/P6vOb/+KB7+B+sM22U0c8OPrVMKcgZyP5cNs
F1uFwkM+9v6pT+zl0c37oEuoolCZ9C9ww4LvYIrjLh/ro1I8EnznZaB3uzqb
0pJlfKxvsOtaprhjB3glS8fBTVcK+f6KSy6rrA3QrdZmZZZ1EmDn/jm1Y5YY
/EfPrYl54lnQY9u69snoFOxPzN6vd40fgX1YD8waJtP6gLdeVIdvV7MhL/o4
W2Tt20vH5nPqkysMO0bo2Dx72kC3T9UUHfPjk3Tmw/XEwCoknyz2Hwnks8XT
TvFNG8CveXk+GdJt8Mc0hmv/ZO0CB0fWGOZn7YNfFlRwZUHzAPoL7yTZWdce
0rH9h7sJJffcj8GvfK5C8vTgBHiduhrHdkUY2PyZsdytHC0cA8v37B05FqXh
GJi/0iyRW7yGY2B9/qlsmxohHvIcjd+m4/eVwW/UPlxJ/EUATu118tXiqYA/
toXTY2OpBkzC27ItltWh3yXKr4LKJYGu22cY43JBE/rL4gtKrWa0gJl53rS6
Hm3Iv996NGCsT4Y8NSDHvzmdDPsgJqJD3hoZ/NMStUauP0XxfCxCkjCawsC+
1y9DyO2dfArMm2ze22b2UyA/zl52pBihoB9kyzs976LQZ/5ST7+wGIX5dm5z
EySuwu+xVptfUqngOJrxblWdgt++MZ9oaVcwc9g6b1CEQv/qNMPhx5JCP/tf
Av8DmgBgcA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#34"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFlAksW3Ecx19LSxG0bxKEuRbbuhRZNzKxtOZa5lxNl80RimWzuoWJY8Rt
ydyMkjg6IZhFMkG2tVY02GxhY2akmSk2hqoRVzdJ36//5OXlk+/3+/v+3kve
s+DEsiLxCIKw/l8n94xlb5lCgQqPFSdng/GuuFxTIkWFOOTkbDI0bWZOCz+g
QkTJlUmhnlk8FXfgEvmIAypUKPOESI+LRsEU0NGvw9zmMjIwS1QXfn5MHzht
4yq3dFEPuC+lLqrbVxfYpzzA/LhWB3ispsjBSqQNfR4Nb3yur2kJj5Sc3MOj
LFhpwf6t4tTpxEAS+ENyKw0+tmkAx8jGw9bnicCZoWovtFEi5AXuZb1nvQjQ
j9DMBC556uCPDgpqSelSA/+3J7UFHV/w4DfRut8uv4YDfniZSpgzUQiwfLjD
QptIdCDA3j/1kaMihr8HupQqDpPL/gI3zfsPpTrvCLC+HndXS1qKHPSh7ktZ
ks5tAda3nG3g5GEoA/9A1Tm3FfY66Hars3LbBimw68Ac6YgtAf/hUzoxXzIL
elx79x4ZnYJ9iTl7je4Jo9DPvmfVNJneD7z5rDZiq5YDefH72WK6fx8Dm89t
TKky7RxlYPMcaYM9fjVTDMyPTzb4HmEkAdbQ8cvm/JFCPkcy7ZLQsg78kpfv
lynbAo5tjtD/yd6BfEhUnWlB9h7o8uDCC/O6+9BfdDP5Cr3+gIHtP9JDKL3j
eQR+9VNV0sf7x8Br1JV4jjvCxObPjOdt5urhmFi+d/fQuTgdx8T81VZJFSWr
OCbWF5DGsa8T4SHP1f5tOXFXHfxmHSPVxF8E4LQ+F389ngb441q5vfa2JOjT
wTtwbJa0QHeLvlVFrdABNuw3jXU7owv95QmFZXYzepBn5fvSGnr1gd9uPhg0
NyZDnhqYG8DPIMM+iIX4gLdKBv+0lNRcEUBRPR+bkCyKoTCx7/PzMHJju4AC
8yb5u1usAQrkJzhLzhQzFPT9HEWX920U+qyfGxkXlaAw32u1vqC0WqXH08x3
ahpU+devrD+1dqiYNULPHxKj0LcyzXT6sajSlf9D4H+DKFcZ
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#35"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFlAksW3Ecx19LSxG0bxKEuRbbuhRZNzKxtOZa5lxNl80RimWzuoWJY8Rt
ydyMkjg6IZhFMkG2tVY02GxhY2akmSk2hqoRVzdJ36//5OXlk+/3+/v+3kve
s+DEsiLxCIKw/l8n94xlb5lCgQqPFSdng/GuuFxTIkWFOOTkbDI0bWZOCz+g
QkTJlUmhnlk8FXfgEvmIAypUKPOESI+LRsEU0NGvw9zmMjIwS1QXfn5MHzht
4yq3dFEPuC+lLqrbVxfYpzzA/LhWB3ispsjBSqQNfR4Nb3yur2kJj5Sc3MOj
LFhpwf6t4tTpxEAS+ENyKw0+tmkAx8jGw9bnicCZoWovtFEi5AXuZb1nvQjQ
j9DMBC556uCPDgpqSelSA/+3J7UFHV/w4DfRut8uv4YDfniZSpgzUQiwfLjD
QptIdCDA3j/1kaMihr8HupQqDpPL/gI3zfsPpTrvCLC+HndXS1qKHPSh7ktZ
ks5tAda3nG3g5GEoA/9A1Tm3FfY66Hars3LbBimw68Ac6YgtAf/hUzoxXzIL
elx79x4ZnYJ9iTl7je4Jo9DPvmfVNJneD7z5rDZiq5YDefH72WK6fx8Dm89t
TKky7RxlYPMcaYM9fjVTDMyPTzb4HmEkAdbQ8cvm/JFCPkcy7ZLQsg78kpfv
lynbAo5tjtD/yd6BfEhUnWlB9h7o8uDCC/O6+9BfdDP5Cr3+gIHtP9JDKL3j
eQR+9VNV0sf7x8Br1JV4jjvCxObPjOdt5urhmFi+d/fQuTgdx8T81VZJFSWr
OCbWF5DGsa8T4SHP1f5tOXFXHfxmHSPVxF8E4LQ+F389ngb441q5vfa2JOjT
wTtwbJa0QHeLvlVFrdABNuw3jXU7owv95QmFZXYzepBn5fvSGnr1gd9uPhg0
NyZDnhqYG8DPIMM+iIX4gLdKBv+0lNRcEUBRPR+bkCyKoTCx7/PzMHJju4AC
8yb5u1usAQrkJzhLzhQzFPT9HEWX920U+qyfGxkXlaAw32u1vqC0WqXH08x3
ahpU+devrD+1dqiYNULPHxKj0LcyzXT6sajSlf9D4H+DKFcZ
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#36"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwAmIQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44333uXj+P
N1xw9y47XnmtOJoTbn9cyxTR8yvY4fy8T6cT395lg/PrEpjXcQuzwf23323i
NnUfVrj5DLry+51bWeDqc2NiFpevZYarv9U9s331VSa4ehmujJVfnBjh/GxT
LdbbMv/3w/Qnm99bcfjw7/0w92pVWP3PW/IDLr/wbvCRSsev+2H6nzeK2rhL
fNoPs2/XVA3XF2Fv4fIGL29+0Z/7DM532XWb82/YA7j6P33GbG0PbsLlC1au
/yEofBluP1vzjwVuRSfh9oelKS+8VLMTzv8wY2bKx5lJcP3Hz9zsMg7eYQ8z
P2dB+VTZNSftYeZZ6R7cFDD9sj1MPVOZ6J0UyQdwPsvBTeseNz+G89l5AhqT
3j2zZ4LyXcsmJ73yeAWXb35wzblo8Vu4fRtmtwXUffoI5+cvShF4EvYVrj4u
a5Zse+MPuPyX2A7tu3y/4PKdgWWWxnN+28P8d2wT64RI779w9SwiU5/V//oH
57/RelGY5MbgANN//XTrhxZ+Rge4/kTHmexujHD5bd//OHbVIPjTlEsm979k
dICFT2h1ktmsw0xw+Rzu10rnolgcYPbJrz42je0VK5xfvcM5mH82O1x9wbKc
bWb6nHD7eZjMk/SecsHlXXNDpmpN5oHzJXbK5ruq8MHtn1TUMdHgOj9cf1Cb
v+7cbQJw/r4PmQcVpATh+rWiW0KX1ArC3cOgePz37JeCcPXXnnEumhwqhPBf
GGvZ4Twhh79Q/pWjDF6f24Xg5l1a8v1j0C4huP5zSU8dheSF4fJqSyWlOvsR
fGh5BOcDAM4WB3M=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#37"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwAmIQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44333uXj+P
N1xw9y47XnmtOJoTbn9cyxTR8yvY4fy8T6cT395lg/PrEpjXcQuzwf23323i
NnUfVrj5DLry+51bWeDqc2NiFpevZYarv9U9s331VSa4ehmujJVfnBjh/GxT
LdbbMv/3w/Qnm99bcfjw7/0w92pVWP3PW/IDLr/wbvCRSsev+2H6nzeK2rhL
fNoPs2/XVA3XF2Fv4fIGL29+0Z/7DM532XWb82/YA7j6P33GbG0PbsLlC1au
/yEofBluP1vzjwVuRSfh9oelKS+8VLMTzv8wY2bKx5lJcP3Hz9zsMg7eYQ8z
P2dB+VTZNSftYeZZ6R7cFDD9sj1MPVOZ6J0UyQdwPsvBTeseNz+G89l5AhqT
3j2zZ4LyXcsmJ73yeAWXb35wzblo8Vu4fRtmtwXUffoI5+cvShF4EvYVrj4u
a5Zse+MPuPyX2A7tu3y/4PKdgWWWxnN+28P8d2wT64RI779w9SwiU5/V//oH
57/RelGY5MbgANN//XTrhxZ+Rge4/kTHmexujHD5bd//OHbVIPjTlEsm979k
dICFT2h1ktmsw0xw+Rzu10rnolgcYPbJrz42je0VK5xfvcM5mH82O1x9wbKc
bWb6nHD7eZjMk/SecsHlXXNDpmpN5oHzJXbK5ruq8MHtn1TUMdHgOj9cf1Cb
v+7cbQJw/r4PmQcVpATh+rWiW0KX1ArC3cOgePz37JeCcPXXnnEumhwqhPBf
GGvZ4Twhh79Q/pWjDF6f24Xg5l1a8v1j0C4huP5zSU8dheSF4fJqSyWlOvsR
fGh5BOcDAM4WB3M=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#38"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFlHtMUmEYxg8IeImpcHJTl2nZutColpWr1YAMaF0Ng1Zpy5O1MvJWw5yX
chiobaUSFhBbmbkalc0tZq4Cw2TdmxZmZmORJJaFhMm8UW6c93zb2bffnud9
n/c9f3zzsFzRYTKCILv/fzN36fftHr8fNU/7Z85vztPquhC7EzWTkJnj5oQs
65lrfo2akQBfOnVw61kdwQbSyUYkGTX7A/XUw8KVMRlM0NGPz6QNtQxgkUV7
aMmLSODi3xukNY4I4NZCbXbzznDgHXXihGkNHViof7xj888wmLfJWmQ7uT8U
8g9UXIp6eysYOMfzMnO4nwZcdjDo3iyUBvuZBLXGRduo0B9hx5tSzlHAfyI9
/Ubh3SDwfzqvURo+kME/J+zobe9GEvDx1Sxq3xy/Ca8/lPzllsUyYcLnZZ1e
589p9IHuZFkzvZ6/wNf70zqKeKMmPK9FsGk+u9ALekfzqrP2O39MeN738qj1
wmgP+NvUi/mDkmHQV7h6vcv1TuBNbX2hUxI7+CcvJNEU9l7Q8243+xhoN8xL
k/uuCQqeQ77kSOL1rpKHwO4rmqwRDQb11le91UlprRy8v/RaoTruznMO3m8d
u70l9XI3B/eTZVGfs2LswJT2lnsOuQM4mJ5ajv1ycsgB5stU2NDmIdDldltK
wY1hyLuvU6SWeUaAcxuyIr9JRsF/IFsbpyz3ge7NqFzaHz4OetUu2dqkqxMc
fL/OFmrN3q1T4KfMVjvPjE8D/2QN5mMChIvX97w8566IIHGhPpOnCRaQuLjf
ODbJqy4hgb8+8ZTqoovExf+PuBhbo7WQQZfO+jH/zT4KcLyhs542RAUubk1J
i9AFA+c1SY1rlocC08nJ2LKBMGD+id1qlooOHP0wLpe/IBzy6woqa1f0RACL
FDvZemMk7PPEfaw9IZYB9az9FeLGUgbsh8yzTuhcDPDbnKENKjGT2E9ClVly
mNypAL9/hmz5o2RCv67GsRFRG8FvsAEeMx4FHpf7727fg0LewpsxsVUXUei/
Vtj3jq4i/NtcV5U19QTnsxNGL+sJfvRg4bsmA8GiziRFhxWF+Qdt3PVfHURe
4L0E/z/B3kiG
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#39"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFlHtMUmEYxg8IeImpcHJTl2nZutColpWr1YAMaF0Ng1Zpy5O1MvJWw5yX
chiobaUSFhBbmbkalc0tZq4Cw2TdmxZmZmORJJaFhMm8UW6c93zb2bffnud9
n/c9f3zzsFzRYTKCILv/fzN36fftHr8fNU/7Z85vztPquhC7EzWTkJnj5oQs
65lrfo2akQBfOnVw61kdwQbSyUYkGTX7A/XUw8KVMRlM0NGPz6QNtQxgkUV7
aMmLSODi3xukNY4I4NZCbXbzznDgHXXihGkNHViof7xj888wmLfJWmQ7uT8U
8g9UXIp6eysYOMfzMnO4nwZcdjDo3iyUBvuZBLXGRduo0B9hx5tSzlHAfyI9
/Ubh3SDwfzqvURo+kME/J+zobe9GEvDx1Sxq3xy/Ca8/lPzllsUyYcLnZZ1e
589p9IHuZFkzvZ6/wNf70zqKeKMmPK9FsGk+u9ALekfzqrP2O39MeN738qj1
wmgP+NvUi/mDkmHQV7h6vcv1TuBNbX2hUxI7+CcvJNEU9l7Q8243+xhoN8xL
k/uuCQqeQ77kSOL1rpKHwO4rmqwRDQb11le91UlprRy8v/RaoTruznMO3m8d
u70l9XI3B/eTZVGfs2LswJT2lnsOuQM4mJ5ajv1ycsgB5stU2NDmIdDldltK
wY1hyLuvU6SWeUaAcxuyIr9JRsF/IFsbpyz3ge7NqFzaHz4OetUu2dqkqxMc
fL/OFmrN3q1T4KfMVjvPjE8D/2QN5mMChIvX97w8566IIHGhPpOnCRaQuLjf
ODbJqy4hgb8+8ZTqoovExf+PuBhbo7WQQZfO+jH/zT4KcLyhs542RAUubk1J
i9AFA+c1SY1rlocC08nJ2LKBMGD+id1qlooOHP0wLpe/IBzy6woqa1f0RACL
FDvZemMk7PPEfaw9IZYB9az9FeLGUgbsh8yzTuhcDPDbnKENKjGT2E9ClVly
mNypAL9/hmz5o2RCv67GsRFRG8FvsAEeMx4FHpf7727fg0LewpsxsVUXUei/
Vtj3jq4i/NtcV5U19QTnsxNGL+sJfvRg4bsmA8GiziRFhxWF+Qdt3PVfHURe
4L0E/z/B3kiG
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#40"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwB2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5RfeDT5S6fh1P0z/80ZRG3eJT/th9u2aquH6IuwtXN7g5c0v+nOfwfku
u25z/g17AFf/p8+Yre3BTbh8wcr1PwSFL8PtZ2v+scCt6CTc/rA05YWXanbC
+cfP3OwyDt5hD9NvpXtwU8D0y3A+U5nonRTJB3A+y8FN6x43P4bz2XkCGpPe
PbNngvJdyyYnvfJ4BZdvfnDNuWjxW3uYezfMbguo+/QRzs9flCLwJOwrXH1c
1izZ9sYfcH5nYJml8Zzf9jD3HtvEOiHS+y9cP4vI1Gf1v/7B+W+0XhQmuTE4
wPRfP936oYWf0QGmf9v3P45dNYwOMPXTlEsm979kdICFV2h1ktmsw0xw/Tnc
r5XORbHA+fKrj01je8UK51fvcA7mn80O5xcsy9lmps8Jt4+HyTxJ7ykX3HzX
3JCpWpN54Ooldsrmu6rwweUnFXVMNLjOD+cHtfnrzt0mADdv34fMgwpSgnD9
WtEtoUtqBeH+YVA8/nv2S0G4+mvPOBdNDhVC+C+MtexwnpADLH9dOcrg9bld
CG7epSXfPwbtEoLrP5f01FFIXhgu/6v5/1rfcGG4fWpLJaU6+4Xh5lu6377A
Mxmh3uflnPYJ0xD8Ql2Fr9PnIvh7tqpdWLYawQ86Ztx25Lgw3P4X1xxsHj1G
yEPLNzgfAKhrMUA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#41"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwB2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5RfeDT5S6fh1P0z/80ZRG3eJT/th9u2aquH6IuwtXN7g5c0v+nOfwfku
u25z/g17AFf/p8+Yre3BTbh8wcr1PwSFL8PtZ2v+scCt6CTc/rA05YWXanbC
+cfP3OwyDt5hD9NvpXtwU8D0y3A+U5nonRTJB3A+y8FN6x43P4bz2XkCGpPe
PbNngvJdyyYnvfJ4BZdvfnDNuWjxW3uYezfMbguo+/QRzs9flCLwJOwrXH1c
1izZ9sYfcH5nYJml8Zzf9jD3HtvEOiHS+y9cP4vI1Gf1v/7B+W+0XhQmuTE4
wPRfP936oYWf0QGmf9v3P45dNYwOMPXTlEsm979kdICFV2h1ktmsw0xw/Tnc
r5XORbHA+fKrj01je8UK51fvcA7mn80O5xcsy9lmps8Jt4+HyTxJ7ykX3HzX
3JCpWpN54Ooldsrmu6rwweUnFXVMNLjOD+cHtfnrzt0mADdv34fMgwpSgnD9
WtEtoUtqBeH+YVA8/nv2S0G4+mvPOBdNDhVC+C+MtexwnpADLH9dOcrg9bld
CG7epSXfPwbtEoLrP5f01FFIXhgu/6v5/1rfcGG4fWpLJaU6+4Xh5lu6377A
Mxmh3uflnPYJ0xD8Ql2Fr9PnIvh7tqpdWLYawQ86Ztx25Lgw3P4X1xxsHj1G
yEPLNzgfAKhrMUA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#42"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5RfeDT5S6fh1P0z/80ZRG3eJT/th9u2aquH6IuwtXN7g5c0v+nOfwfku
u25z/g17AFf/p8+Yre3BTbh8wcr1PwSFL8PtZ2v+scCt6CTc/rA05YWXanbC
+cfP3OwyDt5hD9NvpXtwU8D0y3A+U5nonRTJB3A+y8FN6x43P4bz2XkCGpPe
PbNngvJdyyYnvfJ4BZdvfnDNuWjxW3uYezfMbguo+/QRzs9flCLwJOwrXH1c
1izZ9sYfcH5nYJml8Zzf9jD3HtvEOiHS+y9cP4vI1Gf1v/7B+W+0XhQmuTE4
wPRfP936oYWf0QGuP9FxJrsbowNM/bbvfxy7ahjh6qcpl0zuf8noAAu/0Ook
s1mHmeDyOdyvlc5FscD58quPTWN7xQrnV+9wDuafzQ7nFyzL2Wamzwnn8zCZ
J+k95YLzXXNDpmpN5oHzJXbK5ruq8MHtn1TUMdHgOj+cH9Tmrzt3mwDcP/s+
ZB5UkBKE69eKbgldUisI9x+D4vHfs18KwtVfe8a5aHKoEJx/acn3j0G7EPxz
SU8dheSF4eb9av6/1jdcGG6e2lJJqc5+Ybh7LN1vX+CZjFDv83JO+4RpCH6h
rsLX6XMR/D1b1S4sW43gBx0zbjtyXBhu/4trDjaPHiPkoeUZnA8AODUaYA==

          "]]}, Annotation[#, "Charting`Private`Tag$6866389#43"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5RfeDT5S6fh1P0z/80ZRG3eJT/th9u2aquH6IuwtXN7g5c0v+nOfwfku
u25z/g17AFf/p8+Yre3BTbh8wcr1PwSFL8PtZ2v+scCt6CTc/rA05YWXanbC
+cfP3OwyDt5hD9NvpXtwU8D0y3A+U5nonRTJB3A+y8FN6x43P4bz2XkCGpPe
PbNngvJdyyYnvfJ4BZdvfnDNuWjxW3uYezfMbguo+/QRzs9flCLwJOwrXH1c
1izZ9sYfcH5nYJml8Zzf9jD3HtvEOiHS+y9cP4vI1Gf1v/7B+W+0XhQmuTE4
wPRfP936oYWf0QGuP9FxJrsbowNM/bbvfxy7ahjh6qcpl0zuf8noAAu/0Ook
s1mHmeDyOdyvlc5FscD58quPTWN7xQrnV+9wDuafzQ7nFyzL2Wamzwnn8zCZ
J+k95YLzXXNDpmpN5oHzJXbK5ruq8MHtn1TUMdHgOj+cH9Tmrzt3mwDcP/s+
ZB5UkBKE69eKbgldUisI9x+D4vHfs18KwtVfe8a5aHKoEJx/acn3j0G7EPxz
SU8dheSF4eb9av6/1jdcGG6e2lJJqc5+Ybh7LN1vX+CZjFDv83JO+4RpCH6h
rsLX6XMR/D1b1S4sW43gBx0zbjtyXBhu/4trDjaPHiPkoeUZnA8AODUaYA==

          "]]}, Annotation[#, "Charting`Private`Tag$6866389#44"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFlHlIk3Ecxt9NN6+hbm+GiqZlWE08SFIUYzPzIM9mW+SFTY0yb2VmXom3
RR7TiU4jj0QRNQaJSrXZPEjLTGtmpoyW80jzSFG8VsLe737w8vLheZ7v831/
f7yn2fGMKDyCIIz/z/E7c8F3U6FARUeK47NGe1dSoSmVoyIccnzWaZo2U6dE
H1ERouTKlHDvR3wVt+OSmxFHVKRQ5glRnheNQimgo98GYxrLycAMcW3EhRF9
4PS1yzFlMj3gntTa6C5/XWC/Cqb5UQ0JeKS62NFCrAN9nvVv/LxWtEWHSuYI
+JQ5C23Yv2U4TZIcrAX+sLxKg0+tGsBxm6O3V2eJwFnhap06KBHyQo/y7nM+
BOhHrM2Ebvnq4I8NCWlK7VAD//fHNYXtX/HgN9G+27Z1BQd8/xKVMGOiEGL5
CMe5VrF4X4jdP/WBsyKueRf0htnAgTTXbSGWX8gxcPE03BRifX1V590XWaug
2y1Nb9nWy4H7Pgdln3woE2L3c7VvRuuQJRXilfrBU3tigXQa/AltXbtkdBL2
IebuPvdIeg/7sO5YNExk9AIPf5gusQ/soWF5Z+t+QUD1JDCeY/Aj0kgKrN4v
6JTlyoA1SAE57D9yGraPO4fLXvZapmHzc6USt6SmVRr2vS/5BQFZmxvA8Y2R
+r9Y2zAvLLrWtDBnF/St0CKrWd090Iuvc5zs6/Zh/pCAUHbL+xD86ieq5Nl7
R8Ar1MVEtgdCx/JTo/nreXo4Opbv3jlwLcnA0TE/zyKFW7qEo2P3x0xnO9SK
8ZCP0fl9ZixIHfxm7UM84jIBOL3HLVCPrwH+hJaYbgdbLWAS3pFtM68N7B57
o4rKJQEb9prGu5/Vhf6KpKJyuyk9YEaBv3V9tz7s/3b9Xr+5MRny1OA8ZnMm
GfZBTg/v85fI4JfItRq5TArM4z3TeGLFpoDOZBE44jgVfxlErv0tpMD8iead
DUafSh9jz7tSzFDQ93IVHb43Uei3fGFkXFyKQp+T58w4iavy+yzVFZbxVJxo
bb5dXa/i168sx1vaVcwYsi8YGEahf1FCd/kpU+nK/yHwP1HXRjI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#45"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFlHlIk3Ecxt9NN6+hbm+GiqZlWE08SFIUYzPzIM9mW+SFTY0yb2VmXom3
RR7TiU4jj0QRNQaJSrXZPEjLTGtmpoyW80jzSFG8VsLe737w8vLheZ7v831/
f7yn2fGMKDyCIIz/z/E7c8F3U6FARUeK47NGe1dSoSmVoyIccnzWaZo2U6dE
H1ERouTKlHDvR3wVt+OSmxFHVKRQ5glRnheNQimgo98GYxrLycAMcW3EhRF9
4PS1yzFlMj3gntTa6C5/XWC/Cqb5UQ0JeKS62NFCrAN9nvVv/LxWtEWHSuYI
+JQ5C23Yv2U4TZIcrAX+sLxKg0+tGsBxm6O3V2eJwFnhap06KBHyQo/y7nM+
BOhHrM2Ebvnq4I8NCWlK7VAD//fHNYXtX/HgN9G+27Z1BQd8/xKVMGOiEGL5
CMe5VrF4X4jdP/WBsyKueRf0htnAgTTXbSGWX8gxcPE03BRifX1V590XWaug
2y1Nb9nWy4H7Pgdln3woE2L3c7VvRuuQJRXilfrBU3tigXQa/AltXbtkdBL2
IebuPvdIeg/7sO5YNExk9AIPf5gusQ/soWF5Z+t+QUD1JDCeY/Aj0kgKrN4v
6JTlyoA1SAE57D9yGraPO4fLXvZapmHzc6USt6SmVRr2vS/5BQFZmxvA8Y2R
+r9Y2zAvLLrWtDBnF/St0CKrWd090Iuvc5zs6/Zh/pCAUHbL+xD86ieq5Nl7
R8Ar1MVEtgdCx/JTo/nreXo4Opbv3jlwLcnA0TE/zyKFW7qEo2P3x0xnO9SK
8ZCP0fl9ZixIHfxm7UM84jIBOL3HLVCPrwH+hJaYbgdbLWAS3pFtM68N7B57
o4rKJQEb9prGu5/Vhf6KpKJyuyk9YEaBv3V9tz7s/3b9Xr+5MRny1OA8ZnMm
GfZBTg/v85fI4JfItRq5TArM4z3TeGLFpoDOZBE44jgVfxlErv0tpMD8iead
DUafSh9jz7tSzFDQ93IVHb43Uei3fGFkXFyKQp+T58w4iavy+yzVFZbxVJxo
bb5dXa/i168sx1vaVcwYsi8YGEahf1FCd/kpU+nK/yHwP1HXRjI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#46"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFlHlIk3Ecxt9Nt3kMdXszVDQ1w2riQZKiGJuZB3k22yIvdGqUeSsz80q8
LfKYTnQaeSSKqCEkKtVm8yAtMy3NTBkt55HmkaJ4rYS93/3g5eXD8zzf5/v+
/nhNOXHMSDyCIP7/n5N3xqL3llyOio7lJ2ed/q64XE0iQ0U45ORs0NWsps+I
PqIiRMEVyaGejwRKbsMlNSH2qEiuyBMi3S/pB1NBR78NRjeUUYCZ4prwiyM6
wGnrV6JLpdrAPSk1UZ2+WsA+5SyT42oy8EhVkb2ZWBP63Ove+HisaoiOFMzt
ElDnzTRg/+bh1KmkQHXwh+RW6H5qIQHHbo2Grc0RgTNDVTo0USLkhW5l3ee9
CNCPWBoLXfJUwR8TFNSY0q4C/u+PqwvavuLBb6hxt3X7Kg74/mUaYdZQLsTy
4fbzLWLxgRC7f9oDR3ls0x7o9XP+A6nOO0Isv5it6+SutyXE+voqL7gusddA
t1me2baukwH3fQ7IOv1QKsTu51rfrPoRWyLEK/TDp7bEfMkM+ONbO/co6CTs
Q8zZe+6W+B72Yd8xq59I7wUe/jBTbOvfQ8fyjpb9XX5Vk8B4ru6PCH0JsGp/
V4c0RwpMIvtlc/7I6Ng+rlweZ8VjhY7Nz5FMuSQ2rtGx730pyPfL3NoEjmuI
0PnF3oF5IVE1RgXZe6BvBxdazGntg150g+tgW3sA84e6CKW3PY/Ar3qqUpa1
fwy8SltK4LghDCw/PZq3kauNY0A+zLma5IZjYP7u3UPn4nQc+PlmybySZRwD
u09WGseuRowHPVrz99mxAFXIG7cN8YkrBNDTelz8tQUk4Pjm6G47a3VgMt6e
Y7WgAfu4xtyspPHIoOv1GsW5ntOC/vLEwjKbaW1gZr6vZV23DuTfbtzrNzGg
QJ4WmMtqyqDAfojp8IFgmQL+KZl6A49FhXn8Z6QnFhwq6Cw2gSuOVfKXQeT6
3wIqzJ9o2t1k9in1Mc6CM9UYBX0/R97ufQuFfvMX+gZFJSj0ObjPjpN5Sr/X
cm1BKV/JCZYmO1V1Sn79yny8uU3JzCHb/IFhFPqXphhOP6VKXfF/BP4HrS5P
6Q==
          "]]}, Annotation[#, "Charting`Private`Tag$6866389#47"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFlHlIk3Ecxt9Nt3kMdXszVDQ1w2riQZKiGJuZB3k22yIvdGqUeSsz80q8
LfKYTnQaeSSKqCEkKtVm8yAtMy3NTBkt55HmkaJ4rYS93/3g5eXD8zzf5/v+
/nhNOXHMSDyCIP7/n5N3xqL3llyOio7lJ2ed/q64XE0iQ0U45ORs0NWsps+I
PqIiRMEVyaGejwRKbsMlNSH2qEiuyBMi3S/pB1NBR78NRjeUUYCZ4prwiyM6
wGnrV6JLpdrAPSk1UZ2+WsA+5SyT42oy8EhVkb2ZWBP63Ove+HisaoiOFMzt
ElDnzTRg/+bh1KmkQHXwh+RW6H5qIQHHbo2Grc0RgTNDVTo0USLkhW5l3ee9
CNCPWBoLXfJUwR8TFNSY0q4C/u+PqwvavuLBb6hxt3X7Kg74/mUaYdZQLsTy
4fbzLWLxgRC7f9oDR3ls0x7o9XP+A6nOO0Isv5it6+SutyXE+voqL7gusddA
t1me2baukwH3fQ7IOv1QKsTu51rfrPoRWyLEK/TDp7bEfMkM+ONbO/co6CTs
Q8zZe+6W+B72Yd8xq59I7wUe/jBTbOvfQ8fyjpb9XX5Vk8B4ru6PCH0JsGp/
V4c0RwpMIvtlc/7I6Ng+rlweZ8VjhY7Nz5FMuSQ2rtGx730pyPfL3NoEjmuI
0PnF3oF5IVE1RgXZe6BvBxdazGntg150g+tgW3sA84e6CKW3PY/Ar3qqUpa1
fwy8SltK4LghDCw/PZq3kauNY0A+zLma5IZjYP7u3UPn4nQc+PlmybySZRwD
u09WGseuRowHPVrz99mxAFXIG7cN8YkrBNDTelz8tQUk4Pjm6G47a3VgMt6e
Y7WgAfu4xtyspPHIoOv1GsW5ntOC/vLEwjKbaW1gZr6vZV23DuTfbtzrNzGg
QJ4WmMtqyqDAfojp8IFgmQL+KZl6A49FhXn8Z6QnFhwq6Cw2gSuOVfKXQeT6
3wIqzJ9o2t1k9in1Mc6CM9UYBX0/R97ufQuFfvMX+gZFJSj0ObjPjpN5Sr/X
cm1BKV/JCZYmO1V1Sn79yny8uU3JzCHb/IFhFPqXphhOP6VKXfF/BP4HrS5P
6Q==
          "]]}, Annotation[#, "Charting`Private`Tag$6866389#48"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5Z9pHU/88ukbnL/wbvCRSsev+2H2bXJzUdIt/wKXP7LepOHBms/7YfY9
bxS1cZf4BFe/a6qG64uwt3B5g5c3v+jPfQbnu+y6zfk37AFc/Z8+Y7a2Bzfh
8gUr1/8QFL4Mdy9b848FbkUn4faHpSkvvFSzE84/fuZml3HwDnuYfivdg5sC
pl+G85nKRO+kSD6A81kOblr3uPkxnM/OE9CY9O6ZPROU71o2OemVxyt7mPnN
D645Fy1+aw9z74bZbQF1nz7C+fmLUgSehH2FmxeXNUu2vfEHnN8ZWGZpPOc3
3DwWkanP6n/9g8tfP936oYWf0QEmH1qdZDbrMJMDTD6H+7XSuSgWOF9+9bFp
bK9Y4fzqHc7B/LPZ4fyCZTnbzPQ54ebxMJkn6T3lcoCFp2tuyFStyTxw9RI7
ZfNdVfjg8pOKOiYaXOeH6w9q89edu00Azt/3IfOggpQgXL9WdEvoklpBB1h4
MCge/z37pSBc/bVnnIsmhwrBzQ8NYy07nCfkAMtPV44yeH1uF4Kbd2nJ949B
u4Tg+s8lPXUUkheGy/9q/r/WN1wYbp/aUkmpzn5huPmW7rcv8ExGqPd5Oad9
wjQEv1BX4ev0uQj+nq1qF5atRvCDjhm3HTkuDLf/xTUHm0ePEfZByzO4egB/
zDwC
          "]]}, Annotation[#, "Charting`Private`Tag$6866389#49"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5Z9pHU/88ukbnL/wbvCRSsev+2H2bXJzUdIt/wKXP7LepOHBms/7YfY9
bxS1cZf4BFe/a6qG64uwt3B5g5c3v+jPfQbnu+y6zfk37AFc/Z8+Y7a2Bzfh
8gUr1/8QFL4Mdy9b848FbkUn4faHpSkvvFSzE84/fuZml3HwDnuYfivdg5sC
pl+G85nKRO+kSD6A81kOblr3uPkxnM/OE9CY9O6ZPROU71o2OemVxyt7mPnN
D645Fy1+aw9z74bZbQF1nz7C+fmLUgSehH2FmxeXNUu2vfEHnN8ZWGZpPOc3
3DwWkanP6n/9g8tfP936oYWf0QEmH1qdZDbrMJMDTD6H+7XSuSgWOF9+9bFp
bK9Y4fzqHc7B/LPZ4fyCZTnbzPQ54ebxMJkn6T3lcoCFp2tuyFStyTxw9RI7
ZfNdVfjg8pOKOiYaXOeH6w9q89edu00Azt/3IfOggpQgXL9WdEvoklpBB1h4
MCge/z37pSBc/bVnnIsmhwrBzQ8NYy07nCfkAMtPV44yeH1uF4Kbd2nJ949B
u4Tg+s8lPXUUkheGy/9q/r/WN1wYbp/aUkmpzn5huPmW7rcv8ExGqPd5Oad9
wjQEv1BX4ev0uQj+nq1qF5atRvCDjhm3HTkuDLf/xTUHm0ePEfZByzO4egB/
zDwC
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6866389#50"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0.9999998732582596}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.9999998732582596}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5, 5}, {0.9999998732582596, 1.0000000000000004`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox["2"], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]]}]], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           TagBox["x", HoldForm]], 
          RowBox[{
            SqrtBox["2"], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm]}]}, "Abs"], "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm]}]}, "Abs"], "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"]}]}, "Abs"], "2"]}]]}]], 
         "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"]}]}, "Abs"], "2"]}]]}]], 
         "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"]}]}, "Abs"], "2"]}]]}]],
          "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"]}]}, "Abs"], 
                "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "5"], "120"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"]}]}, "Abs"], 
                "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "5"], "120"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "6"], "720"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"]}]}, "Abs"], 
                "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "5"], "120"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "6"], "720"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "7"], "5040"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"]}]}, "Abs"], 
                "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "5"], "120"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "6"], "720"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "7"], "5040"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "8"], "40320"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"]}]}, "Abs"], 
                "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "5"], "120"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "6"], "720"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "7"], "5040"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "8"], "40320"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "9"], "362880"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "10"], "3628800"]}]}, "Abs"], 
                "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "5"], "120"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "6"], "720"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "7"], "5040"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "8"], "40320"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "9"], "362880"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "10"], "3628800"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "10"], "3628800"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "10"], "3628800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "11"], "39916800"]}]}, "Abs"], 
                "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "5"], "120"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "6"], "720"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "7"], "5040"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "8"], "40320"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "9"], "362880"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "10"], "3628800"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "11"], "39916800"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "10"], "3628800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "11"], "39916800"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "10"], "3628800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "11"], "39916800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "12"], "479001600"]}]}, "Abs"], 
                "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "5"], "120"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "6"], "720"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "7"], "5040"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "8"], "40320"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "9"], "362880"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "10"], "3628800"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "11"], "39916800"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "12"], "479001600"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "10"], "3628800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "11"], "39916800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "12"], "479001600"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "10"], "3628800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "11"], "39916800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "12"], "479001600"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "13"], "6227020800"]}]}, "Abs"], 
                "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "5"], "120"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "6"], "720"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "7"], "5040"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "8"], "40320"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "9"], "362880"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "10"], "3628800"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "11"], "39916800"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "12"], "479001600"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "13"], "6227020800"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "10"], "3628800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "11"], "39916800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "12"], "479001600"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "13"], "6227020800"]}]}, "Abs"], 
                "2"]}]]}]]}], 
       RowBox[{
         FractionBox["1", 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "10"], "3628800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "11"], "39916800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "12"], "479001600"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "13"], "6227020800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "14"], "87178291200"]}]}, "Abs"], 
                "2"]}]]}]], "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             TagBox["x", HoldForm]], " ", 
            RowBox[{"(", 
              RowBox[{"1", "+", 
                TagBox["x", HoldForm], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "2"], "2"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "3"], "6"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "4"], "24"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "5"], "120"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "6"], "720"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "7"], "5040"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "8"], "40320"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "9"], "362880"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "10"], "3628800"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "11"], "39916800"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "12"], "479001600"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "13"], "6227020800"], "+", 
                FractionBox[
                 SuperscriptBox[
                  TagBox["x", HoldForm], "14"], "87178291200"]}], ")"}]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                  RowBox[{"Re", "(", 
                    TagBox["x", HoldForm], ")"}]}]]}]], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                TemplateBox[{
                  RowBox[{"1", "+", 
                    TagBox["x", HoldForm], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "2"], "2"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "3"], "6"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "4"], "24"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "5"], "120"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "6"], "720"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "7"], "5040"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "8"], "40320"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "9"], "362880"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "10"], "3628800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "11"], "39916800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "12"], "479001600"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "13"], "6227020800"], "+", 
                    FractionBox[
                    SuperscriptBox[
                    TagBox["x", HoldForm], "14"], "87178291200"]}]}, "Abs"], 
                "2"]}]]}]]}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm], ",", 
               TagBox[#10, HoldForm], ",", 
               TagBox[#11, HoldForm], ",", 
               TagBox[#12, HoldForm], ",", 
               TagBox[#13, HoldForm], ",", 
               TagBox[#14, HoldForm], ",", 
               TagBox[#15, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.768794368530719*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"d2219115-6ff4-4d1e-9959-71d9864f5a0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Out", "[", "19", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76879540199406*^9, 3.768795432420658*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"558759e7-9e56-4051-8b4f-09f164d1be61"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7687977429048*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"d0655063-3067-4370-9bea-35cfdbae5588"]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["LinguisticAssistant",
  DynamicModuleBox[{Typeset`query$$ = "provinces in libya", Typeset`boxes$$ = 
   "None", Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
   Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
   "Online" -> True, "Allowed" -> True, "$TimedOut" -> 
    5.034011`7.153459153701979, "Messages" -> {}}}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
      Dynamic[Typeset`query$$], 
      Dynamic[Typeset`boxes$$], 
      Dynamic[Typeset`allassumptions$$], 
      Dynamic[Typeset`assumptions$$], 
      Dynamic[Typeset`open$$], 
      Dynamic[Typeset`querystate$$]], StandardForm],
    ImageSizeCache->{219., {9., 23.}},
    TrackedSymbols:>{
     Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
      Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
   DynamicModuleValues:>{},
   UndoTrackedVariables:>{Typeset`open$$}],
  BaseStyle->{"Deploy"},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Input",
 CellChangeTimes->{{3.7687977455189867`*^9, 
  3.768797757478353*^9}},ExpressionUUID->"c41af121-0484-46c4-bc0d-\
013ebbc533dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Out", "[", "19", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768797793328047*^9, 3.768797794406974*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"1db8a6ef-d23a-4dd1-9423-c45bc9da69ae"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{0.0004887886056188129, 0.9999998732582596}, {
       0.00076964812902254, 0.9999999259552352}, {0.0008617034642878678, 
       0.9999998732582596}}]},
     Annotation[#, "Charting`Private`Tag$8715395#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQLbJD3MNz3rL9Rfu/7P7//719cJnGDMW0pftla1+d
BPF39ZxIW3h98f79Z3VugPiKizNMFT0X7b/1PPkxiN+xk4Nl4a4F+48ncr4B
8e/ND1zqGDFv/+wb3Z9A/LVnJjo5Ws/e36Pg/x3E91QTqnVgnLr/x8pPf0D8
0/9V8uv7evffFHb6D+KzbFZ9UivVuP/L/Vdg/ocZM1M+zkzav+7RfzA/2PjG
njbHFvvSgutgfmFa9ssjU6bZC/xTBZu3yFLb5+jGmfbs9yb+BPGv8Lxed/Tc
HPuZ6x5+BfHZHqwSPPZ6vv1/4fMfQPw5kaZWyS0L7TnqeF6B+KbOU7MfCy22
/xLk+hDEP6fzdU7ywiX2dyTlroH46WKh5x7rL7M/v8TkBIh/+PueSxt9l9vD
wg8AkWHP+A==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQ7cD//LBQzrH9Rfu/7P7//709//l7Pv6ux/YvWX51
H4g/YUZ00ob7R/cXHN16FMQXSrpRLlh1dL/X6W+nQfzJ2qG9RSJH94ctWHIR
xBf5enHR5XVH9k+oOHUNxJ+6z2+HieeR/dl3im6D+GIdp89OfXx4v8yG5fdB
/OmBHo+/1R7e/86q6DGILyF99Ee4xOH9Gnq3n4H4M5848u3cdGj/s9WvXoL4
Uuv2KUv5Htp/0HfFGxB/Trm1ZfXzg/sdtKXfg/iyjjv87jQe3C/7wPMjiC9/
ZWPlvG0H9ov++PQFxHc+F+Z58Nr+/Qqrzn8H8X2kbL+eXLlnv1Pa1t8gflia
8sJLNTv3t/W9/Avif5gxM+XjzKT9jAwg8MH++JmbXcbBO+yPMF36B5L3qr5T
d2XzbvuitdVg9Wc07xeViuy3bzsnDjavzaHgW1LSAftPHGE/QXz1NwXG3VYH
7U8ISYDtPzG9sGCz0CF7jkcuYPdlOBetvf3qkH2X7IEPIL7FzE+n34cdtjcM
3vgOxOd4X/SK+fBh+4rnmWD/33D5zCGhf8Q+xPMpOHxWzipW15l9xJ51pdxz
EL/qw2dXB/aj9g3fBJ6A3etWkhJSfNT+x/1tD8DhOedLU8b9o/ZJF7jugviv
PpYsrPE+Zv/zLdtNEH+X+9f9E7Yfs/8ksfQKiN81t/TeEuXj9r9e3jsP4kd9
/vpnR/9xe46Na0+B+NqeZdJnfx+3f1fMBU4vf+Z9s3yYfsLe4e1bcHoqMGGU
KJtxwh6W3gBqNo4U
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw103lI03EUAPBZJCEWpoYLL3RleFeiLDW/lmIp5ZF4RmkeUVDLZqYzRUtt
aVZgpBnTTSVQ6VCjwzS/zrxWw6nbfnObRhpOnYbX5tV09X7Rg8eXD++fx/e9
Z5d0/WzqNgqF4vE34Q0k4qvDRDLMxJo2vX4e+cds8CM6ZVjtn/AZbE5/ZKcq
luHSOPcu8DTV/k52pAxbhTT1gtvX3/3YbS3D8QWqr+DHimD/OhWBOxAxAPbi
3NB/YxHYxHFJCjbK3ZGQGEDg8IEDcvDY+coOjTGB/WbtRsFNfq42xYQU5wtm
voMLbfm51jwpPn4/fxwcS4kaa74ixVvWMz/BLuPTvkEeUuwc76ACi2tNdIxe
CS4JcVSDs1PobRVxEnzBsOoX2N4hMbtzToyr3Z4sgAVT7KMzeWJcWmS5DE5r
eLO2x0yMt6iBWjDTt4EmOTmMi+oz1sAZotrQ8pwh7NvYvwHOTOKwYpsHcVZd
ug68rHYO9hSKsGlczSZY52WqPcYV4kNqAz3YsGCNF8QU4FefuKSplj1rMdQv
mJheIR19iVYznNOKkxv1pBeeVaYsViZhChkLqE8oL/GI/IiEkn/1q7zMp9Yv
BehEnoC0tyu/JbxCjKoZq2R/DgKLgJ0XJYh+7tQ62CyVIcZOUnRZu38VTDHo
Sc7USNFNowwNeI5jqXHrIFCZwmoRPKEOajeiyRBaOjgPltOZhSq2DPFFujnw
4L2q011zMmSmLCf/u1fSb14dMYIWPRenyP2w14yy3o+gplbDSXBLmu2LKEs5
ctMOkfOs7wi5djhfjgaczpDz5hrf8tw1KUfsUKYC/Pztg323LRRok5s0Ai6P
r9mcDlYgzXYfAlxaL+zpfq1AZRzeEJgdNtFwZFyB6kxcROC7K6sPeWZKtLyX
IwRnBdKic7KUyJbq0AdOn6V7qxuVyMfRrxvMKAu1iR1Tot/LXnwwq0mU9cF9
FP2/jz9TDfio
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw102tIk1EYB3BTs7JVlmlpWJomBhXCspvKseUFuthSkzKssFkQUU3I1JQa
E1MrvzjNNaOZOWqYpqK0LI4ztZZWuNFwTW173920Wk7TyZx763mzD4fD79v/
+Z/zhGRdScl2d3Nzi/p74E66M1WnF5I4B//upKhf6NVgxk3/AhJX3srsAruG
mtrmz5L4o0T0FszSuVsMSST+xG3rA/dbpew2PxJLUe4A2GfGVfzASeA+Vthn
cNp8ioxHEtjvR8sgeHj5XAi7hcD+Iq4aHOx7NH13DYGFUZIhcHZgffnGmwSW
ifFXsDXi0NSPwwReU9EwCs7dPXWqM5DAHbHbCDCVIOops+hxybdTRnBp2oHt
Jzr0+LVHjIXOc+57VXixHhc3qMbBQm6l6/cxPSZ2bv0J3nwr+sLbTXocJGb9
AjMf3tlztlOH115RT4LjX2mXzafrsKChfRq85Ua6z0PHKN4Yv84B7uZNM+KS
RnBaQIcTfKZUsIys1GLD7WgX2FnB9CrRaXBMpD8F3lXLpfrz1bioXUH76rPm
2dW+KvyCMUPbiz8rTsxR4NK/bYDTz4fWKQtleJb654kaIccmzMKuBb8b0JQz
U18i54Ivia9XBTUq0Nexf963Xd7Kvq9CfQlztB8xcqNWGDUoQttN2z3Xb5gT
oEPJvJN0Xv4GTsKTT3qkFvvQ83jKW5tIPol8HAV2MOeiVxnTRqKl5gG6j17f
jHP80wZkZmimwOFvnseq+g2ot7baBi45v2h96F4jUno4rWDTquOTORIjOmJw
fQcnyp4OdPuakHqlgH6vmXtK2cWDJpTS12ICS7KckjU8E3pc2GwAL2GweVlW
E7p6MF4HlrI4lHeYGY2LyBFwcn5eUdtJMxIUZGrB1SZxvmevGcUqNF/oPoLa
7Y0OM6q9O6QEj6Yqrh2PtCAVX0r/13C5jSsRWVBccNd78Af74onkQQuaaKR6
wJd3BF62e42hvBhvObjesN8qShxD//fnD+Y8HkY=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#5"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw10w0s1GEcB/BjkkahvExYS7YwdZo7o+FZiVGJMFKK3e5sJaXLIZm3w4zu
rkKInGQruSW0cDVPV6Ysm8Q1h3E6rrv/Hd2bOTouzx/P9uzZZ3v2e/b8nu9z
mHI7hmZKIBDImxOt1fNPK8mRSkiHug9G418wcLYxRxKhhALqpY/IKUKn9/Z2
Sii2Dv2MXIfZnch9pYDtcz3DyNKOsagqlgIej7UZQSYxHt/i0RXQozRqFHnE
aM2bCVRAG0KZEPlGBUtus1sBR9ooImRze8ujIaMYzExUTiO3cMupjAYMVqR7
ipGDvcxbXtIwmD92SII8+Y45KyJikLNPuIDMACauVmtymBl8QYbMizPUZrDl
0JzIVSLPX1/ZL3STwzgBSYXsXKBhBfTI4ESYtxY5pnrRoumcDAbNNS0jC/ol
G6mZf+Apx/BVZB+5SEd8JoXs9t5/yPzRywUOuRJIaow1Ip/hT+1ZjxdDWbYS
t4Hta14mFkE7xQbujLYOve2BMdi0WQ2/L1PfHEYfgsvGLcenHnn+M68PGret
qqunquspkIAPFfg6LKrwje0FO77ZnF3jyhsCq9v7Tx4TdEXXjgGpYctcqyzy
3gURAPwtm2bZT1OdxKDp4DpuM0HXGwlTAgyeGO7dVtFFlCUpKEh7iDs0q4qC
hWOAuHRlA5kp/hVCf7EIOCaGNfy8LPepcd/NOkUWeuTVXQF9zhQVcJT14/1M
TbNKJg2qQDXQ4/0e/zFrFumlBm4RnYvIlcyhhMQkNQA5Ewrk037dr2lsNSj1
EMmR3zaURedr1KB18Cr+vi55JbwBDw3oe9L6G7k8qdjCMlkDtOVds8i6wELq
xRoNmD9fgucnxTX/U+13DfDLdcDzNbx+32XGRAs4j2h4/vxn7uW4+2sBaz0d
z6cNl+HT2aoFXIfGb8hhnMxr41AL3JrJg8h5BXcfrExqgTeZ/wVZlnxHFmSr
AzpWcT9yd6FPQqWXDuz8n/9SSAw+
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#6"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw91A9MU0cYAPCuw7q5ooBikK0ThiQa5xQqmSywbwsyCpME54KK043uVcUE
dTV0xsi0qytsbnOIOJFNxp84oQiKY/yR9MAEWOOmA4RRBCwUUP6VvkfB9vXR
ju+BXnK5/PLdXXL3fXeB8iMfKYQCgSBqruPYeEVznh5giJLYbrvdk9DpF9yX
PWdh1Uv16AOrPVZMdjBkb6xaj7YHm2PjDAwpPDPYgPaXFlQJbjBkSXZqE1oX
fnpsTxFDDLoLLeiI9z4NrL7IkIGZawb0vnjJD6npDFGk5/2DPp300B5EMSSk
PLYVXXggl+qOm1t/r/oB+rHaNyLGjyGZxNyNfut4bJGJo8lr4/29aNXh9CUn
+mkSkXHVhNZTN79Y3kwTeVaYGS3aM9RVVkoTveH8EDonJv73R8doosxqGkGv
2VyV5hNJk46YXRPoPwIkW6NFNEldnWxFR3l+43P8vpWwyikG3eYYN5VespLr
/gHTaPnwxxW9yVbySc30DBpCRlq3e04Szv+uE12Xszb6SeIE2eIOcKHT4AWJ
mB0hAW+XudGbRoy2jb8Ok/4sG++61qRTK0+YSYrOxXtr3cOXZxNNZGLQzZv7
USrSmozEyz3voyUVdu/l7cS5YJHG/tsHSgMR8M0KifuDCtpO1hL3Qvx1qezN
Qu/S53HrpVyKzpU/d8vfxu+kO2rAtTD/nQ2NlQk/t8Oz9fliVZjnkBGaFyxU
+fZQq0wQyc3bo7Gy3Kwxw9nOeS8WJ6jllmG40zN/nmhVtnxUNgoNCpa3xtQZ
pSyagOEdo7wdi8JrX5VbQXSB8L6Rp034iqEhwrCLt1d+2qabxVNQWp/M3+eR
QsprMHEa7ilSOPShFZXt3wfOgHnZUxa9X+u+GDY+AyfjvB18vuzbkvr+fApl
r+Tz+dp36LIkQ22H+qtnpvj7fuxb0DNoB2dXDY1eR2WtCZU5oFhfO4le2i++
lqFzQLRWw9eLbW/m+t6lLByU+Yyhjd0vVoQq2bn95U/4etx5KjSzgwWJ4TBf
f8UP2KreLU5oOrp5AP3tdlW49Bcn5FjK+/jzRso8/NqckDJW3IPuWud/n1vM
AWv5mq//tUI91XyMA0pl60AnWM5t1JVw4HNL247+sjuZPfeIg5KDrn/RzZWL
ftr94SysupN3F2258l/Su+pZEG9o+Au98mxJcFD1LBTlt/DvV/F5/O3xN1yw
LCadoD97XyUM2e2CZ//D/0P0n+A=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#7"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJw91A9MU0cYAPC2tDUGVJy6MBRFCEGdMAkydHO7xwaVTJKx4WogYuWtq0ll
UcmokZlBR0F0DjBQtkAXxBEycEppYErduBVaHXP/wA1sCrNKKW2hUEr7HhTa
bnctXnK5/HKXy3f3fXc7yTPvf8RiMBi8/zsafdv+9JBWGhZB1z2/fw5UDZUp
ux7SUP9FkgZ5e6rcENdHw0sJwgHkbkU7t1FJQ8kJmQ7ZeGr4+OdyGjZ31Awi
hyUvq8QlNBRqjv2OnOqLXZsjoKGpx/gXMjmYJXg9nYZfnkz8G7m6vrgndjcN
o8n0UWTzngcFLicFQy0jY8gvUHN3xkYpyOzKfYL8piZive5HCmYIup4ii6+m
CW+1UHBHm3ECWX5MrJZXUvBGuG0SecZ+TyTKpqDi53orcrps3abUSAqOOftn
kJsiBXCNyQ058bI5ZKdSefrxLTfUbjDPI79zmBXRft4NS7SuBeSW8RzthTQ3
nLer3cgqXnpMwnkX9BWe9iBrO/eXGb9fgE5WqBd5JCLu37pnTtjResGHPCXd
cuhwhBNyag/58X2Yj3aOFzhg1GY9tlq+K8PCt8PvqpewiwEzKsxjhWe3+7H3
WfWuV74xwz5LwOqhvNIXSyagzxtwutqw1ss3QpM/4JXqZG6lUQ8ZuDnA2fbO
xY2bHkFvcJ5bvnidVzQIfUHzRbEtwxd7n/vBb/oryTl3wapfS9Cosr96BFb3
aw6TpKyb1D83S7JlTPiSEawE17M1qtsT5RNAF/SasGwpOWsGvcF4MyR1pC3T
Bt6YD7jcOPJ20bd20Hkn4CXOwd6tpANs9fiwlU2V2Z8558HS8Ap2eHPxvq7W
BRCjoLDP3BCGm/hu4K2YwhZV+htSZijQ2zqIfULcGHVJuggOfF2L7cqvenl8
vQe03UzAvvye5GCyYhnQ8DLO130Vpzb3iBdsNBTifLI3y82lHh+osnQv4/ra
YzlH8hiE7a2CJeTRhxUO2QYmwVXtpZB/oFfSrlxkEvl3mS7khthP6mqsTCIx
pQzXl+TdaVM9n0XoKlpmkT/4lHy1cYBF2K8JppHzmmVJp3aHEPxz1BTyyYG2
vftrQghHVqIJ+cN/Ujsi+0OII9fjnuHzTv0Sz3SHENE72UbkwtDpmD/y2MQ2
dbEB11upKKnnKpvotqKCmwO5C0+Boo9NtDU1jSDzDI+Pi2M4xBOpYAh5x837
DVwbh/jpYy1+779m8W/HR3MJA5nfj+OfndRl8rlEWpahD/lA5lHdLimXWP1P
/gNz6rXH
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#8"]& ], 
    TagBox[
     {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw9031M00cYB/CCFAZ00BdgoGMVYYTxImwwCET9HQFkDhbeS2QTRwXMGBtK
BnO8M5SBmaKDosLcAjIyo1sLi7ypnFiBERSiOEpluBqg2PJWXgq0v1/pvCty
yeXyyd3zx3P5Pk78rNg0YxqNFvlqo1PxTLHu466D2XD1tl6/SNTaHXFVc3Xw
TXX9XeTmtrwvPek62H2luwe5jXdZdExJwdnZxl7kvrVb6rphCg4cjRxAnvZf
KjavoyCjjhxGXh216gXFFLTMNBtBNvnW0+JUKgVZ+VP/INu89XGU8BAFNRmC
MWSX9uM18r0UlNx+exzZL/GM1NGGguLBggnk0PXGdxI0JCwZa/8P+VjA89/F
YhIWhPdPIp8gQ5KHLpLwl9rdM8gF8DpHepSESRkOSuSKMuuBSS8StpvcmUOu
Cc8pWiC10LaBtYj8xzBQ7LisheP715Zxf4mMeAc/LZSa09aQN45fey80UwMp
tY8W2f1UkP7rpg1YlCikkOXu/Smry2vQdcBGj9wwEffgu2A1/N6jF/uB0K9E
dnMFMsuWsGdKbfeF2y/DCxIKmy+PF06kqGBkgR67S+AW9pI3D88vGJxDGDky
tArovGmwj0K66n1VDp/pt94/Tiq2y5uE1JZDu8bNdTwZpOGlIqjzvqblMum2
T1wXbrA4I9vmpTs3PCnohJtb9f0PpWd94zqI1/dBXj2t0ZdGtm2ca/tvqoNs
22aM6FL+gpx4XR+WW81XfqQkXmy5TDYakn1tngjesoYe2LmLryJElMGi+vLo
ouUlomPFYOavOT4tTSvElacGZzWmMqd4auJ5nsHp5fraD+fWiEc3NrGTM+oc
fyjdIFKnDf+5eqTCY8JKS4hSNdiVMbmBvj+TRKVkGbuvlX7hcISO2EWTY5vY
COTF2k3iL9Ew9pz7y5P8gzSQYfkntmTwjOq0tRGYf5yHXev8TXWVwgjMAjfs
hHy+f53YGLTcFG0ify5u9vSr2gFc7thhZ1rO7hlKMgEn90fokA+Oj32WsYcO
7M5F4Pxwb/TVmirpoH+RQSI/ep+uPnvfFFg7pWmQ8ztC4qzrzUBMWfo6cq73
mIlz2htg4t1ANc5/c2abv7c5SGF34/weeBrz4wcWFqCqoxPnm2EcwN87bQEY
AWk4/2FfxQvcqxlgXw13Gtm+0zErzMUKMAuH8bz9lF1x0UdiDVpSxvC8xpZH
eV1tY4LDd6eGkLtVX/Ts3skCJTEPB/E8fHo6oamQBaLcNv5Gpjn1k/UKFghq
PdCHPCo3b6xOYAP7eKUY+UnT+lJsFxtI2Nz7yEP86WA2lwNeeNy6h+z6m8PO
yioOOHdPAJELZz551RcH8JJV3cj/A8Eh1BI=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#9"]& ], 
    TagBox[
     {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJw90wtMU1cYB/BbRkWgEwQhIiAM0M2O91OM7h5AwD2Y5VUCqNECDhEEyUSw
MCW48trChMBQBgxkBGMNgguPTncvgjAyBwNRXsJIBuUhj7a0PArt3c5p6UlO
Tn7J98/Jl3O+DzjJIXFaGIax/t/wPGRzYjngUxqZSkh/o6gV3EIv/oHUl0Yu
Plt6Bl2T6pLC8qCRR+xGO6APj8s9+R/SyEFJ4QtoJ/73XTEMGun3NPQl9K/7
IgoJJUYWsK70Qx/Nsg4xF2PkRE70ILTvl0/+GXyNkbu5rcPQPS2Z9Y5/YGRD
L3MM+gurgKQCAUYq+jPeQg/kGrgL+RjpV1g/Cc0Wjch9qjEyerJ5Cvp8x+W8
zRyMPBp9dRr6UrHSpCkeIy9lPZ+FTo25cz8+CCNtbZoXoDPd7VysXTEyePmz
JWgevfX3YVOMnEssW4E++Kik/OA6RSQxK8XQJ8WTfdv5FGHqLJdCX/Zg0sct
KOIGrWwd+itP7YjTKQoi39FVAR3jNdnQ2blFOBy3pqC7IxhhZu5ywpzbjsxM
P0ZdqdsghqPeIQuZPRekkjWiWH8LuWYitCvDR0acEimRuxrdb03xV4mObgp5
NtvkeOB+CXFdpjJHGNY4cUFElCtVFpR+5D/HXiLGKJWv4TRLhnye2FbbeX5U
6lQpJDC0RLhgIOqm6Y1/NT4pGNdVsKc0TnnQuLHX+BWhVOfZF21rBjPbCUpt
UfndWPFdjqa+5+VogVtoG05TO/Hn66WW/F58J3/MoaOZ9eMrfKdeK83kbazZ
lMY6DFY2Z1moyfunlXAWTi1o8jlTb/xS7y/hO/dv0r3bzTkifE3txxU81jcS
Mb7Tv2H1NeemulX8rNrJtbGG02wZ3qRQ+SKPKvNYXMO9NlU+l3DPMjd7A19Z
Ull6Nu/jiT1yvGpI5fzgNG+3n7Zwr2qVu5vpP0R+rsADj6isva9UeFOuxJW+
qvdbZM5d5QRgoIrcRh7+81vRbQMa8PSSI5fZfl1SNE8DkU9kyOFcjue9Ti2Q
m7mMfL6z3t696D1AsqaRE/Xf2fRFaYOMR6+RA8ZHziTY0AEu6EC2ethdtmuB
DuxH65H/cqHLCp7vAicO3ULmtvmFGlTogIHaIOQ0pxFt27jdgOdmhJxSn9ji
6aQLZrJ6ldCfDAV/56qnB3LjEpAZWl4cxxk9wI/cRP+9ofUF1/6pPvg7KR3Z
PymslFnCADoTM9vQjsbeWm3R74Oq6SDk/e2Wyf52ewCX3bAFXZyad8d52ACc
6zsghw7hnXaobDEErSb5G2heom+H12XtBW7pm2vQb4S6tSXhRuDxzBkZ9GDd
ujhEYATSmh+i+ezjzPgYWRmDjH4d5MO/mB3ILzIGY4Exq9BZs0ESijIGFhVD
Euj/AAyU6xI=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#10"]& ], 
    TagBox[
     {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJw9031Mk0ccB/D2edoqtEKBkRQDYQNCtspLJ4jRGJ5jjs4MHe+QQbdJB8wV
lJcN3GQ6CIwKOhGQsoGovIowxuAPBGr2PAjixpQtvMp4sRtQ3pGVIrWldDz3
lF5yuXzyvdxd7n73hjgpJA6h0WghO50cT97XyzY5DCIVV8sNhhdYU2nWCwWb
Qbg8ET4gXSN55B67jRIuDWYE6SLuqQbJNErclWt6SedNX59fGUaJildv9ZHO
bBtyTfkNJaayPZ+SPisSVZ9vQgna+8QA6VjPO/9ob6NEXn3gMOkoZMbxUhFK
OJbLR0mfqE+4mXMeJXpSBBOkfT5Y510RoURklJuCtIv6QkmhH0r435BPk7Yu
Q6x/cEWJRMGCkrQBy792i40SXW74AunlWSt27RpCPPxeuEz67ys/ShuHEUKa
Jl0lXRU92BhWjRCGQJ6KtOTAvr/0yQhRP7OhJn1QJ1TX+SIEZvDbJK3ry+QF
cXbmB/Nekb4qUZ+uuksnYtidOtL25mfuqd+hE6oLYj3pz4u2bVvO0IiCACcD
6YRDfOa4vQGfWOyE/syHERmYrMcRyRL0p4en6ru7dbj0pBa6N5ITZuetxfvj
t6H5Xx01nKvR4B4yA7SS/zhGrXqJ0xcpV06G9nztt4FrdJR7mr0zFT+t4/4G
ynNZtsfe46nwGaPFyrDmyZg13GB0Z8mb/vMRKzgNtjUsDaM7cLQLJgsWxtSe
FUqT3+0cN9NHKHC60VvXvFi5ijFTnnyvWWNlM2han5WtuSNM/d2UR8Q7Vw58
02HKHz8Zy/cKbcd286PuXa1BpYMmI+m2E7F2CpP3cIKyxKtKk7MVI8dTq1dM
/qU8N+iS6j9s93zc22mClpp1bHe/pKpY7kzEBqYxOj7XIDu0/BLbvZ+PJWUO
0iwN1mC0+qPLByYttJi10XnB6Ue8buqwn/WUe1uZ1z8M0GO+WsqM10qU32q3
sSYV5WX+fIpYSAMFM5RH//huLceSDuL6KMucvywuWKADVinl8AyxT1k3AgqP
UT7dXefmXYACbgtVD4nsJaf+KAb4dUQPLRx/JpI4McEnN7agHRt7ZaxFJhDh
VD09fZu5kf+QBaJnN6Ez2o+HWpbvAU7P16HTPZ8xnOP2go7eVejkusQ2H08z
0M2bh/YdCr560NwcsDqmoDnIYbHHrDmw6hqArr//KMPtARsIXu+B9j8bVsIv
5gB5eCu0h80RpD16H6hsuAXN63BI8nexACP/SqGHbUNpcr0F2JAlQBelXi4U
jFqCvcUB0P3PzeT7g7lg/Qs+dEhuoHtFGxcwzrGo/xGdE15z0QqM1rZvkx5R
mlUVh1uDP+dE0P3iWT9rRxtgz2FCu9ba7c8rsAFbS0Pwv16cO7XzUjagU1oH
/T//U+zp
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#11"]& ], 
    TagBox[
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF0wswXFcYAOC1dq9aG6+1M5gYQpp0vCVbr6H3qKykbVpv2tKUbTQkXtVm
K0UaQxDJDGJIRWUGaYYukZrEu+4RitHQBvHakE3FLhLN2qxGsLt1713XmTlz
5pv/zD//efz7BCkhcXQajfbp9sTXQ2axD3zFCEzDlJ0azUs0MKEoAH2IwJ8Y
om7crpIQh5I+BCKVqz24FcPTSp4IgfdFeoO4x45UTefdQKDbwMwQ7rudMd1T
JQgsmC8cxi2sl+VnpiMwqaBgFHekjShx5AwCa82nx3F7XksOtvkSgcUd7Enc
G7lrln387Xqu2Ipxd6VlPjvliEDUYnwO9/kY3dsGHASerbD/B3eAFdfFZYMJ
xUybBdyGMwfuhDxlwla/YRnuiXJPN+EgE8ZJPZdx3wj9sLmiiQlT3sS/wO08
nHRXksWEdJmDHDcWUNJy8DgT8uN9XuGWeE113FtkwJw98DVumpM15n+RAblR
LRu4k6Kja79v1IV/jRuocc9crsgXPaLDNr9ADe7NoQvmQWw6bHmOEd7Liq9X
vq8DzUaXCCdcVXN/i6fBwRNvCJ95154p3qvBXN9WEz7lzogMTFVh57I1hL/y
mKvr7d3EHktI90eywyx4G5jPOmn7dG9N8s11zEtNWmo/EKtU/Ic1akhXz4b2
nfNbwxRa9zXxLkgaXmE0YshRWTbX56i5AtPRmpXV9LKUpaDizukf1Eq2VikL
k7NYPzzdNRK1MNXw66738+6dNfXdtUAa1jQbK6fcUfYOfzFihbLr0rTSpUpK
+UiHWF8VIaGcWt+0bsIZoxzxtV31aGY7ptGeZ+DBdOHh0DZ0J+7t1NMcdG2M
Ml3IfXzSQoLu7Gf0NN+ez5lHd86rxw7KFvwrpcwXlgqWjy2jau3+HMmEf1rt
CpXvTmVe0HnFKuWUmpPGzyLWqPwnTl+3ys9ep+LKLwocZg030C1t/FKw0Ovw
z5uoUuv+ZmbxZx+p0Cc79ZmVSX/cUKMirV/YL34jCKABX60n/7wozzXSAVHa
9y63+660aEkHpG+RDs8QuF/vpYMh7f+I6b3lyCvSBRUK0okGz21HPmcAs0XS
AeKp6NO2TIBOkrYW9Zcjy0ww2UV62I25VngfAd8Wk85o8w81qtQDQ8dJC12m
GHZxb4Hf5eT/Tb2V2OLuog8qUki/Nx585RCLBVIbVYTZdA+B8wILVNduEa5r
/SPDscsAHDy2SZifFFZmX8oGphfJ/nDmeNHbovaAurTXhM3brVL4+w2Bt0xJ
+BE3lNapMgQPL68SvppWUOI6aQRKs1cIjzzR77QMNgbtpmT/heQFOlW1GIPu
9XnC3fKEHhtLE9D+yRzZT1G54TezTIChapIwbd/AZuWSCZhJ+JvwhFS/pjTc
FOTbDpL5BQt+ptYcwDNqJXzgFwvLS0UcIBppIJwl+3j75jnA3aOG8P9TNQpn

       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#12"]& ], 
    TagBox[
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJw90wlMk1ccAPBS6PFBx9HaBBh3N7Y0IKCIUTf7lMNs6rgEF0AHHWwqIqyQ
ojIEHMrlRhTxAFkUGcEhKmRjHJvfgzIaQCDhZtxxVA5BKK0g0H7bd/C95OXl
l/9L/v/33v85SuODYpgMBiP4/4mv+uWsqPpqBMpQTSOGvZH8lsauKi5HIH96
+DnusIOXY376EYHRC4stuKtEsImTgcB7ti1K3AyW3jYjCYF2g8ntuMuVFwYS
wxF4pyW9G/e1Etmz8aMI3MU37sEtS4zN/QwgcL5a1of7U/sT++0/ROBL55kh
3NyOL9QaBIFJ869HcffJQXn7Ihf6/543ifu+046w+71c2Czpeok7tktkKq/j
wl+j/lLh9roobD5cwoU5jlGzuJnOHLnjZS6cU8J53HdT58ZeHObCz+90vsHt
3t/pe17IhftKLFZwK12qq0QTHGgeV6PFfTLzprC7ggM9+rpWcZ9Td0QtjLFh
dXfhJu5LkYZPTARsmDb1sx436ne99qMjLPj+xUSMuB9Xe9T7ihEswtoIx0VE
PEyuMoSGlQuE/8m7m1XZz4Rs/jrhjfZ0ywAeE27j6AnbGJ96pDloAH0iMcKn
b+iF1acYcLqPdOwuMWvEBkPFWtLfehkd90/QoXE60l/vHq9QKDbQeIx063He
MSvPdXSKsvj8Xuxc2Rr6jrJKrIzSqN+iesoPxoJbLhzQogYMfCxJavx8nFyT
NShGxVueeqZPPl5BGVT8VYbwk0OWatoNhR/7zoQu0HafHda4laho+zSMILrQ
SdoJj56uWQh66fyh34ge9HxfT+dTvhjO3RlcJ9nav9e1qSbgdi9tplw4Gm01
SZvDC8iQLqpo/zA54C17uCDZOs+z4qsBl9TLdDy+NNr831At7ZNnimyzMtZo
5wTK9+y8tyHZqsdoW6EqbV0v2ar3tXjmO6kfA+goD3ZcWco0MwArlG+Jkgry
Zw3ANOWQFKlXkYIJWilHKspdPPMNQQ7lsybzTl1hRsCOst/IUMQZJxb4Sk/a
vrL1FnuOBRyo9+70YGlzm9lgZJ10Sp13sFkxBziskpa7DRmJYrjg8TLphPKz
tV5uCEibJb2/L/DaDmNj8OUoaR5zt3T7tDHgtZGu+OPvFJc/TYDNE9K+cccK
xQU8MJRNertgD7Mu/D0QGEbast423vcDU9BpS7pfGMxo1JkCjzayv2/Isq+7
D5oBuxOkuyaQRutAc1AxoSMcdNXftaTWHPgdIv186XSTg7UF2Ly5SfZveGZI
WaoFyFNskP/NUblRPGsB6hrI/zSgQkoLQvhgKvsd4Z6y1eWgBj4o9V0j80mn
D/DtBUAx9paw8y9W1jn5AjDsqCWc+uqoGsMEYHzfCuH/AEgo8RY=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#13"]& ], 
    TagBox[
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF0wlQE1cYB/AQkkCSLVeI5RxMaClFrhYKo6PNUy47tsghoRx1aIrUA4Ti
DC1QoIgiUMshoiMBBwURB5WaGTlj99GUo2JpyyUBOWbQIAgFIpRwJKmb3Wx3
5s3Ob/7f+96bt/t4ouSwY1QKhRL9ZmBvudrZzr8YganoaodWuySoH+j9pvQi
Ak36E6SYNRZ7ZfwcBAaPoSjme+X8hKB4BD5Xqrow04YqWuRCBMqanvVijrVk
MhM/QeDCVFUfZqRiqbHUHYGe9m1/YY4fFqn5PATe3Wc1iFnKHQl+yEFg70bU
MOZTV6QrchUb+j8okmO2ebv2smaCDafPRkxgfny10NdRxoZd3bJpzBlWKWNB
DWwoNZicwfz+NWFW4k9sqPm3UYF51HrfzrJUNlS0es9hLqh0lD2MZMONluxX
mF+Kl421PDa0jUpawhxU/Sj44AILljXVKDFP3r7rySlgwal0y3XMaRKxxaQj
C+5CdmxiNnlUtNqAMuHrEptt3fn1pI+ciWHCKtszasxUJ6M03lljOFpsoMV8
9Nxl7p8NRjCOV6PzaWXfl4sTDOgsGdM5O87wPpvDgNL1FZ3RwLLm9z6lQ9C/
qTPFzQH1O0+DC+9qdE6Kja399p4h5CdqdR778dqFxmEq9B3CvfX4B6sQhApv
KXHbsY7fWT1gAB23cZ+4pOE+OE6B5lrcpz5yoY/badFewl/70CIPp6jRNcJf
+U42yGRbqJpwdyRyxNp7E6XonmWBy3d7tKfrVKiWyG9MhP+Wvn+NzGdzuXuD
rJSk2yucA14KF8l6zzn5qke14v/87+icHRkzqIbI/dvHmWrhNEol8u1iL0b+
tJysT7nTpDLnDJL1jDxVTWDq72R/YYLjjYHv20j3PJEXeYW3CvTz97h1SkKu
DpKmpnGfxVtPC/T9aJ2S+zN5M2RuhITkiv5RCPT7CUgrF80fnBfo++dNj/il
1i4KDIj8Z3F+SLZyhXTyzXiz58I10kdPVtpfyFWRXv2iYNeEySa5fmFo2m6v
qi2yf7eEXhp1SE3W0ywrFDmbGnJ/T/vOL58zNQD6+RGZIp9KGRXov1+crN7V
u8SQdCL7Fb8/mgY2CAeOj8ae5NOBkrBDY/cVxjwdKAj/8QF9rehXBnhCOLPV
L9xUbASuE07zGKU5HjMGUYRT6hObfTyYQKHB/fFQ6MUPWSzgRBih+orcX7DA
a+L/bGjpynSVsoHrFu6ApCMVLuUIKFPhdufsprbGvAVs13BbtdknB7xjAoTL
uIe54ZQOtQk4NIf7UmpBmedTUwCncPdPMTtsQs2AKXFfwvIPu1U3mwFuF+5f
lk907rQxB7cluF1izkXUZZmDWTFuCq9nSzxnDq5n4R5RMG+WR1iArs9xD9St
r4S1W4ARD2I90Yv9Fg4cwKDgdrplbVNYwgHqTvw+Z81+9uaoOSAuA/d/qAg4
kA==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#14"]& ], 
    TagBox[
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJw90wswXFcYAOBr2ZV93YutFPXsttIhHo2WSabNHlVJOiFepW2kWltaRMJo
xzO03iSaxoomVk0RTRlNJZoRobInQ6IilQ5BkVWlVgSxWCXW7rZn7917Zu6c
+eY///+fmfsfJ3FSaCwDw7D3///QvubJvF+eRMAUmapTp1sW4eMdLxyNJWBe
TOYtZEl9Ldc2gIB9s4E9yA+LKoyzRQRM7mX1Iu88XqSW7yHglYXaPmSpV+LC
99YElLjmDCA/ev6jGYxPQMeu7j+Q7bdDJqIxAjrkLA8i1/f49AvncBig1Iwg
O39t1zn7Ow5jhq6NIzeFGzf/eB2H5f0Wk8i77eel8dU4LJHv+hv5qmLgtGse
DplZGzPIr7Vcz1yKw2Hc2WIFcnuaNKElCIenCuWPkbkTIb7PrHBof+jNJeSo
/Wwrv2k+FPg8UOrr1cGnZc18yCHa15CNmel3Rr7gw0XPnf8iN/YrUhJM+fA3
P8kz5COScEdtFQ8Gtkyoke9dKPURdnPhYsY7WuSDNV1HDi1yYGJZkA45tbXa
YlLIgX2ZbXpf7s0Y+TySDW+4T+vNcDZNdcrbAYec1/WOKjhv+aDRFKa/uq33
ydX+6CU5C2prtHrnfGz8M1fAgtv5Or1lB8rbdgUw4eFh0pibg8yv0AROrpA+
cezYpbQrxlClJj1+pqq4eZgB57Sk1fe+sgrmMeAvOtK2nLgm1VtG8AnleInW
8locBtWUj7/uwpyw1ck0lD/zNnkvKFkjM8LQUoo+8Zls7O5Wy3RU3CV9n+5k
w6YMo+J18rCeDN912nO5lm8ctFql8zsqX/F/HLFExz3nx1QeNQrab3dMsDUR
U/T57bNerKKpMTqe3NSyaS4Ykmmp/qz8zdoDKX30fSI+FdYNnrpJW3mxKmal
Skzn994fO+0V1i4y1E+sTau0+6lPZKi3z+12a/CFIZHhPCPV8lGM9RRtU15w
rvipgs7PnxrxS7m0RPtqdVFwzuoK7aT6GLN/Itbp/KgEqV1x7iYdV31Y4irH
t+j+pSGpe72+U4sM97/byjz3wWENnW/yXKXiyy0t7dH+QmUBYQQMDs8Se0u7
GbQTuQsvDhw1oe3QfPdb1hMmMNTPavcLI6pNgeF/p3r8aSKM3QEM85B8ObHN
24MN1ijvfxhStofDAQuUeQwfsfssB4xTbrxxJ2v3r1wAKfufeLfSpYIHLlJ2
F+xltEfyQTRlq5t2Sf4v4YBHedgyDOvU4OAMNb+SlJJyz1ECDGpID/zF7rQJ
MQMz26RDi4LcatrMQB01/7eU8bcdbcyB0RY1n5EF4Q3Z5mB6g3o/Tr3q6nlz
sKwiPaJg11eEW4CXqfc02LCxEtphAboWqX7iWV8LBwGInCPt/IO1Tek3AoBN
kc6eC1zV6QTAZpT0f0JsBWk=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#15"]& ], 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF03lQE1ccB/AQIEiIZJeYDlApUizU1AiVKRQqk0UatFOrCAVnCjgag+MR
QCkNV0E5RLCtB4gQjgqCFosVyx+UQ5tHU0o5JlgpMAik6SBBAilHQw1HkvqS
zXNndnY+8zv2+/54HoKkiHgqhUKJe/nCb1CifJzPwUGyVNthNM7zGMsq9++9
caDP3fUI+nhV9aFEDxysFnEAtOssvfu/TTiIfbehCzqluNPQ7oiDnfFBv0PL
A9P8z23AwVzGg17o3MKp23brGPCa3jcAPe5TNdG3jIGxhC/+gPYfiWBfncdA
f0DBILT6LZDvPImBI9nCEehvU7jammEMXN42/xQ6QlZxbFsvBgpwrgJaQpOF
1z3EAD509G9o5UezwW5NGDjk+PEzaK9vWO+U1WKgInNeBZ3w+ANn/DoGHvOj
ZqBXo79esknHgESboYEunBjv18VhYDBjcgH6NSH3u7ndGHi/tulf6Dp1Vo7S
GwNvNK4uQ/uelcf8ycDApeCxF9CZ88Giq5NMcN5DuAJd4SeavenCBPG/WOmh
W1MrTjUdcAQa+j0DtLVtWtdwykbAzBEbofcXR20xSBigXNFjcm9ZUYCnzAHw
Z9Um76l+tH/vHB1oaDqTxc2VTgpPOmhXrJt8pzt9+PMYexAnN5hM9bITe+Ru
ANxyo8mH86+zBxrsAK4wO3Gp76hmggaytGZnH7G+78CigZB1s6Vh11q899mC
foPZFK67NPSCDbhpNDshNrYu9QdrME366VeSi41DVLBCeq33vHM4gwqMpDfT
T9zV7rYCFNOzwDtZbGD/eIICrEiffo9jO7bZKDWQ/ccCFA0y2ZrU0s9JCzIm
1uuQaycif00PWUaezmHv2uO8hNxe+jb/ebRGatnvOzOq9alWofqH7WP2+mgl
qq9f9qMVKEdR/czdJh3OGkR5aHm6mrDkHqnlPNHHPWuffNmGvFAuES5KBGi+
u3/0kl9kK8+yX1STWup2r4dn2RfE7WwOLxvkWfqpYva40EWJbNPZfH8ybxLZ
jhGeI/hHxaOS5otLBOq9alTPUw6HJtdpkFdsA9teFyzwLPkeVBaEZy8tojxJ
t4TYs+hl1H/4VIXbxRwdctFBcaBf1dqrPJtKVedWDWh+jvP8rCCMQljqI30X
FvKZVoTlfzc8U0quzLxyVKbAv0JGJSznFznMvin/zAbNuzf+doOmtkXObA2N
ZFbaIZ+5I2rx97FH+xjUAMGOKTpyw09dmdsfOhB60vyET0s5JQxilfQOViC1
NWYjsnObWxJ/qyOxRHqIHUnp0DsSGtLFyYXXfEeYhIK0/C/7DteDGDFAOqLg
ALe6BSNaSP+8cLJziytOlJPmxORH1WfhxGnSFI/utcoZnNhOelhlf6skyokY
Iu/Xk/oXixHtToSItFwwFeLkziKm9WZ73XZxLbrCIraSzpr+5GV0FrGTvK//
A7A3Iy0=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#16"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw90g8snGccB/C74+gd4973KsGqahZWiT8hI6tt93aqZtE6lGzzJ+uVZrVr
mcnR0I4VrU2tmJkznaLCbLXIpqpZ7ydXf4qoMIf6v/o7dbicUldufe7e93mT
N28++T7P93meN4+TJCk8gcNisT5+9aLvKasgludNElIU2vt6/ZrII2TQqqSE
hJi9JUAOXqOGlAUklA5PK5Hji5vKtLkkXLf4sxNZPlpwKCqdBO/bO73If2Xo
5vK+JMF1KakfeeBgYsPdRBIGgrsHkLkJQd52sSRYZLkOI/uGrHWcFpPAi5sd
RT7rU/bJrwEk1Nz4aAK5zF60qvEloa713DRyN3sxy9+NhIK1Y/8iv1gq3J/j
QAJ7cHYO2W3At75PQEJmfuAicvTdKX8bUxJEw6nLyAU38x7HbhEgJ1NXkNVS
1XP1JAHs1zVqZLG/y8GshwSwdOMbyM08WSDRSIBJZbAWWTjaIa0uIqD7cOhz
Q37Ca2nenYBn8ck65HCl/MzhHgHk657uIl+bnOjbjhXArMpej5yx9p70xlNr
aFVXGSz3ka78YmcNXGLE4NY0eWJTqBU0tKsNNuGmd6hSX4MHiS8MPlkceWiv
3BL6CncN7inL93NWWkALqn/loMq/T374jA+Zd4yWNVeQU858eDJrdF3XRdVX
0Tzw2DSa42Iuc/pmHxS9NDou5webx/XmoN0z+oKm9/TqpBk06o2+/JnJHQuh
GSzSVhwvanEN4cIWbZa7oyIg1xR2aZ+PialJ+90EWIZnXfTku/KrjcMcbF1P
lq3YkgNs2gf4nzdoP2Dj/Iu33bjjB/QKPd13xm+qXqnUYbulH9FfqN1WMONv
TUY8vHh0E3sx2+bdIFsNdlvpW4FLUavYXstjWs/KBexjbeO83agZBbOfl4U+
ZnkzYzhPbmjaJoRDij16fbMr21XHUx7h/USddb41mHkPe/2n8viNcgme39U3
9q1PRKuI6ZdWpZU6/PZIxPQdcW9vFpcNiZjxHJnNRLzdDLa5pThbol7A86/M
qAJSalax/6jIE1/WbGAnVccL5qI2seMS5Q5Xs7dxX36Y7B2fn3XYpvtLF77e
2cMe6c1dz7FmU8x5IjMkvnIlh2JyqcXKG/2fmlJMv2Nj549m/3GxM1oDIqwr
zLFlnqOmzgn78PzkOmmLrycP97//T1iBN5+Pc0uOn8Rjno/zwPOnSt1KLHFu
e88hKfBNK5wXp1wr8hqxppj/2T/Nu28fJsB5eF6oe2WLgNLRfrB+rv2QPUHt
MPcpOiey9hJB4fvs1KWrWCYoLW3VAq+6JJKkVmgP1m5thLeR1ByznmT+KOko
pMZou9y2s8//Xkh10r60eEKj1wupJtr/AwCj5yc=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#17"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1A9ME1ccB/BSoPwrpfSNSauMKgYnC0hGlGnYWseAZSBWkGYZlEAFM1gV
Ag4wDASECmjYAJlSxsSCRsaUiaSCOPtYhQZkgBBhhaKNjgIiCigC1vb02t7r
JZfLJ9/fn3e55DYL06KSySQSSfD+xp95M/uWMQzAXo8zdzHsBSeS/mj15jqA
KwUfKnGzd6fr014C2DpR0of7n/Iqe40WwPSeDYO4z97wop3XABieHDSMO1nd
DngTAG5jfTOC295v/CP4L4CCjK1juFtOrG/37wYw6P5VlXHf/Y07G9oBHLz2
TG2cdywhvKAOQFWE9DHuwN4i/mIFgMkNXtO4JzZcSkwoAnDjH2kzuPNSlKLh
HwFkdpbPGc/bNZfNTQFQ1pMzj/twvF8Fmwcg5qd+btxvldlECgSQMXJjCXcR
a1YpJgEYWpv4Gve3AYJ5aj8DKicr1nH7RYzQqqsZcIukXYfbNjnsU6aAAQVl
3nrcZ34XDwlWXaEs/LoBN/ivRyStdIWnWSkY7rZ9/rPTvq4w1PO20VEKyaHt
/XTYRnlsdOmUemBNQIf6py+Nzn3xueiXJy5w4Aud0ZIA0fwFpgu86WwwuiNb
ktq6nwavf4YZbW2b0zN2zBn6dpgcWRXDNtRS4ROtyf3nygK9FE4wetXksPq/
I79+5gjd9SZntdUxHno5Qr3B5MvK42OZsQ6wGTOZ7G2XtbnIHk6bHV981m3o
ih18bfbR5XuJC1MU+Nbs/ATra06AAq1I+LXIkYdWyrZF2EKS2SRfT3lwiQ00
mOuPxMU1Zl+1RvnE6dpTLQ/IqP9OpoxZcNtiaexoy8FGMqpP/cR5WJ9usa6/
wJ1HtXiT4/fNr760Qv5hp4/t5CZMTuw/FPjwikKhk2Nm++TswY42rSFfnIq+
e3zvipzonyl0CwpzX5YT57lV83HILH8B5f5zqlc76rXIX92adNDzNaj+bUUA
RaxRoTy9uXXNFYyi81BOrjWEZvSh/fzDXhdHfupEXjxfm7RUK0T9ygFVeUB0
B4eYL2rIrvH4s49DzNvj293GOzfKIerJWW7qJKYG2Y7KKxQ+16L+k5qx4IzG
BeS/6sS8/OUl5DRpEv1//grqj0+VeJwqXEMuO5C1O+A3HYc4r80HNdoTbwwo
H79XsljsYsUl8phc4S6JgswlcpHT/JbB72y4xD7Plt5fKU9tkXM7gqNd6uxQ
ffplkWzXDgc0j0oOFPpNO6I85MjBGp9qKup37/RIC9lKQ/kDt2hSl56G8qqM
0kr/cReu3jxv8JFDF+sAHdVHiff71svoqL5hdOSCs8LiBTafkT9kqS/tiluN
n7X4zmJKN5vliuwTWxzTlGfxmNZBWh3D4BLfb1A4vZfhCdD7eV9issp+Blyd
2eb/N/eN2e8AW3/e6w==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#18"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1HtIU3EUB/A5t+nmam43q0W2zJISTHOUJOZmZgrha6ZFsbKpEbUyVKZm
Wj5aWdJLzTaz1EwUS8MoTJL9bD7QnqSt7IVkPtKVThSX5m653Xt24XL58D3n
/M69f1wXWaIkgUqhUML/3wvPzOHQSRzHUMvSF3M4Pi4qSonddbYUQxl6imnB
dTbJVRQfDH135uIL3iuUjrG7eShQoDKbnhDszZfyUE5Br9kFt5VvpDNclKDX
m419bJdXXuMiWeeM2Y2hXiODHly0KvWv2RKtOm5DtyM6lWMy+8LXLy+NUkek
P46bnTG+TX51gIPSuixWC+Vjd/gc1DZqcVOq+mhD+GJkmLHYlp7WrktZhALm
LQ67Hr3apGIjPm5xd0m+j6vWAT0iHFzWEhaiZ6FhworGUt43Vxb6Q7i6M12X
vJ+J5glvE0j9BeuYyES4VyGu7v5tD6a62SlccuwRTvhAXpHTmxo7cFasbb0D
xkAU8zUhongINIHnaJB/uqQ6X/eeCvlK1pHaqe02kB/b7E7/vBLXkOfF+Xyr
0WrnNGS9e5ovfqLKCK74GtWWHjANHs528gtePqmxIdxcvD5oJOYX5F4/+6Y8
y4bAO5o/M+dj+qH+72UhQ9nfB/nJ2gYjF+uBfRi5xvKdSV0act+Yw64V704/
BU/cVMUbVDLo73zZd1EY1SQi58vLU4ud73eJyHm+Hq2NESU9IrKeqnD6Es/v
B9NaG+sHcgfAduyIbNnvIRGVcJCiUDYaMgp5br8uMOnuLzjvYakyImvSAE6s
jHf8ETMNPnBU7Xw+2wj9+ZGKrcJbcyLyfWhLiofOzJog//Di3EQex0ZM5tEZ
si1qLRUsdxhb83ofTUzWC+o6bjBG6ZC/2kSfvvicISbPz2gKjOKU2oEVnh9p
rgn20H+yWv5kiycT+v17Iwu8WSwwm+oj2zhoddDx3cXuhWzoX/7UOTFo7WIx
+b2vJ1245vWBA5Yowz3KnjhCv/v+vOiqTC7064aYlYXRPMjfVc0YJM1Wv5YN
BvAEGOw/m4s/CN1jtds9/or8KxjMe/bY7W11nTWXdAiVbZ0Y7FMW5nuo5z0G
80d0Yr/vA1Z7HwxeZjBY5xH/N/A/SeiFJA==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#19"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1AtIE3EcB/Btui11ObdTyFDMjFUrS1o1EmMz8wFlmaY9dGFTI2xmmczC
skxbmpGvrJzZw2wUS61FYi/2j5XiA40eSzNjZM63qSgtbV653f12cBwfvr/f
735/Ds5bmhqZRKNQKLv+3/PPM/3hkziOIV7cSxzHf4mupsdvO1eBobynBovV
1BPVFCGGTk9NWLxXIBlmtXCRUThjMT0pdJ27hItc1WaLL99SdEh+c1AAHbcY
63wnqyrmoCc3rNaE+w30+XJQwWerI3XKhJUtLmhwzOq8nm9tJokLav5jdeav
zbKiXjZqNVutFMiGb7uz0Rrc6oYMZXLdTmdUT9iOfvKdPn0h6ie8oyR6yVw5
C5kIt1zPF/ronNAc4dDK1zvCRhyRmbBcU8H97uOIqJT5a1ykajqlPxHrgCiE
P8nFqpaxBQgn6mk8ptz7vM0Hcq+6dTxgwvyjk60HR3sYkGfF29U6YQyYrw0p
rl++nQ45xddLG3TBHvpT4uLuZdTYQf3XgvKL6s802MfD8fDDqS1U8JENfHq3
B64l+xOE3x/odLNaMuef9MePVpvAd3ui3p4KnAb3Z7sFhC6a1JLve1G2Ingg
ZhRyv8GuqbWVRvDWF90O5hgD1P+9ImAoDF2QH3tYZ+JgH2EfRo7pTkhas5Y8
b8whn7sfTj8Hj98oT5wol0J/U1vXJUFUg4icL7uTUeb5qFlEzvP3faOJuP5R
RNbT5G7fEt0NYPs3mtrenF4wkxWRLR0zimiEg+Wl0qGwIchzDPqgtHuj8L7H
FYqIrMkJcGpVosvPmGmoP5Cs9LyYbYJ8SpK3qsd5BvL8XfJNgpuzIvJ8jRp6
0b5tZtt+rmXGszNz0D/CHzguDaGIyfxL64XxXDZVTPZf80kvLRykQh6dKd2o
1NEgj9epVq8vtINc5jS8tH2/vZicH9LdGZe8lA72UjdeYwzRoT6zISiKXcGE
ecdUsvqNax0gZ9GE0jV9juDglN1l/FIWeNFzz9TgZc5i8vuUpOUV+31hgyMV
O30r613A/Njc6OozHOjXGx2qSqO54HZpXyDXCwPP5OA14Xsw2J93331xfiEG
8149471XqW15ZKNA8bbJ1j+gFwf86LWZ+P/Bef8BUYto/g==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#20"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAWIQXfvc99P//8IHznP++f///3v7KSUJ3g2zhQ8sd/4H
5q9mLF7CYC58YKLDfzA/wjj2Nc8poQNrt0D4rKnuRpKxQgf+PYLwe+a1nY/9
Lngg4guEL3zjaM6iiYIHMn5D+Jt8DV481RU8YPgPwg86PCtZ85TAAd//EH7H
3TtnfsQKHDgC5Ve/t82Z8Jj/wGsof5Zxzuv5kvwHfkD5O8pnZa335zvwD8qP
s+OUcH7Ee+A/lM/MWnH0WgmC7zcpVOHfTJ4DDGDwwd597l4/jzdccPllxyuv
FUdzwuXjWqaInl/BDufXJTCv4xZmO8AI5e93m7hN3YcVLs+gK7/fuZUFbl5u
TMzi8rXMcPW3ume2r77KBJeX4cpY+cWJEa4/21SL9bbM//0wfrL5vRWHD//e
D1OvVWH1P2/JD7j8wrvBRyodv8L5zxtFbdwlPu2H2bdrqobri7C3cHmDlze/
6M99Bue77LrN+TfsAVz9nz5jtrYHN+HyBSvX/xAUvrwfFr5szT8WuBWdhLsn
LE154aWanXD+8TM3u4yDd9jD9FvpHtwUMP0ynM9UJnonRfIBnM9ycNO6x82P
4Xx2noDGpHfP7JmgfNeyyUmvPF7B5ZsfXHMuWvzWHubeDbPbAuo+fYTz8xel
CDwJ+wpXH5c1S7a98Qec3xlYZmk857c9zD/HNrFOiPT+i3CPyNRn9b/+wc17
o/WiMMmNwQEmf/1064cWfkYHmH+nKZdM7n/JCJcPrU4ym3WYCc7P4X6tdC6K
Bc6XX31sGtsrVji/eodzMP9sdji/YFnONjN9Trj5PEzmSXpPueDyrrkhU7Um
88D5Ejtl811V+OD8SUUdEw2u88P1B7X5687dJgDna0W3hC6pFYTzrz3jXDQ5
VAiu/1zSU0cheWG4vNpSSanOfgQfWl7A1QMAT23+gg==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#21"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAmIQXfvc99P//8IH9pz6DwTv7aeUJHg3zBY+MPklhL+a
sXgJg7nwgR3fIPwI49jXPKeEDjT/gfBZU92NJGOFDuz4B+H3zGs7H/td8EDD
fwhf+MbRnEUTBQ9chPI3+Rq8eKoreOAdlB90eFay5imBA7+g/I67d878iBU4
wAAGH+yr39vmTHjMD+fPMs55PV+S/8B/qPod5bOy1vvzweX9JoUq/JvJA+e7
z93r5/GG68A/qPplxyuvFUdzwuXjWqaInl/BDufXJTCv4xZmO8AI5e93m7hN
3YcVLs+gK7/fuZUFbn9uTMzi8rXMcPlb3TPbV19lgsv/PtUgEcDDBJeX4cpY
+cWJEW5+5qR/ohszGODy2aZarLdl/u+H6U83Ywn3L/i7H6Y+2fzeisOHf++H
+Uerwup/3pIfcPUL7wYfqXT8uh9m3vNGURt3iU9w/bumari+CHsLlzd4efOL
/txncL7Lrtucf8MewNX/6TNma3twEy5fsHL9D0Hhy3D72Zp/LHArOgm3PyxN
eeGlmp1w/vEzN7uMg3fYw/Rb6R7cFDD9MpzPVCZ6J0XyAZzPcnDTusfNj+F8
dp6AxqR3z+yZoHzXsslJrzxeweWbH1xzLlr81h7m3g2z2wLqPn2E8/MXpQg8
CfsKVx+XNUu2vfEHnN8ZWGZpPOe3Pcy9LCJTn9X/+geXv3669UMLP6MDjB9a
nWQ26zATnJ/D/VrpXBQLnC+/+tg0tlescH71Dudg/tnsDjDzC5blbDPT54TL
8zCZJ+k95XKAhadrbshUrck8cHmJnbL5rip8cP2TijomGlznh/OD2vx1524T
gOvXim4JXVIrCNd/7RnnosmhQnD155KeOgrJC8Pl1ZZKSnX2C8PloeUBXB4A
T3PouA==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#22"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBwA2IQXfvc99P//8IHiv7+B4L39lNKErwbZgsf+P4Pwl/N
WLyEwVz4wLT/EH6EcexrnlNCB25D+ayp7kaSsUIHPkH5PfPazsd+FzzwG8oX
vnE0Z9FEwQP/oPxNvgYvnuoKHvgL5QcdnpWseUrgAAMYfLCvfm+bM+ExP5y/
o3xW1np/Pjjfb1Kowr+ZPAf+Q/W7z93r5/GGC27+suOV14qjOeHq41qmiJ5f
wQ7n1yUwr+MWZjvACOXvd5u4Td2HFS7PoCu/37mVBW5ebkzM4vK1zHD1t7pn
tq++ygRXL8OVsfKLEyPcPdmmWqy3Zf7vh/kv2fzeisOHf++HmadVYfU/b8mP
/TD1C+8GH6l0/LofZt7zRlEbd4lP+2H27Zqq4foi7C1c3uDlzS/6c5/B+bsu
RtWLVT2G2+ey6zbn37AH+5mg8n/6jNnaHtyEqy9Yuf6HoPBluHvYmn8scCs6
CXdPWJrywks1O+H842dudhkH77CH6bfSPbgpYPplOJ+pTPROiuQDOJ/l4KZ1
j5sfw/nsPAGNSe+e2cPc41o2OemVxyt7mPnND645Fy1+aw/z74bZbQF1nz7C
+fmLUgSehH2FmxeXNUu2vfEHXP5LbIf2Xb5fcPnOwDJL4zm/4eYf28Q6IdL7
L1w9i8jUZ/W//sH5b7ReFCa5MTjA9F8/3fqhhZ/RAaZ/2/c/jl01jA4w9dOU
Syb3v2R0gIVfaHWS2azDTHD9Odyvlc5FscDVy68+No3tFStcvnqHczD/bHY4
v2BZzjYzfU44n4fJPEnvKRfcftfckKlak3ng8hI7ZfNdVfjg8pOKOiYaXOeH
84Pa/HXnbhOA87WiW0KX1ArC+deecS6aHCoEN+9c0lNHIXlhuHtTij9917dG
8H81/1/rGy4MV6+2VFKqsx/BDzpm3HbkOIIPLU/gfACQhARk
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#23"]& ], 
    TagBox[
     {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBwA2IQXfvc99P//8IHHv0Hgff2U0oSvBtmCx/4AuWvZixe
wmAufOA3lB9hHPua55TQgX9QPmuqu5FkrNABBjD4YN8zr+187HfBA/+h8sI3
juYsmigIlw86PCtZ85QAnF/93jZnwmN+OH9H+ays9f58cL7fpFCFfzN54Hz3
uXv9PN5wwc1fdrzyWnE0J5wf1zJF9PwKdrj6ugTmddzCbHA+g678fudWFrj7
c2NiFpevZYbL3+qe2b76KtMBRij/96kGiQAeBF+GK2PlFydGuPpsUy3W2zL/
98PsTza/t+Lw4d/7YeZrVVj9z1vyAy6/8G7wkUrHr/th+p83itq4S3zaDzN/
11QN1xdhb+HyBi9vftGf+wzO33Uxql6s6vH+v1DzXHbd5vwb9mA/E1T+T58x
W9uDm3D1BSvX/xAUvgx3D1vzjwVuRSfh7glLU154qWYnnH/8zM0u4+Ad9jD9
VroHNwVMvwznM5WJ3kmRfADnsxzctO5x82M4n50noDHp3TN7mHtcyyYnvfJ4
ZQ8zv/nBNeeixW/tYf7dMLstoO7TRzg/f1GKwJOwr3Dz4rJmybY3/oDLf4nt
0L7L9wsu3xlYZmk85zfc/GObWCdEev+Fq2cRmfqs/tc/OP+N1ovCJDcGB5j+
66dbP7TwMzrA9Sc6zmR3Y3SAqd/2/Y9jVw0jXP005ZLJ/S8ZHWDhGVqdZDbr
MBNcPof7tdK5KBa4fvnVx6axvWKFy1fvcA7mn80Oly9YlrPNTJ8TLs/DZJ6k
95QL7h7X3JCpWpN54PISO2XzXVX44PKTijomGlznh/OD2vx1524TgLtv34fM
gwpSgnD7tKJbQpfUIvgMisd/z36J4F97xrlocqgQ3LxLS75/DNqF4J9Leuoo
JC8Md4/aUkmpzn4EH1qewPkApvLykQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#24"]& ], 
    TagBox[
     {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBmIQXfvc99P//8IH/oPBe/spJQneDbOFDzCAwQf71YzF
SxjMEXzWVHcjyVghOF/4xtGcRRMF4fygw7OSNU8JwPnV721zJjzmh5u/o3xW
1np/Pri836RQhX8zeeDy7nP3+nm84TrwD8pfdrzyWnE0J1x9XMsU0fMr2OHq
8z6dTnx7lw3Or0tgXsctzHaAEap+v9vEbeo+rHD9DLry+51bWeDm58bELC5f
ywxXf6t7Zvvqq0xw9TJcGSu/ODHC+dmmWqy3Zf7vh9mXbH5vxeHDv/fDzNOq
sPqft+QHXP6Z1vHEL5++wfkL7wYfqXT8uh9m3yY3FyXd8i9w+SPrTRoerPm8
H2bf80ZRG3eJT3D1u6ZquL4IewuXN3h584v+3Gdwvsuu25x/wx7A1f/pM2Zr
e3ATLl+wcv0PQeHLcPeyNf9Y4FZ0Em5/WJrywks1O+H842dudhkH77CH6bfS
PbgpYPplOJ+pTPROiuQDOJ/l4KZ1j5sfw/nsPAGNSe+e2TNB+a5lk5Neebyy
h5nf/OCac9Hit/Yw926Y3RZQ9+kjnJ+/KEXgSdhXuHlxWbNk2xt/wPmdgWWW
xnN+w81jEZn6rP7XP7j89dOtH1r4GR1g8qHVSWazDjM5wORzuF8rnYticYDZ
J7/62DS2V6xw+eodzsH8s9nh/IJlOdvM9Dnh5vEwmSfpPeWC81dsP1qts4cb
rt41N2Sq1mQeuPl6wpZMO6J54XyJnbL5rip8cP3uAtmXF0Uh+GXpO8wZJvI5
wOLrqmgww+6/fHDzJxV1TDS4zg+XD2rz1527TQCuXyu6JXRJrSBc/bVnnIsm
hwrB5c8lPXUUkheGy6stlZTq7EfwoeUDnA8AU7bpfg==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#25"]& ], 
    TagBox[
     {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCwA2IQXfvc99P//8IH/oPBe/spJQneDbOFDzCAwQf71YzF
SxjMEXzWVHcjyVghuHrhG0dzFk0UhMsHHZ6VrHlKAC5f/d42Z8Jjfrj8jvJZ
Wev9+eB8v0mhCv9m8sD57nP3+nm84YLrX3a88lpxNCecH9cyRfT8CnY4P+/T
6cS3d9kO/IPy6xKY13ELsx1ghJq3323iNnUfVrj5DLry+51bWeD6c2NiFpev
ZYarv9U9s331VSa4ehmujJVfnBjh/GxTLdbbMv/3w/Qnm99bcfjw7/0w+7Uq
rP7nLfkBl3+mdTzxy6dvcP7Cu8FHKh2/7ofZt8nNRUm3/Atc/sh6k4YHaz7v
h9n3vFHUxl3iE1z9rqkari/C3sLlDV7e/KI/9xmc77LrNuffsAdw9X/6jNna
HtyEyxesXP9DUPgy3L1szT8WuBWdhNsflqa88FLNTjj/+JmbXcbBO+xh+q10
D24KmH4ZzmcqE72TIvkAzmc5uGnd4+bHcD47T0Bj0rtn9kxQvmvZ5KRXHq/s
YeY3P7jmXLT4rT3MvRtmtwXUffoI5+cvShF4EvYVbl5c1izZ9sYfcH5nYJml
8ZzfcPNYRKY+q//1Dy5//XTrhxZ+RgeYfGh1ktmsw0wOMPkc7tdK56JYHGD2
ya8+No3tFStcvnqHczD/bHY4v2BZzjYzfU64eTxM5kl6T7ng8q65IVO1JvPA
+RI7ZfNdVfjg6icVdUw0uM7vAAv/oDZ/3bnbBODqtaJbQpfUCsLdc+0Z56LJ
oUJw+XNJTx2F5IXh8mpLJaU6+4Xh5kPzM5wPAM3qySM=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#26"]& ], 
    TagBox[
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQXfvc99P//8IHGMDgg/2UkgTvhtkI/mrG4iUM5gg+
a6q7kWSsEJwvfONozqKJgnB+0OFZyZqnBA78B4P39h1375z5ESsAl69+b5sz
4TH/AUYof5Zxzuv5kvwH/kHV7yiflbXenw+un5m14ui1El64fr9JoQr/ZvLA
+e5z9/p5vOGC6192vPJacTQnXH9cyxTR8yvY4fy8T6cT395lg/PrEpjXcQuz
wd2z323iNnUfVrj5DLry+51bWeDqc2NiFpevZYarv9U9s331VSa4ehmujJVf
nBjh/GxTLdbbMv/3w/Qnm99bcfjw7/0w92pVWP3PW/IDLv9M63jil0/f4PyF
d4OPVDp+3Q+zb5Obi5Ju+Re4/JH1Jg0P1nzeD7PveaOojbvEJ7j6XVM1XF+E
vYXLG7y8+UV/7jM432XXbc6/YQ/g6v/0GbO1PbgJly9Yuf6HoPBluHvZmn8s
cCs6Cbc/LE154aWanXD+8TM3u4yDd9jD9FvpHtwUMP0ynM9UJnonRfIBnM/O
E9CY9O6ZPcz+5gfXnIsWv4XzN8xuC6j79BGuPn9RisCTsK9wflzWLNn2xh9w
9V9iO7Tv8v2Cy3cGllkaz/ltD3PfsU2sEyK9/8LVs4hMfVb/6x9c/fXTrR9a
+BkdYOpDq5PMZh1mcoDJ53C/VjoXxeIA0y+/+tg0tlescPnqHc7B/LPZ4fyC
ZTnbzPQ54XweJvMkvadccPNdc0Omak3mgctL7JTNd1Xhc4CF96SijokG1/nh
/KA2f9252wTg+rWiW0KX1ArC9V97xrlocqgQXP5c0lNHIXlhuLzaUkmpzn5h
uDw0/8PlAcE62EY=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#27"]& ], 
    TagBox[
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBWIQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDOYLPmupuJBkrBOcL3zias2iiIJwf
dHhWsuYpATi/+r1tzoTH/HD7ZhnnvJ4vyX/gP9Q9O8pnZa3354PzmVkrjl4r
4YXr95sUqvBvJg+c7z53r5/HGy64+mXHK68VR3PC+XEtU0TPr2CH8/M+nU58
e5cNzq9LYF7HLcwGd89+t4nb1H1Y4eYz6Mrvd25lgavPjYlZXL6WGa7+VvfM
9tVXmeDqZbgyVn5xYoTzs021WG/L/N8P059sfm/F4cO/98PCX6vC6n/ekh9w
+WdaxxO/fPoG5y+8G3yk0vHrfph9m9xclHTLv8Dlj6w3aXiw5vN+mH3PG0Vt
3CU+wdXvmqrh+iLsLVze4OXNL/pzn8H5Lrtuc/4NewBX/6fPmK3twU24fMHK
9T8EhS/D3cvW/GOBW9FJuP1hacoLL9XshPOPn7nZZRy8wx6m30r34KaA6Zfh
fKYy0Tspkg/gfHaegMakd8/sYfY3P7jmXLT4LZy/YXZbQN2nj3D1+YtSBJ6E
fYXz47JmybY3/oCr/xLboX2X7xdcvjOwzNJ4zm97mPuObWKdEOn9F66eRWTq
s/pf/+Dqr59u/dDCz+gAUx9anWQ26zCTA0w+h/u10rkoFgeYfvnVx6axvWKF
86t3OAfzz2aHqy9YlrPNTJ8Tbh4Pk3mS3lMuON81N2Sq1mQeuHqJnbL5rip8
cPlJRR0TDa7zO8DCP6jNX3fuNgG4/L4PmQcVpATh9mtFt4QuqUXwGRSP/579
UhCu/tozzkWTQ4Xg/EtLvn8M2iUEt/9c0lNHIXlhuH61pZJSnf3CcHlo+QHX
DwB4WPeu
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#28"]& ], 
    TagBox[
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAWIQXfvc99P//8IH/oPBe/spJQneDbOFDzCAwQf71YzF
SxjMEXzWVHcjyVghOF/4xtGcRRMF4fygw7OSNU8JwPnV721zJjzmP8AI5e8o
n5W13p8PLu83KVTh30weON997l4/jzdcB/5B3bPseOW14mhOuPviWqaInl/B
DufnfTqd+PYuG5xfl8C8jluYDW7ffreJ29R9WOHmM+jK73duZYGrz42JWVy+
lhmu/lb3zPbVV5ng6mW4MlZ+cWKE87NNtVhvy/zfD9OfbH5vxeHDv/fD3KtV
YfU/b8kPuPwzreOJXz59g/MX3g0+Uun4dT/Mvk1uLkq65V/g8kfWmzQ8WPN5
P8y+542iNu4Sn+Dqd03VcH0R9hYub/Dy5hf9uc/gfJddtzn/hj2Aq//TZ8zW
9uAmXL5g5fofgsKX4e5la/6xwK3oJNz+sDTlhZdqdsL5H2bMTPk4Mwmu//iZ
m13GwTvsYebnLCifKrvmpD3MPCvdg5sCpl+2h6lnKhO9kyL5AM5nObhp3ePm
x3A+O09AY9K7Z/ZMUL5r2eSkVx6v4PLND645Fy1+C7dvw+y2gLpPH+H8/EUp
Ak/CvsLVx2XNkm1v/AHndwaWWRrP+W0P8w+LyNRn9b/+weWvn2790MLP6ACT
D61OMpt1mMkBJp/D/VrpXBQLnC+/+tg0tlesDjD7q3c4B/PPZofLFyzL2Wam
zwnn8zCZJ+k95XKAhY9rbshUrck8cHmJnbL5rip8cPlJRR0TDa7zw90T1Oav
O3ebAFy9VnRL6JJaQbj9155xLpocKgSXP5f01FFIXhjO/9X8f61vuDBcvdpS
SanOfmG4fXu2ql1YthohH3TMuO3IcYT8i2sONo8eI+Sh5QXcfAC0eN2W
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#29"]& ], 
    TagBox[
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwBGIQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FISbF3R4VrLmKQG4fPV725wJj/nh/B3ls7LW+/PB+X6TQhX+zeSB809N7zRX
PswNt8997l4/jzdcB/5C+WWbZgvdU+aC27fseOW14mhOuPq4limi51eww/l5
n04nvr3LBufXJTCv4xZmg+vf7zZxm7oPK9x+Bl35/c6tLHD1uTExi8vXMsPV
3+qe2b76KhNcvQxXxsovToxwfrapFuttmf/7YfqTze+tOHz4935Y+GtVWP3P
W/IDLv9M63jil0/f4PyFd4OPVDp+3Q+zb5Obi5Ju+Re4/JH1Jg0P1nzeD7Pv
eaOojbvEJ7j6XVM1XF+EvYXLG7y8+UV/7jM432XXbc6/YQ/g6v/0GbO1PbgJ
ly9Yuf6HoPBluHvZmn8scCs6Cbc/LE154aWanXD+hxkzUz7OTILrP37mZpdx
8A57mPk5C8qnyq45aQ8zz0r34KaA6ZftYeqZykTvpEg+gPNZDm5a97j5MZzP
zhPQmPTumT0TlO9aNjnplccruHzzg2vORYvfwu3bMLstoO7TRzg/f1GKwJOw
r3D1cVmzZNsbf8D5nYFllsZzftvD/MMiMvVZ/a9/cPnrp1s/tPAzOsDkQ6uT
zGYdZnKAyedwv1Y6F8UC58uvPjaN7RWrA8z+6h3Owfyz2eHyBctytpnpc8L5
PEzmSXpPuRxg4eOaGzJVazIPXF5ip2y+qwofXH5SUcdEg+v8cH5Qm7/u3G0C
cPft+5B5UEFKEK5fK7oldEmtINw9DIrHf89+iZC/9oxz0eRQIbh5l5Z8/xi0
Swgufy7pqaOQvDBc/6/m/2t9wxF8taWSUp39wnD1QceM244cR8hDyx+4PAAi
WQJ9
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#30"]& ], 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQXfvc99P//8IH/v0Hgff2HHrX5Q6cFT7AyAACH+yn
lCR4N8wWPsAA5a9mLF7CYC584D9UPWuqu5FkrBCc3zOv7Xzsd0E4X/jG0ZxF
EwXh5m3yNXjxVFcQbl/Q4VnJmqcE4OZXv7fNmfCYH87fUT4ra70/H5zvNylU
4d9MHjj/1PROc+XD3HD73Ofu9fN4w3XgL5Rftmm20D1lLrj9y45XXiuO5oSr
j2uZInp+BTucn/fpdOLbu2xwfl0C8zpuYTa4/v1uE7ep+7DC7WfQld/v3MoC
V58bE7O4fC0zXP2t7pntq68ywdXLcGWs/OLECOdnm2qx3pb5vx+mP9n83orD
h3/vh4WPVoXV/7wlP+Dyz7SOJ3759A3OX3g3+Eil49f98PB1c1HSLf8Clz+y
3qThwZrP+2H2PW8UtXGX+ARXv2uqhuuLsLdweYOXN7/oz30G57vsus35N+wB
XP2fPmO2tgc34fIFK9f/EBS+DHcvW/OPBW5FJ+H2h6UpL7xUsxPO/zBjZsrH
mUlw/cfP3OwyDt5hDzM/Z0H5VNk1J+1h5lnpHtwUMP2yPUw9U5nonRTJB3A+
O09AY9K7Z3D9zQ+uORctfgvnb5jdFlD36SNcff6iFIEnYV/h/LisWbLtjT/g
/M7AMkvjOb/tYe5lEZn6rP7XP7j89dOtH1r4GR1g8qHVSWazDjM5wORzuF8r
nYtigfPlVx+bxvaK1QHmnuodzsH8s9nh8gXLcraZ6XPC+TxM5kl6T7kcYP53
zQ2ZqjWZBy4vsVM231WFDy4/qahjosF1frh7gtr8deduE4Dz933IPKggJQjX
rxXdErqkVhDuHgbF479nvxSEq7/2jHPR5FAhOP/Sku8fg3YJwfWfS3rqKCQv
DNf/q/n/Wt9wBF9tqaRUZ78wXH2hrsLX6XMR/D1b1S4sW43gBx0zbjtyXBju
nwqu7Z9Pn0OYN9fPKvHyVYT6F9ccbB49RvCN4t3FP34UhrsXWp7B5QFFwz38

       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#31"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBmIQXfvc99P//8IH/v4Hgff2U0oSvBtmCx9gAIMP9qsZ
i5cwmAsf+A+VZ011N5KMFYLzhW8czVk0URCuPujwrGTNUwJwfvV725wJj/nh
/B3ls7LW+/PB+X6TQhX+zeSB809N7zRXPswNN9997l4/jzdccPeVbZotdE+Z
6wAjVP2y45XXiqM54erjWqaInl/BDufnfTqd+PYuG5xfl8C8jluYDa5/v9vE
beo+rHD7GXTl9zu3ssDV58bELC5fywxXf6t7Zvvqq0xw9TJcGSu/ODHC+dmm
Wqy3Zf7vh+lPNr+34vDh3/v/QflaFVb/85b8gMs/0zqe+OXTNzh/4d3gI5WO
X/fD7Nvk5qKkW/4FLn9kvUnDgzWf98Pse94oauMu8QmuftdUDdcXYW/h8gYv
b37Rn/sMznfZdZvzb9gDuPo/fcZsbQ9uwuULVq7/ISh8Ge5etuYfC9yKTsLt
D0tTXnipZiec/2HGzJSPM5Pg+o+fudllHLzDHmZ+zoLyqbJrTtrDzLPSPbgp
YPple5h6pjLROymSD+B8dp6AxqR3z+D6mx9ccy5a/BbO3zC7LaDu00e4+vxF
KQJPwr7C+XFZs2TbG3/A+Z2BZZbGc37bw9zLIjL1Wf2vf3D566dbP7TwMzrA
5EOrk8xmHWZygMnncL9WOhfFAufLrz42je0VqwPMPdU7nIP5Z7PD5QuW5Wwz
0+eE83mYzJP0nnI5wPzvmhsyVWsyD1xeYqdsvqsKH1x+UlHHRIPr/HD3BLX5
687dJgDn7/uQeVBBShCuXyu6JXRJrSDcPQyKx3/PfikIV3/tGeeiyaFCcPMv
Lfn+MWiXEFz/uaSnjkLywnD9akslpTr7heHqoeUDXD0Amz30oQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#32"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFlHssW2EYxk9LK2jQnkkQ4rbY1qUjsxFiac1tmetq7bK5hGLZrO7CxGXE
3ZK5llFN3CYEs0gmyLaSosFiwsbMJc1M6cZU1Yhbt4nz9ktOTn55nud93u+P
cyw5ccwoPIIgzH/P/3fmmq9CpUIHVadni16VHOadzUcHkdMjp3fgkloQR7VO
iPK6ahxCAR39OsJtKicDM0V1EZfGDYDTt25wy1b0gftS66K7/fWA/SpYFie1
JODxmmJHa5Eu9HkJ3vvd2tAZPD7jlB4+ZdlaZxB35m8Vp80mBWmDPzSvyvBT
mxZwrGIifHOJCJwVpvFaFyVCXuhZ3nvBhwD9CM1c6JavCf6Y4ODm1C4N8H97
XlvY8QUPflOdR+3KmzjgJ9ephAVTlRDLRzgut4lEh8KTM6Y+dVbFtuyDLqWK
w5WKP8CNS4HDaa67QqyPSvFJClxUgt7j6W5FS1UKsb7h7mvZks4d4LUcQxcv
IwXkB3gXPdbZm6DbyeaVtgIpsPvAgvYxWwL+oxf2xALJPOjx7d37ZHQG9ifm
7jd4Jo7BPuyH1o3TGf3A8pe1kdu1HMiLP86X2Af20bH53IZUnlnnGB2b50wb
6gmomaFjfnyK4WKksQRYixSQw/kthXyuZNYtsXkT+A2/ICBLsQ3+uKZIgx/s
XeDQ6Dqzwpx98CtDii4v6R1Af/GdFCf7+kM6tv9oD6Hsvvcx+DXP8aTPDk6A
N6jrCRxPhIHNn5vIl+fp4xhYvnfvyLUkA8fA/NXWyZWlMhwD62OlcxzqRHjI
c3V/WU0+0AS/ecdoNfEnATi9zy1Qn68F/vhWbq+DrTYwCe/IubKqA/0eMXd5
1EoS6Eb9ZnEe5/WgvyKxqNxuTh+YWeBPE/QaQP6D/PGQhQkZ8tSgPFZLJhn2
QSzFh3wZGfyzUu2mShZFfT82IUUUS2Fg3+vnEeT2TiEF5k237G0zByiQn+Ss
ulLMUdAPclVdvvdQ6LN5ZWxSXIrCfCevhSlSpdrvI6svLKtWcwLNYrdGoOZ3
b22mWjvUzBy1LxgWo9C/Pstw+b6i1s/+h8B/AUjoVgY=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#33"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFlAksW3Ecx19L62rQvkkQ5lps61JkNkIsrbmWOVd02RyhWDarW5g4RtyW
zFHHKIlrQjCLZIJsa61osJmwMXOkmSk2hqoRVzeJ9+s/eXn55Pv9/r6/95L3
TNgxzAg8giB+/6/Te/qKp1QuRwUn8tOzSf9QVKYqlqACHHJ6tuiqFjPnBZ9Q
AXLG5Ykh7pk8BbfjEpoRW1QgP8sTItyu6gVRQEe/DXEaS8nATGFN2OVRbeDU
zRuckiUt4N7kmsgub01grzJ/45NqEvBoVaGtmVAD+tzq3nndWlcXHJ9xUjeP
smimDvu3iFKmEwLUwB+cU67zuVUFOFo6FrqxQATOCFF6pYESIc93Le256EGA
foRmxHfKVQZ/VGBgU3KnEvi/P6vOb/+KB7+B+sM22U0c8OPrVMKcgZyP5cNs
F1uFwkM+9v6pT+zl0c37oEuoolCZ9C9ww4LvYIrjLh/ro1I8EnznZaB3uzqb
0pJlfKxvsOtaprhjB3glS8fBTVcK+f6KSy6rrA3QrdZmZZZ1EmDn/jm1Y5YY
/EfPrYl54lnQY9u69snoFOxPzN6vd40fgX1YD8waJtP6gLdeVIdvV7MhL/o4
W2Tt20vH5nPqkysMO0bo2Dx72kC3T9UUHfPjk3Tmw/XEwCoknyz2Hwnks8XT
TvFNG8CveXk+GdJt8Mc0hmv/ZO0CB0fWGOZn7YNfFlRwZUHzAPoL7yTZWdce
0rH9h7sJJffcj8GvfK5C8vTgBHiduhrHdkUY2PyZsdytHC0cA8v37B05FqXh
GJi/0iyRW7yGY2B9/qlsmxohHvIcjd+m4/eVwW/UPlxJ/EUATu118tXiqYA/
toXTY2OpBkzC27ItltWh3yXKr4LKJYGu22cY43JBE/rL4gtKrWa0gJl53rS6
Hm3Iv996NGCsT4Y8NSDHvzmdDPsgJqJD3hoZ/NMStUauP0XxfCxCkjCawsC+
1y9DyO2dfArMm2ze22b2UyA/zl52pBihoB9kyzs976LQZ/5ST7+wGIX5dm5z
EySuwu+xVptfUqngOJrxblWdgt++MZ9oaVcwc9g6b1CEQv/qNMPhx5JCP/tf
Av8DmgBgcA==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#34"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFlAksW3Ecx19LSxG0bxKEuRbbuhRZNzKxtOZa5lxNl80RimWzuoWJY8Rt
ydyMkjg6IZhFMkG2tVY02GxhY2akmSk2hqoRVzdJ36//5OXlk+/3+/v+3kve
s+DEsiLxCIKw/l8n94xlb5lCgQqPFSdng/GuuFxTIkWFOOTkbDI0bWZOCz+g
QkTJlUmhnlk8FXfgEvmIAypUKPOESI+LRsEU0NGvw9zmMjIwS1QXfn5MHzht
4yq3dFEPuC+lLqrbVxfYpzzA/LhWB3ispsjBSqQNfR4Nb3yur2kJj5Sc3MOj
LFhpwf6t4tTpxEAS+ENyKw0+tmkAx8jGw9bnicCZoWovtFEi5AXuZb1nvQjQ
j9DMBC556uCPDgpqSelSA/+3J7UFHV/w4DfRut8uv4YDfniZSpgzUQiwfLjD
QptIdCDA3j/1kaMihr8HupQqDpPL/gI3zfsPpTrvCLC+HndXS1qKHPSh7ktZ
ks5tAda3nG3g5GEoA/9A1Tm3FfY66Hars3LbBimw68Ac6YgtAf/hUzoxXzIL
elx79x4ZnYJ9iTl7je4Jo9DPvmfVNJneD7z5rDZiq5YDefH72WK6fx8Dm89t
TKky7RxlYPMcaYM9fjVTDMyPTzb4HmEkAdbQ8cvm/JFCPkcy7ZLQsg78kpfv
lynbAo5tjtD/yd6BfEhUnWlB9h7o8uDCC/O6+9BfdDP5Cr3+gIHtP9JDKL3j
eQR+9VNV0sf7x8Br1JV4jjvCxObPjOdt5urhmFi+d/fQuTgdx8T81VZJFSWr
OCbWF5DGsa8T4SHP1f5tOXFXHfxmHSPVxF8E4LQ+F389ngb441q5vfa2JOjT
wTtwbJa0QHeLvlVFrdABNuw3jXU7owv95QmFZXYzepBn5fvSGnr1gd9uPhg0
NyZDnhqYG8DPIMM+iIX4gLdKBv+0lNRcEUBRPR+bkCyKoTCx7/PzMHJju4AC
8yb5u1usAQrkJzhLzhQzFPT9HEWX920U+qyfGxkXlaAw32u1vqC0WqXH08x3
ahpU+devrD+1dqiYNULPHxKj0LcyzXT6sajSlf9D4H+DKFcZ
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#35"]& ], 
    TagBox[
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFlAksW3Ecx19LSxG0bxKEuRbbuhRZNzKxtOZa5lxNl80RimWzuoWJY8Rt
ydyMkjg6IZhFMkG2tVY02GxhY2akmSk2hqoRVzdJ36//5OXlk+/3+/v+3kve
s+DEsiLxCIKw/l8n94xlb5lCgQqPFSdng/GuuFxTIkWFOOTkbDI0bWZOCz+g
QkTJlUmhnlk8FXfgEvmIAypUKPOESI+LRsEU0NGvw9zmMjIwS1QXfn5MHzht
4yq3dFEPuC+lLqrbVxfYpzzA/LhWB3ispsjBSqQNfR4Nb3yur2kJj5Sc3MOj
LFhpwf6t4tTpxEAS+ENyKw0+tmkAx8jGw9bnicCZoWovtFEi5AXuZb1nvQjQ
j9DMBC556uCPDgpqSelSA/+3J7UFHV/w4DfRut8uv4YDfniZSpgzUQiwfLjD
QptIdCDA3j/1kaMihr8HupQqDpPL/gI3zfsPpTrvCLC+HndXS1qKHPSh7ktZ
ks5tAda3nG3g5GEoA/9A1Tm3FfY66Hars3LbBimw68Ac6YgtAf/hUzoxXzIL
elx79x4ZnYJ9iTl7je4Jo9DPvmfVNJneD7z5rDZiq5YDefH72WK6fx8Dm89t
TKky7RxlYPMcaYM9fjVTDMyPTzb4HmEkAdbQ8cvm/JFCPkcy7ZLQsg78kpfv
lynbAo5tjtD/yd6BfEhUnWlB9h7o8uDCC/O6+9BfdDP5Cr3+gIHtP9JDKL3j
eQR+9VNV0sf7x8Br1JV4jjvCxObPjOdt5urhmFi+d/fQuTgdx8T81VZJFSWr
OCbWF5DGsa8T4SHP1f5tOXFXHfxmHSPVxF8E4LQ+F389ngb441q5vfa2JOjT
wTtwbJa0QHeLvlVFrdABNuw3jXU7owv95QmFZXYzepBn5fvSGnr1gd9uPhg0
NyZDnhqYG8DPIMM+iIX4gLdKBv+0lNRcEUBRPR+bkCyKoTCx7/PzMHJju4AC
8yb5u1usAQrkJzhLzhQzFPT9HEWX920U+qyfGxkXlaAw32u1vqC0WqXH08x3
ahpU+devrD+1dqiYNULPHxKj0LcyzXT6sajSlf9D4H+DKFcZ
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#36"]& ], 
    TagBox[
     {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwAmIQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44333uXj+P
N1xw9y47XnmtOJoTbn9cyxTR8yvY4fy8T6cT395lg/PrEpjXcQuzwf23323i
NnUfVrj5DLry+51bWeDqc2NiFpevZYarv9U9s331VSa4ehmujJVfnBjh/GxT
LdbbMv/3w/Qnm99bcfjw7/0w92pVWP3PW/IDLr/wbvCRSsev+2H6nzeK2rhL
fNoPs2/XVA3XF2Fv4fIGL29+0Z/7DM532XWb82/YA7j6P33GbG0PbsLlC1au
/yEofBluP1vzjwVuRSfh9oelKS+8VLMTzv8wY2bKx5lJcP3Hz9zsMg7eYQ8z
P2dB+VTZNSftYeZZ6R7cFDD9sj1MPVOZ6J0UyQdwPsvBTeseNz+G89l5AhqT
3j2zZ4LyXcsmJ73yeAWXb35wzblo8Vu4fRtmtwXUffoI5+cvShF4EvYVrj4u
a5Zse+MPuPyX2A7tu3y/4PKdgWWWxnN+28P8d2wT64RI779w9SwiU5/V//oH
57/RelGY5MbgANN//XTrhxZ+Rge4/kTHmexujHD5bd//OHbVIPjTlEsm979k
dICFT2h1ktmsw0xw+Rzu10rnolgcYPbJrz42je0VK5xfvcM5mH82O1x9wbKc
bWb6nHD7eZjMk/SecsHlXXNDpmpN5oHzJXbK5ruq8MHtn1TUMdHgOj9cf1Cb
v+7cbQJw/r4PmQcVpATh+rWiW0KX1ArC3cOgePz37JeCcPXXnnEumhwqhPBf
GGvZ4Twhh79Q/pWjDF6f24Xg5l1a8v1j0C4huP5zSU8dheSF4fJqSyWlOvsR
fGh5BOcDAM4WB3M=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#37"]& ], 
    TagBox[
     {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGDwAmIQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44333uXj+P
N1xw9y47XnmtOJoTbn9cyxTR8yvY4fy8T6cT395lg/PrEpjXcQuzwf23323i
NnUfVrj5DLry+51bWeDqc2NiFpevZYarv9U9s331VSa4ehmujJVfnBjh/GxT
LdbbMv/3w/Qnm99bcfjw7/0w92pVWP3PW/IDLr/wbvCRSsev+2H6nzeK2rhL
fNoPs2/XVA3XF2Fv4fIGL29+0Z/7DM532XWb82/YA7j6P33GbG0PbsLlC1au
/yEofBluP1vzjwVuRSfh9oelKS+8VLMTzv8wY2bKx5lJcP3Hz9zsMg7eYQ8z
P2dB+VTZNSftYeZZ6R7cFDD9sj1MPVOZ6J0UyQdwPsvBTeseNz+G89l5AhqT
3j2zZ4LyXcsmJ73yeAWXb35wzblo8Vu4fRtmtwXUffoI5+cvShF4EvYVrj4u
a5Zse+MPuPyX2A7tu3y/4PKdgWWWxnN+28P8d2wT64RI779w9SwiU5/V//oH
57/RelGY5MbgANN//XTrhxZ+Rge4/kTHmexujHD5bd//OHbVIPjTlEsm979k
dICFT2h1ktmsw0xw+Rzu10rnolgcYPbJrz42je0VK5xfvcM5mH82O1x9wbKc
bWb6nHD7eZjMk/SecsHlXXNDpmpN5oHzJXbK5ruq8MHtn1TUMdHgOj9cf1Cb
v+7cbQJw/r4PmQcVpATh+rWiW0KX1ArC3cOgePz37JeCcPXXnnEumhwqhPBf
GGvZ4Twhh79Q/pWjDF6f24Xg5l1a8v1j0C4huP5zSU8dheSF4fJqSyWlOvsR
fGh5BOcDAM4WB3M=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#38"]& ], 
    TagBox[
     {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFlHtMUmEYxg8IeImpcHJTl2nZutColpWr1YAMaF0Ng1Zpy5O1MvJWw5yX
chiobaUSFhBbmbkalc0tZq4Cw2TdmxZmZmORJJaFhMm8UW6c93zb2bffnud9
n/c9f3zzsFzRYTKCILv/fzN36fftHr8fNU/7Z85vztPquhC7EzWTkJnj5oQs
65lrfo2akQBfOnVw61kdwQbSyUYkGTX7A/XUw8KVMRlM0NGPz6QNtQxgkUV7
aMmLSODi3xukNY4I4NZCbXbzznDgHXXihGkNHViof7xj888wmLfJWmQ7uT8U
8g9UXIp6eysYOMfzMnO4nwZcdjDo3iyUBvuZBLXGRduo0B9hx5tSzlHAfyI9
/Ubh3SDwfzqvURo+kME/J+zobe9GEvDx1Sxq3xy/Ca8/lPzllsUyYcLnZZ1e
589p9IHuZFkzvZ6/wNf70zqKeKMmPK9FsGk+u9ALekfzqrP2O39MeN738qj1
wmgP+NvUi/mDkmHQV7h6vcv1TuBNbX2hUxI7+CcvJNEU9l7Q8243+xhoN8xL
k/uuCQqeQ77kSOL1rpKHwO4rmqwRDQb11le91UlprRy8v/RaoTruznMO3m8d
u70l9XI3B/eTZVGfs2LswJT2lnsOuQM4mJ5ajv1ycsgB5stU2NDmIdDldltK
wY1hyLuvU6SWeUaAcxuyIr9JRsF/IFsbpyz3ge7NqFzaHz4OetUu2dqkqxMc
fL/OFmrN3q1T4KfMVjvPjE8D/2QN5mMChIvX97w8566IIHGhPpOnCRaQuLjf
ODbJqy4hgb8+8ZTqoovExf+PuBhbo7WQQZfO+jH/zT4KcLyhs542RAUubk1J
i9AFA+c1SY1rlocC08nJ2LKBMGD+id1qlooOHP0wLpe/IBzy6woqa1f0RACL
FDvZemMk7PPEfaw9IZYB9az9FeLGUgbsh8yzTuhcDPDbnKENKjGT2E9ClVly
mNypAL9/hmz5o2RCv67GsRFRG8FvsAEeMx4FHpf7727fg0LewpsxsVUXUei/
Vtj3jq4i/NtcV5U19QTnsxNGL+sJfvRg4bsmA8GiziRFhxWF+Qdt3PVfHURe
4L0E/z/B3kiG
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#39"]& ], 
    TagBox[
     {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxFlHtMUmEYxg8IeImpcHJTl2nZutColpWr1YAMaF0Ng1Zpy5O1MvJWw5yX
chiobaUSFhBbmbkalc0tZq4Cw2TdmxZmZmORJJaFhMm8UW6c93zb2bffnud9
n/c9f3zzsFzRYTKCILv/fzN36fftHr8fNU/7Z85vztPquhC7EzWTkJnj5oQs
65lrfo2akQBfOnVw61kdwQbSyUYkGTX7A/XUw8KVMRlM0NGPz6QNtQxgkUV7
aMmLSODi3xukNY4I4NZCbXbzznDgHXXihGkNHViof7xj888wmLfJWmQ7uT8U
8g9UXIp6eysYOMfzMnO4nwZcdjDo3iyUBvuZBLXGRduo0B9hx5tSzlHAfyI9
/Ubh3SDwfzqvURo+kME/J+zobe9GEvDx1Sxq3xy/Ca8/lPzllsUyYcLnZZ1e
589p9IHuZFkzvZ6/wNf70zqKeKMmPK9FsGk+u9ALekfzqrP2O39MeN738qj1
wmgP+NvUi/mDkmHQV7h6vcv1TuBNbX2hUxI7+CcvJNEU9l7Q8243+xhoN8xL
k/uuCQqeQ77kSOL1rpKHwO4rmqwRDQb11le91UlprRy8v/RaoTruznMO3m8d
u70l9XI3B/eTZVGfs2LswJT2lnsOuQM4mJ5ajv1ycsgB5stU2NDmIdDldltK
wY1hyLuvU6SWeUaAcxuyIr9JRsF/IFsbpyz3ge7NqFzaHz4OetUu2dqkqxMc
fL/OFmrN3q1T4KfMVjvPjE8D/2QN5mMChIvX97w8566IIHGhPpOnCRaQuLjf
ODbJqy4hgb8+8ZTqoovExf+PuBhbo7WQQZfO+jH/zT4KcLyhs542RAUubk1J
i9AFA+c1SY1rlocC08nJ2LKBMGD+id1qlooOHP0wLpe/IBzy6woqa1f0RACL
FDvZemMk7PPEfaw9IZYB9az9FeLGUgbsh8yzTuhcDPDbnKENKjGT2E9ClVly
mNypAL9/hmz5o2RCv67GsRFRG8FvsAEeMx4FHpf7727fg0LewpsxsVUXUei/
Vtj3jq4i/NtcV5U19QTnsxNGL+sJfvRg4bsmA8GiziRFhxWF+Qdt3PVfHURe
4L0E/z/B3kiG
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#40"]& ], 
    TagBox[
     {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGDwB2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5RfeDT5S6fh1P0z/80ZRG3eJT/th9u2aquH6IuwtXN7g5c0v+nOfwfku
u25z/g17AFf/p8+Yre3BTbh8wcr1PwSFL8PtZ2v+scCt6CTc/rA05YWXanbC
+cfP3OwyDt5hD9NvpXtwU8D0y3A+U5nonRTJB3A+y8FN6x43P4bz2XkCGpPe
PbNngvJdyyYnvfJ4BZdvfnDNuWjxW3uYezfMbguo+/QRzs9flCLwJOwrXH1c
1izZ9sYfcH5nYJml8Zzf9jD3HtvEOiHS+y9cP4vI1Gf1v/7B+W+0XhQmuTE4
wPRfP936oYWf0QGmf9v3P45dNYwOMPXTlEsm979kdICFV2h1ktmsw0xw/Tnc
r5XORbHA+fKrj01je8UK51fvcA7mn80O5xcsy9lmps8Jt4+HyTxJ7ykX3HzX
3JCpWpN54Ooldsrmu6rwweUnFXVMNLjOD+cHtfnrzt0mADdv34fMgwpSgnD9
WtEtoUtqBeH+YVA8/nv2S0G4+mvPOBdNDhVC+C+MtexwnpADLH9dOcrg9bld
CG7epSXfPwbtEoLrP5f01FFIXhgu/6v5/1rfcGG4fWpLJaU6+4Xh5lu6377A
Mxmh3uflnPYJ0xD8Ql2Fr9PnIvh7tqpdWLYawQ86Ztx25Lgw3P4X1xxsHj1G
yEPLNzgfAKhrMUA=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#41"]& ], 
    TagBox[
     {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwB2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5RfeDT5S6fh1P0z/80ZRG3eJT/th9u2aquH6IuwtXN7g5c0v+nOfwfku
u25z/g17AFf/p8+Yre3BTbh8wcr1PwSFL8PtZ2v+scCt6CTc/rA05YWXanbC
+cfP3OwyDt5hD9NvpXtwU8D0y3A+U5nonRTJB3A+y8FN6x43P4bz2XkCGpPe
PbNngvJdyyYnvfJ4BZdvfnDNuWjxW3uYezfMbguo+/QRzs9flCLwJOwrXH1c
1izZ9sYfcH5nYJml8Zzf9jD3HtvEOiHS+y9cP4vI1Gf1v/7B+W+0XhQmuTE4
wPRfP936oYWf0QGmf9v3P45dNYwOMPXTlEsm979kdICFV2h1ktmsw0xw/Tnc
r5XORbHA+fKrj01je8UK51fvcA7mn80O5xcsy9lmps8Jt4+HyTxJ7ykX3HzX
3JCpWpN54Ooldsrmu6rwweUnFXVMNLjOD+cHtfnrzt0mADdv34fMgwpSgnD9
WtEtoUtqBeH+YVA8/nv2S0G4+mvPOBdNDhVC+C+MtexwnpADLH9dOcrg9bld
CG7epSXfPwbtEoLrP5f01FFIXhgu/6v5/1rfcGG4fWpLJaU6+4Xh5lu6377A
Mxmh3uflnPYJ0xD8Ql2Fr9PnIvh7tqpdWLYawQ86Ztx25Lgw3P4X1xxsHj1G
yEPLNzgfAKhrMUA=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#42"]& ], 
    TagBox[
     {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5RfeDT5S6fh1P0z/80ZRG3eJT/th9u2aquH6IuwtXN7g5c0v+nOfwfku
u25z/g17AFf/p8+Yre3BTbh8wcr1PwSFL8PtZ2v+scCt6CTc/rA05YWXanbC
+cfP3OwyDt5hD9NvpXtwU8D0y3A+U5nonRTJB3A+y8FN6x43P4bz2XkCGpPe
PbNngvJdyyYnvfJ4BZdvfnDNuWjxW3uYezfMbguo+/QRzs9flCLwJOwrXH1c
1izZ9sYfcH5nYJml8Zzf9jD3HtvEOiHS+y9cP4vI1Gf1v/7B+W+0XhQmuTE4
wPRfP936oYWf0QGuP9FxJrsbowNM/bbvfxy7ahjh6qcpl0zuf8noAAu/0Ook
s1mHmeDyOdyvlc5FscD58quPTWN7xQrnV+9wDuafzQ7nFyzL2Wamzwnn8zCZ
J+k95YLzXXNDpmpN5oHzJXbK5ruq8MHtn1TUMdHgOj+cH9Tmrzt3mwDcP/s+
ZB5UkBKE69eKbgldUisI9x+D4vHfs18KwtVfe8a5aHKoEJx/acn3j0G7EPxz
SU8dheSF4eb9av6/1jdcGG6e2lJJqc5+Ybh7LN1vX+CZjFDv83JO+4RpCH6h
rsLX6XMR/D1b1S4sW43gBx0zbjtyXBhu/4trDjaPHiPkoeUZnA8AODUaYA==

       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#43"]& ], 
    TagBox[
     {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5RfeDT5S6fh1P0z/80ZRG3eJT/th9u2aquH6IuwtXN7g5c0v+nOfwfku
u25z/g17AFf/p8+Yre3BTbh8wcr1PwSFL8PtZ2v+scCt6CTc/rA05YWXanbC
+cfP3OwyDt5hD9NvpXtwU8D0y3A+U5nonRTJB3A+y8FN6x43P4bz2XkCGpPe
PbNngvJdyyYnvfJ4BZdvfnDNuWjxW3uYezfMbguo+/QRzs9flCLwJOwrXH1c
1izZ9sYfcH5nYJml8Zzf9jD3HtvEOiHS+y9cP4vI1Gf1v/7B+W+0XhQmuTE4
wPRfP936oYWf0QGuP9FxJrsbowNM/bbvfxy7ahjh6qcpl0zuf8noAAu/0Ook
s1mHmeDyOdyvlc5FscD58quPTWN7xQrnV+9wDuafzQ7nFyzL2Wamzwnn8zCZ
J+k95YLzXXNDpmpN5oHzJXbK5ruq8MHtn1TUMdHgOj+cH9Tmrzt3mwDcP/s+
ZB5UkBKE69eKbgldUisI9x+D4vHfs18KwtVfe8a5aHKoEJx/acn3j0G7EPxz
SU8dheSF4eb9av6/1jdcGG6e2lJJqc5+Ybh7LN1vX+CZjFDv83JO+4RpCH6h
rsLX6XMR/D1b1S4sW43gBx0zbjtyXBhu/4trDjaPHiPkoeUZnA8AODUaYA==

       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#44"]& ], 
    TagBox[
     {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxFlHlIk3Ecxt9NN6+hbm+GiqZlWE08SFIUYzPzIM9mW+SFTY0yb2VmXom3
RR7TiU4jj0QRNQaJSrXZPEjLTGtmpoyW80jzSFG8VsLe737w8vLheZ7v831/
f7yn2fGMKDyCIIz/z/E7c8F3U6FARUeK47NGe1dSoSmVoyIccnzWaZo2U6dE
H1ERouTKlHDvR3wVt+OSmxFHVKRQ5glRnheNQimgo98GYxrLycAMcW3EhRF9
4PS1yzFlMj3gntTa6C5/XWC/Cqb5UQ0JeKS62NFCrAN9nvVv/LxWtEWHSuYI
+JQ5C23Yv2U4TZIcrAX+sLxKg0+tGsBxm6O3V2eJwFnhap06KBHyQo/y7nM+
BOhHrM2Ebvnq4I8NCWlK7VAD//fHNYXtX/HgN9G+27Z1BQd8/xKVMGOiEGL5
CMe5VrF4X4jdP/WBsyKueRf0htnAgTTXbSGWX8gxcPE03BRifX1V590XWaug
2y1Nb9nWy4H7Pgdln3woE2L3c7VvRuuQJRXilfrBU3tigXQa/AltXbtkdBL2
IebuPvdIeg/7sO5YNExk9AIPf5gusQ/soWF5Z+t+QUD1JDCeY/Aj0kgKrN4v
6JTlyoA1SAE57D9yGraPO4fLXvZapmHzc6USt6SmVRr2vS/5BQFZmxvA8Y2R
+r9Y2zAvLLrWtDBnF/St0CKrWd090Iuvc5zs6/Zh/pCAUHbL+xD86ieq5Nl7
R8Ar1MVEtgdCx/JTo/nreXo4Opbv3jlwLcnA0TE/zyKFW7qEo2P3x0xnO9SK
8ZCP0fl9ZixIHfxm7UM84jIBOL3HLVCPrwH+hJaYbgdbLWAS3pFtM68N7B57
o4rKJQEb9prGu5/Vhf6KpKJyuyk9YEaBv3V9tz7s/3b9Xr+5MRny1OA8ZnMm
GfZBTg/v85fI4JfItRq5TArM4z3TeGLFpoDOZBE44jgVfxlErv0tpMD8iead
DUafSh9jz7tSzFDQ93IVHb43Uei3fGFkXFyKQp+T58w4iavy+yzVFZbxVJxo
bb5dXa/i168sx1vaVcwYsi8YGEahf1FCd/kpU+nK/yHwP1HXRjI=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#45"]& ], 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFlHlIk3Ecxt9NN6+hbm+GiqZlWE08SFIUYzPzIM9mW+SFTY0yb2VmXom3
RR7TiU4jj0QRNQaJSrXZPEjLTGtmpoyW80jzSFG8VsLe737w8vLheZ7v831/
f7yn2fGMKDyCIIz/z/E7c8F3U6FARUeK47NGe1dSoSmVoyIccnzWaZo2U6dE
H1ERouTKlHDvR3wVt+OSmxFHVKRQ5glRnheNQimgo98GYxrLycAMcW3EhRF9
4PS1yzFlMj3gntTa6C5/XWC/Cqb5UQ0JeKS62NFCrAN9nvVv/LxWtEWHSuYI
+JQ5C23Yv2U4TZIcrAX+sLxKg0+tGsBxm6O3V2eJwFnhap06KBHyQo/y7nM+
BOhHrM2Ebvnq4I8NCWlK7VAD//fHNYXtX/HgN9G+27Z1BQd8/xKVMGOiEGL5
CMe5VrF4X4jdP/WBsyKueRf0htnAgTTXbSGWX8gxcPE03BRifX1V590XWaug
2y1Nb9nWy4H7Pgdln3woE2L3c7VvRuuQJRXilfrBU3tigXQa/AltXbtkdBL2
IebuPvdIeg/7sO5YNExk9AIPf5gusQ/soWF5Z+t+QUD1JDCeY/Aj0kgKrN4v
6JTlyoA1SAE57D9yGraPO4fLXvZapmHzc6USt6SmVRr2vS/5BQFZmxvA8Y2R
+r9Y2zAvLLrWtDBnF/St0CKrWd090Iuvc5zs6/Zh/pCAUHbL+xD86ieq5Nl7
R8Ar1MVEtgdCx/JTo/nreXo4Opbv3jlwLcnA0TE/zyKFW7qEo2P3x0xnO9SK
8ZCP0fl9ZixIHfxm7UM84jIBOL3HLVCPrwH+hJaYbgdbLWAS3pFtM68N7B57
o4rKJQEb9prGu5/Vhf6KpKJyuyk9YEaBv3V9tz7s/3b9Xr+5MRny1OA8ZnMm
GfZBTg/v85fI4JfItRq5TArM4z3TeGLFpoDOZBE44jgVfxlErv0tpMD8iead
DUafSh9jz7tSzFDQ93IVHb43Uei3fGFkXFyKQp+T58w4iavy+yzVFZbxVJxo
bb5dXa/i168sx1vaVcwYsi8YGEahf1FCd/kpU+nK/yHwP1HXRjI=
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#46"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFlHlIk3Ecxt9Nt3kMdXszVDQ1w2riQZKiGJuZB3k22yIvdGqUeSsz80q8
LfKYTnQaeSSKqCEkKtVm8yAtMy3NTBkt55HmkaJ4rYS93/3g5eXD8zzf5/v+
/nhNOXHMSDyCIP7/n5N3xqL3llyOio7lJ2ed/q64XE0iQ0U45ORs0NWsps+I
PqIiRMEVyaGejwRKbsMlNSH2qEiuyBMi3S/pB1NBR78NRjeUUYCZ4prwiyM6
wGnrV6JLpdrAPSk1UZ2+WsA+5SyT42oy8EhVkb2ZWBP63Ove+HisaoiOFMzt
ElDnzTRg/+bh1KmkQHXwh+RW6H5qIQHHbo2Grc0RgTNDVTo0USLkhW5l3ee9
CNCPWBoLXfJUwR8TFNSY0q4C/u+PqwvavuLBb6hxt3X7Kg74/mUaYdZQLsTy
4fbzLWLxgRC7f9oDR3ls0x7o9XP+A6nOO0Isv5it6+SutyXE+voqL7gusddA
t1me2baukwH3fQ7IOv1QKsTu51rfrPoRWyLEK/TDp7bEfMkM+ONbO/co6CTs
Q8zZe+6W+B72Yd8xq59I7wUe/jBTbOvfQ8fyjpb9XX5Vk8B4ru6PCH0JsGp/
V4c0RwpMIvtlc/7I6Ng+rlweZ8VjhY7Nz5FMuSQ2rtGx730pyPfL3NoEjmuI
0PnF3oF5IVE1RgXZe6BvBxdazGntg150g+tgW3sA84e6CKW3PY/Ar3qqUpa1
fwy8SltK4LghDCw/PZq3kauNY0A+zLma5IZjYP7u3UPn4nQc+PlmybySZRwD
u09WGseuRowHPVrz99mxAFXIG7cN8YkrBNDTelz8tQUk4Pjm6G47a3VgMt6e
Y7WgAfu4xtyspPHIoOv1GsW5ntOC/vLEwjKbaW1gZr6vZV23DuTfbtzrNzGg
QJ4WmMtqyqDAfojp8IFgmQL+KZl6A49FhXn8Z6QnFhwq6Cw2gSuOVfKXQeT6
3wIqzJ9o2t1k9in1Mc6CM9UYBX0/R97ufQuFfvMX+gZFJSj0ObjPjpN5Sr/X
cm1BKV/JCZYmO1V1Sn79yny8uU3JzCHb/IFhFPqXphhOP6VKXfF/BP4HrS5P
6Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#47"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxFlHlIk3Ecxt9Nt3kMdXszVDQ1w2riQZKiGJuZB3k22yIvdGqUeSsz80q8
LfKYTnQaeSSKqCEkKtVm8yAtMy3NTBkt55HmkaJ4rYS93/3g5eXD8zzf5/v+
/nhNOXHMSDyCIP7/n5N3xqL3llyOio7lJ2ed/q64XE0iQ0U45ORs0NWsps+I
PqIiRMEVyaGejwRKbsMlNSH2qEiuyBMi3S/pB1NBR78NRjeUUYCZ4prwiyM6
wGnrV6JLpdrAPSk1UZ2+WsA+5SyT42oy8EhVkb2ZWBP63Ove+HisaoiOFMzt
ElDnzTRg/+bh1KmkQHXwh+RW6H5qIQHHbo2Grc0RgTNDVTo0USLkhW5l3ee9
CNCPWBoLXfJUwR8TFNSY0q4C/u+PqwvavuLBb6hxt3X7Kg74/mUaYdZQLsTy
4fbzLWLxgRC7f9oDR3ls0x7o9XP+A6nOO0Isv5it6+SutyXE+voqL7gusddA
t1me2baukwH3fQ7IOv1QKsTu51rfrPoRWyLEK/TDp7bEfMkM+ONbO/co6CTs
Q8zZe+6W+B72Yd8xq59I7wUe/jBTbOvfQ8fyjpb9XX5Vk8B4ru6PCH0JsGp/
V4c0RwpMIvtlc/7I6Ng+rlweZ8VjhY7Nz5FMuSQ2rtGx730pyPfL3NoEjmuI
0PnF3oF5IVE1RgXZe6BvBxdazGntg150g+tgW3sA84e6CKW3PY/Ar3qqUpa1
fwy8SltK4LghDCw/PZq3kauNY0A+zLma5IZjYP7u3UPn4nQc+PlmybySZRwD
u09WGseuRowHPVrz99mxAFXIG7cN8YkrBNDTelz8tQUk4Pjm6G47a3VgMt6e
Y7WgAfu4xtyspPHIoOv1GsW5ntOC/vLEwjKbaW1gZr6vZV23DuTfbtzrNzGg
QJ4WmMtqyqDAfojp8IFgmQL+KZl6A49FhXn8Z6QnFhwq6Cw2gSuOVfKXQeT6
3wIqzJ9o2t1k9in1Mc6CM9UYBX0/R97ufQuFfvMX+gZFJSj0ObjPjpN5Sr/X
cm1BKV/JCZYmO1V1Sn79yny8uU3JzCHb/IFhFPqXphhOP6VKXfF/BP4HrS5P
6Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#48"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5Z9pHU/88ukbnL/wbvCRSsev+2H2bXJzUdIt/wKXP7LepOHBms/7YfY9
bxS1cZf4BFe/a6qG64uwt3B5g5c3v+jPfQbnu+y6zfk37AFc/Z8+Y7a2Bzfh
8gUr1/8QFL4Mdy9b848FbkUn4faHpSkvvFSzE84/fuZml3HwDnuYfivdg5sC
pl+G85nKRO+kSD6A81kOblr3uPkxnM/OE9CY9O6ZPROU71o2OemVxyt7mPnN
D645Fy1+aw9z74bZbQF1nz7C+fmLUgSehH2FmxeXNUu2vfEHnN8ZWGZpPOc3
3DwWkanP6n/9g8tfP936oYWf0QEmH1qdZDbrMJMDTD6H+7XSuSgWOF9+9bFp
bK9Y4fzqHc7B/LPZ4fyCZTnbzPQ54ebxMJkn6T3lcoCFp2tuyFStyTxw9RI7
ZfNdVfjg8pOKOiYaXOeH6w9q89edu00Azt/3IfOggpQgXL9WdEvoklpBB1h4
MCge/z37pSBc/bVnnIsmhwrBzQ8NYy07nCfkAMtPV44yeH1uF4Kbd2nJ949B
u4Tg+s8lPXUUkheGy/9q/r/WN1wYbp/aUkmpzn5huPmW7rcv8ExGqPd5Oad9
wjQEv1BX4ev0uQj+nq1qF5atRvCDjhm3HTkuDLf/xTUHm0ePEfZByzO4egB/
zDwC
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#49"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQXfvc99P//8IH/v0Hgff2h7omcTx4JnyAkQEEPthz
6F2XO3BW+AADlD+lJMG7YTaCv5qxeAmDufCB/1D9rKnuRpKxQnB54RtHcxZN
FITzgw7PStY8JQDnV7+3zZnwmB/O31E+K2u9Px+c7zcpVOHfTB44/9T0TnPl
w9xw+9zn7vXzeMN14C+UX7ZpttA9ZS64+5cdr7xWHM0JVx/XMkX0/Ap2OD/v
0+nEt3fZ4Py6BOZ13MJscP373SZuU/dhhdvPoCu/37mVBa4+NyZmcflaZrj6
W90z21dfZYKrl+HKWPnFiRHOzzbVYr0t838/TH+y+b0Vhw//3g8Lf60Kq/95
S37A5Z9pHU/88ukbnL/wbvCRSsev+2H2bXJzUdIt/wKXP7LepOHBms/7YfY9
bxS1cZf4BFe/a6qG64uwt3B5g5c3v+jPfQbnu+y6zfk37AFc/Z8+Y7a2Bzfh
8gUr1/8QFL4Mdy9b848FbkUn4faHpSkvvFSzE84/fuZml3HwDnuYfivdg5sC
pl+G85nKRO+kSD6A81kOblr3uPkxnM/OE9CY9O6ZPROU71o2OemVxyt7mPnN
D645Fy1+aw9z74bZbQF1nz7C+fmLUgSehH2FmxeXNUu2vfEHnN8ZWGZpPOc3
3DwWkanP6n/9g8tfP936oYWf0QEmH1qdZDbrMJMDTD6H+7XSuSgWOF9+9bFp
bK9Y4fzqHc7B/LPZ4fyCZTnbzPQ54ebxMJkn6T3lcoCFp2tuyFStyTxw9RI7
ZfNdVfjg8pOKOiYaXOeH6w9q89edu00Azt/3IfOggpQgXL9WdEvoklpBB1h4
MCge/z37pSBc/bVnnIsmhwrBzQ8NYy07nCfkAMtPV44yeH1uF4Kbd2nJ949B
u4Tg+s8lPXUUkheGy/9q/r/WN1wYbp/aUkmpzn5huPmW7rcv8ExGqPd5Oad9
wjQEv1BX4ev0uQj+nq1qF5atRvCDjhm3HTkuDLf/xTUHm0ePEfZByzO4egB/
zDwC
       "]]},
     Annotation[#, "Charting`Private`Tag$8715395#50"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9999998732582596},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{929.3333333333327, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {0.9999998732582596, 1.0000000000000004`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768797814279361*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"7d736a46-9295-430d-84b4-b7e32e3657b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "@", 
  RowBox[{"Out", "@", "19"}]}]], "Input",
 CellChangeTimes->{{3.7687979054884*^9, 3.768797907847166*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"e27fbae1-9899-47de-8f5c-f10762cbc49f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"Re", "[", "x", "]"}]}]]}]], " ", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "+", "x", "+", 
           FractionBox[
            SuperscriptBox["x", "2"], "2"], "+", 
           FractionBox[
            SuperscriptBox["x", "3"], "6"], "+", 
           FractionBox[
            SuperscriptBox["x", "4"], "24"], "+", 
           FractionBox[
            SuperscriptBox["x", "5"], "120"], "+", 
           FractionBox[
            SuperscriptBox["x", "6"], "720"], "+", 
           FractionBox[
            SuperscriptBox["x", "7"], "5040"], "+", 
           FractionBox[
            SuperscriptBox["x", "8"], "40320"], "+", 
           FractionBox[
            SuperscriptBox["x", "9"], "362880"], "+", 
           FractionBox[
            SuperscriptBox["x", "10"], "3628800"], "+", 
           FractionBox[
            SuperscriptBox["x", "11"], "39916800"], "+", 
           FractionBox[
            SuperscriptBox["x", "12"], "479001600"], "+", 
           FractionBox[
            SuperscriptBox["x", "13"], "6227020800"], "+", 
           FractionBox[
            SuperscriptBox["x", "14"], "87178291200"], "+", 
           FractionBox[
            SuperscriptBox["x", "15"], "1307674368000"], "+", 
           FractionBox[
            SuperscriptBox["x", "16"], "20922789888000"], "+", 
           FractionBox[
            SuperscriptBox["x", "17"], "355687428096000"], "+", 
           FractionBox[
            SuperscriptBox["x", "18"], "6402373705728000"], "+", 
           FractionBox[
            SuperscriptBox["x", "19"], "121645100408832000"], "+", 
           FractionBox[
            SuperscriptBox["x", "20"], "2432902008176640000"], "+", 
           FractionBox[
            SuperscriptBox["x", "21"], "51090942171709440000"], "+", 
           FractionBox[
            SuperscriptBox["x", "22"], "1124000727777607680000"], "+", 
           FractionBox[
            SuperscriptBox["x", "23"], "25852016738884976640000"], "+", 
           FractionBox[
            SuperscriptBox["x", "24"], "620448401733239439360000"], "+", 
           FractionBox[
            SuperscriptBox["x", "25"], "15511210043330985984000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "26"], "403291461126605635584000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "27"], "10888869450418352160768000000"], "+", 
           
           FractionBox[
            SuperscriptBox["x", "28"], "304888344611713860501504000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "29"], "8841761993739701954543616000000"], 
           "+", 
           FractionBox[
            SuperscriptBox["x", "30"], "265252859812191058636308480000000"], 
           "+", 
           FractionBox[
            SuperscriptBox["x", "31"], "8222838654177922817725562880000000"], 
           "+", 
           FractionBox[
            SuperscriptBox["x", "32"], 
            "263130836933693530167218012160000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "33"], 
            "8683317618811886495518194401280000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "34"], 
            "295232799039604140847618609643520000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "35"], 
            "10333147966386144929666651337523200000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "36"], 
            "371993326789901217467999448150835200000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "37"], 
            "13763753091226345046315979581580902400000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "38"], 
            "523022617466601111760007224100074291200000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "39"], 
            "20397882081197443358640281739902897356800000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "40"], 
            "815915283247897734345611269596115894272000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "41"], 
            "33452526613163807108170062053440751665152000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "42"], 
            "1405006117752879898543142606244511569936384000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "43"], 
            "60415263063373835637355132068513997507264512000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "44"], 
            "2658271574788448768043625811014615890319638528000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "45"], 
            "119622220865480194561963161495657715064383733760000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "46"], 
            "5502622159812088949850305428800254892961651752960000000000"], 
           "+", 
           FractionBox[
            SuperscriptBox["x", "47"], 
            "258623241511168180642964355153611979969197632389120000000000"], 
           "+", 
           FractionBox[
            SuperscriptBox["x", "48"], 
            "12413915592536072670862289047373375038521486354677760000000000"],
            "+", 
           FractionBox[
            SuperscriptBox["x", "49"], 
            "608281864034267560872252163321295376887552831379210240000000000"]\
}], "]"}], "2"]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "x", "+", 
       FractionBox[
        SuperscriptBox["x", "2"], "2"], "+", 
       FractionBox[
        SuperscriptBox["x", "3"], "6"], "+", 
       FractionBox[
        SuperscriptBox["x", "4"], "24"], "+", 
       FractionBox[
        SuperscriptBox["x", "5"], "120"], "+", 
       FractionBox[
        SuperscriptBox["x", "6"], "720"], "+", 
       FractionBox[
        SuperscriptBox["x", "7"], "5040"], "+", 
       FractionBox[
        SuperscriptBox["x", "8"], "40320"], "+", 
       FractionBox[
        SuperscriptBox["x", "9"], "362880"], "+", 
       FractionBox[
        SuperscriptBox["x", "10"], "3628800"], "+", 
       FractionBox[
        SuperscriptBox["x", "11"], "39916800"], "+", 
       FractionBox[
        SuperscriptBox["x", "12"], "479001600"], "+", 
       FractionBox[
        SuperscriptBox["x", "13"], "6227020800"], "+", 
       FractionBox[
        SuperscriptBox["x", "14"], "87178291200"], "+", 
       FractionBox[
        SuperscriptBox["x", "15"], "1307674368000"], "+", 
       FractionBox[
        SuperscriptBox["x", "16"], "20922789888000"], "+", 
       FractionBox[
        SuperscriptBox["x", "17"], "355687428096000"], "+", 
       FractionBox[
        SuperscriptBox["x", "18"], "6402373705728000"], "+", 
       FractionBox[
        SuperscriptBox["x", "19"], "121645100408832000"], "+", 
       FractionBox[
        SuperscriptBox["x", "20"], "2432902008176640000"], "+", 
       FractionBox[
        SuperscriptBox["x", "21"], "51090942171709440000"], "+", 
       FractionBox[
        SuperscriptBox["x", "22"], "1124000727777607680000"], "+", 
       FractionBox[
        SuperscriptBox["x", "23"], "25852016738884976640000"], "+", 
       FractionBox[
        SuperscriptBox["x", "24"], "620448401733239439360000"], "+", 
       FractionBox[
        SuperscriptBox["x", "25"], "15511210043330985984000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "26"], "403291461126605635584000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "27"], "10888869450418352160768000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "28"], "304888344611713860501504000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "29"], "8841761993739701954543616000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "30"], "265252859812191058636308480000000"], "+", 
       
       FractionBox[
        SuperscriptBox["x", "31"], "8222838654177922817725562880000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "32"], "263130836933693530167218012160000000"], 
       "+", 
       FractionBox[
        SuperscriptBox["x", "33"], "8683317618811886495518194401280000000"], 
       "+", 
       FractionBox[
        SuperscriptBox["x", "34"], "295232799039604140847618609643520000000"],
        "+", 
       FractionBox[
        SuperscriptBox["x", "35"], 
        "10333147966386144929666651337523200000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "36"], 
        "371993326789901217467999448150835200000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "37"], 
        "13763753091226345046315979581580902400000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "38"], 
        "523022617466601111760007224100074291200000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "39"], 
        "20397882081197443358640281739902897356800000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "40"], 
        "815915283247897734345611269596115894272000000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "41"], 
        "33452526613163807108170062053440751665152000000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "42"], 
        "1405006117752879898543142606244511569936384000000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "43"], 
        "60415263063373835637355132068513997507264512000000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "44"], 
        "2658271574788448768043625811014615890319638528000000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "45"], 
        "119622220865480194561963161495657715064383733760000000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "46"], 
        "5502622159812088949850305428800254892961651752960000000000"], "+", 
       FractionBox[
        SuperscriptBox["x", "47"], 
        "258623241511168180642964355153611979969197632389120000000000"], "+", 
       
       FractionBox[
        SuperscriptBox["x", "48"], 
        "12413915592536072670862289047373375038521486354677760000000000"], 
       "+", 
       FractionBox[
        SuperscriptBox["x", "49"], 
        "608281864034267560872252163321295376887552831379210240000000000"]}], 
      ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"Re", "[", "x", "]"}]}]]}]], " ", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "+", "x", "+", 
           FractionBox[
            SuperscriptBox["x", "2"], "2"], "+", 
           FractionBox[
            SuperscriptBox["x", "3"], "6"], "+", 
           FractionBox[
            SuperscriptBox["x", "4"], "24"], "+", 
           FractionBox[
            SuperscriptBox["x", "5"], "120"], "+", 
           FractionBox[
            SuperscriptBox["x", "6"], "720"], "+", 
           FractionBox[
            SuperscriptBox["x", "7"], "5040"], "+", 
           FractionBox[
            SuperscriptBox["x", "8"], "40320"], "+", 
           FractionBox[
            SuperscriptBox["x", "9"], "362880"], "+", 
           FractionBox[
            SuperscriptBox["x", "10"], "3628800"], "+", 
           FractionBox[
            SuperscriptBox["x", "11"], "39916800"], "+", 
           FractionBox[
            SuperscriptBox["x", "12"], "479001600"], "+", 
           FractionBox[
            SuperscriptBox["x", "13"], "6227020800"], "+", 
           FractionBox[
            SuperscriptBox["x", "14"], "87178291200"], "+", 
           FractionBox[
            SuperscriptBox["x", "15"], "1307674368000"], "+", 
           FractionBox[
            SuperscriptBox["x", "16"], "20922789888000"], "+", 
           FractionBox[
            SuperscriptBox["x", "17"], "355687428096000"], "+", 
           FractionBox[
            SuperscriptBox["x", "18"], "6402373705728000"], "+", 
           FractionBox[
            SuperscriptBox["x", "19"], "121645100408832000"], "+", 
           FractionBox[
            SuperscriptBox["x", "20"], "2432902008176640000"], "+", 
           FractionBox[
            SuperscriptBox["x", "21"], "51090942171709440000"], "+", 
           FractionBox[
            SuperscriptBox["x", "22"], "1124000727777607680000"], "+", 
           FractionBox[
            SuperscriptBox["x", "23"], "25852016738884976640000"], "+", 
           FractionBox[
            SuperscriptBox["x", "24"], "620448401733239439360000"], "+", 
           FractionBox[
            SuperscriptBox["x", "25"], "15511210043330985984000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "26"], "403291461126605635584000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "27"], "10888869450418352160768000000"], "+", 
           
           FractionBox[
            SuperscriptBox["x", "28"], "304888344611713860501504000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "29"], "8841761993739701954543616000000"], 
           "+", 
           FractionBox[
            SuperscriptBox["x", "30"], "265252859812191058636308480000000"], 
           "+", 
           FractionBox[
            SuperscriptBox["x", "31"], "8222838654177922817725562880000000"], 
           "+", 
           FractionBox[
            SuperscriptBox["x", "32"], 
            "263130836933693530167218012160000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "33"], 
            "8683317618811886495518194401280000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "34"], 
            "295232799039604140847618609643520000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "35"], 
            "10333147966386144929666651337523200000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "36"], 
            "371993326789901217467999448150835200000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "37"], 
            "13763753091226345046315979581580902400000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "38"], 
            "523022617466601111760007224100074291200000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "39"], 
            "20397882081197443358640281739902897356800000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "40"], 
            "815915283247897734345611269596115894272000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "41"], 
            "33452526613163807108170062053440751665152000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "42"], 
            "1405006117752879898543142606244511569936384000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "43"], 
            "60415263063373835637355132068513997507264512000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "44"], 
            "2658271574788448768043625811014615890319638528000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "45"], 
            "119622220865480194561963161495657715064383733760000000000"], "+", 
           FractionBox[
            SuperscriptBox["x", "46"], 
            "5502622159812088949850305428800254892961651752960000000000"], 
           "+", 
           FractionBox[
            SuperscriptBox["x", "47"], 
            "258623241511168180642964355153611979969197632389120000000000"], 
           "+", 
           FractionBox[
            SuperscriptBox["x", "48"], 
            "12413915592536072670862289047373375038521486354677760000000000"],
            "+", 
           FractionBox[
            SuperscriptBox["x", "49"], 
            "608281864034267560872252163321295376887552831379210240000000000"]\
}], "]"}], "2"]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.768797908242661*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"abab33e9-785f-4a8d-8fe9-514b22a6e485"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Last", "@", 
    RowBox[{"Out", "@", "19"}]}], ",", " ", 
   RowBox[{"x", "\[Element]", "Reals"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768797920862834*^9, 3.76879792756728*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"e1097e80-549e-4815-8190-6372003343ac"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.768799067538069*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"533e53cf-70a3-4335-abfb-75259b0ca4eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "@", 
  RowBox[{"Last", "@", 
   RowBox[{"Out", "@", "19"}]}]}]], "Input",
 CellChangeTimes->{{3.7687990747159224`*^9, 3.7687990857533207`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"7e07fb04-adfa-4e93-8592-52845442118c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{
     RowBox[{"Times", "[", 
      RowBox[{
       RowBox[{"Power", "[", 
        RowBox[{
         RowBox[{"Plus", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Power", "[", 
            RowBox[{"E", ",", 
             RowBox[{"Times", "[", 
              RowBox[{"2", ",", 
               RowBox[{"Re", "[", "x", "]"}]}], "]"}]}], "]"}]}], "]"}], ",", 
         
         RowBox[{"Rational", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "2"}], "]"}]}], "]"}], ",", 
       RowBox[{"Power", "[", 
        RowBox[{
         RowBox[{"Plus", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Power", "[", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Plus", "[", 
               RowBox[{"1", ",", "x", ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "2"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "2"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "6"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "3"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "24"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "4"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "120"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "5"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "720"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "6"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "5040"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "7"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "40320"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "8"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "362880"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "9"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "3628800"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "10"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "39916800"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "11"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "479001600"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "12"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "6227020800"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "13"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "87178291200"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "14"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "1307674368000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "15"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "20922789888000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "16"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "355687428096000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "17"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "6402373705728000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "18"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "121645100408832000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "19"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "2432902008176640000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "20"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "51090942171709440000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "21"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "1124000727777607680000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "22"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "25852016738884976640000"}], "]"}], ",", 
                  
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "23"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "620448401733239439360000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "24"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "15511210043330985984000000"}], "]"}], 
                  ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "25"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "403291461126605635584000000"}], "]"}], 
                  ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "26"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "10888869450418352160768000000"}], "]"}],
                   ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "27"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "304888344611713860501504000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "28"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "8841761993739701954543616000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "29"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "265252859812191058636308480000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "30"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "8222838654177922817725562880000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "31"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "263130836933693530167218012160000000"}],
                    "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "32"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", "8683317618811886495518194401280000000"}], "]"}],
                   ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "33"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", "295232799039604140847618609643520000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "34"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", "10333147966386144929666651337523200000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "35"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", "371993326789901217467999448150835200000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "36"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", "13763753091226345046315979581580902400000000"}],
                    "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "37"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "523022617466601111760007224100074291200000000"}], "]"}], 
                  ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "38"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "20397882081197443358640281739902897356800000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "39"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "815915283247897734345611269596115894272000000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "40"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "33452526613163807108170062053440751665152000000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "41"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "1405006117752879898543142606244511569936384000000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "42"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "60415263063373835637355132068513997507264512000000000"}],
                    "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "43"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "2658271574788448768043625811014615890319638528000000000"}\
], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "44"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "119622220865480194561963161495657715064383733760000000000\
"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "45"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "550262215981208894985030542880025489296165175296000000000\
0"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "46"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "258623241511168180642964355153611979969197632389120000000\
000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "47"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "124139155925360726708622890473733750385214863546777600000\
00000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "48"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "608281864034267560872252163321295376887552831379210240000\
000000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "49"}], "]"}]}], "]"}]}], "]"}], "]"}], 
             ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"Rational", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "2"}], "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Times", "[", 
      RowBox[{
       RowBox[{"Power", "[", 
        RowBox[{"E", ",", "x"}], "]"}], ",", 
       RowBox[{"Power", "[", 
        RowBox[{
         RowBox[{"Plus", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Power", "[", 
            RowBox[{"E", ",", 
             RowBox[{"Times", "[", 
              RowBox[{"2", ",", 
               RowBox[{"Re", "[", "x", "]"}]}], "]"}]}], "]"}]}], "]"}], ",", 
         
         RowBox[{"Rational", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "2"}], "]"}]}], "]"}], ",", 
       RowBox[{"Plus", "[", 
        RowBox[{"1", ",", "x", ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "2"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "6"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "24"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "4"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "120"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "5"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "720"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "6"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "5040"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "7"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "40320"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "8"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "362880"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "9"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "3628800"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "10"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "39916800"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "11"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "479001600"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "12"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "6227020800"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "13"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "87178291200"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "14"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "1307674368000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "15"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "20922789888000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "16"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "355687428096000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "17"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "6402373705728000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "18"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "121645100408832000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "19"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "2432902008176640000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "20"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "51090942171709440000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "21"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "1124000727777607680000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "22"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "25852016738884976640000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "23"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "620448401733239439360000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "24"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "15511210043330985984000000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "25"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "403291461126605635584000000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "26"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "10888869450418352160768000000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "27"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "304888344611713860501504000000"}], "]"}], ",", 
           
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "28"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "8841761993739701954543616000000"}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "29"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "265252859812191058636308480000000"}], "]"}], 
           ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "30"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "8222838654177922817725562880000000"}], "]"}], 
           ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "31"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "263130836933693530167218012160000000"}], "]"}],
            ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "32"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "8683317618811886495518194401280000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "33"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "295232799039604140847618609643520000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "34"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "10333147966386144929666651337523200000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "35"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{"1", ",", "371993326789901217467999448150835200000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "36"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", "13763753091226345046315979581580902400000000"}], "]"}],
            ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "37"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", "523022617466601111760007224100074291200000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "38"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", "20397882081197443358640281739902897356800000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "39"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", "815915283247897734345611269596115894272000000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "40"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", "33452526613163807108170062053440751665152000000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "41"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", 
             "1405006117752879898543142606244511569936384000000000"}], "]"}], 
           ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "42"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", 
             "60415263063373835637355132068513997507264512000000000"}], "]"}],
            ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "43"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", 
             "2658271574788448768043625811014615890319638528000000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "44"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", 
             "119622220865480194561963161495657715064383733760000000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "45"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", 
             "5502622159812088949850305428800254892961651752960000000000"}], 
            "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "46"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", 
             "258623241511168180642964355153611979969197632389120000000000"}],
             "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "47"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", 
             "12413915592536072670862289047373375038521486354677760000000000"}\
], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "48"}], "]"}]}], "]"}], ",", 
         RowBox[{"Times", "[", 
          RowBox[{
           RowBox[{"Rational", "[", 
            RowBox[{
            "1", ",", 
             "608281864034267560872252163321295376887552831379210240000000000"\
}], "]"}], ",", 
           RowBox[{"Power", "[", 
            RowBox[{"x", ",", "49"}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"Power", "[", 
        RowBox[{
         RowBox[{"Plus", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Power", "[", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Plus", "[", 
               RowBox[{"1", ",", "x", ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "2"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "2"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "6"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "3"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "24"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "4"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "120"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "5"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "720"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "6"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "5040"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "7"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "40320"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "8"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "362880"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "9"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "3628800"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "10"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "39916800"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "11"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "479001600"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "12"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "6227020800"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "13"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "87178291200"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "14"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "1307674368000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "15"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "20922789888000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "16"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "355687428096000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "17"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "6402373705728000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "18"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "121645100408832000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "19"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "2432902008176640000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "20"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "51090942171709440000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "21"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "1124000727777607680000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "22"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "25852016738884976640000"}], "]"}], ",", 
                  
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "23"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "620448401733239439360000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "24"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "15511210043330985984000000"}], "]"}], 
                  ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "25"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "403291461126605635584000000"}], "]"}], 
                  ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "26"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "10888869450418352160768000000"}], "]"}],
                   ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "27"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "304888344611713860501504000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "28"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "8841761993739701954543616000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "29"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "265252859812191058636308480000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "30"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "8222838654177922817725562880000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "31"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{"1", ",", "263130836933693530167218012160000000"}],
                    "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "32"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", "8683317618811886495518194401280000000"}], "]"}],
                   ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "33"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", "295232799039604140847618609643520000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "34"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", "10333147966386144929666651337523200000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "35"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", "371993326789901217467999448150835200000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "36"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", "13763753091226345046315979581580902400000000"}],
                    "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "37"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "523022617466601111760007224100074291200000000"}], "]"}], 
                  ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "38"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "20397882081197443358640281739902897356800000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "39"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "815915283247897734345611269596115894272000000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "40"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "33452526613163807108170062053440751665152000000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "41"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "1405006117752879898543142606244511569936384000000000"}], 
                   "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "42"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "60415263063373835637355132068513997507264512000000000"}],
                    "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "43"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "2658271574788448768043625811014615890319638528000000000"}\
], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "44"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "119622220865480194561963161495657715064383733760000000000\
"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "45"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "550262215981208894985030542880025489296165175296000000000\
0"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "46"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "258623241511168180642964355153611979969197632389120000000\
000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "47"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "124139155925360726708622890473733750385214863546777600000\
00000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "48"}], "]"}]}], "]"}], ",", 
                RowBox[{"Times", "[", 
                 RowBox[{
                  RowBox[{"Rational", "[", 
                   RowBox[{
                   "1", ",", 
                    "608281864034267560872252163321295376887552831379210240000\
000000"}], "]"}], ",", 
                  RowBox[{"Power", "[", 
                   RowBox[{"x", ",", "49"}], "]"}]}], "]"}]}], "]"}], "]"}], 
             ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"Rational", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.768799086198305*^9},
 CellLabel->
  "Out[26]//FullForm=",ExpressionUUID->"b2b07aaa-2eaf-4311-a31e-da4cfdf8b6f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"%26", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[27]:=",ExpressionUUID->"06f4678e-d063-44f0-bdb9-1e55664ca77b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDwAmIQrWcv9ur/f/kDDGDwwd5csOXWmevyB/6DwXt7h8cf
T81cj5APaj+72jhe/sA/qHz5+Zbc9H1ycPkrV7hfHUyUhfNlD+SLmMvIwM3b
mn2Elf+uFFw+ocfww80mSbj8j0nVHfvtJQ78hfIX892TnPFQDC6/YA37sa2m
CP4cL8Oiy52iBxih5okF7/28wlIULt8f7Vla91IEbl9TTmKFpieCX828qrzo
rRBcf2LDeZVrKwTh8lP3Pp0xJ0sAzi/S/TXvUzU/nL/rvgbPGiU+uHsPBHX1
p/3ihcsfP/paSPESL9w9V1avk5zWyAsPv3flJuoND3jg8soCDk4h87jh/E1a
HVmPHnPA+fePblQwM2OD25dUuXhl1TcWuHlPdaYa7d/GDLffwHHW5yhOBL86
dP6Wb9FMcL5g3UozPUZGuP/VJRXPMlT/3w+T1zF7r7P085/9MPsjbN/V6Zv9
gss3u7y9sLPiO1ze58zZDZwnvuyHmScasm5CpPgnOD/Pf+KMvZrv4fxN347y
n1B5BTdv6e2nvS9b7u2H+Sc2UGbL7eQjcP5Oruqrh0oP28PUmz5ilGuMuA/n
K3/Y/dPq0Es433PxzbN+EZ/gfFdfIeavW7/D+f3x1xsMtv+B84/7yfIGCDE6
wPhvFUXrLs1idoDZX1qindgvxgaXv35HICjtBIcDzD8JlTbP2X244fxJl3bu
eLqCB67+sLZ512FWPrh5Olar31Xr8cHVT/GQDzYJ54OrT0tll1m6gs8BFr4c
86+vbfPmh8urce55scRDAC4vuyfblbVDEM5n+MW0suiREJz/PXBv3FFVEbj+
2ybx0qotonD5gnABQaU7YnC+5JQnESyyEnD166IXLP9cIQnnh9vWe5zYKwV3
/8a4XCWrP9Jw+R9czsw7Q2Xh/KCL1mayM+TgfAcOzQl8PvJwPrQ8gvMBJOES
AQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$14065219#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-8, 8}, {0.9999999999999997, 1.0000000000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768799256240897*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"debbcec2-f073-4ddf-9503-5473f3b49cbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{"\"\<UnitedStates\>\"", ",", " ", "\"\<Religions\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.768799263316182*^9, 3.76879927255434*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"b80e89d4-65ee-406a-a53d-b623e0afafdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
   TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], ",", 
   
   TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
    "Entity"], ",", 
   TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
    "Entity"], ",", 
   TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.768799278793214*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"45f3a4c2-2e94-4610-924b-add5fa6d51b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", 
  RowBox[{"\"\<UnitedStates\>\"", ",", " ", "\"\<ReligionsFractions\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7687992939694366`*^9, 3.768799294886924*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"c9e122dd-20a2-4ca4-b304-0e561feb2b3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], 
    "\[Rule]", "0.513`"}], ",", 
   RowBox[{
    TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
     "Entity"], "\[Rule]", "0.239`"}], ",", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], 
    "\[Rule]", "0.017`"}], ",", 
   RowBox[{
    TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
     "Entity"], "\[Rule]", "0.017`"}], ",", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], 
    "\[Rule]", "0.016`"}], ",", 
   RowBox[{
    TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
     "Entity"], "\[Rule]", "0.007`"}], ",", 
   RowBox[{
    TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
     "Entity"], "\[Rule]", "0.006`"}], ",", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}], "\[Rule]",
     "0.186`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768799296492113*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"f3f6df5e-21ea-443d-8654-14442a796e87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PercentForm", "@", 
     RowBox[{"Last", "@", "#"}]}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<Religion\>\"", ",", "\"\<Protestant\>\""}], "]"}], 
      "\[Rule]", "0.513`"}], ",", 
     RowBox[{
      TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
        "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
       
       "Entity"], "\[Rule]", "0.239`"}], ",", 
     RowBox[{
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<Religion\>\"", ",", "\"\<LatterDaySaints\>\""}], "]"}], 
      "\[Rule]", "0.017`"}], ",", 
     RowBox[{
      TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
        "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
       "Entity"], "\[Rule]", "0.017`"}], ",", 
     RowBox[{
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<Religion\>\"", ",", "\"\<OtherChristian\>\""}], "]"}], 
      "\[Rule]", "0.016`"}], ",", 
     RowBox[{
      TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
        "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
       "Entity"], "\[Rule]", "0.007`"}], ",", 
     RowBox[{
      TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
        "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
       "Entity"], "\[Rule]", "0.006`"}], ",", 
     RowBox[{
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<Religion\>\"", ",", "\"\<OtherNone\>\""}], "]"}], 
      "\[Rule]", "0.186`"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7687993796113443`*^9, 3.768799390412917*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c8c7bdee-0605-4a5b-8efe-3f9e0168b433"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    InterpretationBox["\<\"51.3%\"\>",
     0.513,
     AutoDelete->True],
    PercentForm], ",", 
   TagBox[
    InterpretationBox["\<\"23.9%\"\>",
     0.239,
     AutoDelete->True],
    PercentForm], ",", 
   TagBox[
    InterpretationBox["\<\"1.7%\"\>",
     0.017,
     AutoDelete->True],
    PercentForm], ",", 
   TagBox[
    InterpretationBox["\<\"1.7%\"\>",
     0.017,
     AutoDelete->True],
    PercentForm], ",", 
   TagBox[
    InterpretationBox["\<\"1.6%\"\>",
     0.016,
     AutoDelete->True],
    PercentForm], ",", 
   TagBox[
    InterpretationBox["\<\"0.7%\"\>",
     0.007,
     AutoDelete->True],
    PercentForm], ",", 
   TagBox[
    InterpretationBox["\<\"0.6%\"\>",
     0.006,
     AutoDelete->True],
    PercentForm], ",", 
   TagBox[
    InterpretationBox["\<\"18.6%\"\>",
     0.186,
     AutoDelete->True],
    PercentForm]}], "}"}]], "Output",
 CellChangeTimes->{3.768799390760025*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"b636c388-461d-4d24-b160-8a12825830e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "@", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CountryData", "[", 
      RowBox[{"#", ",", " ", "\"\<Religions\>\""}], "]"}], "&"}], ",", " ", 
    RowBox[{"CountryData", "[", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7687994875559607`*^9, 3.76879951463505*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"3106256f-bfca-41b3-8de6-cf73419f4559"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ShiaMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"AlbanianOrthodox\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChristianJewish\"\>"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Congregational Christian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Congregationalist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Congregationalist\\\"]\"",
       "\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
     "Entity"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Moravian\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfGod\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ArmenianApostolic\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Yezidi\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Confucianism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Confucian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Confucian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Russian Orthodox Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RussianOrthodox\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RussianOrthodox\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ArmenianOrthodox\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfGod\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EasternOrthodox\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Mennonite Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Mennonite\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Mennonite\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Vodoun\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Celestial\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"AfricanMethodistEpiscopal\"\>"}], 
      "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LamaisticBuddhist\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OrthodoxChristian\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Badimo\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Spiritualist\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"BantuVoodoo\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfGod\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"BulgarianOrthodox\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"TheravadaBuddhist\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ProtestantUnitedChurch\"\>"}], 
      "]"}], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Lutheran Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Lutheran\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Lutheran\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfGod\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"UnitedChurch\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Catholic\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Animist\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Atheist\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Evangelical\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Daoist\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"CookIslandsChristianChurch\"\>"}],
       "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Evangelical\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OrthodoxChristian\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Santeria\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Greek Orthodox Christian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"GreekOrthodox\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"GreekOrthodox\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"MaroniteCatholic\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ArmenianApostolic\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Kimbanguist\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Syncretic\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EvangelicalLutheran\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Rastafarian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfGod\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Coptic\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Mormon\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Coptic\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EvangelicalLutheran\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OrthodoxChristian\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "\"Ethiopian Orthodox Christian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"EthiopianOrthodox\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"EthiopianOrthodox\\\"]\"",
       "\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Animist\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EvangelicalLutheran\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"AssemblyOfGod\"\>"}], "]"}], ",", 
     
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LutheranNationalChurch\"\>"}], 
      "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Orthodox\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
     "Entity"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Animist\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OrthodoxChristian\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ArmenianGregorian\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"PentecostalCharismatic\"\>"}], 
      "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfEngland\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Greek Orthodox Christian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"GreekOrthodox\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"GreekOrthodox\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"Religion\"\>", ",", "\<\"EvangelicalLutheran\"\>"}], "]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Presbyterian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Presbyterian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Presbyterian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Congregational Christian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Congregationalist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Congregationalist\\\"]\"",
       "\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Seventh-day Adventist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Adventist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Adventist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Calvinist\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Lutheran Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Lutheran\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Lutheran\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"GreekCatholic\"\>"}], "]"}], ",", 
     
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LutheranChurchOfIceland\"\>"}], 
      "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ReykjavikFreeChurch\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"HafnarfjorourFreeChurch\"\>"}], 
      "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Sikhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Sikh\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Sikh\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ShiaMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Zoroastrianism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Zoroastrian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Zoroastrian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Bah\[AAcute]'\[IAcute] Faith\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Bahai\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Bahai\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfIreland\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Presbyterian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Presbyterian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Presbyterian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SocietyOfFriends\"\>"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ArabChristian\"\>"}], "]"}], ",", 
     
     TemplateBox[{"\"Druze\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Druze\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Druze\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfGod\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ShintoBuddhist\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Congregational Christian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Congregationalist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Congregationalist\\\"]\"",
       "\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Presbyterian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Presbyterian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Presbyterian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Russian Orthodox Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RussianOrthodox\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RussianOrthodox\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Bah\[AAcute]'\[IAcute] Faith\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Bahai\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Bahai\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfGod\"\>"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SerbianOrthodox\"\>"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ShiaMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Parsi\"\>"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Russian Orthodox Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RussianOrthodox\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RussianOrthodox\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Lutheran Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Lutheran\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Lutheran\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Orthodox\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ShiaMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Druze\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Druze\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Druze\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Ismailite\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Alawite\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Nusayri\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"MaroniteCatholic\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Greek Orthodox Christian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"GreekOrthodox\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"GreekOrthodox\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"MelkiteCatholic\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ArmenianOrthodox\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SyrianCatholic\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ArmenianCatholic\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SyrianOrthodox\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Chaldean\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Assyrian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Coptic\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Russian Orthodox Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RussianOrthodox\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RussianOrthodox\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"MacedonianOrthodox\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Taoism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Taoist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Taoist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Confucianism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Confucian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Confucian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
     "Entity"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"AssemblyOfGod\"\>"}], "]"}], ",", 
     
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"BukotNanJesus\"\>"}], "]"}], ",", 
     
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
     "Entity"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EasternOrthodox\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"BuddhistLamaist\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Shamanism\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Orthodox\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ZionistChristian\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Animist\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Lutheran Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Lutheran\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Lutheran\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Kirant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"DutchReformed\"\>"}], "]"}], ",", 
     
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Calvinist\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Other\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"None\"\>"}], "]"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Presbyterian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Presbyterian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Presbyterian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Evangelical\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Moravian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Episcopalian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EkalesiaNiue\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"UnitingChurchInAustralia\"\>"}], 
      "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
     "Entity"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"BuddhistConfucian\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Chondogyo\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfNorway\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"IbadhiMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ShiaMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ShiaMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Modekngei\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EvangelicalLutheran\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"UnitedChurch\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EvangelicalAlliance\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Bah\[AAcute]'\[IAcute] Faith\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Bahai\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Bahai\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Evangelical\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"IglesiaNiKristo\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Aglipayan\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EasternOrthodox\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Animist\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EasternOrthodox\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Russian Orthodox Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RussianOrthodox\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RussianOrthodox\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Seventh-day Adventist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Adventist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Adventist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Rastafarian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Evangelical\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Congregational Christian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Congregationalist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Congregationalist\\\"]\"",
       "\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"AssemblyOfGod\"\>"}], "]"}], ",", 
     
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"WorshipCentre\"\>"}], "]"}], ",", 
     
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
     "Entity"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Evangelical\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"NewApostolic\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Seventh-day Adventist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Adventist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Adventist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
     "Entity"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SerbianOrthodox\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Taoism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Taoist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Taoist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"GreekCatholic\"\>"}], "]"}], ",", 
     
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Orthodox\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfMelanesia\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SouthSeasEvangelical\"\>"}], 
      "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"UnitedChurch\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChristianFellowshipChurch\"\>"}], 
      "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ZionistChristian\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"PentecostalCharismatic\"\>"}], 
      "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"DutchReformed\"\>"}], "]"}], ",", 
     
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Animist\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"Entity", "[", 
     RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfNorway\"\>"}], "]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Zionist\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Bah\[AAcute]'\[IAcute] Faith\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Bahai\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Bahai\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Lutheran Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Lutheran\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Lutheran\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Orthodox\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Orthodox\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Alawite\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Druze\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Druze\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Druze\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Confucianism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Confucian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Confucian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Taoism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Taoist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Taoist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ShiaMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Congregational Christian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Congregationalist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Congregationalist\\\"]\"",
       "\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
     "Entity"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EasternOrthodox\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfGod\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfTuvalu\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     TemplateBox[{"\"Bah\[AAcute]'\[IAcute] Faith\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Bahai\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Bahai\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", 
       ",", "\<\"UkrainianOrthodoxKyivPatriarchate\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", 
       ",", "\<\"UkrainianOrthodoxMoscowPatriarchate\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"UkrainianGreekCatholic\"\>"}], 
      "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", 
       ",", "\<\"UkrainianAutocephalousOrthodox\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ShiaMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], 
     ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Episcopalian\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"EasternOrthodox\"\>"}], "]"}], 
     ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Presbyterian Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Presbyterian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Presbyterian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}],
      ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
     "Entity"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"HoaHao\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"CaoDai\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
      "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
     "Entity"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"ShiaMuslim\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"None\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
      "Entity"], ",", 
     TemplateBox[{"\"Bah\[AAcute]'\[IAcute] Faith\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Bahai\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Bahai\\\"]\"","\"religion\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Syncretic\"\>"}], "]"}], ",", 
     TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
       "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
      "Entity"], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
     RowBox[{"Entity", "[", 
      RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.768799547032041*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"7b9ee948-f21f-4cb9-9039-4ec6c24c277a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "@", "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"CountryData", "[", 
        RowBox[{"#", ",", " ", "\"\<Religions\>\""}], "]"}], "&"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"CountryData", "[", "]"}]}], "]"}], ",", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.768799568627466*^9, 3.768799590595393*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"b3d12775-2d0d-4ff6-bb60-8100156fd11f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"SunniMuslim\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ShiaMuslim\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherNone\"\>"}], "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   TemplateBox[{"\"Islam\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Muslim\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Muslim\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"AlbanianOrthodox\"\>"}], "]"}], ",", 
   TemplateBox[{"\"Roman Catholic Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"RomanCatholic\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"RomanCatholic\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ChristianJewish\"\>"}], "]"}], ",", 
   
   TemplateBox[{"\"Congregational Christian Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Congregationalist\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Congregationalist\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Indigenous\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Protestant\"\>"}], "]"}], ",", 
   TemplateBox[{"\"Anglican Communion\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Anglican\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Anglican\\\"]\"","\"religion\""},
    "Entity"], ",", 
   TemplateBox[{"\"Methodism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Methodist\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Methodist\\\"]\"","\"religion\""},
    "Entity"], ",", 
   TemplateBox[{"\"Christianity\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Christian\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Christian\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"SeventhDayAdventist\"\>"}], "]"}], 
   ",", 
   TemplateBox[{"\"Pentecostalism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Pentecostal\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Pentecostal\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Moravian\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"OtherChristian\"\>"}], "]"}], ",", 
   TemplateBox[{"\"Baptist Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Baptist\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Baptist\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfGod\"\>"}], "]"}], ",", 
   TemplateBox[{"\"Judaism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Jewish\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Jewish\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ArmenianApostolic\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Yezidi\"\>"}], "]"}], ",", 
   TemplateBox[{"\"Hinduism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Hindu\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Hindu\\\"]\"","\"religion\""},
    "Entity"], ",", 
   TemplateBox[{"\"Confucianism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Confucian\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Confucian\\\"]\"","\"religion\""},
    "Entity"], ",", 
   TemplateBox[{"\"Buddhism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Buddhist\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Buddhist\\\"]\"","\"religion\""},
    "Entity"], ",", 
   TemplateBox[{"\"Russian Orthodox Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"RussianOrthodox\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"RussianOrthodox\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ArmenianOrthodox\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"EasternOrthodox\"\>"}], "]"}], ",", 
   
   TemplateBox[{"\"Mennonite Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Mennonite\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Mennonite\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"JehovahsWitness\"\>"}], "]"}], ",", 
   
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Vodoun\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Celestial\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"AfricanMethodistEpiscopal\"\>"}], 
    "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"LamaisticBuddhist\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"OrthodoxChristian\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Badimo\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Spiritualist\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"BantuVoodoo\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"BulgarianOrthodox\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"TheravadaBuddhist\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ProtestantUnitedChurch\"\>"}], 
    "]"}], ",", 
   TemplateBox[{"\"Lutheran Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Lutheran\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Lutheran\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"UnitedChurch\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Catholic\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Animist\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Atheist\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Evangelical\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Daoist\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"CookIslandsChristianChurch\"\>"}], 
    "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"LatterDaySaints\"\>"}], "]"}], ",", 
   
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Santeria\"\>"}], "]"}], ",", 
   TemplateBox[{"\"Greek Orthodox Christian Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"GreekOrthodox\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"GreekOrthodox\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"MaroniteCatholic\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Kimbanguist\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Syncretic\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"EvangelicalLutheran\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Rastafarian\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Coptic\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Mormon\"\>"}], "]"}], ",", 
   TemplateBox[{
    "\"Ethiopian Orthodox Christian Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"EthiopianOrthodox\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"EthiopianOrthodox\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"AssemblyOfGod\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"LutheranNationalChurch\"\>"}], 
    "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Orthodox\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ArmenianGregorian\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"PentecostalCharismatic\"\>"}], 
    "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfEngland\"\>"}], "]"}], ",", 
   
   TemplateBox[{"\"Presbyterian Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Presbyterian\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Presbyterian\\\"]\"","\"religion\""},
    "Entity"], ",", 
   TemplateBox[{"\"Seventh-day Adventist Church\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Adventist\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Adventist\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Calvinist\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"GreekCatholic\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"LutheranChurchOfIceland\"\>"}], 
    "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ReykjavikFreeChurch\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"HafnarfjorourFreeChurch\"\>"}], 
    "]"}], ",", 
   TemplateBox[{"\"Sikhism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Sikh\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Sikh\\\"]\"","\"religion\""},
    "Entity"], ",", 
   TemplateBox[{"\"Zoroastrianism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Zoroastrian\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Zoroastrian\\\"]\"","\"religion\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bah\[AAcute]'\[IAcute] Faith\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Bahai\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Bahai\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfIreland\"\>"}], "]"}], ",", 
   
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"SocietyOfFriends\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ArabChristian\"\>"}], "]"}], ",", 
   TemplateBox[{"\"Druze\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Druze\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Druze\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ShintoBuddhist\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"SerbianOrthodox\"\>"}], "]"}], ",", 
   
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Parsi\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Ismailite\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Alawite\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Nusayri\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"MelkiteCatholic\"\>"}], "]"}], ",", 
   
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"SyrianCatholic\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ArmenianCatholic\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"SyrianOrthodox\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Chaldean\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Assyrian\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"MacedonianOrthodox\"\>"}], "]"}], 
   ",", 
   TemplateBox[{"\"Taoism\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Religion\"", ",", "\"Taoist\""}], "]"}],
     "\"Entity[\\\"Religion\\\", \\\"Taoist\\\"]\"","\"religion\""},
    "Entity"], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"BukotNanJesus\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"BuddhistLamaist\"\>"}], "]"}], ",", 
   
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Shamanism\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ZionistChristian\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Kirant\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"DutchReformed\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Other\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"None\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Episcopalian\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"EkalesiaNiue\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"UnitingChurchInAustralia\"\>"}], 
    "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"BuddhistConfucian\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Chondogyo\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfNorway\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"IbadhiMuslim\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Modekngei\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"EvangelicalAlliance\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"IglesiaNiKristo\"\>"}], "]"}], ",", 
   
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Aglipayan\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"WorshipCentre\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"NewApostolic\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfMelanesia\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"SouthSeasEvangelical\"\>"}], "]"}], 
   ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ChristianFellowshipChurch\"\>"}], 
    "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"Zionist\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"ChurchOfTuvalu\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", 
     ",", "\<\"UkrainianOrthodoxKyivPatriarchate\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", 
     ",", "\<\"UkrainianOrthodoxMoscowPatriarchate\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"UkrainianGreekCatholic\"\>"}], 
    "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", 
     ",", "\<\"UkrainianAutocephalousOrthodox\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"HoaHao\"\>"}], "]"}], ",", 
   RowBox[{"Entity", "[", 
    RowBox[{"\<\"Religion\"\>", ",", "\<\"CaoDai\"\>"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.768799590930386*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"27e9d276-2e31-4a42-9e77-ce743b36410e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7687996720512*^9, 3.76879967883574*^9}},
 CellLabel->"In[33]:=",
 CellID->714185566,ExpressionUUID->"fefb3f4f-c222-4555-a6d5-a4b28b7001a5"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
lP////8LyxXFig==
        "]], LineBox[CompressedData["
1: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

        "]], LineBox[CompressedData["
1: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
/z//A+ZJoSw=
        "]], LineBox[CompressedData["
1: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
73f/B4Phy6g=
        "]], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$14095718#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 4}, {-8.73428683140273, 10.347931368528446`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7687996791178217`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"b88c2222-f6aa-47ee-9738-58bef73a142a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Zeta", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768799698315716*^9, 3.768799699515654*^9}},
 CellLabel->"In[34]:=",
 CellID->941903703,ExpressionUUID->"3d1cc539-4207-4825-b328-b447a1a8378a"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, 
       "Charting`Private`Tag$14096069#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {-10.968367256714979`, 12.059475100586857`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768799703383521*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c4f3d0f2-854d-48f5-a0cd-09dc1ace4f05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Zeta", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768799708251582*^9, 3.76879970854165*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"81faa580-63ca-4524-81f7-08b7fdf71f36"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVkGk8FHobQEealKxZSlGWkmoIpVLdngolZcnVQjcR6iYp1ZRS1GhRuQqR
ZN8iQiEhnj9RWSayDbLNMGNmyE6IvL0fzu98OZ+O2snz1i5zKBRK3B/+bx1Q
FM7OzuJiM7GxNttVRecnNfwmp2bx/j+0rvsRopiZpac5MjaLjjpuG+fGy6G+
lvlJXu8s0nY4rN+dqYGbZe+0VLFmsYBp4TJSsQF3dg1VPM+YxQ5mpFYBxRit
7zNTN5yYRbeMNXdTz9ng1eo7504X/cYFLF0nGXMXrK9fKCx2nMHpjDknn+3x
RBVyXn6z8jQWafnF3HvqizlnS6nSbVNYRI2vfz37CB389QabGZOoyZLKZ+8O
xokgLz+ECWx+dlrUgRuG8VLtSmHscUz7YGH5jB2NEWZ6F+sejKG1XZEmoy0e
GW6Onmv2jeIFacf6A9Rk9BJ9dfXij2HckcKI81B7jY63qlc2Jg+h04WP2q+M
32BIITcswnUQwyo7jRJ2ZmN+h5ZEmno/7jgk7ZAlyEUNmZ27baJ6MeG29XDv
pwJ8u9bPldPFRz18WaNgRLCj7I3qpk08DGVfXx0uLEEuLUQf33VhmB1lpjav
DGW9UzbpiLBx268Sk6365UjbNEBLHGnFwiOnTBfzqtDX+EdNnicL6TcFq8SK
a1DBJv2J7eJaTFjxdjTEoQ7fjpdJf1lZgfGsH999NjVi4nfuf4I7RRidlRDR
wWzG4weVs787JWBwTlzv9eI27BsZM6SXxqNHs5eZZW0b3gitRqlV8aj1SeST
TlcbRnxnVO7ixeJQpuI2aWo7ZlfWlll+i0JDQ+UtR/a1Y8aomwa/5SnSWDle
EvXteKteq37ZR3OsGSh6f3i4A/PEvRpK6PHQNzzTSl/LxhhthboM9QR4Xn5D
w9SAjfesMmoiqhPgQuGyNPWdbLQJ7aq8siYJ+CJxSYOH2DiodqBkbVsycH3a
Ng/dZqOmoUpGkHE6MILmvfb/zsbyrBPGbx5kg4keNdk9hIMGHJHlt48iyPHt
vJU1u1En/8iQbgrC2GX/z6763agZ9Lq0cxKhXonnV7KjGxfGphnEmBPYFjs/
MuBIN05bHW2d7SfgoSWhHf6gG9syM9agXgmo0ag6fgPdGH3BvvSv3FJ4WBM5
T/IjFzUGCya3lpSDa4RR0/FHPXiDaXRn9Ec5KB7cvCv5RQ82vqqUSleqAEuJ
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
        "]], 
       LineBox[CompressedData["
1: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
+pKwCozHKYoCevi7yGIfEv4H7GatuQ==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$14096717#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-5.370106956571883, 6.536443530397131}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768799708848049*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"97a5ccf5-60fb-4cf2-98d4-396c0d3c0283"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intergrate", "[", 
  RowBox[{
   RowBox[{"Zeta", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7688015774889297`*^9, 3.7688015825608397`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"e9bc7642-5161-4321-915c-bc336b07e8b8"],

Cell[BoxData[
 RowBox[{"Intergrate", "[", 
  RowBox[{
   RowBox[{"Zeta", "[", "x", "]"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.7688015828230667`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"3517c5dc-e2fe-4fa5-8b03-252f500e5271"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Zeta", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{3.768801588119514*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"0cc2c0f2-4078-4004-a7ef-424f4966a649"],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"Zeta", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.768801589293898*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"07035cf3-3bd7-4811-a927-9cbeaef18eed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Threshold", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
AorqSmY1RTODBbODBcnBwidaygsdc0PP3zBIt4f688itJbTNVH31hOK9Nzjv
vF70zhs3ruTcLL5cKisStouVzrraL3pr/2lUjTqqpgjlnL8sEZQlwWkBdABs
Hp+1wwdpUFbgKAbCWMjGgBftnOIWb6ESAjxJR6du4gHJnF8OkTjqqPnOqP6q
p96prmsXVMoKREXvU6/m3L705q133ih5703ulZNluadr0rt7hyK36N0GWWFz
n7wh0l79N53sewtvxMq6b2OO2hhjNua4jTVuZz6wsx862JNO9rSbPeNGu1pz
Xh5MYJPYIeTBNuxkFGIwUqyAgLOXt+jhLLpZKRcz5WSm7LSUlTZvoc6bM5z1
xTFDcUxfGNUWRjUF8cHC1cGSn7W0DR13Uy9eN5SvG6u2h3VZ97Lt3WiQe7Lq
6smy998UwNfzndfzAfvl0zduvF1Iy2WICwW1HEWfospWqw621X3W2/AXTcM3
xobvLHU/2OvuOdT3napRZ82osxo+lFF71X1b9T0rfDVU/zKqv9XXfj1Y+2VP
3XB7rbdRba6u6ZJWqhhy4W1+6VXGjbcKr5y5denNm5feKHjvTcblE6KrJ8vT
bNN490GGaqrgEuBtHJDX3umo+EYn/t7Mumehj1jo95EYoyArfczKGLcBZOZD
B2vSyZrC+8toixYty2DOuOyEb+UCueLqx2ZGTgbI6WRedLEWnKyUg4kgW2lJ
MzVpoiaMpXEDOBkgF8V0hXFN4ZKm6JmGuqZlbeiFJOE1Y82aSbWFOKvy9jam
VQeBY7dj7BVXT8guv8l77w36pdeLL72e/+4bN987cf3yqeu5OTc/vJB/4w9F
+e8Ww1eg9CqNmkejX2PQr9FpeXRqLq30CrXwvdLb75Rcf6vw2vn8qzm33j91
472TN999E3Kg8N03YDhjvn9CcOWkPPeUEoNVXd13iGUfZMjem2/V8643dovr
htqU3+iE35sYd020uybqPRN1xAyi3bfQRi20MStt3Ep7YKM/sDMm7MxJB3PK
yZre5ezhxLzceHqw4C+khwYB4oy1iCBzFtysBRcr5WSk7MyUjT6PloNoSRMl
gcwMsYw4x3VFC9qip1rqCy1jXSfcMJQB4XVj9ZqpGnHWV2+FNFnb06o084Oc
D98USe5iV+edrMo9qcw9WQ6Bc+WE9MoJMZjw8pvCy28KLr/Jx4KO4MoJEfzo
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
g4dP1u3dGXFMVtfuJcYZ9e6fmNyf2/tC++qp8nffYFz8/bULr7333tm80mt0
Jbu8t6Im1K7+00DlN1rZv/X8ESNn1MgcNdBGDZT7esp9XemItgR0T4NbXck9
fck9Y/GIEdqSu8bSH4y07w2Mf+o5fx3k/7FP+HGXxNsi76+Q1/BEvCLmrSvX
AWzO6xeg4j3zm4tvvfbBuyfowDYvpypvj236gVGZfsN+2lnWPb/PyYc4H9Kv
cM6y9y7hU/sJ7/s7UEfdnX10pJB3BtUA8PdPcN9+7fa53105+/t3Lrz57vvn
P7hxuYh6nSEq4am40g5ZmUZZYVIpbbVKR73S1VDhaigHOerLbXVlJlWZpkre
UyZrFosq2XxBMZNyvfTG5dtX3sp7+9Qfcl4/d/p34NiL5373/tuvXX/vBPXK
KdHVM8rcs+qMY9NIDxBO6xyCnKa9n/Mv6aiKLouzen+9oco95Oqjo+PM/j+K
cVxKp59McuCDUGW1NbmnK6+clLx3gv3OGyVvvXYD4Jz5zVunf3Ph1G8gOS+c
+f3FtF7D+j1cOX/6d/Cjc6d/AzoPLj33u0tg1D+8fvvdN6nvn+RcOS2+eqY8
N6cm92ztIZINe3bNZottnHlnQ1Y+N/4q6ryDM5TGw7khpehfSVSQIVsSGm6z
O1h7fdrexYz0mZ/q970n651SGrxHJ6VpJNQBMbVPTOkRUbqEpR3C0vZdiSid
Ikq3mNorofZJaAMSmlZK00npRizTQTGQJKg1gyRY0j2l3ybZe/+BN5C/YsF9
i5SJBC8zV8g344sHBGyZVmhBXY13/j97ANoK
      "], {{0, 90}, {120, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->{499.2000000000002, Automatic},
    ImageSizeRaw->{120, 90},
    PlotRange->{{0, 120}, {0, 90}}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Hard\>\"", ",", "\"\<Cluster\>\""}], "}"}]}], "]"}]], "Input",\

 CellLabel->"In[38]:=",
 CellID->271213070,ExpressionUUID->"5c2651e6-06d9-4c14-9e29-18afda9b3433"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJy9nUd3G9ue3feyJx76K/hbeOqhp+3liWfdy8+9PHleyCAJRpAgMgpAVSEU
Mggq3/R0b1/dd5MkShQpMScwSlSgJOb+Bj7/c6oKBYKkKErdWFu1iiAkUT9s
7PM/Uf/ln/7fP/yf/wDA8Z/Y5R/+0fPf7PZ/7Pof/5l98T//6vi///zXv/zv
//5X51/++S/2//pP/5E9+b/YLy/7RfeAzZC9XQ7AxV/XNYyuQk/X92HHHzKe
5fCigNkiaY7dFDCjkV5wPc/zmwJphr2mhDmmMlcJ80JlLvGtov5HsddP5vBr
ynE30KU4fb3oAbrZX81/BscV5OQyb87cf4lcXGfurTdX+S1xjtTkLH42jxte
Ca6bQ/ZfJExk8VyALRDYNmmYZZDzpBeGBPOZAolhnC/pV1JRFz1ToJsFpgJp
XmuJ/bEvcpiQ8VPEUe3xBAl4N3/HXQZAK95LOH8hatd5N1ad+5pz34W4QZg9
447AdcuPP9J4rnEUDALns8A1L+BwmZzJ0nmSoD3Dyc8W9DdFJ8n/nEV+s8jB
zhf0q7jRpelabNdcHs9UPIii0u3uI4cz4O4r+PnLjW21rutTJC8X4+xNwX0/
jKmszuGMlpisqHlctAHnKHTanPOc1s65HXLLwwbhRSGTbZ60pJGW2VV8ya45
zGbxSMKNPtdAy+GdwDtdfT3UndZ1XQFs52soN1iisn/+sqGlAldRl/48A2Xh
bELW740Pu+nqWa3tvTDBLlrda/GwDlmwZdccaZFryVQWi1wLGdKMit9jKLq9
PFI85/HsdPsXWvqiVPnke8SUWCmBSfBcsQA3n6Hv8tcsGbZcKLY4L4h4KRio
DT8Lq+uOLRo3mm5dnbD5pMCbx7KQ4MyptghnSEsc8oJKmlcxp2IyhbuDLh+1
m94OvNfm3GnIT77mzPtyhnackVwVPAXnUsvD9BZwzkyrnLbIkEWz/SpaJGJE
00NbqDN7dbzWKBaEOdtlQ0tnnCzYMtRqSwsK5mUsyHR9nsL3fpbevnZvf2Fo
dEbH5TbuTJgW59UCmFZMWZgLvKvlloTzddqlFuRFs4GzOHnO2sx1EF6wRrHJ
NksyOS9ndS1xwgsc7xIXoVZ0LclYVrCmYCWNn/p7XETb9TUSo1PXeHeM3Cha
IHPmzN5rJboyyOxmrayLUJveLpOWuMMXS4aMam3OkJnneqsnCOdJgvCiBS/F
QtYgLMQgZ3QtWZzM7tkzKxk0M9jO4HUGexl8zOAwS9pIugsY4LX3V2kBL2oH
Ly9COjhzvMvG9VzOTYG6ol9Ne+uoSy3UArLeiym2AqRVHud1zgu8mVsQIWy0
cUuGrDYWySzCeSWLZhZbWbzOYS+H/RwOczjKcmVwnNXvGfZfBvqAPiOxr50V
5+bGJQXehZyXjfJpRWv5mVBz2s0SQV6vkJpcAjXdMOAVjrrMSxHe6ZspY7qI
Z6WWppiK9ORz3n9hNQlDPZ/jnK14Mzpe/Z5L4GVPrmaxmcNuDu/zOMjjmEnD
ca5NDC9duY75y6bDfV4Mtdd+V7TxJdFxrskvf7Hb5KwXqyI6ioYE5LJO2ESt
Q65iuYqFCl7U8LSKP6uOB5WuH4q9t3KDNXm4nBopJgMFKVBOBcaUkdv5ke+L
gw8qPQ+rjsky77lz2ou5Nhu3AoTjXc9hJ4+3GvY1HGk40QjvSYFL03V8no64
DtlHSertgv/Krr6oWjgX71XeiHP8vGxwXhG5wSVCQ5eF8GKV8D6q278v+Yqp
QGgo0mWLAEJhINSusPGtSBei4cF4NR25Xx54XHW+YNmSw7xZthnWfa3hQwFH
RRwXccJ1WqKr+SVDfVzQmbObFts8aT+Pj3l8yONdHg9jrFkcum7DdxUzX+5k
3c9nzLxS1GuMtQ6JQGYGnqrjQc2ryYHe7jjvUTJJQMoJtQf5PhQGUBxEqQ9a
L/I9yPXSkxq7cUPmL2bAg+w61CXdzUaeNXyzFSrttph1C9hnMBlSrlNxI8Dy
e8GZXY8KONRwoOGjhvca8WSJ/ZJFdwYbWWofV3lDKertO/5BoPffAPVVOAsl
RJMk2iaddlE3c4t2BStlLJbxvIpf686iGvC4UkASSDuR8xHVsp9UGUGVKYDa
CGrDqA6h0odSL4rsOoASf1lpCKV+aG6kOfCo4lEflGJLN7ve1xzHRRtZt4BT
kQ+c+VEJhyV8LOJ9kTLkdR4v89jOk+3Xs1jLUuPYKktE5oj6xEj4mQz7RIV4
aX29FvALIRNn9pllmsvytinPu2YFS5ewRISXeBs3WcX9elcknAAyQLaHc2Mk
/cS2Nspkqwdt9RC7ohpEcRTaCPJ+FIZQHiTmtUFUuBjq4jCKAWijUOKQJGTK
kjpza3Cv4mT+/FDEXglvS9gtYbuIrQI2CmhqWGPKYzVvqfpyetO53KElo0QR
xcyDOKs9hv9dnOy2xIWFM+vAKtSHnRcdrpw+zmCO6izwEc4nJfw45onEWD6w
NCgMO8irzLoMb9BeD9nHmKKoxaFEEBxCfxd6HFTBMgt5nejtRciPzIitPoI6
93l5GKVh/l6kkdEgRZAvKcmVu93rVf3TpPeVRJqJ5sPomFMnPdsqV/ReudGG
Com+uX6fxYss+pHg/+R/h7iwQtbzeU7FnELSOWf1ARwhZnLWTk3l8HsFpaLf
5WGpm496GSUWDtWQTYcccTQStloSYbf+2ezs9rK/q3sYiVH72KhtbBT1EGoh
VIKoxFHWIIch+33a81uD6+PGEBav5+nDpenXRcsInj7QZHR2dNr8ZkGMNfEb
8xlWTBYGGOceIyKuR9h9NSefMTNxnpXBNMOuCg3LzGdgJskcH4dkTniSwy91
W0qNeBz1qLMQd5VGbdWIvRZx1MOOsahjLOFopKDxkRz7BRLA+/3M/45GmJnf
Xo/bSDFUs8jFkenzVv9WH1255VjiDe6y0cfXe/p8AMocS1w8M2ZidDNFczOf
17XAr3N5+lTei0Y6Co/PyoHOTOhEem44E+epNKZSuqZlPJfxgmFXdL1Q6MkJ
Gb9WkdXC3a56ElrKXmSQY4563DkWczbijkbSXk+jyPtfnXhNyMzqkt/RYJyZ
/9nvkuxjEnuPbDUV2QiL8f76/RsjSzeoa79WNFTQRR0oja7ifkXEiLC3ZoSJ
IeHzFnmefj8kQkZEf5Zv3R3PXOLeTsI652YU61Gw60aMtBXHdgI7ErYl/bop
YSWB6bztXmNwZKQQRamCfNxWjTvqSedYytlIOhspe11FJYmcg5p1nzECL/5S
D/+0Djugjjgbo67xsHOcvTsS/caxpGMs7ahkbNlhR6Uiywv3etbH9M7ReklX
s4hmgUszrhq1hqs5vVlkN+K6ktOvK3m6Mvgr5lhrAXfDws/XaM4ucunVlXgf
wfsw2PVDFB9i+BDHhwTeS9iT8DaJ1xJ2k3iZxHYasxXvzcpocKBYRqmKQtJR
k5xjadeY7BpTHXXVVpNRkVAKoTBIxZ7ihdKFjA+5fmryagHHWNA5HnGNx1zj
kquRdDVSrkbGO1bsrsS91XpCWbnbt3MLm2PYrJE2qtioEPANwbxIwNcN4Izw
miDMtZZr3euosxbxlj3bm4Q+lHdFS18UBdcALh1GcRDFfgwf43gfx14C7yS8
SxJkdn2fwscUDlK2/bR9L+NYrrl/qA5pkVytu1pyFTOuiuyqy84x1VnPOOoZ
hppaw2oc1ZitFrHVwnYKcKaIsxF1jSc8NyTPjaR7nEnxNLSuscpAoxCsf5tP
rt317dzEdgPbY9iqY6umXzerBnDR5S/zIReOfb3YxlxXTue/Yth7lReBLzI2
HxX8lzdkZ4LiokbtGqglZuC9ON7G8CZOepfABwn7ScaWK40DxXaQwUEWe1ka
hJzVWHfbfbsYViP5VG9Z8Vay7mrOVcs66+RqZ11xEPk0ixTXGDOt5G4IsCnP
uOwdz3U18t561lvL+ar1YOkXTV657X951/XyBnbGCPIOx7td46iNG0ZbSDh8
XQwhGjHetCS5SBUr/FU+RPZDZAQY+Rwnd5L8ktyQ3kbxOoo3UezFKDEE4f00
9hXsc7wfstjNoKnSzIWoTF6otNLgSd3+Y32onpfy8XxuuJzxlbNdlZynkidV
c55azlPPeeu5LlK+p5bvqef6qtpguRLKf6fKj+vh9bt9u3ecuzfxapz0coxQ
M87bNV2EukoiyJWWNniYCGM3S8YorhhmNIccLQ3o86xtUC+eraFxCfNz2X4R
59cxvOVx8SGJjxwvuTeDDyp2FTRlLLBkThPeOVH4GT0aKv806ifOjuHZjZ7f
Gv771fA3RembvDwmq/VU5mY6e1vO3VYy3+WU+4Xk36vRiUZg7mZ/87Z35479
5S28YoRv6JBfNUgvLZx32NUKmbMVnLe4xDOm1tuZrxmdHVYBlvrDPJk/K5a/
PCvaOO/xEP4gY1/FgYoPCnZlNFOYT+JFCi/SJAGZdRsXFL2TJSY+9KZc08ta
msmqYLGGeaYxLI5huYGVBtYaaDKNY2Mcmw1sNSiHd5iBx7HD2HK9GiPIpDpp
R1xN2qaZyxQdrfuyHiO6yUst4Ot8UJeViN+wnigG+TKVq5cZXyJP+72QxAz8
UcGejFcprCU5XgnTSZrZfM4hs6yYk/W+uTm7IWbxqHDSjP5awehQmAs/+FQL
9TgqWGG96RrWG9hoUEWxxcUgm5wZ4VcmZ453p65D3qliu0IiG5dJm2UDslH7
6ffWJ/kI2A8RRniAL2/73F7JV6Hd4ryTwmoSswk8Z3glwsts/Jw7eYYnxly7
mc2+OflZTMRYJnDbBqA45BWhKo1aN8fAyuNNUVGI9q7OM9k0s6Bd051M4px3
DM7b1tAotThbJczMfoY7AT8fDr06ZGu1fG2850oSeKekloFnDM3xKft5w8xi
ZEYMHQjOKybnoj6aumJIDPStiJnECtaqpGbN4CyKZB6/25x2C3hdt/TLmk5Y
QDa1ZRi7xbmoV9e6SpjJIe8b5lOxts8cx/i6Nm5xnkqCabrdw7OGk4WNRcMn
tGiZkl5pN7OVs3VNwpqVc71laVGqUUVhFBg7dUOmkw0zb5dbwNvaQRM1dzJr
Af+e6O6nQMYFmey+lPDnovZc8ORZzs845GkeFybeOSOTzZU/1lgWHVsx2mDO
266W2sczrZwN1E2hOtHerOuWFvXDdrVVZuyYNx2ot42I1oO6RNooEm0GeUp1
ZDz9aD0+d0TuqyTz+ZxZk0etXhIzqZaHTcKtOX0+eG4SXtPapmvN+cRVi7HF
eo81cxFIpc3YGwbnLcOfhNqiHeu1MzqMBlFY+kXGXuvttRB2fCbhizgLSl6L
xIJVK8Nzc+NsvcHiQnBmfp4R1YViBHKmbUFFC7LoAhQtDMvnhYb4VqltFoyu
DHWNu7pmQV2+jLYo7c6g3uRdlWeKs9TtQ9vjc9kKkt28xu6zoc+H/lEMJDGQ
c/ZVunrHfL6bvd13+rz3+j13+7x3fO5b3c5xt7ts78qhN4H+YfR50M+HK3v5
oFnneyFNp43mTzY6I0pr5H/RMvuzbHIu6us6mu2ztKsW2q0FYyZ8a5hUDFcb
reGmGQiVNm1X2/CatfSShgfRrijflvCZQeE2qbrBOjB9mtd3N9D7IOF9pDin
cvZZjYrSFbFMRfTxSzSQwrrwzRxNR65lsKpiVcGKTCvNllNYkDATx2QYDwP4
eQA3XB4Jvh5i3mdglxSX429BPEnRUPOsoofGvGV6Rbe00fCtciefXWxgWRjW
Co1ye2KLSSiTc4VzNoaJNsttOkubX9nLWKH+e8KTdZ3Bezlh4VgGtqcHvrS9
++aQ5+e4Y0KlpTvzBepeLbdP8ZtLg9bFcArLf40WkzSzNP6wpmBVxmqaIK8k
scwkYTmBJaY4FqOYj2A2jOkgHg3jfre9iP6MN2/+oFHg3jAeJWlp8byltDBn
5ZaNBUtWP+tjaBbUa5bcEGxp+sm6RKRorAwxlt9sCFk60ZtGF5s9z148rdrv
B5lJPB14L8lhDzdStx9dhW73d0H8lsLTDKZzfIV2ngYNFsWCt5LejjSNEap1
8cPwK1Uymu5ksrFKkIlwikOWdLxEOEaQFyKYD2EuhMUQNiJ4G6WB0I+1UMdP
Tj9i2mH7JmB/mKJJqwVjgYe+usOg1LaExjSD2SbyOsScRV3Jt82A0PtVai0h
W7dwXueNKftLn8rO7wNe1eFyd/6IF3aiRSb0+NCT87i/ZWwlmgx6qtDOi2lm
YL7GYJZPyemT+0XL+2704sXniz5KrJ4xzZyhxGBmXpOxlsYq69/xGZBlBjlG
WmBODhNhxnk1hF0+pH8Yw2EcJ2OjxtSS2A10zoPle8btujvi+jXheKrSzgj2
QVvhi+tWzSqi0oroldI589RLecvUkqZ30sWiU/ansUh8qtp/Szi/GfZknO7+
c38OetgvmNfT8QbgrffbforizxQm0njCCMuYlPGMScGUgucqq0wwmzM48x9D
JEbTCArxaWItBZWRjHMBG3lsiNDIoKmgmcYaH6PQOce4n2Pk5IUwlkPYCdG8
yWEURzEcxHGQwEkj2jFVKnTZg/3DAoDsclb63LdHvD+EvT8nvL+l3A8V92PV
+STjeJqxP83Y2JvCjPREtj1Os4+G4/eE80HMdT/kujfsbvS7Cl3OpM0+9Mm/
rMW2c/JU4O0KwjU+gJ8Z3iQeM8Ipam6YnjKlMZkmzibkGW7meT5pKFaqtMxs
DEYRZ+5kgszNvJHFOh8cJshpGqk4Y+alKJbD2AzjbRj7EbKxILyfsO9LjmPi
7Lhg2tSU/RMkvvLDfumaw1b2+uEe6+N4JdocxPSYpUSSJCAT4TSmOORphYbN
zdAQU+FWzutm61Ayuj8G5HXTyTI5WYfMOQsnL0exHsFrFhQRmpw65IQPErZ9
yUacY7bjarjDz52cz9WFOXPlh6397/rk4jexCMTrQFfe6/gxzN3LqHK8jxP6
lX35JMkhpwjyM2FmmXPmqGczrcVX1OhYORtDJdTB5Iug1vMtyK1YThLk5YTe
9q1GsRPFXgT7fAbwIIb9uI0UI2N/DGI/gONC8AIDXwX1J3XF1bBXJNzN4vf2
MH6XeDIkSYyqkOBMkA3OArVpaVoyYeG8YCy7WjHLJwPyOp/tXRdmFpxVnTOD
3Coz4liJYTOGN3xqleElwuyeFRhhfBzFhxF8HCbtjzDO/naqX4vwF+4NsaYE
LUuQXZ5/iVO7Ro1amgA+TZJMzsLVLc4W1MQ5fZZzy88FY5LRHIwyLa1R8ydi
mWpmXsstG5Cbcewm8D4hIoITjnC8w/gwhI9D2Gfy05fvGPDC4Oc7uXNZ1+Wc
rw2cCBd97j9kKnpZSTbNa7NpE3WqzdITl3LWo4NznuWcF40ewZplQLXJUeu5
kdc5r/GaeTmNpSSWJKwmaInLOz7Nd5CyEWRu4I9+jneQxFDv+fF2GK+5PhQG
Lm0BzwXrPI/kGZjnvsx5Hvlz3wVG2Fft9z5W+a58sXM8R8X88yyhZu0aS10T
NUnSk1nIGhp6UyhTvUHtoPBzXue8anAWZt4QZUZRL+fWjV72ioKlNDl5Q8Lr
FN7L2Jfth0k7ZcUoDvw44IQZ570hvPUT212/rlfD2NP6Pz80rsL5IqpXyeGe
Sm8X67i1ttny8xBmDNom6kmOWkB+0g5ZFBuTvBE0Uet1nZEbNFWRb89nK2Re
aYg+4ArfMbeewss03tI0n/0w7TxM2A5Z/cYgD1NEfPDjHcPrt+D14+UQNofQ
HMJ23nc1wufS+/JkOEPYl/X0TCh8bpEvWVzQ9FWIc8bm8RkTdYa6Hgy1oCqC
ouVkg7MpvYQ2qrs5IzoEZ+Fk08yiBSTIGYLMQmNLwWsV71XHgew8SjqO4jhi
kENUS1ACD5OH3wjOQ4R3awhrQ1j0Y24Es0HWj+u6soEvMarV5FcHa31xdxB9
v6Wci8agk1iRKzZymktA54yDEc6gnkzrbFuQL+BMhXSG8meGL4htNYXta5xW
xfI8BlnFRob2ee1lHQeK+yjlPE7gOIYjViSzVi+EvQD2hsnJbznhFt4AZkOY
CWMmilnWaI51fcrMF8XvJzP2ivLY0P9NsGuhpHfkRbddcLaeV2Auxma9ZuKc
w3QWUyqh1sNB4G3Pjaem2NvBXpmhtdzTBUyVMVXDdMMxecMzeav7+e3u+bvd
S3c8S7eci2O0f4EiJUtbZt7knfsZ77HsPkk6jiUwJx/yKm6fc/4wSpxZSmz6
sTKMhVEa35iNYDZGeGcSmE1iLoXmDe+V0/gSW17yskt+L6vZfGnn4FTe0axi
vdoaYm0bUC0Yi2856gW+OUusyp7O6q4WcT1ltIyiu20l/CyLyQIelXG/1D2e
G8omA+HRwEBfoNsTsNsDNtuoyxnydUdCIwk5lWyUEj/fDE3eG1y81feq0neY
7T6RXScp+3ESRwmCTENDUeK8F8JuEBujWA7SyMZ8FHNxzCUwJxHb+RSt4GJa
ZLFz65O5cbmHL3nBJ2wMDP4Q8a1UiDCpol/btiiWddpiZFVf1Wwam3/8BfCp
DI3IiQwReGkQKYtHBTwouMbTA5F+v40WcvRAH37v5ernS2jEGg/xzABX1N+v
lHLSxJ3gznj/fs51lMIR4yzRqMXHGC1H3ImhGeNdbwmLSSwksZjCYpqXJWma
AmCpzro2zTTp1c1zd/dfTvvLm7yeMPyTOfc6H+dfrxqj/VVjaN1q75KFthU4
9/acgZpiJEexMKniqYpHGn7UXJnYgNsuAHo5zIAL8QEoI8iNIM+lMQ1D89N+
peww1BGk/YgNIByA1Ivs6JB6vxFu3ur7kKG1ym/i2ElQ4UFD0AqlN6tG1vjc
yppBlX2XlLZIxqtb7qtx/ip4RVYMVAdGlsq2DT5pxdiK1c6bxlwhDURXLTud
jfFt6ywYLXwyjjuYN2gz1M80PCrhZqZrsG+Im5ZVU4NOJPqRCaAwilJQVzmE
SlhXmSnIFUIpjKIETYVaQFJBoguyNJJ7dntkreGksxH4/v3VLA37s9J6g29X
3FKxqWBTJm1wrXORk2UuhXG+PJ+vEQiXiL2n/r/FhppiUQGf725bc8tl3rdm
jixTNvp8TdFSlvCdKawUmSzhdsbr6xo0Pv6RAWRHaPdceVQHW420VIuiJq5R
VJlitGy7wlWOo5SFVkNyCGGvvVTPSVO3e+aKNFvBiuqtHLaZsqQtjnozgw2V
S2lBXkvrqNmXuzcvyWfnV/Wz14XRP5T+DcvKjS0L5w0LZzGN1TZDV9bXy5kz
7OZEJJ0pVGE2dsb9fuiTzokhaAxvgPZzVcOoGWJ4yxFoEeSiyMfsxZijFrOP
xVCPocaUQFVCNYlKglQuIKsi7bNXUlL28e1eVhGt5bGZpy3nOxpXngPPEWdC
LcRLwXVVH31q8puXt7o/p9i4NvCufoSe5n0tyJag0HdJnMlqE3W53dXltiRZ
KWOmhjtKt4M2+LCsYPHbRjiim1ZLIBbHUBi+EXQN0M/TPYzeKPyqS5U843FH
I466hFoSNZlQE3AVhTSyfY56Nq0+veNbrtC4x1YROyWuoq7tAjb5iNMGD5P1
DB/i432cVb5dnfV3Xt65nHNn2ez81DPnQGbNypTWzSBvGEg3L5DeGraHhunq
M3OR7B/+hH22o4N8F1WoF/kASqOohHgsRFAP075RLYXRCLye1gIY67IKFpsD
MUcl5r6RsI1JqKdQU1BNcdQq8gkUBrsb31ViC7fda3xJw04ZLyt4WW6h3tbI
5Jt8zkW3NI/udUOM/+7dz/LzdeLCh8ik1sNKC1FF6M1frcPGldY+lHMN3Hay
TQlLLCvqtmiYZUXIATloZ3gphAVhrloaqgSfTW9/L1oR1zdsq0XdN+L2Mck2
lrbVVWZpW12xVUvO/Kizno4WntweXG3QR2+nyiFX8KqMVyW8LOJlgQJkO0+h
vZklbQmJL3mYU2fnXvd5SL9WJnucCD/K9jZrxqR2ZwlXaZUWVtO2DrEpWabR
+dzHMj8Q71kdaooFRcyDbKJnPEzBq9s4SpDHZOTj+u7XS9YfMj9Lka6bUSdF
R8oxptgZ4bpqr9e6q1pvIzpc/XU8uHLLscmXsL6qkl5XSLtMZY662ApqvYk0
8G7lOzlf3c9X5M/+gcGfk4OrFX3xQNOIX2ssNC03ZxY4rXUs2xP180KBjk24
W+qBI8WavHhvQxRp1JbZCDJv11gCxC5daitWzkSHHfWQczzmaCQdDdnRUBy0
R6/eUx8bGk+O1n9qxJbverb4doPdOl7XuKpcFdrmv1vEqwJvGQ284mY7b3DO
U7C8/cb3tTsmLuNmaDwwulxuzdqbSzXMPkizvUI29/WIbSZrxRZhoSV+pNhs
EQ/riERGAdXvzMTdtEk8RlFco13Mtjpr0dh9gM6d8F7AmVVZflYbD6M6ahuL
OmirqcyVcdar3kqlv56JVn++EV2649m5gd0GXjfwZgxv6nhTw9saXd9U8cZA
/VKjoyp2DG1rRkHCxIPl3Sc4X8/JTurxOWJzliNTmhbrrncSNtzbNGu2YmtV
3rIxrLTAj1d6VsQ3NZerXwLrRHTl4g6WydUEapKtztqyhI2VDfUEYS/xAwoG
jBVu3byu9jsR6Yc6jNIIHV7BcoZ2O7KaOe2o5521sruk9NWKqjZxN7B2x/ny
Bl6P400Db8e46qR3HPVbxrlMkIWlCbWpQruKePftJZyvV10IS4f/VHvM9VRr
xiIxK+fWOjFjdY25zEbnXOgYRMrS6PGTAu7V3M5BGchK9kzaVmZ9DVaSpWz1
pBCY2DPlBIqsTg5BDUEJQg0iP4pCgAgXR1AIohhCgSmMkoRiBpriKSnh8jd1
aeK2b5VvUyIbN1qE3xqE31YI8mtu5t0CXmmf4vzduZy/sPnrrwyFl0v6Jj7r
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
    "], {{0, 90}, {120, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{567.2, Automatic},
  ImageSizeRaw->{120, 90},
  PlotRange->{{0, 120}, {0, 90}}]], "Output",
 CellChangeTimes->{3.768801696549016*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"8155493a-4008-496d-9b80-24d89d36f2c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageHistogram", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
imPl2Bd10daZt7nTP52mjH6+AH6de6p6ev267Gck9bt/eXTvMwCf74E/YBX+
f5S9BXBU6bou/HaUuBF3d3d3d3d3xQaHwQYfdHAJQWJESYhr27KWdMcTYBjZ
4y44pP+1sve5Z5977j11/6q3urqhqQo8/dgnjV5Bm0Ed02U7M/fw2N4rU1Y7
ERkSxDq2fC1LuoopV8mQKpkWK5yUK5xUzJ9Uyp/YUDStUDKtVcpQLiDTEbqh
nClRSt9QQidRpqZoSoxEsICuUMSQLpg8fvbssdONJy/eeNRecrtx74Ez1Dmx
K9eObP6kvergQOn+/uxtXdsPNu442VJY+XGOh2xViALZB7eQhSKIQjDPRbw4
KSZw61Tg5sHco8NDZ8JF16gS9KETarblqeb2uVZ0WVcMVB059fs1RWrH+So8
O6xefKy78MhkysfjzvUjFpWD1ptHrTbtdduVGnoyJvaWeVq3TFwXJHeLRT8E
73uS/i2QPqiz975lTYRCib9YYpiPZ1Vr/u7uuG19cdsHs/dT22S5BwZS9w4l
7RwI2zToUjtuVzMZ0DBJFijPhNsPdAxGZGmDTtCYAb2FlIrey4XzqXDZDtgb
aA/0NnRpiw1uhD4NGFKDDg0gA8yQCrDkYHQjPNChnTKRPGUkccpY8rgJHDaW
OagnnumbpV44viGpTzymXS6u2zCrP+IAcrWqSuQN7210Enc+1j4wey79oEgM
KATl4JvyUPMtdL0qZuAhtG3rx980JHnt52ysZytvYW/chCg1sBXr2BsqGZIl
0xIFk5IFpOROyZcz5UrpSkV0pcIpheJp1TKmXDlTqYJFQkn+lnwZQ6WUqV40
rVk8ZVQ2jY5rcsYdBVMmMwz3WaajgB7MmUrHx+IHe+ov37xx4erl9rsnm26f
PXW1rbioNM5GojRApjYE6sOgOogcWok37Cv32XTuTtmRrgNXhxkXzUXn1/dK
OuHUASv1kqHwTQ9T99w7fyF17RSIzlKHz//8VLPsSG/C7onYPeNutSMe1UP2
teNmDd3m9fs9t+1IOLYpvskurU9y14Rl/bBmYrdE3YjdKUbswQNq1V5QFLAh
y10mpfJy+Oah6M19aTv7Cz5+XH74cdmRgdyPh5J2DMdsHYnaMupUMWKQP6Se
0bsha6DCdUeznm5HgtiNVOgupNZF7+bD2VjoMIBpZSptkjmzQwu61WFUaZ13
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
rheUBSkw252W+PKLhOUT3H4RN57DLfiEJ58InCUc5zmui4TnE573wrjf8F6L
oTJ4VAatRXA5A+qDaSYGanVJTmhjxr2t9tvMNass1UrMVUtNlctMVRINlTIM
lT62UZj3FH8YYGhrZmSiq6Gurmqss9HC2PjSJa8ZgQtnNvSL48Zr/8fuQIN/
LWj/r5H6z5bxxon21V0bHtd3YjqZjcUusTPeOum8KbF+Mr/t6+FKkZHSj5f0
OTOxXG70swfeokqrr7vSOAu5/7gRIFKV/OmiH4+fzcMTOUQBEy8YQ+Mn0WQW
loFjWW/EqRjzBwkfwN9y8EoGvrsoz+caL2OkCTrN4+Z8VHqGkG781KrARabU
mzobsyWSQpBa4wqBXUkwc3hdP69Re39r/fBqGm7vhEVSVDkgIuA9G/4ah1/7
YW2curnzagq+oGQZBCjw2FTlX+SI/XGVRlqhqEziG6Yt6YBPeR7fTYWK8sSo
JY4IeP0g5OuZ9G856aerbDMcoSiAlu0GO1K0Vlh2i9wNi4TFKmG1gKvOEXoz
hBkFIu4mJPzmCL8FjtM83Yt+3O5BJrSXwP18uJgGu8Ih1lHueIbpkUjDKkud
YiulEnPlLFPVfFOlbDOlAjPlUhOFCzZyjTYyh200TnqZ4p+Uf1wfGxZmUpDn
xKB7YoQtIQj44pble+X/t/Qi/28IesLysDnO9ebhHnyB//O26A8K4q8+8nuy
sONLeuWaqdLvn2hxBNFCZvSfR4NeH49ZQov4wozVwcg1HemX1dqz3CI+J5lD
5LLx0gk0aYARPc6Kx7Hcv9bZRzb6VySCMvB2A3x7FQiu0hKZQnEX0lZmMBke
Cv2tSmU+EoXU+V74KBpqQ4G0pLIAatrr1sPJjfXbi+3wZhL+psMbFsw/AILM
Njjwb8LQcRCh8Haaml+7YH4EZhnApQN3CpYJue+7pUSJIEqGHx+qr8x4P+OF
/DBgJcqhCChKF/9lKvVrXuw3eMKxYr0CNygMgHQnkv7qy2yHJ1z5OVx5Dlec
xaTmCdKyjYS40yzuOUv4zZI1lrBbYPvSD9o1JcPDYriTAxdS4RD5w3vJ7Q0y
3uJkXGmtnWOsWGSmXGKqUmiiUmCqVGqmWGumdMBMdZORUpGhQr2JMjPPdLUt
hIu5cPnuCEePjqohfPt/XDL6oPhvvJP5H5sgUCB+EIPfa1V4uC1BeHJRV57A
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
6dmufaAvmYulsrAgOtd7Yija2drezVnvNxTmO230NbUvHS/lTnb2dbX4e/n6
+Xogk717duzJTQvisaqFnBIeWkagRQhWy0a3YmjVAuo/j7pjzPCDA3HnhlIX
kJhV3GcVD1jGnASI2So/su9OtLUyRHrooV2p33PKe09Ex7qrRzpoc4aSOaOx
80jBCje2t8nrdH3siRo//pDLEmGyhLkuYGZPCcOVCX3rGyHe3VE7hmhPEVgk
KcZW/ByxXmaJCZgwS4LFgNd18H47zExKjLNIpaU4uMQ3fHlelQw2a5tBOA7R
LeB+S5HN8u0/a7o9CqpDId9e6tHp2G+FBUJMD0G02Kg9E3VnoY4M1IWJkUMi
aDvOshpjWbI6VdBtsLQP+ivgaga1PXEiVezGnuCRewncUd+WocB9w8XbhzIu
TYQPDgTb71VW+kRmw0HQ3q94tDGAw/fAkGCElTZCTz05nHZxZNPWnsprQyFf
8YIfTUVptcXZt7mcHAhYwP3mOD5Lj8N2Vyoc8odzZFre6TwwFMXFnVDUHsV8
MCyDfMJEDBA0eO9AtHergmu78o6eJDKWYLgP6a0oFn/3VtSF0zE/IDK/oQFO
Vk6XzuyY40423b4ZHuBDZpuG8rSs+NBLHxfMsY5xOaVcvIKLlhJoGYbVkgjO
of4cVtDuvqjYnuBPR5JW0NinBBljwucx+1nM6RkvY6ojx0FXLDfY/Qs05yui
8HSZZaDVhhBzPWZHxjwjYxUvXOWUCDDvoTtpzYdzRq5kLdLJNOsxixqs4vrY
uKtpY4JXT/a2YYcnbC0BiRETltgqi2wxIUk3DD4fhrc74Pu7QGcAg0WZI3Vy
hm/892VV6txFPXw9BrtawPoq7ViPRccn+tsjqG8iqggUq/RTmGpO/nImdYnj
y8e9MMwNxZwQ1ImNkpnfdZJtN8a2nUCsWZ1q3J3A2QQjFXA3D27lwYkUsVsH
Ax7fC2MPBJ/oScjqScp7lFzeF982mht8xlL/uqvSOQ2zQ/I1J8M/fRQT+TA2
uCsnsqvIuCnGrTVTvzHe5moQhxXPQyJtHsZot7pk9pL/SsEzuNMSOyHtsmP+
JoMjRer5x7zP9YTPEt5slMyuvmw0EMdcWagJKfX7esP92w3s2jbUdMdOMHJ4
RCQbi8A5uTOCgnlhwTzPb3EywcPEIz876fzJo742djnxdtzpyqHuwtam7ImB
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
WgQvb6XbjTutmNME5KqE/fshZ0r4OiCn8yOegv5dT/SFg4a8Xn2q0lSiQxg6
lGOGq0yjPBzimfAsIxaGwklnaui+np5njjBJde2ySdrZmBfo7x2x3z9od8Dl
IuebVR5XTqQO3s9hxPsdpkdKhPF5NRF5j5PShvICOpPB9ztc728PfhK4tzku
rCWL1pYOXmSAz5gulwVel+XpN6lUW7tKNrzGT1WPnfV9mZExENQ9WgcpP7LA
datWYa9Curujgt6ZHN8BkrucUnpAVPe2IZ3graXKgfEsGNeGs02w6Oh4FmgG
4T07CyYSxowVK4R82VqPHC3U+AEoyRmJB2a6sy7WaT6OBp0E7z8Hv/kK/MMl
gKQDZYTLVKz7i9idU9GuKJ1mSaENq+tek1UrROW/DMn+3HruN/PfvDMK10ke
FbIWcNkSIV8lqldJ+QJZSCW+VUK4ipdvWqreWinnU7FKShdwwRIhXcVL7ajQ
iASrYDBt3vO1NuWshndmXnhGUyKaFTMnOBJFbp0y76xacF0rUZqObaLcVZTC
Lm0JFq7B7A04zmZ2f0PkoZOlE8+k2EjpArrDirrpzAeMcLTWlGREknRo9qeT
6em9/s90mYNQzoAxfxhiapF8LVpkxmu1Y0ztbIoJTyOtB6cHM4IDgv18vYfb
5fhc+SYp/fxcalCA774g//C9fo9rdzSfCT1ZGdnTFNn9PDaZfuBQdKhEQC8+
Gs28nZjcnrr9SQJopjs/iQStqV7d6c5D+R7N+S4Xi9wvCaMvFavVx5YsDSa0
/g1x4o7ymntfcVh7eMSFL+o/0V+5+mjZdJo0S0I7JYHPcqOf7Uzp3Xm4xymk
l3Z9Ou8dlRQwoZXKhlgRleu/nina3koLaHctGIv4Ypa3QtSsO04bz7AVuwCc
6GSKAvpoYIimXCiYrwT/8S34cx/44x2wWQFGY5yHor3GYnfMxHrp6R5kHM0E
Va/h8ncqyX9f2vPzYfDziW2/7eGvk5JlQrSECxdIHungzKMFKkOaBt2lxV3M
SLCdyLURkVYs1E6FDkJCuWUTUjEAncSRVJV5i/r6DOAzdfh5jfi4msubYLLH
2BVKbtks85JGOA6VraPlm6jkLVq2Ast61OLbs3wYyl1FQzYQ9nyfbOalaNN0
1IH62VCvZYztQAsWUeYbXPaWvHhrmsfo2a0wl/XoowehBAMqNCD5GiTPhFWY
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
pUvERQg9YUZPoVjD/wA5CCf1
     "], {{0, 95}, {150, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True,
      Magnification -> Automatic],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Magnification[1],
   ImageSizeRaw->{150, 95},
   PlotRange->{{0, 150}, {0, 95}}], "]"}]], "Input",
 CellLabel->"In[39]:=",
 CellID->277630040,ExpressionUUID->"4b3f42c5-4aa7-4fa9-87b3-e68a30bb6417"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt3UmPnUcVBuASK8SKn9BsEEIsYAFCgEhhJjFDCPPUGBKGAIlYwA6dLbuW
2HjZCy8s4YVlWZZlWVZ5jOcp8ZTY8bWdOHYI4J+AoM97hMvnve+1rZZ9u+tb
xHrS3711x+9Wnapz6n0bX3j62XeVUv72nlL+++/KYU/975/6XC3/f4T97+Xb
7qXc7ZvuTbnLt9zLue0r7s25yzfcW4S35m54vNty29Pu7cR4vDtyx/Pdmdvg
Xbkb7m937oLHsye3fc29N3fF/bXchtdjX+54PPuJ8XwO5I7342DuivYO5Y73
63DueD1fyh2P90ju+DweFT6WOx7P8dz1O+4TuePzdDJ3nH8qd/mh+3Tu+l33
mdz2/RUbcf2Rn382t/3EzydueDzncuP+jLj91M9/mRjnEy8u+vmv5G4/9/OZ
8XzPE/vjMWK8HuVC7oL2iCvOv0iM50vcfubnX8qN18OIzR9PuZx78Rd+PvGC
u7yae4L2iBvOfy334kY/n3gB7/eV3Hg9jLj+2M+/SozvC7Hh/NdzN7cRx+O9
lrt9z88nLv54yiQ3rveV2a8XRozvcyPG61Gu525+f5U4rkfMfj1sxOUH3t6N
3M3Pr8QF7wcxvm+NONq7mRufh0pccD1l9vtrwuWN3NU/75U4Pk/E9Rlvjxnv
95u58X5V4uL3Z8x4v4kb+ku3prsy+/0ZMfpTjTj6A2/lju8bccHrTdzwfhPH
7/Xt3AXvN/Eyfo+Iq1+PG/Hib7y9O8S/9faIl3/v7RHXF7094ubnl7dz1z94
e8T2O2+PuPnzacR4vOUfucsvvT1iw+8RM663xBX94Xdyly95e8xf9PaIbYO3
x/x5b++fucvnvD3mz3p7xObnN+KC8eS/iL/s7RHb1709Zn89GzP68//Ojf58
JcZ4xYiLj9dbZ3ncXTn/xb/6+T7en/zx3tuH/e9W3Uu5y8fcm4hx/jLxR92b
iT/l3kL8IfdWYjyebcSfcW8n/rR7BzE+3ztzm39+Ix7Q+wvu3bnj+7snt/nn
N+IBvf3zG+P/zq0f//fxAfQ/9+fG72+M/3ureAC+H4dyx+/34dy4PmH8f5/9
+hDj/954vY/mxvUF4//7jPfzeO7yVfcJYr/+Yvx/n/F+nsodr8fp3NX7DxEP
6Iz4nhFHfOZsbvP304gjPnQuNz7PRlxw/svEuD4So3+J8X/v6q+XERfET87n
NvTPiCviFxdyL3Tj/94TjH8v5l70678RG34fLuUu3n8xYnvWz7+ce/nXfj5x
9f4Nxv+9F/3+jLh24//ehvgD8WSjn38lN/pfxoz4ydXcuD8jRv8t4gGdI35C
HM/3Wu44Xxjj/94L/ngrcUN8hrj4+Y04Pm/Xif3+KvEyng8x4kONuOD53si9
jOdLPMHngRj314gX8H25SeyvRyWe4PtMvOjft0Yc/cM3cuP9qMT1V94e8cTH
b404xn9v5m4Y/xEb2iNedDfiCdq7lRvzX5U4rmfE8XkjXvDzMf7vPfHPQxU2
Zv+9aMQRP71NjOdLPMHzJX7vn7w94rt/8fbu5MZ4pBJ/+M/eHjGup40Y8auI
B3TG+LUSl494e8zv9/aYfdwV43/iyuyHMfv5jRnHO9NdhU24Ccf4n7gKm3AT
jvE/cRU24SaM8T9zFTbhJhyfO2Zy9PGC+rx7iRi/L5tyx3zScu6Yr9qcO+bT
tuRGvBLj/97on8T4vzP6Fxj/9zb033cQY75nJzHi8buIMb7YnRvxXoz/e0e8
fS8x4sEtt8H7cjfc3/7cMd9wIHdcfw/mjsdzSPhwbvRPYz1Ab3xejuSO8dnR
3DEfdyw3+o8Y//eO9k4InxQ+lbuivdPEeL36+f4z9z5fI475+LO5MX4w4orv
47ncC+hfE2N8h/F/b/R/jDjej1dy4/tsxDEffz43xodGHN/HC7nxfTbiuB5c
JMZ8GTPia5dyY72REUd87nLugng5M+Jbr+Y2zDcwb/DzXyP2+JgxI353JXfM
NzB/0s+/SuzxYyM2xJdfz434tzE/5edfI/64ny8c6wOIK7PHz43Z4+ON+RPe
3vXcmF+owsbsr2cjjvjpjdyIP1Zi8/itMWM+lrhiPdTN3OjPVGZcT4gRH2zE
1eczYz1A5/KCt0fc3Ea8hPlYYsy3xvqAzgv+eCpzN/7vjf5mI26IP97KbRu9
PWKMn/vxP4z4XyOO/uhbubHerBLHehRm7081Yqw3ivF/Z8S3KzN+D4gR/2/E
cb28Q/xBb495wdtj/oC3x/xub+9t4uLtMfu4yZj9aMKlH5937sf/M8cD0J7w
iAdM97qPB1jn/uj/viS8SXhZeLPwFuGtwtuEtwvvEN4pvEt4t/Ae4b3CTXif
8H7hA8IHhQ8JHxZ+SfiI8FHhY8LHhU8InxQ+JXxa+Mx0mzDG/8wmjPE/swnH
egBiE8b4n9mEY/xPbMQjX8DPf8h8AbU+YOQL+PkjXyD1Y88XwHFzuquwCTfh
GP8TV2ETbsIY/zNXYRNuwhj/M1dhE27CGP8zV2EjVvkCcdwmnvN8gbE+wJ/X
WB8w1SMeIDxrPGDUD1jxGq0fEMdqxQNG/YAVP6b6AXGQeMB6rx+g1gc8av2A
OC5Mtwlj/M9swrEegNiEYz0AsQnH+gBiE8b4n9mEYz0AsQnHegBiE471AMQm
HOsBiE044gHEVdiEm3CsDyCuwibchEs/Pu9chU24H/+PeEDX3ogHTPXDxgOi
PWEaD0B7wibchGM9AHEVNuEmXPr5+s5VuF8PMNYHdO2NeMBUz0s8QNUPiGOs
D5juOV0foOoHyHyBR6wfEMdYHzDdD7k+QNYP8GOsD5juh10fEMeIB0z1iAdM
94gHTPeTGg943PkC814/YOQLeHvMfrB4gMwX8GPEA6Z7xAOme8QDpnte4gFq
f4FRT9C9RusJPvb9BUY9wZV/V6ueoNhfYNQT9PNXq57gqB+w8u+oH5B61A/w
9tZo/YCxv4C3N/YXSP2o+wuo+gFyf4FRP2Dlv6N+wFSPeMB0z3s8AOf39QPD
6iD1CdV+hSqfYOZ8AZIPoNb7q/X8ar2+Wo8vx9NivKzWy6v18Gq9u1rPrtar
q/3s1HpztZ5crhcX68HlfnFiPziZvy3ys1X+tcqvVvutqfxomf8s8ptV/rLK
T1b5xyq/WOYPi/xglf+r9gOT/XHR31b9adVflv3hGfu7rD+r+quqP6r2s1L5
pzK/VOSPqv2k1H5Raj8oud+T2M9J7dek9mNS+y3J/ZTUfkliPyS131G/v9Ez
S377u539UPsVyfkDNT+g4v8qvq/i9yI+r+Lvar8etZ5Oxcdl/FvFt1X8WsSn
1X42Kr6s4scyPizivyq+q/aDUfu9qP1c1H4taj8Wtd+K2k9F7Zei9kNR+52o
/UzUfiVyPxKx34jaT0TtFyL3AxH7faj9PNR6G7WeRu23ofbTUPtlqP0w5H4X
aj8LsV+F2o9C7Teh6kXIehAz1nug8ZkZ6zWo+IqKn6j4iIp/qPiGil+o+ISM
P/jx3N+r34G/rmJ/ArX/gNpfQO0fIPcHEPX/ZX1/Ub9f1eefuf4+q6+P14fU
z1f18Weuf8/q24v69ao+vao/r+rLq/rxqj68mr+V87Ni/lXOr6r50w3+9xnn
Q+V8p5jPlPOVM85H0vlGMZ8o5wvFfKCc7xP1wNX6XVXPW9XrVvW4Vb1ttT5W
rX9V61vl+lVRz1rNN8n5JDVfpOaD1HyPH2o+R83XjP5Ad3u1n5HKR1T5hiqf
UOULqnxAle+n8vlUvp6qz6Pq8ap8OpUvp/LhVL6bymcT9WtUPprKN1P5ZCpf
TOWDzct8gaqvOuYL/PYPO1+A4wHre6j6Hao+h6q/oeprqPoZqj6Gqn/B6lvI
eparPF8w4gN++3ntD6yz9QNxzNofmPP1A3E8IesHZL24GevBqfxulb+t8rNV
/rXKr1b50yo/WuU/q/xmlb+s8pNV/rHKL1b5wyo/ePQHuts/YL0rVc9K5aeq
/FOVX6ryR1V+6IgPdLdfpf7AzPWK1mh8QNXrkfV4cMxJfGDW+jVPanwgjtEf
uPfv66Q/8KjzBau9fuCJmy/wg84X+DH6A93t12l/QNUrWOvrCR85v2De1hOK
/PUnfj3hWD+w8v/X6fqBkV/gt3/AfFeaXzDWD6zcfv32B/4DhwVVDA==
    "], {{{}, 
      {RGBColor[1, 0, 0], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1GO4FwYUB+D/zbZbuLkte8u2a1k3LmPZtm0bWy1bW3bL2LJtPb09fXjP
+Z3z/ZzgkHZV2oYKBAJBhFK+5cjhA4EoBJkj6F/sPvOJj3zgPe94yxte84qX
vOA5z3jKEx7ziIc84D73uMsdbnOLm9zgf/7jOte4yhUuc4mLXOA85/iXs5zh
NKc4yQmOc4yjHOEwhzjIAf7hb/azj73sYTe72MkOtrONrWxhM5vYyAbW8xfr
WMuf/MEaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJiUxg
POMYyxhGM4qRjGA4wxjKEAYziIEMoD/96EsfetOLnvSgO93oShc68zud6EgH
2tOOtrShNa1oyW+0oDnNaEoTGhNCIxrSgPrUoy51qE0talKDX6lONapShcpU
oiIVKE85ylKG0pSiJCUoTjGKUoTCFKIgBchPPvLyCz+Th9zkIic5yE42spKF
zGQiIxn4iR9JTzrSkobUpCIlKQgmOclIShJ+IDGJSEgC4hOPuMQhNrGISQyi
E42oRCEykYhIBJx3IBxhCUPowPdf8BVimYBw
         "]]]}, {}, 
      {RGBColor[0, 1, 0], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{477, 480, 479, 478}}], 
         PolygonBox[CompressedData["
1:eJwNxmV7DgAAQNHXjDExbDq2yenOYYHp2nQM07Xpmu7a1HSP6e7ubiYmfozz
4Tz3RqdlJKcHBQKBQvyjsAkN8fqXP/ymgF/85AffyecbX/nCZz7xkQ+85x1v
ecNrXvGSFzznGU95wmMe8ZAH3Oced7nDbW5xkxtc5xpXucJlLnGRC5znHGc5
w2lOkcdJTpDLcY5xlCMc5hAHOcB+9rGXPewmh13sZAfb2UY2WWxlC5vZxEY2
sJ51rGUNq1nFSlawnGUsJZMlLGYRC1nAfOYxlznMZhYZpDOTGUxnGlOZwmQm
MZEJjCeNcYxlDKmMZhQjGcFwhjGUIQxmECkkM5AB9KcffelDb3rRkx50J4lu
dKULiSQQTxyd6URHYulAe9rRlja0phUtaUFzmtGUJjSmEQ1pQH1iqEdd6lCb
WtQkmigiqUF1qlGVKlSmEhWpQHkiCKccZSlDGKUpRUlKEEpxihFCUYoQTBD/
AeDyYnM=
          "]]}]}, {}, 
      {RGBColor[0, 0, 1], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VVjiAEAhtFPTgzTHcN0d07OrLDpZjpmapjuTU1313T3MM301PydnV2c
i+e9fcOTU5MWFQ+CoBgFlBQl+E8B//jLH37zi3x+8oPvfOMrX/hMHp/4yAfe
8463vOE1r8jlJS94Tg7PeMoTHvOIhzzgPve4yx1uc4ub3OA617jKFbK5zCUu
coHznOMsZzjNKU5yguMc4yhHOMwhDnKA/exjL1nsYTe72MkOMslgO9vYyhY2
s4mNbGA961jLGlaTzipWsoI0lrOMpSxhMakUHZfCQhYwn3nMZQ6zmcVMZpDM
dKYxlSlMZhITmcB4xjGWMYxmFCNJIpERDGcYCcQTRywxDCWaIUQxmEEMZAD9
6UckfelDb3rRkx50pxtd6UJnOtGRDrSnHW1pQ2ta0ZIWNKcZETSlCY0JpxEN
aUB96lGXOtSmFjWpQXWqUZUqVCaMSlSkAqGUpxxlKUMIpSlVtIUEQSHtRl73

         "]]]}, {}, 
      {RGBColor[1, 1, 0], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{959, 962, 961, 960}, {991, 994, 993, 992}}], 
         PolygonBox[{{963, 990, 989, 988, 987, 986, 985, 984, 983, 982, 981, 
          980, 979, 978, 977, 976, 975, 974, 973, 972, 971, 970, 969, 968, 
          967, 966, 965, 964}}], 
         PolygonBox[{{857, 922, 921, 920, 919, 918, 917, 916, 915, 914, 913, 
          912, 911, 910, 909, 908, 907, 906, 905, 904, 903, 902, 901, 900, 
          899, 898, 897, 896, 895, 894, 893, 892, 891, 890, 889, 888, 887, 
          886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 
          873, 872, 871, 870, 869, 868, 867, 866, 865, 864, 863, 862, 861, 
          860, 859, 858}}]}]}, {}, 
      {RGBColor[1, 0, 1], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{1092, 1115, 1114, 1113, 1112, 1111, 1110, 1109, 1108, 
          1107, 1106, 1105, 1104, 1103, 1102, 1101, 1100, 1099, 1098, 1097, 
          1096, 1095, 1094, 1093}}], 
         PolygonBox[{{1066, 1091, 1090, 1089, 1088, 1087, 1086, 1085, 1084, 
          1083, 1082, 1081, 1080, 1079, 1078, 1077, 1076, 1075, 1074, 1073, 
          1072, 1071, 1070, 1069, 1068, 1067}}], 
         PolygonBox[{{1029, 1061, 1060, 1059, 1058, 1057, 1056, 1055, 1054, 
          1053, 1052, 1051, 1050, 1049, 1048, 1047, 1046, 1045, 1044, 1043, 
          1042, 1041, 1040, 1039, 1038, 1037, 1036, 1035, 1034, 1033, 1032, 
          1031}}]}]}, {}, 
      {RGBColor[0, 1, 1], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{1347, 1350, 1349, 1348}, {1287, 256, 1288, 1286}, {1475,
           1478, 1477, 1476}}], 
         PolygonBox[{{1317, 1326, 1325, 1324, 1323, 1322, 1321, 1320, 1319, 
          1318}}], 
         PolygonBox[{{1435, 1474, 1473, 1472, 1471, 1470, 1469, 1468, 1467, 
          1466, 1465, 1464, 1463, 1462, 1461, 1460, 1459, 1458, 1457, 1456, 
          1455, 1454, 1453, 1452, 1451, 1450, 1449, 1448, 1447, 1446, 1445, 
          1444, 1443, 1442, 1441, 1440, 1439, 1438, 1437, 1436}}]}]}, {}, 
      {GrayLevel[0.5], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwNxdV6iAEAANCfCzHdMTXNdJvubRbMxKana2NMd5upYbq7Y7pjZrqnHoZz
cb4TlpKWkFo0CIIiFFKiWBD881//4Te/+EkhP/jON77yhc984iMfeM873vKG
Al6TzyvyeMkLnvOMpzzhMY94yAPuc4+73OE2t8jlJje4zjWucoXLXOIiFzjP
Oc5yhtOc4iQnOM4xjnKEwxziIAfYzz5y2MsedpPNLnayg+1sI4utZLKFzWxi
IxtYzzrWsobVrGIlK1jOMpayhMUsYiEZLGA+6cxjLmmkMofZzGImM5jONKYy
hclMIoWJTGA84xjLGEaTTBKjGMkIhpPIMBIYyhDiiSOWGAYTTRSRDGIgA+hP
P/rSh970oic96E43IuhKFzrTiY50oD3taEsbWtOKlrQgnOY0oylNaEwjGtKA
+oRRj7rUoTa1CKUmNahONapShcpUoiIVKE85ylKG0pQihJIU5z9LtmaO
         
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {{}, {}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.], LineBox[CompressedData["
1:eJwV0/ObEAYAgOGLu2zz0rJta2lXy7ysy7bdci1tteVlt2Xbbsu2jbcf3uf5
/oEvKKRDcGiYgICAr4Tle4cjPBGIyA8EEonIRCEq0YhODGISi9jEIS7xiE8C
EpKIxCQhKclITgpSEkQqUpOGtKTjR9KTgYxkIjNZyEo2spODnOQiN3nISz7y
U4CCFKIwRShKMYpTgpKUojRlKEs5ylOBivxEJSpThapU42eCqU4NfqEmtahN
HepSj/o0oCGNaEwTQmhKM5rTgpa0ojVtaEs72hNKBzrSic50oSvd6E4PetKL
3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM+vTGAik5jMFKYyjenM4Ddm
MovZzGEuv/MH85jPn/zFAhayiMUsYSnL+JvlrGAlq1jNGtayjvVsYCOb2MwW
/uFftrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4
zBX+43+uco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve8o73fOAj
n/jMFwIN/g2IOYFD
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.], LineBox[CompressedData["
1:eJwV0/OfEAYAxuG7y7Z5Lddq2S23LV92XbatZbsh2zaWt5Zt27bx9MPz/Qfe
zxsc2i6kbWBAQECghCGIsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgi
EpOEpCQjOSlISTCp+IHUpCEt6UhPBjKSicz8SBay8hPZyE4OcpKL3OQhL/nI
TwEKUojC/EwRilKM4pSgJKUozS/8ym+UoSzlKE8FKlKJECpThapUozo1qEkt
alOHutSjPg1oSCiNaEwTmtKM5rSgJa1oTRu+D9eO9nSgI53oTBe60o3u9KAn
vehNH/rSj9/pzwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJP/iTv/ibyUxh
KtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbOEf
trKN7exgJ7vYzb/8xx7+Zy/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5y
ictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJ
z3zhKwFB/k8Q3wChC4I8
        "]]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.], LineBox[CompressedData["
1:eJwN0wO3FwYAxuF/t1M3277Zdstcdst23bts21ht2VvWsmvLtrUtG8t83nOe
9xv8QlqE1QwNFzAXOTgQiBAUCEQkmEhEJgpRiUZ0YhCTWMQmDnGJR3wSkJBE
JCYJSUlGclKQklSEkJo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEK
UZgi/EBRilGcEpSkFKUpQ1nKUZ4K/EhFKlGZKlSlGtWpQU1qUZs61KUeP1Gf
BjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOdCSWMn+lCV7rRnR70pBe96UNf
+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJUfmEa0/mV35jBTGYx
mznMZR7zWcBCFrGYJfzOHyxlGctZwUpWsZo1rGUd6/mTDWxkE5vZwla2sZ0d
7GQXu9nDXvbxF3+znwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5x
nRvc5Ba3+Yd/+Y873OUe93nAQx7xmCc85RnPecFLXvGa/3nDW97xng985BOf
+cJXvhEIL3uCCM93pWaDQw==
        "]]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.], 
       LineBox[CompressedData["
1:eJwN02OjFgYAQOH31s22cTO3bNs2Vt1l27a2uGXbNrZaWy1bW7ZtPh+e8w9O
SGinGh2DAoFAkIQLGwgEE54IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJ
QlKSkZwUpCSEVKQmDWlJR3oykJFMZCYLWfmBH8lGdnKQk1zkJg95yUd+ClCQ
QhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBG
NOYnmtCUZoTyM81pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0Z
wEAGMZghDGUYwxnBSEYxmjGMZRzj+YVfmcBEJjGZKUzlN35nGtOZwUxmMZs5
zGUe81nAQhaxmCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3s
5Q/+ZB/7+YsD/M0/HOQQ/3KYIxzlGMc5wUlOcZoznOUc57nARS5xmf/4nytc
5RrXucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmje85R3v+cBHPvGZL3zl
G4Fg3xOGsATzHZOzhEI=
        "]]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], Opacity[0.], LineBox[CompressedData["
1:eJwN02OjFgYAQOH3VjduuVaLN9st266btaxl27Zt29yq5Za1tdyya9l6Pjzn
H5yQxu1D2wUFAoEgCR8uEAgmAhGJRGSi8AM/EpVoRCcGMYlFbOIQl5+IR3x+
JgEJSURikpCUEJKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5OQXcpGbPOQl
H/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKoRSlWpUpwY1qUVt6lCX
etTnVxrQkEY0pglNaUZzWtCSVvxGa9rQlna0pwMd6URnutCVbnSnBz3pRW/6
0Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYw
l3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwe/8wc72cVu
/mQPe9nHfg5wkEMc5i+OcJRjHOcEJznFac5wlnP8zT+c518ucJFLXOYKV7nG
df7jBje5xW3ucJd73OcBD3nEY57wlGf8z3Ne8JJXvOYNb3nHez7wkU985gtf
+UYg2POEISzhCOY7hw2FRQ==
        "]]}, 
      {Hue[0.8503398874989481, 0.6, 0.6], Opacity[0.], LineBox[CompressedData["
1:eJwN02OjFgYAQOH31rrVarmlhZu1Vcu2sbq5lmvZXLZt17Jt27Vl29Yynw/P
+QcnpH7r0FZBgUAgSMKHCwSCiUBEfiQSkfmJKEQlGtGJQUxiEZufiUNc4hGf
BPxCQhKRmCSEkJRkJCcFKUlFatKQlnSk51d+IwMZycTvZCYLWclGdnKQk1zk
Jg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMZSnHH5SnAqFUpBKVqUJVqlGdGtTk
T2pRmzrUpR71aUBDGvEXjWlCU5rRnBa0pBWtaUNb2tGeDnSkE53pwt90pRvd
6UFPetGbPvSlH/0ZwEAGMZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZ
wUxmMZt/mMNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGd
HexkF7vZw172sZ8DHOQQhznCUY5xnBP8y3+c5BSnOcNZznGeC1zkEpe5wlWu
cZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa/5nze85R3v+cBHPvGZL3zl
G4FgvxOGsPxAOIL5DnZrhkg=
        "]]}, 
      {Hue[0.08640786499873876, 0.6, 0.6], Opacity[0.], 
       LineBox[CompressedData["
1:eJwN02OjFgYAQOH3pptdy3Wzl20bN3tptZZt27a9xS3bLS6uWrVl28bz4Tn/
4IQ06xDaPigQCARJxAiBQDCRiEwUohKN6MQgJrGITRziEo/4/EACEpKIxCQh
KclITgpCSEkqUpOGtKQjPRnISCYyk4Ws/Eg2spODnOQiN3nISz7yU4CCFKIw
RShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqE0oNalKL2tShLvWoTwMa0ojG
NOEnmtKM5rSgJT/Titb8Qht+pS3taE8HOtKJznShK93oTg960ove9KEv/ejP
AAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8C
FrKIxSxhKctYzgpW8hu/s4rVrGEt61jPH/zJBjayic1sYSvb2M4OdrKL3exh
L/vYzwEOcojD/MURjnKM45zgJH9zitOc4SznOM8/XOAil/iXy1zhKv/xP9e4
zg1ucovb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3wgE
e50whCUc4YlAMN8BYc2HSw==
        "]]}}, {
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}}, {
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[
       0.]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[
       0.]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{False, False}, {True, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1262.4000000000005`, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1.}, {0, 814.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7688017814650793`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"f478f5ed-aa7d-4eb1-9458-3595262f0ef6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageHistogram", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
     "], {{0, 91}, {
     100, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
    
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Magnification[1],
   ImageSizeRaw->{100, 91},
   PlotRange->{{0, 100}, {0, 91}}], "]"}]], "Input",
 CellLabel->"In[40]:=",
 CellID->378301645,ExpressionUUID->"a401a846-9bde-4701-9daa-1a0b34018b3e"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJyN1zlrVVEUBeCtleUrLCwsVCyClYWksPGghSIKGodEUBAxhYUoiIhWW/0D
r7RMYWFhIUFERGQb53mepzjPw08QeWu/Ipx1lrd5fGSTfd7NvWGtudt2DY1O
N7ND08z+ffYuX2LNa+rPu8JHhMeEjwofEz4ufEJ4nPgPPk8Szym9z1PEs+HT
xDPgM8Tz4LPEHfgc8QI4iPO854lnwhPEi+ALxHnei8Tz4UvEC+HLxAPwFeJB
+Cpxnvca8WL4OnGBbwjfrNuXw7fqthXwbeJl8J26fTV8t25b2bMT+xrM3yNe
h3nmVZi/X7fhPE5c1mL+Qd0BO7Gvx/zDtp24bMD8o7oD98OJS+57XLfleZlz
/kndZQTzxDaE+afE+D5O7Jsw/4x4GPPEthHzz4lxHicuOf+i7nwenbh/v1/W
Hfm8Ehvup70izvtF3N/3um7P70scOf+m7nwfnDj/HjZZdz5PhbjkeYjzfQ/i
yOftbd35vhXiwPPmxPk+BnM+r+/q9s3YRxxbsI94bCv2Ecd27Htft49iH/NO
7CPu7MU+4tiPfR/q7hzEPuKBw9hHPInfF8SW+z7W7Qewj7i7D/uId+/BPuIu
7od9qrvswD7m/H9KbEuxjznzyGfiWdjHjLzpzLhC2L60XYRdOITta9tF2IVD
2L61XYRdOITte9tF2IVD2H60XYRdOITtZ9tF2IVD2H61XYRdOITtd9tF2IVD
uN9bmadeqv+rfq/6u+rnrH+rfq36s+rHqv+qfqv6q+qnqn+Kfin7o+iHsv+J
fqf62//2M9a/VL9S/Un2I9V/VL8R/UX1E9k/RL9Q/UH1A5X/Vb5X+V3lc5W/
Vb5W+VnlY5V/Vb5V+VXlU5U/Zb5U+RGXyocq/6l8p/Kbymcqf6l8pfKTykcq
/6h8o/KLyicqf6h8ofJDIx/8BR8y2X4=
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{18, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 
         179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166,
          165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 
         152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139,
          138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 
         125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112,
          111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 
         97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 
         80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 
         63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 
         46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 
         29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19}}]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJwV1PODEAYABeC7vFxb5m1hLduuZV21rMu2bbfVsrXltmzbtm3bfffD995f
8F5QSNvgNoEBAQGBIkxoE5ZwhCcCEYnED0QmClGJRnRiEJNYxOZHfiIOcYlH
fBKQkEQkJglJSUZygviZX0hBSlKRml9Jw2+kJR3pyUBGMpGZLGQlG9nJQU5y
kZs85CUf+SlAQQpRmCIUpRjF+Z0SlKQUpSlDWcpRngpUpBLBVKYKVfmDalSn
BjWpRW3qUJd61KcBITSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGd
HvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcOf/MVYxvE345nARCYxmSlM
ZRrTmcFMZjGbOcxlHvP5h39ZwEIWsZglLGUZy/mP/1nBSlaxmjWsZR3r2cBG
NrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGaM5zlHOe5wEUu
cZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7x
mS985Ruhww/9gO+hvYE5
        "]]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}}], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{False, False}, {True, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1.}, {0., 613.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768801811117593*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"2509a7c9-ff75-47b8-98cb-b6c16cc68aae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageHistogram", "[", 
  Graphics3DBox[
   TagBox[Raster3DBox[CompressedData["
1:eJzsvQdwXFt2GIjOuZFzBkEQAEESDCAIZgQiA0QiCAIgcs4Z6Jxfv04vdQZA
8n9pZuRQ0sqyxrasdXm1tbJckleytLK8srS7ql3ZK5e8K8tly1pJHu45Dc7/
M/M5I/0H2C5X8QJooAF0n3vOPfGee84tndkcWBAmJSXtyuFhYPqwcWdnWjeY
Ak9ebOwuL27Mz3Vs7M0vzu/cmxHBL+vhy/rh69P4ND6NT+PT+DQ+jU/jB4fg
nC9PDP7A1Xeuac4F/1wICASZk/1VYv5voMxMT01OlvGHnzE91aD4uigIRSKR
UCgUCaQ3Jl6+ft5xhT/8zMWV5syvSUOpKhWQ1qamJJcO2Z1W/d4dvmuA9F8b
vyP9Wi+Sl3XPTE1NTs5MTi9Y7S6r03aPP/yM0anXk7e+zgSkZTN+r8/n9vg8
pNtidlgtlgdC3vDTpwc6VuavqxLPcE1FYhgCgVCcGBL4gEf4BkMKX3JtRZve
brVbjRabzWw1W51Ws+WhmKcUCJLSX8x1vOjqvJWdmpKSnpmRkZWTm5uTl52V
k19YUFhSXFxcVFRcXFJSUlp+6VJFxZWq2gfDu3qbxWqz2aw2u91qsVpM5sf8
4Wf0j810dLS3Nz9q6h4ae9336vXY+Njoq1cvx1+PT0xNjr+eGBubmJicmJye
npqdnd0w6/YcFgtABfh2pyNBAvsjCV/4goy5XePeytp896jV5nK5rQ6nCwdh
J0nCTRIOF+FyOpxulxN/73AC5W0A3eawAfJO+ARCWIl2GX/4Uw4DogPLaUVi
ms0Ws8lstRnhy2w2GeDLaDQCxiYLoAq/BNoDxgjb4XQ4nDa71ewekfNUwcB/
s4QJaemwOgmHg3A4CXhXtwuRdjosNgfQ2G4l7DYC8CcIu9tiddhdNvgfO/zN
4YAfnS7fSwV/+GNHttEZo359emtxa25Rvzi3YDIsG80LswuGpVkIaefmpl8t
TI0uzM3Nzc6PTvcMjb+aGl/Rma0mk9lsNuq3Zqbnnsh581/qs56hjvauLuDB
1vb29o62tta29rbW9tZnLW3w0PaspaW5pbWlpeXZs1b8bG1ta2sb7Js3GvV6
vU6ns0x2DC21qHhBR/hpbd2dM71dPXMvO3u6+l+MjPW8mumZnZtZfNU9sjQ3
N78wNz+7ODoFP8HnPDyMTq/v221WXBxYCpttR2f1jGp4K8B04D+H1WAiLAaT
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
lTfXwfsIGXjnHs/gN749PYYZnJwcn745+XwtW61SZ9SMeWOR+HE0Gk6csgz6
nxd89YStIHcIzAMXqDsf/Mcnx8dgR9+exE9OTk/fbbU87po0MqCOIqjcY4kT
pvTAx9pMq+7Zj4E9+84T+wqS7qEpjx6/PYmdvnlz+u4zWG7wPUAbgUzEI2AF
QDkGx7M/Al9YNHcCJmLjPB2YBUl3356+eff5N775zc/evnv75u1b3FcMJSQ/
ij4OfIJimPpom211K/hsQUfBueDnjC+sbm7vHVlCn78BCnwGxh+Pw6DyO0bb
enwMzt5SwcdAiCusb0BE751z800oVWiTUzNvuP/Gt771rZ/4ic9/7N2Pf+Pz
z969e/vZu8/fvj1B2Vj56AE/Qeps2Et6L2bzT5BUCS7G0PDI4ED/QF9fT1d7
e1tra+PTRw/v19/K+/gBc3FGZVFO5gV1HxYkYbtvsfRDt/v/8oX1gg9t6OEx
8eOn+v9P49P4ND6NT+PT+DQ+jU/j0/g0Po1P44tx3vr/zOFO3sWL5x+CpMsu
T89Xe1v+VYe4uru9paXtMn/4l+zelYy//B+/AliMNyKKUpbiLEuxo/zhlzk9
pq9b/y/QZOXmZOTAeGim/X4vNcW//r/cQbrHv179v7R20aCHD6NeRwQ4hmO5
hY+3Z/yrwC+zky6y9+scYhbfteLWYBQzlEyAZRmWW+Zffw/w7YSrR/3d3RfB
X5bJFNywsHSQYxJlMjTFUAwdXOFf/37J4XE63Y6eLzaxRD+6IYjkpoHzMyxF
0zRHU5Q/QHFs9DzwCS/eNm8duFxccetBa3tHZ+u9y9kakUSl0mrU6mR40Kg0
Wm1yckpKanpGUZvR5w34fD4/gvYB8qzfstfN9w424D+31+kgCIfLYie8FMPS
LBuwrT6/X1t74+atm7U3a2uvX79249bt23fqGx43dszZCYL0eD1ebwCT9AGX
bvllc3057+t3k8oJinARXpeb9Pi8bq/X4/H7A4zPvPxq+MWLoaFB+Ozr738x
9GL41fj0qp5wOZxuL+mhGI72Ovenex7VVlVUnuP+ycsWr8dNeAAhnIDfB9SF
7z4qYNlcXlleXllbXl2Fx/XNvUOzDSCThMvrhzUPWNbHOhpuVlZUVNbcvc6/
/0bpPuEjALrX7QfkvZSPBOg+mI2f0O8f7O8eHB7qjFarg/RRlBd0DfwxAFRf
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
vscqxwicqhmGBoynkswz8ejUzZo3DEZsRV8qoSc0HcCPCSOZSBhKoj9r/D/m
vJyQBEngFF2TeTo0OtDz4Nr5jnjk2kLVAdOWdydl3cS/K/DMhqbrSnI4a/w9
Zj+YMmRJYunoeP/D62dbj+zfs33Lrn55/FBG0uelDw1Z0VQZtZQKeGXVMBL6
swkL+PdGSYmND3bdvNR2YPe2DXX1dTV1des7FP7BmgyXjkvvKooIutuapiiK
bujpdGo2+XzSgv588cMn104fadm2sb5m1aplFStWrq5du+6iIk/vW0i6W3JH
5QEIbh5LG4lUOvlsdnY29U6oMFvvID9+ZPOGmuqVy8vLl5YtrVhRXd+4ZdtV
XZOuF7z2ndiSW7IASvQC6gEtkU6l52bnZtNJY3bSCgdyfv3qyvKlS0tKyiqW
r65et635yJlLjxNJfWzlK68wEewOV6Co/h7o5PK8rGmpVCKdnp2dS6Hpp2r6
RObz+bcxzGYvrywvL69YvmJ13frt+45cvts9GiLVhKq0mqqouJvIK69p2nHg
whBHA/uCrCcT6K3TgFtEc1+TpcR09v6RFa1auWpN3frNuw+dvHb36RQjJdNJ
kCCMtzXvazl85NiZqw+fDo7P0ALH8pKKJiqKeikNwgWah8i9mJjOzE/8llba
sGXnnsMnL97uHo4xiqHDlJZQHBLjcdTZQAggCTzInMOXal5MIL/IPXAAgE50
Ilxhxf+q1vO37nePTZPmncsrLm5J0niGiXEsB4h4QZRA7R4o0iX0LKIoGwnB
RGmoEA2M6DIr/uv7pmg0qtDElnie5QSOR2/I0BLDxhheNEH+KkDdZYFjAILP
ojaJdD0VgZ4Z/MtGzAr+G6un0DiSBVOFWTARyKLRuanu6Bgab6gvdFNnXZUk
jmMoluElbvrx8Q1lLSxafoAGRpF1S/hvbNm0IcsCw5rMJoog8pz6tMThIprC
hqIBKwxqGlERYeoJEhfqaltX5vd4SwfSyL0K13a6pfe3BQfeNQyJZQRRABl4
ZPw+t88XDN5+RzcSJsRZYmIjIVUWQg+O1Zf4XETA7/NeS8uwaCHToxVW/Dtb
x54OTlE8GmZoXYPujm4gvG6f98J7SVWEgBsfud+27cHo5ZaaIhz3ACbO43Zf
TKuKCVoWjbil97f5qlaurt7eg1oYvKPWZlqcHo+noPO5zDKyMN11auvqQk9l
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
50uPyZtONDKsLDO1x8omHVhS4GrS+XuGeucLLS1TEdDvMQwEXci8EAj6+604
JQg803R8x5IRfbJAu1NE56CRUWQMEwrPRnygyBhJgAoI0qAb7DQ4PnykbHQ3
sn2/4qri4G3+uTCzHAVLAAqmYvkDNE0FF9SHGmpX9oZQoM5OeSBWiwyzAYxJ
MN+CQQ8GHelf2lQfqp5AdTb1ADBP/vJmUVNDx698YkFmt5zM7IwAVbAmHG7h
tmGdDL6G5p9yXNUkO3rhlWTy0dys7nkZGUXTq3jIu7W6sxgfPmDY6EgCrKmt
uPnUjbf/GV42tnj8hmrd1jVDNbYFPa6Bbe9kxMBGS9V1OxG98GcQ4f712Uq9
tS1hx2O2HT9T1LO4018gp6rNMG3TbrUe/lfynRs/U2zDiMdbWy9/+stPJe7n
01pofwTzddt3KRaL2rG2hP6Fp7/25fsZVbfueejJ7/36tbdBdbw0DunUPuAb
eZi50JqIx2KxuGWBF4lefPDJH/z2b9eTN/712m9f/vrnt3dm+VEkMEm1Yxdh
OqAdb7vnka997ye/fyOZfOcff/3Zta998QtfeujBam+nNgA1qDkRbYu3Xbr3
80/+8DevX08mr//PK//11BcfuHTh8mcef/4HP/lEGkyX/85QL0722qhdefCr
137+6t/fSd54841XXnr0qibpFz75+Ld/8srf3rr+l093XgdEgz1KBs8vf/iV
v4Kedv3vf/r5s5+7orKMfu9jL/36r/98J/n2G69+cd+sW04aoXSeW+69xSuP
H2J+/BfQ017/7X995T6dC/MXHvn2z/7497dAB/h/v3j+sc/cX97tg5no7VOB
SyswFN/733//zYtv/vHH337k/oQp6fc8/tIrf3vzRvLN1379/Scfuv+CHUvU
jPqgM+C8x6y5I3q4A372IBv/8YcXL3/ugXgscd+jz7386t/fTt74nz/98oXH
P3P1YlTTNMs+OOSD0Q9Fghu/+8bf/ni12JUkSRQZ8tQzX9AvPPLE87/4y79A
a7/+ux8/98inrsbi8ZhlaWqMXdHzVkf9j90PInTy1+5ob6NI3gPf/86jzwLX
yX+8+vMXv/75+1ovRDU72tYaNTXFqJ5Co7f8eu65C8rDLz/9gLE235U+6EH0
5L++c8+zjzz59S/cf+XSZTv69M9/8pMnL1xsi+mqdmjArXtMFFkU1XTOBPvU
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
2T287qQpfHCdEAlPdPysZ5yi8MKBtEjIb+L/NU1TIAFAtAyKDEDoPxh8oP6z
xp8FOyFuvmMf9/SsNQTufFr8lyiyoBX413VDFVVNsZWl/UoGDhk+ZtKUmYtW
rFx7WLCgNMda55vOQHlMEtkZ6fmfEzd1XVM0WdIkVY+bjXXNEYbnYVqTYVo6
qBhR3OkY4VDvPEuV1a3pnH6AqB+37KhlgolElbUU/l9VYH6jCDO7YMdQZPHg
Hfa3Azlb1k/mpJX8OfTEqTPVNXUNYd1UDcOOg4qQwGBUFEVVFV3V4DucvYO+
T+aJNkMPp4f/9wQysnO79ehVMoe92Hrx4uXLrXErGk8kEvFEa6I1Go2Dr1CJ
swvP1suWrk5xZfGLItOqDhyurKo6sG/fnvLy3bu2b9+5fcuGDetWrVg29U75
XcVzpkwck6b4U3v2LXwEvOYOBGmYagNTPgiI/+80mvuP+Fpd+P8u67Iu67Iu
67Iu67Iu67Iu6zKX7P/07glFchePzfzfxf+Hp91MansX/PuxNrTp4v8HCsYe
//vbaB+ZAtP/W/y/S6nYwL+o35TP8ARKJq3ed3DPmtn9yX/7BqgPp1KoFCjN
iKeB/x8sq9rmfNrfe8r6E4IVa00kWtuU8vEfCihHg4MWrNm1/9ChQwcrjx05
drhqSRr4f1GTpDMVR8Nm1DZ1w7JtI1LPhXYW3vlD3pEHudiFC22t8da2trbW
1mjs8N3i71GkNGwpmqqalmHbulB3Yn/Z+MKspY3MiQF3eiI+I3QxZtsm5As1
DFPTVb2Kuuswkl/dZliWZqiR09vnDcv3p6Bs1BrwAqXOHyDn8rFUOryhmPDm
IhqPJk7dPf6b3n+vwdfuXT6xNLu9F6VGQs6eFn6bY1YXPoe3oP66LMvcmR37
jp88W3O+vjwN/P+MQ/MH5xPvu263SSf45mEOz8RncFF4UC6LSsOintn9Ro4a
N2nS1LFpKCPigdtcp6zvNlZ2EJUgpjFRJYU5lfj5Hh/drWePHr16Ft2JK+Kj
WccAhiIFu2W1I6ySmMnYkiiIoiIr53p46Oxu3Xt0y8vv4UoC6C0vkHsiqtX2
vu1qCZvDaTwnQfi3pB3IJDO6Fxb3KSwsLOnp9gzi7ReKmfxY9Bb8Pz5PUEWO
F2VIwGBsoumMnkOmzJ63dNmyWW7CMmBsx+ZZYIAvuvl/PNAQfD4vQXAucK4o
ujTBRwa7jd3XxHCseMyt/LebPLSZhYdjuqLXjeo3qG+f3r2L+pT26ztoNacJ
sgT+UWRN1g9le7x0z7ktlq4rRm06VxDvub4Jge02bMGuGkhILZhMXXNzY935
usaG5sYmWZUgFF4UJFXSQmM8Pm/OzHOqoeiqUZ/+EXzq33j+gGkbT4fUaMKQ
VT7MCyFOVVKXc7IiipIgCywvCSKohAUE7qPHnQG+QSwyGtL0D8zj7zF0ztaT
DZwk84JsGAIjhCJihIV9jWcjjCRxoOgsywqyIjXMI3DaW1wlK6quyLqZrn+6
z/jle8+FJFUR2UiEDfN61bhBy+pYReAUpbZ81byZU6YtrZZSFOV846GyQWD2
p+lliqTDmlGt9PD3vtmH6nhQkRJkoOfCoUhYPZYPGmVyE0RiHZtWlIX5PB5y
T6suNR1dN6kkiHppP0X0PA3bXgSxwD6aliolddBWQVCVRF4QZIj+5/lpCEHg
gV2WYdZOyicwmIhAL9q/cFJJphfmh/gzAhQ+V9JAJxUVVWUmp4W/96yPKyq8
coODWxQEXqwf7CMImlgd1cxNeYQPki2RPjLgRT1eLw6rPiMD737MBP4hHQgM
xen4R6aIzc1NLQxoXd00ZU6QIlM8NEUG9iZUcRzMzvAD/xhKQF0KHCdoPx0M
4rNFDZJ/KJoerUxT/40e2LeotP+w8dPmLllffjYUjjBHe/m81OyQYZ7r6aH8
/gDtJ3GfB6ZFQERspj9AFlRJEP/PNDfU1pWlG35vgklh7gvVZ0tDKKScWb6o
PCKJ9jYa+PNDAD7m9WCgI2A4FcygiYL1IUGSzDMLJo0ZMTS96ffdd3h3+1F6
mGUlsKwzBVaUJ/pIHHiHAHSfFycwAkqC541ccphhQYdhx2KYqwh8BLK/rAIj
QAftKvFKeR4sOg7qBTY8AZb8BBkYeZBX+QjH8fphR1789MwXmN7EMIalgdh2
sHcwSIJ29wKDpOgkQfqJkY26IoRCDM8baxyU+dI2YnitwMmGZrWsziMywUD3
YTAXK5UYQZB01l6D4QS2kVO4cEdgxN3b+08qOiEyghZa058AfT9AkT6YDNiu
iUGSeJ86kWUZoY6P3XfP8E45PcipkMJ8AygbBsJ8MEBB56DpSQqGHu9EluWY
iNz6wz++mVzeGfh/hNwsh/j1JBxxOAVVoAgc5sSkElOIXhWgd3Kc/NNkMvlo
X5f7fspQbInAtsxESBhsCbjBhcwPICB7fcHiOVXNEUhA1PypV79xqE+gc04u
Zgp8eAZCeDHIe0H7U0R7OEYVzS6vZoUI23x2/5oReSN7k53R+xGY2gnG9mwE
hwQMGE7SFDA/OXhHjcBxoVPb5g4p8MNmv3vWv3/nf2xzRJiHYrDaQaejoRIL
Tmw1mFD93skFxE38fyceGk0JtYibUcTnpygw4Egw76H47OqWxoNT/gP4fwTJ
3isy0qncbr3zacg84ScJDzG3sb7lQAHyH0Dg40P3gzWNHn/opz/bl1GQmwki
INFtVUNTc3hx52qvt1v+ZgHC6szEH5LJa8XB7pmBnMELjwksiLnrcG/nop+B
YeOVmALW3Ib+xXeu3/iGuW5IWWXIihqaqRl7MZTs7BfwldRbYEmtqKb5Q4gu
fa7Otky4GNCi999zzD579wc9H9ECVQkNbL5UQ7Nf/NXLP3ssDDbceut9j1/7
4/Vk8jdXXdjofahljzrZZhm6Yaq6pNmGpPDxz3zj5ddvJN/8+Zf5jcWZ7oCN
72jYTF62o7YFWe0k68qDX7n2yj+Tyb++eP/ppQOyff+eFjVdw8fplhU3wMbq
0qef/Pn/JJNv/voJee/MknYJ0M4e+x4PUXxM1dvu++ILr/wLEi58PrR+5K3p
pWjnEVB4fXQwq+/+R3/81xvJ679/Kn543uCCDyZeezIGLi5nx3ZWLXgDo9cs
FX56PfnGjx5id0zsAVGP77kiCyftZB5++e/Xfzyhk4KgJ0P/S/L1334nfnBe
v3zS88G/GLTk+JXvgOH3rz9+fW3/D9Y/mloZu+Mf9dpPnN86PO+D/AK+zNJp
O7lHXv578p0//+jrn77Stt77gSNJuGmi/QjpDvgXRahuPt/7NY7lDl526vK3
X72efOsP3330kqnKcWld3i11jw44/dDD9x0oTJ997ebzwP6vPQ+zcNpO5gs/
fSP5zmsvP/3QvTGVExQ9dmbsrcEnY4kJI/Qbw1zrER7U580onX0o9swfQGu/
8uLjlw1diVmGzMsat/EWjkUU8R+IWy+89stn75vsEv4f9fUYtpl/6Of/SL7z
15effeiyriZsDWLhVVVSz97mBUVmx0xFumwLsrbWFU4QFF313B/+/Mz3vvi5
z161VMPWL/3s9T//5buGBYXRDt+mAIgixCFb18E8rUltYVdIWTxI2bOtW/IK
u6+RFU2z2hIvw9Z9WTINTd17OwACRXqFDLBHlTSFU9XRLriHlpfpJ8mczVcM
3bRij771zju/vAK5gNSjHVh3Uvh/w1YlTQXz1CyXyLB8uAfi/xOybJrmC8nk
22xJhcHLofFO+P+orkd1XpYF0V7r4jYMRXJnzqy3denzv/vvB6bknZZalPKO
x0uod1tU02NRjpMk0dzn7qrA26vSFoWWhX0L6T61fCQ82RH/b6uGVBtiOUEy
zqanwXm7obkbDYGJTPbl0MMawuLxAgf8cdYJU9Frp2wJR3hFa+zjqn/EN7KZ
axGWEBnYsMaIttnv8Cvdz1uqeaJbyQmGE1VupMvwd2KtEOYWeSnvoLqIvLDj
NRgYfk2mbOzPIheEOFlVHCD66b3AJDHCr0BxX/86jp3qgL4Ew1+X1Z2ZZP4h
QVTMfY4AqTRsOMvwKz04VlonRhy6H4oURTRZ2x2kvUtVSTG1iS7j3we2iOw6
nw8vrRHCU538l4Q0USrPonyzNVnVWue77L9vk8juIHGq+2GBmeH0C71DOi8d
yid908BuRUssdXVVBopXz4p7A6Q/ewfHLHASP+3VpPHS0W6UZ7qqa0bCbf6B
kvOsVu6n/fQqhlvdEWCGInk1Gs8fL6DIZaoONusrXfXvQYY3ctpaOkBjcxhh
V8fxjyKB4zrPnyvFu++XDV1rXeXmDIAi2AYQVmYG/KRnYkhwxv/vMwShYQTR
bY+kWuaFMlfx//5FjS1yTR+aIj1D6tgzHflXwNp3g8UJzRPxgsOqbBqtq926
fwXfeZP3RSJhfjHlp0lfwWnuvEMmiAddoPMct4DM3Kopuh5f5Vb7Z41ef4aX
OEYqzyUDAdKXW8U1ju74cBQZI0ucvCeTWGPIupFY40795y88xet8hGfl40UY
PPf0ZlewoVkOv4mWNIMAwC2ZDpYKutm6zpXyFx3WZJ4JcYJ8qr+XIEiK9NHb
IpFlTgEg87gtSobGypqhmXFX+Bey95sCw0UYRdpb4sNT8HucXBdhtzjsuVF8
oy1JSlThFcsy3MDfI+gEUQL+eeb4zCwf7vVhGEGT+NJwpMIR/z/FUGU9aoLZ
zzZiaftHweZrnsqy3OmyUdkIQWJeSPns92MzI5FjTukdaHGLJam2raiGaUTT
xv8D/545YoitgPh/nCQgAB8jqCA+vjlcXeo0uQQrbVkyY6ZhJRKJJen796Bz
hEjtYAQ6Tn3BF/BTQxpa6oc6fcC7MqpIYAkc02v2Lk+LFhPi/0H5M7YJzNFs
tN23L9UAJE2Xngs1O8uPj4JJWFZbw+T8NDegHogzzxu6oyXEH89EUtwDKQy+
1wtGQPGpcHiR0wBEu9WBBjBkuPlKJwOzYPLMpVv2HK6JyGyLfC4HgeB7780a
wCkyfx/LbHAqIErtjiuydjRd/P3qtmg0FrXBJp9jxLruCIZBBgI8VQs4QVMr
OH6X0zUr6ptrQWhwev493rX3RXWoY6CIosA3FKEkVJ6GAvDwB+XHZgt8Zb7T
R72DBFMRzhSldQCFoiuuwgNuRQVvoIi1fbwg7kHkK5G6cKX85FxRPNfbqYxo
DgjBQtOYtFZ+KLL0StQ0FC2lwKBWl0Cie4IkwVvAyyc6kLFV4RsGOH4UXwP8
80vTuoVDkWX3JAyIspbBcDKa+xPwzokEP9p5t30D6sFWsOMGHJpnnAJ2//vT
Sr7wIIsuRXUTrOFAC6hGdCWYc3AMUt7D6ieyRhxXBI6d7egfLagzRaHuDnmi
H81QZNFF24QEALqk6GpUW1Rc1HfAiLETps6cv2T5qkO8pckCv/IO+P89UVnk
pqaH/5+fsGDxVU3UVU1vNWrrGkMMWAKoKfy/oemKKG91PGBAvfMtVdE2p0PD
jiKzE6nxH7UhkZcVjUMeAGiSoqbEfWDXOHCH/KbBQlQ1T2Wnhf8fXl1dU19X
3xyBqcSWHTNlEXJxyPAUDKb5aqqqnHQMAAiadeqCqUfSIoBAfFk5+d0LehT2
mSdeunDxEsT/Q4u1AgMzayJm29HmO2Rje7beE7O0yenj71O5N7OOVVYdOXb8
8P6Kffsq9u7dvXv3zm1btmxcs2rVzDvlFxcvmDllYpriR+3O4SMg/D8jI5CK
PBQFEx7AHPgfuHP9N+/Whf/vsi7rsi7rsi7rsi7rsi7rsi5zw/5Pb59QJHfR
qP9V/P8grWXSzRPMu8L/I2mlZabw/7v970twe6mPhP9HXOo3EP9v1LWzO3oC
JRNXVVTuXz93wL/H/8Pz53aKYIpIQ5YNRQZLqrIpjw6WzN5+hrdiF1oTrRe0
/VM+HNCNBktGzduwc09FxYFDlUcOHVp0ty8A/Iu6LJ3Zf4yxElFLt+2YrYfr
eGbvh+D/kYxxW8/L8dYL8da21hRHZVU6+P+opsN0byNqaXzDiX1l43tmLm9i
Tw+84xML1zQarQnLMhXFsnQTfB3/ULqED7W8sxD/r5tq+OTW2YPzaG8qt3B9
M3uij+MjUaT3dsaOmrpqyApEX+qWGT911/rHqP/AfSZ3fteScSloJXJzFObu
Dd0B/4/22hIyoqYhSTJfvWHy1FkLliwrm0XctX/f9APzBuZi77tu/9OEY0J4
uNMze21q0mzLUEVJ3NWXRFCPF8Kz7s55yjA/eovrdivdwMplDgfLvTY2q5Av
WRLkQwUuTR1O+P8e22X1SMebhd6bm2TdMDRFkYUFPpj00SmxG0WyjkS1uuLb
/3ffPS2SqsPLCkVjJjrdCrpk3t4NUYsdcWvFoEOPiZD3wgARQzbO9YHFx+hg
VmaWy6J4KOqdptumNi9FBgAv6TzgTXzjqnUNMiUbqqLJ+voA8O8dun7X/opD
612EhQCPWLD7vpgu6zXDi/sUFRYU9CruU1LUf3nIVOEVCbyXULSz/bweD5K5
UzdM3azOciP/oJ1sAcsZOHPrGQ30McmM1NTV19WcPVdX11jfoMBLSgmMO0GV
pMg8DAXuVzKWrGn6+TRhKe+OPiy774RVJ5qV+AVNltkIz4V5FSbggv+CatiS
xPO8KEIWhO25iAcNrBAMHfy1Xpc+LAYlc/pPW3ukgZMVXoDgW44PMVKEVSRN
Ypgwl+InF3iOE0RgFUXAvX8xAy9nZMVqyE3PP9lr5MKdJ5sholuIMFxY1I9M
GrqijlNFTpX2zxg7ctTEJftaREEQJPASLac394GBb2yLrmmQEcJOr/19U/dV
c4phQFITUWQibEiDF06eyS2aqvDLYPYJinjyDsUNXWw+WV42fUAe+G+0eyWU
6ZSgQNqyu51/U0YfimoGaFwRMjvIfITjuRkIRhKB3aZhbfdDXTTwha2q2712
9rDemSTEG6AouVQFg1ESJEWrTYt/BPWtjyuaKvGg9PDej+fE+sFeDPeTq6KG
OgGUFE2tD3N6+t+dZ2C2Sv96Q9N1QQAT8JG0KOBRZIYaAa3Og4ENbzxBFwtP
QSmKDO6Jqy0l7d7frV/03SsharWqpK6tZUnd5pQh/DHMP3xov4FDR0+du6hs
S/mplpYQc7TA66NmRQzzWM57V1DvvwMovafkFOh5OrNn3crFi4ale0f2bpz3
ekk6b0F1S4t0Zun8HRFVsrdR7VRbH4ReoB4f1mtLRAAjcmWenyJwF67o3i0l
CGrkRobhTc2wRV6Qp4Mge9ssi3pyhi6sBNFJUGp6pO/5ttcAP0aFWMEAUU0W
tP3dbk3shK/iHVwekTmOZTljB+Gy8FsqDvesZiOapSqKeaTPB+nPbwJ/h9SY
qhSJ8KKgL3GZHb29o2UcVSKSrRrc1gKHvWBwl8HxAhcSZC7iOhgt5Z8oVxlR
Ew6MIj6wKmxfJML17zkpwrByExe774rLsnPtjjz4BiXMMesDCPoBcrubwwBF
RoUFhmGV1h+8+s/kis7A/6PYcjnEHc5HPLfvxkHU9xbsZjmO5+WfJJPJx/p1
Bv4f8cxluMi69262b9Lzw3UYXTTjUAvDgTDd8uAfn64qcdKFccGms3x4lQd5
7ziiPQATPWfsqGZ58He1VRvHdBtTTLoFfLvN0ClgCljre7fq21/CM3jrGU7g
IjV7l40tzIIp6Z2G/0fGhSPSOl/7xIe8y0m11WAjLZXzS+n2UnfmsdnESIu4
H8y13vcyMxDf9HMtTScXdUfv4nzoYxl4dsZumRWai/KK8rzt/j2Ib2Z9fcvx
AZ7/wHEhPmQfWPIqrY/99OW9AcKDesF0l7esrqkp4prI3IdZ/kbeUmRVj/4+
mXy+OJBF0LmDFlTxHMNJmwhfp+P/fRNkW5JkRdcffef6jaesDcPKjoRN2zDA
UvAggfwH8P8NBpReUUzjRyn8fy1kpdTAljt6770nzc7H//uPJHQoemNo9ku/
/OlPHw2DHY/aev/j1169nkz++nI6uWYfxXJGQUkZsLBWVVm3DFEWEp978uU3
ksk3X36oeUV+WictH8F8MwTZti0rxQdmXnnwKy/84a1k8q8vXK6a2QPmAHb2
AMDG6qadSOH/P/vULyH+/7+/GNk8Nr89BuE+XyeeeYB456FKjspa6/1fvPYK
KPbr3/9UzdJ+qRpHUxnZ8E+dR8Dg81HBrNKDX3r5r8nk9d9+Rd01sTALOke9
76Lcc8YsOzWq8/D/Y9YuV36RTL7xg8/Urx6cCRf1UIWtfXHv77v41NXvvZb8
70mdhP/3ZtmvJd/49TeVHRMLaBjnPR6vx5ea6/LGbZO++tu3k9dff3rbkFvw
/17wO27h/zHrkePLiqj2P/vadYd8OQMWn7z6vdeTyf/572c+e7VtDfqBBTcE
HeMkQrkl/u2FjAserw/HvbDZffkTdohP/OrtZPLPP3z8HsvQ4tzKnFvrvvTI
pz59YY9r+H+vj8CwFNjO33/xicvfBf3wH7999ksPxCH+34geGX5r389cqKfw
/+6BX1O9PTh4TcsXf/lW8p0///gb99mGEouZiiAbzOpbSFZRJLMybr30xq++
8+CsNHff7z8SL5h97OKLoLX/+Ztrj95rqFFN0jXwCrKonxpH3rYRXJgwZfme
mKwYqyhX3HsWPv6L1176yVOPPfSJmGpaSuuP/vT73z8HaZEV+cBtCoAoQlZB
/L9qaEpbbUeA9F2YB9n0g0/s6d67+0pRUjUzEYM7jOTPZdDz5J23QxBRpDAM
aZMlXeEN3lEf9C6sW2aQJrI3XdbAaiP26PV33vn1A5qkKmplwe1dDEXGQPw/
zFkXVc2tHuiDRN6+6a2qaprR74LJh++/xxSk8DgH/P+iqGZEdUFSJMle4GJM
RpG8uXPrLEN+5E9/+Oy03FNyi+wgf4l6tkR10EYcPJCMbnH3GADvWRWTxJbl
Q4qIovMcExnvEGLJgzFVl1siPA/WCZUujcCb5snZrPNseDSaQw+ud8T/Q/ih
pRi108tZRpS1sy7Dz72jW/gQN5vIxAY3MuomJ5a7bjWWap/MGwg2pJLa0s9d
/yi5XgxzCzyUd0A9o8zveA2GIj0bTMWsyKLXMJyicm4RcLz3+IlCWFjmwX39
GwRmqpP8dmEYBJ/dmWTRSV5W1IVuzYHv2giO5VZ6MF/feikywQl/XxwGkWF3
BuVbI8uKebaPy/4HhkV2rRfHS6v5yCSn8peENVHel0X65uqSZsSnuYx/L23i
ha04TnWv5CPTnX6hd4vGS5XdcM/UFGpnkcv4/6JaXtpNU3T2Tj7iwD8B8f86
Lx7tTnqmqYauxdzG/xfVMmq53++nV3NsmZPAbLdaTeCPF9D4QgXsD1td0b9+
zzzI0BT+30/55jH8Tif8f8ZJQ+DPFhM5u8BOUWsrc3MGQBFsXYRTZvkDpGdK
WKh0YlfBK0yebxhJ9DgAt4kXV7uK/6cWNLVIdf38NOkZ0sCfdrjdQT2bLV4M
TSZ6VimKpbe5if/PGlvOMBF5GQ3x/4Vn+fP9O/6eB11kQl1ef/YWHeL/3fKP
ZAxbc4KTBUbel0sFAyTW7RjrjP8fr8qiutNPrrdlzUi45D977nFOFVmWk0/2
9vn9FOHL3s+Gpzs8Gy0N6YLMTBvfaOlgsebO0VTPA7LERSIMr5we4MFTMFD/
zjC71Angl3PSEmRTaFZ1S3fDPwRg7zN4huFYRaro48O8BEHROLE+zG5xgB+j
xJaoLGlxTVRMy0jbf+rT4ySRj/Bi5MTcTAxLqZ/TJLE8EqlwRJhOMxVRjZpg
/W+b6fIPtJ8zL9LArHduzagsBKegf4yg/dgcljnuxK+NFocsWbXAKswyzZgb
/CeeJXKYgRuNm/h/WP4gNjEcPtfHaXIJVEUVyUpYRrQ10bo0Lf/tn0WXCeG6
wUgK+J8CgWMEESCGNrbUDXUqv29lXJGNaDRu1u0v650u/h9Y9/0cdywbhUzf
kG4cNgDpp0prwiFH/D86WtHA0uNC8/TuVHoQbBQjSKrb+IOhkHA8C/HCssPc
QswL/ZecCkccGXjQ7rW2LJvqWCS9Q/Fu42cs2VBeVcvLTESC+P926H+KAoCg
6by9LLuOdHo+VZ6A8gTpcX+hnlWt0XgiHjVkkWfF892QVOuD8hOQ656iqVUC
v9sR/++db6uKtD89/x507X0xC+ykZVmUBb6xyENA4DekgIC855SfmMfzVU4M
PIh3iGAq0qnbRVo+nqFI2b22ZepQ5VxRpPPFXgg8By8AQeg4RgXIeYJQXeTo
P/dEVBKaRqfpf8mVuG1o8AVkRasp8UGmcRK+BGR+pgIZmxSh8U74/yhotCVp
HUmjyLKrraD+NVlWNdkMD4TIX4qGehOQ/JnylNYITOgO98zjVE2SHNlZPob/
pVeihgXWcDCty4yt9kP8f+oL1kHG4EOKwDGznPH/PRosWawtSSf0eZBFl6NR
0zAMTVV1LW4u6lVY2n/4mElTZ8xZuHTlfs7WJFFY7nzs7d9jKxKfFv7fg8xP
/H/2vgMuruvKe97UN41eBIiminrvQh313lBvCCGBJBBFIDrTXr+vvzcFVCzb
seOSuMVZx9lsNskmWTtOcdY1duysvV82yWbTm23x3YuQLZmRbGtmst/vWw6i
CGbeufXce889//8J6ooKGwBFP8l9Slt7t4ekUKYT2CyaKkk8B/ZF93qbVqvw
9LEnFp88ZljRFwqGQ7qu8QrC34dhQwwkGBJQeA2KtZREocodvQMmskFZbYwl
+AozTOvs6PT6fCQL+0DRgyEFhfQAnkX65es3McK5qAbAgKU092myvzimxc+Y
lJaZnZNXMHq7euXi5XuuXumL9EZC4XBvpK+3N9wXCevBYE9e9PeaDt0b0uUY
8f83xLqlsa6+vqGxtrr61MnqkyePVx6vOHLk4L7yXTtX3C4cvWj9itKF2XHi
HzA6r+P/7Yj9A9GAXCcAiOXZn6kct/ndMP5/WIZlWIZlWIZlWIZlWIZlWIYl
LvK/+viEGdLKJkfF+f699JdI3nk3Asg+BOH8PfWzcoX7pqjy61GWn6YE8Sgm
ZhgPlO5B96o5Y+ziHYf3rZ+b9ykTXWEoH63Narl7jkLEPyDyB9JsjqyZW6q7
gR7pi0R03/7JnxRQYUoqWrhl/6Fjx6tOn64+tfru8f8TWZnn6iuqu6RIKKhq
aiioSzzw7E6909vw4uVHOpXecCgywFAZPHO38R8I/69LMi9pmhZUVYH2XDix
aUbxPj9VGYV1flCM2UtP9Ii6pvKcpqt6WAs23Zku4U4FyGqJSKoiw4d5asuX
loxIRu7srEoPfSw76iNhnxduPdfFoABtlu7q8gRoCpyNBf9/ry4RDYfWzsp3
D2bhhQN7TC1Bb4yeagwbuaGu0yuIPMf5DhWNGFlcNGps0V2HgGKm1a17Fo1J
+YgAYMDlZV7VwV8ojOoRy117ur2L4AELmufHmPd4QJyZthuqP1JiKDnD0suj
uP6w3LITzR1dJMey3kXXa22M1WANNXmYYWSdKAxJ/IAZsLw1lfUX2n2cwAnn
cm8g8mLTH+1uD8tu0aTGIWFttnFbq+sbL3QDlKLx6MDFB4awuXE32MaSgK52
FX2sYq4FRxtaW1q7KB7wPLUqMViEAbSXZZUiy9wsgxF1LmYyGdG/vE2Nnd3d
XV5OEiQgNQ/wLjsnlZaVrVt81/wXQ3QjwdPHntEFXj03bmR+3oisrLzCosLC
scvqSIalGY5Hd2UCu9GJeAqWkqKkKC0x5V+/RTfmKJi7tcYHqy8BxddyobW1
+XxLe2dXRwenyrIsiBLP8IAWTg/cOkzr0oEoShdihKUMDmGTK2/m6qOdjNzb
Kwgc7adpAq5O0NDBD8CyvIDGHccyHMv1LIXWyTi9S0Up6qW22PH/luSC2Zsq
WgII5c8hQnaaCRBcgOYFmSUoGvCw4QHUDYViBHIHAsjP7FTQXRGndsZWf2Nq
ydLdZztpQZJ4miBJkpNqF07d2knyDC1RB2fPmLlg82kPw3E8heJdARc4UIQZ
jBPbVUkSoCGUj909/wwK5V53zivIigItOgtYmiB8PJr65vk+EQi+BQgWYLDm
zG9SJaiPozzNFRtHw6WiuB7+V+QBfM3tuXI+jX7XGU1UJNi7LMfBdiZIilpi
sNhw53FVUtbfwGFmnND8HeeO7SybP21UFjTZyYcQaThLw+o3xMT/gVn3hlHL
s4DhBY7naJLunGiymh22bSGZHH/jZdY5a2aOL8hMQqExBkT+zkiiIABeVMMV
jpj0G5byfj9J04IgqFBokvLNNeB23H0szLd/FPxmsppusofu/TIQRKGnqeHM
6SUx3lE5J5SMKUH4/zVb91c0eHs8ZE2WyWxf4pekc7eMbOyjL6NaYM+LZ2YU
5mZlxFT9gafdoB4y2RzpS5u7utmGdcsPBHgueCTqszHTiL1wUrL+SYao69dd
lGAQXo14Xrb4fbQiKxpgaHFFlKY1OopLT5AEQUlnk+N/VoFb8q4ALYtohyWe
jUIwYCzc3sFC00gx6p5ooamxijGtkfDzKuxepWl8lI39qFq4NJAEwzPy6oTg
v53VwM+p0M7VRAurtu9VaIqjA0Cg6YQko8Vsh2SKE4WuzdFCe7CseuCHC7GX
1K6EShKjf7dAkGzLnOj774k90ELSQPvuO7+9tiUh+H/bZkD5u1dERRVhqXtJ
aKo48GJ/f/8LU+KU+PJWFaYymiHqxkYJu8dHzDzqDZBoIfzKX1/2T3QkxFOA
LWMY3+kxHz9TmjPn7jnvZ2Dt/W3VK0etnuJKEP7fsJhj6Nrxt8a8GMdsrSUB
x3gbD6+bXpwCVVsTpd4wmya52vG3Yq1tB1SGptoPLchzXveQJDAvwmyGBBdG
WW7Wb1rQRnp6KqaiI1Fi8f+YwXkA0Bw1Ky3txvkLrgmlHT3+ng0Zfwd3oWXU
ARSJF3z6h8/ttiBgFWYyp63r8HrJM+l/B2dl+mYfNP2Sov+8v/9bxc4kC546
ekUNhSg/Kt2JT4Zhng2CAgdERf5q//vXvsGuL9lQ7VWCsqJq6lm3MUGEHx+J
ZUyPpvCCBPX9DOEPv96qhzQNKpe1PnXDvm3xRZpFkeRzEZQOR9GkS2/91//5
+T9RosBLwcsP/cP3/+Mvv//z14YgEeOtflztRbgHHSDZC1/qk0VauecL//T6
b97rf+/nzz90YWeMsVafJNZFPj4SDqko9Y2k9t776NPPv/Wn9/v/+OZXQ/Xl
S2dOKIkaiRo/sc1VtWCvLgpS5P7Hv/XT377f//7PX3iErdk0Z3xx4ajxJePG
JpYAwTauTVbClx549nvv/Pla/5/e/uaVjvKl08YU5hXk5+YXjZ44eepde/o+
UeDeOyk1Z99933rl1+/1f/CrF58AtQdWzRiVnZqRlYN0z1ldwTzw2JQE4e8N
RnvR/DkVn3/r/f6/vPud+zqPrJ09vqAoNy0tLT2naErpnpbwP/7k9/2/fHJc
wvD/1f/8ziu/+MvLTwlndi2bVpiTkZycnF1QWDJn7XHyoe/94v3+v/7yrXtL
829elaFljlt8oMl63+++82DHkZXTxxfm5Y9IT0sfMWb6qsMt4a+89vv+D37/
0+9+6f6r0grrTVAYtAK7ky3OuKC/oUw+unRuydjRIwvycotGlcxaX0k9/PzP
/9r/t/965RuP9iqyHmlbmHTLWdA4sfuZf3j0TGGc9iH41ClTJ48rKSyatLC8
OfzMq7/pv/aHd37w5Ufv61V4XtLkA4W3zr287UFkof8QL/S1dez0iTPmrD/a
cd93/uOv/e/9+uVvPdEr60o4rIs8UHuWu29Wgxly20PKC7994zuPbooT+6hp
4v569Zm3/9T/3h9+9v1/+sJlSb0UUoJqUJPgelwz8dbtKGYq75V57orOC9rm
uHCCGA3Vv33/nfue1CP3X1HVUFi65+0//Pd//yAYCqkid+BjECDMkNyswWOg
qEp8b2NKPDrAaFj1cMe61OzsckWCRvhS309R774GVFXiyj/u6McMoyhFV0WE
/9f8OXEyCSnpbps948BVVdOCkWff/+CDn9wLWIETqoc4wjHDXAnukUR4TOQk
fmycfBADpB+Wpb1ADAb1H/T3/ykwukKhQWB2FPzfOl2SgxIDBCBocQrAHpSM
Jcu6NFl84j9/dv+8lAbez1dGuWYxHgjKUjhEo1x1oS3xdQNYRtbqHNuzeVyu
Ob+NJskFUQyM9VRIkmUywHAAaEfjC//G0vfJNOWbZsq0T+im2KZoN4HJDbqo
dS6romiWlerizD9sntrN+uhSW4qlpIcUovBwY4b01iCv1mdOaqVpILblxle/
0baT9zFlmMM8tosW10ZLsJnVqQpyVYpzL0OJorckvmsywv+T7EYMt4ztBtSS
aPj3XI/MS8eSrRO6KCAwUSDyscl0hqG3mM2WMZ08tTCa/nyfzImVqbj9EM/y
8s54h1CMJ1hqp8mG5zczRFT+g0KfzIrVaXbTKoWTdXJKXLVjhtFdFLfPZndk
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
c/bhz/dGwhev/PP773/wAhvgBACqs4cWdqUiB3UeiAKQmJjQPzc9dOCEZV8m
+5RIJPij/v7fteSekGmenDdkhmGGrTqcEyLNC5wsTomrTU6bscAblIVHf/IC
mJx8jvcJ1RlDH286EpTEYJBiAQf0OLsBrMX1Gsd1r8rNMBe0MgS9JsrtnrUm
KCsa52M5wKm74+wGSd8rkwHfDDzTNqGb5jonDNnyYIakBl3SuldVkQzLSSfi
7AYyjW1lPPRSW7JlQjcpnxqa/A8zpF3QeOVc5vQOigFijDlQhz7evJH3MmuM
LvOETlre5RrSupgho13l5epU92GGEcX24vi6ATBsPggwmzGntaSb5dcPRX9h
hpwuVZROpFpm+2ggkre9qrxbmU5T9FaTzTa2iwVrh44uzDDSJ/PiiVRbcrXA
ivySeFPxlfg4erfF6shvZejV0fTn+yRWrM5wmDcorKieivdV2OhOlj5gx53Z
dTS1IVr75yH8f22Ww7xQAaKqxoQBGiKYYXQ7DY46ne6kYzS1PRr+Pqdb5sA5
hP+XEP64LM74/1EdlHTY4XLhOyjywFDSOcyQ3iKxdFMebl7Jq5IS3hhX/UbD
JA8hbXO47dY1JHli6D04ZnA1SCzbUmx1lfMy3JvFE/8PH2XdHSDoJS63w7TI
z9RGSz5qrlJptnOCKaMCSIraFyf8/eCG3r7e42Vaip0Ou3mGhzwfBeGIGXaq
NOOZbs6uAYIeZ/z/rOOknwBrHUkOu2VcR6AzKv5/pcTQgeW2pL08UORQfPgP
EBC4ZPNZCt1q1WTYkux2S25TVPQhZpjOcySoSHHvkXgpbvh/96JqUuJYmhbO
jzLZXU7cmloT8C2J8mxjcUCkOWLhoh5VhP0fh/pjZtuEU5zAEzRNS00TjFar
3Wmzuo94iQ1R/KzG1CaF4xTSK4mqJPXFWn+LOyU1c26bzLJ04Dr+32Ix4Q6b
Fd/jI/dEgR9jln0aywlhmedVVeqNsf6O3DGTZsw7I7IsRTJU/co0K0rqgvD/
tq3+QFUU+DGGLZbh7jOkCqKqyTHpxwyWnMmLV63b1cWxFHFhz9w0gxVHKGyz
ze6wlvl8tVHx//kBVRBCYV6SdUWPxf5gKKBo7c5dFV5ABGpGGQ0YAkAj+Dsc
AdYFXl9LcTQCCueZEABqRNaCfX2R9TG1v7Nw4cbd5dUByt8+wWAyWWyw+c3m
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
cR+B/XHKGv7/03cvdFaDhsEAw2+v7325TSuw5LkiYDtrK4s//rVf+vG5guQf
gQbL3iH+//euZual6QwaCMNUMLKBwbrnIkeGt9fmJ6emmX/1cz+2WZV0+DkI
LKs//tf/7l//4v/6Znt95Sq0fkC8NwKcLEscjfs31hbmJoafjq3/zM/9z3hj
IrW3vlcD0joIJriLRb8c5W5rTpbRUzsKc80Z0r+1ujA3PTHU0Tkw85O/9L/s
dybb+4S7744oMijGxw5iUjNUb06taltXZJ5Fd30r87OTY4/b7rd2jf3Ef/i1
n5rMTD7/grEZ4v8J5fXrfQoWdjOmVjSNBlSw5kM7m8uLc2NDfb19/QPjP/7t
//ZbVAK5j99Lv+k+T7AUy8+13j4Lh9dVeql/BlV4hsIC/tVV38sX41OT4xML
PwbW6D+7nvwNYHokoARFP0q3uz02nc6SW/dgfJkSRJkjwsHdnd1N33YwtL0V
/OqfvfvWHyUbfQ71t3IYzi7meN2pqVa9yVt6uWfKx6pqRKIpkiIImpUiMVUQ
Dn79P/3+f/lSWfKfT65SFM4+dns9brfN7Mitvj0wvcnHolFFkURYI2rv9du3
e7Iq/Oiv/ctf/NneRMp/fb5Uh8gw0+9J8bgcNnta6Vmgf12IRWCCZjQSjezt
7+3HFJ6iCfDHa64p6a83FwgSJUe8Hgh68uaWn7vdN7UqRlWY7bynUY+oPM/R
KInuoqz8pdmks0fX4zRJjHpB5xFbWnF1fXPvi2UhomppsgqYBAbfXfMzBMWG
cV55s5Nk/gGdrhJew0ylO4Dv7cgqqWm40Tm8KILoP7IHC2Fx6Nbq7PCTHYZi
0SAp7uPJuHz7G5K5xuDUTI7TZrI4s8tqGq48fDInRWQVbgEmuLk4NdR6o+4h
SVN4EOdibNI5qGyzIk4v5tjtZrM9s6zq3JU7/XMMRnIST2Mbc+OPH1yuzvdm
TbE4HsQ4Ra5PNv7fMCBh1HqRw2EyOjKLKk433nw0vrmyuuFbW5wde/zwSm2B
B7EjtX4C84cIMdKcbP0Q/09sVQD9esSTBRbg5VuDL1++nJ0dH+m7f7WuNMOB
IDaHtZVEg2ACIh3GZOs/y9NEqNYKvB+dzZt3oq7hWtfkxPjocO+D62fLc9zw
Ythmt2bNE+EQRkefJp2DqCTMktg5iw3ot6TkVdacvdA69KS/u/XOxZr8FAcE
ZUBmDvOVQCgYJiKzSYY/gw3g42nyqgVST+jt2SUVNWfudrTdv30NdN4F2TAR
SEDgQNzDaCiMSr6k4//d8xLF3Efg/Y7BllZQUl5zs+X2jcbTpRl2sxWxwpgE
3kkZqjdCaIgNlSZbv/WZTHFdGrOQ3urJKig5cfXGpQuni9IQo0nDpMLSsBCF
1BZCUYI8nez5R/okmhs6JPW1OFKzCyouNtTVFqdajbA8qVkr0AmjMn3hEhYm
6CtJdoL15ocizU5odU31Jqs3K6/07Knq0ky7CWIyLWYNHwQnwWhpxTCc67An
m4DgJkcy84fcdkarKyO3rK6mPMdpNiJaNAqBWfBGCizQyi0C58aSvgEaaZJd
q9C+NFjsqTnlp08WpsEo/JAQz6JVx4WsaI4XDMm8yk1u//W6cxRFb5zU/mI0
21OyS2vKsx0GE0TewmAMgQvADIu0Gu4INLebdPz/aYIkfdVarwxmhzez4GSh
12SAww+hvxopoUa/YNY18IxIXkx2/xsxnFw7bT7U73Sn5pVm2UBvQdfhVRS8
BoUgeBAa6i8KPC91JoP/+jv0mztQjFysQQxw+C02jze3MMUMInGTBr7XriNM
Gi+hxXRfUASVS+YRrDfoSpcCGDVzwg6pD8xmm8uTleMwGrR7CEg+gEBoIKRC
MBnT5zlVkj66l7SraBjv5YwFdjG0JweWwQYGx2p3padb/4p2BF6GmKERNBgt
usscKSnifnLw94fiaXwZDgWJpWqbGYEoYMj6mea1aCWZjfAyQDM9GjBbl7eu
kHxESqz+PJTPnlHMObdmwwSO4uE7DjjNQCEkPU1zweKgkIzDfHgdA5+FDbq8
eRAG8Kqyn7B+KAZLRv0TH0PjsAJtn0tv0oCwZgh9T3WCiTBAIjyoHE4/YtZZ
6tcivMCwSuQgEfw5FCPiTs2uujVFsiSOUwy7ccWrN0LsMTxw7CAKsYGFqNdu
gk2HJshqcfQKYOkJDJco/l+nc5acuXy37yUqsASKkzz3slwPVMNNBlHwNqvN
jehNJngVYnyPyQWWsARTBVg6g5WiCeHv9Tr3mUcv1gIEx/MMTrDMxv0so0b3
ajRr/QW+nsush2153394DCDmsrDKSzLHC0r0bSL911trhwKCKPFAaDI8dTMP
XnYaLJb3MFyL3Wp3GHTwtHlPv6T5P5bisKoxoolq9OPu+PVbc84/JxVJEFig
nlk+azcA5w6MPqS30ciWINbYcVgcV+O9gWYQEgDk+yOg0cD8Knvx69ebmzaC
siJIIsexLLNbqzMgdo1y2XQIAodkV4jDCTmID/WbNGC0FejfjkpQv6gcfPQg
bv2Wka+oqiSrsgiLTE87DLDoPBx2qE87csBac9nf880YIQER9MGsDmvuVgws
PyCKOp0fP/5/4K0iKbISkTmOZCdtwMBZrdp7G+SXATMA4eZuq84A/wYpuCDz
khWyIeRs7qmafnEjfgCq3vD0R2LRqKrGFJYluDm7AYEEJ4cHDRxtM6Rac1v1
xvfQSDAAFq3/9hxfDJI2CAo1fTJe9cDoPWLQwKZvJ4wGGQri/zWGl0MnD7Jt
Wewuhy3FBq+BNS4SvUYMAZdk7kZMliVJVLEXZfHr1xU2N924dLGx6c4AzQkr
HsgsoamHEHDgfFjtHo+zyKODujX6IbgQLCD8dOZuRGVIQKAQoyVxa9frHFW1
J8vLymvr7jOisOI1WjSCGfjcYTGCI8Du8qamX0zXmbR7aPPhGWC1WZ2eHKA/
EgH9p8dLE9Bf2dba+vBh28DjOVWWl9PNmo8Jlx9cBiabE6jPv5Wms0DWs8NN
aYZHktNV5DuAF0KSwowlor8jwnIcJcA9GNlbz7MhyKGbbYa2x+pKyy7Iq77v
1Zm14YeOH9wgDpfLVbZzAG/EZIlJYP71uq4vReDVFvggUd2XQNCtDQBYaEab
O7O09vyVW7efTIAJPmQk0Y4eu83hcqfcoGOxWCSiSMxkIv1/9LGiwNLuiiAq
6tuVLHDcOD1p2aV1Nzsejy2srm8Fwjgxf68i3QWfIg2a/2d3eHKu7wCjAVag
LNJTifT/wccS+Aw5IvOcKCsHS33Dz8Zn59e2AwQNDDIDrTJJsYx/ceLJo1sN
1cXltecu32kbmAqLrKBALLpAT5cnov+tCvsfjQgCZDaO8gI4CWiaQkkSw3GC
AL8wjCBImmEpigjvBIIhlGI5SeRZQZK0V5G5ygT03zuIgAZEowrE1kcjCvC9
SKgUJ0nwC36JQ0FRHAP/UrBpwEFiOYFjOHBsyaLIziei/86bWEyNxPZVRQG/
R/ZlXhR4SIIA3BHwC37JccDLgH/lNL4b0FAFrNcImP5YdC+mqqvVCehv1O70
KYYEnhcJv971+/272ztb29tbW1u+zfX19bX11bW11bXV5aVlyAewMAdldmZy
cmJ8bPTZk/5biWRgWfOLSsvKKioryytOnjxZVVVdXlJSXFRYVFxUUlRUVJif
l5ML/s3Jyc7NysrIBJKRlur1elO8bqfDbgNGKnm3f3rtdDnkvIS+LqS/O2R9
/J4g/cOfS0xrggiGYzmWYzmWYzmWYzmWYzmWYzmWD5T/DkKPH2YLkOIjKSH2
gaLXncT8Xbk/NAYCva5OkCK7ze4fmv7zexEpSv/w8P/FfT0dj1oL49KfjIWj
t76v8RKHGFLO3bh1+8bt5vjvf+D7usEQ3/MBcmUz8vpgPxrbnzHHPRbIyfP1
dedq4sD/my5xb+HTRUSNvrLFjT8vx1ieJUKNX3gNGYpX5Wjs4LUSiUZX402B
1OuqIZiF4YINX/QDrB0CG+5+vMpH1ehaAvh/SeQEmqK2z32xTzDU+gWq02R0
3RKUyJY3bv2nlJggUARKrp/RfwEuTcOJDZET241WfTYqSVvx8g/odN7ObXjB
Hg6FVuu1Fn3YB+mLl2Ve9RVZzKdZQdxKAP9uKaiobZ4O+/1BX4NOp/tga1b8
KiK9Xkg33RMlaTMR/D0c9oyOHf9WYLP+C+jXlSyosb2L5qeqpOzEP/7vxdKy
tenzb55734APwf/rWlU5ejlnjROicfNP/PWHmW6sba/vrDXAnCODxea02xHE
brfZYQkI3eeZesO5QERRpidQkt1PhP/hPeGBTt+4sr3t3xrp6ugaGH724vmz
waGhp0NDAwP9XbfLP6fIobmZiiqx1wxKctzDRPH/sM6PoXEjFCBIimNYYNgi
KsexgqIqihqL0MO53/0z6R1MNBJlcUJczUow++hwBIxXd8MojmIYzgiqIrNh
DAOGiZL3ZCW2+Dkc2xk9QkyVaVJMVv0f8+0QgWMYRon7wsTjZQIjOZbhAz5O
4ORXFbD4js4KUy0/W48Z/XwkwpNCjyNJ2Vemm7tUMBgM8fglpy2zC6U5ie4v
zXiECpS4XOd2OEuf1n+nquwBLiZS/M2kpd8ZT0/hgWCQarE4nNbUGYGW+2ER
jssoGOXg4P2utVjwosVQVP0+306f08vIzGB6stRD7NPD7d3QVqXZ4/JY26I8
flLvsCPmawTFg4NSVcT90MX6rY0L7/0FfXZXaDC5zqvx5tru1kmDJ8Xj6I0J
G7lWByy5cReFj3GcKEdiREiUfQ3vG2BIr04u/YBOZ+vZDHRZEI+9yieri2lW
WPEFcfSzkIDgfelLMeJr+GvcT7Ljl1rfTrCzqurWKkFFh51QP1gDecsiywqc
Vv6X5+XIxgXH0WjX6XLXgziHMTEB7L+rsNYfsMMO070YxP8rkiLRGMXw4kZj
8pFPh5KyEPKzvLovEUSwGnHYrJBx31Q43N/T2d7afP3yqfObJM0qGxeOqAGu
CdJPi1yMR/FQrckOs7FgLpLNYjSaLQaDxZK1zOJwDcT/7Px9xTmI7WI8HVFC
BHraqJXbgYkPVqcVIrCtdteVMI/BZIHHSc57/kzSn0TfvN2LSn4MqzNBmndY
csEC+QcQqw0xV7zkOEjNIguz8cVt318Mlge/8Sd/8idf/8PXd+4/LLIC62O0
gClALDaH1Qp8Alc7zQoMJShyNHLjKPR73kD8/7t3Xz+PeN1WLesFZhzZbS6n
DXHZy5d4VpRJSuB48lrStQP9LvR9/e8hY1aqhoDW1DsgKZLN4byDi6KgUGjk
zVf98Sc+fR+xNPz0v/rf//Ddtz8d12e4rAbDYb4vAvkHrFZr2QzPq4Isvvnn
v/AbaNKhb5oYChtPcRD/rfM6rLAED6w5BWwACNVtuQ/CHCeL4sHP//4ffyIl
H32sCVKat/LuE6BfI3/RCGigHTJZUyubVwSIv1T3f/fdu2+JcYTNHyKukopN
jf8A1gA6LLsFG+Etu/FkmRUFSd1TqF949//++50j4o305JeTYPxf6hCjyQw2
vQUWPvMUXR5YJmRY84YmAovib/3yzzxPbt7/e9Gnja5u/ALkH9AhYPVpRe+s
SF59+xwuR2WBpf1ri9OPn3/1H3L3k4++hqVeX/zXb38L7r85vd2gN8BaOxaT
8/rYtrincOHd9ZW5532tt28uUi8uH0X/9e6PPz3kH3mkM+t1WkKsxVE7x6oK
E9x4NTU62H332rmzp1petNalWZKv32AJfvtbn3zyzb/4lzdPnyvSmSD1RUr1
EzHKBVbnJgZ7W5uuXqitPFl99t716owjYE7V69MXvvozP/5jX1bJ4M4NWPjW
lnmq0yfjmwtTQ90Pbl1qOH3qRFFxRfmla7VZSYf+QSkdxvBdP6rs8/hN8Fdr
Vt2jBSK89nK0v63pasOZmpMVhVk5hcUXmhuKvUeg39QqMEyY5OSowDYDfzTv
fPtMMLw8/az30e0rDXU1leX56d70nJJrj9vOpR+BBfT0MDiHk2pEwldOwPz0
zsmN8NrUcH/b3euX6s+cqizMycnLzq1q3fT1lX1OZJygWIpGBZwmGGKg4WSu
Gcmovv/i1aZvdnSwt/NB042GC42nKitrak6cPP/s4x9TW1OSPgHWU7N0EKWI
m3bgcngzy68OLGzsrEyNjgz1d9xvunXr1pXLV5ubr99oWfkXv/YrezVJ90A8
5+fIEMq8THU6nWl5lQ0Px9Z2Ar7FlxOjT3s7HrU9au/qefL02dDjp9u/9+6b
fziZZO06naNugiQw+qnT6XDmlp673T+7FUaDvqX5mRfPnw0NjoxOzCy8Wlt+
ter/TeCm/NO4U++/l1gqBjEsSL3w2BwpBVVXO54tbeEktrO+sjQ7vzD7cmFx
ZWMrgJEUSfzo7/76r/+b0Ywk6zeffEbhIXwq1e7KKDp9t39ixU+yRHB7Y3Vj
c23dt7kVJGk+EhEIDPvRn/iRr8rNSd4ChtJnJEFg0/ked25Zw4PhuZUQI7JY
KBBCA/5gGKcENRZRRTIYxoIMzR8sJhv/n96JkQS5UOZJLai63PlszhdkZQkM
CUESNMuLsf29iEgGMBSlgzgjvsaSjf+3XQmQOLFa6ckoOHmtd3R+00+rigii
ThDzyJH9t/vgHFyZfIkRFIHTXIwuSrJ+Y8U6ixNbdRnZ+VXXul+8XA8QakyW
BFGN7e29eRtlA6/Ge25dmmNJAqU4VTqV7B3gHBNxwn8xKzuv6lrHyOyrXVyA
lBcHB29eH0TE8MpU/+1ThalnwSiFQBymXE86/v+eRBLh2znZeZWXHgy8WPKF
6L23r9/s70cVNrA2+/TRpbIUu8PaRqFhlOCUtiTzAOp15wSaItvzsnMK6253
DC+s7+DqR68PojIT9r181t1Ul+uyIi5HzgIexgg6OpLsewBDGcZTdF9RfkZW
9c32Z3MrG34xFgF7cHdlov9+Y2WaDcQFdqelMQS2I6nOJtsL1+dsijT7vDwn
I7O84f7Q5MvlDUpg0J312ZHupjMFbrNWhtdhd49gYQyTfEl/QfcuqSw3X5OV
nl5af7/3+eTMAkoENl/NPG2/VpvnhOBDK2QiNNVsoCjKBhOqP/p54nyhcMJq
Q05aZsX5lvbHzydmtndWX00Ptl6qzHaYrVYwABoFg60jhGEUeTrZ+h1PFI7b
ulGQmVtx7ubD7qHnk8Dpn3raerkiwwYDYbMFNsGK6IuWMZSiryYb/2/vlDku
2FqSmVtZf/Ve55PhscXZqWed16uybSatKDWIx2FIbDa34yjJtyUZ/683t4gM
hw9UZuVWnrnc3NrzZGxxenSg6VSu0wTReRoLALwRQvQndghcGE36BrgpMBw1
djo7t7Luwq0H7U/GFycH2y4UebTCwxYTomEALSazyTXOUtxysgkw9Nd5luMn
zuTnl9WevwFW4Pj8WO+tqixYexQCU60QAgxB6Ijhjkhz/qrkhkF6YxPDsvx0
44n80lMN1++19z6bedpan+/SqD+0utAmDSJoRnQXBUZgGpO8AJFumqG5uavV
heWnGm/cbe8ZedF/+0Sa1WyzWbSyrJp20Air/rLI80py8f96Xe5LkiKYl1dO
lZbWXbre3N757Hl7YxHc+YhGgGExvxfE/JCXOIX/go/nP0BMt/zgYKUnL58o
OXnu8rXm1s7BJy11GYjFDmsjg/HXMNgaFC51jpck6eOk4v8Np5dDIYoJ9Zwt
L6k5f/VG872Oge6blW4zRN1C4D8CLbDRCDaB8QJD8rL4Oin490MxpN1aRUPA
v55sPFladqr+yq079zt62y6D4YdjrzHBwkVgNBnNutw1CcSpYqL4878Wc+7N
2TA4VFB6+WZVWUlF3fnLQH97b+v5PO0i/D0DCKKhU3XZMypLMZK035UcF8Ra
1btKEGEcx+iV65UVhSUnoP7me6099+uy4NW3xgcKGbnBNOhMZ5dVgWUoMbLf
lQweTGNOZ4DGQiGcIDYfVednZ+aUVp+9cOVG090HXfdOeq1g7yE27TLeAheA
rYtVRElgGCF60J0wCMvizr0wwwCPLoDS5HS1zeGwebNLqusawP6786CzudQJ
6zKDHQjx0GAbWI2FmMLJEs8xvPqmJ7HxN6RU3ep6sUPTZDhEEGv3s+GdF5Ka
XVhVd/HS1dt3H3ZdL7A77Va4AIEJtICWWAxlIeCSy8BOi8rbnoSyKE2lfT6c
ZhmaJsLBqduFkFsJqPFmF1XXXbh85dbd1kcXMoHDYzt8CIE30mbEVIJKggD6
zwvy29749evt6WdfSjzL0zSNE6/qnUazVuIesXiyimrB/F+52fLo0ZlUmA0B
9j50fmADEEthUIXoc14A+vvi1m+o7RgNShrgkSbxnVqdEVI8a7S37qyiqrMX
r1y9cefRo1Me0H+rVhb8kP/BainciQqiIHKioHwpbv16y+AbVRUkmRE4Cicn
nCb4xAQmH2hyZRefAP2/er2p4+EJB2Q/RjTqI0j+BHywop2oLEkKGIA95Xq8
3dfrHn8MQbQ8yvIUxoxbTRazDbYAnPDujOLquotXb96823m3wg5foa2QFQDe
hyI2B1K4G4WX4RIn7L0qiFM90D/wpYgC6ZRZgcKFOfshuh8BmizejKLqs403
7jS1dDSX2TWHFzLgwMmH/AdFAVVUolFJUNTnqXHrNzz+yl5EkCRcElhKWNTw
/4imCfHkltQ0XL59796DnjvFVsQOr+Eth2Xpoftd7I9KcgTql4bjzX8DP9ZC
+HfWfSsLWzTPCctus+bXA1tjtHpziqsbrjbde/Ro5GEx7PRhZXr4Ggyfw4oD
QP9eVOFlYShuB1Svu7g0Pz0x/WxoJixy/HIqtHBWyPRssnqzi2vPX7/b2tm7
1FEEzZ7GOQbnB7TR6SgJxmQV3oWo8mAC+pupcCAQ9C3tiqogLqVr1gWB829N
zSurbbx9v61zaK0tH9Lwg/EHSxBGHjaH21kR3FOje/sRUZGfxP0Ootd1fRSL
qAobpGOKGFnOtmn23WY1Ge1ZJdUXm1p7B5+Ob93PhmNis2qP8cASOZxuR1V4
PxLbA4tHlp7GnQKi17V9FIkoEcZPRmQlyp+xwAZYjHpzSvHZ6/efjM+tbvq2
yOflYNcBC3TIgA5fQl1p97gY6P5+VJQS0t/6JgKmkPOTiqQor19lWuw2V0pe
7a3eqeXNXZyiGZYhaerlpUyvQ3sIg+vA7nDl3vFLaiQai6kiLwwnMP/3X0sK
MH9+QhF5Wdmf737ydHxhPYgTFEmSGEFSQEiaRxdHB+5fO12aU1xZU3/tbvcU
quH/o9GIwHPD7vj3373XiipH2BAti1JEjamcwLEcSxEYjoaBH6iB73HQDIZm
SDS8vbq949eq1LAcI0hAf1TkuOfx5p9q+H9VlqJckJRFGQq82AVdJzACQ1Ho
CmIojhEEDr7AUIKE8H+SAeERC2aGl6MRRWTZ53HnAIH9twemcZ8L06osR8CK
knlRo0CgaKgKxEEszUIyAPAtjgOHjQgPXUlWVWC11dj+6/2ILI0n0P9GAiNp
JujbgYMM8f+BgD/g393Z2tr0bayvr6+urYN/NPz/yqvl5ZXlpcXF+fn5hbmZ
6empmempiZGBvnpT/P63Lb+4vPJEZXFJxcnqGijlZeVlJSXFJcVFBYX5ebl5
h5Kfk5edlQV/Zaanp6Wkpqa4XU47rMhgTlroo9E7wXJPGuYfRkL6Q1IAyHuj
/z4uZkLOZxJADMdyLMdyLMdyLMdyLMdyLMdyLB8iP/y444faAoP7iHKoP0j0
uqKFycveo4FRfJD+Gk5kJ84cQRrvh+qXFElaixPJknDorNdVbG2trC3Hl0KV
+LrV61y3m65dvp4b12cZMy81N7XcudtyKv7nB9u5qw3nGuLCcdhv7Eb39w+i
sf3ZePH/el3W2OLLyZnOOAD8yE3xQFVVWVGVhfjx/ydYWRYY7PIXXkP6snUl
snewL6tqZDl+/D/cfxxBBeq/6AdYOlgq1NW7RMmyshL//WstK/MchdNb57/g
J9Rus0SnwWi/wYvKRtzvL7oaPMLTJBHGty59ERYUU82qwLCtZsSQg8nSZvz4
b08nxXMMEQ6Gt258gWR+2z2OZ5S5NIvpNCOI2wng7103uweX/OHA7u5OS8oH
D4E+s4+RxUiX1XJPkGRfIvh3e3pG+e2Z4I7Pv3M//cPnIL2PkvawfPOgLKoJ
8Q/oLFars2I04Nv077R8zkPG97Lv6TOqSpXkrnNCJAH+ByhGg9GSP7S7teXf
ephrt1jMNofT4bTaXQ4IvzJbPm9Q9IaGcDQiD4/jBL+XGP7/8PMyB7b9YBnM
jQyPPB+fnJmeHp8YH38xOjIyPPSw7rveV/X6gkVFlfZieAhn2PZE8f9Qsnp3
/SE8jBIYzsqKpIBtwfKCIkdie9zLmvcZXvrP/jCV96KKrCgkhvGrOUlxYDIe
hwIYGgoGgqQgQfw/ikJGYnkPrLBgw3dOAmiFPaOyn4jIIo9jwkSSEOCZQ3gw
HAwFMSrKjPYtoSgBX77866xAi6GLVrgM02BX9Tqj3eVKrRxggO9CEWJPsqrA
pvQGUf+uP0hhF6zWzO4wSTJEb0HqfZQjpHBzlsdT8XKsCDTAnZsCFqi34ikt
ShxNX05a+h1yaSG8vRNA71nsblvGS4nkH8NUp4YQRwnM4pPhTUWdLEdqn9/J
9zrsjpTqp5gike1JK78EhjGzY8MXXK80Opwp9q4Ih9eYnIjZdJlgWE6QJJFX
1Im7PmntVqHHbnWmVT/Bpc4kgkDBFJublnfWy/Uud4qrf1/05dtcMBvgLsnz
LMtwvCgKJMNL6zfz3Ha7K72242Fy8f96naN3e/eRyeJ01Gyq0kKGw2W32xHH
ACsIPM9wYEuyFCMKSzcKQAOcKd5kA6D0utqN3UBHVXWzj6TVUbDO7A6bzVyw
Igqw2AsvShLPCZyw0pznchwB/A4sgVe7ITpERRScYG/Bt3a7zWY3Niki0Moy
DBXeJAiKk9au5R4F/BKcyC/92yStREUc3a2Gww+TXvVp925du3Kl8eypmuKq
jTBB8sLKtbQj0W8dCW/TDBPhMTxwyup0OLS8J5PNYrRYLLAC0RmUxRlOUCYK
jyRwRAaJbZxnIgqGo2cQh9UGU35hzQWrwwnfXIsmgUHkREnGB5Je+hOKvnpg
GyUxSqUo9JzZYbO+T4lx2hC7w2FztWMkWAeSLEjUySPQrzfmUL/yb3/1l39O
nFucq7G5YC6cHbHY7WAAbDantWKNJAWe4CRWClYfgX6ja/0vIf7+27987URN
Nsx4gb23Q4MPVoLD2w5zs1WSje59eewIyn/rDE7h3bc/BfKX7c50lwWW+7HC
6u+gAQ4wDFXrgiCyUeWr/+JXf2foSKbfNvsJJCD45N2o0YVYYNkbOAU2q82B
mBx5A8ArETnhy//nN9/9xdOkpT1/p37zae7Lb3/r3bffzerAjCNa72HiM1iI
3sq2XZriRI7++P97941/f+dIqCuNJYMrs/9c4x8A1g+cs9ALRSAYFNbBpilw
DlGh0L/5T7+5X3EE2qH+8e3Nnwf653VwwwH1YOytNnfxjecBjqUpzL/tmx/Y
+EmmI/1I7I+54pUf/RUN/2+GuV7QDbfZ8i499rESRwa2V6eHO6+drOlsLk2G
2/tdYvB2/bvf/f0/A+tvSmcyWbVsLzviaV0FVgfdWXv5rLepviLH5sjKtCfL
7/ub+lOkQ/6NTx/rYKFVO7C6Vlfdmshg/ldjPU0N1YVpdrNWDedICGgMTvWd
Jv/xUlqOx4KAJejKrB8nie3FkdartYUZHpvJqIfVocyWI+m/4d4v/PYf/Mff
/+0feTL49JrNYnOmll6dxkHfH104WZTqtBgNsCyc2aDTJyPr/XPEey8oMSRO
czjRn2q1Z9Q8nMP90923TxdlAO16LUsInMQgDDiS9e95uAM2OEqJEon3eG3p
9V0Lga2JRxeq8r02s/F9ETqgHwzVUfCP2CsmWZrFSU5SOOZxas7FJ+uBjWf3
zpVke6xmk0GrAgWhL1B30nKv/lr0hTfXaIwiCEWhNqYullx47MN8zx/Ul2V6
EBMcfKNWf9Boho6vOfkOqOnsUJgL4zgV7qjNyypq7FhEt188uFCZn+G2W0yG
wzJgCDgWQWDktCBJX4GmS68oMhgiwk2pLm/ptc4pf2ip5+apksLsNI/TcliC
S4MAObJP3znvTfoAmBo38XAwQM+X52aWXOqa2sS2Jjpvnq+uKMhK99otFlh7
zO1J9bgzz736BwfDST8CjCdXqTAWpF6W5eaevvvUh6GrY733rl+qOVGcm5mW
4klNz8wtKquqratv+8mv/eFvzyXdBc0ao3A8SKxU55Y0dkyGuODS2OOOltsX
6qpLysoKi8orT5693Nw+9Hxs7ueBkfyd88lGP3sGgf4QtnKuuPpWzwIhoq9m
R/ra7926fO5849mzDZeuNLcPzmyEsFDgS1//4//wu2tpSQZfWltpAkfDqy1n
6x8Or7Myvjo/9Xyg4+G9B4+ab7Q86n4ysbAZIHiBCAW/9I/efjmWlMun7xDD
hRBJYPhmZ+PlrsltXsS2VxdmRh93t/d0t/UMj8+u7oYwkubZ0G4YFRlubzvJ
+H990SKFY1iw6+LN/sldSSBDvpWl6bGB3ifDE7PLG1tBEsTgID4LB0kSOGNR
Mtn4/5Q+nCBQdLjpXs+sX5BpbNe3+mp69Nn4wvr2bhCnWYHnyO35TYqiSYpR
hGQHIaYzPgZiYe60dM/u8qKIY8Gt9aX5ubXN3XAYxD0CxwZfdl+9u0uSBJgI
6XKyd6D3Kc+Q7NK9lp7xbVYUORL1+3zrvl1IPsHKgkD6nt6syPK0URiGk6z0
MMn4f53hGsdQ3FZba+dTHyXJMkeEAoEABMZRIPbhQi9b6/Kcdlv2KyKM4ow6
mPQrmDIMLOzAQOfD3lVaUCMSA0GBkP6CBzO/NnKzPNVhszvNjSiKkZQ8k2wW
KH2WT2V57Fn7o975kKDGFJ6lCAYsN5alQ/PdDTkuGA847O5hLESS4lpWkvXr
vItRgWem2h/1vfRLaiyiiDzMuGdZanfm0dkMOwjIbSAgNVVvgAXJBkqTDb/2
jMdAiLnW9/DxfFCKRGIxhQVRJ88Rmy8ensrQeAitNlgYtRNFcRpPNv5f7x6K
iDy3M9L1dMHPqtG9qMQKAseRvtH7NZlW5P2NiMVqKFohcIq+nmz9jm5JFFl8
qgfoZ+QIBDkIvMDuTDyoyXBoMCgEUuJZEXMb0M93JJkFy2BtBwoFZq5vcGGH
4BUVVsfkOXS242yOU4PnaUWhLcD7qgpQpDiWZPy/3tYO9PHC+pPBha0Qq0iR
qCpw9Eb/pUI3BJ+CoMwEOfEQi8k1xdJisvH/enefzEuKtD32dGY9wMhyRFUl
PjTRciLlEH8OcdhWCEJFdC0iKQSqklxAIn1MhJftuwvPpzeCjASroyrMSvfF
HLtFY+P8DAcNJqBRYnj2UnLjEEP5Ghh+XvCvvJjdxGkhqkYjEvqiqdyjAeMg
DtysDYTFarwi8kKkO7kWELlN0hzDi7vL0y99QH9Eiars9sC5TDuiIeCBeqvW
ezAOrbwkqPzZpG6A/Cka51iW25qZWNrEaEEG008utJS6NPSXRsaq1UgGYZh3
mhMl8aO7ybwIc3diOMFSNL76YnJ1V2Neltjws4vZNovDBosCw/LvWo1gi+E8
RQtSUvH/5vyeII6TDMX6pp/NbOziYCJkgdrtq03VIIiQ+QKG3yAKQgzZKzJw
AMTX3UnJIdPr9EjpvUUC4r1YZndubGTWF8DhmwdP+9rLnRZoekDvQfxnNINY
VJc9qbAUiNP3u+Os4PG3xHH6iQ/DQkA/hfumxh6PzG34MZoDQi025zoscPFp
0S+kQNBZzq8oEP8vyPtdCcehkGY/vTtAo4EAipPBmcGeB/c6Rxcg0xnDMDw1
2Zh+iH/XGBjMRsRi76YlXquarhwk3n+93pT/jMZCYT9KkTO36mqq6651PFvc
hsV+aYZDh0+l2m2H6uHus1h0BZhEwycxmpXf9CbIP2D0lNTdnaNIyH6Av7qT
4XSm5Vfd6hxe2AT6aZrlAr0VKbDaLCSAMWtLUFccglA8jmM48U1fIjdReoPn
5pQvAGsNh4M74zcKEavdlpZffav76cIm2Avwwtf3oMDpgLkIsCw45D8xGUpR
CZYK5sHsHPQn0H8DkveE5ygK+JdhdOGsx4I4nXa7t6Dmdtezpa0QiZEcw6zc
znY47RD8C9cfNAGmIlSF3jBE7h88jt/8uCuvzIk8BYst4+jOad0h4bfdk1d1
s+MZ6D+MMWhm4XI6vAV/33ej2Ww1lYaiAuSf4Djh9eN4x19vaNrERZZcGXtF
0Dg15TIdUlvZPLlVN7ueg+OfAFEeR03Ve+E1ODR+Jo0BwGauxiIgFAEBEC/s
9cS7/vW6/teSwOKjD0YJBufHbSYb1A9869yam12jS1thHFbhxsZOuewaAQa8
+QR+h9WOnKNkEQThtMiJ6q34EwD73kjgY148GqM4Sp5zGICJswMny51be7t7
dHkbh+lRXHio0gH5T8xw6CEdNGK3NlCSKFEoLQmScDFO9UB/75cUWSDG28Zo
iZYWHQYrpFu2Iq7c2ls946/8ODDvHBd+UmazwdMPlj83WzQuhAbgGEkExgD9
XH38+NfeL8cUhXrxcISSOXHRZYTkE2Ck3TmnbvdA6kUB5geGB0sg/7NFs34a
DN5mu8Apskii0AhyZ+LX3/2VfTnKPGsZJMB0LqVY7Bato+6c6tu9E6t+EviB
IoM+LtK4RzTmEQ0A7rQ1sBFZxIKUJMjM2fj1d34cVVVy+FYfpsrqUpoNUitY
4fxXN/dPrQVpWRUlDu3JBf4u5F1ATNpDmMNlb+RUVUQDpCgodAL6219HIgox
dLMHmJPIYgaMqhw2m81bdKFzfMlPi9FIVBbDHXmQAAMOPBgA+CLmsl8VohEZ
91Nw/s/Fr7/tbSSqkCNNfeEImIcaE6R/QJDUyttDi35cEOVIBAwAO1JhR2wO
q1YRxu5wOR3OzOFILKrgIRLoZ+K+BNTrHr5RFYkcbuoNKUrk7Vym1eHJKGns
fbkDDl4Q9UFQOs+LxHBVGjx/HHARgqlwF3VQSiQq4SFCAtYzgfX/4EBVZPxp
U19QFiPRN/P9Q2NzGxhFUwRGwJNPkGRg4QV2c/Lxw+tnThSWVZ1quHqnd4kR
BBl45X4CDD+ZQP/vHoDojhhu6d2VxIgai3IsQ4LDCMXQECxID7wfhiaBmWXg
N/0bq5s7AYziwMHLAr8QrD+KF3jyQgL69xVZpofvdu+Iogy2AENC/D/QFYZX
LhRQTFI4OIRwjQdA+wo2i+VoXhB5DKx/niUvxq//zp4S2WNGWvoDsqLh/zlI
agPfWWEMAsJuEIpzPAxHOV77K/xShPh/BTSXCDMRRWYSmP8L4UCY2O693DIf
CIM+Y4HtLQj9X19ZWV5dAb+trK6sLi0uLiwuzM+9fPlyfn52ZnpycnJqfGxs
7PlIf/fAYH/3/QTyP5GcguKKsizElllYUlZRXl5WWFhUWFCQm5OTlZmVmZmZ
lZOVAf7IzMhIS01NS0vLSE3xeD0eD3BSwH5EtHewROUwejh82DMZIPZfK4mn
/+v/9gN+PnHlR1FI5ViO5ViO5ViO5ViO5ViO5ViO5b8r+XtNfKbXpd1rzPih
wf8h/pmnZy4mt4LqF9JfzojCzr04gTxJwP+fYGSaWz2iSpofoL8U57BQ8EJc
P23Ou3L/7v0H9++fjv/6vyhM4wHsfjwfkNKOH7w9eBON7k3Hm38A5p+SOZoe
tXzx6w/7o8ieHFVlWVbmrXHj7ytpRRRI7OIXXkSG6t1odP/1vihLyqoz7vu3
alThBYoK1H/BRF69vYdn0aG+OUIRI+txJ8Hqy1cUkWVwdve6Q6/TGw0fPAy1
OyzWbTTZb4qK6oubf1SX0SPKNEsRVKAr3+10umyWD3rKM1Uv8xz70GQ1FJCq
nAD+23ya3uM5yECAvrhQmp3ptlmRH5zNoi+cFxlOeu6wms/worybwP2nd5Il
OYogQ7vowv1Txamw0uYP/qmcflyQVPK02XpPUqM7Ceg31HQPTG+G0PBOCF1p
P1PgddkRww+8jbTk9ZGKtD9idQxJkdhWIvh31+lzF1tGdzG/PxBcaqnKTfPa
vnMvfA/zbs7vptSDOVuJTxSj/kRSgE1FleUnzvdtBXf8u/65h5frqkvyM1Jc
dofHBcTqsDmsf+vD4V/1ljtS9IDqmiEo7nUgIfx/Sn5OTnFV22YwFAhjO+vL
y8uLi3NTk+NT4xOjz4afPhnuvpj9XQQ9hvrgXlR5q4bDJCv2OBLiX/CmuFPS
Ctu2whgBSY8xEnKiSGBXUBQjikp0T1xr+qzi+2c/VDTPiRD/j4cJ3leQWP6X
1Q4pv7NaN/EwUB8MYJQkKzLtD6AhnMKlmCiIbPd7F8Fk0VqRcm9ig1ZUSaTD
lDSTaP6f1itj6t1tPIQG0SBG73PPexZDKA5rvu2u0DxFc32pkAw4704VTHbM
aWpte77FyqLMEpTcnyQcmO3SMkb4A4EQidVbkJxejCIZoi/f2xzicI4frclI
r13iR07aDTVjT+7daR3Z4mWY/7JTlywH0pjfuoFubgXD9/VmB5KxIJHskMNs
MdUFRFqUscXZXV7hx6rOb2GzvS23Wp77WU4SdxqTyB5lKBre3AiuVuhtDpe9
JyrSpxFgkQ0NJEz14EWBE2V+foOngzM9t6+1jm4zAnE9ieqBqbE9WtleLzfY
nW5b/1vZXwTaYbWZ7nCCwHPwIY7leZLhmMBs163bbWObgQfJrUGt13kGNgOt
RrPddjp0oK5kOd1Oh93q7OdlURRhLgjDURTPkqG5ruamtp5LycbA63WnfX5/
e1XNnR2ej465HQ5wKFtN2SsRGXgKHC9JUREjCZrDZzruXMpKcuYp1J/5yo9y
IUKUCJJvdnrcbjgDhisiifr9O9uba4vPNzGc4fnwZHtusrVDcU0HgxQpSzxJ
BE65vB4HTPTVO+vLS0tKivNy8tIrdhiaBpYxeDT4d9vTUIinQQcZKnTaCdRb
YdqNHqYcwpJbtrRekaVYMBHCi7j9zu8nlv5wgGVh3g2L19vh5BthxpvdYYW8
OHZPS5gWaBasRmUn2aU3NTHcXfJhOCHKIk+cRyD7AUy9sUEiDpvDbT+xTmIC
rMHOiJsFR/Jqan8gffw6CtY5jZ5D7DDpByaF2J2QicPu7SQJUpDABAjRJOcd
H4rBfOYf/+ev/9HXfufgxfDwCa3mF2KDdSdcblgBqHZd5HkxIv34L/72b97Q
H8HVgdG99cmnn376ybtfvVFZmWa2IGat3CGcfLAQc4ZZTpBF9Z/8yTff/cGp
o8DfG52hQ/6Bv+hOTYH13rR8M60OvdlW3osKMONZ/GfvPvlGLDHap++l3778
F3/+37716afvxswpTrsZVpvSMm8RV2nzLMrAWgy43/9vf0O9eyTl542OiT/9
0z/9Sw1/nupxOYD5scGaS67i27NhmAxL7C4OtZx9NNBQciTUlUbP5J/+2Z9B
/TM6l8frdMB0LMSRe3lklxU4Ymdh+O75qhyXMzsn9SjgxzpT5vJ//bM//xZY
gJM6m9vjdrmdVofDdX8DpVhiY/Rh48nsVLfFYHK4jwT+rjPkUJ98EyzAT77d
pbM4PV6Xywn2Xs0Ky4SXh25W56W5bbBGBNinR3NxaUhTwNi/+/Td1xrdqele
r9ft8eY0zhL4Sv+VChCfHgHm+m/qR57+31//xjf+9P/5ydb2R+fSUrze9BMP
V0LrQ9dL0+1HrVyn3Yl2i//oH/7EV/gQis2eyUwrbBje2plqPpHpTLqz8bn6
U28N+WHtFU5gWexJZeXdl+GNwcv5TtvfyT2tIfvGJstxHAkcAE4MDF5uXw6v
95zLdvyddF6nc96YJVmaZUhWkhQu8PjxBrbVW5f+OZ0/kot7Q+44zgLPi6Wl
CBnaWJjfDO0O12c6Ps/UHIn+7AWe5QgcmNmp+3f6Xu6Gw4tXcp1/ZwS5es+w
SDF4CMdn7p6/M4dh4dBApfvzC+wCdzDpS1JvbhFQAgtRu8+6746HaZzYupHj
tn1e/012jzv5/AeGMySFESgdfNHTt4kzDDV7NsNpQ/7W9ajBZDS6Kx91X/Am
+wwy5G9wBE0QobmhCYzgeHywKtNlt9m+Q48RsbsyslIr13/99/6P6ZRkj4B7
UiBoHA+szCwTDCOEu6pyPBB7gZhMMPsfsVpd6QWnbzxsH/yJd+/e/UlXsreh
uUOgKBQLYxtbOMUIu+11RZmpbicsugZzn50pOeX1d4Y2cCyofu0bf/AH0aIk
U1DoLzEshRMYFQxA6IWv5/LJouxUj9sJHAF3WmZe5fl7w6s4z1NB/5ufOoi9
Ho2ffPbz9Z8MchSIcMkQRuMMufKk6WxlYU6q15uSkpVXUt3QPLQSphmOJYIo
xtGsShQn2RDlvuIomsAJHCcpGlsefnip7kRRTlp6VsGJcxdvd88EGZ6FdeFQ
GIUzslCTZP3OQYbhGLALMYwhsNXnXc2XzpQXFRSeqL96r+MZGHqOZ0hiazmE
kThNC8qVJOs3XApCoj8KBQNAhlcmn7TdvniqpubUlXu9w7M7IDDmWMo/0VLb
TxEEQfHRR8k+CNKGweriSBR8PhX2LYz2Prx+4fL1ls6R2dUABQafxlc6qlJt
uaskjoMFMJTsk1l/ipSAAwBzzcnw9tLU0977rQ86no4vbIeARWJA56/mOGxO
5GoIx0hSSj7+P20rKnIkScB09+Dqq8mhgccDo3Oru7AaH0n6+k+lgXDUaXUN
YiGSEleTjv93vYxxPMzDpykmvLOxODs/PbHkA73FcSy81lbudgBLZLOaTvgw
nOLD5UlWr3c83wc2iKJAA1gC3dna9i0u+8M4gYItsfygxKURAACLjHSROMGS
Sbt//Uy/60mE42kaFn6kaTy8u7OxHQS7AQfewMrDIq0+LgjJLIixaJ0iKTbu
6rPfSxyPZR44oAIEX3BY0B/0ozhK0jgaXm8FvYe3MVohYpOpgyZIvjPZXoBr
UBQhAFyjOsGgnSEhBoQI+waqICUfYgK/2SAbZnWIYcTRJOP/denjgiRCuAXL
02QYknywBM1S6M6z+hRYHxQikRCtGKx7RmCkldwkUwCVrgisKIiyBMEo4BQA
y5BmGMK/cDUNzr3F9h7/b7bqHsq0FDqZ3AVovhBgWUWWBJ4CFgiqB5PBkqiv
pwySoVrMpsMq4GaTVXdJYUS2Mbn6nR00x0PKCZ7CSRwWwoQVMcnA9IU00HNI
hopohbBNZqvhGlipkYGkJrDoCxZA5AUBNwwsBErTLMvJPIv5Ogsh/MoEum/W
GmAyI0i7pEgxOW782ecJcpME2jlw0LDgGIboV44RRCY8Xu+FEFDIAYYg7znQ
PFM8mKiPk4r/L1sVgEaCEmEhVgh/ZTielajdriInpP6ACFgjLMNrMln1pwlO
ksQ3bcnrv6V2kQHhJwPMD3Q0NBsMhkKgl6+l2CEA0mI0GQ0IrISNGFKXYiQj
SUnC/wOxnezaoWGtWZakWZETaHAKMAwDAnJmsgbWn9Z4D+AMGA16Xc5EhCMp
SX7dnRQmQr37wqifJDCahZBjihVZgaEYDQQncFhvnsY9otE+GI0Wsw5pWFU4
jqYEKRn4e/j6N4SD0wYlWeBhMWgQFwSWpYEJYIDLxWze9Ni0TY/AZwiDBXH0
srBuO1ieSem/3lY2IVIoilECu7U0Pzm9igkCwzM0TbHA+nCvzrkg7wuYfStE
nyOGPEyCuxT8D/Lb3sT0600ZJxpb5zmaQMMkudRSWlbdOLBKCQongHVIUcAc
MBMQAW2B2GszrIJu0BdjEi8JHMTfv+5NiILKmNu+HgjAMw5Dd8auZtttjuz6
/nUGDD9MTWHB8hOpwTwIi4bTbzIBE2DUlRGKAI9JsD33E8H/6/S5LySWwsAB
j6FzdcDGuFyuzLP9m1rNYRrsBYbiJawtwwaxp8DmahyEZn0JqSqKKDJgf+4N
JKDfUvBMZHaXtlACR7dqdFZIeOvIrO/bYCHpEw1tASOKAbD8YP/B3BshBhzR
1zBRWWEgPYKw/zj+9Z92ZYIh5xvyL66wBDvrtMCHHrsj/Xz/BgOJJ1iGE8Dq
47fqndDlAvqNcAEgVvNtWZX9Q30LLM9GB+P3gG4HgJanXiRlFJykLyDGGlJb
ZdUPbALlNDDBcBey7Go1fAeEOx9yf5oQm71PkdTNjrtjgsBH++JlYtXrevZE
XhhLtWWMxTh5xm6wQnQ5GP/HWyC4BAc/A0kmGHK6FHLPmEyGQ/4Xi93+RJFV
f8f9CU4U93rinX+g/63MS2OpSNb4Pq8sOkwWyC1lA+O/RdMc5D4RBFGg8LFC
SPsE1p0R8kFDjoInCq/421omeZFXO+Lmf9D1fEkV1WepSMrQviS/8oAzFT72
ZTQ83gHeJzx4RUnmKWw4XyN+0kw/tMM250BUVLZbm57zEh9tj/f80eu630ZE
9Wkq4uqOKfKSB5ysNuDgp9X3+1hILyJIEAFMo09y4DucRaPeAA4oYnMPxCRp
o+VKHyWJe53x43+7PlKUyBOPxdkWiUUWUyC3lM1iyzgH9z9YepwEBkBk0O4s
u0b7pJFfgDXqcD0G22+9+WI3rkp73Qng/99GopHBFIvzUUSNLaQjsPqKzZF/
axIDG4/jwOpTZIFFu3Js9vdOp0nbIZ7Bvai6fq+xC1fF/QT0t30UUdXBVMT5
SInskxVGSC5lL7ozE6BhuglH8xIEYFMTFQh8BoMmUOMnQYrXD6KR9ZarXbgi
RLvj036I/1ckZTAFcTyUopGPJ9LtrvSTd8d3cIIB2jmw8wURHMcs2l/mBL4n
AtY/GASr+8QLRVWVtebL3WGJk7vi1//gtSpFhryI666oRl9/vP5sdG4bhP3A
rjIkjL+BCWChjWc2Bu9fqi0pLKs6c/n6vYENYJkkaenWxa6gxEmJ6H8bjcRG
Uq3OFlHd23tzILE0vPfAMRB3QGGADYTXXQwYDDy45dsNhGE8BG2jICzevNAR
AvYrAf0t+6oSfeq1Ou7ySvRgPwbifvj4Q8KwiwAxL01SmhcK4i/4HRARYDj4
PgtOZYFdun6hIyixYnsC+t/s7e89Bf2/J0b2X++/VjhRBgsfdFCEuUbAA5Ai
ogSiEc0QiDAw5WRJicK8Z+nVrYZuIqYqD+Jf/1coEOH0eAyWK7sgyMfw8M5O
YHdry7e+sbWxtg7+WV3bWF1ZfrW8sry0AGT+5ez0zMzUlAb/by7OPTfwdKC7
NH791tzi8ppCIwh7MgtKSkvLy4sKiwvzCnKzc/NysnPywW9ZOTmZGdlZmWlp
8A42xet1uzwuh8YHY4Ko/cRjj8+CJ71eb4Ap0Pq/gv4b4JdHC1D5q6Pjc9T8
PYbGHMuxHMuxHMuxHMuxHMuxHMv/ePL3Gf4P4jv7yawfHvwf4s9J39UjKaP2
gfrLKTXQFG8J1STg/ytYiVu7cTSFRD9Ef7kYFdjxorh+2FZ86fa12023m6ri
x/+XsqoohePhr9dn9ROxvdj+XmxvxhQ3/r6MlniB74wjh9A9tB+LRhU1oqpL
trj1l6MCyzKhS+bPvvGhH2S8SCnR16/3lUg0th4/DitnPiIINOO/nWawIHZv
enqq44OSevXuZwJLPB9cZqPq3mb8KZD2NlXkGJoODV+srKipv3DudFmO9wMS
2vR1YY4ZMJucTXIksp0St37jOVZhOXjBu/28o6Ort7Plcl3pD26AoXJNYOl7
ekRfQEUi/viBQMb88B7QzzAUjfsWJsdHuh/dPl/i+QEfZzixKnMC32W2ms8I
spqAfp134Y0g8xxHkRQZWpsf7elrv34y4wdkNaf20YIgyXMpFutDJRrZiV+/
3toms5zMwFQXigj65p4/7W06U/AD+Diym+coWZKoMwbXCJj/RPgPDOf9oUAY
vrITOI3tri5MjnReP/lZQo/+ry5j/4Y4ippmCSmi3tCVrQlSLBH9+tKFLd/m
LkYSBEHi4a2NlcXZ4Yf/P3tvAhxHsp6JdfVR1VXdjfu+74MgCZ4gCQIgSOIi
ARIECJC4eOEgQOIicd/ou+67qrsBcmbe09Nqtbvh55VshaQNH7Ii1ispVvbG
StbKqyMc6/Cx3lBIEeuwFZa148wCh8OZITnzuht86xD+mZgBCaC/yqzMP//M
/L/vP5vpIFzOg9qnhP3bt/tmi6vo6pqmRSavPic56dVuLPz/pKGF6ZmFNR9F
UgGS9Ps8br/PuzM3+Xhi7MmjkaHBwQcDjd+udIpY8XZWV/XXIhlkJeVhLDxU
W/3I/fsPnszuwmsNKuD1+YMML9Iw/9GQX1a0sLT74G2NJYvdZjEhlhPukCip
YSlIcuJ2cUwZsFnNVxub22482ghQVCDg83l8NC9JArXrDfp8ZEDQRYFXlk8c
TImUcxVJqNVUs8rCCtSaTNKcOhNbAXq0oKSgsKy89u4GQwZB+31eJsSN9y94
A0GKpPntBVZiGHHzIgwSckcX2itSrDVLvp2grEiSwjKs0PNtgYif0awOSG8k
sppegBfg93o9LF2H2bL6KaiFPVzgbFhnA6zs7juWf3ZOZhZulNetU7vbXlpS
VIXjgkPxSj9ECzvmqcD2rpfsMtlwS9aSLsoPXRYzUrTM08BJuje8LCNyL0d2
edK3s+NhFVWS6YGs+KBDs6Zdntve8a5XIWDaEQP7CnPS5sJspmovz3AwI47h
OZkJsDRL+rbdAUaVhYnc+O0g4AdlD61vr1ZaHYQDH/5C2S4gnDiGmS/DVFSW
YxmehTlJYMGk/O7dICe8qI5r+A7akjm65em2o3a0xvtKX86GJc8xDLvFy4Ig
sLAYiyTzLLyA9Hm8/pkTcU8+N13Ycvt6qoob12UxPJGEOxwODLMlTemaosiS
LCth2W2kpFE+30xF/AlIpsxFT0AIeHiZYdVOwul04KjVZqrZfvF8cnz04YOh
wZYxGvoqnoxSN+t78B3Pgn7Q17xAc4GTBKy7YbVZLfaSlKTEBBcO3sdJt0BS
LCeIizHpvnzI0EeUH2ZegUfYrXQmYthB2RHU4MHbceLEisLTAJ5X5g6H/z8A
8CWB5QUetN+JWS1WC2qzgQlh5GYVz3GMzNKSzMqz8U68NszcE/CzosixIk+d
tuJWsxmW3cFxB+SguxJ7WQp0fhD4AroVO4T2I6aL8z4eeBtR5YKnzPaDfGMc
t0P6UwJRuyUwNKdxP/nH//RXSg+j+8EEeLj/S7/w+b5A+nynEBwmPMPCEw4n
nIlZj8Br4QTl1/6P//PL/zb9UOQXzGXyH/zp//D7/yz8fOp5NcwHM5LN7dAR
2bNu+xkWbJiE3//yy79YiVZ27eP42L1/++WXX/7t3/zm3etX8xAMVjwxxj6G
ZdU92IV1ETguEPmz33h5/FBOTiyOjYP653/WWVqVZoGpfgdlX9LqHm0Ewbtn
/UsPb5y90VR0KPR/kyXRc4D/7zpSCpKh6gEsd2dPOzO0QYsC41l93HK6INmG
On6ATllU+MnBA/y/7HDkZrggzQWOwOsrfkagNp+0ncpLQA3kQzq4sySTB/j/
S1tacb7LSeBgCuBVcywVWOi/VJSCH06z35o58c37//32mjOlriTwBFhq3YTP
/6LndM4noKAjxO1f//O/+rf/27/+ydC9wXPA6zhSqrtfepfuns4gDrnpB/im
ysd7v/bTf/QTesPrfnyyMDO3eWJn98nF3DipXH0vfGrL4KbMsSDWUwTmRW9H
34JvrbvU9SnaDvELuj3BIFh+OU5QBd47O7vtf3El+9M0HsIPb8siwxgCQGCN
Dazt+mcvpHwy/rm1bkdQZJIE8bbAKQrj9QTWm1LiXmX+g4adDGiyRAUFmP0s
8JQ/GBjK/WStB+3P2wiByC/ACGzA7SUZmtw8+yE9xsOQLkYSRzWwzwiQHLmz
sctJFDX5sQuC+D+ApV2hYMUljvZuU7LMUrc+qjIT9wewnOZYloflnty7vCpy
u2c/PPHReFfeht63bFdkRHgc5vVLqijO5n6o+81pp5pOJMQ7BknOn5N5nqFg
4inM9RxIfh+C1ZGUkHPrl37vt7fz4uwXnekDCpR+pOBr4Ljg1cTvTH7E7sqs
bmy5yf2/YJX0xbkHrI4mSeIZhhY4yLtaOZ38LekRBEvKrb76cMPvZv/FX/3p
H/3jy3EeBOaqgAwFUCDni6EfV6U53iV3WFBnZlXD0Cory0Gf+g/3BHU73iJk
2csKTPyGJDTac6skK8H+1QOYUbsjpeBs1zQpi6IYJEmW51W1Ns74ieMKL/Jw
+8vxy9dKs5McuPEAFjvhTMosv3R/VdQlgeM5sA2TeVm/Emf9BXu3zMG6qjRw
AmP15bnpCUbZYZvTlZKRX9M8sqNpksDsPl8GXcTxYvTkhw89wHlIPaAphuZ3
7l6oKMxOS4DSdwnJWQXlZ1ofehVZYrzzHWXHNmiS4fnw43jHhInDvATT0Glm
+VZddVF+TqorISE5M6/0eF37qE8FO9+th6cScKw5EAxyjDYf99vLgl14xARW
gdmuy6fKinMzU9PSc0sqT1+++dQDYhL/yp1CAidw1wMyyDLyRtxVALGZEM/R
FBucut189nhZcUFRfkHFiXNXuicDksD6Zq5n4QRU5axcJ2lGCMSb/2/Cxvbh
Eij6x3uuXjxbXXXyWFnlqYvXe577JZF2T19OhbUowb9EH0XRHHMq3viOsRAH
nI/iHeu53ni+9vjJmtqz9dfvPg+IHON53pBohxIAMP29ZA2SU5vjG4cgpvRn
KqQVyp6nfR1XL5w9c+7UxStt/c/9ogThkzD48u3GpvgumKVCT7Tssw8YvNyT
eFGW3BN9N1svXWhouHz1Zt/EriBygRdX03ACdr7dbrOhyHE/x4lP4rwRN1/Y
ZWVRUsSdp303rl+6cKn+2o2ex+uCzPhXunPthh6foQGA2pLmJE5ayopv+/Hb
JA01FqXt8d72qw3NzVfae0ZeMgpHbwxUOOwoeAKb3eDh45Y7GiN543sGbcp4
yrOCpujyxqPu600tbc1t3fefbkka63l2KRGWAbZiqP2AiWW6EoL8/7i231y9
DrY+qhYS1h51Xa1vbbnW2f/wJRMSyeWevAPZBcgEg8Wg7ZZmXeBCI7FdAH3L
0FYW7LwkTWdeDnU1N7a2dNy5P7mjarzn6RknZCFaoCQoZnBhsTuqJoX0qOt/
vseQzElZlkVB1en5gZtXmlvbOu+Ct6+r9OqtDMxuHIYZPHDIhU16rqiy/KOb
ceT/o9dokQOBpxRiZu/faG5sbrt9f2JdiSjkZC28lkDhcTQsQgtev7mW5sA8
/fxOvNqPmOwXdjgWrH+cEGZmBjuuXGlq7Rmc9u6HxO3uHKj6gFltFjMUP7Bi
luS5MMsp8eP/I3hxn5eFR/scI4XY2cGO5qvN7XcfLPP7Ee7lOcgAh6MPgKNW
ixlJe6xLLIgE9/viwv83O04ObEO2NQiuQLNU6vn9m62t1zruju2E98Lko2I7
PAyGFdihIC9iO/1ClWSOltT9uzF7YHjRnnUvKFAkVHvgBEHUdPr5vVudHS0d
92bIvYi225ZkB6MPso8hB9lG3BV0WQT4nPrqbiz8869anzsm8XSQ5hQQ/IDH
UPXg9L3Omy0tXfcXhP2IvHyacByowVptNjOKFNBhSQE/yzDyqxj7H7GllZxq
mZNAzEkKom9p4unsOq3p3uf3brZfv941sqbuhcWpErvDYN/D2xiLxVxCh2VV
AfEIK726GxP/35zRubzrB69dIOngXOuxyrLTA6u0rrmn7oPuv97zZFPfC/HD
2bAANOwAC+RAm0rZPVVRFahGvn8vBnwESR/jZYkNsgJLL19Ow3GHo6R/jQ6p
O+P3brZeaet9CoafTnalQPURi9V4/RabqYzb0/WwDn6P3xuIpf/xPo1/+WCd
BCG/p9aEO50EUXR3kw3Jm6N9N9ubO/qn/WEw/BpcBFjyYfdbbHDpv6iEdGFu
cj0A8AdjaD/RREkPM835YworTDswHMQ2jsK721xYWX/c09lx7eYgcL66unTS
SUD5AXgbBvyfDX+gqVJfYU7dmsiHBqPfAiQ1rKvSJfBFU0hUnuJGYEeU9m/x
YWll5NaN9uu3HyyDcS4/L8MJuOZaoAi4FbMnL2qKcD05seCFKoSjxkdMjbuS
ojaBL5ojUug5YYOZCM7Sezt8hFsY6uzquH7n8aYqC8JTSMCHGuRQfwLF7akr
YBfWkpJUsqjwkaj1JxDz4CswixoB/pU9JTTnBO4FdzjLB7eZEDs/2NHe1tI7
vq3LLPsoG2rPwFXPCjUQ7enLusSB9pct6lzofrTvH0H6P1MUpQEWwg6pyosE
FMOdDqJ8aJcLMfNDN1rabtx96g2rHDmYAUWPDPkX1MBfCCvM1WRXyXxYDA1G
n4DZ94WqirB+eY0c1ucTrITd4SRKBzboMDM30HWjo7N3wheS2cBAusH7t8HL
KBREf2kvwyrZmOjIGdWkyGCU8JD//yNNlWH98BrhlTabDN6s3eEoG1yjteBs
f2dna+e9qUBIFry96Rgs0wHxQfNxPH0xopKXk4isEU3aG4gev+dHuqacB/FL
Nb8fnksDEYaLcJwa2+FCged329tbu+5PUxFR9vVlGYxfFMpfQC3y1IWQzlxO
JtKHNXlvKDZ8GfZ/FRd5HSyBV+z28vvrlKx6nt5t6ejoHJhlwmDT+7QUg8lg
OAo9hNOJVvl1nW1IdGYOK2I4hv7v/lxVDPwKJhL50VhmUmJ+y7wPhlWe8bsd
t7puDs6zIUmSfffyIf8fuiCbDcdLZzVZYy67nFlDshCKof2dn+uqBPFLyUj4
8882J8Y2WKg6xYvusTsdnZ0dg/NMCOrc8It3LlXl5xZW1py/1Nq3pQi8Ql1w
ODIBvh5D+29+FtYlGD+XBMPh/dcRWRE5mIvIczujPa3tNzr652lV5DmOl0Xa
s7685fbRrKDKsBxH8IKTyBgCoXoM468jomnSRfBFkT+k7++FBVGEaVdgNdp5
cudGZ1v73VlKFTkoPwBTkODBHMeD3oAnZL4LBJE5KItqfwz4r8Ih+aLR/sje
6/3XuiorBxx/32R/z51bnQMvxT1dhnR/XQVDBcxWWdNDYU1XdfI8Yc98GAmF
e6Pn3zfwjMCeA/MvewWeOLF0wOt1u3e33DsvB29eb2m90v5gZXdjfWV1fWVl
ZXlpYfHl/Nzc/Ozss6nJif5ssHpfnng0Uh09Pl5cXn0K5tGYM4vKysorq0uL
CgoLC3PzcjOTIMkfI5Iy83Ozs7KyMzPT09JSk1NSk5ISXS4HcAbGybTFGlPw
dfAUX5nZbPnO3wEIs/nwiCpvb5G+BfD+zNcjSYAjO7IjO7IjO7IjO7IjO7Ij
+/+t/Z3m/5tMaN7Pi3sODTEVuuejZo/HA7+Y0ufzo/712Pn/xSTPdMVVPv5n
wy+iJWG9JqocPsRRdrGxoaHpSmNF9MfPhQGJFR8lm372gwWk4Amjh8PhiB6a
/h668Efwi/wixzLX3uQYWgkn9kNvsrPn9kPhsKrqsrYYff3r7DVZYHlPa5rN
5korrr1w4UxltuMHSEoi9huKpH322Z4G+fcJUePjwypM9fGNXrl4tb3nweiT
B73Npwq+v7CjOWNe4v2jTzZlXdvfiZp/j5iuKEa1H9azND/3YmV9dXHu8d0r
Zd+bcY2cpzm+H0WTO3h1L3p8k6mGlaHOMMuLXMDrJwPuzYVnAw3Z3wdfsiQz
9DXEjuSRof0Y+NfmnF1dhMxKWNkYSt0GA1tLz3pqP94B5oo5TeTZZovdVitH
IjHgIwnP93lJhFq/vKxIIkfS/vUXDy5/VBLFXPICPLQk3URx+41QWN+JPgMP
Ifp/HNFUKLUPTRJZOri1NH79o5+YdndX0kRZe5yE4Y90PbSbGQP/v+nVZ2Ed
nvCDHmA5UWIp//psX8WBSzzg/3/jwxGT/Wzf5K6ka5GFTFPBuqztx4JvOSa8
3o+EVB6mu9IUK4GH8G+/6D2WQBAwzQYSD23vPAFispVdunpvakfR931X6icp
XnnljaX92euvNVXXFJ6HCb8k6H8oP+xbn3j8+MHQ/bv9A8MP209mfZ2ETRw7
W1vX0rMkyXpEpihaFPX5pBj0D5zDCgPmsiQyLMAPBKggSTM8ywdhDTSSZCUl
JAcXWtLehGppV9ounT5zaYiWRVnXGZoVVf/xWHLQrU3e3e0dt4+BxY7ogD8I
vAApahK57fN53D4fLwkMKzKPig2Q7OGZ/rb60z2kfKDMzghSZCm29K+yyeln
k8/nlz2w6AfpDwa8tMhODi26YeGhILc1R/EkSXOzF5KseMmUuPt8sP1uUIWy
+Lws8hK33RYbP4Wob2+51tJ268EKLDcU9FNejqy3Y1n3/FD2erzIeWaGDgQ5
fnuo7c4SI4m705NeSZRkSeAljdt+cCJW/SZHRlpqSmp2ad39VUYkPeAJbpus
uDVzXpbViRSz2ZQ8ypIMA1NiyQAlCz6SY4H3kWVe5lbvlsYt/dmaVHx51O3x
+TePI3bcifeHFfqczYHZTJmL8OYN6nJzRl1UlmWhGrbILg5Xx0H/2YggDySf
Xedntz3blQjhcOEDn8s7JTiBo5ip2m1IcsNqPAzPg3WChur8ys6jC3HmJiHI
sbmdwG2bFbOW7uypq1mQeYyi5gYK1kEA/S5KWliieKiHIAkzV+Ifulradz3+
22X5dS9lQX+WgBIEzDizd/EiaHsAGLn9eJ1nYOYzdTuGhf8DhgCX7glwHjcr
c5x+x2bke1qsSMbt642XL9SdOV17oqKPhUodJLsa98xviJ+0EHCDtQj6QLoW
c9oxyIC32lLeJB+iiV2MzDAUyYgTh8J/JyYZPwuV73luq5BwwYw/8AAw6xdW
5sCTeyhR4oCrZrSnxGHg448Y4G1YqIPvLiacqNXI93uD73I1UwwL4iSBpYTe
Q2HDovc5sOoIUGOCrEQdVgss9gqTTjDUkZBQsiyxYPIFlf1/+KrwUPj3aC9P
giYCh8dStRaY7WoF4x+3G2Unku7AstC89st/9D//3795GPIDwA1enHeTQYqC
cidnTRhMOYOpP4TDidsTL+3A4gCs/K+//PKvlw7nMhgpHg/9+LM9nfLT9DkE
Fp2xYRgUYMATyztWWaiCwvl/8y9+xx+Vat0PsGr/b/zX/+V/8U/EpeW10wh0
PmAK2K02R1nXrJukwTqw+7yndbItIw5Jp+8xBG387Lf/+e/+3u/+wtSTiZNm
mG+Kgh6wF7bMkhxF0t75wSulKRh6WLKNCH7jJ7/7x3/0h//ip4/uDtbYjIwz
MP3OPffwAuN9OXStKuWA8XZY+Qj2rl/8nT/9kz/+g195eOd+LWa3wXprlsxx
lqI2x9qPpdsPfurQzu0Q7Pqr3/6DP/jv//k/GB16dAEOPZsZr763S64+uJzv
QEyHfmRoPcP95u/+zj/9b17Pzc3VWXActWU1T7k3RuqzjSD8sA8sEVPl5N6v
/Cc//RHj8dMDxelEUu3Q2u50c+6nIWEjJmfbyKbI8RQpyEpw/N61thdBT38F
bvpEuSeZN0H8wYEAjxNUEGB6t9aozdb0T4VuLh126wprbMkFRQDdECRf1BGf
Ch7B20lZBssriPVAnCkyHBNcjneM+TGztcgy2AJTPKz6xcs0S3n6PuUJteUE
DfY1LANVbjhBYv3BbUiv+2RH1Ej6mioYqX5gd6fIoo+cSfikdxTJU5rAwcpz
IN6XedZHd3/SOxJnxYgK9jcsx4swExI4/fMf7PxYTt4/ZNmNgxIwEGRAFgzY
5ezkmj6U34cY1X/ia+mdwzQs+8jBf3iBlSZt71nrDq8qkOv2410VTEAWhp+w
F1pM3+nor77Gq1sbMyxxpt83P16G6aew7CPY7HJGce2DQ7iv/nvwDERCasdP
/8c/+c9aifh2RFX/U7C9Mbj3JE0JEwa309ifv9PliKOo6c49719++eWXv1Ec
Z/Z7452gCNYejoLl5cnGr5Iz3/0Ze96l4R2JJX/1z//Zr/+j0bS44puyz6zB
2tMcGQCbgBcFX/311w9gSTp2Z0nQNMYX1MAAlU/HFx9JG5fgBpOBaqTvuRqz
ZdU98umKKHMBipNEOXQ1nsWHgTn6FDABWTroI+eO2b/9XXtu0xQdUoFvZIzC
tHz0yc8fMGszeP8cGfR7Pd3p31p6LY68K9NCSFHEzXsd2yzN83xkNM4KHEjp
jsjSJOX3vzjv+kbQh9icBU3PGF0LMVPnktE2KshwVGgh+tuv95utJUCD0R/w
jVS9kfo6QLfaE4ubxpmQpvnvl+IYmvg4SPK0shlnGToQgc7yNB0gtzrLEuxv
N3lWG55S1jwaUFRpsysPhyzs6vUgzfKB8ni7YmxSA82n56+VpUC1WxPwsYgV
daRWND1yS4qw2pYO4MGO2DlABlmaOR9fdMSUPKfSFEOONZSm4ZjVbIYVbzFH
WmXT8KYk8WvXU+0wMd6OW8tXaYZkr8d3Iww2IBtQadU7XF+S6oAlr21WFHdl
VDbdXwUTfq093Q7p/xi0XjBNubtxFseyXvUxPCNt910qTXXAmt+gqa70ysa7
86wkbHTnGNx7o/y75UQQtH88zsdwxD2w9xHUtd4LZWlOApZ6J1wpxRduT3ol
3jtUYlThBv+xoqglcY6nhNXc+LY/Y5bx84q63FtXluLE4cGLM6Wgtn1kQxR8
k2eIA0FCowQ8itxRKNEbZyHEGjdLcbqy1FtXlIhjhBN3JGZXXuqfpeTgYlu6
zaiCjBkdYDc1KZzEXY5r+y0dHNj+6crCnXMFCXaUIMDLL6rtGN2S+O2hUhy3
oQckODAAMHOjovCR8fR44idMKCD60JWZzto8lx2DtWazyy/em6cVaqbehRtv
35BjhQdTNxVN1Pca4ucBEaTKB9YfVuUmbxzPcWJ2wuFKLTre8nhTkTZ78+2G
HCysQA1LAVsc46oiKT/qjNsSjJiIQRlEP4zkf9p+LMNhx8Dbzyg72zNNRZjJ
OpdBAYfl520AHzWVB0QQrX8eLwkeEOPZrwQh2YwRd8daqrOh3oIjMbOyYWRF
1nd6CuAhNLwOgCQ4G2p2joc5XhFf9cZlIwICTCy/1wcWf56n+c0H14/lgvbi
jpSCkzefecPSXH0ChhsTD8JbLabEfkXlWVl61RsX/r8JrezdYAG6yDMMvz5w
tTLb5XAQrrTi8/cWhAj5oOyAf2+zmOHUt1Q/k8AOlRXjxP83Jd72ywwtSuDt
k4yweu9qVUaCy0m40iuaH23p+uaNDEN9A7g9sxXFiNsMiMIUieEAfoztN347
5aHEkyQnaWD/TfPicl9jVYbL5SAS0o91TAbD4tx5px2D3gd0gMVmKSZDoqIo
EsvI+7H2P0KkFV94JosMxSiaIjIkLUsve+srMiAZPSGntnuW32Mfl4DBb7XC
6xDwAiwVlK6omgoiVXE/Nv6/CT83uuIFaxu8gl+6feXW0LRHFue7L1Zkgu4n
UgrP9K8oYao3A0qvQHwQEKCWEiqiqromUjS/3x8TPnGL0jSBhrN+rSkDtxMn
HnsVfvZWXXmmi7A70krqh7f1kKcFOEPoew0JBBTqD+ih13sCxXAx8e9N5ou8
vPXSS4s86ztrwl0uvOqJR+Vnbp8rTXc6AH5F82N/WF+/AHVvjBLwsBI60qTq
Ie7xvbUAw4YHYnF/OS/Cz49lnZ5ReO55AkbYcbT6iVcXp2+dLkx2OnFXdk3r
OBWS52sMzwe9Llj4bI4pTeGbcFvBM54LDcRwEebsFLROi8naHRalCdwO/6ke
9Uf4Zx0n88D0xxPzarumGJ0fL0LB8IO6J1YrWHzTt1SFBJtzZFjl9HtR4yOF
Nzc1rdtiQm+HWW0aViIgiJongT12sq0mxwXGX1LhmTvzvMqOZKPYm7cPQl9b
pluR6AqwWo/ojB61/gaC3ZN5Rb9jhvh8aNYJ8fHjo4EIPdFSneUE7U8rOd+/
IorBfjD84fCDt1EYbs3aVWSyGGxWHoRZPWr9C7P1/r6g6LfMJktbSNbmnChu
dzqOj5F71JPrx3IcOOFMK7k0siUJvtspB9JDcOEB7c/ZUdRgOdgrDOtCaCDa
9cds6nktq0oL+PXLWkh77rKCBccJ8CP+J1ersh0OpwtMvxG3Jvk6kwC+4X4x
KMOTu6mFfKD95luKGL4fHbrBP/9C1eSrYP5cUve1py4jtj4xQYb9jxoq0xwu
hyuzovGhLyR7byQb4kNw/QExCJa9HorsFiImc6sshgeiT0C98yNd1a6B378g
RcJTSThO2Im6eTbkedhYlgpXv4zKq6OBsBLsTILCXxgIfA70H9bDYR+8gbwm
iqGhGPC/0FQN9v95ae8zbwFKoFjVsEeQdx6A3RfhdCZkV7dMMGFVfJBpd+Iw
/oAKCbilig5FjBvQ66IYHo4SHuDf/lxXlesA/5wQ3vvR49zUlAszQVYQt0cA
viPB5co71j7JRRTVfzMFuD/oAqwWzJY/rclhb4GBL4RHosfv+lw7GH9nmEj4
81dbMzMBEV6wbw83liQ5gAPIOtb6TAjLksI+ba7Jzy4oray9cKV3U5Nl3ZMH
8WUxFEP7b77SNaUVjL9TTDiy/0oHEQ0ssCHsDNcXJREOpyO9uuWZoAsiL8mc
f31py+MFwQH4MRD37uaDT2hR5FjwOyIhXWoD+LVUKBzZCwmiIQDA745cLkp2
gvAjrfL6M14TBB7eCIkS+I8gCjwvi6K0lQs+4pqsqjHMv/b9cFhtA/1/mt0D
7X8NQgoQ1ciq7+GV0hTIdM+sbp/XXmm6roc1VQcrvqaGwNeRiB72wNIrbZFI
5F70+A0CJwjw/R/bOThxJoN+v9/rX+w7n58Ahf9dRQ0PNj3rG5vr62ury0vL
y4sLCy9evJyfnXreiwEHVjM9PnoienyitOrYKdiPaF55eXlVVXVZaVFhcWF+
VtJb1VM8JScvJys7OzsnMy0lNTU1OTEhITHBAXZi8NsW3Bq/Azgz8s3P+ur0
1wJiLrP5UBIOvub/v/s3H7tbQT76xyM7siM7siM7siM7siM7siM7sv9I7e88
/z/p59gBiKloZ/7Y4dc0+zB+Ma1OpkV9ehcH/n+QD55558+fdjsN+p+SxKno
EmyRxOr6hsuNjU0NlTHw/4MSy994k2VkQZ0JxA89yrfVzonhcDgU0kIz0fP/
Cz0yxwZbnBYLmpRTc6ml/er58tQfkuluPevZD+khTdUkfZGI+q0lvZA4hvON
1J+6fKN/Ynlre2V6qO3M9xNKkexpXdJfv95TdCUG/j9ivSdzHEcz/pV1t59T
tZDM7rx41Jz6fZ9nOeMTRN/DcY8S0l5tR83/RUzNCgvvmyVZjYR1PRKJvA6J
7vGG72kRQtwRWOGOFc/olsNfuKOvP286zkiCDA9T1XBE08PhyOv9PW1zoOKj
tE4EqdkSWfKcGUfyAuGY+P/Z2xrUVpU0zShwrOiRcGSfnfl4ByDF87LAuaus
BHqMD4d3Y+Dfu56/hlKuiixLishxoBvC4VfaWlfWRz4SKZ5TJV7eKcMc9huv
Xu97P/bD34OP934W0gA6C8+1WU6UNVXfU92DRR/5yOKXIVHkNfdxDLePR8J7
nujxTeZ6VVMg24IRJUkUZEWAxG526uwbJ/Ad/46YcsYkVZXlsPeCDSnalrV9
d3b0+NYqMgw+TJXBDFAl0AcMwzGiGhw76SIwq9WC4oQDQ75eGBBTxtC6W9A0
NUx2H2uapAXllT+G9lsy174I74VDYPSJsPAZzzEszQoitzrxcGTg3t3++4OP
+hoqjRKMBkjmyNLsio9VFE3lSZJkRCGyHgMNF3FN/OL+XkRTBQFqUEAOPkvT
vCAF/SQZDAZoXtZVxj15Of3gZDx/yrc8v7gWkCUJ6g/QrKjQF2M4gEfst37h
swhYRGQOXruQFBMIUqQIMHe8fp/H46N5BvylFBg4lmRBrKVzOuNdW9hgBFGG
yScA/tVaSvTw4AHO6a8i0PNJwA+zDMkE/QBy6sGybzdAUUF+Y3KXDfqDHDvb
eqKm+QUvyYJ/h5VEMGZF8MzMxkRTTBXokJzFgHt310vyosCChSBAeRn/RRzL
GfIGWU6YLCHKBnx+8B54/8rKbpBiZPWAngEnSvBld2VCjAXw0MZ7d3pu9w6N
LQQEiad8lJ+8BW9Vsud5QX6WbrWZ0LYgybBgpLEULHwOekDgRY4XRPLh5YzY
M8+I7IzM9Izcwor67qce3h8Mbh5DoAp+f0hiLliddsyMDvAwOwUMBJqiGcHQ
PuBZln96MZ6pl4gFT6q4t+3x7Vaa7M4Ex9DnorvMTmAYZk59DsIUAdak40VZ
CXMkXLRZd1uRLW7x4pvPsTev7gS7LBa7tWR7X1rJtEHVewwpXhCBhxJhZRZJ
25nwCrBC43zN9wsF/cxPgfd7vf6ukvxz86KoPHNZUENy3lw5+XxibHRw4H5/
/60zIywdpChmNDXe8PABqrY9FLuzy8qsGOq2GsmeVosFy8/KSE9JSkhwEQVD
LE+TNMv3YYcQrCPpK3436GcO0n9O2hww5QLgWw0itN2G4ZVzqgK9NK/einPh
swNLmGECDHTDLPsiyw4XIZtBgMdRAE7Yy5dETuF5iWVCvYdCCXWOcTQsv0xS
1LM0mH9tNVtsGArLcNsdroxHMsPBEvSswpz5/g+Lwohhnjb0B4LCcq6DgI23
Wmyo3Y6ieELCFZgnxiuhX/mtP/8Jfij8f6JPBC8XMhAEX4Udt1pB+602mPBu
x+zF88Yyqf3Lv/nyS3+ciS9f4d9VoMYIQwY5+iQYcVZY7seG2XHc5qx8TEP9
E07+N3/7v/9S+eHsVW1tHi9wtDQVZPlzCA5z3oy8JzShsmc5QHGiQHsmlkJD
hYd1blD9ZJsKgNgDzLB6BKZcwnR7q6OsZ4OmApzgWxq4kIu70Jhl/z9kxSNU
WJVYsPorV8xGxpkNw3JvL5IgEvGtPrxSBkvyHk4ygGElj6Vf+PFnetDjY5ut
hviH1YLfZcAr2RptqTqoBX6YpxSFD5W///d/FAl6fdQ1M+T/m01Jl5dJz8r9
MwYf6rBPSHLus198ticFQKzRYsYwq9laen99d6n3mAs5fHBg+Xe3wUrrpwRO
bDKhFlt686xn9X4NZCJ+isMhe8vMNkUDH8xz2tS5ouyzD7c9k1AQ7tOcTLku
bfIMJ8KaT6IconYWl4OeoaLDUrv4tpnzb2+C6E4wNmSyCL4S/JvdKZ/sWC6x
n1EEyP2GFWYkkeeC/o3W6I+XflZDEoc1QQDrqyxLIgc3o0HfgPMT0t9t18DG
ggFPIEmQhUozlLv2gIB9GGzv91g1o4JAnwPbK0lgBY5kVjMRc8wHvT/YsOpd
HcT5vAg5oCACDHDTjk+Iby5r2dQh/RkOPQGE+yQ/aEU+XfOtFyc2NRkmW4L9
nSzxYJPTbv5k6AD//IZfUSXYA6DzZbDRDZ7+iNZM3B/JVu3jRU2CHoBjRUVg
xJUPny0hMCkwftiwi81ZGzqryHBvzRsHckLf+3eY380ajAs+QjzZA3NPAE5A
MopdBU6+L8g9AHfVTc00J8RtD2LgW1tCDG+gcxzY5QmPHN99+cbf4BkFd37v
//rrv+LS40Z9M1QGKnfdNC/xUAaUZRh39XcuKI0/o3mtzxZ9f/i3//4v/ru2
+Iqwue5N+1gRHgUB30v14d8+/TT+mFo3FthTvPKv/72I7q+JL/u3/Oo8D0c+
LED/ouSbSk8HX1sKb6woush6/AzHiaGW+G6DLGn9RvczNOVuQd9Zd77yQVj5
XY+uiaJEUozIC+H+OLsBSxOsgMtQgeB4/tewbz0gWjXsC2ui5J7xsFAzNvw0
zvsg83FKhFqb/u1mzHSge/GO/7VWDAbCusJNnU25TZMsS+vLrjh3QNIUD/b+
/sDUgbziN7y/pajfp6tK4H4hakkdDQQ5StqK4fT7fYaYKrbJIOnbvf1GBPld
+PzbW4qquLsyUYywHd/wU2CFiLr63Ifwk5e5YCCwcO47B6vmvLYVWVY2r6WB
bQmKOweDfpZmLsUTHVrZNh8I+h6Vf3tgIZlX5llZ3rqSbIe1cAlbxWqQDrAd
cd6Kmq/6GJLZ6c7/1rE+knZhglSU3ZZkzKAiYXZ7L0MG2YE48/9dD3xBml5u
Tf9m+y0ptUNuSfZ3pUHtAciEtFtPBiiSexbX8u8mU94cFCBbaEz+Br7ZWXZr
jVPowRyDfg+LgNttrlk2wK8XxHd3VLvl9XDs7KWUb/Q/ltP0jJSEmWqDf2/o
4mE20205KPpPxLX/rTeCfh/LPq1LfrdZ5tSa+7uctNPsgBWgLShqxyD//7LM
CnxTXNufOE4Hgywzdi75nfYj9vyr8yxHDWUfcGCNUxkUQxokWQhHX0Hiu4aY
SjYYMsD4H9UmvtOt5uSaAY/IL9ZC4QkLJMAalYAt7QA/9Lo5fksgglxjaYpi
d+5XJryDj+Y2zHJCoDvFBuVozbAGM+wG+wNJEdXPbsaR/58+C8V3mNXuind1
pV2VPbsy9+IEFL+AciRwCFpQpNAtKpL0+k68+P8grrsNC9Az9OKNkne0d8xp
dU8Zxdedihn6A8YbsKFm/AGIFmXxVW+8zgKteff9YOfBMNRsc/47+HhR24ok
vjyO4ZiBb9QBR1y9ksIwsvyqNz4e2FzSuwmrMQg0FZxqzHkHP+nEoE+lB9Jt
dki/tJrB0DdZKyclWQZbFDku+gOIydXhU1kov8eD1X+qPvNrfEvm5WlOczfi
0PGCiQf5/3gXrYgG/1/Z77XFgf/vGpJFMijIMgh9Wf/Y+fSvdxa2gs51UZkt
g8xP1HLA/y8hdUGRZJFh49B+BEsoeiAJFMUo4ZAMdr3eR6fecf9E1YBfFe6l
Ao9r3AXBIuzHKBWaxHLifl9s7x/Jbe5/um0I+7ILfXemPQznHqlN+Bo/4cwE
Gwo0O+CkN+5DrDZzORNSNV0B7Rdfxcb/t9TMciqsccxA/r/dXj1JC1uDx11v
3a85rfGlEN44CQWwYQF2C+T/l3NhPfQqwjM0vz8QE37uXEiVwFafpX3nzQ4n
UT7GSRt9xxLf+jRrdvuGEp4rPOh+8ACoHUUaFF2Xl6d3gzQfHoglAQFrU9jR
nlGvwLGQ/0/gpaO8vN537Gv3ixb27Kjak4wD5Qm48Ngx4klYkfrL8i4u83xo
KJZNcP6Lva2GqoYNsJKO4RhO4OVjrLRxt8r59ieIigGvJvYlQc2Vg5UPR1NW
QgrXlIDnTct8aCD6i8jEykExtNVY3bihBsVJAkwwohLi3yn7el/rOPkkKDM3
XTYoxmw1xMBtaRvgnTUnEHnTGhPqj5r/b+vhOEnfaaxu2tAodcaB4jjA56WV
7nfcf/L556Tov+6wGeMf+D4Ut6WtqxLf6HQUzepsqD/a+WdGRz4TJX3zUtml
FZ1X5hwogRHV45y40ln4Ft+cUT/PiLsNUBzBZigAgFUoc01RhGsJRPGMwof7
o+b/m/teyYq6eLbw1FxYUZ45rHYbcWwctL897+2YMmdfW5OEnYuEoX8AHsCO
4lj2iqaD92/PHZelvai3wAjS84WmyC/PFZ14Hta0CRdmtzmqxkRxsT3/Lb4l
p31TkTcv4AfO39A/wDIWQxGqPgHNHJHF8L1o24+Yen4clkML54pPPte10HSS
HbclnZuXucW2vLfuz5rXta2HduoM/r+hPwCeJHU5otOXXWj6oMSHYsH/QlfD
C+dKaqfC4UiwFEHRsgd+kX3ZkvsWHyvpdYd09kYCDtWXALgdx81lwb0wc8mJ
pg3KQmQwOnRDf+HzkKq+PFt8YlLXQ58/L8kAc40Gy8C1nLf4RPk9f1jRNs8T
MOQ3/B+a/VRTw1S9E00dVMTwQPT4tz7TNG3xfOmJp3ootPfat7LDsOCfhetf
42Pl9wG+pPvuni3IKSytqr3QeGdVVdQQecFhzxjUpHAM7e/c00L60vmy2qea
HonshRUe1qFhF1oy3/p0WzlYfUUeRJrU1uq210/zkqZIiqIFLxL2rCFNCsXQ
/o69UEhfrCs5OaHokVA4JBjHnsxia+5bfKuBL4iKyMMURYEXRA5m4yj+83Ys
a0CVtb7o8dv2wnuRpfMltc/CoPV7rzVZkcG/6zcL3va/vfoRtw+eMgwGAegs
TQtroXAkDObfOdSW+fBV+NXd6PEbQMOk+TNFNU9YKD3Fs8Ggz+f3zjV9ndiF
FnWveLY2N7Y211dXV9dWVxYXFhZfzk/PPcgBg6NpdnzsRPT5x47SqqoTlYko
nlFeXXWspqq6rKSosKAg591TVbMrMycnJys7NzMNWGpKUmJiUqKLwI3sJxtu
ixv/H0GQD3yWGZ71Hxb//5tVrt532/KeM+D3f+/IjuzIjuzIjuzIjuzIjuzI
juw/Wjvi//9c+f/Fnhcnfp78/zJGeZr27l/8DL0Re14kYiqlBV/tV3/4OfD/
i2lJGH170o9YUOsPPmRAM2sbLl1oaGxoqI6e/19ESTTbYQdfmu3JxbUNVy/X
FiX9oPOU5I51JaKFQiF9by56/n/ersJygZ6SzKLalqEFD8ORW8+6T/0AQYSk
IWV/HxbOVrXwUrQJ2ogp4YXIsByzPvNyl1fCe5H9vf0Iv9Se9n1vAW3gZDkC
flzRwntr0fP/bYOw3BbHqboe0nRV0aDJ27cKv+dCP+2JzMqBoSm/HIq82kyM
/vy/WYP1tgTIfj4owg4reqhrLR9/BZbqVYmTbpnxzJt+kl9JjYH/z2myoirg
GTjW797ddXt3tr0y97Tyo1eKrtsMJ3jKzHYk9cn8y/Ho+c9I9k5ElgTG73fv
bK0tvFxYWltd3+KV7av2j3ym5ey2wElTSRiB5Y0+m34cQ/1151OF9O1sry0v
zM1NP5ucnl/Z2NhmNbr3Y0lNx1ZUgRf7nDiBNWztuudi0F+wdvjXVhZfzE49
nZycejYzv7Lj9vhoTRn9SFZf1YoiCQLT5XTgznFVVrei119AkJMvX7yYfTY1
NTkz93J5bdvjZ1iWl9T1E+Y3P/AdB1+5pAqiJAduOjFrhUdRIu4YKhCZ88cB
/vzC4srattvnJxlBUWRJlKWJsgQcPSg+Y7e9mwNbsQhHq6z6ugpqWqZZQdnz
xICPJIxsru/ser3+AM1B8WFREHlB5mVm9cnw0ODAwL2BkeGui+Xp+EGOBVK1
JEMpZFFi3FtBnqJFaW87+v43mex9dJDhWFmQjIqDPMMILCfyEkMGKJqkGFZS
ZIF2T7bVZDhsNkftsiyIigyLI4YjMkMxgsi0xcJAt7VBl6dAvg1oOHDGNMWy
oqwJfk+AIgN+P0tRgSAvBp+31xSXta6LnCDLhkiEwf+X5MhqTBXYkLNyJKSq
MrzZ4TiG5sgAK1OTD9cpb5ChKX5zdIlm/KCdgnt6dMp9UJoR9oAoqQpLrY4P
N8eUAW4uIl+FoOizaJR9hFXXuMB5DM19SNFgaZiosGc3LwVJhueAm6IC4I3w
YJjIMifJIXmqMdeBxchCTpwP8QbbGfQny1F+2s90wVuVvBVFUKeSMfByS5dg
qTMB6iNQYJQCf228Au1ZniX2gAk5ce/OnVvd90eezG/6BQm89M1jCE64XMP7
An/O4rLbMdNZL1iaOIGFBnBlDyuKnEie/qhKzA81c1JigsuVlJKWVVLbsej3
BberLbjD5Xr0I3G3BHUAfJu1xQ8ZKTwYHrwoi7MPSY5nxKk4J56CIMya1b/j
9ndbbZitwv1KXsq0Qrl/zGxv3VpfWl6Zn5kFPvp29RhLMpTQFefKc/AJTCmP
vL5AV3Hu+UVZ1qYSYO13mGhK1NYer6kuKsjLzs3NvhFkKI4Trx1CsIyYzuz6
OcG9y8ucGrptFDwwUg5RmHRsNpkt+Kl5EKUAByg3HQr/O3s5SMKXzHEyWWPD
ITxMuUKNwgOoPbkzoINACXiA0JVD2SwkzrAUK8JrcP5JGo4Z6gMWG0w5tlpx
u/0qLTAKCBglQfxwadZYzDEmAqcusRRDtScQqA0SwCEDm7DbUIIoWwVOQhaY
0Ouf+r9bHDIeRowIjCjwDEn6OpOdGKw4gsLuJ0BXECkPZeAUBe0//7N/9x/I
w+HfY/0iK0g88LX+x+kuwmbw/41pCJa/K0HIy6Jf/fsvv/zj84eE320wT2km
4FvMxx0o6H6z1Wa126xE8e0dnoXlB/y/9a+U+sMpCI7YbsighwWGDgS2ocKV
1Sh0BsZeWfcqCdYhnlkdOV9xMuGwTm7MLZKggPCWBYv/KcSBQ/o9ePuld1ZZ
lqTprbG28kSbyXJo/Htzk8DJYAhwNEmfR3DcKLhjrVv3B0lqd7rrRBp6uDR0
ywUQdIkMzzIMXWch7LDelCV3gvZ614bqcuyHfj5hPesDQ5zhADxdb8Zhvrvz
zPiOb7nnmOvQNBfeMUsdCQtswALgZL2NAA+Q173kXblbEV+i3QcMMVlvaAKI
sDgQDgbPmjBrVvOz7a0nJ+IutfMBs5QtKmCKSzwIM7l7VRUXJ3e9S22pn+pg
ynFhHgS4kgh2eJKiKEE3TfvnTlk/1bFYwp2gwvKCBDYdYBsmSQLNkM9KP92p
XOZCWGKB+5cAuCBLHIhzFgs/If/e8SAsiSzPwx0mJ0ssTTGNh7LMfADf0qKL
oM9ZwdhkiCxNu/M+5RE9dknReIpiwQJo6KvR7HJM6m4/o9nqRjid52kWvH1Y
8Ycj6aV4B/kfs8SBIKtLYDMmQS1GsAT46YVPiI+4ejVOlcEmC+7EgQdmSHr6
k/Z/PccJIg2HPcNwkJBBDse5uu9HzVy0wVMcbaTAMpzIUYy/9SOOP/4zI/Gp
QHE8yUIFKg7WgV2s+uDsP9CliC++tUcELo/hWDACBbAJIe84PvLTmDMuG/B3
rR5qYMKzDnjEw7LPCj70gwiS9exX/6svrjni+wDHeBXsbIHrgxKH3NbJ93Yw
+DtXTdPTP/nyyy//1fm4bsKRLO+ewIqyZFShJVvfF+MDdFtRX0Ckfvl/+v1/
8p8uFsa1A9BBj4cXVBnicw/fd7GAgFWq7oWiyz6fAiaL3hHfMVjQOM5ziigA
H7RS/F54U9K17ZDCKrSflngxPBzfoBQhrsO1h2ep4LXv7jFgW1NueEOyJAeC
FMUJnD79sZuCKMxcEwQPwFL09HePlSF8akdAl2V29ORdiqR4Xt+IQf31fYak
r6jA8fu9Dd+Z3BA+ocWtikLgZpo1fQxsB2nRlx9nH2Buk2mSJCcyvh32QXi8
cUOV5J0mF4pba9b9NCswJ+PN/y+naH/QfQX9Jr7ha23nVmRZ3LhIQDlAx70A
yXJCY7x9YB3N+MiZom/eRhvw5qrnIDhfr3PgqM1GoOVrQZrhu+NTffqtYYNB
OujvTzaZvpGUDv9X8IASxe1LBGaH9HPM3keTrPA4rlsjxJS/uB2gt67iX8N+
9f+Ubq8gea8loEYReJvdUuunOXE+Ob74dTvrPm71QID6APcNPH5xhRPp7kR4
KAkPRXA0YU5ghJ2iuPa/7Y5708vPH7O9hX/zP3PpOM2LY7mQe44auqh2U5dG
i9SpOKIjpqQp746Xnii2mt6Ij3z1FIkdbkFaPWEQzw0aHMBv0BlBeu8qFTV+
2brb7Q8+LHyjeP32/s9aMw3a2uGE9d8tRiFiDLdcUQUhvFsVR3yk2etxB3y9
Bv8MeUd/JqXTK0lP8wAyAvnnFkMAokOQhNAX8ZPAQUyOR5TfR7vb05Bv4luq
ZnjZUw9PIeF5oHEmjeHDvCpqn3XFDd9sOrZD0kFuszH5K/fzBt/V4pH5x1ng
vZshNKQBo5aSHVZWpc964sf/TxgDew6w6T7veAcfer6ix7y6ewG3f8XANltQ
m+OBSvOy8tnduHV//iOSYkHsP3/SanqLD7/Czq8qwpMsFPQ/aoHiB2YL4uoT
RZqR1ddx4v8jhb3bIKICux/6WdUB/lfX30jaLUoNNjvsKArmPhj+qMlSOQHC
JJ6WlNcx1p8/ADc5230aD0J/KL00Xmb5Gh6BHLgpWX5ZAmVHIAUdyi90smFZ
lnma115HXf/7XXj8PqT+g00XQ9Hko8Jv4jsubaj8/RSbHRIgUTABkEJqD97U
czSvfh41//gdwzolsOdl5DDUHwgO5X8TP+V2UA9cNgiwkAIOBmAVC29tJYHl
5c/vx9j/aGb5ORDQw+yblyOjWwzj68sxthVfOT9zwWNBXatAoRi0zZh8SBUf
1lVFFhlB/jw2/j3o3PFlHxz2/EZzBp4/xpG73WlvFr6D6W+peaGok5mGFDbk
/4PhVylEYC1iuFN8PRTT+McaNnlFhlWfA+ctTjz7kcTu3Eh60/wDfPzihir2
JxpDDzLAbXbkrBzSwC6AAvivYsJHCmZkiRVkluKnnZiDyHkksDttX+G/dX4q
20YYyz6UJAcD4VZI0z3DvdNgs/ZqMAZ8M9boCzGrAYUjpSd2FMfzAP7GteRv
4Cd3B6VAPfB9UHrBilrsuOPJnqYtXb00wEry/p3o8RPKryzLIWrRrwsUP06g
hB3gc+tXEt/FR7KHSdFdazOiLpsVQ+2EayIia8vXGgY5WQpHvQVErN2CqGoh
ajmggm3vjNNG4AWjgrjekPAuvrl4gmY3KmC3w9soKFLgmtiT9OWrl0c4RY50
RJ1+ZHvy93RFDQXmvarCiy8TAX7RKMetXHJ9A796juOWS1AD3woeAycSx8NK
aPV64wirKnpb1Pl31qEf67qsbj/bUFRZXki12R0VExy3dIF4F996elUQXhQZ
7geEXxDfNRaW9YUrF/opRdOvR49//yd7mqhsT60piqqt5FrtybWTHLdwDn8X
H7u4LfHTBfAKFF7Hg+4nXONhVZtvPHPLr6pq1IkAiLn/F18B5O2pdVVVQjvV
mCOrYUlgX5wjvoKHn0w0ehV1Nh+HV8Bg9OGEw5EwuafqC41nuvyqolyNPv+x
D7RfV7eebahhXVfaHa6qhwGenTuNvdN8k/NaQNV3j6MEAdqO4wThRHM3IqD9
TWdu+YATjL79pp4fR8AA3J5cU0K6vu9vOPkEbGnY2bPou/iJN4KqrD3LR6EA
B/S+9vQhWdX1F43nuvy6qkbfftPtL0JgHdt5vqaGtZD2mbjLMAxo/5m3+PCT
EztJTVJDC1dKcvJKq06eb+h8Kamqrs011XUHQqoa9fgzmzr3ddABO7PrkNUe
iuzLLMvx3Muz2LtE6ISbflmUVY1zr214gjQna5okK6o+11jX7dMUJYb+v7Gn
h0PK7sy6GtLCemhP4TmBZ16ex03vPEBiV0ASZUURjGshQZRhnh54gJmG87e9
qiRGnQiCmNr39EhE985shyPhvfDeZ3sgppKltYsO0zv9n9YHFvtwJBJSIf8f
PDAsvAZ+Yf7y2Tvsqz0t6hMIxNQo8LzIrU+tQc1XUZQkOuDz+ufPo++ebie0
r2xtbW5tb29sbKyvra+sLC8tvpibn+0ozjv7eGZiJOobMsj/r6g8VlNeWFxV
c/z4ieM1NeVFBYUFOd86dSbSs3Ozs3NzsjIyM9PT01JTEhMTnE6HzWy2YFjc
MgFAZ5s/tJMA3zFbLJa4n7h/h8TwXkbDxzA/4e3ckR3ZkR3ZkR3ZkR3ZkR3Z
kR1ZDPZ3nf+fnfBz7ADEVLz74uTPk/9f/i7/3zju/xl+Ox78f0bwHz8A/Tm8
B6g/IEmjbxLbLURqSWVpftIPu003EwVnL5y/cKnxUn1l1MffplJK4vgul8WG
p1W3PlzY8e2ujLWW/IAnsFU/DIRCWigS0cPz0WZAIaY8j8pzwbH2tsF5rxiO
AAuF2YXW7yVUo+e3Iwb/X9VCoUVH1C8vcUHjYZE5SYc1qHVNDYUiYdHbl/Xx
XzOXzuuSEgrv74f0vf316Pn/6MOIqEgiL2sh0BhJ4Hhyd22T8dz9aGldc2JL
QOYl79DTbZIRtZWo+eeIpS2sKgokNItcYHNxanz0/q32fj+7Uf8Rr4BgxaOw
QFWnBU2pudZ+pz36/jed0cKKxAV2lmdG73VcvXi27lztyYsrEvX4I5xqa2L9
tsiLi9kWm9mcmp2fa4mef17gZjfmJoe6WuvPnywvzM8uLC2tOP5UE9aOfbjq
GF4yDtNTb9ohNTQlNS01BteBdT28eaXuTGVZUX5udnp6Rk5J5fFToyHZ2/zB
SYhm9VECL+1WQUHk1OMna2tiqUKdf6GmrLggOzMjMyMjK6eg7EzD9fbpcEjo
+1BVFyzjFilwnDiR5XDgjhtLS4sPo3//iMleWJCXlZ2RmZmdX1xx7FzTnccz
S35Nlxdy3vzEN1YFxIJldAVlQZL4O+mE3Vrl1WV9K5YMSGt6bkFOQWFxRc25
xo7u4RkPL6uqpMlCf4aDgOx/HHSzDRJP4cWz3ZnTGZRESdL8LWk5JzvmRFEO
bcegv2AypZZWHz9V39Te92h2zUMJqqrLiqKpkjD7cGQYSgAMjwx1XzlVXVmc
l56SVtrjh8QEQXKPPF4nBZaThNBuDPobJlN2fVvP4MTLdT8jSIooQtqLLEMl
AJLiGJgUoBjaHJvzg9dPn2oaJSUBwEN2hK7DKmngUYZiKpBZNb7koVhIeIGi
EgwD73+AP+QovzdI0wE/y4H/UKwo+BYmplZpMPJlCfhsRQGPyoHnjWzHVAQe
ORmQwDIiicCh8VB8gCIZgZx8tEZRAdAB4s6TGTf4O5YTJPAgJM3QAugco0ap
JnO7L549v22PAR54IJ+uQXzQo+ABSIalhGAdihY84HnQ6KljeGr1wyDJAjwo
zmLwIlRJUTkowN1ZlJTgjLH8UuLSKzUEZafB2wfLT5Cn2G6TGbfnroYk/Xkq
hlvMjjsUVD2AHHyj+Tp4QYKsiO3xCB3NvXKQJP0kw/Bg4PMBltk5gWBYgmvw
tSqctyQQmMOa8ACyfuHVGw9ar2zeWgVDT1pOi8v2Ib3+PLBLTc0t3UOzFBlk
to9BfOfDH8vuMhR3YBiGZD3wbW9sri0tzr98uThRW7zG00G+O043TxZgZrPF
ZsVciaeeeXyB24jJZit37ytrWVaYdICiSEZrfd25MydqKssranKIW8Y4qI97
zAo+r2jaFyS7CnPPLapKeC7RiqJ2HEXNFpcLxx1G6Sci/7aXYYETvHQY/H+k
KRAQJc8Op4pKqB/HMFjxCCZ7gtXWDpN/cjo3ITlKUeULh8L/L9wkaV5URU5U
/cfBCg8LLsGKK29KnhU9E2WeFRRZCdUdyp4haZ6hBBAI0pxyL9mJGYWeLDDh
FvLP8YQhhWUVASq0+IoOBZ94KjPwMpjid6sTXKgBbjHjNjtuw5zE2QDP8qok
//Kv/cvdw9kxOR4qNK/yDEmP5SQkGO/eEEAgcAy3FS4pwBMKr/7or7/8csQU
f/0L8P7t9yQOlp4NbA+VOBMh/duoNkXgdhTLfQhWBOCEfvw3X/6v5OEQ0xCs
B5a95hn/6shZh8NpZJuikP9vz7/+kmZZsOT5J3a8DcTh0EIRtFOGSyHpWZi4
lmB34kbJEdSK53e8pID3F/wLvafTLI44kw6+xre1w9rPAhNcmb6TjjlxDBYc
sWfdXKQYjgmuDV/MxxHkcLT4DTNfhd0vsP6d1Uc5wP3bjHzPLsbvZ3Ynrpcm
HMage9csjbzACSzjD7gn81DCAd69OblhIeDdGD6Vhn7/78eMXw+GmMizpN83
U2IF0a8VP/5ox7c5fML5KY5IEMsVuCPnWSbomSyB0y7/5oJnZ+zMDxAFjAe8
yfVI4QA+cMDex1lmLKVpZtO91J72qQ6IUm+SPA98DMeLwakzxbUjYBw8rflU
BHz0xBQnwgrQIB7XFJnx+HjK9zDzUzXeUrSiywIPwmsZqg9IAkNz1FCcCW4f
MSRrKQQrv4syFB+QRZYKCjOxqKv9rPiOh/uKbPC/RVlUJBCOkxcOvoOYP4X4
hvVmRBbgZgfuAsF+gKTcuVCWCoRfYLd/OIoz75irbgzg0yyvgBkAtiQcS2/l
mDHc4UpMSk5NdByy77UULLAq2NWC7Q2UWFMgC99faU9ISklNTU3LSCYO+agc
SZ1SBd0QoBAFTdU0DbyGekdKanpqcmJiovPQvT/Rq3OyDJYfBewu9b09TVW1
Gw6AnQD8MHboFwUIetYHt9USRA/t7Ucgw6MTx+121Hroox8BQaYz5wmI61V4
qKxH9sOKKvL+RtsnmXkWnCCI1Ox+KRwOQ1nbcEhXJIXnpos//MRmS/yezJaU
mkKk5dxmI6qmKoJR2xIMhN36Dw26OPeJNSU9lUhIOb+rQeUBKO8oyzxH3vjw
2aI1p/NRa3K8XALiSnTZbUTVlipx8IhJFcFCQPd96GgfwZMv/er/8x/+5lej
vnz5tlkx1GIy52zpIPw90L7huOEPUVutBT2Lnt/6m7/8N3/4NJbT5++ac2Zf
kIwrCWBPMz/Qevu5lXA4QP2Dz3lOaYtnKI4gN/wengedzzH80vs3uIiJuOYL
iQoZoIF/jjyJ704k+USPAOIvSQj6L31A/MHZSofB+2FJqNARmsfjOxUsxwMi
L/AUPeJ837dB69vJsCL7u++RJCuy+lZMp7/vAchc0TmeIpfL3ve5iAm/GgzJ
6vJZNHWMJDlGCb5PpSEWQ4dVmiF9re+f2WidR5eU+Qoraju2HmQYkT8Tb/5/
vUj6yGfZ7/2u5di6JinTRZD9TvQHKZaVW+Obw4CYLtC0z/OB+5/8aU2S54qB
s7ARlrI10AHyvRgFYL9tCY/9gcB86Xu/lzIAXPNiGRTDRO0Y1s9QrPw0rjsz
xHR8fcMb7H+v7BDREpTlrTOwDiv4124+GWA4aTkrvvPvpnvJG2h53522pWZJ
kfwNOHpQBRW1JsyBzZK3Mq4nMYlPt1d97rr3aeqnP+BkoYc4oOHBMrCmWyor
cXVxREdMRavrG4Hl6vfMPqzBL4vPc20GB9gQQEAadE7SeuKqzHdpd2MnMFn0
3W+YC54rivuUzTiRsxploJFGTZIiwqk4egDsnnfXGxh+TwIA3kLLfK8DHgYa
mpwW0BEdkibrX7TGkf+fNe/3+Mj3yL+bi2YVZbkE0p8h/92QxMWHJF2JJ/8f
MTUFfIFgoP27rxS/SirMDUMOE3KArYgVs+RvCYqqvr4TP/5/2ksqGCDd9d8Z
/kj2U02eL3xzHA4vTFAbNqAx/x977wEe11mmDZ8zc86cOTOj3otly02yLNly
71W23G3ZcpEt9y5Zrupdo2mn9zIzkpzmBNilZhdCW8jSy5flY4HlY2FhKUsg
CbCwLCwE0P++I4ck1igxmiPv9V/ocUs05T5ve9723PcjqurIQcvgiy4wIfCr
u3LcXgdf0qfTu1zk/QToNuD0XXt5EWyV9JGD1ixB0KIDPRzFsBTbWjZu+KUc
FNT2+bjTAZUnwAMgaPFZSRHAAkwbPmjJEozc4Zd5huXZEHN93oMdCi2+qYsn
06D+ATyRB2NgN6WD7ZnAS/rdw4njg3XFEVliGFbgqGDo0swHX8VX+vTQ+rEM
1PAB0Fl0RFYUiecl7fFaC8qPrpdFlmE1g6Oo0Jlxk3/yAVFrnQ2P4mPjH7fN
Z8H2UJZA+dXHJ53/+8/guHtWk8JyAtva1MXQobpx4T85l3X5dBpEhxxwO2Er
oQ0VHlEJkvL4sQTxXUVLdpwJ8BzfuTEzu5aifTUP7jtsJV06t8s11viYw0GA
8hvqfZHOx44nhu9acvRmt58O8b4ldlfyHor17X7wbgVbFdJ9yzEw+B3wJg4n
bAtFQ9MUeEylPX4iIf9jn1Pfz8PzZrEhmXC7d3GCr/pBfOcOXusptY/x/x1g
5rGvhJt0ngFNoI/sTaD8djRpSyfYb8pCkD9LEmTSPk7wbn9w6Z98VFTuFEL8
mPQOQTqqwwCfCYmKrHOLJ42OJM1dsq9NUmVVEznuAul0J+2nJe/WB1c/2RdF
+XImcHwO2AXB0pc4EAYVQFOipuiDcyeLjmL7GQGec8GYDkG8nkq4UmsZsW/D
g/hFNwTpVHIs+zwYAU4n6ayJqIbOBkVFNXzx16oPg28/+zSoR0WTYfSD2p5L
kDn1FN+35oHpx1bSIfBHXPAKGIsp0QP8sKLpPAWmH71/0hexqO34U2GwmVPg
aaOs+uZjnrIrtNC98oGILvuSQZE+4CLgA8SEt1zE/jCYeamAoKlGV+Hk4//q
nokaigJzjiuqLm1x5my9zUjdy9+EjyLYupAc2uOKxSIQUH7BRR6MaKZKDXKy
qrflT15/4Oi9qAb9uAITymsXC0vrelipvfIBfOdWTmN3eVyxaAAn6XJ7nEeG
TUOnvKD3GK15k6//w09FdSi9APH1sG/1htshlmtf8sB9i2unqChnUl1uEgaE
udzJZNrNYd1QaZ9oqmbrW+TKeRt85NATER12P01XdcOI3LwUElh2HL57j6wY
3Fa3Y2wEOIjUfZJuRHXGLxiq2pYA/sHHTfANoAMYqq7rETMmPNrxIH7SflB+
kztamltQPK9s6aptjZKqmQA/IIQ1ZfL1b0P2jhgGTL8iGzoovxmVGbCm6lo+
Dl9QJUVTfG0dfT6K5lWw9FD0sM76hbCqJFL/e4b0sQoYwx/Woe5t9+oHxl9S
DSdJUO1HVuDZJJj1wd+KoVI+ztDkW5PO/4Miu4cNGPSsmWE9HAlHRiJQd3tg
/QP4aXWaCaOjNc3QwHOaOviQGR6JCrQyMhS5Pen4QxTZJMT0DHhI/YeXHgLl
8wXbVz2A79reNtDf2+ft7e3u6uru6mhra2u5c+fOzQtnrzY1Xtg66fw/KOKe
C/n/5dAWlZcvXLigdHbxrBnjTr6IzMLCgoLCgtzcvNyc7IyM9NT01NTkZA8M
0bRu7/NW/API/gf7DrDut3S3P57C8DCEhr9y1sy0Tdu0Tdu0Tdu0Tdu0Tdu0
/f/S/sp3Mo7cpP9V/n9p/42K/03+/2JBufTaVefrYv8P92Er+P8VgjA4//Ut
t43AH/Iqz5oLP6RcEMX6Mf4gnr1wy5HTJw5tmPNQ+RTQlJJly5YuX7Vu7ZrZ
k8evECWO3puXmj1/08lOXo9EoxGl50TZ23YJNLu6mTdjdHnDvDzZHoQi8ymZ
ZYOt11tDihk2DV0PmyPDYtfbnShhpQ1KJGxoqqYYutlETLo58np0GGsLj/40
RdNURQ513upn+qreitNp85ScF+HFlx6JhKPDj7dOnv+a1BSVZVWSFF2Xgz3X
zxyv2bxkzs7+UOeqiesUSyut6ZMFXhg4fuLS1eu3uyefgAMlDg+buioF+lou
HNy6rKQoNyc12Z17kaavxA9/AmZPn7+1iVVENrAdtzs96ZmFOQncfm1UqI6G
E9UrFhbnpntc9+83qoLs4NoJAjvxlOKVR3phcORJjwXCHYWHq5fMLcxIdjuJ
+wnWUQxb7GXZI/ETX+FpBeXVNxiRF/oWohbMXrbs7CRQ7DfE8dpwx8IBUWjK
ifd2Im1G6YYLAUhQOpMa81r4w3qsiYx48+cJlye50qfJfaXjv9bmypq1YP1p
ryjykn8lhqI2bNaSyvJZlmWfsDtd6fmzS/ZwmixWj30r+mcReLsnt7i0csOp
AVlSJK1pBpRkXXBncMB30YoITJvd4UpKzS5eubvu8oAKPEtXeZILtIzb5fGQ
bpfDk1e+av3mLbsveuGttyLsTXfnL9rVBlyG0eJJDN+GOUhXUmZu8aI1e852
hBQ9AjyRLPddOFVfV1dfd/zEyeM1e4+eb2y8UH/6hk8UoV5IYEPlyfaQLIsy
p7QnJYRPeFIzZ5RUbq45fbsPqonrwKtKIkNzIY5jeY5XZEmEoIGBjpauEA+6
nsDxN0/1gjYSwf9w2tWE6h/LLV2148iVFi/FQ9UBVuAlXpRl1k95/QxNswCD
o1lWgJQ0moHplyH39UpA5sBjSIJkDCYSgo0ieYcbO4NCTH2AY2mY/4LlqWtn
OoIhKsixsvdiQwcrUCxMxyfQDA1zI4piRwe8AuIEX09Hd/2krz9i+IX9ogIq
HDJeJIFleIEV/KtJLP8UyzE817QwKa1wUwvHQU6gwHCgwmXVDHbRgiLLgT1z
Z+TmJ5igMbVVE1UZfB28AoLZB1lhD1gI2QvaFEltyCU9Tgc27zovwKB0RVFl
MFd662+KvChQm2JJMhKDR/ELIwq8gtM1XVMUhuYF/3zUAdxQvanTS4iUJNJN
YvOvhfq7Olrb7ty6fuNmw5a80yJonMZkJIHF32v4yPKmCxcvXrradONOZ39I
BVXsnQfwPUlnI2r3DNLlJkk3gS+o3bBm1fLFFeVlCxeXJqff4YMBdpc1ke94
WnJSSmpKVk5OwezS3Z0hitptQxzY7H5Nas8mSKcLCpA4spOT4P2305WS5iJ3
0jRFcausQP+zoVDcGrEv7WQC/p1FucvugG5xIw0nCJcLJgF3wMw7NjtGEOkL
jw2yNOiJS6zDfv0/8b10gOP6umGGe6MW0u+dThyDQQ8EeAKny1VxMQCj1ERV
qJgSYl7poB/0QUUCA81X4oScf9xuj6XbgnEvnhX9Eg8JWoLCLZgS/YHcdioE
PJvI89Je2PMgAz8Wd+PAXR4y+4ZEhcD8y7C6tXnP/mzpN/ggzDHPipez3B4S
h9GeNgw0hIskk1ybaY5hZPXJj77w8q0p4d8jKVd4ihV5jmuucCZ7nDDiC7Pj
TqfLDYZBZbfIAK/49K9GR19eOTWJkT1neZgAmW3dnu+GnMeYAIGD9AD0pMpm
jhYERRj5z5feu30qwIG5T7AMmGea9y4qcIPRD9OdOZyg8p1py88OsBwPVus3
tu3cmDZVJyeuIyxHMYMn1pcVpjicpAvG2rtc7uxVl/wsxcqhWzWV2TiC4VOU
lRp1HuAYOtRfv2XRrAww+EgnTpAucmGjjwkxVMfJlblOUPCpY+Shzt2gh9OD
F3atKcuD+k/ABThxZx3nC/gbt89Jnupk3KhjB1iGsIMNB7Yum+nCnSTptJML
6rr93oYN2YkIfT2sYdsFlhX9DYc2r57tdrhcJFG4vyM0eKs6gW3eX2Cocx/w
ryLdWFu1cnYymH0z1t0Y8HbWzHwE0gcxK2oWwCKMunmsesUMEidLTnm9/TdW
WEpxeAtzL74hwUWuOHi1tmrJnJLtnazfe2bWIzokRPPrKB0s7SSwJGUDUH6L
k2l/3SNLAY4vphVFkgVZlnUoxwiVxthjjy4DuH1GN9h5wdKrOljushzHKdfy
4CYUt5Bq+xaWdGVIVSVRhbHNMvgPXmJWkIQ7yZOcWVCQMtXSI4hr1oVhQ4On
UWAxrsJn0LuLUvNnl6/acfJW15WqePmgLTRsUSsVNlW4x4iFuWmG+biwaVPt
lS46fO/Zjz3VsWwq0cFOuIyKhkfCoOSmrkcfe/ydH/jI574gUeGn3/Ohj3zs
05/72zbrVrxxzZbXNWJGwV4oPPLUu5/71Avf+u4PXvzp80+//9kPfvD973pq
qGd9IjvNtzUUtacfFCLDT7zjPR/7/Fe/+8Of/OylF//jxy996d4zj5tM55Uj
2xZMJbwNw10puZu4v/vkl7/2nf945aWf/uTFF1/8yU9e/PHzAzfP12xaPDs7
mZjKzmdLn1O04Ezb09/74Usvv/wSAP/pKz/94b99/YufMjaUFBekJzum9JoE
RWac6bhx8u77v/TzX7zyyk9f+cmLP/juP3/+E3/3t/eGG3OdDkf8xR5qmU+y
Icve9dw7bz7ziW+/8rMf/+Db3/jiZz767LseHwob4b41E54uxxKTWoOPIrOf
/dzf3wk++Z7Pf/nTH/nAu59+YngoAgah6d3qnuCUFexW02alW7QHQBGn7xlm
95qjJ7gnnoxEoqYZAS5QUvs3xj8GhpbZ9qXvfq13hlWiKKV7V88gMkva9QgA
B05Q1WW1a8VEQw6fs7Ph/4yO/uGlOqdVfcCTRKJYfteQDvyursJUZ71LJyqc
Z7s3LEY/+9xdnVplUScc68ye80/omgxmHlFge5ZM1LgZR0RdZThOYLnIGSv5
/6h9ddMdBSw/BJ4ZXD/RkE87Yei8rvAwcNpsSkj+c5w5M1YyEkCnQwcmGnip
x3VDka+egutEVuuw+BjANqNLZthQ6FLcCwgokHUYTI9CbVr6FZaCB6QzLF4U
pF4VqZC/Y3H8UY84d0ug7XcnOfDFgwzDCbTVx0DYbjHo9e6doFlt60K6Tle5
MIJMPsVRNC1tspr/v4wKDDQWTaB9UdqnqfwO0onhbmJBb4im5Rrc2vLnXxj0
9e+Oe6eKIjnXDUWqSYKZKJ0udz0bpOSzE7vIyRi62dvjbS2LXybXQUXVzozx
IAkXvjwYpKVbWZbiJ50abB+4lB33NdtSv6bdnoETMXynI/02S4n9c6w8E7AV
tfS3DxyOt+dBkbwmRR2owAgcwzGHkySxYyItcpUWwiPI8v7Ort6qOFc6KELs
ERVumzMmSYljTsJl3ylzonbSyg2a/YCva6BjadyTjvmdqnIxDSdiGchhA9h3
SLxkaFYqgKRe9fX6bo/jP0PzHJaUvgo7Do9E7TaYCRffJ8qKHt5gIf++tMc3
EGooivdaWZ8uHvFA/m1MkBZKcJyUVFkLTzr/aBz8A/Sgnzkdb0glHRLlzlIo
PRATQAAOwFbQI0qqFpl0/tkH0VGkoJsOBUM1yXFend+mMTVuIib/ENNLdjiP
6pygKmGL8MGXFF7hQxwV2h5n6iW28Wp7CU7C42gbrAWEqBYUTpC1oSqLZoCC
fR0MQ3Ocb7z8AXDLlzXuWAoZKz/k/9tmnBA0iRdUY2irJZwkZ9UgTzMCx3Jd
4+UPEPvSQXVwJeEiHDgUgcbIvX5D1cA6STaGt1lRfnetJAYoXuQotjmO+gi5
T1Kb8sCgJ2KdD1mqGLKhSoIgGSPbLBh/6BqJDwYYQwX4TXE8ek6DKdR4YPZx
DPY920ZFVjQoQADKX21B/SfVK3SA5rr7GIq+PH74o+V9mm+lg4iJj9jthG29
rCjwt6iaIwnjo47k+bcFmmrfmL2un6ZO5497B76NlVtnxeZdKD9DoBtVSP+H
zFl9aGeC48+RNW/xzv4Q31tuJ8p7WOrEg+4HRdx1qnQxAx8jwAMPaNusqUos
dYmi392dYPxFTuXWfQ1UUDhLkK6FXQI9TnwIRTIbVfGIC/p8goA3IvZtOii5
poBNWiRUlgA+6OlJZfsut4eEEHvI4XYu7pFCNePxZ3Yq7FY7QI9NfOARDppK
LBm0qsq1k47/QpCUWSWrDt4MQblRjj9MuJ1LuoXAngfVZ1Bk8aAcXGHDgPuD
QugEgR01VB3ga7oZ2Dz5o3nsMMXIpmkoUHFcOZ/kJpZ7pcDucfjoBloaLEXt
UH8EXkU6ieOmahiGpmsR39rJb8Hxq0+GTR0e+QqiaHZkO107KdG3c9z0Y98j
ij0z7FD0CSecToIkj4VB/ZvwlLJ/9aTPZVH7hafChgHzbQDTpPVESSPD+arH
8V+ddbLYnoc7HU4nFKEn3c4jpqqZmq6bka5lk8e3XbwXMWAydRnmMzfbVtb1
03xg27jFf9IFTb6Z5SDBmhcS8D0u8hgAN6CZ7ZWTP5fGLj5lQi63GsvvrkmX
bgVZaXDjA9MfiqRf09XrWTDhDkwD4HIlkUejeiz41Ii0L5o8PnruCVOF6gPA
lWtgPHX18iLf+uD0iyJZtw3dO5dwkWDV7XR5ksic5igkbkfCEbNtcQLe9/Rj
hi7DosvwzkEXOVkZuPSg/ASC5DbrinYuE4MOGF6Gpx4xdDMMw3XDRnMC5UdO
jmgG8KNgCKgKGEyGKtM3z47Hz2vWQRe9uignd8bskkXLq5uMiAHQo5FIJDH8
uogKA850RdWhoIphsu2Xz28c1//y7ugw8ikA+f9Bmof6rBoof9iMhLWWikmf
QKHIEYBvqJBRD4ayrph619WL18bJryCFzaoIE9/IwFXAeDioVwH6P+h/pt68
YNLtjyKHo6oJk55BPj/4HQ01XbzRt8fz4NtmdkUAnGnAMQcaPjwUjQ5Fh0fu
gl/R1pLJwoMv3ilxsixKcCUhSaJK37x4vm1wx7gJJeucr69/oL9/oKe3r6e3
q6unq7O9raWlpfl209Udk78eRJGUkgULy8srFlcurlhUUVExv2hGYfGc8Sda
aGpBwYzC/ML8nJgAQFZOVmZmWkpyssflsOxS7G06EVTgBtsOmHrAisDfP3/r
mxkM6EPx/1/7qEUPMW3TNm3TNm3TNm3TNm3TNm3T9gjsr3wPQ+ROfVDnxIYi
8weaFr7+AI96R4kiZaJyLuVN2G+lwfemz1rC/1/Ai97i17DtSflzigtS7W8f
1WZRPaFICS9Kx+Blmz1lzuaTzT462N+0d85DhPmj7uIlq1asWL1u08Z18yaP
v1CQRaa2smLd0eaANhSNRKLDT0R7a+JHP7xujpk779BmxIBHkIZ+ZbLn7yha
ShuSItOMHI7qmmEahinT/lCoseitKgCfsaFJiYbD4BOGpiv69Xi5Gh7uAfL7
hnVNk4ywqRsi3d/SdH7/6opTg1RT8YTfiKYtO3RT0BVVkcMRQwtHH2uZPP81
5fpj4XBElXl/6+WDm8pn5mW47EjhFR8d9wY+djyUv77+dhBeWQgDtdW79xw8
em7/5PU3nXVPanRP09HqlXOz3H9uxpUdVGBTvEYF8DM31t/olzWJZzpX2+AP
7EQCEYjokhu168tmJDvedISaeZ7hL2bGg7fN2lLX2B5URJYd3IghiQ1/aM4Z
KW+86x77LrKGFXoWxAmAsRVvO375Zr+kcJxwNnZKCU8FLQv+eK0w5H5JpjaN
/1p8TnXdpaYOTuE5hRpTiLAq/vZNntRdZyjykQcPge0ZS/edvHyjg1EEQTQb
suGbUZwkiYQjYB849LQV3IxqevNYXiP0NQEAz8Ldp69ev9PFKJIkqcJWiIqX
HL904eLeeLlSHh78zZ/FU4sqDnARU5H2JpEuwuFyuT3upNSMOdXX2jp7ur2c
IomybNwpRMiC1Yf7wpqaIP//DR+1Exklm+tvD/CGYSiqdP3sqePHTxw/cfLs
udPnWgIcz9OUIIPKFxWuNnn2uX5WkXmRk9omSlL2lzyF3ZNTsrHmUjejh2PR
xyILU5DCJIy6BsmwAFWFqTnBf0mqen3h0g5TFiXIzzHaE9Q/QBxpM5ZsO97U
HZIECQory6qhMoN0yM9wvKzJAhMK0iw0juUESdH04O7yVk0U4aWtrDCb7JPH
RxF73tI955sHeRkWj6FYMLQltvFUqz/IU5yk+S+ea+ihKJrnYAJ6KSYSw11e
dgj2AtAN6WDwSiLxjyiSddEnwnt04NBFnguxHC0MriLsBWdpjuPEhlKXK2X2
vm5OgQT5WMIN1n9r2+oOVVZU7uTKhQsWJCi/kdYCBcjFWCiNyIcYlmL2IAhm
K2gVeelqjtNNODBy5fVgX09Xe8vtG9car57bVryVA/2A3etAEuf/E+eGZFOH
AQiyLAo0RTMDJSiGO13HdZVdSiS7SZfLSS46um392uUrllRWLF6yuMBZI7EM
25qH2BLn/6PbpEDA7/UHgwwvyUqIYgfmoQRBek5GzYEZLrebJJ0u3DUzM9nj
JIF50tLI9JsSS0unrIn8TiqdO7N4bsnCispla6vODoRA/aMoZp/bZyo9OTgJ
L7xJAlQIDlN/4KSbdKTuYRiWV7ZbF3V4/2/U5t7YHQoEdswoXNWiiMrNdDsR
E/yPpZuCsRegCvLXXwqyrKDIFukPoK+7f/C3s5ahZLW/h5N40aglcAcMNYbs
exh1Qro96dvawTBlBVGTl0wJ/37hIAUmWFXlOSlQGksz5oB5LxzgX3dSclo1
K9A81P6Q6fnWo0P+fxtNibwAis9tdbqcGAHKDwNPQM17UsiiLp6iJJ7m1Hfc
JKdkt5baxAUFBTIPdzqT3a5YygG7wwXQk91JSQfByotXIx/82ouvnpka/r/7
PEdxosj37SCJFIBvh9lfCReoezfhqQ4BJyWrz42Ojn40f2p2q+RJyP+nG9el
2cjkJLczFnJIkilJhHt2jV/gFdUQQ5//yJ15U7RXJo8ywRDVtCSDsOEw0AZG
vIDadyUvONrFcJIoDl7dNaNolsfatJevG1FDh4LBAwVJGIrjTrfLRbrIpOTU
hXV9UIon0Lh7QZrDBlzRFMGj+G4qRPdVz0hy2GwA353kJJM85EYfB6bmzqPL
s3HLFr3x8e3VLMMM7J6d6QYVAPodaAHSVXyZDtLNO+e4bVOLDr4d28ZSQe+e
+XmpThuUPvCQjsI9d/oDnTVFj0KpEeCDZebg/pL8VA/o+u4kMn39Na+/72zZ
1LibB+ER5xGZoX2HFhakgfk2yZ1UWt/nHWzelDLVwgv3DV/h5TmeOrZ4Vrbb
QbqyqtqDA73nS6Y89fmY2YoOBiWYVKq9qrQgs6BkxekA7es/lDXVve6+YWUt
qiaIYK1pDpw9e2eQCbAMPXhwLBzyETyBo5KF0XiaGR56zIwM6VBpLFSbBHfZ
dptjqiRHXjd7QbcZi2kNh6OGInGQ/38+z+7weLJmLFw8O3XKq8DTdFc3wJYy
YkZ1UQWzsNw1L6t4cVV9i/DMO/z7E91ovaXB05XdvXcjpqGHTdOIxZoNvTOw
/xr79Ec+8/nPPf9ctH3JVB4Qowi5QVSjw6DqIzC7zRPPvP8TL3zvO5/58pc/
/ZH33Hvsyaf0/gNTSoBHiDIhGn0iGgkP3Xvfhz//zX9/+Ze/+Mm3PnQvAnNT
DT35zrvMmYmzkSduKEoUXo+M3HvX+//hhW+/+PNf/vw/vvm5Z98xwgdpXjHu
vuODn/vCs5ctzjX9RnSbMy1n/ul3f/lfvv/yf/7iJ9/95089+5QJVkJgwRF9
54e/8PVv/es/P3dz4lPRRM3umbtxyxnto//+85e//7VPf+hvh3WB5UXzyWef
/6evfPPfv/PCh6Mdx9dlTtkEiLp2jnzw3uNf/sSH/+G9T0ZhNLL55Aee/7/f
+8X//OHXX3gX17R/1ewMDzl1868NOfbCJ+/1343q0YgWHn7nh7/07Z/95g+v
/vrlf33hvUdKCzMBtn0qvZ8NWfa+d0VbhOiTz3zg41/59//83R//51c/+vqn
/v4dj420l2JY/MWezWbZ9R2KFN999pmg8dEXvv9fv//dr1/+zj994u/eMWKa
ZrRv0wTSOxAZs9mt2YOgSJLytS9//Pnv/OsPvvu1f/zQu5+4O2wa8FfL8gk3
+Vi18dzfnsy1plPYkPbvfl4/cfNyaOjJoehINDIEwHXp/OyJvj55yZmvgF3Q
K3usaQIUmd24v8yRMetGNBodHo5EDE1RuMMTUmvnNkWUx77xpfc/E1xmVb9M
SiXt9qwrT4bB7GMamsQHd46Lw75vtkV9QzpDSTIvRhuskmaCJCqU2BNmZFXW
wdQbqJ7wmysDUUmPiKKhCOG28amaE7HMZVUUcD88E5qIgY4iC71Dmtl9lRJl
idcGCyzFR+zFXTLLhujTE5QL9JTuqKI1zEg97WdFVqRLLZ2TUDTjikJTodsT
aF6hSG5zRJUv5OHYgpZBsCfkV1s8J+J7hVBwYPVE8J6LAP5clg1sTo52e1la
3GU1/7+cZoL1SXG/FUXt+1RNu5qLY7jHUdbDMIxYb7EuTsGJINM9AaccRZYx
mt5WZHfiGEm6Tos0IzZaK0Bh3xvqC12M/502JK/dML1l9lgWWhe2nKJYoaPA
0vJnNPi7/TsnmFYcdboubsIdDkjAJh2pd3hO8i+0Et+2oNvb1xU/oy+o/ZBm
1LnxMRI2SdqOyrQobrBUf2CLt6fvRtz7dxTJuGnotwtskH6OwQZA1/GcqLfO
jPPmyZrr5GCX71JmPPEJFN0u6qHlOBGjX4MKcNpXw4PgoXUW8t/zbg/0UEfj
eX4UyW/TlBNuDIfLDhQSMe0bGEXRI1stxF/aP+CjquMwKlHEvks0BkpRO+aw
2aEqqx3HdnGaqke3W4h/mPJTgZVxehRwvC26fNgNFqJ2mAYTPIY9+QKkzg1V
W8f/L+5jQ2xPXEaTbROnds0DhYcGagO3Y+sHRElXLSz/7OssxfAtcTt06iWV
P+x24Hb7GBEIcWxnBV7QtOFdFuk/FB3soUI0K13NiKe+Ue5TBxZjTkj/B/iI
ffZJwRR5UTWGE+Q/3zd39aAQpDiWF07EW3cRBxTlcgYe4//jDjT3RECTVYmX
FHNklxX4rlqRD1KMwFHMgXiE4uybBlflcBDA94KO7zpiKJKmKbykmnetwLct
ZwSKEjWBCYaqxnt/FKz59L4Se4yBbyPsaZcNUdEgHVAzRixof9RVI7EhQewa
YIO+eLkvHHtFuSEdg6Ij4Jc9/XI4lrNaVYzwyG4L9AdcJwSKbVuTc0oIepfH
2e+lX1G5GhI0v5OAEhSpl8KqqkIOvmGOWND/7JkXaap7oY08JNO9i8YROlFk
VpceXIWN0e+BB069HIG0YU1VjaGhhPRP4NWjjUypaKfZsySZVCtz3eNTX6DI
koDWVwZvIwkoBO5IvxoeUx/QwsLx1ATw4SfxnAVbrtAsW4O7k46KXHucfPb2
KlZtLs+6L8BAODKaIirofJKmx1NreHhLmlmyYlvdzf4AzdHcAYfbdVTkm8e5
PxQBP1cbls4h4brLQZBExs1wjDNtiK07EpD/IY5wgmqausxyHKucdDldJxXp
9ozx+OmXJeVc5VzSDpXgnS5nxo2wBtMPGcztqgTiL4hL98JhXRZZVuAEoyML
K7qjiNfj7Kjyb4tc7ewsG5RgIAkXmXUzrOga+GzoxsbJH0qi2Ll7pqkBNyqI
gqxGa2ceCQnStTi5d+Z0ynSVi8AgAZ8k3a6cWzpYeEQjeuD6msmfQKDY2acj
hipJvMjLmjoUvu4TWP5C5vj+vLBf86+zAXQHDI3wEHm3Tc2IDEW1QOPKBI5g
bKfvmbqqQLFByAIfgbrzPTvGy8zalgV030onScbkF9xuV/5tyL8fGgL4k5c/
AHbyqTA86YiJ3ap62JDEYP2icaesqG0VpYu7wI4HBkO43G7ncioSjkRHhrVg
0/JE8I8/DvHBEygQX4soXOPa4nH0d9S+hlbVvvl2wgHFX8jkha2xWN3HHjMS
Kj8K8OE5E5xHNC2m+tuyfX7ReHzbWkoVtPZluXlFc8qXb6kfgNoHkaGRYd13
dUKVxofAR48MG2HTALWv6rququHgvvKZs8bH82LraVWUw2x3rzfA8MDrxfj/
AN/wXaq0Tdr9osihIR0MYsOIaXmoOn9myeyZc8erTxEbWdA/wXPCzqLIMqgo
8InIyJDuO78ogfIjB4fDUMQhbEQi8NCrad38WSUrc8YViKhWQYMPDZnhaNgI
Q/J/dGho6LEnHo+ELiSw/USR3YYE5hFZkhUw9Pj26tKZs1buGo+Pre0fHPT1
+/p7oXX39HR1dba1tLW1NNVvfLtg8bfETy0tqyivWFSxaDH4e9GcdALDU7Lj
ODQiK7cgH/zOys7Jzc7OysnMSE9JghlRHiV9YixGFsacWSa8+yCNAZ2IXDDu
p4nHPk/btE3btE3btE3btE3btE3btD1K+yvfwThykh9FUPcEhiLF/VdK/ryD
fuQbShSZJ6j1yfexX3uIh+sT1vD/57By76z7gDZP0ZL16yqLXI+Q/1/MSPIR
0ANQz8z1pztYI2LKgcb1aW/7ADZ3UcXSFUuXr96wcd3q+ZM//prHqBJbv3n7
8WZOj4Z13TAij99lry16y29Ek+btbuE00wS/wxFNaoybK+KhHmBOIKrohgJz
3iiKGdYV0dd0ttPXt37ieHs0bUldX2QkahqQ/w+PTW+7Jn0AmNP1GAyz0yIR
U/K3ntqzYVGeE9vc7RvcMNGhvm3WgVYxbCiqKsqmroGHHm6bfFRwUsO9u8Nh
ie65WrNq1n2KA+rY2093lsc9VURtpcd6VACvKJI4ULNpW/Xu/cd2TToqGCVq
74bunNhcmjXG4YdkdtSGpJ0N8mfihH+hqH3hmR4ZXpgIHNMY031FbUQixJDC
rXOSxxxQ7FL/vq0d4PvHxwAA+PJzfTJoL5j5p6F4nHjmZCzGMbe96TwPDIt+
kat+8IwPRezlZ/uFmOi8LPessOjkMR6FdU5Alc+NE2F1LrkwIKqqLIiqwp2N
hWZOhcsGDrhSMLT2B/N9pm29FZBVKPsO/ng3OMa8oO0h9VoeFhya80DE1Lny
sQRjY/x/xF5Q5wOF1zQNnsPzVwrgi9iMtVs2bYifLGRy2OAfzD27fUiX9Isp
Tie864UcsOSMpU0yFJwH+GDQ8/1bcATLXVPXI/O8cMcK/v39buBILdlce1PW
deAO75w6WVd35Ghd/akzZ64OxOj4Iqh7TWb9FwvQ/EM9vKIKgiB1vv188XbF
jo0CImvW8n0NXt6MaCoYY5LMClAXGPQ4kWEZhoHke0GSBMbXsgrJa9RVSRJ5
nlX7EsQHf7Ck3LJNtQ1dg6wsi8C5GSo9GGJ9IZ6TVJGng74gxbIczzOhoM/b
01qbRp7TZUkRYQYs+cyk9V/GjJyxbOfp2wMMqF4mCErKK0zD6TZ/UGBZSfFf
OHnmWk+A5kSZDw30dXe23W6sL0XXiHJsLID675yRmALJ6vMdIQF0LUkAlemj
qCDvX+XAZp6lIAf48gInTqSWHLxDBQc7bjc1XDhbf3j3EtJ9zRBVXWmp3bGj
enVimXGTGw1VU2UZlEQU+GCQDdIHEMRuz29RRLkx045BgRPX0vpd2zavXbm0
omzB/FlJ9jIaXhldyrXbwOsJwSN4fVTSZEi1EgSeYwIM3VeOYBhJHjMUabnN
EYv0s9nzkkjCDkOfMEiF3iOLIhdYaMFCDEW3D0uSBPUM4LWeFKDYvlIUZjs/
NqQHiux4LN0LhtpxMEnYYSZ2J4mnX5NFTr1lwbgHlr55/eq16zZt2bZj18H6
G15/kN4HBoS9uDui9OWhMNWNDQPQY0l/MBy321P3ULQgmces5ODGvABOpld1
DQZC1QUFK28LknYnHYXwNswOxa8x+AR2Z1HVlSDFyKpeZZ3bRV+7WkPIWppR
9b5eVuRE/ahjTHQ79hcsPo5nHPRKPMXwoqavmQoylG1BPyeovKZyjBRYaLPH
kGMtj8Gel3IAoHMsL7FTxf/PamYYRYACA8xmF6h4DIs9QiznlhNf4GUDlExT
cuTZG44p2ay5r/CUpEqiEtiAEzhMdgMDHmHHc+COjPMSxbBK5Pnv/3r08NTw
/4mTIi0qEn1lAYrBdC+wAmwxAQYcS6nlWVA16sdGR/8nkjY1m1XHEZERhJ7N
bsSOwWg/2O9A13c47CmLz9IcL8ka2/EufX/21PCxUGw/R9GDW1AEAMNoSzvM
dobZsLTVV/wCKwmh1qPLXc4scoouvlFsJxukWgsQ2Og2PCb/AOohbU0jBaZ/
ruPwkiw72KI4poyNhm4JUlxDJlgRwXqPZbwBHW8Hy4d4pmlrIdyXTe0hxWaW
Yq9kxTjH0N3jYPLxrLjlD4aurki3PYITq418IHg1C7GNBXnjDrujtL6339+8
Ne1RcLBRdLNAhxqyQf3bY5G+ePaedt9A99Eii9NMTgCPEHUyS1/NBY4/Nvzd
yxu9/YM3ViWQ4+gvsqTtAbAWaJkF/S3wOTn7vYG+3pMJaiw9rKGOssuCwICF
7T4XaPnUotUNweDgwL7kR8T/dy4ZNMBSSFHCUt3i5XvPtg3S/pBvL2RDoDab
ZUEvE5pjEaWBDY1mRJ+4SzGazDMU79+fBBZfwFxJUy7CYMvpgGHFuh6OREww
B4I9B7U/y+lOylpQ1dBxeWOCG423t+Smx6DOl6YbQ6qgqTwrns6eue64733f
+vXob77Ynz+1/H980ZXQsKHDcDzwCGCFZ9778JPG5376p9Ff/8uzwu0ThxZM
HXqM/79elqNDpgG22Wb06fd/8msv/n509Pc/+cJjncc3La1YWLFi8pl2Hsoc
JWzYGNK06NPP/dP3/+tPo79/+Z/ezTbuXjF/1oyZs+eVLtlcnTR1DQBmGyKz
RnjiA//4tZ/8fvRPv/7uP4501a8rK87PzMyfObt81a7zA/e4vKnDd7iz5+1m
vvHr0dFXX/qn93JNB9eX5qUmp2blzyxbX9emfuD/vvQ/32xPnyp8R/EJKvjc
70d/+51PDncc2VBRnJ+dkZmZN3/ljkuBJz/7o1//4b+//6nwgXi0MEvMlmyM
/unHn/4Q07Bn1byCrMzs3KIFK3fUt6h/939+/D+vvvKVdwXPbFiQlzRl3c+G
nHp/36Vtq8tmFOTnFc5auLH2BvvMp779s9+9+usfv+fa7sUzMz3OKZNcilnq
tuVLl8ybP3Pe0q2n2oznvvrir//46n9+/ysfee+TOwiSdGBxlj1wb2bZIxEV
q1Zs2VR72fv0p//tF7/7029f+fbnP/jMiBGOXJ8Rn90yhmyZCpZz/bXuJz/5
rZ//zx9f/cUPv/qJDzwzBByhbqrHJ2SX2koaxcHNadb0CdTe+dPfvvz8Nz/z
yY89987H74ajEF41BzZMRIHHZ+77xOjo6I+qLYEHHfD4N9/TNGfFojNaxBwe
CkfDqizLN+ZPVLr0Wk6898P/98kP+SotmZVRBCufk+UkM86NwIRopqGLPFc/
YWhx9uWIyfpVjaL0O2kWdQEMbKlszl1PygI8YZZ5at8EdY8iWQ1gmcB7+ymK
VgbyrNwRoIWHDwdkSZFYat+EvJLkC1HVGDh64nKzl+Lpedb6ZHJmu8bzDHNi
glstsEI/EZaUtlLP0gNXekK0uMraCwBb2jmdZdjGCdoebMv2gta5XYzhOesO
XB2gZUvYh28AwHdLDNNfPsG3oshaRZXaZqNOJ7lwQ72Pleut9csoUkoL1MEJ
DnVRZFbAUPsW2HCMxApqbtGceG0iFzFJy9wTFNpmTQCPeppMjVluc8Tyv+/t
oAShPQ5dKQHDa0K97JGJio/uMVRpJ2QA2h1Oe1lrUBQGS62ER7Nv+Ht8yyd4
EZlPGeZpjwNH7TaMwN3HQqLErbQSH1nU2++9WTjB0HM1hsMdhXYHPI/FnCSy
U2BF7YiVHQCrHuj2Ho+Xfx3ib1R1bgXoe7ETScKFruQEUROXWoifcra/a3BX
XNeHItndplbnguz/2Hk0aVvEiaI8ss1C/ntRc0+vf1X8FQe62zB6ZqJYjIBu
wzAnvoqXJDVqpQda1dcX7Ikb0QGK32Uqu+AxPBrLQ4k58M0c2CsN77cKH0Xt
RwNB9k7cNQ+K7NC09nx4Ghy7mAUDwL5LVRR1+IBV/H8bMqeHCnAX4wntoUhq
S1jcgTvuH0TYQDPknVVkTRnaZ1n9z7keCoX4I564+Mt5raPIjkP9g1iQEl5Z
3yYKqjx00CL8wpqekC/E8vHkH4BjPKsrR6AaMLyPADum2XUBloKXVsOHrOH/
bxsQggEAH1odV/6h0K8HF9mImBqyDV900acpiihomjZkCT5xQBRCVIhlmf54
jDYU2aIaN9JxAp4GO/AlPWARoMgKTAU8UmMBPrqI4llOENhQoGNWvBWd84Km
7ncQBOZwYE73NgoKsMuKpJj6iAX9H3XukVhWlvq9dOhWXpy9FlLYq1BLbATh
IJyEg6xiDMg/V2ES8GELym8j9ouU0LqqrJWjG7Li4a/m5LZ8MOlDeIysog0N
8v9hUuLE6x8s6rCDXKinDMm6LbIX0uO1f60mnc2E2c/BCHC4tzJhFYx9UPzo
sJLQRSC8dgT/OM6z9Fm3I/eOzJ9OicP/d17V+DOLMhwElAQnXFsZQ1MkUAMG
31iZ6Nk05iCzt/YzoRrMmXdHYuvGux8UyezSuGsHisb6P+HeSoc1GI0i9BxN
SH2HnFG6fMu++qYOH0Wx+3Ei55bE144vD1j4+A22+XypHYd62M4kUP+arnLe
5hPL468VHspQxwGOVwxNU6Dwv3zCaS/okIWaeO5vFaPzdy6XI/BGyO1M3hIy
TYP1tjQcXJTA6gd1nHs6aupgDQfDPvTOTGxjgOfibLxQdDsvBS8cmIPZCcLl
cqVtozVdZ/pbL+8rT2D/i2LH7xmGIssCxzKCPHy6qiPISrvGhwSjWI0ktFUt
yQClh/z39F2Mapict/XirlJs8r0ftR972tRggI/ACbIUvcvQAcG7LM7wd57Q
uMsF6SSOESSZ5E7fS2vhCDfQfHHn/AQCmFH0yD3Qj2UJmCarxpBM0fT+pDhv
dJ83+OMk4cLBWCE9nqz9vDkU5vpbLu6cm8ABDIoevhc1NUWGzlxU9IjOcBdz
470x6aqhNKSTLii/4HKTMy8b5nCE97Ze2FmSwEUsih56Iho2VNACKii/FjbF
5rK4rZl8zVDEtXanAwPLLrKwTgyHR4YEb9vFHfMSwUdqngib0JMDV67pmmoG
1sbvzknXdD7sW5GTN3N2+er9d5SwHh6OcP3N57fPSaj+a+6aYUOHYX0wrk7T
jk4g5pF23ZS1KNfVOxhghJhWgAHbv/nC9kQ0aVFk74gZNvUYnR/+uTZOemTM
bBk3I7oZ0fWwrsb4/2Dmi5h0/53zVUWThwf4++5GIPM/YobDYSPcE9MSiFMg
W17XY0OR4WED1Dp4dyQcjUTvRnnQ/tsTkX9EkZ0RFeouqIoKMwtsjt2ux5nO
0Jwmyu8fDHh7B/oH+iD9v6ujs/nKyUNVCxLZfII1fUV55eLFSxYtXry4YtE8
1/2fxnlnSl5+fn5hQXZuXl5OVnZ6Wlpykod04I80e2Is1NX2sBkKH+4r32Rv
+cbxn3s0l8LTNm3TNm3TNm3TNm3TNm3TNm2W2F85/x/Lcj+ivGbxDEVmdp+b
82b+/6NsEBQpEbRjnvvYr//4EfL/ObW78L6aH5Y6e8WWTSuKkx4m2Noa5hPA
V5RDOILg6XM3nu9izWhUY1qqc9/q++EreGpRWUXZwopFS1euXLp0dkL8f4E+
UbX7fDunR01N18PDd+/KreveKqMymrbkYJOXh/l6ZVXVVenqpPn/SLE/DPU0
NVPXofypxA3eOba7IxSomfhKJXldEzcmlqnDk2vw163J8++zu0Y0VRI0M6wF
Ws7vWlmW70KRpW3eCWO/kMwjbFiHV48SL6mypoWHhjsmHxWc1HhvOKLRfY1H
N85NHTt5Bd15VVdocG3cY3U0/5xkKhKoeUkQemt37j9w8PCZfZMOS0fxg2r7
mery7DEK/2uDybF3kL4WJ/UPihReMjRJEmVJ5LzHFzhRyP8knAkMhszy+0m9
3jCOUXTuTdY/PqgERfIvwdYCDyAw7Rs8qBX0d/RN0Pct94rMH3wwtBTCA2SR
F0WO6t41edGJB+Dj/DD9tiY0jZPVLrwkQpFWUHx64Pyc+y02BTMois7o15WB
Bw/Wi68LvMBLiswxvtZqDzJ1x4/29Yquy2vgUeufXTw6v1nmOU6WBTbo7TpX
Oib6m1Iwo6gg17pDYFgm1JZ8PqyIalMajmE2xA4l3wnPsg6J40VZERhqoL1h
G2TkpJTtvdXbPzBw2aK0jGMsfFdBeQ2jqiKv3jx69PCh/TWHDh85cuyyXxUl
WHgqMNB6sWa2DXEsa2Q0UwM+uCsR/fnXih0LqSEy5ldd7OTDqqRwlCBTvCiJ
kOQvcqDlWV6g/D1ttxtP711MIs7drA7ARY6VuxNjBYwV2+7JX7Sz/oZXVCVN
4RWJ9oU4P8WxQkxrhGUYjqP6mxvOHK/dtXFRGoJVi/DWTmA4Wm0frxf+lxme
NmfNgUsdQUFiKJYKsQrddKEnGBI4lhMDV86ev3ynP8jyvqaju7auXVG5YGY6
ii4KqTIUAhEkhd2UkP4Emr+x7paXg4IuAs/4aTokUOtcjlnnGFnm+cbKJMLh
yizZdPH4jmXzZhXlZqV7SBuSfNEQFUWjO2/duHEiAf19YOQZSVSBU+cFAbiX
UIinxVrUhtkKW3XVaHotChcvTPE4sRgbGvyffUHIkBWjf3N+RkZ6cmKVb683
BVngeJh4hBdZShQGFyEOh8tZF9alCSILHdXQEQtbLBh2KFI1AuNoYrQvI6xQ
gjRYBhM/O48Nyd7C+B9KvSJxnNSZa4EONIrkHtyzZ/++Q4eP1p28cK1t0B9i
9oH6thW06WJXPL4Pinu2+yhOUC9ZlA3VjsNgQhzDHWRSVlWXL+DfmpNZ0cCJ
enMcZQ/nrE1nfKGQIOk1FhEC37SQJw5SIVHs6qRkgdePji9h6oF+gQuGWE43
Nk7BBIQi870sLwu6xDNCnMxe7lqZD1FBVmDE4NypmADRjGaWh46VV+iqcatg
dHmA9fp4mtGi7784NXwgzxWBVTTgE4Lbxsfh5DZxgVCQNz/zg/8aPTQ1/H/n
aZkFM53/ZMm4FTCadIAKhYCLft/o6G/0zKnZqhJHZTDt3VowDt2WXH7ST9EM
K4Q63iltt4j486Chjhqe5ttnj1sapq487+UZlgs0H1+bhnssSnwaB38PS3N1
jgcqN2NDQ5CnWab9yNIcArqMqeP/V9EUt+8Bsrm9mmWCTKCpesbUZoCGtpnz
M3vfjO9Zc8c/6GtcnwU7xVQfkGwSAqH9b8S3zzne0zfYuj3H/giOy1DbFomm
Dr0BP2Nbq6+/5/j8xGSGHhYeIesFhj7459yneMVlb1//7fUJRBn+RZa8I8Cy
4qnXtv+p27t9fQPn5j6iWAvHokawBuKlQAUM8kedFRcDfl/wcPqjwAaGLaUM
nuVkIexdl5tZvKRukA8x1AF3TCHPbp9yqVK8Ek77giTrd5XbTb1BgaWl4L5U
mwNqADlsU35UimZ3RGRJkiUNnvFIIidIvWtTnO7kok1XI+958nqiG423M1vm
jWEJyutphimKKhSX25sGWuHvv/3fr/7o05ELuVOLb196i45qUAxMUXWFl/Sh
d3/6k5976Q+/+sa7mquL3TZsijsAvlZXzIgqcwxvPvaej3/t5d+N/u4/nhfP
r8zEYLpJcqp9P1ESNGSwzx5+/xd/8JvR0Z9/5V7z7rJkqL1EOJ2kk8CwqQs3
s9kJD+Heyjzzsa+99Oro7/794+L5tTNcdhuUIXGShBO4A0dh1awp5P+nZS67
/ZGX/jT6i6/ea923MIsksViwtwOzIRiRWrKv533f/ezCKcJHyS3Cxz/43T/+
4B+402sLCDuGEYTTgUHxOcyVv77p7hdeGf3TfygVU9UBUcez//3CO29Wz3Lj
ABPHYZ4zHMMcuSuO+j74vVdHf/X1d7XvKyGnkIFfvjrFAZZVWIzgAAruyird
cWPoiy+Pjv7sw/SpdcWpDqhCN2XwoP2dpMvpJjC7HXcWrD3Dffg7YAj89/c+
+9wZNwn7/viyozEilFVGuEkCfCE5d1fLvRd+Pjr6x1e+8Ym/GdbM3hJ7HOw/
3xJZ9gBgz5+35Dj93Pd+Pzr62x99+cP3IpDgYV6fgAIPcNN3XTu7wGPRpISV
3rn3zy+P/vG/f/T1j7/nCTj9yIqkU/snTK7tWfrE6Ojo93Za0ylsSOfoLz98
5NyeC6yq6TC+GmxB1dbFE10E4Wva2Pf+/Idf/mTvAov4/5m1K/NsmOdERDJ0
w4wpa56NF4ofe7PzoDIk0RHDPyA2P6hTO1mzEYTd7qx+XBZUU1NEnt47QSw6
ijhqdZnvamxo7Q4IgzMtIz9CK264EFQUSeCovRMcK6KofY+myD0rZi7e3ww2
pBMx1SdpnqJ2VRA5pnYiVWnIxJOl/mXupNnbmwIhMaHsq3G+Pu2CznPcpYlE
ZVGkkteVnoWYM23mssM9jGoN+/F1w/cqDN0xkaoCiszwh2XfYpQgyKxZO3sF
5aK1GyMUWUCx/m0TuBUUcd8I6+wauwNzONIWHw9JSvOELmJylrplkL0+kfIG
iu43dWWXA4NEKPeas0FZ7rEy/Tuo/oNBL101QZOiyEJeNc4kYzEdWHzWmYAk
ByutbH9b7m1fb2fxRPCeO1HjTh6Og+0Q7iRcW72iLG20dF9S2dczEE98fQx/
l6nTi20EBjZkhJPEqsBeUY+Xr3bSZt/l7fJui7/OQpECn67sh1KcNpvdQbiw
bZKoqNH1FuU/h5Z8bqC3tyL+a6j9hGnczITiE1Cd0EFim2VeUYZ2WoaPIsUt
vd7W+BWKInM5k1uOwsKjMBOwM6kGuEo1ak3+9TGINQPe0JW4NzrA79eb6nmX
fYyBb4eZcGtUMFsN7bWO/48d9/no43EnPlA3QT20GIGXQCgKN2Ru5x5NVpRh
q/j3kP/f7fczcQiQsYc7ZGqXPFB8AqwHwcbIQeScVUVFiuyxKhwHKbwa8Ieo
NfFfzeg12TU2uCuxo1CXGUsuvijzohi2qv4zq9upwRDnK4+Pv17VmrNxB/S9
AM+Zv/1yQxdkoEeswSfWd/LBQIDhOmbFfR27YsgHHKQDbBBwJHPzuT7d1CVZ
15SwJe2P7RREKkjRNHc9nswbmHd9erDM5oT517GsK0YYLNIkWdYNNWoJfjnD
0wxDM0HqfLzYHxTZxEu30nCCAPD4wkEDks9hLgRTtwIfdexRaRrUAEXRR+MG
1GDnJeYwAfnnoAeU9ZuqrirgAXRTs6L/o879IsW2rtsVpB88/B57Hcnukr0r
YCwE2BvbS/qjug4po7ph6BEL9E9sjgMc27MAKQsxTHWcHQVY9bFSz8YcR0yB
wT5vIGrEkkGYQ1HNvzwx/DHp8TqWPkXiFRRPbYpzygNmXoUNtKx1OcAIIByz
+qIAXDENnb22uSiRBSBc9oOtJ1neRvn3go4VEqnV8d6HndU5Uaj1wIQUBDG3
d0jRNFXob9ianVDZibzZC1dXHTh9fZCiud0YXuGXQkviPCXiuWXwsgpWXvBq
3lHWF9Z1oe/SzvK0yWffhjW/0x8UNM0wNCZIy7UEWhkS/YvjvTW3CzR45JLb
5nS4PGRFX9gUes7tWFSYUPwsip1/Zgj4EYVnaZrVW5MdNYw4uCjeW+cPqoYu
Xc6CqQGSyUqvrnKtJzaX5ySS/AYsaI4/Zeow9QPDspwcPl4zEJJCpfEu/SsZ
URe6tibbnZD/vzygKnxH3caSLGecr314fOTYPcj/l6RY+gUzSgcC6rV4Oy/b
Wln0n9ic48QdTsKTvCqkKmJH3YbS7MTwUag/APy4AI/aJT3KB/nBOfGKb9ui
izdnekDXw52kx7OONjSAv25+VkKbL9R29MmwrkD9ATG2klU5bl28xSRqrza0
9kKcBNMPqP7kg2Doi13H1pVkJXT6gdqOPBExYfAJWEZJCuhh2hEsrtylfY+h
KDtscPKx4+SKftMwhK5ja+Ynil/7hGloSkxKBQbBDN1MjhvTgtr36qIeXJae
VTBz/vKjftM0IhLAn5uZGD566IlwBPQAGXozRTLo0rj5kICH3KuBtQbV3NE/
GBIBum6Gxc4jq+ZkJHQiDHazj0UjYUODise6qmtVqC1uSCmKH4CqxLoaE0uQ
QVXpBtdas2J2ekI3AiiybyQSHYqETdMMh43oWecEAa2o89iwaUbCmhkBzxuO
RoYiUan10Kq5ieJX6VpkCKADD6xpd3Li1z4wxwEmEAhQAW8w6PcO9PX0dnXe
OLpqdmZCwx/gp8AQ9pUrlq9Ytqxycc5bvNUzs6hw5syi/MLCwvyc7PS01GQ3
Yfl94Nv48ljb/G/x/+N8zLKnmLZpm7Zpm7Zpm7Zpm7Zpm7Zpm3r7K9/DYFnO
/1X+f3H3mf9V/v98wagbz/9/mI9axP9njd78+ydetuRZy9atWjTD9XZPYF3I
GTJH0PWDoAGwtJKqc50cPOGhr69LfRv+P542s3RRRVnF4sqly5YtrZy0Aieo
f06TuONbd1/sFsPRsGmY0ZHHnxBvLHmrIrqWnWgJiKoiK6qiwEwpjZPn/88J
RVVdU3R4BKebmsR6bxzc3Rny75r4WHf2FWVoaMjUzYihK6pq6PrtSVOx0Zzu
u/AaMRyNyoE7p7cvmZ9NIEhlmz+4yxX/E/aK3mFTjemlQul53Rwavts1+TzA
SQ1PjgybdE9j7eqZ9yMJIf+/lxpcHfdgz77cH4HHtYqiakLnsQOHj5w4feXI
RJFab2uo45DSdqpqQTpxH/o+/3+fl2nMiPN+27LBiAbRFd57cdNMJwxFwF2J
XIFkLrh/gvmGYYwisxs5f2Wcd1d6w4oiyjI/cHHtWC5OK9zV+G/JPyOJB8YH
Vpb3aZIsCFLw9uFKtzV+IO5hL5LcYEiN42SQF3bD5IiSELh1eHWO7fVnt9pj
o2hOX0TpK3qTW0GRhT0SJ4gy132pduN895hwgsXI9w1bJUdMYfkbnTyClvfK
HMvJ/ut1O9aUwuS7sZ7qTk5OipetYdIGr4Ldp6OGrF722GGiBRSmASWS1/Yp
HC+I3iu1VSvm57lg2Z1zd1+6cet286nJ6488gA3/kFnzdlKmJopqQ23toYP7
9x88cuTI8au0LoFR13Ji94bK4iw3fGfBKcqMRnTN7LGK/4/gKbPW1bdQYeCS
BV6WWQAJL2YgI0YURMl7ZuuS0pk5aS4bgtoq+0yo2iIIak9G4vx/xEZmlW05
1tAnQTFmUVdZihMoVhZUMMFIPOj1En9909zctJQklwPAo4v9Yc3QVVFidW9i
+MCrJhUt332+LSDKPMsznKCxt672hlhFFFSNuXGp4erN1u5Qf+3sJNKJgz4B
n7m421A0VRUFSVAvJdT+aPbq2sY+DsowiwIXZHhaZDe5nXMuC6DilZvLUp0k
mZyRv2qB53WHhLrrTRmGPwgMzXbNS2gJSZ6WZVVXoF+TJJ6mBVY5gqAYVtyp
qcbrKjBvKqF99qChKLp0dcvK5UtKE6Pl2E+GRQWqD0CxCZGlBMG/CMEJN3HU
1KXKsTHxgJNDbZtkRZKU06lvXjhOxlBk213dgBLgYDIPR1RakH2lKI6T+NER
ZSA//rcnnVd4gQ+VWsL/zz984MAhSP+vP3/lWsdgkGL3wGIVtBlyV1bcu3DX
Zh/Nc3JLijUOGHOgsezyBOlOztrS6Q8GN2ZnlF3lZeNOnFAAYsb6U16K5mTz
jEV8LNT2hnU8vpcKqlJXO62IolE3HiFtb48oUjQrGNHdUzD/gC2Rlxc1Wdc5
VgyUj+f/H5YhJZITOIGZEjIUmn5HEDUNjEeVr37wdhXF11Cczw9GiT787JWp
YSMlXxV51YCX7TvGLcLRvFt8MBQSwp/+4ZTx/8lTMg8mHW9dHP5/8j4KGMd+
YHT0t2b6lCw/UOKYIkjq1TevfmLZ4NMWnQmyFMNLVOffKDsypoz/LzDSjawH
l4Z45uoLfpFjhVBr/foUItUxdfx/MKfsfLBus7Zcp0WOY7pPrMxxQpcxdalw
tzEhduubSo8i2H6Jp5jQrT1zEgs4eBjbxAe5HW8uf/LmjmAgeHt7PvYITqw2
cSF61xvx0VknvQO+zr2FU86/hmDYVp5h9r9h85OyuTUw0H/WGp7X28IjznqZ
YfY5XsN3zDvt7fd2VD0qCry7KiBywuHXQnBTq9oH+wcvlyWQZOcvMNRR3iCB
qUUamBebEB0l5wKUP3Rywjy4Fhu+NBSWGE6WIj2rs5JSiw/2iSzLHE2B/H/b
I+L/g0UgcP935RtHL3SLAqMED6RDvguCERZmm57A0KyOiAiWw5oRMcD6HsYl
9qxOJt1pszZdG/nAM7cS3mi9jdkybj0m6/BMSzckGJUnSLsyVpykPvxvv3n1
h58yz2dPPf9/xDRjoYCGKonmE+/9/Ke+9PM//vJrz9zZPjsJx6e4AzjWhzUz
aoC9p2A+9b7nv/GzV0d/+8NPCmdWZhI2FHOSU31U7iylwmBXo979+y+/+PvR
0ZdfePzOjtIUO+SaOQiCcOLo1FWAzUZ4XO6t7Lue/5ef/XH0t//2HHt6VaHL
jthwqACAO8DocxZsmjmF/P/U7DVt//Cz0dFXXnjs9q7STCj3ZscwDMfA0MdT
5+5qeef/++LiqeL/e6rVT330B6/+24eCdavznAAYdxD2GNMJJ3PXXlI/9eKf
Rl8aWjVVGjQo+cFfffHJxi0FhP1+ZlWcBOXGsytret77rd+M/vY7f+89stA1
hQT8hatSHDFk0NYww6Yza97mS8rzP/7D6K8+o17ZOj/dAVphKke/kyAJgoTU
OozMWV7ne+/Xf/Wn0d//6IV/OJfkBK/g49VXrOX/4y6n04bb8aJN18KfefGP
o6O//M5n3/eYEe2Zi74V/986wx055Qd63v3NX/9p9A8vf/UTfzNiKHLYbJzg
dgWgp1ZfPVXqsWgdjs68aH7pJ6MA+tuf+rt33DU0Bfj/cGjnhOKO7sWPj46O
fscy/n/H6G8+c/ba4UYBzD5hA4Zjy/qtBRPFutpXdbEf+OVPvvrZgQWTVh9+
o6FI/qmNM+yY58SQAtOhabIs83Xxjj9i5titPqGwd6NsUO8usOr01eHEMeeu
p+Ctjm4IPL1jgnsVsBY5YGhy75WmAZrX+AWWoL/G/5/ddJnSZUXmqB0TrTlR
dLtuqP4tFRsbgqysrraY/z+z3RBlnjs0ka9FkRWyrofWpy4+3MmJomkd+3Xs
69MvGbwgXJporYUic0NhI7gCd5Re7QoJcviUtctC1LFfo/i24gnh0zqjKrvK
7nS6d7f4BUW7aWX6dQiwgGaCmyZwbyiKnx4ylG24w+Ei5jQM8rLabbEqVNLG
gHB1Ik0BFNmohyNHXXZIP3btamdl3T/fUnzsQMAfn4Ebg58RCEebMsCMAJZk
9jnNgqTyqyxER9CcO/6+OxNUKYpiFyPmwGyYgB53kE7PeXh2fmiCu+LJWeVA
n/fgBCerKLJSNcV1NpgFFAcLUnS/IWkma+WqzP7/sfcm8FEk5/lw93RPd8+h
W0gIISGBJJCQEPctQNwgIW4Q930JECAOoVuau+/7mBkJ9nYSO/YmtuN8iR0f
iZ14nTixncNx7Djx+oizsb2xnThx/Ddf1cCud6Fnl2Va+Jdf9HKjUT9d1VVv
vVX9Ps+7JdQ/tDAdfE63qR3zghgFhTGxB11riZr2zAYH+f++44GhW2kkVVBk
o6kPVGAgQHK5cEiEazNkzbjT4iD/v+zmcLDDXn4BRSYNW/IGEBzCyBR3U0Tx
BbBJ1O84UP/7TYjFIyOxdm+adWdzXL1eiLqxVPvdpJfYr+qKOuoYPopi7bEA
Yx9ToEhuX1xsRlPoqAvMf1/eSV3V9TEH+f9V/ZGwPQEWYDQZ+u3JIEZ0Qf49
DvBXREH3q07pD0D+f0c4zIzU2l+OuhxXt+ME3JS4cKhCgNfchMS9RJtD7c9f
3x0L0EJfuX33zxDi4SoMMgDhcKcmL123+pouq5pDz9+9vFugIzFa6kxz1taW
sM75SRLsCVF37ebj/bBiLyzE6ww+vlFUY1GGjQnH7c54UcR/XdOaXSRJgA3x
GjaeNA1dkyFvbTTj+vPQ6hiZ5zmWjbCPVH64jz8zxoemoxTcIvlOxeFrah3S
7y0t4UD7UWKLyrCSQrMRer0tAxPZpjHn83ASbMXcWSctXYOsRd2wLN0R/r9n
m8QIt1cf4aPRFXZfR8hLOrMNPH6KchO+Q5CCaQDTzbiVdID/jxI7OHa4AVkj
sZHFtvhTgipzfYmHpMAAIPZYoN2GqVtWclQILMgQP5Vfsp9lj3uItQofnmPb
/fMlkVEvFtw/CtoNGZNmPKFHL21rnJzJyXgqeHW7ieobfKyVpJolcaTG7haR
TaYgaQNTXW6CInwH4uCxG+Fzm2fnZXYkRZVU1C1e23KgY4ThIP9/rSQPVtjh
Y4csSVHpWgSEfVTeScvQuTPLpvqwzDbiKf4/mEQJQ6Q5eYcbXSkqPWV2F/Re
SKiqGahBKMLrKThnGuKZeUX+DN9JoNjJ9yWThqrKUFnbuuJDNsuaLT5adBs0
2WRmIwTp9Ree1RXmUG2BN8O4A3UdejEOz1slgRdENd66oofT+4rtXvqXDytg
zPdPcxGUzzOpQxe4I7W56askPSY+2v5iAtKvZVmSFCWZCEejxnm7dEq0mpVU
dXAJRWJuj6fokqFwR2vzMsZH9r0vacIC5IoI6e9JISqEZ9mufnMkdWR7tZck
MRD4TbpiaNzR2bmZvgxEXXufT8Ly87KSSmZNqDxvX1UAna8YA1WY10OCjZd7
xoili0frM8fH9j2XtGAdKxX+0i1D3Yfbz6dFINBqw91Q/AfPa9cMUzjsQPvR
Hc/BtF9dVzRd1zR99FqubSyNIkvA7UUXZeeXTKtZ1qHGLQvg52WaAIKimxKW
FYe1vHS4nMWZ2nRHLkvBAzLZ67eGw5yWMEzL4g7U5WSO3ywZ8UTKmZu6Zhlr
0/HfkZWg/zXTsBJxMF6gXACzv9qX6XE0iiyPKVYykQCLaNy0EifgWZrt8HOt
iyeSiaSVSIwlk8lR8B1ie6Uv01eyKNLYHVMtKwGbZVhdxemyOlF0Bc3SDBOL
0LH7AgB9l1bmZXz0iCLeyvr5i5YsWbhk8cJF89LIfabMW145rbKyfOrUqaUl
RQV52dm+cXgX827tGY9aW49LZHhLfvQE+3/CJmzCJmzCJmzCJmzCJmzC/hfa
//FdDFY47kmN72AoUjFwsupXCUxPe1uJIjWi0X6fvvk2/u+7ft/jb5vf+Toz
GK2n5A1ssnhG3cxpua53uwPHugjg85rcBgE9UxduvxjgZJG+tbvqHesJg8Zn
TZ1ZX19XN7u+Yc78+XMbpz85/7+aUYXYrmVNu69G1Xg8bprWnReeC+97x4IC
hZuvBDl4YCxJsqxoqn7pifn/6PSIJUCqkxk3Vd3QFYnpP314KHKzIW2T0Lrb
iWQidWQHmeiqYRjXn5z/X9QDM+0kAzRdGO7cv3ZRdQGONvVF+uanOV1yLwwl
dVUzFNABiq6bVmLsbm/Wk/P/zz8zmjT4yO1TLXMnp6SMwVjENw3SN2psL0ms
iBmQ/A+r88R6jh8+fupcx7Un5x+jxE5r5NLuZRX5xK+OlVAk63CY3WeX1OJe
EdVESVG4wPXD6xunegg3QVD+rAwmxJSlZX7XGzP6jbtCGnu52zZVRVyLI5oo
iMy1/c1VWdBtOXIS9ug10GnXRHrZo9edO6JwAj98fAWUvUXtv/cJ4B/9n8m3
NWH3I4fLcwYFhhUG9i6uKvS++VGXy/myiGhlyFQv5r29T5D6AZFm+Rub6ssL
/G9qNoyL/oB7rW4agcq38f+R+n6BpunOpspJ2d43lyycpEjKQUoYhHKhuRfi
siDvxF0p/j+sgkdkrxiQWYE5t6yyMIt6AI/XtJ2+0HGx85Aj/P8Hl8Bzpi3c
z+mKKPPHd+/c3ratdceevfsOXuR0WaGP1hfneN8YF1lbovFE3ND0vnSlkh4f
+/73u72T5269OCxASWiBl0VWgjUODODsFEkU5cDWUp/7zWTL0rOqqeuyICj9
+Znz/1F3bsXittO3oirkvsqawsd4IczLkg7uBbgcWVRvLfW9BWbqZRPcmSry
gj6cKf/fU1y7tr1zmFNknoVl6BW+68IwzYDJrhjspbOXLnR2Xhk8VfnWeVZ4
ToVrn8iLXIb6B67KDcduRcBaAp45D5nFjEivyaKmnxOgxE7n/Cyv35fl9097
W04a2SqLsqKArpF1oeWJ1z9ontPw5SNcz2WwqDCsxCh7wMKATevTFO3cW1Rg
3qrQNLVPFSVJCXQcP3a0zU4p5vHNfdgUALooixK4B44WheAchCB95H5d5htS
L6TeFh1CczWBjwtKz9xsv9+XkQI/5P+PgjGmKaps6Ials5w0MgvFccq9Jy4N
ltircfuPS2Ah4Fbcv0CGVrR508aNm7e0tO05cPRM13AowmyGDS65odny/1EX
Ri4PxFhO6J9sKxX/ns2FASeHu3CcIL25S28Ew6HVhbl1FwRZv2Yzs4kpC/f0
x2IMp1xwJu/17ZE8tjYYVcTb3YzKi8b+RxMMstfdpLlYjGZFa3fm6guP3gxS
3scKYDQYPCvHGh4B8O0ShWgsQgvg+c8dl91rfhfPq2D54RV+88MdjLqXx9hw
iKNjkv6b58eHDpR1QWA1TZC06KMiXGjxJT4SCfL6H/zDv/7ywPjw/71HJRYs
AkP7ax4OwVGXd0s4Go0wsZfv3fvlb9rPzUwNJfeBdU85WfLQxUFYnlN3IBSL
xViRDfz+i+2l40PAR/FdHC2dz3k4LsQKl54c4RieAzukjZOyCp0Xv3+AT7Yy
UXrtQ+howaqLMYGjmeDZ5sosF+IaL/kB0P71TCS6+qH/JVp5nqaZnv1zc1LR
wjiBp25gNRth173NtaDZa3pi4Vjfrup31QZ0Ap8J01vfymlBp7YHQ5Gh9urx
rn+dMmwNyzA73tJ+z6LL4UDg/MI01VCdNRQh9shsbPubmS142c7+4ZH+1szK
HD2+USuHBZbb/WDhQbNWdIVHghfnZZrp9niGYlXHWJ7hxf6K1HLorjgYZCKR
k1OdLDnxDobNGYlLDCeJ5s15+R7/lE03RY5lDkH5AbAtGnf6PULMZyDnXta0
Mf7CxrabILpWmH0FsC42BiuCj/dZqWtyd1xMFZVLxBOyAnY3fGRzEZRFqmo+
231u7XhPATT30h0Z7rhM01BAWA52PTtzK1YcDHzgr39y77+/plaM7zDAG86G
75imZoAfcUuTtfjdjyS1z373//2/17/yociZbeucLDRqY9SquGqNmaoiyfqd
Fz/48b/67n/cu/dfr37a6mydWz65sHhy4fgOAKqWT5pJWbZe+NgXX/3JL+/9
7LuffzF4ZHn15LycnNy8/MkVdf5xewCQ+00VbOOeffmPvvz9n9/7xetf/Zjc
2TqvbFIu5cvKzssrrFi8e4QfvwHgIrMKq1v5L/87aPa3P/v8yPH1c6fmeAmC
ALvP4llrjgz/1pd+/J/POMW1fcS8M09K9Mf/596//81H5AubZlcU52Z73Tjl
mzRt4baLxqe+9d/37n3/42enjZcGDUo9c+/n3/nM8127ls0o8lGU1+PLmTS1
bs3x0Euv/OjevZ/8zQcD+xdOzTjfM625kEPWydbZ5YV+v4fyenNKZq7Yd8P6
g7//6b17v/gr9fz6+inZJOEev9GPIp6ZxZMn5eZ7ffnFdc0nYr/9l/8Kuvxn
3/3iJ15u8fg9HsomMRbF7oshOnIDeG5JYcmkqjmbr+h/+HXQ7F/+6Ouf//2X
konExWn2ui8OR//4pMXN57gPfOnf/gc0+3t//ZnfeS5pmnpC2FWclv9ftOvW
pXl+Z3oAxQ599tWf/eC/XvvHv/zs77z4bMIwdEPVjJuL0sV8aNaC37x3796r
Lc5sgl1I53/+rbZs6/KTAiyqCY8VFVU+/vAu6E3DV4/wL//w23/+qUDjIzq1
T2Io4l9VV0wQ+SfuqqYVN3VFFiNbstN9mNphPivFEgme0YNVTuAjUIEUBzvM
rc+DphuGJggjy4m0/P8dlm7wQ2FFVXRlvlPsx9Tv008ci2myKgqBFekSnFFk
g65pdGdXHyNLsrneWZ/srbhlioJAb03P/18gmUZ0+eRjI4wsisZeJ9GhBtJp
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
Y/QJR/kt72TEAk5N8f+tu9Fja7dcFyRe5I5MBnEBhrnc468/gJX1mLKkaPHk
nWfHRFGTBU46NpUkfL7cyTWN1cXjflbrOzumabCwWMKCmlyiKF8qnzStbtXu
a+L7f+9ux5TxHQausk19z4DdH6zsZkGdSUV9tntLB/ubf/y3r/7Ld/7+w8FM
C629i3maFBXW9QNbQM1KjD73wU988dvf/cqrP3jtW3/7yic/9jvPBTePrwvy
1LNmfAzmId79wB/++T9+/z9++f/+60f//KXPfOT9L77w0vs/9AH1WEZKa+9i
KIqXntMSz73w8ie/9O0f/8+9X/z7t7/86ZdffM7QzDvv++Dvfeov/+r3u3PG
Dx/35U2ase+lV77+b//1y1/857/9wxf+8LcSAkNziWc+8P997q/+/pvf/ue/
kFeOHwHeW71m4+m7f/of937++je/+PGXn49LbDQmj/7GR1/56jdeffUfvvDR
0YGDteMGj1Lbf/uVT3/8te/+w+c++hujmiAIUvyFlz/+ha9976f//fXP/LbU
tb9p5uSs8VuCXK7zr33zT+If+50XklCF7pnf/Nhn//rVH/3nf/30tW9/sXvD
gqribB/mTKH3NPjI8j/62Aeiyd969tmXPviHn//av/7H//z8p9/56uf/4MPv
pxsoD3C9NuAOSo+iaO0zH/4d47k/+bMv/dMPf/bzn/3wW1/5zO994KW7d5J9
zWnkZe//r0MbYBTJUb7ylc/88Q9++OMffu9rX/jEh3/r+bFEMjGqnWtIe7rg
mtMzpm4rdIp/P/yL7/7+UJwf+8D7n7l7dyw+mjB1i9lVkq6HqYqWT4Nd0Gtb
nUCH+IuMW9tKps+6aBnxsbHRRNxQ9eHVabn9/t2c+NKrX/vkhwMrMjt9fNPQ
0qm5BD75/AtmwkqAxsvSjXlp5juK+A5ZSTZixSVRF5yiH2NwR+Vre1ZJHXmK
YtfMNMs9ihAHRvWEwUsWfA202lGfPGXTdhpcVRJ67WhQKXjU1RY3TGaIl1RF
kuKOsO9+Ze7pvYYkcMGmdGstiqzQLD28qPwGz4iiZJ5ydFeCugrPWBzN7kmn
uAWZWLoenkfgTaEYL8n6jSd//WZrRJtO02k53ShS0GNpkQU4ReWeZxhRVYec
FcVBkQaeDq5Iy//HjyY1cTVGkB58aYjmZS1a5yj/Hslvi/Kn0/P/m0xT30Ph
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
EN/EXwW6uXc+CddaHLhb0P3exdeCgWD/4UbnZM/Sm2s1y9D0Xt/9InOw/SVt
fYHA0Nml+U/jsA7FNsOa87uoVIjvJvDcZZeCwUBn8+TxLv7+wEouySw3NP8+
OkFVHhwJDfcfmP40xA+AEY0XeZHnb5ZBfgPhLlp9kw0FulaOx0pnY65Je1gV
Blah9UUeyjd52Xmaj0Yv1z6lrkeIOYwB4m8ZBPa3WpZsuMxKPMddmH4/PHgK
ow8v7zVVqCs2+uwLSZaTwUjUrsFEN7jpIJ7C5POeGjPA4mfGE4YOwnGBE0KN
HsKTnT25cs7S2cXYOHeCp/zssyZMR4XF5WQJ7AGNSyVlsxZtPnSDvfsifXic
hSCIhusxmNid2gFC5bnk3Q/dOXSJvvvyJz77+S984eXh5eOL75kdM61R0wT7
GuPOix/63T/8s6/807c+/ek/+9xn//hP/vSLX/4jbtP4dj86+WZSHzWt+HMf
+viffuUfv/OvP/zh69//04989GOf/OwX/vIvXvntC06VurZHR7GcLcqzv/17
n3zl7771rz94/d9/8J2vf+0fv/lnf/TKF//8jz/8LNu13a4wnGOGUfklcw69
/JVvfPe1H77+o9e+9+o3v/GNf3rtpz/++ic/lAyc276kuijTXPd3MtQzp7Vt
n/X73/jhj17/wb9861uvfue1H/3kJ6//4Pt/98HT6xfUTM714+PJv0dcS0Y/
8hL3uS//0w9++Nq/vfbDn/z0J6+/9q2/+fwffXjs6nS/l7Tl3zuQAP8mPLLy
la9+QfrE333jR//505/8+w++982//twnPvj8nVGjZ0NamTHXu74qeWxDkVmf
+8evjv3uV//+e6/989/9+ac++v7nR5OWOWpeX52G3AmbjmUTuDPxGIp4nvnb
V8QbCem3PvrB5565k4zDIltx/XJj+jzTnIMv//mnrlTaFyt97zewzbyxJqdu
4S1rzBodG00kE7ohn5qRds0pWN7x1/fu3ftRG+rI4owieE1ZPo6X375rJaAO
dFLXxEPpYi4UmdppSokvvfKh58PbnKI/Y6An0fxzv2ElgAe0dJnbOynthUuv
JQ2a1gwQKehNzvRAylCyOTygaaaui/wh2zqQSIoifeWOPqoLoqEoqtWGORke
eSubWHjgKlwsTcf/R7xnxsw43R9joARo/Kiz0ZmroteQZHawIZ1zQbEdCcMY
mTN7ALK/ZeuKg5ngKaLXuTjP0VvTTWwUWaZo+mA97tlH04Kk6AOZHT8/Ylir
xjAXi9LCTwtberAB8xHlt2hW1LRIjcP8/7kiF1qSduZ5ryYNbqmL8HjxTdEY
r2rcfIf7fz8rnk73TgtFWpKG2gq2JoTPXXiR5mTNaHFyT4wii0cC0YVpv1rD
GebZbAweB3nQxmFBVq1hR8MiYn9w5GKa2oooQl2KWwOV8GSGJHyk56wMBuDd
VYiDHqjk6vDQxrT8/xWaJq1wU7jLTRKQ/29KqnZnk3P4KDKvb6D/Ud3TB1/M
7TP1E9kp/r+boLxY66isa3ccqr+eMrxleLBrSrru3xJXAzU4hWOp7bEX35JU
VW3Uqfrr0HLODKbn/xePmFIrPAjFcZwkKS+5xdJVfdRB/j1S1TMU2kakIcBv
TWh9pS4SnopjoP0eTxusf55scew4DEU2BQPhlWngC/otpQ1PvYZKnY14yVZV
04w7bQ61HyzkRdeioYC9/ASKrDGN4crUSyAX5CGSRM5+VTeMO9sd4/8XnwhH
Y73T7Ic/mPv6Icrtxl0oDsYAhk9f12Waln5np0P4Betvs+Ew1znJ/u5qBZ2b
6/JAfNBV3qnbR2hO0w3dGf49QizpUTk6FmZPpXH+2xNaVwFB4G4Mnbp8+8kh
DVauNsCOebtD/H+Np1kmHGu3j7l9Nyxtu9tLUR5iQVi34qamaJpiWo7go0gd
Z/Aix3PhaKvd9AMrD6tyDZjX6yGJY2OQM6qDsa+ZcX3UAf+HUtssRdJUmg4H
19gNPxTZbIg3JkH+v5s4MWpYFqxHbFm6ZSS3OoDv26NJysDaE2wsaC++4z5r
CZeKSBK+gDw8BkJ0I1V9BfxKbnKi/fslPtiIbFOiQ3byHygyacAQ6IUoSZIE
efhu3DLh+dCdu2MaN5KRAtiDDELskCyd9JHbFHqg2ha/jhFZdglCwgLgx8cS
cXM0aQjDl/etrsuoIAfc4LnchLe+Rxb2U542iemxcz8oslrjhMhCBLTf4z0B
tkj6jd3La6dkZ7j99JRUzl66cXv7uQDLsHswopXnb0y2cWcout3iRH23C76Z
J0+bqrYn14260Iz5/9GYpMJ0Oonlxb2Uq4kRr9m6P+pkQpISx8Ho91De04Z6
o9CBl0Co+/T7TMtQdUWSwG7uTBayghU7bfZ9KOK/YimitAksfB6P97yhtjvx
AgxFDz1nwKpH4AYU2eDnuTZzUoddPhda2Kur6kBZ6j1kVoeu7LKPEd4jvuvQ
CxZ0ZYaqAG861j3vNCudtcPHpgY0dWywBIfTP++KIu10Qn8cxQ68AGayYUEJ
BkWN69d6aMlW/8BVGVHZ0HYfToKlN+eSojrTfmTv3WQyHgezGezkFT3BhRn1
jO3LlhlRPbDQCyY/QeGFt01zn71IzXvFL916+NTFW0MRLpX9MppkWeWwz+6j
Nayhb4LiPy6UatGtRLtTYqRUXtG0hpU7uwTVMOJxQQxut11+ZwmaEV6UnV1c
Mf+EZOrxfU70/4PzQ9RXVLupSwUjwTIjlzbZ4KPIbME07yjXbw5GZViextzj
zHHs/YugVMm8/WwSNEu7cWyt3XbWNUdKWImxRDKZtDRNU9VtTsW893/Pqm4L
3xlNJiIdRzdSNssZtti4MzZ2NzF6Z2w0YZmm4cCa/xZ8xD1lQ2gsbkavnjmz
ze75o/NYUeAknmZi0eDwQH+v01LQWO7MhfPnzKqqqi6xvTBZVlkxrXLalNLS
KcWF+fm5diId/6vt3egMDnEeJmzCJmzCJmzCJmzCJmzCJmzCfk32f3wf48oi
f638/9LrR3+9/H9e30295d+PNxxS2cCO8P8rGf3aA63/x74K6ljeHdQfULiV
D6BdVO6U0pK8dz/QJ4qrq6tmzKypqpk5a3Z9XZ1NpfLHxZ9By8pQnduFUUWz
1h7qvN3Xc3l3ve35469s2uFhhuVSJkmyLKhPzP9HkfKAxkl9O9dtPngtJBmW
FU8kjeE9afTX71vD0GjCSsZNPW5opmXGrcST8/+R3JtxSZZ4QdJMKD8K36oZ
UuD0zHSDCkUaA0lF0TRZ0cyEppnxRDzR8+T8f+rkmKopnCjrpqFKTGCo+9Lx
9osjp9NSGucHVElRVUkWBSYiWslE3Ez2Pzn/Ets6CpoNeaTR3ktHtq9bsaxx
5oyV/cFDtgoMKDJnROOVyOm2dU2L586aunpEEGTR7M17Ynx0cdwU6MErp3Zv
WjFnRllJ4aT8gsLSk8JAs03ZJRSpH9J46docDw65gG7Mu/7M2Y6OrtMZVCAq
uX7t0LY1c2umlUzKy/b7fL6s7LyCVpk7aZfrXDcocUpnGeImPV6f3+/112/a
tKV197YMCtC4GpfOLJucn5Pl83q9HsrrBfj5zap23eYlZG2fREudUxCCJCmP
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
yw8FKZoJhsr6LR0n39Cgbkez0eINPP2FoQFVlVG9OZlPILeOBpkgxhJxDuei
wMIMoiQkEiKYPVzCsGlCKhsseYS1kDXjA/6KjSCOWJZh4KR/osgnuDj6R0K+
FcbRIiNiA4rIi2hc6m82YDqe1+vzUQybc9fWsGg5BLqVDf+e8IT2Xbnz+M1M
DNdU4iOJBCfpxuxIJMbLyCMYwvjL50Ov3kzM3sKP8mn5BdJPBQKXbCwXokGo
2dHsEoD5cguKqls795y48Xyaj80m4pj/X7z5MS+ruv5ie1l+Xn5hcWlDyIO5
eD4KU8HpAH3GNCBOgIGKmCX/P90MhJfws8Wth17MRmPgFkXSvoZxqFrPilHN
cMCXl6QxGdHvTU9JiqHPGDgAA3UBsNzA//Avb+39cHSug6BRDa+bityZ5v9j
1jdDIW+AikDRJBYgyLmtAIBWIl1TjUSmaLmVFYPwNL2KTrcSLB3wn0+Ct2U4
/7Tf7/fhpDM47QzOPuOjGXLDuKilH611VY+7mQmbPBFLHEJ9QZa8tMDrAi9G
xTRcGjtEGs0/mvYzVNl9gVdxFAgagHqswc1jVEeEm9tRmN94T9WNRwEvwvW9
1wBAvY4ZoVSAYUMnOZGXcAFwKEbcTXxv/awIhFdDEV1VzdPe97GGOAc4Gnw4
7RdFh3KojZOSIKEF08DCNWDKRS1ywlM6okoaMHRVBHNN5Hv4tNdBwwBnxGYC
wbpBvFAIihZ+2n//zu1TX6sg9kXLf6rItob2Aqp4gGE+NL6XxAOBZtHwY0r3
PYtLGF+d6Wtf19xQV+FuAsh+RbIsTVWiR9kAFp/w42BLHPZHpedh9c2EygsJ
vGG5WsKkCepuwnvom5IAHWvuWgvy85j/nJY88VNMgEV+nwpd5gUoCoLESXF3
M1++N4K6JHPQuVft9XgpH4XjDUmchZ5m2SAa/762KT6uyBwnCPBG7iow4Aj6
jMyrT9ChFGdex2G+hA8NfgrB5wQDdNkddPaSdeWXf++//Cc9mVSassc/Lgjc
3iDt9freR/mmKfh+BJ8TYHKPhjlRkvX/4M/+4td/1rEa+B7v4YSg9pe8xyfx
mofXHCYQygmVNB0b5QSgqNo/+v77/++Xxatye0T0iIKS2B5I69yk1ScILxqJ
wZyK7ReHZuNoDwp1Sf3v/xk4vHLZuS+Zdw/adhlPq9Caw6bVL9Da7GdCNTtv
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
Mu+82ekwr+TxDzmt9v1j0jPPOayasbiFXCQqnRM9JCNLf+m7si27NDazpcRa
vGEEM4hPZqXMu2iBMXJ23AJlmcO+H/EP+BPwzf8nk8iLS7+7dtkZrC4j3jyC
E3Q/ycyURTlWp7Pisl5thWnvwOhhE087LZrxuK+805Zar1+HEQ5ujUOydTSP
RsJmP1basjxrSdnlK5cg2HfaDowZOv4kwscbPiKCMmrDRZUT5tQSp3xHZjQd
EwCFm7GqsPRKxbdXLpc4ystLDo0aOuFMmUM/4WukTpBZ446BR1lertwzNYaO
/E8ihTd8TaGjApDLnBDtGTclxw0/ZNIWpn2N+gMQZ8dPmTZ9xrSJKezeeY1A
jR0+cUrmxAnjR48cnjE8lhRBjRuWHPs/af5/vyWHz17pXxjg8z8P0iAN0iAN
0iAN0iAN0iAN0iD966B/43EMgf4/Mo4lRMTsWxN+8igO+ClixfIBXeEzoFiY
EJGUr9r31xct/DNQB1T29hN+YpGqYPSfHQQUbkyMMCYuPjYuLjY2ITY27Ptn
CBEJRUrZ0T+Vfh8RkbTuXH5uYX5+QWFhYUF+YU7+mrB3PyKSitQi5Rbu33/r
JxpzAbt32IxqlZuMBr1Gf4ASdv5tQq5aLpOt+4IE0cZb6E0RhNDxDNTlw7Mt
ajW6IkCt0wChPOGj4d5/Cvj5CrlEUrzhrySA0kpIvU+xGzBJ6JANZeQpnUqp
VKvUKhW6q1uj1arUx8KvPxCbpxSJRHl5u8fFRkVFRkVGgl4lJicnpaQPGzY0
NSU5KTEpOSUlNSU1NW1Y+vAR45ZdkEsVMqlMJperoR0qaIJKfYIdNn5igQbY
L8opPL9vx65d27Zt2rRuzerVq9eu37hpy6YN69etWbtm5arVa9euXb9py/Y9
B84WS8RSuUKqUCpkKrVaqdJooB9Oh3v+kRCRLNFJFRJZUaFIJJYrpVJoS+75
U6eOnzhx6vTJE8dOHD1+9PDho8ePHTtx6nwOvAXQpUqVAhRAqVJpFYh7leEs
L/z8f6lBAcwoRMXwJZMWFxdJxRKQCBpeBfk5udk52dk5BUVFxSKJQqWQSaQy
qVSFrojXq1UarVoDOqjSnw+jgkmIhoiNKuBHLhWJAV8uFhXLAF8OTZLLFQq5
QiaXKZGmqzVqlUKhkAK+XKk3GAx6JageupZRrdBdEIaNn5KvUYAeSaVisVgk
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
GIKNfrBoFQg/OjJtp/VRE4Sal0w6leHSk+ctPu/VvRlRMRPuNPiqdyewx0ob
fLUbWDj4/ARCbquvEXk1YFHd/ookriBKKED4zc99v1SY1SrTpSfNLQFPydZ0
Yczke43eqh0JnJEFXl/dOhoe+BHnW3wBiOFhOoF57HKaQBgt5I/c76xqbnbf
KjOr1ZYrT1ta/O6ynekxwkl3G7zVuxPZIwrcXs96Oh41tyIONXgDTU3Nzc+b
fJ7GuxP4MVG8mPmiW76mFoj+DRqd7Wp1a4vf9/3B0fHCzIcBb/WeRO6IfLfb
vT5sn/sz/NhlO48VG0pvPKyHMd10ksuOHrnT/MAdaHped9OpM+jt18D3Cnjv
XhgXw19Y7/dW70zgZuTB9L8etzU3EkOQMGL8vPzGpueBC5vzv68C5y7gb6q7
4dAbDPYfAR+mxRu7hqWJYZqu2RPPH5ENTvJmCi74BHStFjruS4/Mfv7iRTO4
2OiAq8/fWH+r1KAzlfxY29oC022T99q3LrAStbtjeSPPghu0Feeq7wQi90Dd
67cw1cKE6vM2NtbfvmSzWkqvu162wETT0PKyye0N+Kt3x3IyztTX12z+M4em
/3lEn3lC67hW+bwZJuTGZs+9K3aLrfSG6wUMTjRJouN2vqod0eyMC25v7Wbc
N55Q7M+Ljs0q8be2trS+aqr86UrFpe/uBkAmTa0tzeACQgTyaAWfkXq2rvb+
0q+Q/w8tIEUwRi/fvHnL1m0b1qxclrV4SdbmHdu2bNm0YcO6FUsWzJ07J44Y
QU+fMXFUuHd+/d029G9OMPUeu3utd4ntq+eroDWYEH169omCDcN1wXGQBmmQ
BmmQBmmQBmmQBmmQBulfgv6N5/8TBayvcYXRP5MIEcMelc3/U7ev40rEiElt
/6hPpIb1n7FqeMGL2cPHH/+iuyr9z57fJoYuYx8wESMmvOzq2Ev/4koy4fOf
n/L/mfy0zEkTxo8aP2HcmNHjR41ID/sWMsB/1dntyfwzS7mk6AnFlU2NjU1N
zc+fv3j56kXLSwcl7Pz38a8723p+GoHKnJOp8EVnkBnBWzYZbDYbJd4xUe4X
l83msFHiE5vNn3/7Y3dXH3V2df5WGf796+NfdHV0dF9bMTZtWEpSXHz0kLSU
CWPHZ07PnDpp2uRJEyaMmzRpcubkSfA9IXPq5DHjx45eV/mxrR2ooz1EH7qq
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
QVdwqe35m67glnB335YV0v/j4fJPFt75d11oZIX2dvu2YrFP7uoOzbuY9mMG
oasr6Pm19+5YYvb/Qrj8kwU/9nzo3ez6tP8V8qy6+rq/q1fV2j/te/VtFrf1
nA8XnxJ5/WNbb1TVG9j1ere9vk9XcN7v25393Rs72z6eD1f+RN6PgP+JdRTY
dXWFvH3o/o8fP/7228ePPd399iWRS9qBfu0VV3v3gbDnX0LJx7b2tvb379+8
RQsaL1+/evn6xcuW1ucvW168ePXieUtrc3OjB5VZcNf5GhueN7jr6/1Njc9b
UBGCwPPW580tDY3vws+/J5g6X7150dJYV1Pvqq5+9ujxo/uPH96+cevn2/fu
wtcvv9y88fMPP9366Tp8Pbz34NHDW7d/efj4WU3tgweV1dUuf4OnyRd4vXUA
+N3vP/z65i06RtPa+rzlecuLly+aWlpbX75sef369avXLc0vW1pevnjZ+vLV
21ev37559frV2/fYLvzbX999aGt7D99d+8LOv+d8G+z/T7vOvd0PT6H/0Y7j
x+6uvqAb+/tnBFr58UTY+d/RP/S09Y2ofju8Qc3u7vO7+u3/dv7+be0fj4fN
P/8aNv4+QYa2FILjPzT7dfUb9L/fAsfwj4SNL7jaH78zaH97rUxw/u8JxRnt
HV29m86fN6C952DY+NwrvfjBff6uHujw3z72zf9B24tAwBN+9WvoZMBnZqqt
rSfs+gsU7qU+/tEndr+8d8VuUJd7e/G7Q/jt3S9Kjy/5EZQF9K87KAB0/ALp
aE/70rDz/xkV/fDbu2vXpicnpiYOPVSD4QeNP2K6y7MxOVoIytLVKDt+Dakj
kkhPd5v/vu3UorAXAYmMshB+UKC7mVGxMfEJyetuwS9dIf6xOeZsbEr82Jqe
tu7L0zP2vkLrD90tt1THVmamsQeS/8+59Kn/27vdo3jRUbFxMakbb/TqXw9S
v/auuqUJQyIzG7o+dJdOG7MXHVrpLp2TLuSzqXTyAA5gkhgln/S/vefhkJgo
YUxcwrCtdzo6Orp6HV94WjEpPjl23suutp7LmaMOvuxs63k8ns2lDjTuJJLs
n/q/ved+Ml8ojI2PT991rz3k/ofwjaMTEuMWvu5q6/5h9vgDgP9RGRPesdXP
+af1x/94LykqOlIYHZ++535He0j8mPXrVGckJCTOawX8sunpmxtADnl4lL4l
kvS/fQgNaZD/veRIoTA6Jj5l5wMILkLmD/kmH4qHJiTGL2ntau9yTEtfUdPd
1nORiwM+IUL7EWawtjbM7PXcGxabkAAKkH7c3RUc/iH8XwvTY4fELgD87vIZ
6StqAT+Hi0v+fdFv3R+RgwP+fXuXd1JMUlwkN37l92295jc4/DqNIxLTYhe+
AblXzBi5vB7w83CpvxCRuOFIrvHKnfrGX7thAOZHcqKS5hc+weKfoPuJ+eRd
P08VDhGsQ33knDp8GeI/eyAx12dEZscNnTBrlR2C7veqvaKfWru7O3vNf1D+
HR0fnN9kjCrtaW/vvjxz3IpKwM8fSN2RT4SiPzKq88wdYvsIEujs6enqP/0F
Ix9wBVrvP8V8zStTx6163N32sRjnysdEcmzB+49I4P2m39CaG5rmYDJAk3NX
RWbG4sfdH3oKcdzzDRFjcVHZjftu8OixaCi48tzZexa2DTlqHT3lmcOXVXa3
fyzCPXOCQCJRuTGxIy68+IgFvugIMISFwWVvJAi0+tkpS+PPfdzz/u3hr5X/
H8FcsGf3nj179h08cODgfnjctXv37p1bt29Zs2rZsqVZI0gRnOmLZ0yM/EqZ
I58+lkCmkskUAiWCjG5BCC0x/wvkq3wp6x8rQIAe+/L//23nzQzSIA3SIA3S
IA3SIA3SIA3SIP2ro//BYRyBguvRhT+PT6XheHY8DHwKDc/cjT+PT6VS//w6
KuFzGgg+hUr9swIgkCiI0LWA2NWc1AH0IOBTaP2zd/5+W4hkdCNoP6IN4P49
xD8wQOyVZPABLa8QiIQvEpESgqdQex8HoEGEvs/oR70f3Ptrv9f7/thHYXTg
X+Ojmzb/mfR7fCou+L/7QEpQIiEZI6ZDYvjy2/HFD+EG4Xp/+ZLo8cD/ww/9
E4Qb/u8b018tP9PQz2jA+BTqH3/4JyJj31/8Cw78f5HBP2hWqMkhxfyfqP//
5fGJlL9SOuwT/xgr+PPzNwwAn/pFi9avBf2QPlkk3Pgn9CpUkHobAxNSn2Ro
nzhG5vcLzR2IB0Pom/FIJFLwqmFsQiagrsGUm0xGmw8EMroLFj3HdiIIJJzw
f09EaAGViDULm+fJvXWPyCRif1eHQCJTvgY+ppFEVGYpggTC7vtowqcNl94n
xN4W4IpPIIc8QmxofnKtvuDoEXslgKsLTwSGsKLs6JODLfmDXS9SSEVxPf0e
5IoSlO3flCypTwFwxQ+aRGyY0RD7hC87pZiihvofX/w+/7af9v01fH9DhG8I
14ePmYEv8Q5j4zMDhD8+Mjx/o8A+sU/0XwWfEmT+D+mT1xCcE/DFJ9Gofyco
7FM9ytfgH+H/8cAj9IP/Ov0PukX7I+ljE9OngRcKXL4C/h/8DTWrH/uhkAhf
fOIf848NyH6uCQ3TAZxXMIh/yD82BZGo/cMjMqKvgP/Fj8ReJPcGhGjkkZA/
gvcF2JQvjP4+Q0js9UAR/oAvIPpn4/f+LeR4hQIRnCX/9/AJ4CRSPsF/Vfzf
fTLyQYjg81H6R6Vgpr6G/MmY/ft87iWFwPtJH/36NRZPCSEXGHvep3Uh8L6h
F2zA18Gn9eEHXwg5g9S+oPjTAPgaCoDwSX1OD1I6MoX62TLYp7Z8DQGE+A92
ADHY8f2hqZ+WLKhfY/k8iP8J/ffx8GfrYfhfQwQOQEixCP2Vvh98v0FI+1tu
WnhEQA4I+Q/hQ6uDvTKhkfFM/sYIc4CIQfi/Dvg/0wPsBZx1IGjiSX+D+9+/
jDM+5mBR/ph7Cpn02es4+18hB49M/mvmg/jB1ZGvxn9oiieTP+ee1it9MtL4
vgZQvgJ+b0f3w+7bdKCEBhzaheltAM74hL45/nfcY6/1jXdCnxZ8Ffw+AdCo
fdsOlNBgI/RrwNfi/xPrfUuEmO5F9M7KhKAWUsLZwfsT+J8W/D7BY3EAqW8J
7CviY5oXEkDvdIttk0WQ+mZi/PFpvSOL9rn0Md0L/uvXSBre+P12GPtveoU2
GgiE3+F/Hf5D4v2ETqH0U33CV8T/3P58wkfsE4KLgQTCpygcF/w+owLTXu+y
Yn90rPcjQiFoRMhJxgefEPxY5Gv1n3E/sd9r+cnBxUDsvZ+tgQwAP4gahKWF
evsz84fwe9WBhL0Xe3f/bYCB6D+m6v9fe9e66yAMgk8v6Pu/8cKtUOzMcor/
ZMmmmfMrFCw3nem4q3CAyv90ozlWVeANfDF1CWmms47d0+8cI/bNwe9Lh+rC
v4VfEgL5A7fk/7XWNSo+XvxBNAn4510FkC6/6wKZpz38G1JJAGs9b8inqwZv
rP/t0NNGaoKE3zUujl1IStL7+Hfs3x5Bbxv4sZkmzP9P079lf6f4ULHiCk7/
r/YJ+ht8PaP/w/7N+r60gDyBP64x54p9Jyfkf2v+w7l1yg1eJeEwwyAS9U9M
fDA98PGP5ns8lgechw9V2sB6nH56zilXpJsuBbRW47j+Dx/wm9R5S4eAX9Xl
hFF7J+jdBOiED+IKGb7KWTsCwPBzct+T/gG7lgEfQATD4RalwLeajmZ8g8d6
K5fZTf4Dv5DLi/xX5D+rbXXC7xLZmf4t+K/kemfFPCj/4Xn1ImlvxR85D+rI
IHxNvmTiK6udlZ+K6xP/uMIWzUul8t+8iwPSZFGmzJfJn+ef8ZPmv4j7z6sZ
t1vUPl3zcYtCjyo2msm/jKJUbqvttV3SbsBpZmnIAZ7/7Jh7jroJ1vN/aEcI
2l8+/zyA5pINpn9TZALP8f+Hj+PorsLlxW8CeRIfCS/zHPOsG347d4Zl5xym
Icgt70zhTni0z1qvzVAvvfTSSy+95OgD8IpZeg==
     "], {{0, 128, 55}, {128, 0, 
     0}}, {0, 255},
     ColorFunction->"GrayLevelDefaultColorFunction",
     Method->{"FastRendering" -> True}],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
    
    Selectable->False],
   AxesStyle->{},
   Background->None,
   BaseStyle->"Image3DGraphics3D",
   BoxRatios->Automatic,
   Boxed->False,
   ImageSize->Automatic,
   ImageSizeRaw->128,
   PlotRange->{{0, 128}, {0, 128}, {0, 55}},
   ViewPoint->{-0.8057560544046479, -0.21109863272314391`, 3.279663785825107},
   
   ViewVertical->{-0.41387991946935127`, 0.42744641327465344`, 
    0.8037368823431444}], "]"}]], "Input",
 CellLabel->"In[41]:=",
 CellID->506753080,ExpressionUUID->"74256b60-8623-4b6d-ba13-8736f7731700"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJyF2ElsTWEcBfBLuuhKLCwkNiUiFiQWFl1IXDsLCREixtwUVUKUSLDQfGlI
LAw1V5A8IjGkkhd5aKTko1VVU2tW0zOUmruw6I7Q80fkf5xu6hdf3nnufb09
x/CKldMXD0ySZOOAJPn5/X9foaYrxZ8m/vrWfQmu8324Fa53HWra4ZzvEfZ6
R10nw87Bx313nYIbfFcfhfO+23Lwad+bD8IF36UH4LO+R++HG30X9sHnfQ/e
Czf5LuyGL/qetgeOvuvs/CXfYSd82Xf5LrjZ9wQ73+K7zHzF9/IdcKvv4nb4
qu+sDm7zXWbnr/mu3wa3+87M132Xb4Vv+M62wDd9V5lv+c7b69323Wju8F2O
9xuY7XwnMa5XIK6y+3XHdxPuRyAOdr/u+u6w88SjLe+e76FwIC5Y3n3fayyP
uNo+Tw98H7frRRzt8/TQdz3uRyAut/f7yHebnSf+/e997HuMXS9iux5Jl+8h
dp74m92vJ74n43kRiH8/j576jpZH3GPPo2e+S/A8DcRT7Hn93PcM/D4IxCWH
cP6F79IjOE886hjOF30POtnvlLiiAa9H3JnvdyR+fAZ5L31/P4884lXoA4F4
QQvyfIeD1kdeuU7Gwinx1GbkEV+4iDziKwXkvfa96ATyiBtwvwNxI36eInFa
i7w3xOuQR5ysQp5wJM4tQ16372QR8pgXIo84VCKPOLcUeW992/mUOC5BHnFa
hTzibDny3hHjeqTEvdXIY16LPOK+gLwe39km5BGvq0UecboeecR5fB6S976z
FcgjLuJ6BeJo95u4iPuVfPBdBqfEObvfxBkciTs2IO+j7/HYEynxuM3II87j
5zUSF/HzknzyncxEHnGchTziAEfiOAd5n4lnI484nYc8Ynu9SJzMRd4X32E+
8ogjzgfiFOcjccT7Tb76DhnyiFM8DwNxbjXyiPtsz/UK9+/9P/sff//PV+Ws
kZP+Pq/+P0Dtfbnn1V5Xe1ztbbWn1V5We1jtXbVn1V5Ve1TtTbUn5V4Ue1Dt
PbXn1F5Te0ztLbWn1F5Se0jtHbVn1F5Re0TtDbUn1F5Qe0D1fdHnZV9XfVz1
bdWnVV9WfVj2XdFnVV9VfVT1TdUnVV9UfVD1PdXnVF9TfUz1LdWnVF9SfUj1
HdVnVF9RfUT1DdUnnL7wAxeh8oY=
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxN02O7EAYYBuBzsmvZdbKWl23bLZ3c6mTbNtaWbWx5a8u2W8u27fu6+tKH
+3mf5we8QcHtq4WECggICCS0+L4HBn4bX5zPfOIjH3jPO97yhte84iUveM4z
nvKExzziIQ+4zz3ucofb3OImN7jONa5yhctc4iL/c4H/OM85znKG05ziJCc4
zjGOcoTDHOIgB9jPPvayh93sYic72M42/uUftvI3f7GFzWxiIxtYzzr+5A/W
sobVrGIlK1jOMpayhMUsYiELmM885jKH2cxiJjP4nd+Yzq9MYypTmMwkJjKB
8YxjLGMYzShGMoLhDGMoQxjMIAYygP70oy996E0vetKD7nSjK13oTCc60oH2
hNCOtvxCG1rTipa0oDnNaEowTWhMIxrSgJ+pTz3qUofa1KImNahONapShcpU
oiIVKE85ylKG0pSiJCUoTjGKUoTCFKIgBchPPvKSh9zk4idykoPsZCMrWcjM
j2QiIxlITzrSkobUpCIlKQgiOclIShISk4iEJCA+8YhLHGITi5j8QAyiE42o
RCEykYhIBMITjrCEITSh/P1XqjCBRA==
         "]]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJwV0wO3EAYABeBs2/Wybdt8S2t5Ge9l27btWtqqbS0by7Zt21/3nO+e+wdu
QNPgwKCQIUSFIrQZhrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKT
hKQkIzkpCCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1CCQX6hJLWpTh7r8Sj1+oz4N
aEgjGtOEpvxOM5rTgpa0ojVtaEs72hNEMB3oSCc604WudKM7PehJL3rTh770
oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZjOHucxj
PgtYyCIWs4SlLGM5K/iDlaxiNWtYy5/8xTrWs4G/+Yd/2ch/bGIzW9jKNraz
g53sYjd72Ms+9nOAg/zPIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6
N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/
vx+SH5bYgTg=
        "]]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}}], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{False, False}, {True, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1.}, {0., 27130.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768801823146682*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"b75580ed-f5fd-4ed8-91ea-c6507ee2f948"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageHistogram", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
sKIlrGjGgcUCyKJmh30tqGMJHPVw9gHzrMNPc0nQpCHmaYUPhObTip0/3Rek
vVD2AW4cRYJhh2MGQRxFTUINK4jv4BE4HE9GTq9gKRL8kp7A800IAyR5ft6w
uuDaprs3l3y7TO8B27qhil/6ut+Vd3/J9L+Otr9M9j7EGm8y5YtS+WC1/2qw
825r73Hn4Mvd4282dj9sH35s9V6tdl7FAt2UyVuy+uOmuJGnydii7Xyn3rls
tM472VYr0djtnuxu3Q/W71uJ6lq22Iyk2tl6t7K1mu21o8lWMFnzhcNSmWl5
2cwVellMH5+fMTtq4VwznFi1Octmc1Gr2A64ToOOc3DEXCdh21nEdRs2P0QM
V2HjvtuwbtH1rIaeRrSmlzXFjOQKOSdiZuWivJCTUyizWlNJq61o5EW1vO72
dh22ssEU01q97GUTjWJZZjgEEo/e5TFHfMag15616sMWQ8ZljFm0gWB8J1K5
8mePvfEto6fjiB56kycqY4nGtlCB4nGcU3TZxByXsKAgMEwIwgKKJJig6ycZ
BiDUoARDbSUAMZI07GJNQ03pPyYRRhEvazYwfy7meZ5ShPR5ZJihgDcbG3Y+
oT4zgTaGwI+Mo8eQAF8sZJhHxmBIImaGj6PpcfMKHODvsmlKGiVb+hTn9qLv
VJy4lGXvpbELsX/HXnrMn/yzfvY/S3u/xuqv49mDeO4slT6MuUuFcK1eOuq1
T9fXb3uNvW5tr9U6aZYO2rW9XKCe19miclNapqi4/IPW0frR14Ozz1v7Hzq1
g0as2k5WttuHx2dfb/VONutb/dLGoL6zUVnr5trNbL2Z75UznUowlVSbMnpz
QWfMaU1RuSphsJc9oUY010jWWqH4QTJykQrdZ6O3mfBFKnCeCt4G9a8StqtC
4jziPHLoO3ZrWSnsqvkttSjJpqf4rLxaW5ZJMgJWRa/tG1WbemFVLa7bbW2j
pibnBnm8GJ8TYK/4eXyfVBk2uqOuZMAaCVhiAYM37C1HguWQtwC+hHT9Ll66
DsQ3TOaCyVr1hjd9iWOuIiXUlBYVWdKiijjDJswJcTQNjizEUhQEpge/ZMHN
icdxdBgQVRx5FFrgMeQv1OgYBqWnajv6FJrgfxnmIPDyuSj/H88ggDgDNR7H
kYErHhtHj8CQY6gpUHCHC1YRQLexVGhNC45hw9GMkzwfRVlc8p0sR275wXOx
a2DK3pgSxyxlxlV6rJz/r9Lpf+/c/+fqzmebo+mxZFO+Wt4O7GZitXK0v/cw
6JyX091O92xt8KqWXqsGCrVwLefNulWehMrUNBp7qVqntLtz+v3B7U/7p1/t
7Dxs9C636pt7m9fbg4ut9v5W/3y7d7rT3Nlt7farG22g2PlePdlo+FOtcK7t
Dbas1ppRXzBZChZ71eWveSOtcOyoEH/dSD/WUg/56E0icJkKXYXtr3L+21Lq
NOg6salaGllRLiyIeXWzo6pQxVmLeZW6o1f2Teotm/rYKDwwiutqWdVi6NuN
dQkrRJ8JcRgBLjcsVnglqojOlnQmAkYfcFl+ndOlD/jsmWiol8yflZqv8s37
WPbQ4az7LNlm/z7ZfsezNslsG9tQp0tDxFkOnsTEUTXAP+NXbES2C890YBbk
Qws9M+xyzALyjkGmmvZcc59JinyZ+X2ZZXheMYsa6vNwrmEENoqcHIMThyoN
PDNkxUehWA2AxoBCDJ9cQpOl0Iiimwi82ATHO6deXXKfaLNv7KUvhYZGuHwV
73xlj+y3Tn4vHv6zdvJv9f1fc8Vzt6uZCjcrpf1Odb1ZGOxtPx4cPK5vPGwf
fHV6+8v2zvtarFkJ1Gux1e3B7ebG/dba2Wqk2Mu0cgZPM1Xf6uwe7tweHTzs
H7zdXB3sbZwcH1wfbJ7trx3urK7v19o7jY1BY28tWdgKhtfixUE01kkW++Fw
x2btWbQdt6vl8ZfNlrrN3osmDgup163c21rsbdbzKuF+nfa8TvseC+G7Vu0y
GboMWteturrVkJeKClJ532Ao8pZLCvGWU3/mt11HHdcu6b5F3tZIak5H3+tu
SLneBVJoZTHI5QcFciOT7xMr4yZP0BCIWQMRWyRkDget8XC0H0vv5spn2fJF
JLHtdNSLqc3t0x9Km5/41sYCy8Q2NhnG+gRZQJyiERckWJoBt2wHColjGDFU
LYLEgeYNUXMgtkBzRlAvcR4qwTBojcew74F5mf1Hv0z4Pk0HI6GO5Qt/R8F7
4eAgQDPLAF8oRMNB/QVxCT61gpphQZUXUJhuJXKDk/wYWd/RxG/KR/+IrH4T
8reqjatK98t4+SGYusjW31QHXxbqd8nEZiLYSXkKxVC5kWl0Gwe7G9cba5d7
59/dfvmPy8d/gCqcy2zV89sRg2+tcQiRdP1urXe5XhiU9e6ByzqIJAaF7t7W
+f7u7W57f7+1c7ZxfNTd2e/tb2erB6XKXqnVLwx6sfymx7UZDKwFor1opu+P
gJfrAd96LHlQrm2kIq1AoBNObMXDp/nQq2rwfdHzPuP4kLJ8iBnfZZyP1cRd
ynMVsR94TJsu87rd2lXLd62qvlYGnNix33zrUbwOax9ixpOAad+m7fs8Pa9n
TSPOc6hZPqusVqZVurBEkVLrsxZf0RUpumNpTyZpDfuNAbc97w91wOhLZk+D
4XY41C817qsbP6Y6X6m9ayvyCEMaYoidkzNsIpFMJPOw81IstB5YiV8y4Jh2
LN0An+LAMBQIX8g4YQGLh3EJD80+jA1ngZ+rMPI5E0GYPi+7el6LNYYaheOf
WhkA3OEMAvDMIBAB8s7BJ5hIEhs7xyMuO6ZlxQlxckqUWtCtyr0Htd3fnN5B
yNtc2/l2tXmXqD7GSg/u8LHTs5FNbhbKR+XCYc5XKPqKnfLm5tb93uHHvYMP
BxefL978fnzz2/raXcEVqdicXp4gbXK3q/tr7Zt+sjXwRdtWz67HsxOKrefa
p3u3Z6ePB5snm4X2UbNzsrZ7fnp/cXB+tbF5vn14uHW22z7cLNTX0tmu19u3
WXoW08Dp2MxV91f7u83tnUpjo1BZzxa2s5ndZPAoF3iVs75PaL+Mqz/GlR/i
uses6zbtuY47LwLGc4fy2Gffc1m3rcZNh3EvFjqxSe/tgoeI8TbpO08GT12G
Lae1atDXJCs9g6yskhaEnJTalNXoczp93mwvuSMFT7wQKUZNXqtIo5VYPeZE
KrWVSm/Hkpv1wVe9o1/za58TzY8m3wZPl6cwjVNz7Mk5Hm5yET0BKCzDL4ix
c1I8XY9fNkKbRKaYY1gyxLthFwuaEISCMOp5cewfi2Ah5iJeOPvSwHzmL3z0
qdUMx4/8sawLkBpOAPkaPrWMmFpEk5gEtoskSxOXrTi6eV5XZ3oPVd4DiSrr
cncGW2/12qjevmpyD0zuDaUqHvQ0qpXTbutiNbtZL+0DW7V9+G5r53F/7/X+
4Ved1lUlOchpzSm5uiTil/iMspSfM3uK1nDeEmx7EuuF/iDb2Cw0NiqDw83T
s9OHi/M3Z3vXlydXVxd31zcfrq/eX589XID7RzenO+cnzdZ2Pr2eSO+m01W7
uefxDuL5vUJpJ1XYK1QOi4X9YgVw+TgTP0z6r3K+11nn64TpXUr/Djq7H5K+
+4TrJmy5disu3ZqzmPs8HrqIOs+jzmOz4NotfeWTPUZMp9HQsU29oZEWFOKc
gJVValoWd5bLDPKFOZO9aLGlNYayzZ21hXL2YFxjdQuVBrbQp3LlwxWPNZvI
nhx99f+sHvyS7X4TrTxqfes8fYm8rFsQhZeN7RmuF0OgEGb5BKoGv6DB03VE
pgVH1aEpKiRZBpVgwFxgsUAKhpiLHHkS4eeV8PCX7iXspUE99rzkY1iaR4fB
eWTsacsDGtocNI4dTvtSAL7AVCOJNOyyhSgM4yhy4oqDom9STR0q3z8xzaKx
PBp1epGmZLH0QkVCoS1K5aFApNfe+65/+Klau+o0jwdbD2vb7/r920H/ptm+
LUQ7CUMwoTXVQ+m6N1qxhyvedMPpaQUz/er2XnP7aG3/oFQ9bm8eb16c7l1c
n9/f3ny8f/3949tf7l/99fb+u1dvf7i+//bs4uvzszdnh9cnm4eHrf5ho3XY
6GwXst1UcR0gGwns+5y7oehOunJYqJwWcmfp4HHEfZmP3ZRi91nvQ9LwEDW+
jRnfZtxvM6Ace+4ihnu/+lU5+bpSeFVK3mZ8lzH3ZTZyG7K8iRpuyvnzqHvf
ba1YDBW9JiEQdnT6llyY5DHLZkPN7qybDKvBcMlkyWj0CbUpKpHZWCyTSOkx
hE0Kry/U71z8rbH/Q6X/cXD2SyB3uiJNUBgGmrJKM/TnRAncJAMYaSJViV9Q
4RZ1uCUjtKaRbkPRjNCkEn4RyOlwNh8S5xcTBR95QvbPrQ2I53YlBDrmKSBD
lRdqjMCGCz+mIHBR02MY4NYW4JPMcfziOGoKTeLgFtXYWeEEJ0QSRKcZOiKJ
iZ9aIVGVS5I4U50mU4VCXVVprOpUoXR6r3PwuXP6U3fnQ2/9YWvz9c7ex8H+
N5t7X1ZyO/Vkr5FdqzkDzWS9menVo7VWZWOtuna6d3d+9Obq7P358dvzk/dn
5x+vbj7f3n16eP3T2ze/vn/764d3vzx+/c/X3/77m6//fnv77fnpu9PT91cX
7w8HJ0fdrYPe3k51bb/R2i+X93L5w0LhtFg6K+TOK7XzSvVmtX5dK1yUsuel
zFUpeZ0N3SYdN3HHTdr3Ou9/l/e9LwTel0NfVvzv28V3a63HRuUuG7zIJc7S
kZuQ+VUp8apRvsuGDkOutsfRC8W6ev2mQbahV6xaLKuBSMWgW9VKWqFw12kr
qxUJgzsoEVsZNCObZeNJ9CKzw9XKtz/2z/7e2v95detru6+3zHUsss1s86rI
f7AoChJIPGCkJ5YMhBUrbtmCXTTjll1YhhO1oAFVeHxieQxDHu50wA6X0RIg
rR5uSxneebp+WTz53KWEDxcDIEYgZ/U0D4UcheYEJ0afpn2xZOTkEgw1ATXN
8FQsVYWnG4gcH25OiMST8XOCCbJ4giqnqcui4LHU3pVbOg5nLxRo1etXg813
+xc/rR98HOy+Xt8Gnvn9xtE3/a2HQrSZ9+aK7njNFWol62vVzWay3E9nB5nm
+f67i/NPV1c/Xl//cP/w692rn65uvrm7//T47vfH9397+/DT/d33d69+vLz9
7vL07cXa1kGtd7Z7dXPx7nj/zW6huR90bXoCW4n8drZynCucxv2XheyrXvdN
r/a6W3tYLdxVUrertdeD7mMjfZ/33SQdd+XEYzP/Za/wTT//TSf5bTv2bT/7
1aD85VrlsZ57yISugbVOha6j7letyl09f5sNnaUCO0HbTiK5FUtvWm19tbTp
ja4GEg2VqClhDeymrtPbMajialNEInMyFmyLNDNj2cCVur3t4urj2unfqtuf
IoVrraXKFjiZsiRfn+eoU3S+e5IsnCTziStGAs+BZ9nxK2Y8y4lbtqHJKgSJ
PU5cGgPOCgpHT1ss8cN21hRESSDa8MlR5Ozo8wN/hN/RJ/cF3f+DwjAkeMvY
81pc4hiCMDqOQRCXoJ16i3r8gpawZCJQVQSyaGJRM8MPUDV1jmtHm7xUBQ+0
lkoyvVdvXva6N2udm/7649rGu7W1+43dx7XBVat+0KydlKP1jNpUdqdroUIl
2WzU9suVvW62tZbv73VOj7fuLk6+vH/1483Djw9vf318+Pxw//397eeHVz+B
A3D25u6H87MPx62tI5dzPxA4aa3fnd1dru/uxRL7Qc9BPLUTze3mO0e17mW1
el2vPtQzb+vxN43EYz3xUI7el+NvqjFgod/l7G9Wsx/X69/tND8ftn842/j+
Zu+Ho973O62/bla+6aTeVyPvUs5XSfdj2vcm439dL9y22zcJ73XUfuwxHHtN
W173hs+35Xb0nY6m01XTSDoq6ZqC17MYe3JWkk1P8FaifE6Mz3eL9SaxwRvs
5Bq3oGa19z77ojtqfUEgDXN4LpY0zBD5qBzrFF1JmmMR6fJJoQ/PC+CZdsIS
+MIVqGk2YhqoKHUMNf+81GoEBgUcqJ0FLDEa4AvNNGGoYzj6KJL0YrRe7PQY
AvJXQ0v2wn0cNLk8dFwwNBlOWMYtAtFwYOdl+GkWHrg7snxi2TgnTdBURY6t
q0udGnL3nsxNJHlYqt+0B4+N2nm1elFbvWh0HjqDh9b6fWvtvta+bDevsvZI
2V+oFHZr2bVGZavZOKhVdjrZ1nbrYGt1b6uydrp78+oR8PfnG4Dyq18urn48
23+8Pri7OH68PH99df3t9cWHs9b6QKPY9brOd8/vzl5dbBwdee37PsdpyHeS
zl4evDrfu77qb9y0Vh+alXftwrta9E3B+zZne5uxfyi6P+TMX6b0H2vhz9v1
H3cqP+1Wfz4Z/Phw+dvt8S9nu98f9D5t5//aCX6TsXzM2L5MmD7Eje9y3sdK
7DbuuAhazp2aS5v8yKLcsxlApgV2bs3j7BoNbY2ywKWvmbVdpSiyNBdcIrvZ
nCBf6pFarAKFTR9L5Y46h99VO49eT1euTInEbpHIzpHHWWLfEkc/u6KZo8pm
lnSTbC9uCUi0A8uwYyhK5MQiYooBrYub5kIzPsNtg1DeQYAauoCY4sIn2DD8
Mgy3BLUxnwk+9uc+4pFxiLxDcX4OVhCyoI5DVRjIAmKKhSLxkJPLcCwZRaDj
AL4U+QTLOi9LLKlyS9KgxNowJ8680b1i5XL35Id+/Wg13q9Xj1rNi07vrr32
2Nl601i7r6+elZL9bHC1HsxVovWCL92OZLrx0vrG/VrreLt9sNnc26pu7NY3
z3ev7q8+nu4/np1+OD/79nz75nL76PLg8nL/7Oro7mLnatsf6qtlB07Lab17
sX9xunV5ms6cuy3nPsdVzHM52L8+vr/dO7ptNx6a5Xer6S/rgW9L1u/yxr/m
zJ+r3u/K9k8V57c5y+ea55du6Jde5Ned8m9XO3+7O//t4vCXs50fj9vfb6c/
p9WfcoavU9qvkpoPCcNDznubcl/F7Fce9bVJcG4Wn5llW4HQWjTV80f6ekBI
fp6z1DJY1tSy1MpCYImcEgpTEqWDJ3fyBGG9J59aB/oWj2453QOrMasQWwUi
O1cSYIl8DK6dyrXTeRbSkm5i2YZfNOGXbLhFM3pWip5gYEjLqDkxHEg0YnIY
ZoljyBmAC3JOgmW4UFQjgiSG8IVPPXvmP2YJn6ow1NbAjjy7aOQwZOHH0LPj
BBocDJspLmJyEQ5tOSEgMSQiRTLF9xAEARLftSRPMxURtW/T4e/7ghvB8Gaj
cd2uHq7mtxvVg2Zps1I/rvfu6xtvVjfeV4vbCXuqEG/X0v1qfrCarLaD6Va8
DmLU1trVZqm3194+3rk+bO/tVdZPtm9Otq9P9u5P99+crZ1c7hwDqp5XKuft
3l6mfBzwngOD3T3cX93ayNc38s2jcv2suX7e2z8v5E+LxZNa/bLTvKlmHmrJ
D6uJr5uhT6u+nzuBX5q2X+r2n0uWn4qmH3OGn4uG3xvOX0rGX7rh384Hv98e
/P5w/ffXl79dH/x4uvH9Wvr7fuzbTvy7suWrlO1dBlhu733cdRMy3tiEl0be
mVm0HY5sxDMbyVzHG2k4vE25qCXmrklYfclyWbBSkglLGm1EKA+LFFGNM+0p
ZUKrPlfbbq2ZbXW5JikSOziyAFMcoPPs88uGmSXNFFUyQVcTWQ4iy4mnqDAz
IixZgZ4VochSaOkOehZQbxwH0RY1r8TQjZhFK4puRy3aECT5KIL0vKsFEnDE
SxsTpCH0kO/DA7LQk6OoGRhhcZy4CJ9iIUgC5IwAOc1AEOZQBBqBLJ/mh6YV
jTlFhiFP8a11uWddZUgZ1MGAp5ZPb1cT3Uq8U8uut9KtemFQrh01Bm86gzeF
aMuj9LjULgBuO9/uxvLd6u5672Kne7zT2YdMUX318vD26uThbOPooLq2my6e
tTZO2lunWxdAnM8OHw9z1f1c8aKYP2t2z7dOr8/fXt3+FWTq462rs42Ti97m
SWvztlF5VYrf1suv6+nXOc/7rOdjJfQV4GzO8FPN9kvb93vb9bea+eeU7IeY
9KeM+req4fea/ved7N8uN/5xv/ePt1d/f3P2y/u7n95e/3TY/v6g/teD5ueW
57uy+9uM7WPG+TbjewWMmU95beQcWTW7/sBePLYTDAwSxd323no829NrugrZ
QCPqOu1lCT/OF8ZkGh+bH1Kbk/ZI2Jl1mkp+T9sV2rD6+1J1VCBzs2WRZaGN
xtaTKJxJ0hJwrVMc9yTXP9zjoMeDoETTYShqUIUBvkCikSQeekGNpGjQAFyq
EbmgQ9Pt8En+UJ8xL1v7X7bwjyIhH4WaGe5im4MmlJFTY9iFccLSOHF5fIKF
JIlQczLMvBg1xUCTmLgZ5owwRtY0KaoKU1MSOrsCoExspYAhc1tzhcxO3l9N
WRJ+nS9p8ud92Xp2UKse1pKdiDnq0ISijnQ51Wl4wg13tF0/2Ggf9POt9VRx
KxzZjmf2suWj/tFRpXbYGGzXN/YKzcPVtZPt01NA5P72Ual6CIJPvn5Y6x0W
a2f1zs3x/c3dp5vbT5eX395cfLzYOX/VKr0ve1+lPe8y9o9583dZw3eV4DcV
x7dp5fcl5U9Nx68d3+9d1691w68V/U9Z1c953c9F/a/bhX+72fvn/cG/3e3/
frP/89v7n7989fvN8c9nW5+O+z/uJD43/X/NWr/NWj/Gze9T9sek7c4rPXXq
jl3m46Dr0GrYLYExer3bO9tI5Ha8/pKQX9M76gpldIUalciDImnCFAjb0k5D
1ONZjSf2M5VLf2xLoU+JRVaRPMCShuhcw9yifGp6aWKGOS8KzSiKk7I8fsWF
A86Wpoe+fxIXjl8Yx9HQ82rUvBTatU3WIMkaFLQ9QTM+yRqD1kA+G2yoQQ3t
cIFal6NIQFgSNMuPnXsq3DAcHUagg9iFmpMgZ4SYeQVmhosg0pATywgceUIQ
WtBXV+wDvnND5t8VyeNyoUMuspu1UbM+btdEw6aoUx1IWKOlRKtW3q0Wt3L2
cNqRDLmrWX+lnOyuhkvdaKGZ6696wq1gYr2yvtfo73cOdvP17Vxjt9493Lg6
2rrc6x3tVvpHFSDFm2fdwVW1eNzsHxeBe2tc9TbO14+vj69vr95cnTyebV/e
HN3enj/eHt8+HB4/bg7etovf1j2fm4Efu9Ff1qK/dH0/dj0/9bw/b2R+W4/+
vhH/+1b2t77v95blt7Llt9XA3/fq/7zd+efD9t9uD/7+ePn7+7u/3V78Cmrx
+e6Px5UfOt7v4/JPecM3ccXHmPpt3HCT8lz4jRdW+YVDeWrVbJf7+1tXh72T
nie0VWiummwNuXTTpCkL2VkByyeSBZQul8pvUbmjkXYyNkgXLzOVM6O9KuDb
RMowW55Y4dtpy2rKkmKaIpjhOuckiUlRHMdygSyMo1txNAOObkHNCeATK3AC
A/AROGoEkYWaU0D/qsysFFBy5GkX/8jTsivU6PjEyPjEF2NoEKxGkU8L6nAj
COIoem4MQxnFzAL+Iuek45NMxAwbhp5GTq5MLZuxUywiw0iRhAWurWVVUevd
1llaucZDMnmQjq57LBmrUOdTOcL2bDHZaVT2KslaKVavBBIJezxkDIa0nkK4
Vcts1BKtVnGw3trb2b472n99tHd3fPL2EHirzv4+oHDv8Hj9bDdb2i6s7kfc
+8XMWXvtpFIHFD4rFm+63duz1zcX72/Pbm6OLm7XN8/qTWCqb47v7i7fPZxf
v9/f+Hg4+LRb+2l39dfT7m9Xg98vVn/bK/2ynQeG+de96u+Hq/88af59u/Rv
G4n/2E78943oP3dL/361898/3v7Ht4//+Prd71+9+dv91e8PV3+/Pf0ZpKf9
xvd151/bkW8qrq+z5g9Jx6t08DpsuTILLk38A5t2p9g8XDs4GpzsJHJ7qxtb
sezAqNs2qTtGY8mdjOpsDr7MrQm5zKlMtJeKbyZzJ6n8odmSF3EMYpkXuGwW
z0Rn6mgsDWmBN7GoIvG8k8Ignm8lclx4hhlP0+IX9GiyAtpaAkzRxDKSJMQs
6MAFalaGWjBA4jyG/mNH8Ms2ByS4CfEX0PalswFtjoATR4BPQ00Nd5dPjiEJ
w39+gT8vzizqawvyzIq6ILZvKBx9mb5qsTaS2UuPf90X2rJZq1a5K+UrFusX
+cwgn+hl3OG4K10KFcLmaMIcy/mKre5Fd3C/Wj1oV3e2N+9O7n7YP/ywv/fq
8PTr0/NPm6sH24n8gc+9E4wd+t37ydRBqXZYSALR3s0XDkvFq42D68OzOwAr
MF2r/dNC8TwZvi7nb9a37w6O3hyfPO7ufNjb/Op4+/NR96fj/k8X27/e7v5+
0fn1qPnDQfv7o7WfjtoAsr9frP/zqPfP3dp/7KT/86j8n0eVfz/u/PvD+f/4
9PE/Pn31j+/e//Pt+b99uP/726ufP9z/fHPyw1bx01Hz80b2r1Xnd2nT+2zg
Vcp155KeW8R7ViNQnqPNs+Ptq/Pt86Ptq/2N64E/vmE2dgzqWrAQlEiVFKpJ
aPYZwwlPLZXYimfPIql9l6ujlgREYidf4maxNItsE3lRMkfhTi7IprnuGUlo
gu8lCqJ4tgfPsOKhvdhyAC56XoxbskE77hlOUD0R03wIsqfppJGXGYSXTeIj
w6WSUKRCQvuboGvE1Mjzaq7h+kloRgk2hiBiKBoSyw1tmTf2RdYWz9AQaUor
NDmXIZeLfQ53q9B9kyycJlP7mfJVqnyVDNTDtrJPH83EuoX0esCcTYe7q62r
/tGnzd0v+2u3zdJWv3mw3Tteax1sb1zu7r852HtXDNbqavWmSbUdDIBIexAO
HlZXj8uFw0LxJBEGg+Z67+z26PymvXqRDp8XS9el/Kt69aG//ri397C3++Zw
783e9ofjva+PNz9fb/1wtfH5bP2Hy80fL7Y+nW5+e7T56RLc3Pzxcv0fl4P/
dbP1vx8P/98vr/7rdv2/zmr/ddX7Hw/H//npzf/86a//+eM3//Hx/h9f3v3+
9u6Hbz/++u7qt/Pd70/7EJEH0U9l91dR87uU823ceOVTnziNYBwebx6fbJye
Hrw6PHi31T3vJ0vbofC6zdL2hhJ8tpkyb11h+hW6kDWeiK2lcoex1K4/vGky
FaRCC1/kZjOVTIaAssCn08XAS5P43hlpeEoSJYrjBEEEx3LjFoHdMmBmBdBi
SOif+RKi51XIeRV8ij+Gmh1uJkW+eCrEy5Jp+FMhhpBFkyDyQqv1AGeH18Ml
WMNVWKPjWDKe4ZjkR0my3Iw0S5VEyYvKGbKAOru4siRkregNxnwkvpWo3KSK
F+nydbZwnLWHYwa/XRsGclQvn4W87Vr9ZPPo2+7xj/2dL9cPvtpYv+tWNlrZ
/5+qr46O8zy+/rMBWbZlkGSQQbIki5l3xbva1e5qmZmZmZlJzCyZmRLHdsOO
A26DbdM2TdJQG2iThh3H+d6Vnfb3+bxHR7YlHUl3Z+be55m5Y9DJHEaVF8Da
qvWr+QYdU2rlyPSDgxYU0s5k2ngyF4tiZzC9THqIz4+YXVGFJEoZjHOoQKIe
M2lGLeZRh3vU4x52O0aD/olgYDpgnws5VuL25bhjIWSdjbimIsHZkHMmYF+O
OY4kHSdHPFdmw0+upp89MXXzwvrNU5M3Rm3XY/prE55rk/4n5keuHlu5uDR+
aSZ6biJ6cnH25MTw8Yh/LWhf9uuOOhhH2D1LyMoZMhggWmEWMYQd8BEwLonB
K1P5dS6/NejQOI0cqZ1A0PX36QgERWcHvboKXlWP60JiYUyAYtFZbhrHjyXb
evrY9RUdlWXguurO2rL6qor2kuq+ww2ooibswTb6vjba/g5uQRs3tyrT1JHx
BdrflLO7Onvbwc15QGZuBVRSdn71o5nkfH8M/P69f879A+r7t4cZKAFwt+7d
6OPaviGHt2UCGfj4ja5pAN7s/LLcBlpBr6EcbttbTz7QRM7bXXqgqP5QUV19
fR9iSIHDGencAFM+xhHGGBwPm++h4WUUpIgMY5KRMhrRzue5Fboxg3PGHDpq
8S7a/HMmU1Qvs+lERp0qoJdZ9AqXxZwwGaJKllrN1OtITAeJ5AK+FgHrQ0N9
2O4AhwoUWS9PGCQg0hJuWqcZtpjGAUxN6jGjesLvGvO7xqP+qYhz1m9bCttW
YralhHc25JgI+6dibgBf4B+PplznpkKPLyWfPj75wqUjL1w99/yV4y/99vIL
V44/vxK5kbY/kXJfm09fP7X+2OrslWH3hYXJi6vzJ5dXj87OngEYdcB+1MJd
ZkMWBmtmSR2TVFiUSfED3x4U7EAOuQk4j0wX8E15bXGX0uoUirVkrorMU/ZC
ufW1g+WV+A4IohUKaYXhhkQ4rBwGUyARiu5WRGV5R011T2lhTXVNd3kzpqSZ
WNbGKGxnF7bzD3VK97WL8hrJO+uwuTVDuRWw3NLuTdv2by+BbiuFb93TuKMU
kp1Xlcm391Nu5tk4zdiUuzG7tPNhIHgzz57MeXXG5SPngRsewMQe+s1DD2XC
N3tvXR7A6BqoBQ2U3aVde0ra9+07fPBg5YE9Rf19LAovxuIHmMIwS5IE3tKZ
DjZDzyargMilUgwMjksoDIq4TonAI+SZtI45i3/R7p4z6sMmY0Qn1uv4Kp3E
oJVa9EqPUuIVwEhKKMqAI1rJJDcO78EhAsiOIKHXI5Z45VorjphAgMbU7BGD
csTlTqtVk3L2BJCTw/7xaHg8EZsKu2Z8xmW/cTloXIh5p6KBsUR8Jh5YjrtO
jYceXx757fGZZy+svXj9/CvPXL/90ou3b73w+su3bt+6dfPC6tNT9hsjputL
I089dvnGpYuX5yevrCxdWV8+vX7s1PLs+bH4yaBn3aNak+NWhKhFNnSR2pXi
04IEeGBowDmE9BPwbjon5B4OOlNBa9itMhh5ah2eZsDiRR2tpJrqwcpqcFkt
vBWGhrHhUPZAP38IY4BCOQ1NyPr6werynrrq7ooW6uF2TlUHvRTML+4UFYE5
BzqE+a3MnXXI3Mr+/CZSfg1+W0FDbiVmZzVxRyl8ewl8897Gjdp6//bw/yCb
nemwfXhjlOl/uGfnbtwxZRosH8qgm2nXyd5Tt6MKkzG/yivPLWrbVd6/r7R9
76HGwoKSjpou1IAQhVFSgOIrTjFkabY8yaUomYMUFtMqUY8JxFEWFE/vw6NA
SDpkSMY3WlwTFuuIWes3ABBrPAa1TyezqVlKGYrC7eyV9MP0SKyZLnFyhC6B
ygFQUzLWJxR55FYPk+OjUZLEgQmTfFQpSmm1abVmXK0c8wfHY8mJWGQ6GZpL
ehYDpuWwaT7knozFJmLx6UR4fTJ2ZWX0qbNrzz9x6fbTl157/vrbt2/++fXf
/eWNV//0h7dfe+212y+/8vKzT986M/PUvPe3i8lnzh9/7unnnrr+5LWTR4Ba
fHlt/uLc1LnhyIlo5GjMfzToWnHql+SMeRFlRCOP8+kxOsFHxmd6P+CQgM4Z
dScC9qhXY7Ny5ToaX0fhyvqhhPomcisIUtOCah9E99NJBA2VbGSxrMgBdlMz
urGd2tAKCGVsTTO+uo1Y3UEpAwuKO6WHwNJDIP6eVnp+HTa/Gl7YKShDWPd2
8ICivLMKt6McsWVv66M5hZnb/0ybdN6v9h1bH/TzZG6N8zJjwhl8cx5Y9Dww
YXh04/Y/4waQlXMwp7h3e1HH9kNduRWIvTWwA2UdheVd5ZWdNcW1nfU9kG4c
gWRgCiIs7SSH6yCgRCScnEs1SrguOpzJwInkFJGcbXLZ01p1EmBDOnVULTAr
BEa1zKyUmNV8nYLAlvQPqqF9GrpQQVM69GGHzucze91KnU/IjChlARY9OAAO
Q5uj+P4RrQL4xQ6bjcNWx5jVPB4MzCRD03HfXDo0l44sJVzLEdNMyD2diMzE
ffMj4fOrMzevnrn11NVXXrz59qs333zjzT/9+W9/ef/jP7/zwZt/+fBPH3zx
1rsfvvXG66+98NSzZ5afOjr+3LGJm49deO65F2+cP3djffLa8jhQjs8sjJ2a
HDuZHj6eTK5H7Msa1oxOMmpUpXmEGI/qZxA9WJSru8XLl4RdwZDZE7DFnVKN
iac1MiUaJIbY2M7qJ1C7B/sqGzAQCksQ5MoSUnUc0JU93Zw2MLOlk9XQTq5t
Gqptwda24Wu6uYc7JaVdkhIQu7CFUgTmHewSHYKoq3C+oi75rjb2zgZiXiUy
r4aU28DI3lX7SGaYZe+De8PM4MOeR3MOAs+GQdaGESIQxZm7hs0PJpgyNgzb
srYfytpxKDuvAkjyW/IrdhT35lYM5h/u2VMMKq6F17YS62qgLQ2DvV2UgT46
mWJmSKNUqoWJlQM5mYdTC1FMIdNi9s2LaHIxnuuPHbE6ZtTauEIZkIlcUrFX
LjLJ2XIhiswBgcWdYHFvvwLLVDOVJqnZofX71SavQhdUG8NicXigyd9eHh2o
T4pYcYNlxKRPWy3DLs9kwDERiU5F/BMR/0LaOT8WWh71r6S9c/HQVDQ8EfYu
jkaun1v9/c0bt1989vXbt954+69/+eyrDz/5xyfvv/Pu3977y1/efe/vH777
4T//+N4/3/nnv27feu65k9PPH0s/f2r25rUnnjp36qn1kSdWZy8vT55fnD65
OHdibOJEPHok5Fw0iGd1kpTNE+Wx01xilIUJDYH9baVuAiGgMwU0xpDJ47d6
XQafUajSoJDE1m4cGEcEQwltXRQ0V6RJC5QJgTKKQ3H7uqhdYBKoj9vWJ+gA
U0A9rMZuQVUXv6KLX9IpKu/klHaLD/dKD0O1xTBLAUi2p5m9q0OQ28Q6ABbX
MsbzO41bDnY9knMgMxK+dX9mnmWDJD+aU5S1syxTcDPGDpt/HUjcfD+Q7zPt
R7cdyFw3ZEaT9m3ZW7ezFJpXBs8r7jnQwijvElZ2C2s7WG294i6kEQxV4kkm
GqDc2V4B22PSjdi0KYs66ksed8VOIHpoZIzY6JxXqlJyeVipjssUIYnIKaCr
xQQ+uReD64BzkTQhnq+iqRVIogKGMAkNdoHWr7GFFJoAkx6GgjzNpWFkZ0rC
TgP5HQDXbBmJxMei6fFEajISng4GF+Pu5ZR9JR1cTqdnU+mZRHwuHlufBOrp
2ZdfevHVV195/a0//OXjLz678+M/v/r8668++/rb/7z3/kf/+Menn3zy6Tsf
/uPjH+/89ZMPXrl64taZ2VsXjzx//bdPPnb1ydPr106feHx99cL8+MnF+VOT
EydSqSNB60qmK0A4HIgnRMIEgxjjMaKoNkfrYTeNFZbLQzpD2OrzGr1eW8yq
sImhfbiGBjoExekbpPUi+AyDOANumkTW9zb19dWDEVDaEFGLYXiRZI/MPDNI
sdd18Ss7ORW94iakpgxmKOmWFvZqiiC6/e2C3dXova28ApBib7emAOrK7dDm
lEKztpc8uu3gBsQHMhBv3ffo9uKs3IqNXqzM3MqGaW3+Bg3LdAXcv0ncIN5b
gJDfnF+zvagn4zFb0JR7sO1AE7W0QwC8wOo6CI1gdnMntwvCRuP1BIqDQVBL
+X6XdTo2c9kzfNYZO64xzGL7+UyGWSEPcxlmAdesNo2rbbNyQ4LPtUjoch5B
zoVTZFyDlK1XEsUSCFIFhRvkHoct5dG5PHy+D9HjB9c6QNUREjJlUCVs9mGT
fthsG/aHR2PDczHvopG7apGsBPWrSc96MrEaH15NJ4+OBE+OBM/Opp55/PxL
t27+/rVXX3330/e++frfP//01Xdf/Xj3hzv37vzzi88/+/7bz77/z4df/+fv
P95578t///6Zx1+4sPLS9Uu3bjz2/OMXnzq3ev3ssSdOrD++vnBxeerUfOrk
cHw9bDqiJa4IIJNGaZJNTNIxCR4jgoN7+0AhkdirsQYM3oA1GDD53OaQXe1U
DQ7yIP0iilCAZjK74ByigsdzsXgeFJSG7UbDm7uR/RQc2UQQJKmyESzbP0h0
1HexK7pY1T3CDryhsk9+qI1RBFWXwPUHW7n7GsmHutUdzMRhdCC/37KzTZ5T
PpSdX/PotiKgFmfu+rcdysoty8otz+C70T59n1rfb5beUMrZv3nokY3zkI12
yk15WdsKN+WWbcop2LyjdNvu6l2VsIJqdGENurQcVFXZVVLY2NoIG8JbBwZ4
VIpZrho2+E6q/Kc1oVOW8BmL/5SA4aAj+SKaFgtjMRhWjXVKZZ9RmMeFEr9U
YBezrQqKRMHXKLla5RBZg8KYWGK3I+nzDNukJhsK6ehq8vU0BPDwlIQzYtQm
Naq0VAAUvnGXaSISmtOwFoTEJatiNaRfi/hPJFJHY8lTo6nLc+mLC2MXV8af
unT61jM3bv/+9msffP7BDz988e1Xn3/4t6+++dePd7/94ot/fvrj9//4+c6n
d3947+efPvj2q7ffeuPFx0++8vTjLz/75EvXr9y8sHb99PrlUycfO7p2du3I
iaW5UyPDJ8KOJa9mTs2eNskmJfQxIS0pZoeHoE5wi08i8+nMPrnao/W5NW6X
Qm/mSS0kihZPYkKxmGYwuXOASZILuHYeTTXUQ8D3ElDdZNSgmMULw9GaAbwV
RnIjye4mMLUGRK0GMap7BdU94rJeRQXWXo21F7fRC9sY5YPmNuZwHSm1F+rZ
0+/MKcdm727YtPPwRhQXAU9WblVWbmXWzsoHzDljM/trvzSQmR96wK8eztq6
Cfh4IOQBsp29K3vb/m2767cfaM8r7c871L2vtOtAYdNeQAsfqK8s6wS1Yjt7
eVhOhKOckTiPCJzHVYHTOu9xlW1VIomJGDo+XsBA81S6MaMuLZME+DyvlK6R
kCUCvFBG5CupPA2JLocjlTC0kaNy2kc87rRVojch0bbuNg+NFpQq43pLymRL
6wxjcv6UjDXu808GgrNC/LxOtuB3Lscd64nQidT4sVjq7OTE5dWF86uLl48s
PXnxzAtPX/vd7Zfe/PCzT3/64ZMvPvvkk4+/u/PVnbtff/vlP77+9ouv7377
wy8/fXT3p398//17//7y9VtPvXbrhbf+8Pbvbr3w4pXjz5w7+sTZ00+cWDt/
5OiphanT42On4sH1iHbZyp+zyKdtinEJd0yjShEgdlCjT6YJOoJ+vcWndbiY
Qidb4GALbWi0DQnntrUR62tJPRgqHM8iyclDXGQXbqiXBunAo6BUHteFQatA
PdymLl5rt6gOxKwFMWo6aLUgWkULpbpXVYt1VaMBfFmHexWHccGDQ9EDA+7d
XabcJtG20sFNueUbjTpACB/M2lGyKb8yK/dwVl7lhrFhzv0e+Icf2Bhu3sD3
4QeH1Rkxlffo5r1Z24u27K7Zuqdh24HWnQda8w+27iuDHCzu3Ju7r+RgeVVV
d0cXoISsFMUEW7vAMy4IbKsq/xl94CRfNkInqtlkBRMv43L8jvAJS2BNrB4R
ikNCpp5HlPDwPC6KxR8kyhBExQBCDx3QkvlWY9ztGLbSRVYY3DWI8PAEIZUh
6vCmvMExi3FSxp7S8CeCgcmgf05KWNFzl7zmI27VyYjrZGr0+HD8zNzEhZWF
s6vLl48defLSuZtPPvH6727d/usH73762QcfffKfOz/evffjz/f+8/O9b+78
8OWPP/zrzr1v/3X3h3//+P1nd++8+/bv37j17F/eeuPlF1968eqZVx4//cyl
81fPnLy4vnJhMnFuLHUqkTwa0q+4JYs2yYxdNalgj8kEo2RosK8lJFdFrL6A
1uKVKj1ouA8Dc3DFNhJN39ejBrWKQa3kjn5c9xCuE8lE0SlwFh7KgoCIA50Y
EkUzhNODOul9EGF7n6SunVnbTqntINeCOdXd4maUsW7QWgvVV3VyymD6IkJ8
P364iJAuRPl3t3Kzd1cDBOn+jNKmvMpNeVUA3JtyKzflV/3PGf6/Y+APhsSz
NvxVCrNyirJ31Wfvady0vXjTzpKtBY3bi3tyD/XtLgTvLmzftb8uL7+0vHaw
voPRBZdhJaN04xJdP8syLPDMa/roBf/sdalhkk7ScsgqKlbOZThNzgWpYZxv
GOXr0hKJD6DWCgpfSeKosVQlgSdDkhQInJYi0nI0epbCQuM6cRQPvN9HxoYV
mpjFNuK0j+nUEzLhpEkz5bXNe9SLOu6yjr8SsK4HzKcSkbPJxKmR2OmpxLnF
iXMrM48dW33ywqkXrl/53QvPvvXWG3968/X3P/jgh3s/3/3lp59/+fHnX366
d++7n+99CwD9zZ2vP/72209/+unv7//lj6+//se3/vTKrRdffOLSy1fPP3Pl
/KUzZy4eWb8wN3omnQBU0lrMtRLQz3r0cw7VlEo4DrA+MjqM7ItJxBG50qfS
uRkMF5HoohIdEq2NyTZCIFrgQWCYHSBCDwbb0c9GkLAw7tAAB9FN7mseRMNZ
WIwcPiCEwYS9EHFjB72hm1/byW7oF7VgTW1EezMt3IpztWJNtUPmA0OhQ5hY
JWe+BBfJq8ZnvBcAsDJz3GWb8qoBfLN2Ht6UXw3U3/9jmvRfD8P7fTt5WdsL
Cxrx28uxO5sE26sJ2UB6z9m/ZXftjqLO/JLenQfacnaWbN95sKCorbi4tbaN
AqF50NIpnHIOr5pnGFb4tiNi9wnPxOMayyib5xJyLVyGUSFxyrRJoSLG0yS5
qphIEhAzNDKiSMWQq/Fs7gBRhOY4jQm72qMiiY0sqZuEj6D7nYOQABYBhEbM
ZBnWa8c1mkkZb8qinPK7Zj2GOY9x3m1ZjAaPRX1nEokzidT56ZErC6MXlqcu
rEw8vr5049yJF65evPX0k39+9YU///7mR59/dueXez8B+N77/t4vP/3yy8/3
fvnh3i/f/fTz11/+8M0nX//nnT+9+faf//ran/7+6u9+9+Izz734xJXnrpy7
eub0pfX108szpyaSJxOJtZh/JWSc8RlnrZppnXhaRE7gIGF4W5xLjgiYPj7P
RaU5WTwHX+Rgcjx0vBnare7uttHYYhSRQxCzh6iCIQIFRqHAGVSCigDnElBs
7JAMjdUjMSpwJ60FRG8dkLVAJWCCuYsZ7mCEwOwUTDjaRvSVId2lmFg1ZaQY
Ey0Aq7YWNGcsU7bu3ZQHYFqxaXfFRntGVfae+k27an8N202/ydhK/jeEswHp
tPUgqA5ry28R7+rU5jVQs/PLgRfJloK23GpMXkkPkKJ37K7NK6g4WAIqLGyp
75H2UXw45QxJM0fQLNC0S0zdkth5TGxdo7D9VE6Aw7IKeU4x0yRiaEVCJ0cW
5UoCTLKGRZIC/6JkqBVYugRFlsJxHkvCaQrpyCKfwuDFIYPoHi9uwNcPDgql
cZszbrSmpZIJCXfSaZv2O6Yi3lmfedmnX4qE1mKhU+nYyfTYxfmZy2vL54+s
nl9fvri+fvXksZsXj75w7bFXX7r5p9duf/7VV3d++em7e3e+//m7u7/c/eWX
e/d+uXsPiOV73/1w97vP//3pH28//8677775zsdvvnzr5RdevPXU0zcfO3vt
3InLazNnlkfOjiVPxMPrIeeaVTBrlU953VNW07hckmTgwzhoiEmJMAkhCtpF
pvj0joDe7uUJPBSiFTkoawdpECgFiSflGkRUBQ9AGSfkkdRMlofN9mCxKsKQ
kk4zoTHS9g5KJ1QKhsr7MVoIy9/HiUL5yT7+MFI2381Lt1DCddSxKmJof7c6
vwK5Nbd0845Dm3eVZ++uy95Tk13QuLmgZfMB0OaCZoBC/6/j/aFHMpz5PsqP
bAKS+aa8is276jbvbd1Wid1aAtm0qxpgaNtLETvLhwChtB2Qw/kVO/NLc/NL
9h1sqm6ldCCNEO4oTjaNVS4Q1bMkxQLLuEQRJ1BUB5luJWAUFLKBRjIyhngC
mpzNNDNIGjJWxmIYpRyjhCyVkXgKhoqPogpRLFo32khieaRqLxblJuH8Q30B
RFeYQ49aXHGbJ6VUTcn503bjTMg7HfYtODUrDsVy0L4S860mA0fGk+cXZ8+t
rZ1cP3Zqffns8sLlY+vPnlt76crJF5+6fvullz75+tt/37v71b2fvr3zzd2f
N1J0Jn6///nej3fufvevT9/921u3//HvL9797F+vvfj8y888fevG40D8Xjt7
4uKR5XOr4+fGEscT3iMe6ZqOMePUj4eDky7HuEoRF0riPH5YLAtRh4JkuJOA
9uhdPoPPB6gkLsuBgusBaoGAaUgMCVnMw/J5VJWEkzH/oTHdLLqDQ1Ly6RoK
UYtCSnt62HBMZp5rkGgZYvkGONEB4ShcPIZXLg2KJ/s5yXZSuKJHkHsIDKTQ
LTsOb95evDm3dMve+q2FXbk1uJxDPVsP9W4p7Aay9EbAPrwB68Z1wgN8t2Q8
Ae43yuYc3FLYt6WwJ7ugAfjEHWWorfsz3tRbdxZv2X5oG5Cic4sKSkB1IHrD
oLFfMD4knSGrplCyUSgngeTG0EwPAmtAE82IATYcocATLCyKQSG0sshaKklP
o1uEXKuYoRNiOUIsU0ZiSweQajhGCgJZMYMehd7BENrJLDcB5yUjvXRCWK2J
W9xxpW5SJZ4xq6bC4emQd8GmWLZKlvy2hZhnKeZcHQ6cmB47sbh4ZPXokbX1
k4tz51cXbpxcfP7s4q2rF156+sYfPv3y/Qy+d//93Tdff/Ofuz9/B+B79+dv
7vz47++//fzzLz/7+KP3P/nu2z//81+/f+nWy09ee+HxM789d/ra6ZMX1lfP
LE2fGxs+FnStOzQrRs5MwDkdDs147dNKXlqtiemtcZvbz2N7yBg/Hu7Ak+x4
iluocLI5is4OYQ9MAceK0TQJhS/CMEUUhYhrYdEtJKKOSVCJ2EY+TUPEm1AY
PWyAB9TiISDoSSYMPzrIS8OFaYp2Bq+Y7heMdZCDVW20w3WDO/LLtu8ozNlR
snVn6dbdGWv97cXQnJKB7D21mw+0bz00kL278TcPwH34N8CfDMQP0vX9ZoCN
Bo89m/e1Aq+HrUU9OyqROcW9WwqaN+dXAC+YzdtLcnLLcwvBB1oZYHq8jRod
FI+hZXNI6TRUMDLAH0GwvEN0d8+gBoa19kIEkH42maRhEFVMghRAmcb0cVg2
MUsrZGi4JLkoU4XFRgxKCRm0DkBdVJJPoQ/aon5LwMkR+PEDEdJAgEWP8Xkx
Om1YqZo0asdDkQmPZcksWrZJ5oOOuZBvJRo4kooemRg/Pjd7dGb62MLcqdXl
88szjx+ZffLY1HNAFD959Y9ffPUeIIUAfO/c+eTTz7/56vPv73z7w/f//v4/
n33z6Qeff/vNF99+9/lPP7799w9//8LzL924+vxjp588d/LJE2sXVpbOjiVO
xcLrAdeaz7hsEU+HPEACmfHZJ9XyMZkwrrfFHf6IUhNC9QcQnUDm8WHgXh7f
ypZIBtAiNF2IYcpJfAVZIMHzZUwtj2Wi4BRAHuNw7Dy2kYvjM/FKJsNGJujI
FAOO4cHzIlzDAlO/SlbN4ZSLBNU8UjjZR4s09YiKy/t37anK2126M798Z0Hj
jv3NuRWoHeXYzXvqH91WuKWoc0ctMacEtoHpw796ZD1636zywf3ghjgCKHf2
7noA4uy9DZlnd3Umye+q2pxbkp1zILe4d19mot9VRxutxQM0IDYgnoaJJvs4
8T5urI8d7CNZQVApCCLt6GL2Q3hUuomMN2CxSjrVwmR72GQdG83jYIVCgkDM
McloMi2Wouju1nZ3uylAzOK9co1f73BxRD4iOsQiRbi0CAUVRfeNSvjTasm0
xzVt0y065Ate06zXuuC1rkR9q4nAkbHUiYX5E3NTp+YmzixOXFweu7o+dWN9
7KkjYy9cPf/aB5+/9e/v//bDTx/f+/mTr7769IN3Pvno4y//+ckX77/75d//
9uU3X3/1052Pv/vudYA/P/fsK9cv3bx07KlTK9fXps+OTJ5Npk/GwyvR6FLQ
Oe/WTYVd0wH3lNc+rpKOS3gJlS5htYa0Zj8a4R3sCRAHgvBOL49nYcuUaKpO
aJKThaJBgnyIpKQr5EwNl6ziUpQ8gZutiAjlYRHXKgcyNtcp4FjpHA+F5RFq
p2XeUxzTKlO/SFAvktRzRM38ID/ZhjQVl/UWlnTsOVi3I798x77MoWJ+5WAO
kJMzp5R7d1YidoHVuc2SjUGkRx5IpI12jkyL+/09Dlk5j2zesym3IsPE8ms2
KHcZgOym3NKsbRnfAKAc72riACyukjp+GJ8sGXTVYlw9tGA3b6SVEQHRAt00
b1OfoA2hau5kt4GoA3ABCqtFI1U4JAsLpRIG+WQUnwAhcdBU9gCCieGxYBgz
laNDYvSdbU4iysXl2bl8J5PtoNI9HE5IJIgJGFFcb3igfYJHnJKxp82qGbdh
PmBc8JnnXKZ5D8Ci3YtRx1oqdGJ2/OTi1OmF2aNj8UsL41eXxq7PxX+7mHj+
/LE33nn/jU+/e/OrO+//ePezH77/x0cffvT+Rx999OmnAMpf/+fbe3e/vHfv
r59/+eorv3vl6Sdv37h488LKM0fT15aGz6eHz8ZjJyO+lYh/wWeZt2ln3ZoZ
r2XKY5lScidUilG9Lmk0hLSmMJvuhHb7AP2LxxhpHCWBrySIlGy9nK7iwQhy
NEsNSEKKUEqWSEQeviLG1SaE6rRYldJow2yqjs8y8bk2oSwUmrmsi10U2I9y
LWtE9TxRPYdRzMFYoXaotKyy72AJeEfeoe25xTv21uQV9+aW9OXsawbQAeQS
UIh31DG3lWF+He2/f1q14eP9wHhn4w5xy74MrBm9XLFpZ3n2rlpANWfOsTMG
lbu27msrRroqmDNF+OQBdPQw0t6MNrSh9M0EfzPR1Y7V10EVtSBGfScbUMcd
PQIYXAaFcDEoOR4nG+jE97cgh6DsoQEea4hDAENwPWhCa5ekt08Hhep6u614
kk2ocvOFriGEm57xWwhpjFGFMkwlxRHdoxLOpJQ1a5HNONWzLv2iTbZol834
LDM+66LfuhJ2HpscPbl29PTS7NmJxPnZsStz409Mhq/NJJ46deT2G2+9/vF/
Xv/ihz/+5847//rmgw8+BrL05z/88PmP339658eP7t5976tv3vnrO6+99MrL
z9186cZjz51ZuT4ffGw8eiGZPpNKHg2aVvy2ZYdqSUqZc6mnfdZJp3lCIR5T
SEbttqTTFdaZA1yWBzngHsJYCTQzX2UQGPVslQpFlMGGFBiGisCRoalKulhM
EUu4ZqEqydMPSwwTJu+qXJ4ioVUMvJyOlzM4XlvijH30cYnzOMu4wNDP0fWz
FO1CP1rbBKZXN2L37avK21O1p7hzTxE4v6h3x6GebQfbNudnpnqztpcAIQkA
vdGnsdGH8+i2jZuF/A1DvO0bN8I7HsnZv2k3ELnlGcmcW5Z5u7340W1Fj2wp
yM6v3FGO3AexFqLDBwijhcTkYbS3tINV0yerhpkbUbaablENmAvgmzmEAbEa
O4U9UHE7mAqFy8g0IxbJ62lBoPs5JCiNMQS8JeK6kPguNAcEkrU26Lo6rGi0
jcHz0kgeWLdPJPaqjWGrN2xy+jCIVH/dmJw/JmZPmWXzNvmCWbBkF827jTMu
/axNseBQrHj0R8dSx5ZWji+vnJpKn16au7iycnVt9vryxPWjS7+9dPHmCy//
/uMvb3/8/e/e/fKvb7/73t/e/eTLLz/59rtPfvjxvW9+fOuL7/74hz/fvvXi
y0/deOHKiSfXJh4bD16J2c8kR06mUke96hWfacmhXhQiJh2G8XB00qqbFlPH
Daq005vwBMIGh1+icBEItv5eE47q0odczjG90KweQGngSNkAUoKmcAapHKyA
i+PyAHnId/HFwCfNuSLHFZoxJk7OoSo5FAWLG1LZV9X+0xLXca5lia+dp6vn
kIwAuE/YUA87fKhmX/7+goLqogr4rqKO3P3NOwpBW/fUb91TB+jfRzdnGnIe
2ZT30IP6u2kD1p0PzOEznQC5j2zem7XjMKCRN84zq7N2lAKFO3N2DTw7irce
7N5Zz9nVadzfby1BhYrRwYpB06EWZjXKWIP31CDtFW3s6g5KTRe7DkStAzNb
u/ltfdK2bg4cIWMzbVSStr8dje6hD4Iw2AE6l6Zi4fnkfhylvZNQWwuIfBu8
38Hg2LkSJ0fsVlgBfANmt9/ktCMGgz0NIzL+qFQ4reVPO7SzetG8Tz/ntcw4
TXMm8YJNvOg3LyeCa+OpIwsLxxYXTywvnV1bO7+2BGTpy1PDTxxdu37xsVt/
/PDN9z9/8w/vvvHqW2+8+sbbf/rL3z789O1/fP32B5+98fbfbt986db1q89d
Ov70sbGr88nLCec5r+5kfOx4KrUSsy+GXXM20ywXPQ3gGwxP6KVjAmpao0lr
dSmDKSKRetksO6Tb2AO2cGVuc9DjGbeqfFocTQaBaYh0FV2opgslRLGEIpEx
dSKeSyjyZ3oe9BNMgpyOZIupCiHbrTQvGn3H9ZEzItdxsfuE1LxM5MchSBW4
HdfciC08UL9/X82+fdUHS0C7Srrzy+A7i8A5uxs3by96NGPmkLH/zcop/O9V
wiPZuzeuhvfeb9a6f++fwTevOiu3clMeEMVlAL6ZwM8tz86v2VLUn9ehLIB5
S9BREGeiFh8s6ZMdaqNWwTWVOEcFXFvZI64dkNf08ms7mQ2d9M4BKXTI0I9S
w9FqPNlOJBignRQKhIjsxDBxAqDicOl6EoRAae+i9SLkOKphCGVicByABNZY
PWqXX231KvUBjd6FHAz2dcTZ5GERc0JIndKLZjScOYt4zqGdtqomzJppi2LO
b5n3mpdivpXh6JHpmaML80cXlk6snbgwMXox6r66MPvUxUtP//6vt//2+e9/
99YrN28Bovi126+9+fpbf37rD2+/+ebvXnrxpeuXnz67dmN98vpS/PJw8KJf
ey7mOp0cPRqPrYYtqx7FkpyxyEVOB91jIX9azhsRMxNa/bBRM6yVhYiD3r4m
X2eNc6DTylO4zSGPe8QiNqhRaNUQUUmVyEQmBVUgohmlfJtI6JLoUxrXvMa5
IJJH0XAOF6i/ZAUVLlRrp+3hs/rAcWP8nN53Sm+Z5bFdQ4MiNMEEhUsqDtVW
1wxUVPWUNqAP1JP21AztLGzeAkCzvXBzXkX2rupHt+y77yqcMRne6Oh4JGdj
S0vWgy7KjDjavDsLSOY7yzNvtx/K2nYo49iQWwp8ek5hZ14zpwDmLMFG6ijp
MpS3uE91qINbBtWWIczl/fKKXmkb3twIk9Z08+p7ea3d3D6YDI5SI4aUSJQS
OyQaaO5FgwcHO7EUgpJG0XHJSgaMzOhBiNFkMQwu72q3MjgepdGvd/lUBp/O
6VWaAwqtfwgWgHclmIQkizTCJY7rpHMGzpKWNOfSj1kNoxbtnJ6VOfZ3GWdC
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
6e/+qb39p+rgm2z9VX3t03DnT5l4L1F/W9n5Pb7yA89/SFSX8IosRhjCsOxo
tulrBnCKLxC/T4EYaqQDnw4kRT/tXs5q8AC+S+SX09bfwFdDk+wwbBiev0SW
YFh6DNuA5RixXAueIcdTRVDwlbiZqpjI3ZOFNxShkTwwkDrrHE1KGRxZC+fu
0oW7cumt37krV87omtXfciXWw8XjZP06Vrm2+toydVRhyGs9PYkmJlFHhcqI
UJMCwIkUfp7EyeJr+QINnaVkMSVMpowvtvMUIZ4qzlNFxJqwTOXXqOwGfdBs
TVlsWYPaY9L6XUa/x1MJR/vpzEomXEn4yxFfvRgoFRzxvCtZd/gbznC3uDqM
VYq2RMnibjkDFYujYXP0/dENp2nNad+MBtbK3e1SeQIgK3V3Ssvrnd2D8cnJ
6tbR6u7R1uXxzuXp4e3p4f3e2v7+zu3ZxaeL82+PDh62JhetQHY111zNtVaK
rY2Nh8ngbNzZ7yQ6w1Rzfe329Prno+ufVofXxyfvT4++WWkfjBrDQWunWtyI
Rwb54snqwc/9y/9snf5jeP0/wvnDWPMhN3xvCq6aM9fOxkdJ6orh2SWpMlh5
Gi0IA/2L4jieCNVsqOgU6z88teOY5Yy+lGMtfO0XvTSdhgZ8NVSUNQ3HGCac
LMGLvXiBDQ34FU2BoUgwZAGBraHJAnR5iG2u8hxtnrstDa0ILAWGxCWwtbSJ
PWv20F29CrbfuErn9vjEGh65swfh0lmqdR9vvgbUS61L6EwFHaAT9oY71JHp
s3xljK8I8ZVRvtzH5Cs4Ih1TYKLShTQKh8ZS8qVOoToKIBaqI1K5S6b06BQW
jcqhUXu1Er1W5bIbfQ5H0eNfjoVrIYvfqbKGvOWErxYxBhLWYMoeSZl8JU8q
prNFTKFeujKobRVClaDKEFHogNPvOeyrwdBqcrkfyfbSy/3a+qgFrs3dwdbB
cG9/dLS/cbMzPNqbnB3uvgIce7Oztb1+s3/w/ujyx6O3/7az982kvb2RSHXM
poQpkLaEusnGsDjo5Aaj1Zv1yXWnNh73D48OHycrF43iatEZrCXa8UArEmrn
G3dbb/9H6+LfB7f/s7T7u8qzYohueusP5ty5InoizD7wMzds95iiyWIEXhTb
iRaG0DzPE7hPtGr+uVxn4WlG0txzouGJhkHzkuZQ7Cm+0GCOORS0Iw24FpKm
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
kgNfvUTTwynq/wt/440I
      "], {{0, 113}, {160, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->Magnification[1],
    ImageSizeRaw->{160, 113},
    PlotRange->{{0, 160}, {0, 113}}], ",", "32"}], "]"}]], "Input",
 CellLabel->"In[42]:=",
 CellID->1922184340,ExpressionUUID->"19839e79-8ce7-46c8-b4d2-50f708608929"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt2TtrU2EYB/CDkx/ADxDBD+BQsCLao2IpgoJFHVwURRBELFixg+jxHu9V
QTo4dHB0yHjGM2TIkCGEEEIoIbfm1jTJ2FGtz/Oi8f/6P20aY7HP0PBrDqcX
8j7nuey9fHP66i7HcfxvX76//ojFifUX77zr/BzG8v7kF3EMe+qT2Mfe/1oc
YEcei+PYxWfiBLYbFSexew/EKew1T5zG9vX6DPaC/r5ZbP+pOIftqvPYM8/F
S9ieXl/AnlMXsRf0/1XCjurfW8Z274kr2PO3xVWLb4mXsRdviGvYwRVxHdu9
IG5YfFbcxHbOiVvY3knxisUnxG2LJ8WrFh8Xd7Cdw+KuxXq/HrGcd/N9DbW8
P/ZZro9hJ/R8+9iRV+IA2/kgjmOvvRQnsPfMi5PYd9Up7Nl34jR2Uq/PYO9+
L85im/vlsBtvxXnsub7z3+/xJ+ICdvBQXMRuaP4rYffuiMvY7nVxBTu4KK5i
L14SL2M7er5qFp8S17HN+WtgO664ie0dE7ewnSPiFYsPiNvY5n6r2M4hcQfb
5IcudqD5q0es+cARm/j1/dRHcQx7Ss+3b7E+LwPs8UfiOHZUn2cJ7MgLcRLb
eSNOYa/p+U5jR/X8ZrB7en6z2BG9Xw57VvNHHnuf/rwl7Cm9XwHb09+niH1N
82sJ29d6rIzt3RdXsGOaP6rYzox4Gbuoz/satjstrmN7R8UNbHN+mxZPiFsW
j4lXLB4Xty0+KF61WPNXx+Iz4q7Fp8U9YpMPLPGX6oNB+wUTSeIUcZo4Q5wl
zhHniZeIC8RF4hJxmbhCXCVeJq4R17FHXh9otLFpfaDRIe4S2/oAjZD1gYkY
sU8cEMeJ+8//Tj5Yf9nu84Nh1wcmGsRN4hZx//kPWx9o9J//sPMDjS3LB5bY
Jvlg2P0Cmx8M2i8MOj8wsVMf/NmjygcalvrAhCUfmLDUB2x+sOF+gcwT//X5
wf++X9iZJ4pt88RRzw/IPJHOD8g8ccv2C/3B6gkW7PpNvs/2n2y/yeYRLH+w
/MDOPzvfrL5n9Tutz8n+ju7nyP6N7tfI/iz051eD7L/Y/Irtr9h+iu2f2H6J
1X8sn7N8zfIxzbdkP8PmK2y/wvYnofcjJsSW+oXVJ6z+YP0G2z+wfoHtD9h+
gM3/2Xyf9edsPk+fn2y+zubnYefj/bHJ/MCeFybYPIrNm9g8ic2LWP/H+jvW
v7H+bKvyg4YtP2iw+Yi1vpD7sXkHm2ewecWIPg/Drh82mh9MsP7b1l+TeVro
eRmrN4f0edjo84LNm9g8KfS8aET5wcRmPw8abJ5iqR/o84LMPwatH0bdX/xz
9eSg9QPrp1m//Ht/8RUgivV3
    "], {{{}, 
      {RGBColor[1, 0, 0], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{2, 464, 465, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 
         54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 
         37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
         20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
         1}}]]}, {}, 
      {RGBColor[0, 1, 0], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{67, 462, 463, 130, 129, 128, 127, 126, 125, 124, 123, 
         122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109,
          108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94,
          93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 
         76, 75, 74, 73, 72, 71, 70, 69, 68, 66}}]]}, {}, 
      {RGBColor[0, 0, 1], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{132, 460, 461, 195, 194, 193, 192, 191, 190, 189, 188, 
         187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174,
          173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 
         160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147,
          146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 
         133, 131}}]]}, {}, 
      {RGBColor[1, 1, 0], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{251, 254, 253, 252}}], 
         PolygonBox[{{241, 250, 249, 248, 247, 246, 245, 244, 243, 242}}], 
         PolygonBox[{{196, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 
          198}}]}]}, {}, 
      {RGBColor[1, 0, 1], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{318, 321, 320, 319}, {314, 317, 316, 315}, {262, 459, 
          263, 261}}], 
         PolygonBox[{{288, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 
          297, 296, 295, 294, 293, 292, 291, 290, 289}}]}]}, {}, 
      {RGBColor[0, 1, 1], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[{{385, 458, 390, 389, 388, 387, 386}}], 
         PolygonBox[{{337, 354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 
          344, 343, 342, 341, 340, 339, 338}}]}]}, {}, 
      {GrayLevel[0.5], Opacity[1.], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{392, 456, 457, 455, 454, 453, 452, 451, 450, 449, 448, 
         447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434,
          433, 432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 
         420, 419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407,
          406, 405, 404, 403, 402, 401, 400, 399, 398, 397, 396, 395, 394, 
         393, 391}}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{}, {}, 
      {Hue[0.67, 0.6, 0.6], Opacity[0.], 
       LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65}]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.], 
       LineBox[{67, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
        81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
        98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
        126, 127, 128, 129, 130}]}, 
      {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.], 
       LineBox[{132, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 
        143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 
        157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 
        171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 
        185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195}]}, 
      {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.], 
       LineBox[{197, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 
        208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 
        222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 
        236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 
        250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260}]}, 
      {Hue[0.6142719099991583, 0.6, 0.6], Opacity[0.], 
       LineBox[{262, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 
        273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 
        287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 
        301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 
        315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325}]}, 
      {Hue[0.8503398874989481, 0.6, 0.6], Opacity[0.], 
       LineBox[{327, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 
        338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 
        352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 
        366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 
        380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390}]}, 
      {Hue[0.08640786499873876, 0.6, 0.6], Opacity[0.], 
       LineBox[{392, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 
        403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 
        417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 
        431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 
        445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455}]}}, {
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}}, {
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[
       0.]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[0.]}, 
      {Opacity[
       0.]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{False, False}, {True, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1.}, {0, 3619.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7688018335828753`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"55800c55-8727-41af-b171-6c4a4c6a14fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageHistogram", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJw9eflbKne6Zz/z0/x4n2e6+965mU53bp+k00kn5+RsbsddXBEFVFRAkV1E
RBAUUBAVRED2paiFWtk3l5OkZ/66eb+YvgWUVWXVuy+f91tfaY9kxv/xu9/9
zvk/YSfbO510OPY88n+Dk3Wbc99kM+gXbCcGk8ExqEW3KeGnhx/HcQzD8jRd
xnN3sbt4+v4+Ho6lkiGnN3BsOknemHfsd5lQ4CoYvHadnoSwQoakL/TWPIeH
/W6jcmPNnCIJnMJDUZKmKJ5nWZpmWZbhOBZIswzN0JWKwOMELwg8Bz8eXaYJ
isp5XL6b24DX73WeXt0G3L5kuYzfZwkMu71KgzB5Ih+0O/YWx0an57cOT2/S
lzptMB+/CScIPJoBics0zTAMiRWKxWIFmHBAHm2IDfDhBZCDIqgy6EaW8HKZ
zMaieZYDmagSeqiQyWJ4JhiKXrmP7E7HqS+QxgupaALLRo99pXS0QFEkMCnD
huM4hiOSgsDxaOM49EM6/nbaP2dZjq8IwBeMCrKxyLQc2sONyC5wR7mMrpfL
GI4VCYygSJCPwHAc5ISrBMMgUgxSDqj0yfJ9Nr/taAYR4dHll4uwIbaIC00C
MQq2chnIog08g5NEqYihQwpdpMsU3n8GPQHEWIFDzoI9EBZeeP03TbAug/yJ
zIyOGKBAkIg8hexC0UCCBhuBuCROggTI22QJyxdK4HLkcAHiAQQFugwHluB4
dAmUQh++z4cBWdFzQI8ggTAJlJCgBE4CBwLpQRDgAbb/AIeeRkzhIlWp1mr1
erVWQTbiBcQSKcXxIAV6iKbgALmE69u/bzlQpYzUZkA89K0ISCgUM1UUN+iU
67sZjFKpVIVatVoDNtWqUK2gwwp6DEkPspcJAsgjxiBJvb/V6o1Go9lsNerN
ZrvV6rRha/W/7XanA6fNJroD/b/VajbRvXAF0UfEq30CoFG9BjQrSLtardFC
9zSaDa7S/o1S/y+Q63Zfdt0e2nV7cNKDrYvOe72H3sND7+W83a2+MKkjmnXg
A1L0JakDYZC3v4EkOAsn7U6r1UW0EZ3uv4g/PAGl3kMXaD70CT88PKKDRzh+
fHp8aPb64oKxYAMtkCFA0xbskJrAEqnbbnW6HbAM8Gh3XxTotIEmUqLXfSH6
iOjC/rG/Q+dP/S9sT41GDQmObA3k6/VWC/HomxFYIW5AGj7IPKBAB+kB15EQ
9TbSpS8vEhnJ/PT8/PT0/PT4DAfo9/QAp89AFsSvV5A3msAP9jXwMHJIDehU
BaGGFBJqwLOJ5Oj2gAWyaK3W7iLrAI/uw0O394QIPj19Bqqf4RAxA3We4FOF
GKOFClup8FVEnRfqFchrusxAbMFFFFdCtcpVqpUajREljKrU6lWooiiEmsi9
PRROvQ5SChnm888///zL56fnnz8/wyHS6bHCcRSOoqhR7Qdlvdpq1Pox10Bi
11DCQCYwENo1nq8wEM6Qwlyt3n4AE774olltAp9Ws9uqVFoPnc+//vP//vPX
p1774dd/fv75l6efgValBuZt9yMIArMBP7BA96HTbfLIDU0Ud2C3FhK02+71
2iAQiP3YQ0wgANq1cuvxCZmtXan2OkLvl59/+fXXz0+9p1/+iVT5f9kU3awg
vyKinVoDxWSz9/TwAN9es/v40AGHAlMILLjU7TQfWgJyQ7dBCd1SnIQgaXWb
XIJqNrpg/Yc6WRbanYcnUObn518+Pz52Kr1SkahwKJtZoY7fBW6hpZSIOhIX
KQP51qiDKt1OPwFaXJkUWm3w8eND/cp2Vz4/ryH+XSZFc0Tn+bHTbtAEFDIe
gqMFTmSrFaZI1xpQRhiSIIvR29CF0+q+uAk6bjI5vEhXwantOlIRyQ0O7XUg
KMD2QgVMxIXU6y7ndbNb79cJUKzW7IAbhQZD0li53IC6VGZaLV7o5GErYIUS
QeG5ZOzSe3l9F7DaPcH4XTTH91DYPz+AFbvtJkq5Sh0lNuRft8OQnvllU7za
K0H1RoHM0xB+NTYXTeYIjkM+bnU/f/65133O5tKpbCqRTGcLpUwqmchlc4VM
PJHKwFZEvYcos2SuiJWwEgHFssKwtTqE02Pv4bEgm5iVuahWja+36zUUA1AG
KtEjx/HR6RWN0vXxMzik12YAIZTRB/olEIQ+BicEVsjnMjnwDfzJFvKZAjT2
EgUNgcNTGAFdrEzxDc41NTy+YEhWG53fKmG3LWQvbTub64oTDqzbe6q2OOHh
gYeW0G96qKCjVsTx4CcKmmy+iPqNwNElGrVGXqhCCrTrbBWyhiNpvtIsKkdG
RmeUgQIJ6QOViMlc2VQK2bJ4cSeD6u7DYxuq7kMHNURouoCQKOha0DL/uwsh
jMCg1kkzqG1B4gNzyHdUpCtCFaoAf7Y0Nzo+s2GyOVynvpuwQ7O5LBKJZqfX
4lDFulCHmDqUHv4FopRRHwZ79Zsq6rbQ80AZlsKRR6gySaIGS0A3h26NgAc0
MGj8t3Py6eHxuTWlxmBQ7+i35yfGx+Ervm6j6tyGGtuE6O/81pZpmoCt331L
WJkmy4gL9CrIceiMYLB+g65CnELnF6oCC7bi2Yh8bfbj+MySfFulVkjXVsYG
R8c+jS+5OWh10N/aqHZCjqJeX2b7FkMqgcBUiSyDuZGjUN/tN2ahTAOIqPAM
yQJD9IXrTPzYpJz6MDKzLJPL5GsS8cL44NDAzLqbqUJL51He8BVUhRDmQH0f
/A7tHfIG/s8JKK3AnBUETeAPXIO7oUtWUdMHFNDHYUWLwrw59H58YVmyuLom
XV1ZnB16O6z2lxvIYdCzEU6AHthA+IzrfxGwAgNUKn0wxbMo1EAhwFSAA3m4
/19C1OoIvlbYsFqmWf3wblYuEYlkazKZXLo0/FbkrSA8gYACspUAUdiC+Olj
UJbCSIRxywyqXci3NIcOoaOwHEmC2bgX7AXRB/8li1TEoJBvr4z8OK0QT8+v
bW7IlTtrk0NbaWgC/a6K2mmFoXmhgaAqgq4sECUpBNLYFxiKQC1iD5y4PmBF
OBQgXB+mQcDFDLMrcuny5JvxlZmZpTWVam1To1kzREAwMHGlUvuXuQUhmQM3
M/28QPCYR8K/ILU+9T7QBYAFPgafQOIArGNAOepco1Wtb4hnRt+NzMytyLe2
d7fXDLaTDIgM8QgJW0FTBlkCYzNFop8eEL0UgeyEoDnex7QIZMMZAo9ofnjB
kQLSpsKnLWKJQrG9uTIzMTAyJ1Up1mQr0g2txZNloQY3oZbXq2AFAKMkwzFI
zBfTAHJEH6hWaayEUhJdRTMA+zIjMOheuI9lEva12dmV1dUdtXxxdkq6ubm5
Jl2XrsjWNc5ouQI9G5BHq4/+kGOq/aEGsokDT9XgEEoHqom5LOj3Mo3A4IAU
qaIKg+Qp88UtuWx2UX1g1GnkS0uyLdXO+qpsfX19TWo49ucQuqj3ezPi0YBc
RHgTYWqAwY0+yAKkU+NYolAokGDXUjjLILPmExjJlEnQiCrSmNmgXZFZvA6d
SSmRKNa3lZsKuXxLvio1HvmyLOQGAlIoMeq1Zh2ERxgJmm4LQEO92iDu2BrU
EBgTISLgPmhpZR4GUrJQxGmqUKBZnOKEtMug3N4yHJuOjDK5ckul3jGDvaSy
pZ0DR5rtJx5kKtCvIfxcrT0C6oJO8vTz83Obb6dOsFYbQZle97GN6hlsAPB4
gSaK2WS6CClEc1w579yWKcwn9hOHanNbqdLpdar1pfXNRfD6LdUvCGB3MBB4
ogKdHaEXQAAI4cGuB7jnGTpq7/Pzc7P+/NBsQrtt0/fX1/Zd5Z7pyHZsd9j2
racX1t3jU4fd6baqtjfUGqVmd0UsU66vay0XON9PwH4HqEDGQ5tvo77bQlgc
mjSAj17nBRg/oW7aa7Y7tWwkfbar3FVvbBvPjg50iq31fYdVu6G99Dl893GL
elO7qzyyKDaWVqWrO6aTLFWtQ36gsaUChQSsgGYANIrUAVYido16q9Pp9YE/
AoFdPhdxHmYMSivM/y535Fx3pHF6z8zgAY3p2GT03JweH+xpVDtq2crSolSl
VttjJF8TIPBRn4NMAlDLQcRClNVRpIGDaAFNR+1mH2e3O8y19/Jo1+hTqva2
VufnxDLVwsqG1rX6bly6sa0+te/tKVQHBu3etkIqlUpmJbt7u44oDwRoElXd
Oh4r4uzdOVRToIn6CQK5PAW4vdV50aiOXR7rjDq1yzQxJdu07YrEq2KlclO5
JR5cOvB4HAc7e9rlRYVibWNja10qk8zNyzXa0whR6fUnhOfnbvy81G3eWAG4
9roQSTC8oG9/MEOXus121qaxK4cmNg63p1c1G3t66dzKjGh1amxq1aDSnG1M
iFVu2YdxiXxVIhGLF+aWV+TzSp3pPMsJyXsaRgJot0+d9nOVfJmFgAVgfOSC
XhcVZXBOteDUSbWn2tnBmWWTRarcWVmUTo8uLi9OD49uOrRLHyUO7eir15/m
JNKV5WWxeEUmk63Kt/XebJ23qUNoymp1hA6E7OdWf5JEIYzow3/aiAfAdcGm
tiwumNzm9bmVbb3NsScRjc3tHurmhz/+MH6wNLFo3nw/uCx6NyxaliyJFxYW
oeNuKbaPAylOIMgaRNBjt8m0PsMEgooKtNY6GinRwNvuQnaiaSKtVir0+q1N
s3R4aXdz/2pXNCeaHZtcHB168/Xrn/72dtf8/pNErxr7MDa3MD87NTkxt7qm
3NMfnsQoBqF/NAmg6QRmwjYEaLvXblZQsYK5tQOKAKd22WbdWjF5A27FwOLq
jHhz6LXMNPduak40+OHNj9/+6cvBvfmR6emV1cHXQ1NT0/PTk+Nziwtypd56
Es4jWILmSjTAVlu9XrPv4B6gIFQ2qqh0oKmocTS1IJ4dm1jfHh4VDQ1tj/9j
QLI+JZqdFU0tTM+L/vHT2tTr0XdD4pX337wZAvgzMTE+PTc+s7plPDpL9VcH
OmhpAKiB4Stojmz3wWqvLVS4ahNVtEZkalmzN/tmQD4xsihe3lFLJFMro9Mb
Mx+GFaIB0fD3Cvk33w99eC+ZePX1Dx+mlxaXRBNTovGJ2WWV8fgeMDsiiWjC
LAyDCOq4NTT6tTsNgS4ydVRoSOOkYn56aXRz8fXK7qpkfXpRsrowCWVVKd8Y
FUt+nJH/MPJhcPjDwPcj7/4xML8sXZn+JBJNzMwuKjTH2WqjAtRQjYLZEtoV
T9LVClpFEWoVBKBZ6FWtVnpzev7HGaloY/Dt7MzQyurA2KZ+d3tbtb8uE29p
JCLt8sjqx0XI7KUt0cjHIfHG2uLU1Ix4eUG8oTvJA9U6TIlVtHyCVixg2O6C
H6pQjNFKBjDi+BrjX3gvejM4p9SNi9QS8a5ickkjnxFN/fR6ck0slc4vaaTz
ool1yah0dmb2498GtlVKm1b8aUmyMC/X+grVJlNDs2i3g7phvcZSJANDEJod
UKVCwVCrEWezbz+8+vbTrnFSotdsDoumJubfvR6e+P6/pmQfRsbfTC7Nr68M
L4kGlz6NTgz8NG4yqu1ntqmhCdG83BAsN5ostFO0ONGEUa/Vur3wXMXjeYqu
oNm4H1/QIi8+/f27v379w8LM316Pj//06ruvv/nbV1/95dWXfwbWf//mr++H
J+dHP0mmRiXjk4vKebHpULpxaFkbnpgXy3Vhod5ku93WyyoLDOOtC1colsnH
EiWugtZiWoh3teEf+vHtm+++f/Pdt6/f/f37DwPDY8Nj42+//euf/vOP//F/
/vLFV6/+/np4fmpIrJgZEu9uKHb10rWlkW3VyppUZk63e03hCa2ioHUHlBhY
HHo35THbwzSCtNC7eZpn3ROT0oWZpfmpOcnywuLKinQZDD8/NzP25tUXf/zj
7//w71/++fX78eGFHcXYrEql2t7dkk19O2a0GBVbXrbdFngog2idCfoeGAdS
DjAdQ1Jsg6MEQLL5VBovHi6ubq2uqFQb6xubm7L1DfnizPingeHJ6ampwe+/
/vI/vvjxyx9+ePuPQYV0ULQml66q1pdX3/x5VKaQGVOAr2im2V9MaraaUJXa
TbTEU68SfLtVrULPqNElgmV86wDCl7a3N+TQHNbkkoUJID8tWl6c/DQ2PjL4
4e3Q609//uK/Xr394buh0cGBSYVSuf7Dq+H3M1tXfL1VL7FACcYD1F8hrjiA
WVWOJmlov3AkQI8kGTKqFU+PTy1KJWKJVLq0sLw8NTYukqxt7yim3w8MfByZ
Gp34+Pvf/+GPX/zvP/3lq798/WZhd3P1w3vR6Jyt3Gh16iQk9W8LYKjmghIA
ftHkgiAtRxdy2XTyPnyw9PHH9x8/jU2IxIuiGbFkanx8Rryu2NpY+PD9u5/e
jk3PDL768t//8L+Az39++d1PQwsSyfTUwuRWHNA0wOkajLlgFrTWBhkC8JXB
Sa7MIR40xQBGLOYzqci5RSWfnxz5MDQ2Mjw8ODwyNDw6OTc7NT7446vv34mk
y8sy0btXX37xxZevvns9MDo2Obc4tyRVXpNoHKWJ/rsBkLyC1lorVQbHqGLu
LgFzIF5M5YQai2YdkiwVcqmID1CHVAKQQzwzPTU0tjA5Mjf19pPEciBT7Guk
Y99+MzD5/s27gcHBgQ8DIwuH55FEsYQWJ8po4uYKkQRaRRdoPhkq3AbPY+k0
xTOXbqwhkCRHwVyLFscIiiZxLJ9NRMN+94kncHYR9ru8njOHTONz2I/UKwq9
UrIqE89Mzswu7zpd5+FkKpMvYMVSASaaUiyBimE1XoznqyyRxyiKqXHpUI7H
8qU7P1VBIw8aGNB6NUmShWQaxzN5vJhOpJLxqMoSDyZyqWurxn1+E4tF7iKh
28hNKJHOFTAsVyyhlXgO5mAWBkghX4iVof4KLAyrApoAKrloqVhAbwxYNC6D
3gRWKGK5PIGVUnkynshjWBELXJZyeJnM31/HsgUCveQoE5lMgYIjDMcIvAxo
HAY/qOIw0N+m0zAyoRWSSrXZgl+Dz5GNdqPWqKJXBBxBsmTxPlEs5vLJXPIu
fZ9M5TKFQipNlWIxgkxGsGyxwt/fwVBUypVpLFPkYIiHSZNHK/WolleqKX8i
c3NH4iWMq4IDoLQzRQrQdgVgJCQLXy6WWQZP5mgsmSoko5lsLoHsncgR+dhV
BktcZW8JmgI1wM15NhMMwXBBEQmGoWg009dqYBkcAKvJd5fBMK7Gw8QBc3c6
U2RrAlXIlIoUXooRFCVkw/lSrogXkjmsVMDLaIzkWfIqUogGU/elUiFTxKly
MVdK5QiGLWGZHBZLQrgwQq0Ks/Kh0e6wXnhv0dsRFgH6Op1JkcCezNzdJNjE
7Q1eypKEP1QgyCIOwc+SJQjtPAw/xehl0X8ZiYRxAiMgQAo5DMophBNRSGUz
pTKWY6tgFzbnv3ef2E48iXj6ukQyBFMV8Hha4EH4zFUgxKR8t0QxQ5bCgUQW
hMUohqdhRxXKdDp2feC2n99d5MC5NBSJXAHkhGDC+SoB8y1LV2ov6zd81nVh
NgSxYNyawIkMzpfzoVgpf53HEoHr+1TOH87ex7DYfTCSSpVydzhNF4oMXYQA
c+4fHlmNwfMwOJegCIKEiIvHMJYu0gJDckSK5tGsDk7h0h6X5TCUvo5avQyb
IiGag/eZ0E05de2NMon0dSwTcgSCt2mcoxjsNl7A0/kyk8+GXeF4nvSf3rjK
dDZNkEQhH83lCzAPgzdyuUL2Lo4T5f5rKTYSdh5c+68xPGC1Vfk0XWeDrnzs
OpY+d7ji5dxVMq5Tajw+qBFYNpOLFQSBwmmheHuZqlN4Lui1nRFMPASjDJEq
4QR6h1TACrepBDxA0DCIFwmcdtl1+sh9vFQIqk1Q05MMduqOBMI3gbODQKpI
3xVKxgWZM1bOJkssWbiMV2tUieLzF9EoUSLS15aN82g2FACrYFEymaNoTkiV
snelu3QWxzkI/jJL42RkT5Uog7I51X65GI/Er+yOs7vCncvpK6A3iFwrtr0d
xFOX4RJo4HFBaBJlPhvwh4J3NJlQ6CMBv/eYJMh4NhnIg7sYqCvh1M1FNEuQ
NM+VKSaf8etWDLF4OJY4cpcy6Uvfmcmkc0eCDn80nSmh9aaAznoVODy4KWKF
XMF+LeCFEhkPnFx7bmnyavM+fek5saWyeDR1cseWKbpwlYonEgl/scgQBEeX
kgVMq9btnV6no+HYjdufxIuJC/WaWus/9ceLoWtU3+5PD0+ODGZnOHUfieM+
FRaNFonijZsMXGFZw3GZuDmz26JFLOJyo6UiKhlhE4loIFujcJKgodqmMice
y0k+HssSGa/dc53nsCujJhL0BxPRYihHYJFC0bnvOvBE83giEQkloptxbyif
CTv8xfPzYkJzyRTvnFpLOprwGdM8DxUknxRiocswTyUysZwAUUzlLoHEbTx0
z95qr7Gba5xM23XXwTBWuguHE8F71x17tmexRCIQKamIx3+vuzwJpW/3jaHE
xWU6ehAnsrfXams0EvXaoOAWoN7kuLA7GIvGcuUyL2BUhSuYjTrXxcV5wKOx
u4+Ozs6jF+qdY9eF13usc7ps94GjpFNjPzh1XwVD0aD34laltfvDvg2z58bl
Cl+eZTLZ9F0wcn/ns5xmk3nwGLSZW28gFLjD+AoN3aBCJ3d2Dzw2+7FJazHp
DMcX7lOtRKVXb+5oNuUavS7o2b+3HfmPT3yR+9tgIBSK7q27/V7XuuPqynKc
8NiysXz2JpOO+ww7nmSmBNDsrpwInydz14USRWajsUiKTOq39Ye6E4fywG07
dHiD5+7dTYvNYD5xm3c1BoPjYP/G6Qtbbd6beNR/cRsK2gxnl37bujPq1/ky
Lm3Uf+2/zISPFRbbWTZ6H46lrzLh8+vUXbKUv0/dhq4C3lDCqtBr9V6H/sDm
OPP7zrxXhh2v3eDxXVz4TceXF759z4nTv6+1eYI3Nx6nbsftOz3z7m3eRM8s
N9f7hgvHqdcfsuxq3LZg7DJ+5Q75ri49/tht/MpzfXPuiUWuQsEdzaHpyG7T
m40HjiPz/plXuWU17h06XJ4LLdSpwNG58+TcojUcn11fnlgW9Re+s7Nzsz0e
czpuT0wmx4X3wh84sJjPvbHIdTp2cHfpcsNznvPTYPw64LsK+u/D+yaDzmo+
0qgUun2NSuu2b0tVup2dA+uBw+y7dIF6gD9A1YMj16FJI9Gaj0+9IHzo/OD4
SLerdfpOzh1Wh1Vrs17eBO6TJs+F3e5yHpz4PD6/68gfvIJ66tCo9KZ9q1q1
a7SY9fpDw47apFGqzRqNwugPHO1bzVabyaA3GfZt1r1N+aZSZ7JazU7vyZHb
od01nUGG6uxOncGwcXzpDSfNOpfF7nS7jt1nvvN9i99/eXHjMym39/YMOrl6
T3NwZNEijod7KpNVvTOvsduP3aZtnWHHoNdu6R0WhUVvNll1GtW63uI89p7u
GS3us4ND/ZXHZDdsaI+95/GzXZve5HScuK4CfrvK4r/xnfhOtCqlRqvfWtft
qIwWg063p9sz7qrM+zqtymgyHZ/qVQbFqt6wu2ux7BltOuPBkcl8oNHrzft2
4Ka2nB7smd2g7va61HTm8rsN5h3jicPrDoaCFuPR6a37yHOi2FHvmHQynXIH
TH5g1qs2d3TbOvXu/p7u6Njh9ljN+pVlo0EulaqdTpNCZTrZ11r27QaN+XBf
u7kF0W206va0+2q1zOI+chyqt9XWI6dz/8Lt1h9bnOcuh9P6/wEG+iLB
      "], {{0, 91}, {
      100, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->Magnification[1],
    ImageSizeRaw->{100, 91},
    PlotRange->{{0, 100}, {0, 91}}], ",", "All"}], "]"}]], "Input",
 CellLabel->"In[43]:=",
 CellID->789129774,ExpressionUUID->"3bc8347b-bf49-42a2-be31-cfca125c83b8"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJyVmElvXFUQhS+ssmzAgAEDTRYsIi8CwQ6RA33c7vYQKyiJQwKBgCEKRgYp
YAJsn8QfIPM8/AQSDyED0AwJM8TzPDBvOyMbFtxbt0Cy9E4XfLJkfXLL6n79
Xt1T56GXd2zYfqtz7q9bnAu/q4S+nBPKuTuE3n998d8zuFPop36XMEC8CncL
Z4g7VAsfUr9HOEu8nLtXOEfc4T7hPPEa1AgXiJdz9wsfEV+CB4SPiS/Fg8In
xDPICCXqu94PcL9N+JS4w+5dAeZLcLvwGfFa7NkdYF6NeP98TrwKe/cEmGcQ
77cviFdj394A83/ux4vEa7B/X4D5Ur1fLxHP4MD+APOs3s9fUj94IMC8Vu/3
r4gvw6GDAeY1+jx8TXwZDh8KcI/PyzfUjxwOMF+hz9O3xB/G0SMB5nX6vH1H
vB7HjgaYr0J8Hr8n3oDjxwLM6/R5/YF4LU4cDzB/XJ/nH4mvxMkTAeZ5fd4v
E2/AOoH5Kp0HzJsweFkgvlrnxSDxPNYLzIs6T5g/iaFBgXiDzpsh4k9gg8A9
ziPiSSOGh4R0d406r4aJF9AhMM/pPGPegpFhgXhe590IcWCjwLxN5yHxpIjR
ESHd/fcV5+Uo8RyeFpjndZ4S99d7bFRId3894rwdI17AJoH5ap3HxJM8xscE
4kWd1+PE12CzQNw16zxnnsfEuEA9zvuJdE/a8IzAHHoeEHetmJwQiLfreTFJ
vBXPCsxb9Dwh7q/31KRAvE3PmyniBWwRiPv7MZ5HzFsxPSWku/9/8byapv6c
QNzP23ieMS9iZlpI96RJz7uZdPevf14g7q9nPA+Zt2N2RiBe0PNylngTtgrM
m/U8Zd6KuVkh3f08i+ftXLr7+/kFgXlBz2Pi/nrNzwnp7l8fz+v5dPfnwYsC
cT/P4nlO3M/jhXmBeLOe9wvp7j/vcoF5i+YB5o14QyDu80DMC8T96099EGBe
1DxB3F/vK+UAcf95Yt74Kd399XhEYN6keYS4n9dvCsT99xHzCvM1OH0qQNy/
35hniLu1uHolQNxfr5h3fibejkcF5ms1DzF/Cj0Ccf9+Yl5ivh69pwPEsU7z
FPGkA9euBoi7TZq3fkn3ZDNWCMw7NI8Rd1vwlkA86dS8Rry0DX29AeKdr2ie
I57twvVrAeKdr2ve+zXdsQOPCcSTHs2DxLM7sVMgvrxH8yLxhdfQ3xdg3qV5
kni2GzeuB4j718e8+Vu6l7pRJxBHt+ZR4qVX8bZA3H9fMa8SL23HQH+AePYl
zbPEky7cvBEgfnKb5t3f0720FfUC842ah4n75/0dgbjPmzEvM6/HmYEA81rN
08yr8efNAPeYt/8gXoWVAvNyLuZx7u81v+t/uC/uP51b/Hfn/m8/Wrn/tPpN
q7+0+kmrf7T7xcr9odUPWv2f1e9Z/Z3Vz1n9m9Wv2f1Z5X7M6r+sfsvqr6x+
yuqfrH7J6o+sfsjqf+x+p2J/Y/YzVv9i9StGf2L2I0b/YfYbVn9h9BP/oX+o
3C9Y/YHVD1j7v7HfW/u7tZ9b+7e1X5v7s7UfG/uvud8a+6u1n5r7p7VfGvuj
uR8a+5+53xn7m7WfWfuXuV8Z+5O1H1n7j7nfGPuLtZ9Y+4e1X1j7g7kfGPnf
yvdWfrfyuZW/zXxt5GczH9v5t3K+tfPr32rdn1s=
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Gl8CAQYBvANwy7mmM05M2M2zGYHc8y5gzk2lUgSJXIsUYlcHXQ4u+8c
3RRyVCqE0IGKyn2lUqKQ+8jfbx/+z/t8fj68sQOLi0aWCggICKSXuN6LAkt6
IT3pQXe6UUBXupBPHrnk0JlOdKQD7WlHNm1pQ2takUVLWpBJBumk0ZxUUmhG
Mk1pQmOSSKQRCTSkAfHUJ456xFKXGOpQm1rUpAbViSaKakRSlSpUphIRVKQC
4YQRSgjBlKccZQmiDKWv70hgYMmw/ztXucJlLnGRC5znHGc5w3+c5hQn+Zd/
OMFx/uYYf/EnR/mD3/mNI/zKYQ5xkAPsZx972cNudrGTX/iZn9jBdn7kB75n
G1vZwnd8yzd8zWY2sZGv2MB61vEla1nDar7gcz5jFZ/yCR+zkhUsZxkfsZQl
LOZDPmARC3mf93iXd3ibt3iTBcxnHnN5g9d5jVd5hZd5iRd5ged5jmd5hqeZ
w2xmMZMZTOcpnuQJHmcaU3mMR3mEh5nCZCYxkQk8xHjG8SBjeYD7uY8xjOZe
RnEPxYxkBMMZxt0MZQh3MZg7uYNBDOR2BnAb/bmVftxCX/pwM725iRu5gV4U
UUhPetCdbhTQlS7kk0cuOXSmEx3pQHvakU1b2tCaVmTRkhZkkkE6aTQnlRSa
kUxTmtCYJBJpRAINaUA89YmjHrHUJYY61KYWNalBdaKJohqRVKUKlalEBBWp
QDhhhBJCMOUpR1mCKEPpgJJ/eg0AwI98
         "]]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJwl1Gl4CAQYB/Atthk7zVy755jZnDO7h12OORZRFCIkiVJIKXIURdFB0X2r
HB10UkLlKKFSiaJD5E4HKn57+vB73//n93nef8rw8X3HBQYEBFxsXGRX5xrU
JIhgQqhFKLWpQxjhRBBJFNHUJYZ6xFKfBjSkEY2JI54EEkkimRRSaUJTmtGc
NFqQTksyyKQVrWlDW9rRniw6kE1Hcsglj3wKKKSIYjrRmS6UUEoZ5VTQlW50
pweV9KQXvelDVfUN6Us/LqE/A7iUyxjIIC7nCgYzhKFcyTCGcxUjGMkormY0
1zCGaxnLdYxjPNdzAxO4kZuYyCQmczNTuIVbmcpt3M40pnMHM5jJLGZzJ3cx
h7nczT3MYz73ch8LWMj9PMCDPMQiFvMwj7CEpTzKYzzOEzzJUzzNMzzLczzP
C7zIMl7iZV5hOStYySpe5TVe5w1Ws4Y3eYu3eYd3eY+1rON9PmA9H7KBjWzi
Iz7mEzazha1s41M+Yzufs4Od7OILvuQrdvM13/Ate/iOvezje35gPwf4kZ/4
mV84yK8c4jC/cYSjHOM4JzjJKX7nNH/wJ3/xN2c4yzn+4V/+4zzVjx9Y3QHU
oCZBBBNCLUKpTR3CCCeCSKKIpi4x1COW+jSgIY1oTBzxJJBIEsmkkEoTmtKM
5qTRgnRakkEmrWhNG9rSjvZk0YFsOpJDLnnkU0AhRRTTic50oYRSyiingq50
ozs9qKQnvehNH6oC/+/QC6YUjtE=
        "]]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}}], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.07450980392156863, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{False, False}, {True, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.07450980392156863, 0.7294117647058823}, {0., 322.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768801840042704*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"b00249e2-f743-433b-934d-198cdd368475"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageHistogram", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
      "], {{0, 91}, {
      100, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->Magnification[1],
    ImageSizeRaw->{100, 91},
    PlotRange->{{0, 100}, {0, 91}}], ",", "32", ",", "All"}], "]"}]], "Input",\

 CellLabel->"In[44]:=",
 CellID->2128436836,ExpressionUUID->"882d8856-4453-4a20-8fff-7c945ba1b87c"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJyV1D8sA3EYxvFfxMBGLMJyYmWxGD0YLcKAWBpp9a6iLtj8yY1CtIvB2FjY
DJaSSDQRCSdCEITW+b+aWPV9B0mT95eXT3K5fHPr+1zL2NRAosoYEy8/9O5n
+S7DOtDAdn678nsbMqtk39KdGE+QgqWBanZo6V5ssCO5gz70dJNjuTGI6JGE
lh7FIjuTO4ohmyHncjseSkVyIXcURzu7lDvmYmGeXFk6idOQXMsdpdHMbuQ2
HiZS5FZuZxJ7u+RO7iCFWnYvdy6JkWHyYGkfW5ukaOkkvr9ISe7ARSuL5D5w
EZ4QS8PHNHuS20mjiT3L7c+gwCydm4PHXuReWkE9e5V7bR15ZunPLGLsTe7G
ZdSwd7nrZrHNLB0AQ+zD2pX7N6bie9n//g/a/pV9a/vV9qnuT9mXth91H8r9
a/et3a92n9r9aff1h/v5ASNy20s=
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{2, 66, 67, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 
         54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 
         37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
         20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
         1}}]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.07450980392156863, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{False, False}, {True, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.07450980392156863, 0.7294117647058823}, {0., 1573.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768801856791191*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"af8211c3-6779-4f37-93ef-a98074bf55c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageHistogram", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztz0uKVEEUhOHSkUO34C6cOnTa4gK6sWyclFAtiIt1L3Z1NY3ifeTNx4kT
ceOHTEjIQXzv7r7ffH19OBwe3jxeN7c/P5zPt78+vX18fD49fLs/Hb98PP04
3h/P7+8u334/n1fOOeecc7vsMBV6VHOTKgFjgYtTuAlGBaySUfgaZMl9zbK0
vk6yjL6utFy87rQ8vCG0HLxhNDxvKA3LG07D8UJoIF6YLV4XSAvnBdsideG0
QB7EFqQD2SJ0MFoAD2obrAPbhurQtMNAHRr2lDDtkrJtgA4N+idlW2cdGvNf
yraOOjRkMuNIbZ10aMRsyrYOOjRgMWVbqw69fiVlW5MOPb0gZVu9Dr27KGVb
pQ49ujjjSG0VOvTgTRlHatuqQ6/dmLJtmw69dXPKti069NKKlG3lOvTOqpRt
pTr0ysqUbWU69MbqlG0lOvTChvaNQw9syjjWlG1rOvS6xvaLQ49rzjjWlG1L
OvSyDhnHmrJtXofe1SXjWNsjDj2rU8axZhxrxrGmbJvWoTd1yzjWjGPNONaM
Y8041oxjzTjWjGPNONZ2h1PRTdqMI8g41oxjbRqnoZuxGZc+41ibwynoZm3G
JW+nOH7dgs241C3h2HWLNuMSt4zj1q3YjEvbGo5Zt2ozLmnrOF5dgU0bx6or
smnjOHWFNm0co67Ypo3j022waePYdJts2jgu3UabNo5Jt9lGpKuwaeNYdFU2
El2lTRvHoKu2EegabOl1TTZtXG5doy21rtmWWNfBllbXxZZU18mmjcuo62ZL
qOtoS6frakum62xLpetuS6QbYMvCG0PLoRtmS6AbaIPrhtrAusE2JG88DacL
sYF0QTYEL44Wrwu1xfKiaZE6gC2Kh6GF8HC04TwsbSgPDbsmTLskTLskTHtK
V3ZNV3ZNV3ZNV/acLOwlVdffaaqcc84556r6A10ZUNE=
     "], {{0, 221}, {221, 0}}, {
     0, 1},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag[
    "Bit", ColorSpace -> Automatic, Interleaving -> None, Magnification -> 
     Automatic],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{221, 221},
   PlotRange->{{0, 221}, {0, 221}}], "]"}]], "Input",
 CellLabel->"In[45]:=",
 CellID->1695239862,ExpressionUUID->"457f3938-5032-43e9-89c5-4567217d1574"],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{0.5, 31757.}, {0., 31757.}, {0.5, 17084.}, {1., 
    17084.}, {1., 17084.}, {0., 0.}, {1., 0.}, {0., 31757.}, {0.5, 17084.}, {
    1., 17084.}}, {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{2, 6, 7, 5, 4, 3, 1}}]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{2, 1, 3, 4, 5}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{False, False}, {True, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1.}, {0., 31757.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7688018639388657`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"752315aa-f4ee-422b-832f-49d1858af2ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageHistogram", "[", 
  RowBox[{
   RowBox[{"LaplacianGaussianFilter", "[", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
9Pjk7OySbMsUJpudegM4aKeJ5pB9UVWaAH7TqCNW1mqiqzzQzqFjdnvc0fLU
/MBr+fyEfPj14MzIu3n5/Nsxldaq0iiUet3s+qx6Szm1pF97J515vboyu7q2
opke+vhmRCRXrExPTE1CZ5hbluosZ1S7W6/2ur1WFU3JEVUSgBZqCwgb84B1
UYsUxr6NRtY88mZh8Pn83KZlbHhGOze3YZwdWdCti8bmxt+8fb8sW5atSqYl
RsX43Idpqfy9SDQ1Ozfy0/djSo3cuCuf+zgPDGJ+bdMeIepdnu9fEbjtQQcC
MNvoT9SFweINMjy6oiFc2alEd0Zeffzu6xfTmt3pFaVNrlmckI4vSWZejo1M
/vTtU8nSR7SARdBJMza1svhqfm54dPzVTz9Nm/QbtkOHcWQIMmpGvOVKcJ1e
BUWqcI2nLcwZupmry4sMRXKoB/WEYi1kbqtdy2y9e/b8u6/evNcaB95NKuUL
L34a/eHl2+//+d2zga+/fbo6+vT1y6dPpyYWFqQDQ3PzAwvT78anZxYHJBab
Wm4/cInefRiDqrV1kKs3bthWr9sWIqvbakP7614GA8eXkct4pkzw7Zt/DczR
kJFSv/ruuyf/+PaHoRfffPPyzY9Pvn7y7dc/PPnmyT//9uVf/vr3H7/6x9df
/+Prly/fTr4fnlkbG1oWQcXcUs4p9A7pomZbpZmemF9eXlP7cChWLJpYIjQj
XPbpdXrHrtNkiqAziQINZbTVv3CCrq/VCdXrV28Hnj97/ur5j88H3jx7OTg8
Ojk1Njk3PgBm+PI/vviP//zqL3/5+399/eyn+fHhgQWFbGhwdlO2odgySKWS
sdcyg0yiEIsNp9Xb+xvuDl3SEZDbPRom31Pxcq3OMyGDbu+C7l8oq9BAt2r1
jPrjhHh5anZ5dhxSY3F+XrS6vLo4PTkB+TQz8fb7f/z5iy/++Mcv/vS3v37/
+vXUh+k1nXhsckOtUau0KvnS8JP3eqvFKFt3FFq9XoNFZUMYhAM2RqUCzXOB
VdNYGWMadapSo2kWz2czGH6+PreqFIOhlFKJTLYuF0sUMsnizNjwh3dD41Mz
U6Ovn3z15Z+++M/nX37z0/P3T9+u6JffT0nWZfJVjUq0tPjjPz6sbSolupMK
8DIOXWbroWtSwqU9yKY2GleAeRs8hFOrgphMnSkWcKaS2FqRSFeX1rY2AJHK
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
Fdi2uowHR16vy239vwAOvEA=
        "], {{0, 110}, {120, 0}}, {0, 255},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSize->Magnification[1],
      ImageSizeRaw->{120, 110},
      PlotRange->{{0, 120}, {0, 110}}], ",", "3"}], "]"}], ",", "Automatic", 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", ".2"}], ",", ".2"}], "}"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[46]:=",
 CellID->346388822,ExpressionUUID->"dcdfb327-4383-48a7-b945-e84c4b41d85e"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJyN181LVHEUxvFbq5YuW7gJWrgUMmqVP4hsE0FStIqk0rJFTbSx3aUoaFUR
SYqLiSIMJXzXzJfJzAws/DNa9ifE3OfcCYbz7dyzGT44zn3unTsz5zly7W7/
4MEsyx4eyLLmY8+x5vzYzGzGx5rzz+1//7nXnF30zaHmsDVsHf87WnnYyrOD
Vh62hq0839DKw1aebbTysDVs5fmKVh628myhlYetYSvPF7TysJWngS7iDLE1
bB1vE63z3UDrfNbRyruG1rCV5zNaeVbRyvMJrTwraA1beZbRyrOEVp5FtPIs
oDVs5ZlH636ZA//pVZ5Z8KH0q8gzAz6c9Eg+mm4Vx/sIPpWKl9ubBp9IOp8p
33lfel3k/eA7O215JsHnLc973/lFy/POd+q3PG9955ctzxvfjauWp+67fiPt
F8eb8J2G7fXGfGd37HxGfdfupe4i70vfMyOW57nvkTzVi8M99Z0e2+s98j3w
zJ7/wHftVcoLD/v+PWZ5bNq9MFo+v9d17UV5PN/7T8q8vrta5+u7o3W9fHff
L6+3745a+X75zm6X77fvNFjeL77r1y1P3Xc+UN6v4Cvl/e670fq8+M4vlZ83
39kFyzMJPld+3n3nZ+16TvnO+ux6TIPPlN9X4B7LMwM+aedLPm55Z8Fddrw5
cKdd73lw+X28AO60PGzlWQR3WJ4lcGZ5lsk2K2jlYU/o9x6tPKto2zfQmjW0
8rCVZx2tPBto29fQmgba9kW0fs/Ztq+ibd9Fa7bQysNWHrbt+2jrC2jNNlp5
2MrDtr6Etr6F1uyglYetPGzrm2jrq2jNLlp52MrDtr6Otn4febPt/1uO+r6d
T8tRf4/6uYb7d9Svo/4c9eOo/2q430b91b5f2l6P+2jUN6M+GfXFqA9quO9F
fS7qa//vY1HfivpU0JfCPhT0najPRH0l6iNR34j6RNQXoj4Q7fvRPh/t69E+
Hu7bwT4d7svBPhzuu9E+G+2r0T4a7ZvhPmlTfT+M9j9N9X0u2tc01fevaL/S
VN+Xon1IU32/ifYXTfV9JNo3NNX3h2g/+AsxxPDB
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{82, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 
         177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164,
          163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 
         150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137,
          136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 
         123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110,
          109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 
         95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 
         83}}]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJwV1PODEAYABeC7vFxb5m1hLduuZV21rMu2bbfVsrXltmzbtm3bfffD995f
8F5QSNvgNoEBAQGBIkxoE5ZwhCcCEYnED0QmClGJRnRiEJNYxOZHfiIOcYlH
fBKQkEQkJglJSUZygviZX0hBSlKRml9Jw2+kJR3pyUBGMpGZLGQlG9nJQU5y
kZs85CUf+SlAQQpRmCIUpRjF+Z0SlKQUpSlDWcpRngpUpBLBVKYKVfmDalSn
BjWpRW3qUJd61KcBITSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGd
HvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcOf/MVYxvE345nARCYxmSlM
ZRrTmcFMZjGbOcxlHvP5h39ZwEIWsZglLGUZy/mP/1nBSlaxmjWsZR3r2cBG
NrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGaM5zlHOe5wEUu
cZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7x
mS985Ruhww/9gO+hvYE5
        "]]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {}}}], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{False, False}, {True, True}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.2, 0.2}, {0., 1658.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768801883168548*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"b2cbb5d4-63d8-44b6-b5ab-3b3f4dcae892"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Today", "[", "]"}]], "Input",
 CellChangeTimes->{{3.768801969412448*^9, 3.768801974226102*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"adc156f9-5be4-4154-bed0-8241f6128de5"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{RowBox[{
      StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain],
       "\"Thu 6 Jun 2019\""}],RowBox[{"DateObject", "[", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{"2019", ",", "6", ",", "6"}], "}"}], ",", "\"Day\"", ",", 
        "\"Gregorian\"", ",", 
        RowBox[{"-", "7.`"}]}], "]"}]},
   "DateObject",
   Editable->False], "[", "]"}]], "Output",
 CellChangeTimes->{3.768801974455996*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"d4d35003-0095-4791-b54e-af8cbcc1e2a3"]
}, Open  ]],

Cell[BoxData["Day"], "Input",
 CellChangeTimes->{{3.768801980889276*^9, 
  3.768801990682171*^9}},ExpressionUUID->"117d71ac-8d36-453e-a2ca-\
05f9545c5f6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<DayOfWeek\>\"", "]"}], "[", 
  "\"\<Monday\>\"", "]"}]], "Input",
 CellLabel->"In[48]:=",
 CellID->461980407,ExpressionUUID->"324f4892-167a-4661-b6ec-52da10bb9bfb"],

Cell[BoxData["Monday"], "Output",
 CellChangeTimes->{3.768802021884048*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"4f988479-e5ba-4577-a1d9-b7ee9e132ad2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DayOfWeek", "[", 
  RowBox[{"{", 
   RowBox[{"1776", ",", "7", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.768802034422472*^9, 3.768802034424406*^9}},
 CellLabel->"In[49]:=",
 CellID->714297757,ExpressionUUID->"88c88ce1-2911-4f3b-b501-b894b3c67861"],

Cell[BoxData[
 RowBox[{"DayOfWeek", "[", 
  RowBox[{"{", 
   RowBox[{"1776", ",", "7", ",", "4"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.7688020351328983`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"eadea8ce-df26-40e0-b76b-b0fac0cc3ebc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Calendar`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.768802063388978*^9, 3.768802063391139*^9}},
 CellLabel->"In[50]:=",
 CellID->1293971342,ExpressionUUID->"e4275c3f-98d3-4d38-9946-4a969f9bf9f8"],

Cell[BoxData[
 TemplateBox[{
  "DayOfWeek","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"DayOfWeek\\\\\\\"\\\"}]\\) appears \
in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"Calendar`\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Global`\\\\\
\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Calendar`\\\\\\\"\\\"}]\\) may shadow or be \
shadowed by other definitions.\"",2,50,13,25075586597397220151,"Local",
   "Calendar`DayOfWeek"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.768802064595642*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"990f845f-416c-42da-beea-12b45a7015ca"]
}, Open  ]],

Cell[BoxData["Global`"], "Input",
 CellChangeTimes->{{3.76880207749282*^9, 
  3.768802080531639*^9}},ExpressionUUID->"00fe0c5d-48f7-4b24-92c4-\
f692ccb0a120"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7688021489648848`*^9, 3.768802148966366*^9}},
 CellLabel->"In[51]:=",
 CellID->1966730484,ExpressionUUID->"f201cbe8-8bed-478c-9048-0bda5cc0afc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"Global`DayOfWeek\"\>", ",", "\<\"e\"\>", 
   ",", "\<\"expr\"\>", ",", "\<\"i\"\>", ",", "\<\"Intergrate\"\>", 
   ",", "\<\"opts\"\>", ",", "\<\"Rubi100\"\>", ",", "\<\"Rubi101\"\>", 
   ",", "\<\"Rubi102\"\>", ",", "\<\"Rubi103\"\>", ",", "\<\"Rubi104\"\>", 
   ",", "\<\"Rubi105\"\>", ",", "\<\"Rubi106\"\>", ",", "\<\"Rubi107\"\>", 
   ",", "\<\"Rubi108\"\>", ",", "\<\"Rubi109\"\>", ",", "\<\"Rubi110\"\>", 
   ",", "\<\"Rubi111\"\>", ",", "\<\"Rubi112\"\>", ",", "\<\"Rubi113\"\>", 
   ",", "\<\"Rubi114\"\>", ",", "\<\"Rubi115\"\>", ",", "\<\"Rubi116\"\>", 
   ",", "\<\"Rubi117\"\>", ",", "\<\"Rubi118\"\>", ",", "\<\"Rubi119\"\>", 
   ",", "\<\"Rubi120\"\>", ",", "\<\"Rubi121\"\>", ",", "\<\"Rubi122\"\>", 
   ",", "\<\"Rubi123\"\>", ",", "\<\"Rubi124\"\>", ",", "\<\"Rubi125\"\>", 
   ",", "\<\"Rubi126\"\>", ",", "\<\"Rubi127\"\>", ",", "\<\"Rubi128\"\>", 
   ",", "\<\"Rubi129\"\>", ",", "\<\"Rubi130\"\>", ",", "\<\"Rubi131\"\>", 
   ",", "\<\"Rubi132\"\>", ",", "\<\"Rubi133\"\>", ",", "\<\"Rubi134\"\>", 
   ",", "\<\"Rubi135\"\>", ",", "\<\"Rubi136\"\>", ",", "\<\"Rubi137\"\>", 
   ",", "\<\"Rubi138\"\>", ",", "\<\"Rubi139\"\>", ",", "\<\"Rubi140\"\>", 
   ",", "\<\"Rubi141\"\>", ",", "\<\"Rubi142\"\>", ",", "\<\"Rubi143\"\>", 
   ",", "\<\"Rubi144\"\>", ",", "\<\"Rubi145\"\>", ",", "\<\"Rubi146\"\>", 
   ",", "\<\"Rubi147\"\>", ",", "\<\"Rubi148\"\>", ",", "\<\"Rubi149\"\>", 
   ",", "\<\"Rubi150\"\>", ",", "\<\"Rubi151\"\>", ",", "\<\"Rubi152\"\>", 
   ",", "\<\"Rubi153\"\>", ",", "\<\"Rubi154\"\>", ",", "\<\"Rubi155\"\>", 
   ",", "\<\"Rubi156\"\>", ",", "\<\"Rubi157\"\>", ",", "\<\"Rubi158\"\>", 
   ",", "\<\"Rubi159\"\>", ",", "\<\"Rubi160\"\>", ",", "\<\"Rubi161\"\>", 
   ",", "\<\"Rubi162\"\>", ",", "\<\"Rubi163\"\>", ",", "\<\"Rubi164\"\>", 
   ",", "\<\"Rubi165\"\>", ",", "\<\"Rubi166\"\>", ",", "\<\"Rubi167\"\>", 
   ",", "\<\"Rubi168\"\>", ",", "\<\"Rubi169\"\>", ",", "\<\"Rubi170\"\>", 
   ",", "\<\"Rubi171\"\>", ",", "\<\"Rubi172\"\>", ",", "\<\"Rubi173\"\>", 
   ",", "\<\"Rubi174\"\>", ",", "\<\"Rubi175\"\>", ",", "\<\"Rubi176\"\>", 
   ",", "\<\"Rubi177\"\>", ",", "\<\"Rubi178\"\>", ",", "\<\"Rubi179\"\>", 
   ",", "\<\"Rubi180\"\>", ",", "\<\"Rubi181\"\>", ",", "\<\"Rubi182\"\>", 
   ",", "\<\"Rubi183\"\>", ",", "\<\"Rubi184\"\>", ",", "\<\"Rubi185\"\>", 
   ",", "\<\"Rubi186\"\>", ",", "\<\"Rubi187\"\>", ",", "\<\"Rubi188\"\>", 
   ",", "\<\"Rubi189\"\>", ",", "\<\"Rubi190\"\>", ",", "\<\"Rubi191\"\>", 
   ",", "\<\"Rubi192\"\>", ",", "\<\"Rubi193\"\>", ",", "\<\"Rubi194\"\>", 
   ",", "\<\"Rubi195\"\>", ",", "\<\"Rubi196\"\>", ",", "\<\"Rubi197\"\>", 
   ",", "\<\"Rubi198\"\>", ",", "\<\"Rubi199\"\>", ",", "\<\"Rubi200\"\>", 
   ",", "\<\"Rubi201\"\>", ",", "\<\"Rubi202\"\>", ",", "\<\"Rubi203\"\>", 
   ",", "\<\"Rubi204\"\>", ",", "\<\"Rubi205\"\>", ",", "\<\"Rubi206\"\>", 
   ",", "\<\"Rubi207\"\>", ",", "\<\"Rubi208\"\>", ",", "\<\"Rubi209\"\>", 
   ",", "\<\"Rubi210\"\>", ",", "\<\"Rubi211\"\>", ",", "\<\"Rubi212\"\>", 
   ",", "\<\"Rubi213\"\>", ",", "\<\"Rubi214\"\>", ",", "\<\"Rubi215\"\>", 
   ",", "\<\"Rubi216\"\>", ",", "\<\"Rubi217\"\>", ",", "\<\"Rubi218\"\>", 
   ",", "\<\"Rubi219\"\>", ",", "\<\"Rubi220\"\>", ",", "\<\"Rubi221\"\>", 
   ",", "\<\"Rubi222\"\>", ",", "\<\"Rubi223\"\>", ",", "\<\"Rubi224\"\>", 
   ",", "\<\"Rubi225\"\>", ",", "\<\"Rubi226\"\>", ",", "\<\"Rubi227\"\>", 
   ",", "\<\"Rubi228\"\>", ",", "\<\"Rubi229\"\>", ",", "\<\"Rubi230\"\>", 
   ",", "\<\"Rubi231\"\>", ",", "\<\"Rubi232\"\>", ",", "\<\"Rubi233\"\>", 
   ",", "\<\"Rubi234\"\>", ",", "\<\"Rubi235\"\>", ",", "\<\"Rubi236\"\>", 
   ",", "\<\"Rubi237\"\>", ",", "\<\"Rubi238\"\>", ",", "\<\"Rubi239\"\>", 
   ",", "\<\"Rubi240\"\>", ",", "\<\"Rubi241\"\>", ",", "\<\"Rubi242\"\>", 
   ",", "\<\"Rubi243\"\>", ",", "\<\"Rubi244\"\>", ",", "\<\"Rubi245\"\>", 
   ",", "\<\"Rubi246\"\>", ",", "\<\"Rubi247\"\>", ",", "\<\"Rubi248\"\>", 
   ",", "\<\"Rubi249\"\>", ",", "\<\"Rubi250\"\>", ",", "\<\"Rubi251\"\>", 
   ",", "\<\"Rubi252\"\>", ",", "\<\"Rubi253\"\>", ",", "\<\"Rubi254\"\>", 
   ",", "\<\"Rubi255\"\>", ",", "\<\"Rubi256\"\>", ",", "\<\"Rubi257\"\>", 
   ",", "\<\"Rubi258\"\>", ",", "\<\"Rubi259\"\>", ",", "\<\"Rubi260\"\>", 
   ",", "\<\"Rubi261\"\>", ",", "\<\"Rubi262\"\>", ",", "\<\"Rubi263\"\>", 
   ",", "\<\"Rubi264\"\>", ",", "\<\"Rubi265\"\>", ",", "\<\"Rubi266\"\>", 
   ",", "\<\"Rubi267\"\>", ",", "\<\"Rubi268\"\>", ",", "\<\"Rubi269\"\>", 
   ",", "\<\"Rubi270\"\>", ",", "\<\"Rubi271\"\>", ",", "\<\"Rubi272\"\>", 
   ",", "\<\"Rubi273\"\>", ",", "\<\"Rubi274\"\>", ",", "\<\"Rubi275\"\>", 
   ",", "\<\"Rubi276\"\>", ",", "\<\"Rubi277\"\>", ",", "\<\"Rubi278\"\>", 
   ",", "\<\"Rubi279\"\>", ",", "\<\"Rubi280\"\>", ",", "\<\"Rubi281\"\>", 
   ",", "\<\"Rubi282\"\>", ",", "\<\"Rubi283\"\>", ",", "\<\"Rubi284\"\>", 
   ",", "\<\"Rubi285\"\>", ",", "\<\"Rubi286\"\>", ",", "\<\"Rubi287\"\>", 
   ",", "\<\"Rubi288\"\>", ",", "\<\"Rubi65\"\>", ",", "\<\"Rubi66\"\>", 
   ",", "\<\"Rubi67\"\>", ",", "\<\"Rubi68\"\>", ",", "\<\"Rubi69\"\>", 
   ",", "\<\"Rubi70\"\>", ",", "\<\"Rubi71\"\>", ",", "\<\"Rubi72\"\>", 
   ",", "\<\"Rubi73\"\>", ",", "\<\"Rubi74\"\>", ",", "\<\"Rubi75\"\>", 
   ",", "\<\"Rubi76\"\>", ",", "\<\"Rubi77\"\>", ",", "\<\"Rubi78\"\>", 
   ",", "\<\"Rubi79\"\>", ",", "\<\"Rubi80\"\>", ",", "\<\"Rubi81\"\>", 
   ",", "\<\"Rubi82\"\>", ",", "\<\"Rubi83\"\>", ",", "\<\"Rubi84\"\>", 
   ",", "\<\"Rubi85\"\>", ",", "\<\"Rubi86\"\>", ",", "\<\"Rubi87\"\>", 
   ",", "\<\"Rubi88\"\>", ",", "\<\"Rubi89\"\>", ",", "\<\"Rubi90\"\>", 
   ",", "\<\"Rubi91\"\>", ",", "\<\"Rubi92\"\>", ",", "\<\"Rubi93\"\>", 
   ",", "\<\"Rubi94\"\>", ",", "\<\"Rubi95\"\>", ",", "\<\"Rubi96\"\>", 
   ",", "\<\"Rubi97\"\>", ",", "\<\"Rubi98\"\>", ",", "\<\"Rubi99\"\>", 
   ",", "\<\"s\"\>", ",", "\<\"uspec\"\>", ",", "\<\"x\"\>", 
   ",", "\<\"x$\"\>", ",", "\<\"$20\"\>", ",", "\<\"$21\"\>", 
   ",", "\<\"$22\"\>", ",", "\<\"$23\"\>", ",", "\<\"$25\"\>", 
   ",", "\<\"$26\"\>", ",", "\<\"$27\"\>", ",", "\<\"$28\"\>", 
   ",", "\<\"$29\"\>", ",", "\<\"$30\"\>", ",", "\<\"$32\"\>", 
   ",", "\<\"$33\"\>", ",", "\<\"$34\"\>", ",", "\<\"$35\"\>", 
   ",", "\<\"$36\"\>", ",", "\<\"$37\"\>", ",", "\<\"$38\"\>", 
   ",", "\<\"$39\"\>", ",", "\<\"$40\"\>", ",", "\<\"$41\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.768802150277285*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"b81f785b-da44-4480-996c-fd0ed9a5f7ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Global`DayOfWeek", "[", 
  RowBox[{"Today", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7688021608986187`*^9, 3.7688021656661997`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"1e8d57d1-d23d-4574-b465-a6f9eb31c9c8"],

Cell[BoxData[
 RowBox[{"Global`DayOfWeek", "[", 
  RowBox[{
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Thu 6 Jun 2019\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2019", ",", "6", ",", "6"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "7.`"}]}], "]"}]},
    "DateObject",
    Editable->False], "[", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.7688021659560623`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"2b3f5d9e-4ed7-424d-9eae-5973714dc0e3"]
}, Open  ]]
},
WindowSize->{1920, 1027},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 336, 8, 39, "Input",ExpressionUUID->"11cfd466-d57d-4447-88a3-03047ad3a2c3",
 CellID->1062126342],
Cell[919, 32, 422, 11, 44, "Output",ExpressionUUID->"178688fe-a171-40cd-9043-0946b43ca592"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1378, 48, 439, 12, 43, "Input",ExpressionUUID->"3dd4bd2a-f8af-4de1-8d69-9b646435919a"],
Cell[1820, 62, 170, 3, 44, "Output",ExpressionUUID->"f2e32e4c-f8bb-412b-84dd-cb351719b690"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2027, 70, 283, 8, 39, "Input",ExpressionUUID->"9b8ad6a2-45ce-4c2e-8047-dd727538f5c0"],
Cell[2313, 80, 3540, 77, 300, "Output",ExpressionUUID->"fb7d614a-7b6b-4382-a121-c2595b59930b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5890, 162, 496, 12, 39, "Input",ExpressionUUID->"f4e87053-e28c-4683-98fc-f20414900dc4"],
Cell[6389, 176, 3283, 104, 123, "Output",ExpressionUUID->"39246379-acb5-4f51-baff-74b662dc94ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9709, 285, 828, 19, 243, "Input",ExpressionUUID->"111eee1e-dd76-4b5c-bc50-dc50ad72b201"],
Cell[10540, 306, 1632, 44, 300, "Output",ExpressionUUID->"331257d0-c2df-4f42-a6e5-1879b9b83f48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12209, 355, 3702, 110, 215, "Input",ExpressionUUID->"fa0a4795-59fe-4ac6-bc7b-ed6ff258ef30"],
Cell[15914, 467, 70632, 1197, 300, "Output",ExpressionUUID->"ca2f8626-54e2-4142-a622-aaaec166e095"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86583, 1669, 3779, 112, 215, "Input",ExpressionUUID->"1a809a1d-d271-417d-9f9e-1caef585225d"],
Cell[90365, 1783, 113634, 2105, 476, "Output",ExpressionUUID->"ba9d34b5-cb7a-459f-8ada-02eb3b2d47a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204036, 3893, 3817, 112, 255, "Input",ExpressionUUID->"127fa8fc-a06a-4caa-a98d-ec5713aff9e4"],
Cell[207856, 4007, 124433, 2303, 382, "Output",ExpressionUUID->"9684e3c3-1065-4d4a-a6e4-c056d692ffd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332326, 6315, 1016, 28, 153, "Input",ExpressionUUID->"3fc9e225-783e-4e50-bbce-c3023842114c"],
Cell[333345, 6345, 48241, 912, 302, "Output",ExpressionUUID->"e7cc0b2b-4f18-4ffd-8f4d-15723f63ff73"]
}, Open  ]],
Cell[381601, 7260, 948, 26, 153, "Input",ExpressionUUID->"c35f6c8e-618c-4787-854f-cf757a79642a"],
Cell[CellGroupData[{
Cell[382574, 7290, 1095, 28, 185, "Input",ExpressionUUID->"11f849f8-b937-41c6-be07-e8c17fb0c3cd"],
Cell[383672, 7320, 13763, 412, 408, "Output",ExpressionUUID->"9f7d78fc-d28e-4aeb-b8f2-bee5e1b8f540"]
}, Open  ]],
Cell[397450, 7735, 162, 3, 39, "Input",ExpressionUUID->"9d002cd0-7fdd-4834-a4e4-774b35846da3"],
Cell[CellGroupData[{
Cell[397637, 7742, 1066, 28, 185, "Input",ExpressionUUID->"1fd72b9b-6fd9-47c3-bdcc-c898b0a701fe"],
Cell[398706, 7772, 3998, 129, 206, "Output",ExpressionUUID->"29bc8896-146d-4b13-83b6-cbc82a06577d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402741, 7906, 408, 10, 39, "Input",ExpressionUUID->"ff15e0e4-c54d-4ba1-a594-b16ee7db263e"],
Cell[403152, 7918, 1609, 44, 300, "Output",ExpressionUUID->"a69040c3-fabd-4110-bc21-8212469767be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404798, 7967, 412, 10, 39, "Input",ExpressionUUID->"96cd1851-0705-4ebf-8f9c-ca156a2f063f"],
Cell[405213, 7979, 86690, 1599, 358, "Output",ExpressionUUID->"6eed40d9-3752-4544-83e0-e0c28f1af1c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[491940, 9583, 410, 10, 39, "Input",ExpressionUUID->"038c3557-32b7-4eeb-b856-a3f468c93c47"],
Cell[492353, 9595, 166044, 3118, 768, "Output",ExpressionUUID->"d6657f20-c10e-43a5-8f51-318313f0cce2"]
}, Open  ]],
Cell[658412, 12716, 130, 3, 39, "Input",ExpressionUUID->"95408a73-bec1-4ba4-9eb9-1d4c3b3d68a1"],
Cell[CellGroupData[{
Cell[658567, 12723, 1370, 35, 214, "Input",ExpressionUUID->"7444bf2f-f286-4ac7-9f8b-94110c1f0086"],
Cell[659940, 12760, 370, 9, 28, "Message",ExpressionUUID->"da04afda-dfdd-4bf9-9b06-6f8b9e60628a"],
Cell[660313, 12771, 370, 9, 28, "Message",ExpressionUUID->"f0cc1d74-b5ad-4b44-be70-3024ad71c98f"],
Cell[660686, 12782, 370, 9, 28, "Message",ExpressionUUID->"e04d9f2e-d9dd-48da-9660-6f060763f2a4"],
Cell[661059, 12793, 444, 10, 28, "Message",ExpressionUUID->"289fa1ae-409a-40fb-966d-b576381c0f57"],
Cell[661506, 12805, 1609, 44, 300, "Output",ExpressionUUID->"ec4cedf7-d5bd-4287-a2fc-c48cfb718ba7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[663152, 12854, 1091, 28, 185, "Input",ExpressionUUID->"78d231d2-f8f2-4e4a-9906-bb93addd43f6"],
Cell[664246, 12884, 156, 2, 44, "Output",ExpressionUUID->"33b49e96-c1d5-41ef-a512-3faa9bec9fa6"]
}, Open  ]],
Cell[664417, 12889, 387, 11, 39, "Input",ExpressionUUID->"5e2c142b-c00c-46a2-b006-f2a9e1cc2fb3"],
Cell[CellGroupData[{
Cell[664829, 12904, 1093, 27, 185, "Input",ExpressionUUID->"16d5b44f-3a6c-4f7e-a443-20d785f1c7ea"],
Cell[665925, 12933, 156, 2, 44, "Output",ExpressionUUID->"0198ef8a-b6e0-4a95-86c6-b5b8f5f15b45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[666118, 12940, 858, 23, 156, "Input",ExpressionUUID->"f46fb70a-726b-491f-bb18-6319bf6da979"],
Cell[666979, 12965, 11854, 308, 184, "Output",ExpressionUUID->"53ccbadf-9022-42df-9819-5ae6db5af7b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[678870, 13278, 408, 10, 39, "Input",ExpressionUUID->"5d7b156a-c40e-4ab4-9c9f-ade5a583c8ee"],
Cell[679281, 13290, 181028, 3876, 885, "Output",ExpressionUUID->"d2219115-6ff4-4d1e-9959-71d9864f5a0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[860346, 17171, 356, 8, 39, "Input",ExpressionUUID->"558759e7-9e56-4051-8b4f-09f164d1be61"],
Cell[860705, 17181, 154, 2, 44, "Output",ExpressionUUID->"d0655063-3067-4370-9bea-35cfdbae5588"]
}, Open  ]],
Cell[860874, 17186, 1190, 27, 50, "Input",ExpressionUUID->"c41af121-0484-46c4-bc0d-013ebbc533dc"],
Cell[CellGroupData[{
Cell[862089, 17217, 337, 8, 39, "Input",ExpressionUUID->"1db8a6ef-d23a-4dd1-9423-c45bc9da69ae"],
Cell[862429, 17227, 65743, 1206, 740, "Output",ExpressionUUID->"7d736a46-9295-430d-84b4-b7e32e3657b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[928209, 18438, 221, 4, 39, "Input",ExpressionUUID->"e27fbae1-9899-47de-8f5c-f10762cbc49f"],
Cell[928433, 18444, 16255, 398, 2377, "Output",ExpressionUUID->"abab33e9-785f-4a8d-8fe9-514b22a6e485"]
}, Open  ]],
Cell[CellGroupData[{
Cell[944725, 18847, 352, 7, 69, "Input",ExpressionUUID->"e1097e80-549e-4815-8190-6372003343ac"],
Cell[945080, 18856, 156, 2, 44, "Output",ExpressionUUID->"533e53cf-70a3-4335-abfb-75259b0ca4eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[945273, 18863, 258, 5, 39, "Input",ExpressionUUID->"7e07fb04-adfa-4e93-8592-52845442118c"],
Cell[945534, 18870, 46231, 1087, 2994, "Output",ExpressionUUID->"b2b07aaa-2eaf-4311-a31e-da4cfdf8b6f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[991802, 19962, 262, 7, 39, "Input",ExpressionUUID->"06f4678e-d063-44f0-bdb9-1e55664ca77b"],
Cell[992067, 19971, 2830, 66, 306, "Output",ExpressionUUID->"debbcec2-f073-4ddf-9503-5473f3b49cbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[994934, 20042, 274, 5, 39, "Input",ExpressionUUID->"b80e89d4-65ee-406a-a53d-b623e0afafdf"],
Cell[995211, 20049, 1331, 28, 58, "Output",ExpressionUUID->"45f3a4c2-2e94-4610-924b-add5fa6d51b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[996579, 20082, 286, 5, 39, "Input",ExpressionUUID->"c9e122dd-20a2-4ca4-b304-0e561feb2b3d"],
Cell[996868, 20089, 1753, 40, 102, "Output",ExpressionUUID->"f3f6df5e-21ea-443d-8654-14442a796e87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[998658, 20134, 2020, 46, 140, "Input",ExpressionUUID->"c8c7bdee-0605-4a5b-8efe-3f9e0168b433"],
Cell[1000681, 20182, 1049, 44, 44, "Output",ExpressionUUID->"b636c388-461d-4d24-b160-8a12825830e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1001767, 20231, 424, 9, 69, "Input",ExpressionUUID->"3106256f-bfca-41b3-8de6-cf73419f4559"],
Cell[1002194, 20242, 179502, 3826, 8413, "Output",ExpressionUUID->"7b9ee948-f21f-4cb9-9039-4ec6c24c277a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1181733, 24073, 585, 13, 156, "Input",ExpressionUUID->"b3d12775-2d0d-4ff6-bb60-8100156fd11f"],
Cell[1182321, 24088, 16328, 344, 953, "Output",ExpressionUUID->"27e9d276-2e31-4a42-9e77-ce743b36410e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1198686, 24437, 355, 9, 39, "Input",ExpressionUUID->"fefb3f4f-c222-4555-a6d5-a4b28b7001a5",
 CellID->714185566],
Cell[1199044, 24448, 28677, 494, 300, "Output",ExpressionUUID->"b88c2222-f6aa-47ee-9738-58bef73a142a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227758, 24947, 336, 8, 39, "Input",ExpressionUUID->"3d1cc539-4207-4825-b328-b447a1a8378a",
 CellID->941903703],
Cell[1228097, 24957, 8152, 155, 285, "Output",ExpressionUUID->"c4f3d0f2-854d-48f5-a0cd-09dc1ace4f05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1236286, 25117, 336, 8, 39, "Input",ExpressionUUID->"81faa580-63ca-4524-81f7-08b7fdf71f36"],
Cell[1236625, 25127, 7994, 152, 307, "Output",ExpressionUUID->"97a5ccf5-60fb-4cf2-98d4-396c0d3c0283"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1244656, 25284, 267, 5, 39, "Input",ExpressionUUID->"e9bc7642-5161-4321-915c-bc336b07e8b8"],
Cell[1244926, 25291, 242, 5, 44, "Output",ExpressionUUID->"3517c5dc-e2fe-4fa5-8b03-252f500e5271"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1245205, 25301, 238, 5, 39, "Input",ExpressionUUID->"0cc2c0f2-4078-4004-a7ef-424f4966a649"],
Cell[1245446, 25308, 260, 6, 63, "Output",ExpressionUUID->"07035cf3-3bd7-4811-a927-9cbeaef18eed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1245743, 25319, 24639, 411, 486, "Input",ExpressionUUID->"5c2651e6-06d9-4c14-9e29-18afda9b3433",
 CellID->271213070],
Cell[1270385, 25732, 15915, 266, 553, "Output",ExpressionUUID->"8155493a-4008-496d-9b80-24d89d36f2c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1286337, 26003, 52998, 875, 137, "Input",ExpressionUUID->"4b3f42c5-4aa7-4fa9-87b3-e68a30bb6417",
 CellID->277630040],
Cell[1339338, 26880, 15823, 301, 562, "Output",ExpressionUUID->"f478f5ed-aa7d-4eb1-9458-3595262f0ef6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1355198, 27186, 10346, 176, 132, "Input",ExpressionUUID->"a401a846-9bde-4701-9daa-1a0b34018b3e",
 CellID->378301645],
Cell[1365547, 27364, 4148, 81, 186, "Output",ExpressionUUID->"2509a7c9-ff75-47b8-98cb-b6c16cc68aae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1369732, 27450, 309924, 5091, 119, "Input",ExpressionUUID->"74256b60-8623-4b6d-ba13-8736f7731700",
 CellID->506753080],
Cell[1679659, 32543, 4095, 84, 186, "Output",ExpressionUUID->"b75580ed-f5fd-4ed8-91ea-c6507ee2f948"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1683791, 32632, 63583, 1048, 159, "Input",ExpressionUUID->"19839e79-8ce7-46c8-b4d2-50f708608929",
 CellID->1922184340],
Cell[1747377, 33682, 9208, 170, 186, "Output",ExpressionUUID->"55800c55-8727-41af-b171-6c4a4c6a14fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1756622, 33857, 10377, 176, 132, "Input",ExpressionUUID->"3bc8347b-bf49-42a2-be31-cfca125c83b8",
 CellID->789129774],
Cell[1767002, 34035, 5026, 98, 193, "Output",ExpressionUUID->"b00249e2-f743-433b-934d-198cdd368475"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1772065, 34138, 10391, 177, 132, "Input",ExpressionUUID->"882d8856-4453-4a20-8fff-7c945ba1b87c",
 CellID->2128436836],
Cell[1782459, 34317, 2809, 58, 193, "Output",ExpressionUUID->"af8211c3-6779-4f37-93ef-a98074bf55c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1785305, 34380, 1490, 31, 87, "Input",ExpressionUUID->"457f3938-5032-43e9-89c5-4567217d1574",
 CellID->1695239862],
Cell[1786798, 34413, 1888, 45, 186, "Output",ExpressionUUID->"752315aa-f4ee-422b-832f-49d1858af2ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1788723, 34463, 14731, 252, 156, "Input",ExpressionUUID->"dcdfb327-4383-48a7-b945-e84c4b41d85e",
 CellID->346388822],
Cell[1803457, 34717, 3985, 80, 184, "Output",ExpressionUUID->"b2cbb5d4-63d8-44b6-b5ab-3b3f4dcae892"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1807479, 34802, 198, 3, 39, "Input",ExpressionUUID->"adc156f9-5be4-4154-bed0-8241f6128de5"],
Cell[1807680, 34807, 551, 13, 55, "Output",ExpressionUUID->"d4d35003-0095-4791-b54e-af8cbcc1e2a3"]
}, Open  ]],
Cell[1808246, 34823, 155, 3, 39, "Input",ExpressionUUID->"117d71ac-8d36-453e-a2ca-05f9545c5f6f"],
Cell[CellGroupData[{
Cell[1808426, 34830, 223, 5, 39, "Input",ExpressionUUID->"324f4892-167a-4661-b6ec-52da10bb9bfb",
 CellID->461980407],
Cell[1808652, 34837, 154, 2, 44, "Output",ExpressionUUID->"4f988479-e5ba-4577-a1d9-b7ee9e132ad2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1808843, 34844, 287, 6, 39, "Input",ExpressionUUID->"88c88ce1-2911-4f3b-b501-b894b3c67861",
 CellID->714297757],
Cell[1809133, 34852, 246, 5, 44, "Output",ExpressionUUID->"eadea8ce-df26-40e0-b76b-b0fac0cc3ebc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1809416, 34862, 240, 4, 43, "Input",ExpressionUUID->"e4275c3f-98d3-4d38-9946-4a969f9bf9f8",
 CellID->1293971342],
Cell[1809659, 34868, 674, 14, 28, "Message",ExpressionUUID->"990f845f-416c-42da-beea-12b45a7015ca"]
}, Open  ]],
Cell[1810348, 34885, 158, 3, 39, "Input",ExpressionUUID->"00fe0c5d-48f7-4b24-92c4-f692ccb0a120"],
Cell[CellGroupData[{
Cell[1810531, 34892, 241, 4, 43, "Input",ExpressionUUID->"f201cbe8-8bed-478c-9048-0bda5cc0afc0",
 CellID->1966730484],
Cell[1810775, 34898, 6487, 89, 422, "Output",ExpressionUUID->"b81f785b-da44-4480-996c-fd0ed9a5f7ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1817299, 34992, 245, 4, 39, "Input",ExpressionUUID->"1e8d57d1-d23d-4574-b465-a6f9eb31c9c8"],
Cell[1817547, 34998, 614, 15, 88, "Output",ExpressionUUID->"2b3f5d9e-4ed7-424d-9eae-5973714dc0e3"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

