(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    386615,       7784]
NotebookOptionsPosition[    378598,       7640]
NotebookOutlinePosition[    378962,       7656]
CellTagsIndexPosition[    378919,       7653]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"CompleteGraph", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.776788708581748*^9, 3.776788710980695*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"0867e798-05d9-4055-a28b-b169f5e3d9ca"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, 
       SparseArray[
       Automatic, {4, 4}, 0, {
        1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {4}, {
          1}, {2}, {3}}}, Pattern}]}, {GraphLayout -> "StarEmbedding"}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 0.}, {
       0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
       1.}, {-0.8660254037844386, -0.49999999999999917`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         LineBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.020399597244776413], DiskBox[2, 0.020399597244776413], 
         DiskBox[3, 0.020399597244776413], 
         DiskBox[4, 0.020399597244776413]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.776788711425832*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"fe866908-1737-4c8c-985f-ef4373960d5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"6", 
   SuperscriptBox["x", "5"]}], "+", 
  RowBox[{"5", 
   SuperscriptBox["x", "4"]}], "-", 
  RowBox[{"12", 
   SuperscriptBox["x", "3"]}], "-", 
  RowBox[{"5", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"6", "x"}]}]], "Input",
 CellChangeTimes->{{3.776789259471243*^9, 3.776789278453184*^9}, {
  3.7767893230209093`*^9, 3.7767893239403057`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4922a9f8-e92a-4226-a65c-5f959f127e04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"6", " ", "x"}], "-", 
  RowBox[{"5", " ", 
   SuperscriptBox["x", "2"]}], "-", 
  RowBox[{"12", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox["x", "5"]}]}]], "Output",
 CellChangeTimes->{3.7767893247652817`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"666de6ab-fdb6-4e7d-ae56-2b4c358c5fb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"6", " ", "x"}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "5"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[7]:=",ExpressionUUID->"8fafb25e-1045-4f6d-b220-9325656352e5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
SZp8KUbChJKHHXvcBlHhM2fT+4LU/Vb2MG2ZDCK916uCw/wkXJD75uS304Mo
/r8zogK7SZjv2a0bsQKDKDt0naGOmYQ7V+jjLrYPoNcntKK1V4k4tytlfuD5
AFIzd2+WniPiwApp/TvXBxBzvPRh/xEiFvUz4Xy+3o8M98r6Xm0i4tWrU7eO
fe1HiTndMv8QETcpBzbXPu5Hdo0/b8+/I+I722+i5gT6kfhBjRPnnxDxl3tL
rFCjD733GGhXMyXiJJtwl3bOPiQ7tW/MXpOIb6gdaHLs7kVevEP82wpEzEk6
/yj2Zi+SCNrZTNhFxJZhCUwj8T1Irciq2reGDsvdEL/hfa0HlYrUzt0ooMP0
F6rqWcR6EC+PRUnXUzpcwDL6UL6yG+02uXlTwYUOb0Ydpw8d/IPmPVTu7mKj
wy23vtnz5/5BTHJfWHgptDhD72ptgccf9OxTrENGNy2+sOtByG/6P8ggKVnz
SiYtTk5soz0i1YWys+YYjJVosULq7Z3vvp3oBPdjwVINGswcQLK0UutE7JVR
nE3U3N53LbmawtqJzvJqyQYx0OCQQ58DDqR1oINJyy6oloB/pXNuuta1o4Pb
iad/niFgt5zCVa7dvxDrg7NMn05tI1l21weqg21olylNUhVlC827H2X3eNuG
LnRunTlRsIXclXOE2zXa0Jf9f5yeHdpCns3pOkn+rUh2b0hw4OYGWpyS1DrR
1Iz8j/F54LQ1RP9gNU3dvQF9Hpm1j31NQSYOwq/a/CsQx+ldtVy6o9Tc7BEW
V1qOAkJ+p5zOHUGf/GtuGcx9QD1iLu1PSCNUn2ar0mZZhuq06ozXq4bQAsro
aVUtQflJErc6r/Wjg8c1j6Zz5aJdCxdLBDTaEflpst18sg3K7TbRu0p5hPxp
E2rVlbRAz0pKNN+4O5BOsf3GrXALGGj1Xjc3fgIMj3dVhZ4NAUFlM5s5AgXg
toPz5NeEJPBtNJG/8hkGBELpjm11FtgYNkt0ZGkF35r+RBw3LAeJcuJ7Vv0G
gaNP97erkhUA3M1MvLUxCBhFeoghdJXg68Zjjdu+Q+CCX29ge8lHkHg3Tp/2
9jBoOjLg7smNQP95ovz4pVHg0jFQ+HwGgSsv4gSVP4+CUOi2bGODwds3zPnr
cn+B2Izb8UenPoMXtBHn3nCNAUc197c9U1/AxHCvkubHcaCUvPD9n0kNYB+L
drgnOAEY/7lP0dXUgE4LPE8fOgFyUjzEjj77CqYmR6MmtSbB1PydV/4X68DJ
tVNixVVToFJjCcV8qANeDqKH5rmnQcRzz/7Xwt9AhKPnb1vnaSCp5bXvx8Y3
QNOfO9Cxawa4pHknHshvAEYWpVIvLs4C5eWVkmN8jeClLjlFNHEWsGr7tJ0P
aQS0Ruz7GntnwdsVHw5X8+/ARH1XhZXDHAi8tCZ1v/47kD54S14new7oZPhq
J8k3AcqBqQDdiTkwp3M3vJr1B4j0lFsOsfkHql+vZ7X5/AB2CX/ZS1P/gaj1
u3Vjoz8AyG1uILf/AzKZfnQcn34CxmWrwc+HyICwuSEofKQZaDusfZxWIoMW
fX+omNgMRLI2R3j1yaA8sLq6UKEFzExzb3gEkkFazvaPCpcWcLChwT09ngzC
2lX6atJbwHSDrmZLFhm47QTO/OhqAcUUYtdmJRlckUAbv9lbwbweU5jYDzKA
xjvMw+daQYqiQb1uPxmIBwP+mbutAGZ82uU5RwZrHUiJMN4K6rfcB96zzINh
AkGT+UAbCOgtfviTbx40SsLL3IZtwBwLh46IzIN3JsEOB8PbgESw4cNFmXmQ
cg97iqM2MOoprrp9ch7czyf8J7fUBtZ/rnnTqc0Dp98wQVnyF0jqfUWhvTgP
DGjvZahb/wI9trFRm/rz4JTU53d6T34Bsbnhw+TL8+BEe2dSdcMv4Me2GBVr
Pg9k/WbuHt38BSD/rnc6VvNAUojWMkW6HVwufh4jZjsPDjfwqjFat4OAC6rH
99vPA0E3KTGv+HYQNsKYd9RhHuznVWMZrW0H4Xl2XKZU5qu+8k9/tR0QC2DY
K+r1u+1dfyGJDsAVyHaK3m4esLOGfJC61gHih36aPrSeB8wlyc+eRXcAa/8j
wqIW84BkVhjE9KUDOPm5dQ+YzgMCTa2tN6UD/AMlTR+M5sFGVrfG38OdoID5
u+5bnXmwrEOWNDTtBPRZjl+wxjyYXyJxfn7UCaR5hCIXwDyYSd1Hka7uBMan
gg+oKc6DcbVjXankTtBzj5X8Tor6PKbUq5iFf4OgOItQVeF50B9rnuZj/Bv4
UY64LPDOgz9K7iFjD3+Db58uKtRQn1/7wENHo8rfQP5M1/3Sber7Ffpc+8vM
b5D2RnytgUwGde313C/0uwC8IyJj3kYGn/36V1lCugB9hbFLz2cyqBKi9PqW
dYFz67d/BhWRwTu3Q2+M9/0BKtxbdqcfkcFLVq8TbH//gKHdpkVPFMggpeTR
Xj/ebkB5759lSn2/k8xebU1odYOV4J1QTQYyiMxuqv1a0A1EyhcUbXP+AZ9z
wib+Pj1AZoVLMev7HPCYVjo1ldsDMttF9qvEzAHXOJ2DV/p6gDb7ESM1wzlg
P+g7dly1Fzi8jw953T4LDPxbvKZZ+kDE7/uLfLUz4JLwmJmpSh9IIK9N+wTM
AM3GDZVvbn0gpD5y2kp+BqjwiTFkdPSBL3WNbr+fU78X7wOemL3sB1NNMW71
llOA1mtPr93eQcB62GFTP2McmFnltpXLDwIFy4A7cirj4N0F0MCqNwg2jVR8
c36PAZtDN8reh1KvL477fod+DHypr4ohUgbBemm+6GmjUfBgn9351z+HwLt8
Qum3skFA/PyuYOTBCChv7NH99qoVmOdpvFF8OQKu+PF5LKW0gPeJvc8eVY4A
xhdP6f4cbgZ2TvThx+dHAKGwcS8v6Tuo3W1m+8BiFEDBfrqFD19AqAMNn/DJ
vwDHjifGbscABla9ezZzY6DlrfB3ifQf6IqYGVZgGgcthvSPGbyaUa6q3Q6z
yDhw4wkm+qW3IB1fn4AS03Ggd6b8U+SNNpQ0luZLrB0HnKyVuhPtHWiCJq+8
a2AcyEY/nGzM6kSnDpSu5K+PA7J1Rhzw/o36DRs8jWUngED67eJrLH/Q4c/z
tzOfTYC0UI/EVmIv8undKLpbNgH0XJYM88p7UeMKiazTOgGswuMYWR37kKs0
v+sK/STw6a5P6yzvR1hL5O13wUmQZjjTtWY6gHbZS8+8VJ4Esi65hTzLA6js
maqTpvskeDpqJGASPYgYP2jn7H88CQaZGDtudgwiszaTCXLWJAheHGao4BtC
24zODsl91PqtffhF0hDSE/F8c3N1EuhNFZ3f3TqE0kHQ6NndU4D8OkbrFuMw
Ou8VbzOlOQVk7+3/F31zGCXFPn9VbTsFGF+vy0s9o/r2/KzBuMApwEk6c9a2
dhidqi8+dD15CqQNcK4emBlGkSMfLU6/p+pOjlxaHCOof7v2OUfzFKiP7OBr
oeYIWf6W3pHJKbCabHfzxYURdP9E975y4jSoJ3qffWkzgtr1Rs0iD02DNL4X
KZ+8RtBhl7lkq1PTQK/IU380dAT5PFztkjeeBk9nA7m240ZQYzotH5PbNLAi
r19ZShlB+6tZL/dFTAPGqFqf9y9GkOsfnqTiN9Mgm1E2QZTKmCLQ8R+eBlfq
etLkkkfQLk5JbrOeadDFmOhQGz2C7CRPGEovTwPO11JB3+6NoDJ1EEfLNQOy
yy6bCN0aQYw2Wq2dkjMAWwYfQZdHkFmAIWee+gwI885leHh6BOU/vaYbZD0D
+NS1Wm34R9B2yfUoQ3+qfmqf0mnKMNJrvv1D7MkMSEsnotX6YZQ+5ce6WTwD
WqynKh5QcxCFFHqxpWkGTGRHXvpqQ80xgjERr8eper71rXSxYfRUOaXBh3YW
XLFw+0sap+aSy68ZLx2gsqCkemfaEFL2KNAQVJoFhJALq+tGQygqqjx0yWAW
KC1nyV2lG0KDOV9qG27OgqfBfJt9eYPowWCnmnvGLEiLF/rR1DGA+isu3vSp
mgUCRtX32LkG0Kl4nBTYQdXXpitvnu1H5PO5kxEMcyDYeEGnN7gXaR86tDtW
YA6kSaVVJkX3oKzVeOUnJ6n6uEDT17huZJEXEJ3hTGUameafnl2oMmShPCdk
DkDXNn9D499oj8X14cLnc2AwikXzuXgnauLUP1HVTNWfa3r8zPmFTnmJ9LQf
/wdw9hfjO8JNKEk3mdij/Q8ENyjXrHE3oHlxdukhe6ouXDwhN12LsntWgmef
UHXp9TvxYdWIWOqSu1hEZVtBsY7ID8gyaujXWgOVFx+uR1wuQjxnvx+m3/wH
CGkBBaIdHkiJTUA8lJnqS8xzpwNep4Ax325lJl4qV92Z1Xj6Fqga6jpwyFLZ
9ITYWiMCa6STFftsyCC4+d7fG7KtINN98ccLV6puxar9IvsXMBp4OyzoRwYC
TNVR4cc6QVG5EKt4AlW3Plxk6NUDHJxZLeXryADnGbwqdxwB3F11Hh+o/6EW
+6DUiKlR8OXcvbBTA2SgN68t8chzDBw4uFwMV8mAM7s5KYQ65+0tA8RLEvOA
M2x74Sggg/tnUva2KMyD4H+nzusdpvqFXCNpQ6rviJnfjPPdtQAePWi4bEr1
EYzzV0m864tAVaEk1z5qHhQZaOznZFwFRc9C9QIX5sHTjI306UQC/L47dJyD
sAC6PHJC81Vp4Nij/wJfsS0APizWMbtAA/f7h+R/FV8AVl19N/Za0MEw8/uM
LJYLwEdTtUbKih5mtN97meqyAGRPx/1llmCA1dr3FKTvLoArtNC5YoUBUpSD
7fQTqf35+1Xev2CCVgcC8ZPvC0CPL6NCYz8b9EsMuHzkzwJIy1JT6SSxwyS2
gLnKMer9JJIoEYvssGnLb38/zSJgbExVbbjJCZX6fX1ElBapvu+TRtatXZDz
pads8etFkF+ZGJY9wAMleT2/qb5bBER1DT7gwwvVo+9YtKNF8HRLy1ttNx/0
D/KIXOleBE03zjm91dsLJyxvT5zhogAjoUKLgsl9EAvcTGsMoIDybfa3g00C
sOepi6L5IwrQtjZLYZAWhMucLj9nn1JABG9YT1KMIDxK47zJ+Z4CuHWL1DdM
heDTIccrl6cooIAn74jitjC8lW7HOWqyBDhL7G7bRYvBKN/k1CjbJTD6sfRS
MEEcFuj9FD/ptgSUytuLiR7icG5b8WxU+BIoP1fuYWB+BLpcZXFXqloCX/39
NA2gJHTifvcrUnCZOq9Lkbf1ZGDE9JilovQyKF99bOr+Rwbmftk3M3RqGcQt
2VmQ5GThpNt/REWjZWB3exwyIFno+OPKiaHQZaAsly/bO3wMOoTuJJ2YWQbM
rfJdRwzlYeg1eeHB1WUQOXNmVfCNPMyUv1EYQVoBkfOiQjsr8vDvcNu3gYMr
ICYwUeBW2gloBzJXw/VXgM5MKL3RpgK0WdU26y9bAaEPOLVyhk5CC6eUAw/v
rYK1mu1kXUUIN/4w/Zx/TOXzRVNCtyB8quUbaJ6yCsQLeviDsiBsFb8ycKxk
FXApPnvesfcsPDe+51Xv6CqonLFY201ShUfsYkXkNNeA+qcSnZfLarDuF6Ej
1WgN3Mlb73NWPAdt1Nz+Y7BeA23nzb80+5yDqUK6Y72+a4D7Rau69dY5yD7E
mv0wbw3cXTR7UsumDinXwiT72NdB/hO2XTe0NWHMj5UejX3r4HCL2Mj+J5pQ
6sz1yHdi68A8xMfWe1gTOuxXn30I10Hk1D5HET8t+KebrlDOfR08tYq4fff9
BVh9OUgurGMdvOWFHGsal2C4vtfJ46kbwHYPnPvirw/jmiRc8nM2wPItR7ni
Yn2YqjHwQvTDBkgyPGK+Z1wfFp3RJPK1bYC+MwsnVA0NYNcR/uZNhk3g2lC+
ffaYIRSnrbar89gEcscmtvyIxlAuwP0JuLcJuuMh/aGzxlB59XBjedQm8LEv
fKoWaAz15qJl8nI2warWH3PudWPo3W29Hj2wCYJ39GImV0xg3TtSjOnFLaBJ
4bnKzmYKW6Qqv7Rd2QJBSsXxogamsDvbdemiwxbw4VfIa3xiCude/DZTubcF
/q1+ff1ZxAzyPMoRFf6wBX795ZfwPX8V2tte+jgjtA3YGnl4vqZfg0TuxLGg
9W1wlNWGXueGNdw1F8i+i2EHVOablUbEWUPBekeF17t3QO6VoHrOKmuo4q8c
Wn90B3yXdn60zmEDfUdHRLksd4B7pO9rnY82cO69nH16zQ5o+5jKe1HADs5I
TNy2USfA6YqN4uOHr0MKb99/edoE+FIKphiZXocbxLZkigEBvhN6vNgYeR0y
D3z8HGpJgC1L5lEVlOtQLD6aK8+HAOtaZcJz6h2hzYZC8WIuAd7mMSiSvucE
f3//jxzCQQNL7/jdKFB0hQkqz88b89BAr4k7LVF+rtCg+H2K6AEaGP+jTJHq
RuDPpJFzdRI0cMTtrfKU1i1YZ302mUGdBqo0frmMj7nBspXNsxH+NLD5sdzj
TJPbMEn4Tnz0JA2k2NiPvW/2gEZJjyYsyTTwy4GTR93XPOAupowzsis0MOSs
wjt34Tswaq51vIVIC3l4HEpVfO7A0AoZ5V0CtHDhh6wIi6gn9NKdHk0woYUT
UhlVlY+8oLGfjUJKDS1s/Pk1JCfaFyY956ZfaaCFcf6DX5mRL+xEdR2GLbSQ
LCLmVzjnC02Ikp5sfbRQpLrf4qvOXXjl8WJJ8DItZPwa+lx4lx80exly7PoR
OniB/6v10ht/aFWTeVQ+mg7q9Ly0mqUJhml/r2zGJNLB/vk4bv6DwXCIgaVp
9hkd7CLS0d48FQxttG85Z2XTwW9sZw6FegRD2w7FXP4vdJD1pte98PFg6DBe
L0azRAe5HNJFlzvvQReWaaGfZkTY5ejb6dn+AE77VhJZrImQ/q1QF+vSA+g0
ET6mcZ0II4YHVX/sCYHXa8VzP3sQYf7c4ZnGyyHQJsjhWGkkEXoxPK3+1BcC
TReHQGo1Ec7q3zueMf8fVO/pMncSIkFZ9dOxwafCYK1WtkqWOAmGykprxFiF
wXPl3gKj0iSYmHnA5GdoGDybyDN67TQJyjzeFOr8FQaVdY2c9Y1I8NmM0Dqf
WziUq2n2VQolQWOjoOXo4gh4KK8uiX6KBJlD02udTB9Do5flFY1kEjz3xphi
Ev4YRsTn9katkGBCwqOZoIrHkOIXJcRLoodFjw/wh/NHwUZtkwIxAXpY9eBe
YuBAFPSa+1uraUIPp9rCZ+JPxcAfx0hLEV/ooUXsHY+QiVhIe3iFV7eBHr64
G10fSIyDSvyTp3a30MPutwqizwTiYDrtj+BnffTQVpbG9ZRpHPT5lcCav0oP
kxwUo3ma4qCIp4jID2kGyHyP0mlZHg/9ytUMOZ4xQO6ql9qc+YlQzryFbPmK
Afp/2T13tTERTu2YRxVlMUAO3ePJ9ROJ0EzDq0H/PQMMr+j2JB1Ogqc6s0HC
DwZ48Ge0FGd6ElxdZDu6l8AI/c0KJoPTnkAvmS6isD0j/Bh9nObxh2Qo/csu
3cOZEabrbk9IdSfDMa958PU2Izy2dxwsbiZD42pmP/tARnhq3T5vWjUFyl86
M5/1hBF6ytyJSmpJgYtO6X1HGxmh+W8mi9mFZ9At06VMQYYJ3tTk+u1o9AL2
N+9LZFdggvxJCrX7g17AS2uNHmPKTNAh1qd6J+cFlNA+cizpAhMUqrJ3MiS8
hKPzf/OW7JkgU3hT+4nCl/DyGctX71OZ4KvsuzrER2lQpV0/Uo6ZGfK5Zr73
I6bD/C2CMzMXMzy+Gkae3p8O94kVaQ3zMkP96XBRrxPpcNWXnSFOlBlK6ZKa
uhzS4btD3+/NQ2b43+vVc38a06Go8znvIm9mWPI94k/XkwzISqtoI/2XGXZl
lKnbqb+BFd50hmPTzHDmxUhkhfUb6DDbrPZigRkmf9Gxkgh4A3GXoyg7gQVe
8H5CsHz/BnoUpkzM8rPAsgIRex6RTNhtvu36Vo8FPjIzamlmzILZH2r9jlax
wP7k8Kad8Wx4/qZRokQ8KwxX3HRhpn0L78R9JNxKZoXrEev/xQq9ha8/CLmU
vGSFr2v+u3RC7S2kpZ1XVc5nhYctu+R+hbyFOOkx+VItK1xQPWvjxFQAT+G6
i7dXWKGlzJ8mHr5CKL37JG35VTY4ZeL9fPlNEeSrOHDrvAg7VOrrPTzNWAK3
bbP2cUmywz3fP2zXHCyBo+zH6nuPscOzESFJRfIlsMjunOAdwA7XVYpP1VqV
QA1O51/pZuyQcv77t76KEuh1vVyREMsO40rTnv2+9R527DEkfNxihzHsTjHa
06Uwzj0sVvY3B3TnoMioClfA9ab88rA+Dgh2y13JUq6ANmKtA4MjHJBRoueT
gEkFPN67VzqWzAF1tI7c1guvgFPpxn9XiZzw7blfda/JFTCSdfye6UFOSF93
v0yyphL+HGD6yK/PCVXBcC+DTxXMqYlvb77CCVfarIqtUBX8HyKv/9c=
       "]]},
     Annotation[#, "Charting`Private`Tag$5350#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 5.}, {-6501.100479339078, 7359.377706576829}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.77678936384993*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"ed449648-1067-4565-87ae-d254bfa1b267"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "x"}], "-", 
   RowBox[{"5", " ", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"12", " ", 
    SuperscriptBox["x", "3"]}], "+", 
   RowBox[{"5", " ", 
    SuperscriptBox["x", "4"]}], "+", 
   RowBox[{"6", " ", 
    SuperscriptBox["x", "5"]}]}], "x"]], "Input",
 CellChangeTimes->{{3.776789331899826*^9, 3.776789336925383*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"5eb2d4b8-9b4c-45e0-9752-ff854fe95e87"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "x"}], "-", 
   RowBox[{"5", " ", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"12", " ", 
    SuperscriptBox["x", "3"]}], "+", 
   RowBox[{"5", " ", 
    SuperscriptBox["x", "4"]}], "+", 
   RowBox[{"6", " ", 
    SuperscriptBox["x", "5"]}]}], "x"]], "Output",
 CellChangeTimes->{3.776789337230483*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"38a0cc43-ae68-46e0-8168-bf05053889ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"6", " ", "x"}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "5"]}]}], "x"], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[4]:=",ExpressionUUID->"8d2fe643-6928-4ae7-9b23-45545cac033e"],

Cell[BoxData[
 RowBox[{"6", "-", 
  RowBox[{"5", " ", "x"}], "-", 
  RowBox[{"12", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox["x", "4"]}]}]], "Output",
 CellChangeTimes->{3.776789338954002*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"6860a843-dd67-473d-a02a-048692d11091"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"6", "-", 
    RowBox[{"5", " ", "x"}], "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "4"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5.`"}], ",", "5.`"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[5]:=",ExpressionUUID->"5025d6fa-386a-4d47-b012-369869de2a49"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Lw/+Dx+xXZo=
       "]]},
     Annotation[#, "Charting`Private`Tag$3915#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5., 5.}, {-1.6404421773333677`, 4055.999336734734}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776789340910139*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d8463c3d-33d2-4281-90c5-18afa9531a3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"6", "-", 
    RowBox[{"5", " ", "x"}], "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["x", "4"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767893445018587`*^9, 3.776789347373845*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"28eeca14-5181-4fa3-bd5d-69181ea6bd82"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$4656#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-1.640437509346123, 36.11481045884382}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.776789348683206*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"d95ea480-74a7-4db2-be41-93d22af594b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"6", " ", "x"}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "5"]}]}], ",", 
     RowBox[{"6", "-", 
      RowBox[{"5", " ", "x"}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "4"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776789393329522*^9, 3.7767894033658247`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"5df77578-5117-4007-80dc-7b2b7947786c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
fBC40fp8DhqdM3ZdzMCw/wFmrt0L
       "]]},
     Annotation[#, "Charting`Private`Tag$6000#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$6000#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{821.5384615384621, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-22.049224286177346`, 33.31558700297106}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7767894044008093`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"a7c67272-c480-4ce0-997b-0d3724840fea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"6", " ", "x"}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "5"]}]}], ",", 
     RowBox[{"6", "-", 
      RowBox[{"5", " ", "x"}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "4"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.776789421086092*^9, 3.776789424495021*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"7ef05573-dd7c-42aa-94f3-4dd8ed45c268"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fBC40fp8DhqdM3ZdzMCw/wFmrt0L
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6665#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6665#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {-22.049224286177346`, 33.31558700297106}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"6", " ", "x"}], "-", 
         RowBox[{"5", " ", 
           SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"12", " ", 
           SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"5", " ", 
           SuperscriptBox["x", "4"]}], "+", 
         RowBox[{"6", " ", 
           SuperscriptBox["x", "5"]}]}], 
       RowBox[{"6", "-", 
         RowBox[{"5", " ", "x"}], "-", 
         RowBox[{"12", " ", 
           SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"5", " ", 
           SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"6", " ", 
           SuperscriptBox["x", "4"]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7767894248483677`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"cbc22fa4-d567-448e-a6ba-dd283ecf5656"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"6", " ", "x"}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "5"]}]}], ",", 
     RowBox[{"6", "-", 
      RowBox[{"5", " ", "x"}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "4"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"76571320-b0cb-429a-aed4-81616dce6158"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fBC40fp8DhqdM3ZdzMCw/wFmrt0L
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7447#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c81d8bwGWUURlZNyohSZJNKucklYSQhApJUkqo1DdCRKIkLUoyMipJ
UWQ9ZGZkZGdfrj3vcO+1fp/fP5/P6/16znk+zzrPeT5bna5ZXuDk4OBwJh7/
f6sg8bGVlRVQL5YKWVnRwddYcqEs9goo2/zeID6ogzOz1BSo9BXY8tE7F1fp
YHVFUyfK+AroPh9QaIrUwTrC9ztr21Yg5l1t7qCsDsbk2eqYLyvwy2A8v8RY
G1s+qPuk4bACrooTfXIfNPGt+vtXLxYtw62ykGNNcWr40bh3Gy13GRRirGwg
WA0nrrl0IDBrGQaaL34vuaKGa5Gp2Nu0ZdB/89+e1XvVsGymWGFT1DJY37xh
+7hdFf+JTFmrf3EZIi55BoRLqGIFy6pPokLL8Ki/byOv8S7c3CwwVnJuCZxZ
AYpJ89vxPefvRZ/OLMEN+qnrWk3bsQrN/tmLU0ugKJBcMZK+HYdu+LbvkukS
cO+5bvzNaTveb2nzRGjPEqy3wrL19Qo4pf69poPQEhScNp6XzdyGb1fv918s
WoQJFoNRHSqHt9kNn6D8XISquZxz5y7K4abRSMWG7EV4binJEj8sh5X5BhuT
Pi5Cbfiq671ccrj/SJj8sZeLEBooyyIHyGLj8tbfMVcXQTv2Y3BGwFa8qfia
qI70IgQsmQ5V7tqCa0W0buhJLIJVxPMrmdTN+M4F9t/9IosgNBNwofHnZtzK
H/zMkJfQv84NFxzejCNPvhaxpC3AxOXnaernN2Gu8TKhq7ULoKz1pCwsRQqP
im1cl+S7AJpbNp/eZS2Jo117r6TcWgDJUbx/RlYSH85/X/vBawH6DC7sG5mW
wImOux9luhJykzDFW2ES+MwnQ4EiqwVoeH26Y90vcVyPr/F1KC+A6s74nDV7
xfB3tzIewW42OFK0bG6dEMG6Mu5qKW1sUDQti+2XFcF5zRJn9zexQXU6/lHI
nDAu3u+W7VbJhoD1D8b9o4RxtaDI+aqvbJA39xHd1SKE+7Iciu+FsAHPZut/
qF6P+RfZd2i72RDa9mjdpAMffpz5PiVciQ3FIWk9U2v5sNAFsybZbWyoytSc
P5vHi8X+JOyw2MiGvusfOILEebFMvFH7Z242CEXHhvT/XY21DF9qXexgQebO
WumfTtzY8ZHaTEcgC/C1I1TtuBV0JzsqpO4uwft4X5GlVtCLLqp0yW0WFFdv
XcKvl1G18o+jae4siDyS5b82Zglp1OkleduxQPXaG/d/cQto9XpD6w3qLHA8
WVe8qmYepT+xLjDpZ0JkjJh5fuIMqsjJscRdBO8T/wdaM6i/V3JUo40JfefU
3zZGTSNx1X9iUnVMCPhe/ddkaBL5NzhcG81lgoxXQlJ4zBiyFL4kGxLJhIZA
l4v39AcRM8onFBAT4ovdLSXGGtCwdMnYYT1ivymXgnP9H9Sastr0jyYTONq+
nFdrqEFZeU+Fu3cQzJ5dd3+gHLkPpL5mbyDWJ5NMDZ5lI7Jac7rWyDxw2HWo
i5bmQFM+SbBwYB4CbM5Ka2wqhOJDDp6G3QSPD02ZaJdAnO2Y1ommecCsnr0Z
NyvA5h4HeBTMg4zLwa3n7BrgT4Ny46dIgq+J2GdJdUKBnZeGRvg89LkYKOgY
/YNPgzkv8oLnId7mo56SVxeEMg3sft8h+NKtRxeKeuCgjC2Z4jwPme4XatRi
+yH3WjB96555op7u9/J2DkHS+h5SdD8DGsJVFBzdJiHqNFqzp4sB8Qth9hbt
kxCYFk/raGWA+XR26lbDKXAyOF8vVcuAzB9dRU6S0yDrPXL/3Q8G2Hwz2wi2
M5DYPTedEs6A6HzPJ5c6ZyFKyar7SAgDhN7D0bW8cxB463v1SAADqvR55bdp
zYGT8O1kJW9iv4F7Z97jOdh6aMkuw5EBaVkXv9/TpUJ8+pqK71oMYNr9Y7fd
oEEkyzXLWpUBvM8FPNe9pkHA4er4eSUGuKaE3IMiGjj2PfLZI8OAPulZgTer
6bBFVEStkJ8Bqv16bL1IOqw/d32zPQ8DdC3Ubzl+pcPy52aBlRU6NBgkFfM0
0aHnyCsKptOBd77reKMwA+J8pGPLeukQP5jz3y3Cr4iquw8vdNJB8a75zZQ0
BviJ9XqvbqGDuSl2tSlngP2XBAujajrIXHStPLzEgE1khTW12XSI9DriZnNx
HmKN1bz+PqSD0JrEiRR5JsgLGFc33KdDe+uYcbkuEz7VOMn+8adD7qs0I18T
JuSZPG+quknwk9Hz372Y0GE2r150jg6ZYrd6zuQxwVFQKDz/DB08DJhLRjVM
GKlXJOeeokPoa5/9Df+YwDS3e5ZlSgebG0qnvy4wQfxEITVtD2HPt/xfFdos
iNvQeixFk/BXw/f5c0MWbGueSkraTYdoOYNVHJYs0DwpYxW3jfCfM384040F
BWJ70t/I0MFxUH6FcYsFB1stuGOkiPhJc07+C2KB5amg7GfCBJdEhgS9ZkGn
ROzap2vpIEk+Un84mQXn2rOdI9bQQbfsruLHLyzwsKWIPlyiAcd/dw9ZlrKA
SVq5EsKkQdqvN8mvalkQ0ClRHkSlgWRuv5lfCwuenD5602+UBjJdMdmqFBaI
SzvV+QzSgNfgy9qlScKfrjvb/uulgesv9SE3Ogsyzqa3XG+hQUN1q6k6Fxu0
N5fv8mygQfSx0dthfGwo7OkOdq+hgWK7qV2IIBtqHQS1L5XQIPf40o3LRB+0
klGMcCmgQR8t1OjEFjb868OU8zmEPtLI6n45Njgl2Oqf+0YDZg7X0gZFNoyd
83pp/5mwLyHj1sRONnjJhk+dTiPW+yWXXib6MGsg6bBtEiH/G7HriTrRx5MK
4qzjaKDKZK+y02IDr3ML40QMYY+M8+MaHTZEyk+ZWTwn6v6kivTgHjZIDK1O
NXtC7PdJZSftZUNc8paVY2H/92fNTYH9bFBw0T11NJgGxbbX2jbqsyFDweLL
4QAatAuNX20iWHv40hpDHxrg7Gv31REbilIDHQ54E/Fy6HLZS/Ah1zc5+p40
GOFhO04S62sVswX3XaGBx3WfIiOCrUZrL+65SAMjk6VqU+J7XR+GQNuJBrpr
VzctEvY4X16W0DxLg5k1q7dY67FhQknCQ82GBvFup5ZsddlwfXx3lcoJIp/7
9HN5tdnA/mQko2xG+Gs98tpJgw2BV87d3nGUiL/71ZmLqmzoibCPzTtIgyq/
Bz/rlNmg9/V08TF9oj4499c3EPF++ddmsEuXsNeZFukpz4Y5+kledw3CP3f6
2UwiX2aSJ5RXdhHxOHTpxWMinx/1zM0jFWkQ6mH3kk+MDef8jaO/bSLy9+mQ
Ry8vGwoSjhQclCTy/TZ/tR4nGyTLDPuaRYj6TEnp11xgQQMvUpxfQ+SjMrBn
7QQLlHfuMwnlJOzPZheMkVkQarrHg7REhZEzdJvL/4h7MEojd+8cFRRf7D5g
/psFsdmqXbUTVHAc5TiaA0S9t+7isB+mgmTQ7eCS78S9KqVoFNBFhdvSu0RK
4lmwJVm6vayCCqExeeneXiy4U0laPFlCBRvdpEerXFjQOiouM5xPBd6OvIfq
tiyIUBF25ftKsO9N01B9Fizn8DBN3xD2XLQVWcfDArtOTuneF1TITWikNtGZ
8GNxBXlEUqFYwfbvAQoT3A+wH0QFE+s1i9lSFUzorp6SaLtGBY7pc8M195ig
Ozm+1/UyFYR8436QrzHhueCoA8uZ0Kckezb1LBNMrMipUnaEvhar1xpEPyvo
btNxNCT8P7su59LoPEhytJye1Sf0n12RHWuehxuyTf6Bewj/yJU6pOJ5UL5Y
W/lehZAr2/+6/4LolzPFp0YlqdAgc1v2zb558OH6eMtrcg76hhP6RHwZ4B5j
v9pxZA5yuxm2ds4McNq94YUpmWAF3mIHEwYYn/b9ptgxB1XdvdeSpRggmWU2
2VM2B8Wyf7bL59Ah24nqdCx2Doy2xc8rD9BgqmSfmfwxQn7C7egpfioMnJrt
Ej48B6E2nRODY3PQMpnstoLnoGAqfd+eGuJNEnzYqT0Hip12VO3wOQj37C+N
lJ2DkdUtmhHEfae4NWTPEmsWoiPLfYaZM3AuoF6+NW0WmEJn+3ScJ8G6451+
d9IsGHE+brlPmgRjdQ+bwThCbnPpx/U/E6A5KPRo7vksZIqa7NijMwG8RpbU
9fdmgUPspKkH9zhkCLaUHLGdBY/5o3/Yj0dgIa7T/iffLNx+yTfQ6EiGF4VD
0bGXZ4j5ZvYOH2oA+9uv/XQuzEBx4Q2OavIfUNQ47tzkMAMBh97dtDCqg7y0
3N28J2eg76BdfOe6auh5Fl5xHRF8PKBSNLwUtl9WoxmLEus1VfSv4Q/gtYsd
N+czDdgh+a7MRBnK61Vcmy47Bbc9CmPt75GRnBA2sIobh6r3kXesu+bRN6XQ
ywPkEaDVa249VcmFe8u/ymhrU8D36bazzMMCeEj5hTr8IEPuRp+umwNCWMkv
eWrkExkuD0TwNkwLYff67x9FEsiwwTZJR25JCDM9W2VdwsnAz/HgTraEMObP
kdiwjvBbUmPq5T0TYax64DXVjo8MDNVix6JsYexz8l024/QABIeduBPsL4KF
/T5oq6zqBwsBs0zfxQ045IdildB8Hxg3eOZvWCOK2VOpttSJPvhmbDmWKCyK
BxxSfHPb+2Bn6vSbDwqi+NuBpF8GmX2QSruUfspcFFvyvDU75dAHjOyPQWqJ
ong7aWsdh08v6KZ8PvgdiWGhsC0z5S69MHo7inzoqBhmsjdtCLfshX/mZ+br
LMVwVddGWzGlXjh+dptL2QUx7BovOrSjowcmuH2ajoaL4Y/beZcsdXqA9DIo
9FuzGFbWnlZOpnZBj57zxw5Hceyi4u//s7sLBmJ8/3FdFsfvFASb6iq7oGJd
1HG56+JYRGL3LcabLojeaDV2IFgcz8+7lxwx7AJBDvPjS2ni+NfPqZNjz//B
0C2uja5T4thm/5Tfbu1O+C546dKohwSO0vJrPCjTCS/5Tv38elsC1+xaL2/D
3wlpP86muQdIYP3NKr8DejrAN/+YRcUTCSy3cnVDU0gH5FvePz7xWQJPFU+m
3mhrB7+IPZsFRyRwkOFkw8/bbZDHcv8UdUIS/zKaOK55vg3aC3kUfttKYg7T
8T8Zpm3AqvbeQXOQxL4nR2uTZNuA31WvcPsVSeztMlT1uLYV/H4q5HHfl8Su
od3F52Ra4fLiD9VnXyVxyqMu1MXfCq/e9H8WypHEg5H/iqzpLcB//0FAYIEk
PhfTUXCsugUO6l3beLBSEtt9bMnVutECC1SPep0uSWxSW5fJV9UMXfp+tRNc
JBzWULv7/rdmCFMNM83gJeGq5pqM5dhmeDknyDy/joQPdf9Op3o2w4JlGHwS
J2H9qfK0bqlmGB/p+5uuSMKqQkXxX6/9BX2362uuG5Owu2jhFmW7vyD6PITL
24yE0yUL4lIM/4Lmm2vcVy1JeMfWvNg3JIKFY9fq2JGwrPqP6ODSJpBKH1nW
u0TCYlYZkbYSTbCyXFPJEUzC3xTC8w5xNYGLT0GkQCgJm7MuDqpNN0Jl/EiT
QDhhf9xWXf7KRnDf3Vg4EUnCyyPPe/O8GyGsTFFANZaE3+R78qU6NUIdWdSH
EkfCuhFmGs/MGsHZONQuKoGEvTR4H7gpNMJw/vPz1SkkTLnroyLd2gAJ+m4B
+ZkkHGRuY8P7qwHCY56abcoiYRk5rUDa5wZYGpwOuvGdhO2qplpqgxvAIuGl
DFceCf8Rcbp7V6sBJJ1f8Cb8ImG3If3US1sbwHvszPznMhLmzZVqPLmuAa6L
eR3OrCDh4LyPR89U10OM+h3OF9VE/I4/jS7cUQ9L5PHunkYSTqMZT7xYVQ/v
u8h5L/+S8EAMN3bv+ANDuu/nDraQsPXgreHND//A5J1tHn7tJBz5UG3vvOMf
8OGsyhboJOFqlfGIet0/oKXGsIj4R8LoP3vtgJE6iNnGeHa9h4TvbJYMsymu
g4sqrTqtvSScXdrYrRpdBx+c7dVV+klYcf2h4P4jdfB1f8mOIjIJCyXtbDZI
rQV3Iz8J+xESNjYa2i7lXwtG1goubqMkfH8yzodqXQvmLvm87mMkzNQRkXu/
uhYeMnKNTkyQsHp3jbdvTw3Mvv0+pDVJwlcCg6utftQA60Vly7opEu6vZXry
uNSAvvzTjLfTJCzt9a28e38NCAbxvTo5Q/grcYX0Q6wGPpdKNnHOEv4WbLsa
MVkNNfs+OyQTXH2ut9ilvBqOd+Sh/XMkzL0mRhS9rYYjknu9qgnWT7d0lbhZ
DZNrd82bUEn4tsXagmmTakixf/GnjOBvjHLBKvlqWHXUj6lGI+GIj4m/9Fm/
weDX4YOxBLvZ+9/8Xvcb3GaXOdgEG4mcUVRO/A2vpKrVjtFJWL5C91+i9284
s/dvyxOCOe6IRZCO/YZSDtPJSoK7d83hyC2/4Xij520qwXn9f6iraVWwXBl0
S4RBwi9ffEq5W1UF+HvtmDzBXkdDbWmxVbCyOa5JieDjS85r3Tyr4C222P1/
ufLXA9B/qAro/EdWCRPMe2Gzl83GKrCRHzGaJfQPSi7I109VwuOR96vLCS6p
bWs7VFoJza50vUcExwVkhxW8qoRRN1vKYYLvaD7dr3GlEuav2vDRCf+sR67O
fMCV8DH+3vuXBGvEGifJiFXC5nG33J0EC5lvt341WgFjo98PZRPxm+Di5ltf
VAGbp3lMVQmuyunLvx9VAYiTv/4dEf9kt0L3BZcKMOm7VctJsP1f7+YRwQq4
7huxL4nIr96DEw8cBsuhD/3O7CPyL7FXVa81txy6258mCRPckDj6rvRcORg7
HeI1I+on3brCUk+7HGq4OHxtifp6yJ/E85W/HFhdw5424yRs4HXGLS6rDBKc
NUZUifrcrLBns1hoGQxfe3+Zn6jfhQ6xxvAzZXDzytnrbRSi/g/Ua//HUwYy
xJ+YySBRX/RPo9MdpVC1yamIOkDCVz+ExrpklEKtX/h4BHE+FIQNOK1OlcLG
befH3xHnibN88/fqnaXwafPrYrFuEu69vXDxAAcxZwQVb/Mnzl90X3adyodf
EF5yIFmZOK/8mdtj+BZKQFrnafxcA9F/znObBNSXQEl2qDRPPQmXSvQvM5JK
oOsGt6ZAHQn7+r92HjQh1scP7Z2rIuEps3WqEFcMjyJCu3cWE/H9N/R49H4R
MGPcqGbpJNzpK/7urUYRJJbtV6n+QMLrNx/JtBgoBO+YhGy9VBL2dkxr+okK
4VpK58cFoh8eHrosEcbOh3PS964uvSThkanpeCWPn8D3xWxglT9xHiNlvvVs
/glmQh7pTT5EP1azKI2qywVvnYLe6NsknHv92xBbKRdcFXjDeLyIfDBvKNUM
/YAnBZsUHZ1JWImTneV2Oht49sx5SR8h8p+kVL6FPxu6F8mNhgdJOMrwdOvf
3CwYMb5Z6IRImB1SwNwrngU/imQM/XVIuEbAf//axq8wlxBmtXc7Cbcr8UbY
Ps6A48sOBSXcJHzWQjr73/n38PiM8deNuZJ4gkrfc7MsCQzGYxI3ZBH37ct6
WL8tCYbeRXZzZkji2H+BNQcoCTAYZr6vLEkSZ9c0lR9vjIOdvVazTRGS+Avt
itxI53PIyOKelD0viQOaFZulSk3Bc+MvchK3JFYW7L7Ms0sTTXId3H1lWQK3
zga+E2LaoJZD73ftZEpgn2eHq900PZDNgxiLx+MSuFTm4YO3QoGIMf/f24FG
CXzxopLLj+UoNFG4M7I5VgL/5Pdp+XUzCVlVaFjP7pTA8bvE/n6RfY9O+kie
mZeTwCHmXxpi698ju1eOPFQpCWz1klzjvSMFGVzdZVMjIIFntpr8UupOQ3OK
Pa85xsWxwp5NX6IMM5DjM5uIwFRx/DvLwfDrw2xk3yEWvI4kjrUGVm2+ZwPI
p7GSO6lXFKvknZpV/QCoXOtbI7VFFCtEfS7rYwHSJX9e3lcrigUS0rXiTYvR
lojuyNxcUbxobtO1MlWM9iT7oJNPRXF35pcdoPYLCaceklM6IIrfediX7c8p
Q+0/Nki7v9mA5WbyWXq/fqPPj73UmvaK4KNJHXVmNk1ocXld27fRdfiQqQgX
/XsbuvFuTfeR2dX4iUNbgGpOFzHpw/MZIw5cabZpnblIP5LtUKq8GTOHRFX6
xb2k+1H/pdTY8xfnkOO6ZJnnCv3ofH5p9gWtOcSuUdZs1+tHBz8+CUltnEXK
R/eddjzfjyK1vD5sF5hFkQdPf/DI7keMH/Ecz7mnkZ1uzKGn1gMo4Lnoe12e
UTS5Vcyv6TUZhd5LEclz+Id0fRI8S96TkUz4Cy7eH50osHnXhcwMMsrNS2zt
XNuJxB8cNon4RbDA9wyRgnakP3Fro/EYGTUIFPMPyrSiJz86f5TsGURV2lc/
tXA3IrVj8dOZ7YPIUSQ0YstsAfJ9r0x+NzCIZLxeyBc/y0MVS7mtERODCB85
enBENxfZZTYWXuEYQhxBiNYdloUCxbgeKSoS3MpXHvHmPfrbe0Ex/hbBfrWT
sdlxcPPGznNPxCnIw1atsqq8DMT5pwust1JQ/PRZPuOecsh9901yszIFBTy1
9VxNr4DF6j0N6QcoSCjZtkph028I3GqEqq9QkExUGx1O1UHEH+dNPKUUlOnx
cLdIXhOoOiv+V1tHQY4nXpu+1PkLjazx5mftFGRjy0uTyybmwG3XH8lOUVAu
Q6bS+mMzvPa5t4BIw8hm3mqEEdYKKYpxHXeuDaMA6dWJnNKdYFR0TsvgzjBi
LqdsDHnYCaMntj3lCx5GDSO3Xi/TO0HZP90o+jXBxxT8f9f8g28teTnfy4eR
o8COa4mXu6EosO3FjNQICt0luLhJrw8cJd/M5iiMoPjQM+/2uPbBqgx7U3+1
EVS8aGtc/qIPDDuGuNcfGUF9YseFlKb7oHo37fpOrxEk+eBxofibfmjrErJ0
qRpBaUdFKZTWATAOv9B+o2kEKY75/casASjYk2cf1DWCOBwo60WlyBD/8rxb
/MwIUiVvfyR/lgyu5j/ud0qOosxB7p7uTjJ0LvMLjMqOorSzMo5UJhlMPjs8
nVceRTM749vvig+CGj9fnOiBUYS9P16fPj4I7NLTOWaXRpEqls/VKhiEK16Z
+89eH0XMh21W5JZB6JHhKXO7O4qEqkmeq6YH4dfdjIbQp6PI0S1s9NGWIQjX
WTX26+co4khYRWr8bwiWh056NJaOotBsk7m5iCHweP6R0Vs3iuL9RX8HJA2B
1ewJrqV+Yj9/vlJP9RBIf0qR1uEfQwEWtJYnIhSIsF1IPCQ6hkIVZ7JWyVGA
g9d8h9XmMWQeTeL8p06BQWeWlqf6GPKIn39fYk4B6w1mBf77xhDvmv3NdfYU
qCpJNIg4PIYkkxoV0RUKfN5scvyT3RjKTJCimwVTQKYuvuWn8xiK1GYfmoik
QJQP/XSVO/G9C3fcJ95QgFvJeKD19hiSuVjcaZZCAe/2ONehQIIDShkimRQY
CaFOUR+NISFOMxXdnxSw0zK6yflqDLUbL00UllCglhy7IJQwhhrKDsQl/aaA
ftTsvS2fCPuG7T+PNFAgEx/mVflOyDXdgh+1UUB2+nXEPhhDqvrmTyO6KfD8
7bTosd9jKPpd9d6pAQqsNjF8Y/t3DM2sujz9cZgCt9nRW127Cfs3PhUvG6fA
WNpkqvcwEb9PN6X2TFPgzCkDleDZMYSDZFz55ihQz/Mq+9nCGErzveqiSaOA
Qfa4XiLPOFL0Fwj4SadAthMuyRQcR8V+vpujGRRQEH5xBEjjqM9H7FM9wdEw
WlcnN44CgpYjHAjmd9e36to1jji+qGscIfb7Sj/rHNMZR47yARwhVApMVQ87
sg6MI0nxUAepWQo4/rdveI3JOBIqLcpdPUUBJeeqlilrgv/dWzM9SgGqmVVZ
yzlCX17VhvVDFKLe+74VXBlHM3wNUud7KRAifyUh6dY4inR8eXaynQLmgswn
YYHEftQlnt5IARI7yM/z8TjCIvLBcUS8BwYFr9pEj6M09W9DpcUUSK9/cxol
jSPzwUc3pXKIfOZtN1bIGEe51r6e79MpgJKzdNf9JOKRzC9un0AB3ki0nVY6
jqJbg94deUGBpjs1Yv/+EPq76UcdQykQe+EU968Ogl+pWqTeoYCLOXkubXAc
qf4pn5Ei6o21baHemz2ObK4LUcJMKPBL6EHRWZ4JlLs+62vQXgo8WhD5bCg0
QfT7sFWpO4h6bFQKE1GYQKoX10hc5iLymf/jNkt1Agk5fzDnnR6CrBSDi317
J5CNyX+Muo4hOOxrZ5hhQbDIrFtt+hAIXaSovzgzgfpa33/mejEEHRZeW30v
TiBHqzjk4DsEV7aHLR+9S+i7WK8VYDQEUU0/c4fSJpDHzJMHJ1oH4UzhodTa
rAk0Ixh26VXOIGxLa3yRVUSszzxpw3o1CLl3R73uNRP6mgS0Ra2JfqBI2rWJ
YxLl/l7T/qSSDGkbkqW4BSZRWqoVb0YCGTyXVfnHxSaRTPZ/c+Q7ZOBuNhrO
3TmJ2ndqVjxTIoOS/+0Eq1OTCA8rS036DQDtEnfkXqdJlCmZWfPNYgAKrSL9
ZK9OouK1j/8+lBsAc6W00zOBk0g16L8s17J+8G5pE3uUMYnMtzze9ZfdB6U7
dcJKeaZQ8YdeUZPrPWC/2yppVnAKyWQ63bHi7AGmumfBlo1TKOBBs1rKk25Q
1vs05aMyhfBu+YMyyV3w3GjLCc1ThJyx49nR/E5wubBGOjmN0FdX1WD4rBU4
Lslr/f1GyKPv1h5Y3QqvrxwwW1VIcERHgtetFvhz3SfgbCOh7/Bj98tWzaAT
OD0oxp5CfY2XIh4xG4H3XdvnkGPTiMOwzeRvw29ITKRVZJ8k+Fl57yrfKtiX
Itw34DBN+Pvh9hW5SvD4fEwE3ZhGATE7csZcyqAjH7znYwk+d0vDN6AQPran
ItcpYn+eEDP2zwtQ4CsYeW80g3DqmaK/xlVorlLlcqIpwfGxKTai1agoJGH8
neUM4pDs2tbUX4OsuR9MvT4zgwI8Pr//HFqPglcsaJEeBGuG0BSD/qJB+vCK
b/QMKk42Y7ec+4cSBzZInByZQY6LuYfdrCnIPSEk2nJyBkVuTdxSMkpBeo4s
kvkcIY8THtnhN4yaunukjy3OINX+bWt1Po6gVR0fZA8IzSKZ3ZsEThB9xrEe
qezSnUWZL5/1i6+ZQZsK3A7xhM6i3C9Tqz550pEoic12fzyLXMWePWY109Fa
79DM9qhZJPSDLDGvy0CLu5Ol0t/OouK5LDYH1zzqTOqZtcyaRfH3m4rOvGOi
l+EWcfE9s8joyNam16wFtP60zvxeYk6Tz1OY/v5mFV6dW56erDeHmBMCctC+
Ci+JWjkJ4jk0EpK9d7s4J57441E3YDyHFNNmBMSiOHG1wcekh47EHJhbAVcj
uPADpU3mbeFzKLRo+bxRDA/mYHN+8BqYQzKCQbtNWXzYkdxB9R+eQzhzelXJ
fn5cXJup/3hiDqn+ltsSEciPA97ZN6cy5lC8WxyX1joBvGKYt9LFTyXu88CF
PIW1ePmJp/URDSoK4KhY1Xx5PV7c1sclfZ+KqhhxNcdjhfEZwRyzHQ+pyDVz
Me14mTAuYD6O0Y6gIsN10Wf9J4Sxb83e3RbRVOTrb5Dtvl8EL3i8sgtJp6L2
4F9TT/pFMDvf7OtMMxX1rdnoQlUXxfMWhfbl22gI43VMOlscB3Z86dbfSUPt
J+NLOXdJ4PXnEs/kqtLQbS3PN8ccJLCCxwO7T3tpSPeg9/zTMuL/IMLC+qkF
DbkaX5WkP5XEmdVDpmfv0tCiLa1JXXcjvnRw/X56M42YD9d5+GZtwrRqjgL3
ThqK1f6z3nRyEw6wpOqN9NJQ2pYdq+23b8bR59p1/43RUPGzo2EHYjfjCv9E
zRIOOnKM1s4XebgFyxZoKz9WpqNHhZ26fjky+J+mg9S2+3S0KJq12+uHLHZh
aQkGP6SjtK2WT4dbZfFM4VquoQhCzjsv7jcvi7mP5I29j6Ej50n9pvV75LCK
rVie/Bc6yhVfO1RcKIcD7tbYyHfSkRK59pJ3nTxWqNB5KafKQJzj7K3vVm/H
HqeEhGW7GEjF/yglm7wTO6Xtfr2tn4HM937x0ORXxidZZnI7KAw0eNj4TbOq
MtZ781hLdYaBaP/2CtzyU8Y8vfx2+tzzaPDqpclDUrvwaxeeJDvleVTlPuUn
eVoFl91kaz7znUc+P7TLFv5TxaTngzbcm5jIIld9ZvKwBtYN2iJ+Q5aJhAak
GbcdNbC1l91f8nYmutdGtyXd0cBR5g2mpepMVKxm6PT6swZeu67AINCIiZpv
uAfHiWni5eBnyhw3mEh0Re5tzqgmHrxlwLFYzUTMwF2ZnonaOON0fCr1NgsZ
af9JULXRw5ptcuzVfiwUslanzfSmHs63TDXZGMRCnOmsFv8oPVx1NGMWP2ah
j88yzWXr9DBZp2BvRAILaVZpyjkd3IslRdvrFatZKPpDd1Czxj4cWCvIPCvF
RuaXbuYVyevjfqFe98ZXbNTskrb9QhrG/wPAJD6p
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7447#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {-22.049224286177346`, 33.31558700297106}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"6", " ", "x"}], "-", 
         RowBox[{"5", " ", 
           SuperscriptBox["x", "2"]}], "-", 
         RowBox[{"12", " ", 
           SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"5", " ", 
           SuperscriptBox["x", "4"]}], "+", 
         RowBox[{"6", " ", 
           SuperscriptBox["x", "5"]}]}], 
       RowBox[{"6", "-", 
         RowBox[{"5", " ", "x"}], "-", 
         RowBox[{"12", " ", 
           SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"5", " ", 
           SuperscriptBox["x", "3"]}], "+", 
         RowBox[{"6", " ", 
           SuperscriptBox["x", "4"]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.776789731102983*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"679c649e-461f-43b5-9b80-61c96f3860ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ArcCurvature", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "#"}], "}"}], ",", "x"}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"6", " ", "x"}], "-", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "5"]}]}], ",", 
     RowBox[{"6", "-", 
      RowBox[{"5", " ", "x"}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["x", "4"]}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767898424543257`*^9, 3.776789858646887*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"4c276cb1-1715-4e10-9dba-d63d08b5100b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"-", "5"}], "-", 
       RowBox[{"36", " ", "x"}], "+", 
       RowBox[{"30", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"60", " ", 
        SuperscriptBox["x", "3"]}]}], "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"37", "-", 
       RowBox[{"120", " ", "x"}], "-", 
       RowBox[{"332", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"960", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"1256", " ", 
        SuperscriptBox["x", "4"]}], "-", 
       RowBox[{"2040", " ", 
        SuperscriptBox["x", "5"]}], "-", 
       RowBox[{"1760", " ", 
        SuperscriptBox["x", "6"]}], "+", 
       RowBox[{"1200", " ", 
        SuperscriptBox["x", "7"]}], "+", 
       RowBox[{"900", " ", 
        SuperscriptBox["x", "8"]}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", 
   FractionBox[
    RowBox[{"6", " ", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       RowBox[{"5", " ", "x"}], "+", 
       RowBox[{"12", " ", 
        SuperscriptBox["x", "2"]}]}], "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"26", "+", 
       RowBox[{"240", " ", "x"}], "+", 
       RowBox[{"426", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"960", " ", 
        SuperscriptBox["x", "3"]}], "-", 
       RowBox[{"927", " ", 
        SuperscriptBox["x", "4"]}], "+", 
       RowBox[{"720", " ", 
        SuperscriptBox["x", "5"]}], "+", 
       RowBox[{"576", " ", 
        SuperscriptBox["x", "6"]}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.7767898590733633`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"5d4dbaf6-93fc-468b-93d8-511b9672c2c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ArcCurvature", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "#"}], "}"}], ",", "x"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"6", " ", "x"}], "-", 
        RowBox[{"5", " ", 
         SuperscriptBox["x", "2"]}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox["x", "3"]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox["x", "4"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "5"]}]}], ",", 
       RowBox[{"6", "-", 
        RowBox[{"5", " ", "x"}], "-", 
        RowBox[{"12", " ", 
         SuperscriptBox["x", "2"]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox["x", "3"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["x", "4"]}]}]}], "}"}]}], "]"}], ",", 
   RowBox[{"x", "\[Element]", 
    TemplateBox[{},
     "Reals"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776789863166038*^9, 3.7767898753525457`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"72febd73-877d-4cf8-a7b2-4518e86857cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"Abs", "[", 
      RowBox[{"5", "-", 
       RowBox[{"6", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"5", " ", "x", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"37", "+", 
       RowBox[{"4", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "18"}], "+", 
             RowBox[{"5", " ", "x", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"x", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "18"}], "+", 
                RowBox[{"5", " ", "x", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", 
                   RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}],
          ")"}]}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", 
   FractionBox[
    RowBox[{"6", " ", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"12", " ", "x"}]}], ")"}]}]}], "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"26", "+", 
       RowBox[{"3", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "8"}], "+", 
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "10"}], "+", 
          RowBox[{"3", " ", "x", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"x", " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}], 
     RowBox[{"3", "/", "2"}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.776789877969104*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"93b0e4fd-1e43-42dd-9580-0086ff79f370"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"5", "-", 
         RowBox[{"6", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"5", " ", "x", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"37", "+", 
         RowBox[{"4", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "18"}], "+", 
               RowBox[{"5", " ", "x", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"6", "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"x", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "18"}], "+", 
                  RowBox[{"5", " ", "x", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]], ",", 
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"x", " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            RowBox[{"12", " ", "x"}]}], ")"}]}]}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"26", "+", 
         RowBox[{"3", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "8"}], "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{"5", "+", 
               RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "10"}], "+", 
            RowBox[{"3", " ", "x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "8"}], "+", 
               RowBox[{"x", " ", 
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], 
       RowBox[{"3", "/", "2"}]]]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.776789887342229*^9, 3.776789902689178*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"c9e975e0-0ab4-4155-82f7-bfe1014a5082"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1: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
95SdYM/8/z/+BxqZj9g=
          "]], 
         LineBox[CompressedData["
1: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
ydNn/cMY8HKq/Tm1HfD/f/dfMNcaXQ==
          "]], 
         LineBox[CompressedData["
1:eJw9lGk01QkAxS0plJG1qKyhJomKvDnlovTKZBnZEsKRhixT8Rr0ctKGQpNK
2Y5MWSp6llCeHDuvxLO9LHnb/y22SJ6aGYcxX+bDPb8v95zfp3v1g6LcTstI
SUmdWMl/NJ1V+JWXPoZw2bguy85RxBVLMj1KxiDnQymdkoyAsriXerNzDLG2
oWOhC8OIfFJJnlRg43nyGvMdG4fgP08brUhhYzq+n23UPQCfI7ONxDM23PuG
RWqqA/DI2VWk+Y4NUpTP5lzffhgbsKzr5ThI4mr7f1/dh63vKTsGNTiov19w
VD2kFwYUTZ0ZIw72vnns6/+OCR2Gh6z+YQ7+8lryIRf1YHO0RELy5GAi7dBB
zy090Na5L3YL4SBPRxIvMO+G5vn+rms3Vvp0gRmd1IUftI8/FLdx8L3AQG+c
1ol1LXMp0iwONL621mdyO6AYeZeqLeLAqVY5x0CrA6ubmEHH1nCRzaSKbme3
YSnUdSeNzAXFz/Jjh6AZi2qzup1eXDDX529ycWjG3/XpqrwzXCjqljunlTRh
QaX7m1oSFy5yhpWnEhrx+bVT08UOLuzJxj2Dr97CSKE9Op7FRUkoWT29rR6+
3rYmCUIunlx+MPVtlA7Gwu7bN1bxYMFbtCO06vB0z0bP+7Y86F1pvsjrqoFv
KW+8opaHf+js6NC5cmQsnsypbueBUeHWbu9QDsbPA85vBnnwzyyQNGXRYD3R
Xtk4z0NA2JOL5KwyqJmUUnvM+VC9Gl+slFkCRv5Flc/FfJhOH3UsMsyH9Oxs
85caPuRM6INnF3NhjTCKpI0PBW9KxOfKbBR+8h1ZJPgwi5DXObAtE59MB1Ol
5vnQHYsN1CDuQf2Si+0qWQImnTYjYfl3cUXb/ulafQI/HLiTt9/iNmpD67yU
zQmQvO5UyBbdxOfavYpqIKAQUhc/rHUVRvJldE1nAkFxXlZUFSp8vUyitP0I
VCYSlscFF5BRmK+vE06gRWvurp3PaTAkWv368QS6FvpCPcOtIO2QccMohUB8
Kk/pRcMpWN9bR9r+aMWfIG23/cQ5RPGvT5oWE3hYnr95PysOhbuXc81rCOy8
3vlxv1Ui1JlfZKwHCDTm7rNU+XoLM0qs94dVBFBUKLFJ2/AQxn6uCY56AvQM
j5xwq8mC74tOC+ddAtAcV00dCsoFw5H+wMNJANmrVMULkY9RePNxQHCyAI2U
QKlymyIElEe8fPFIgE1faqjT4mJoj5CW5ksEaHBY06OX9wxpZr3Z1xkCGB/o
dvMxLcMR77yJrmEBmE5a8rGyNMgkhpE0JwXwmDpb3fuNBsqADKtwrRAa5IMP
rn2rgPnyB6OZTULktyzbDslWYWJbdvQ+UyH+dLEZttR6Bf9Le1Q7jgnxu1nH
95OBNThsGOw0nirE6CF/s6+xdEg5medY5Alx61Sw6zinHm8oixOxZUJwLtuo
13k2wIxxL0mxW4i4FPvpGFIjxF8DWG5sIY5WxYjrlJpQsGWncfaMEHuUGkLz
Jpugea61ecd6EbjnnJX5bS3oyfpDNVpPBMmmuMP01laktPgF0s1FkFKWZxgw
V/a2YWHp2C8ibE24/pyk0olauyan+4EiuFqOBEyRGTh/Ni3n0zkRqiqUNC3T
30H41vinyLsiRERwY+65f0C+eC6pukAEnXD25riBbvioNrCWKkRg6jySdaru
gfr+W8bkZhEyNjJbh1KZ+HDaKya9T4Qoiou+9/leJKUbtrD4K35haVB/cB/s
X8+o6s2LcDXPSi4mpB/V65JoNHUxrC4Yc9xyBvGblfvy961inNlD8aP2sfBj
gJ6znaUYbP5qvZe6QyCSp3KSHcTYu9p9W0fiMPIqayeZHmJUdRV7jC6NoDBA
KlLsJ/7/f/8FlsLGgQ==
          "]], 
         LineBox[CompressedData["
1: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
SS/Qg/28Mxs5SLj/midj0vUFGhRLF+0nk/DK9ioSL36B7lJ7rjvwk/C9X/sj
NMcSUUfCYZl74iRc8N3oYIhCInKYIkRUa5BwaKaqwFhnAop/HGWm5EPCag5s
Nn0G8ejfLdm7c7dImCtSv55NLh6tPUN5NXdImPqYKerKHo/G1WfJp+6TsF7I
zVKe8jik9PNMhVMcCRflD/celYlDrariEmklJCwrdO+hJf9TtDiYO7GZRsID
su92f+WJRTou76NPMdfqeWLm1TMRgx6yxg4FL5Jwvv6dC5taYpCkiOgDOpGM
feAR1eBeDNIzfyDXtYmMRRZPe7xli0Gxn+2vRB8kY8Xgo2K95Mdob7P4JI8P
GaveZYivQ9HI20wtVsufjBeVeb/I74hG9eNmGr6BZFxDzjjhzxWNTNkfRvx5
QMYT+gEMh1dRyA+z9rxPIGP/om/ZH75GovcVfVeDq8j49Lq4S6RTD5GA/uzm
6joy3vxX9bXUtofIup+vht5Expl1HPefTkWgmbmjfHbtZHzodofO3agIJHTw
TZ7WEBmbHblacaYvHF1o+nTGd5SM3YrKMsVeh6Nsk38rhb/IeG9573tl/3Ck
cU3KcPsMGTssfN9quTMchbChOYtZMtZ7TSDazYehzmjLl9FzZFy8Yvu4pi0M
iUje0HvPWquXW0LeMSUMXcqPnlldXevHokThglcY+h9KrmYD
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12444#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVkGkg1G0fhWcxRraULYqkkK2yJJL/j1SWVJKkEBFaJiFbKSRFkvQku5BI
kkJJkfuuiGyheCQkobL3yKxmvL2fzrdzXees8jzt4E0hkUiaZBLp/+n1OGl6
YYGOPTgzxnziMyHDU1Q3nafjvZtMr3zx+EzU7ShwDWHTcWDEn7yp6M+E+sCL
9xMzdKxfqlL7tOEzMSb+Pf/zNzr2rdtAa97XS/if2Ohc8ZaOX7P99ENCvhAR
ar3YJ5aOZQ2LO+797CfWBxxl5V2i4+XajhVDSwaIwZop3f5IOu6vEan2NB0g
tjpSM/eF0XHGr/2rtW8MELRLOsHmx+nY7ub5gTGTr0TCYISm4k463rp2uNF2
9yCRkbn6n1ZJOv5h9O6heus3onhDet5zUTp+fGoy4erPb8TLesmyPGE6vrj5
S7iS0BDRO835ECwQxqdEc+V6TYcIxW3tEspTwvg5EXu+7NEQkTlx/qpfqzCW
WUCLjTK/E1lm3VGLE4TxVHnOx4rcEaKkc2cSJ1YYz4/BNcm3I0SN7+uc75eE
sVxNeV/RyAjRd7Ok9nm4MHa4f/bEHe1RQmk0et79pDAeubneKuvlKHEncX3Y
E1thrNabLOYx8oPI+Rp3eu8iYZwbTthtDhwjPMREPkTRhHFk5rll9RljhOqm
2HVPyMI4uEj7WNrbMaIw8fKkJJeGcye6RxXlxolSs+iTLWM0bJVrTcqtHSdq
MsN9rVpoOFqqzcxQeZLoPeDnbnaDhsU6+F5SkjNE1qXJWsY1Gl66uNDzvMYM
cfgxQzkrlobpHkt95C1miCHhk/3cSBpeZj0m1hc0Q/x65utS5U/Drq2YXzww
Q7CljxwwcKDhs8bjtJrq34Rc+749mrI0PFDPhnd3ZgmFNo1/Ty6h4XV1D8x3
1M4SK1p4h0slaNjPfKsPeWCWWNWY72cgTMPbGWdUtJX/EDp49roZSwiX+amn
Hcr7Q2x9cqtl72chzCvYTc2tmCO2l/o6JncJ4dvP0+el/p0jrEtM+7o7hPB0
bm5ZPXeO2FX0fdylSQiv7/S/N7+VSTjnGoj5VAthh+GjTmXdTOJ00kebc9lC
uNBR2AiLsYnAxPsdNelCuLNjbGmlAZsISgg/uHBbCFPmByo4LmziXNzq4zGJ
QvhagBif8YhNXIk6E5cYKYSthvboyDtyiCx/6Ya7R4SwbfzlueVlXKLRft+2
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
/wEVLV7a
          "]], 
         LineBox[CompressedData["
1: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
ZYmH1XrQWYEtlxI5DFSe/P0RKj3//yf/BxTXnqU=
          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1: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
90Y1Ik2Yw6v4xa0tMsLZB31B7E3Y/wG+qvnF
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12444#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3, 3}, {0., 0.4497808939559522}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"2", " ", 
          TemplateBox[{
            RowBox[{"5", "-", 
              RowBox[{"6", " ", "x", " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"5", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}]}]}, 
           "Abs"]}], 
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"37", "+", 
             RowBox[{"4", " ", "x", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "5"}], "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "18"}], "+", 
                    RowBox[{"5", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                 RowBox[{"6", "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "18"}], "+", 
                    RowBox[{"5", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], 
       FractionBox[
        RowBox[{"6", " ", 
          TemplateBox[{
            RowBox[{
              RowBox[{"-", "4"}], "+", 
              RowBox[{"x", " ", 
                RowBox[{"(", 
                  RowBox[{"5", "+", 
                    RowBox[{"12", " ", "x"}]}], ")"}]}]}]}, "Abs"]}], 
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"26", "+", 
             RowBox[{"3", " ", "x", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "8"}], "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "10"}], "+", 
                   RowBox[{"3", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "8"}], "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7767899030791893`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"ef23d6cd-cb07-4f95-a9c9-92da935ddc3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"5", "-", 
         RowBox[{"6", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"5", " ", "x", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"37", "+", 
         RowBox[{"4", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "18"}], "+", 
               RowBox[{"5", " ", "x", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"6", "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"x", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "18"}], "+", 
                  RowBox[{"5", " ", "x", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]], ",", 
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"x", " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            RowBox[{"12", " ", "x"}]}], ")"}]}]}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"26", "+", 
         RowBox[{"3", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "8"}], "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{"5", "+", 
               RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "10"}], "+", 
            RowBox[{"3", " ", "x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "8"}], "+", 
               RowBox[{"x", " ", 
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], 
       RowBox[{"3", "/", "2"}]]]}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776789908072425*^9, 3.7767899101361723`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"7649e59e-67e3-4dda-9744-f25f8810f159"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
h/MRPMc2ISrlx38WDBSkKPWLKdh2E8x6v7IsZpGRt6U/7Wn/TSi5T/fnJWkW
0eT/obKVb8LXXIlKLysSMg/QPaxduwmkueMyZCYSStfP9/Bt2IStazZXbD5P
I/2+sJmR3k344U9qGN07jSJZVYkVG9v82s1/k9cmEd+lJ3/dYAuWvNKq6bqI
yEmRViDTYAuuWTcNrDwhopK1aza9J7a29++O2HxLIjrzSLfD8PwWsF1zLrXs
GkcplfNNe4O3IDheJU1jeAzJCJhXt1VvAfFCirOX4Ci6NVpBw/prC7rOFWbb
jY6gpnxpwG1bwEc68uLf+xHkbkBbnju8te3To7M+6Y+gM+p/erQJNFjoplH6
pYBhlOIU1i64jwafuNLzSWVrEDEHOP/aJ0mD3yweCP/bOojcY45Vy8jQ4M0i
mva1zEEERWz5GodpsNvz+IGsk4OonxAXeUaHBksu6xOisv8hoeRE7RcXaXAE
5ou/868fhRT4qaU70eDDEoLTY0/60XTtacUcFxqsM93wmd+4H5VNCQmXedLg
hyvveTo+96HTaqkrPfdocOdaGdE1tRcltmfnC2TQ4Of7P1UefNiDaIgRb8Sy
aPAp4ou1o+Y9yHnNJflA7jb+3J+QuV09SFVMPkr9Iw2WUziYa/ysG3W6FTqd
rqXBzHJXZ2Jz/iAetjLh5yM0+JWkuWnZdCeK02qI2iNOi/kFVDV4OtuQ/pf0
w71StDgg4g7uyGlD6+oBPcmytFhal6dwLbgNOSsdkNqvRIuXprOSbyq0ISwZ
XiOvQ4s13h/JWYlpRWR23VUdB1rMQ9jx/ca5FpT5QDCV8RIt/slj0LFTowXZ
Mc4b/HSmxWCnWcq4uwX92Ep9YupOi7+IRgbO/G5GKXNbirZBtLjXomH4pV4z
OvGnzMn1JS0e7mRjCwtqQvSWjzkPptJiMfOY6U+4CX1uuVo0n0GLJQVm7/kS
mpDErz10frm0eE7p1MLbsEa0WeGTfK+MFv82jCjMSGxAeemHOxK7aTGx3/dQ
cVs94nTL0a7hJWDTTNoen9ff0aW0pzu69hCwpzvbidM3vqPyjnv9k/8RsGaW
7n+l8B1d0bTz55Yg4IF0n9Cxv99QLQtHoYMKAfMar77q3fMN+We47qWxJmBn
83u8+3JqUUvX6dldZwhYZaLOQzmoFkmxGVRIniPgrpimjvxTtajDQ8T2hBMB
C8Sv2/Zv1CBFaI5L9iFg6q720EWrGjTWfZDmaCIB27/yo1UVrEZHOYSbTiYR
cLZFR5j9QhWKx6xJjikEHP7yN1Pf7yqk9WZINSqLgKMp7BbDoVUo6eZjt78l
BFzCN2hEXfiKzLkW+v26CTj0COlxa30l+qJbUvFJgA4v7Lh+5fhyGbo4+Fwj
VJgOq38Hz2s1ZYj5dmDpKTE6HEr807QRU4bMi7WLyNJ0WKjI3ua6ZBkak27M
PaBGh3kp5pYX7T8jTq6hF8nWdPhHhNmN5t4S9CGnds/1M3T49/FLg0F5JcjG
8M1TjXN0+MBXP4i7U4LSgq89/nOZDkfH+eo2i5cgFepiBLc3HR6s7zUrulmM
znaz+d+Pp8OODfwPbfd9QnTeM0sWiXS4TuzbQuFqEcribvHal0SHr7iXHTzf
WoTmjid4fE2nw4JkF8UPd4vQ/S+iV1YL6XCeTFSJxPjH7ftXtnFtocO6qMnx
9ZcPaOP6ORUrTnoc6DvTeym9AF04QorcyU2PH8YIvgkNKUDfCAGDDbz0+PUO
aeGhSwUo5mlClM5/9PhohwzhhHQBEq5qHFKU3c7PqvKYLMxHiEczls2IHjsw
7Cm4mfoepfX/HPlmQo/p+YLJrVffI8Zsa/W7ZvTYYoTI90LpPWo66jm6bEOP
BXieRVz6mYfOOr3VGHOix9nK9a/ql96hoM/8xK+h9NhpXbKU3ykXjYRkHr31
gB7TRCyt5qnkIsMTSo9Vo+kx2+fu9lTGXLRj5ATKi6fHu30H4PmbHJTCERb/
Ip0eB1t2D3wlvUVfzy9g7yp67MORa6UdkY1omVqfyWzQ4/fPu0tPbWUixvCb
fEdoGXD0q8CJkY5MxMqy+7EuAwPe/Umo+Wdu5rZ+2EXZczBgewpbR+SZTCTF
NXY79j8GLPtC93Vv+Wtkunv14vxRBlyrKX6cLyYDnUpM+relxYB1hPs+x1zJ
QDZ7wJ5dnwHf+mlKPaGXgS4IhliJmzLgQxdZtd9upCMvEc5j1mcZcNBue453
HukoSVJMvuw2A85NHLK8fDkNpWbVvv1+lwGrBvEc2KefhjKlnSTb7zNgtYYE
JxGJNPReJleUFMOA4+lyF9vGUlG1gsoukVcM+JNp0xNhl1Q0oWq0fLeSAd9n
LXX/fjsFqRjeqDaiYcTudLVH9iW/RA8Osc3upGfE3Tc8F6ZdX6JeoQzBbiZG
vLm3nJENv0R3KR03nbgYccjYoSit4STU9FxNMkSYEef3mSnfl0tCTiSaqApN
RhyWqco93PwcJT6KtVT0Y8TqTrT2XaaJaOqW1N2lW4yYOcaoilY6EW2bobwv
dxgx5dGioCtdIhrRmGcyCWfEBvd9illLnyLFUavPV54y4sL3A516kk/RT1Vh
kfQiRizFFxJty5WAVntzibxzjLhHqu7AH9Z4pHvtR5zJ4nY/Tyy9O4iPUfTa
8JHQVUb83ujO+V3fHyNRAcEHVAIT9oOHFNOQx8jA+oF02y4mLLB60uMT7WMU
33LpapwyE1YI1RPqZHqE5L8JT7P6MWHVuwvC7CgO+Vqqx2sHMuFVJbZWmX1x
qGrEUtM/mAl/YXp9PJA5DlnQRUdNPGDCRKOgBac3sSgAr8n+eM6EAwv/Ztf/
iUE/PnddDy1nwifZn15kNIlG3EbzvBVfmTDvpOpbsf+ikV035xdqLRPO/Eof
nkCKQrNLepyOjUz4yO0m3buxUYhP+WOedj8Ttjx6/bNVVyQ6X/vbyn+ICbsV
lmQKvY1E2aemNgvGmLB8aecPpcBIpHlD7MTeWSbstNK3x3Z/JLpPi5Zs5pmw
wVsaguNyBGqOs30Vt8SEP2w6PPrSEIEERL0Mfqxt98siIuOcGoH+/z8BTLQp
kjvvHYH+B2VuNis=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12849#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fae/6JcL1WL//x8W4WwDfiBiLfY/KLortQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12849#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1.9716028174893723`*^-7}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3, 3}, {1.9716028174893723`*^-7, 78.96837554683417}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"2", " ", 
          TemplateBox[{
            RowBox[{"5", "-", 
              RowBox[{"6", " ", "x", " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"5", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}]}]}, 
           "Abs"]}], 
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"37", "+", 
             RowBox[{"4", " ", "x", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "5"}], "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "18"}], "+", 
                    RowBox[{"5", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                 RowBox[{"6", "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "18"}], "+", 
                    RowBox[{"5", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], 
       FractionBox[
        RowBox[{"6", " ", 
          TemplateBox[{
            RowBox[{
              RowBox[{"-", "4"}], "+", 
              RowBox[{"x", " ", 
                RowBox[{"(", 
                  RowBox[{"5", "+", 
                    RowBox[{"12", " ", "x"}]}], ")"}]}]}]}, "Abs"]}], 
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"26", "+", 
             RowBox[{"3", " ", "x", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "8"}], "+", 
                   RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "10"}], "+", 
                   RowBox[{"3", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "8"}], "+", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"5", "+", 
                    RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.776789910592473*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"94bd7334-8052-4351-a163-e9c57db3cb01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"Abs", "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}], 
  RowBox[{"f", "[", "x", "]"}]]], "Input",
 CellChangeTimes->{{3.7767899566703997`*^9, 3.776789965413947*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"996ebb13-0459-4b8f-9e46-fbc351612836"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Abs", "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}], 
  RowBox[{"f", "[", "x", "]"}]]], "Output",
 CellChangeTimes->{3.776789978543572*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"6ae84b49-2cc2-4f44-ac71-5e86515df546"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{"Abs", "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}], 
   RowBox[{"f", "[", "x", "]"}]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[16]:=",ExpressionUUID->"11be7584-01c9-4cf7-b22b-623c22906dc4"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"Sign", "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}]]], "Output",
 CellChangeTimes->{3.776789980060958*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"231e210b-e022-4a90-af2e-b4601f11eca4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"5", "-", 
           RowBox[{"6", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"5", " ", "x", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"37", "+", 
           RowBox[{"4", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "18"}], "+", 
                 RowBox[{"5", " ", "x", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{"6", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "18"}], "+", 
                    RowBox[{"5", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], ",", 
       FractionBox[
        RowBox[{"6", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"12", " ", "x"}]}], ")"}]}]}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"26", "+", 
           RowBox[{"3", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"5", "+", 
                 RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "10"}], "+", 
              RowBox[{"3", " ", "x", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "8"}], "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{"5", "+", 
                    RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"a", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77679004348625*^9, 3.776790059080845*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"9e6b98c3-d614-484e-b574-7fc9aaa5bd81"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.77679012478662*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"f152fce2-3285-4abd-9b03-0603ddc97729"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"5", "-", 
           RowBox[{"6", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"5", " ", "x", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"37", "+", 
           RowBox[{"4", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "18"}], "+", 
                 RowBox[{"5", " ", "x", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{"6", "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "18"}], "+", 
                    RowBox[{"5", " ", "x", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], ",", 
       FractionBox[
        RowBox[{"6", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"12", " ", "x"}]}], ")"}]}]}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"26", "+", 
           RowBox[{"3", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{"5", "+", 
                 RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "10"}], "+", 
              RowBox[{"3", " ", "x", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "8"}], "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{"5", "+", 
                    RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"a", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.776790131393814*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"e47d751e-0879-4f08-bf57-48e19c49c1ab"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","nlim",
   "\"\\!\\(\\*RowBox[{\\\"x\\\"}]\\) = \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\" \\\", \\\"a\\\"}]\\) is not a valid limit of integration.\
\"",2,18,1,25127895243077440173,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776790131606324*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"b358cdfe-dc20-4674-97a4-9c1a2686a483"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","nlim",
   "\"\\!\\(\\*RowBox[{\\\"x\\\"}]\\) = \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\" \\\", \\\"a\\\"}]\\) is not a valid limit of integration.\
\"",2,18,2,25127895243077440173,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776790131647751*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"726e0d33-c4ec-4712-87a1-312b832465ce"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","nlim",
   "\"\\!\\(\\*RowBox[{\\\"x\\\"}]\\) = \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\" \\\", \\\"a\\\"}]\\) is not a valid limit of integration.\
\"",2,18,3,25127895243077440173,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776790131654066*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"e976398e-f193-45ef-88dc-6aefe9f5dd87"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"nlim\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,18,4,25127895243077440173,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776790131660171*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"23420351-e20e-496b-b648-6c660c70a63c"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7767901343676443`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"fc2af816-2e58-42cb-b1f0-fe7a2e6effe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"x", " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            RowBox[{"12", " ", "x"}]}], ")"}]}]}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"26", "+", 
         RowBox[{"3", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "8"}], "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{"5", "+", 
               RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "10"}], "+", 
            RowBox[{"3", " ", "x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "8"}], "+", 
               RowBox[{"x", " ", 
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], 
       RowBox[{"3", "/", "2"}]]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"a", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776790139201668*^9, 3.776790141095838*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"12f15609-bf79-46b7-aa5b-07a9b50480ad"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","nlim",
   "\"\\!\\(\\*RowBox[{\\\"x\\\"}]\\) = \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\" \\\", \\\"a\\\"}]\\) is not a valid limit of integration.\
\"",2,19,5,25127895243077440173,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7767901420527487`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"801d6605-9aed-4021-895a-5c0e292ea136"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","nlim",
   "\"\\!\\(\\*RowBox[{\\\"x\\\"}]\\) = \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1.`\\\"}], \\\" \\\", \\\"a\\\"}]\\) is not a valid limit of integration.\
\"",2,19,6,25127895243077440173,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7767901420648746`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"71c5ffdc-6a47-4452-a318-46651e0a38e6"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.776790144159678*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"d48b1710-c996-450d-b185-b1d63f4481dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"x", " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            RowBox[{"12", " ", "x"}]}], ")"}]}]}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"26", "+", 
         RowBox[{"3", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "8"}], "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{"5", "+", 
               RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "10"}], "+", 
            RowBox[{"3", " ", "x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "8"}], "+", 
               RowBox[{"x", " ", 
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], 
       RowBox[{"3", "/", "2"}]]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767901477844057`*^9, 3.7767901481738997`*^9}, {
  3.776790218504278*^9, 3.7767902307120934`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"21061174-e783-4108-945e-25b9dee8637d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1000., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 1000}}, Typeset`size$$ = {65., {0., 12.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$46538$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$46538$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      NIntegrate[
       6 Abs[-4 + $CellContext`x (5 + 12 $CellContext`x)]/(26 + 
         3 $CellContext`x (-8 + $CellContext`x (5 + 8 $CellContext`x)) (-10 + 
           3 $CellContext`x (-8 + $CellContext`x (5 + 8 $CellContext`x))))^(3/
         2), {$CellContext`x, -$CellContext`a$$, $CellContext`a$$}], 
      "Specifications" :> {{$CellContext`a$$, 0, 1000}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{323., {62., 70.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776790231294758*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"b09941e2-eb67-4ac1-8880-68c6ae864f90"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"1.291530511912676038033254144465900026261806488037109375`65.954589770191\\\
\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.988381759867705`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.017661539303405912`\\\"}]\\) for the integral and \
error estimates.\"",2,21,31,25127895243077440173,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.776790237580652*^9},
 CellLabel->"",ExpressionUUID->"b25d9bea-4694-4cc7-b870-20a412599f8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"x", " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            RowBox[{"12", " ", "x"}]}], ")"}]}]}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"26", "+", 
         RowBox[{"3", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "8"}], "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{"5", "+", 
               RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "10"}], "+", 
            RowBox[{"3", " ", "x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "8"}], "+", 
               RowBox[{"x", " ", 
                RowBox[{"(", 
                 RowBox[{"5", "+", 
                  RowBox[{"8", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], 
       RowBox[{"3", "/", "2"}]]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "10000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.776790243016224*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"a8eba3c6-5e30-4979-8654-da2d6bfec566"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 10000., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10000}}, Typeset`size$$ = {65., {0., 12.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$50832$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$50832$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      NIntegrate[
       6 Abs[-4 + $CellContext`x (5 + 12 $CellContext`x)]/(26 + 
         3 $CellContext`x (-8 + $CellContext`x (5 + 8 $CellContext`x)) (-10 + 
           3 $CellContext`x (-8 + $CellContext`x (5 + 8 $CellContext`x))))^(3/
         2), {$CellContext`x, -$CellContext`a$$, $CellContext`a$$}], 
      "Specifications" :> {{$CellContext`a$$, 0, 10000}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{323., {62., 70.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776790243256999*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"3b52e2a2-60e3-4f36-b473-03cab56ac0e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{"5", "-", 
     RowBox[{"6", " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"5", " ", "x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"37", "+", 
     RowBox[{"4", " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "18"}], "+", 
           RowBox[{"5", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "18"}], "+", 
              RowBox[{"5", " ", "x", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"518dddaf-b364-4569-b034-31992cfaec67"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{"5", "-", 
     RowBox[{"6", " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"5", " ", "x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"37", "+", 
     RowBox[{"4", " ", "x", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "18"}], "+", 
           RowBox[{"5", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "18"}], "+", 
              RowBox[{"5", " ", "x", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}]}], ")"}], 
   RowBox[{"3", "/", "2"}]]]], "Output",
 CellChangeTimes->{3.776790262290704*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"41599862-2da9-42ac-867e-d1f68523751b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"5", "-", 
         RowBox[{"6", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"5", " ", "x", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "x"}]}], ")"}]}]}], ")"}]}]}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"37", "+", 
         RowBox[{"4", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "18"}], "+", 
               RowBox[{"5", " ", "x", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"6", "+", 
            RowBox[{"x", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"x", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "18"}], "+", 
                  RowBox[{"5", " ", "x", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"3", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "10000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.776790269469743*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"a4081933-51d7-47ee-a9ee-707d7894c53a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 10000., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10000}}, Typeset`size$$ = {76., {0., 12.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$55130$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$55130$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      NIntegrate[
       2 Abs[5 - 6 $CellContext`x (-6 + 
           5 $CellContext`x (1 + 2 $CellContext`x))]/(37 + 
         4 $CellContext`x (-5 + $CellContext`x (-18 + 
             5 $CellContext`x (2 + 3 $CellContext`x))) (
           6 + $CellContext`x (-5 + $CellContext`x (-18 + 
               5 $CellContext`x (2 + 3 $CellContext`x)))))^(3/
         2), {$CellContext`x, -$CellContext`a$$, $CellContext`a$$}], 
      "Specifications" :> {{$CellContext`a$$, 0, 10000}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{323., {62., 70.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776790274104371*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"e7b9ea58-43d6-4cf9-919f-0e44bae2a794"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"ArcCurvature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["x", "3"], "-", "x"}], 
        SuperscriptBox["x", "a"]]}], "}"}], ",", "x"}], "]"}], ",", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     TemplateBox[{},
      "Reals"]}], "\[And]", 
    RowBox[{"a", "\[Element]", 
     TemplateBox[{},
      "PositiveIntegers"]}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.776791610561042*^9, {3.776791657184906*^9, 3.776791691530246*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"2f675e22-65ad-46ca-ac9e-07c987a15c26"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"4", " ", "a"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
        SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{"2", " ", "a"}]], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "a", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], 
    "3"]]]], "Output",
 CellChangeTimes->{3.776791693168949*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"52c80057-d9ac-494a-b494-e2d11de000b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{
        SuperscriptBox["x", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"4", " ", "a"}]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776791700120927*^9, 3.776791746955182*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"2abd5c35-4a15-40c2-bd11-1e830f24547e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10}}, Typeset`size$$ = {468., {144., 152.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$58720$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$58720$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sqrt[$CellContext`x^(-2 + 
           4 $CellContext`a$$) ((-1 + $CellContext`a$$) $CellContext`a$$ - \
(-3 + $CellContext`a$$) (-2 + $CellContext`a$$) \
$CellContext`x^2)^2/($CellContext`x^(2 $CellContext`a$$) + (
            1 - $CellContext`a$$ + (-3 + $CellContext`a$$) \
$CellContext`x^2)^2)^3], {$CellContext`x, -2, 2}, PlotLegends -> 
        "Expressions", PlotRange -> Full], 
      "Specifications" :> {{$CellContext`a$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{527., {198., 206.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776791748289301*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"dbf3b25b-248c-4f9b-86b6-be5a37b5dda2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"ArcCurvature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        SuperscriptBox["x", "a"], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", "x"}], ")"}]}]}], "}"}], ",", "x"}], 
    "]"}], ",", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     TemplateBox[{},
      "Reals"]}], "\[And]", 
    RowBox[{"a", "\[Element]", 
     TemplateBox[{},
      "PositiveIntegers"]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77679175850626*^9, 3.77679176418635*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"96b01aee-b255-45b9-ba43-f39147fa72b8"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", "a"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", "a"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "a"}], ")"}], " ", 
        SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "a"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", "a"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}]}], ")"}], 
    "3"]]]], "Output",
 CellChangeTimes->{3.7767917666592913`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"51272d07-d685-42bd-bde3-ee1420c7444a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"4", " ", "a"}]}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", 
             RowBox[{"2", " ", "a"}]], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "a", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
                SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], 
       ",", 
       SqrtBox[
        FractionBox[
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"2", " ", "b"}]}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "b"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "+", "b"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", "b"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["x", 
              RowBox[{"2", " ", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "b", "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"3", "+", "b"}], ")"}], " ", 
                 SuperscriptBox["x", "2"]}]}], ")"}], "2"]}]}], ")"}], 
          "3"]]]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776791779963564*^9, 3.776791787868287*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"fb11e835-e20e-4603-8d37-0f60a9eabd07"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.52, $CellContext`b$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10}, {
      Hold[$CellContext`b$$], 0, 10}}, Typeset`size$$ = {1625., {303., 309.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$62000$$ = 0, $CellContext`b$62001$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`b$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$62000$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$62001$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Sqrt[$CellContext`x^(-2 + 
            4 $CellContext`a$$) ((-1 + $CellContext`a$$) $CellContext`a$$ - \
(-3 + $CellContext`a$$) (-2 + $CellContext`a$$) \
$CellContext`x^2)^2/($CellContext`x^(2 $CellContext`a$$) + (
             1 - $CellContext`a$$ + (-3 + $CellContext`a$$) \
$CellContext`x^2)^2)^3], 
         Sqrt[$CellContext`x^(-2 + 
            2 $CellContext`b$$) ($CellContext`b$$ (1 + $CellContext`b$$) - (
             2 + $CellContext`b$$) (
             3 + $CellContext`b$$) $CellContext`x^2)^2/(
           1 + $CellContext`x^(2 $CellContext`b$$) (
              1 + $CellContext`b$$ - (
               3 + $CellContext`b$$) $CellContext`x^2)^2)^3]}, \
{$CellContext`x, -2, 2}, PlotLegends -> "Expressions", PlotRange -> Full], 
      "Specifications" :> {{$CellContext`a$$, 0, 10}, {$CellContext`b$$, 0, 
         10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1684., {368., 376.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776791788782987*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"191e9ee5-d22c-418c-9a8f-cd4db6869316"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"ArcCurvature", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        SuperscriptBox["x", "b"], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "3"], "-", "x"}], ")"}]}]}], "}"}], ",", "x"}], 
    "]"}], ",", 
   RowBox[{
    RowBox[{"x", "\[Element]", 
     TemplateBox[{},
      "Reals"]}], "\[And]", 
    RowBox[{"a", "\[Element]", 
     TemplateBox[{},
      "PositiveIntegers"]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.776791775617364*^9, 3.7767917757127666`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9e7f2aae-79e7-45a6-908b-990fa25f0a27"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", "b"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "b"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", "b"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "b"}], ")"}], " ", 
        SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"2", " ", "b"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "b", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", "b"}], ")"}], " ", 
           SuperscriptBox["x", "2"]}]}], ")"}], "2"]}]}], ")"}], 
    "3"]]]], "Output",
 CellChangeTimes->{3.7767917769262543`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"8e42954a-b697-4e8a-86b2-4b57a0d4e880"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"4", " ", "a"}]}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", 
             RowBox[{"2", " ", "a"}]], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "a", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
                SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], 
       ",", 
       SqrtBox[
        FractionBox[
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"2", " ", "b"}]}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "b"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "+", "b"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", "b"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["x", 
              RowBox[{"2", " ", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "b", "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"3", "+", "b"}], ")"}], " ", 
                 SuperscriptBox["x", "2"]}]}], ")"}], "2"]}]}], ")"}], 
          "3"]]]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767918059481697`*^9, 3.7767918136129293`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"03ad86ea-9b27-49ed-9ec8-cba75ca7ab20"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0., $CellContext`b$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10}, {
      Hold[$CellContext`b$$], 0, 10}}, Typeset`size$$ = {1385., {242., 250.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$63626$$ = 0, $CellContext`b$63627$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`b$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$63626$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$63627$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Sqrt[$CellContext`x^(-2 + 
            4 $CellContext`a$$) ((-1 + $CellContext`a$$) $CellContext`a$$ - \
(-3 + $CellContext`a$$) (-2 + $CellContext`a$$) \
$CellContext`x^2)^2/($CellContext`x^(2 $CellContext`a$$) + (
             1 - $CellContext`a$$ + (-3 + $CellContext`a$$) \
$CellContext`x^2)^2)^3], 
         Sqrt[$CellContext`x^(-2 + 
            2 $CellContext`b$$) ($CellContext`b$$ (1 + $CellContext`b$$) - (
             2 + $CellContext`b$$) (
             3 + $CellContext`b$$) $CellContext`x^2)^2/(
           1 + $CellContext`x^(2 $CellContext`b$$) (
              1 + $CellContext`b$$ - (
               3 + $CellContext`b$$) $CellContext`x^2)^2)^3]}, \
{$CellContext`x, -2, 2}, PlotLegends -> "Expressions", PlotRange -> {0, 10}, 
        ImageSize -> Large], 
      "Specifications" :> {{$CellContext`a$$, 0, 10}, {$CellContext`b$$, 0, 
         10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1444., {308., 316.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776791814198649*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"8d145373-abc7-4119-8265-6059731fd00b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"4", " ", "a"}]}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", 
             RowBox[{"2", " ", "a"}]], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "a", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
                SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], 
       ",", 
       SqrtBox[
        FractionBox[
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"2", " ", "b"}]}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "b"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "+", "b"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", "b"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["x", 
              RowBox[{"2", " ", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "b", "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"3", "+", "b"}], ")"}], " ", 
                 SuperscriptBox["x", "2"]}]}], ")"}], "2"]}]}], ")"}], 
          "3"]]]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "10", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767918251726418`*^9, 3.776791826532545*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c5571ac6-9845-4f06-8318-f9f57f154716"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 10, $CellContext`b$$ = 5, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10, 1}, {
      Hold[$CellContext`b$$], 0, 10, 1}}, Typeset`size$$ = {
    1385., {242., 250.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$65121$$ = 
    0, $CellContext`b$65122$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`b$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$65121$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$65122$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Sqrt[$CellContext`x^(-2 + 
            4 $CellContext`a$$) ((-1 + $CellContext`a$$) $CellContext`a$$ - \
(-3 + $CellContext`a$$) (-2 + $CellContext`a$$) \
$CellContext`x^2)^2/($CellContext`x^(2 $CellContext`a$$) + (
             1 - $CellContext`a$$ + (-3 + $CellContext`a$$) \
$CellContext`x^2)^2)^3], 
         Sqrt[$CellContext`x^(-2 + 
            2 $CellContext`b$$) ($CellContext`b$$ (1 + $CellContext`b$$) - (
             2 + $CellContext`b$$) (
             3 + $CellContext`b$$) $CellContext`x^2)^2/(
           1 + $CellContext`x^(2 $CellContext`b$$) (
              1 + $CellContext`b$$ - (
               3 + $CellContext`b$$) $CellContext`x^2)^2)^3]}, \
{$CellContext`x, -2, 2}, PlotLegends -> "Expressions", PlotRange -> {0, 10}, 
        ImageSize -> Large], 
      "Specifications" :> {{$CellContext`a$$, 0, 10, 1}, {$CellContext`b$$, 0,
          10, 1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1444., {308., 316.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776791826807006*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"786fc75d-2f49-4cc6-9754-9122d90a47fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        FractionBox[
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"4", " ", "a"}]}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "a"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", 
             RowBox[{"2", " ", "a"}]], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "a", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
                SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], ")"}], "3"]]], 
       ",", 
       SqrtBox[
        FractionBox[
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"2", " ", "b"}]}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "b"}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "+", "b"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", "b"}], ")"}], " ", 
              SuperscriptBox["x", "2"]}]}], ")"}], "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["x", 
              RowBox[{"2", " ", "b"}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "b", "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"3", "+", "b"}], ")"}], " ", 
                 SuperscriptBox["x", "2"]}]}], ")"}], "2"]}]}], ")"}], 
          "3"]]]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"f", "[", "x", "]"}], "x"], ",", 
        RowBox[{"x", " ", 
         RowBox[{"f", "[", "x", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "10", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7767918813890038`*^9, 3.776791894884984*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"1747327f-f880-438c-b971-e92b1c0e996b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 7, $CellContext`b$$ = 4, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 10, 1}, {
      Hold[$CellContext`b$$], 0, 10, 1}}, Typeset`size$$ = {
    855., {242., 250.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$70451$$ = 
    0, $CellContext`b$70452$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`b$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$70451$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$70452$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Sqrt[$CellContext`x^(-2 + 
            4 $CellContext`a$$) ((-1 + $CellContext`a$$) $CellContext`a$$ - \
(-3 + $CellContext`a$$) (-2 + $CellContext`a$$) \
$CellContext`x^2)^2/($CellContext`x^(2 $CellContext`a$$) + (
             1 - $CellContext`a$$ + (-3 + $CellContext`a$$) \
$CellContext`x^2)^2)^3], 
         Sqrt[$CellContext`x^(-2 + 
            2 $CellContext`b$$) ($CellContext`b$$ (1 + $CellContext`b$$) - (
             2 + $CellContext`b$$) (
             3 + $CellContext`b$$) $CellContext`x^2)^2/(
           1 + $CellContext`x^(2 $CellContext`b$$) (
              1 + $CellContext`b$$ - (
               3 + $CellContext`b$$) $CellContext`x^2)^2)^3]}, \
{$CellContext`x, -2, 2}, 
        PlotLegends -> {$CellContext`f[$CellContext`x]/$CellContext`x, \
$CellContext`x $CellContext`f[$CellContext`x]}, PlotRange -> {0, 10}, 
        ImageSize -> Large], 
      "Specifications" :> {{$CellContext`a$$, 0, 10, 1}, {$CellContext`b$$, 0,
          10, 1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{914., {308., 316.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.776791895240531*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"82973ec1-2f11-4b82-bf0a-c86950a6dc9b"]
}, Open  ]]
},
WindowSize->{1920, 1027},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.3 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 210, 3, 40, "Input",ExpressionUUID->"0867e798-05d9-4055-a28b-b169f5e3d9ca"],
Cell[793, 27, 1281, 27, 430, "Output",ExpressionUUID->"fe866908-1737-4c8c-985f-ef4373960d5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2111, 59, 467, 13, 42, "Input",ExpressionUUID->"4922a9f8-e92a-4226-a65c-5f959f127e04"],
Cell[2581, 74, 418, 12, 48, "Output",ExpressionUUID->"666de6ab-fdb6-4e7d-ae56-2b4c358c5fb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3036, 91, 551, 17, 50, "Input",ExpressionUUID->"8fafb25e-1045-4f6d-b220-9325656352e5"],
Cell[3590, 110, 17760, 310, 319, "Output",ExpressionUUID->"ed449648-1067-4565-87ae-d254bfa1b267"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21387, 425, 469, 13, 70, "Input",ExpressionUUID->"5eb2d4b8-9b4c-45e0-9752-ff854fe95e87"],
Cell[21859, 440, 446, 13, 70, "Output",ExpressionUUID->"38a0cc43-ae68-46e0-8168-bf05053889ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22342, 458, 469, 14, 70, "Input",ExpressionUUID->"8d2fe643-6928-4ae7-9b23-45545cac033e"],
Cell[22814, 474, 368, 10, 46, "Output",ExpressionUUID->"6860a843-dd67-473d-a02a-048692d11091"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23219, 489, 499, 15, 44, "Input",ExpressionUUID->"5025d6fa-386a-4d47-b012-369869de2a49"],
Cell[23721, 506, 15584, 275, 319, "Output",ExpressionUUID->"d8463c3d-33d2-4281-90c5-18afa9531a3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39342, 786, 542, 15, 44, "Input",ExpressionUUID->"28eeca14-5181-4fa3-bd5d-69181ea6bd82"],
Cell[39887, 803, 14531, 258, 313, "Output",ExpressionUUID->"d95ea480-74a7-4db2-be41-93d22af594b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54455, 1066, 915, 27, 44, "Input",ExpressionUUID->"5df77578-5117-4007-80dc-7b2b7947786c"],
Cell[55373, 1095, 29303, 502, 684, "Output",ExpressionUUID->"a7c67272-c480-4ce0-997b-0d3724840fea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84713, 1602, 984, 29, 44, "Input",ExpressionUUID->"7ef05573-dd7c-42aa-94f3-4dd8ed45c268"],
Cell[85700, 1633, 40230, 728, 706, "Output",ExpressionUUID->"cbc22fa4-d567-448e-a6ba-dd283ecf5656"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125967, 2366, 919, 28, 44, "Input",ExpressionUUID->"76571320-b0cb-429a-aed4-81616dce6158"],
Cell[126889, 2396, 40229, 728, 655, "Output",ExpressionUUID->"679c649e-461f-43b5-9b80-61c96f3860ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167155, 3129, 976, 29, 44, "Input",ExpressionUUID->"4c276cb1-1715-4e10-9dba-d63d08b5100b"],
Cell[168134, 3160, 1836, 56, 81, "Output",ExpressionUUID->"5d4dbaf6-93fc-468b-93d8-511b9672c2c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170007, 3221, 1155, 34, 44, "Input",ExpressionUUID->"72febd73-877d-4cf8-a7b2-4518e86857cd"],
Cell[171165, 3257, 2565, 80, 71, "Output",ExpressionUUID->"93b0e4fd-1e43-42dd-9580-0086ff79f370"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173767, 3342, 3019, 87, 186, "Input",ExpressionUUID->"c9e975e0-0ab4-4155-82f7-bfe1014a5082"],
Cell[176789, 3431, 62246, 1122, 321, "Output",ExpressionUUID->"ef23d6cd-cb07-4f95-a9c9-92da935ddc3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239072, 4558, 3069, 87, 186, "Input",ExpressionUUID->"7649e59e-67e3-4dda-9744-f25f8810f159"],
Cell[242144, 4647, 76673, 1347, 819, "Output",ExpressionUUID->"94bd7334-8052-4351-a163-e9c57db3cb01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318854, 5999, 281, 6, 69, "Input",ExpressionUUID->"996ebb13-0459-4b8f-9e46-fbc351612836"],
Cell[319138, 6007, 256, 6, 70, "Output",ExpressionUUID->"6ae84b49-2cc2-4f44-ac71-5e86515df546"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319431, 6018, 276, 7, 69, "Input",ExpressionUUID->"11be7584-01c9-4cf7-b22b-623c22906dc4"],
Cell[319710, 6027, 229, 5, 69, "Output",ExpressionUUID->"231e210b-e022-4a90-af2e-b4601f11eca4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319976, 6037, 3204, 90, 157, "Input",ExpressionUUID->"9e6b98c3-d614-484e-b574-7fc9aaa5bd81"],
Cell[323183, 6129, 155, 2, 46, "Output",ExpressionUUID->"f152fce2-3285-4abd-9b03-0603ddc97729"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323375, 6136, 3182, 90, 157, "Input",ExpressionUUID->"e47d751e-0879-4f08-bf57-48e19c49c1ab"],
Cell[326560, 6228, 438, 10, 29, "Message",ExpressionUUID->"b358cdfe-dc20-4674-97a4-9c1a2686a483"],
Cell[327001, 6240, 438, 10, 29, "Message",ExpressionUUID->"726e0d33-c4ec-4712-87a1-312b832465ce"],
Cell[327442, 6252, 438, 10, 29, "Message",ExpressionUUID->"e976398e-f193-45ef-88dc-6aefe9f5dd87"],
Cell[327883, 6264, 447, 10, 29, "Message",ExpressionUUID->"23420351-e20e-496b-b648-6c660c70a63c"],
Cell[328333, 6276, 158, 2, 46, "Output",ExpressionUUID->"fc2af816-2e58-42cb-b1f0-fe7a2e6effe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328528, 6283, 1519, 44, 157, "Input",ExpressionUUID->"12f15609-bf79-46b7-aa5b-07a9b50480ad"],
Cell[330050, 6329, 440, 10, 29, "Message",ExpressionUUID->"801d6605-9aed-4021-895a-5c0e292ea136"],
Cell[330493, 6341, 440, 10, 29, "Message",ExpressionUUID->"71c5ffdc-6a47-4452-a318-46651e0a38e6"],
Cell[330936, 6353, 156, 2, 46, "Output",ExpressionUUID->"d48b1710-c996-450d-b185-b1d63f4481dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331129, 6360, 1601, 46, 157, "Input",ExpressionUUID->"21061174-e783-4108-945e-25b9dee8637d"],
Cell[332733, 6408, 1919, 38, 157, "Output",ExpressionUUID->"b09941e2-eb67-4ac1-8880-68c6ae864f90"],
Cell[334655, 6448, 787, 14, 54, "Message",ExpressionUUID->"b25d9bea-4694-4cc7-b870-20a412599f8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335479, 6467, 1523, 45, 157, "Input",ExpressionUUID->"a8eba3c6-5e30-4979-8654-da2d6bfec566"],
Cell[337005, 6514, 1922, 38, 157, "Output",ExpressionUUID->"3b52e2a2-60e3-4f36-b473-03cab56ac0e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338964, 6557, 1403, 44, 72, "Input",ExpressionUUID->"518dddaf-b364-4569-b034-31992cfaec67"],
Cell[340370, 6603, 1446, 45, 71, "Output",ExpressionUUID->"41599862-2da9-42ac-867e-d1f68523751b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341853, 6653, 1940, 55, 157, "Input",ExpressionUUID->"a4081933-51d7-47ee-a9ee-707d7894c53a"],
Cell[343796, 6710, 2034, 41, 157, "Output",ExpressionUUID->"e7b9ea58-43d6-4cf9-919f-0e44bae2a794"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345867, 6756, 666, 20, 71, "Input",ExpressionUUID->"2f675e22-65ad-46ca-ac9e-07c987a15c26"],
Cell[346536, 6778, 1121, 38, 97, "Output",ExpressionUUID->"52c80057-d9ac-494a-b494-e2d11de000b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347694, 6821, 1789, 50, 292, "Input",ExpressionUUID->"2abd5c35-4a15-40c2-bd11-1e830f24547e"],
Cell[349486, 6873, 2005, 40, 429, "Output",ExpressionUUID->"dbf3b25b-248c-4f9b-86b6-be5a37b5dda2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351528, 6918, 672, 21, 44, "Input",ExpressionUUID->"96b01aee-b255-45b9-ba43-f39147fa72b8"],
Cell[352203, 6941, 1053, 35, 97, "Output",ExpressionUUID->"51272d07-d685-42bd-bde3-ee1420c7444a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353293, 6981, 3084, 87, 304, "Input",ExpressionUUID->"fb11e835-e20e-4603-8d37-0f60a9eabd07"],
Cell[356380, 7070, 2579, 50, 769, "Output",ExpressionUUID->"191e9ee5-d22c-418c-9a8f-cd4db6869316"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358996, 7125, 676, 21, 46, "Input",ExpressionUUID->"9e7f2aae-79e7-45a6-908b-990fa25f0a27"],
Cell[359675, 7148, 1053, 35, 97, "Output",ExpressionUUID->"8e42954a-b697-4e8a-86b2-4b57a0d4e880"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360765, 7188, 3195, 90, 304, "Input",ExpressionUUID->"03ad86ea-9b27-49ed-9ec8-cba75ca7ab20"],
Cell[363963, 7280, 2609, 51, 649, "Output",ExpressionUUID->"8d145373-abc7-4119-8265-6059731fd00b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366609, 7336, 3213, 90, 304, "Input",ExpressionUUID->"c5571ac6-9845-4f06-8318-f9f57f154716"],
Cell[369825, 7428, 2626, 52, 649, "Output",ExpressionUUID->"786fc75d-2f49-4cc6-9754-9122d90a47fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372488, 7485, 3376, 96, 322, "Input",ExpressionUUID->"1747327f-f880-438c-b971-e92b1c0e996b"],
Cell[375867, 7583, 2715, 54, 649, "Output",ExpressionUUID->"82973ec1-2f11-4b82-bf0a-c86950a6dc9b"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

